{"version":3,"sources":["assets/fonts/SpaceMono-Regular.ttf","webpack:///./app/screens/authenticated/overview/statistics/LoadsByDay.css?0258","app/screens/authenticated/overview/statistics/LoadsByDay.css","app/entrypoint/bootstrap/PaperDatesPolyfill.ts","app/constants/expo.ts","app/entrypoint/bootstrap/GoogleMaps.ts","app/entrypoint/bootstrap/Notifications.tsx","app/api/schema.d.ts","app/components/forms/dropzone/slice.tsx","app/screens/wizards/dropzone_wizard/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/user/user_list/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/dropzone/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/wizards/user_wizard/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/state/store.ts","app/api/client/utils/getServerUrl.ts","app/api/client/utils/ActionCableLink.ts","app/api/client/links/websockets.ts","app/api/client/links/http.ts","app/providers/notifications/context.ts","app/providers/notifications/provider.tsx","app/components/LottieView.web.tsx","app/api/client/links/errors.ts","app/components/app_signal/AppSignalClient.tsx","app/components/app_signal/AppSignalContext.tsx","app/components/app_signal/AppSignalFallbackBoundary.tsx","app/components/app_signal/ErrorScreen.tsx","app/components/app_signal/AppSignalBoundary.tsx","app/components/app_signal/AppSignalProvider.tsx","app/api/crud/factory.tsx","app/providers/dropzone/context.ts","app/components/app_signal/AppSignalTagger.tsx","app/components/app_signal/AppSignalLink.tsx","app/api/client/links/appSignal.ts","app/api/client/links/link.ts","app/api/client/links/authentication.ts","app/api/client/cache.ts","app/api/client/client.ts","app/api/Apollo.tsx","app/entrypoint/EntrypointWrapper.web.tsx","app/api/reflection.tsx","app/api/crud/useDropzone.tsx","app/api/crud/useDropzones.tsx","app/hooks/useRestriction.ts","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/api/crud/useLoad.tsx","app/api/crud/useUserProfile.tsx","app/api/crud/useManifest.tsx","app/api/crud/useTickets.ts","app/api/crud/useAircrafts.ts","app/components/layout/DialogOrSheet.web.tsx","app/components/input/withHookForm.tsx","app/components/input/text/TextField.tsx","app/components/input/number_input/NumberField.web.tsx","app/components/chips/Chip.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/Skeleton.web.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/number_input/index.ts","app/components/UserAvatar.tsx","app/components/UserAvatar.web.old.tsx","app/components/popover/Menu.web.tsx","app/components/input/select/Select.web.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/forms/manifest_user/ManifestForm.tsx","app/providers/manifest/context.ts","app/hooks/useManifestValidator.ts","app/forms/manifest_user/useForm.tsx","app/forms/manifest_user/Dialog.web.tsx","app/forms/load/LoadForm.tsx","app/forms/load/useForm.tsx","app/forms/load/Dialog.tsx","app/forms/credits/CreditsForm.tsx","app/forms/credits/useForm.tsx","app/forms/credits/Credits.web.tsx","app/providers/hooks/useDialog.tsx","app/providers/manifest/provider.tsx","app/components/input/time_picker/TimePicker.tsx","app/providers/load/TimePickerDialog.tsx","app/providers/load/context .tsx","app/providers/load/provider.tsx","app/forms/aircraft/AircraftForm.tsx","app/forms/aircraft/useForm.tsx","app/forms/aircraft/Dialog.tsx","app/components/input/dropdown_select/AltitudeSelect.tsx","app/components/input/dropdown_select/DropzoneUserSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/input/dropdown_select/JumpTypeSelect.tsx","app/components/input/dropdown_select/LicenseSelect.tsx","app/components/input/dropdown_select/PlaneSelect.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/input/dropdown_select/TicketTypeSelect.tsx","app/forms/create_user/Form.tsx","app/forms/create_user/useForm.ts","app/forms/create_user/Dialog.tsx","app/components/input/switch/Switch.tsx","app/forms/ticket_type/TicketTypeForm.tsx","app/forms/ticket_type/useForm.tsx","app/forms/ticket_type/Dialog.tsx","app/forms/ticket_type_addon/TicketAddonForm.tsx","app/forms/ticket_type_addon/useForm.tsx","app/forms/ticket_type_addon/Dialog.tsx","app/providers/dropzone/provider.tsx","app/entrypoint/providers/Dropzones.tsx","app/entrypoint/providers/PushNotificationProvider.tsx","app/entrypoint/providers/ThemeProvider.web.tsx","app/entrypoint/providers/AppUpdate.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/screens/NotFoundScreen.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/screens/limbo/dropzone_select/DropzoneCard.tsx","app/screens/limbo/dropzone_select/DropzonesScreen.tsx","app/screens/limbo/routes.tsx","app/hooks/useDevice.ts","app/components/Divider.tsx","app/screens/unauthenticated/login/form/FacebookButton.web.tsx","app/screens/unauthenticated/login/form/AppleButton.web.tsx","app/screens/unauthenticated/login/form/useForm.ts","app/screens/unauthenticated/login/form/LoginForm.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/components/layout/Screen.tsx","app/components/layout/SwipeActions.tsx","app/components/GradientText.web.tsx","app/components/carousel_wizard/Step.tsx","app/components/carousel_wizard/Dots.tsx","app/components/carousel_wizard/Buttons.tsx","app/components/carousel_wizard/Wizard.tsx","app/utils/checkPasswordComplexity.ts","app/components/input/PasswordComplexityIndicator.tsx","app/forms/sign_up/steps/Password.tsx","app/forms/sign_up/steps/Email.tsx","app/forms/sign_up/steps/PasswordConfirmation.tsx","app/forms/sign_up/steps/Done.tsx","app/forms/sign_up/useForm.tsx","app/forms/sign_up/SignupWizard.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/screens/unauthenticated/routes.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationUpdateDropzone.ts","app/screens/wizards/dropzone_wizard/steps/Name.tsx","app/components/input/card_select/CardSelect.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/screens/wizards/dropzone_wizard/steps/Federation.tsx","app/utils/calculateLatLngDelta.ts","app/components/map/Map.web.tsx","app/components/input/search/AddressSearchBar.tsx","app/screens/wizards/dropzone_wizard/steps/Location.web.tsx","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/screens/wizards/dropzone_wizard/steps/Theming.tsx","app/screens/wizards/dropzone_wizard/steps/Done.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/wizards/dropzone_wizard/steps/Permissions.tsx","app/hooks/useImagePicker.ts","app/screens/wizards/dropzone_wizard/steps/Logo.tsx","app/screens/wizards/dropzone_wizard/DropzoneWizard.tsx","app/api/hooks/useMutationUpdateUser.ts","app/screens/wizards/user_wizard/steps/Federation.tsx","app/screens/wizards/user_wizard/steps/FederationNumber.tsx","app/screens/wizards/user_wizard/steps/RealName.tsx","app/screens/wizards/user_wizard/steps/Nickname.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/screens/wizards/user_wizard/steps/License.tsx","app/screens/wizards/user_wizard/steps/Rig.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/screens/wizards/user_wizard/steps/ReserveRepack.tsx","app/screens/wizards/user_wizard/steps/AskForRig.tsx","app/screens/wizards/user_wizard/steps/Wingloading.tsx","app/screens/wizards/user_wizard/steps/Done.tsx","app/screens/wizards/user_wizard/steps/Avatar.tsx","app/screens/wizards/user_wizard/UserWizardScreen.tsx","app/screens/wizards/recover_password/steps/Email.tsx","app/screens/wizards/recover_password/steps/Done.tsx","app/screens/wizards/recover_password/RecoverPasswordScreen.tsx","app/screens/wizards/confirm_user/ConfirmUserScreen.tsx","app/screens/wizards/change_password/steps/Done.tsx","app/screens/wizards/change_password/steps/Password.tsx","app/screens/wizards/change_password/steps/PasswordConfirmation.tsx","app/screens/wizards/change_password/ChangePasswordScreen.tsx","app/screens/authenticated/user/useUserNavigation.ts","app/screens/authenticated/user/user_list/UsersScreen.tsx","app/screens/authenticated/user/user_list/AppBar.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/api/hooks/useMutationUpdateRig.tsx","app/screens/authenticated/user/equipment/RigCard.tsx","app/screens/authenticated/user/rig_inspection/RigInspectionScreen.tsx","app/components/Badge.tsx","app/screens/authenticated/user/profile/UserInfo/PermissionBadges.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/api/hooks/useMutationCreateRig.ts","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/forms/user/UserForm.tsx","app/components/dialogs/User.tsx","app/hooks/navigation/useProfileWizard.tsx","app/screens/authenticated/user/profile/UserInfo/Header.tsx","app/screens/authenticated/user/profile/UserInfo/InfoGrid.tsx","app/screens/authenticated/user/profile/UserActions.tsx","app/screens/authenticated/user/profile/SlotCard.tsx","app/screens/authenticated/user/profile/tabs/JumpHistory.tsx","app/components/orders/OrderCard.tsx","app/screens/authenticated/user/profile/tabs/index.tsx","app/screens/authenticated/user/profile/tabs/Transactions.tsx","app/screens/authenticated/user/profile/tabs/Equipment.tsx","app/screens/authenticated/user/profile/ProfileScreen.tsx","app/screens/authenticated/user/orders/OrdersScreen.tsx","app/screens/authenticated/user/equipment/EquipmentScreen.tsx","app/components/layout/ScrollableScreen.tsx","app/screens/authenticated/user/order_receipt/TransactionCard.tsx","app/screens/authenticated/user/order_receipt/ReceiptCard.tsx","app/screens/authenticated/user/order_receipt/OrderScreen.tsx","app/screens/authenticated/user/routes.tsx","app/screens/wizards/routes.tsx","app/screens/authenticated/dropzone/load/InfoGrid.tsx","app/components/drawer/Drawer.tsx","app/api/hooks/useLogout.ts","app/components/appbar/SetupWarning.tsx","app/components/appbar/AppBar.tsx","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/autocomplete/DropzoneUserAutocomplete.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/slots_table/UserRow.tsx","app/components/slots_table/DragAndDrop/DraggableRow.web.tsx","app/components/slots_table/DragAndDrop/DroppableSlot.web.tsx","app/utils/generateColor.ts","app/components/forms/manifest_group/GroupPicker.tsx","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/dropzone/load/ActionButton.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/dropzone/load/Header.tsx","app/components/slots_table/AvailableRow.web.tsx","app/components/slots_table/Table.tsx","app/screens/authenticated/dropzone/load/views/TableView.tsx","app/screens/authenticated/dropzone/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/utils/calculateCoordinatesByAngle.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/dropzone/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/dropzone/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/useAuthenticatedNavigation.ts","app/screens/authenticated/dropzone/weather_conditions/WindScreen.tsx","app/components/slots_table/DragAndDrop/DraggingRow.web.tsx","app/components/slots_table/DragAndDrop/DragDropSlotProvider.web.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Card.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Card.tsx","app/screens/authenticated/dropzone/manifest/Weather/JumpRun.tsx","app/screens/authenticated/dropzone/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/dropzone/manifest/SetupProfileCard.tsx","app/screens/authenticated/dropzone/manifest/FinishSetupSteps.tsx","app/screens/authenticated/dropzone/manifest/ManifestScreen.tsx","app/screens/authenticated/configuration/settings_menu/SettingsMenuScreen.tsx","app/screens/authenticated/configuration/ticket_types/TicketTypesScreen.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/configuration/dropzone_settings/DropzoneSettingsScreen.tsx","app/screens/authenticated/configuration/aircrafts/AircraftsScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/configuration/rig_inspection_template/RigInspectionTemplateScreen.tsx","app/screens/authenticated/configuration/rigs/DropzoneRigsScreen.tsx","app/screens/authenticated/configuration/permissions/PermissionsScreen.tsx","app/hooks/usePalette.ts","app/screens/authenticated/configuration/master_log/useForm.ts","app/screens/authenticated/configuration/master_log/MasterLogScreen.tsx","app/screens/authenticated/configuration/transactions/DropzoneTransactionsScreen.tsx","app/screens/authenticated/configuration/extras/ExtrasScreen.tsx","app/screens/authenticated/configuration/routes.tsx","app/screens/authenticated/dropzone/routes.tsx","app/screens/authenticated/notifications/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/useNotificationNavigation.ts","app/screens/authenticated/notifications/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/notifications/NotificationsScreen.tsx","app/screens/authenticated/notifications/routes.tsx","app/screens/authenticated/overview/statistics/Stats.tsx","app/screens/authenticated/overview/statistics/LoadsByDay.web.tsx","app/screens/authenticated/overview/DropzonesTable.tsx","app/constants/ChartConfig.ts","app/screens/authenticated/overview/statistics/JumpTypePieChart.tsx","app/screens/authenticated/overview/AdminOverview.tsx","app/components/activity/Feed.web.tsx","app/components/activity/Container.tsx","app/screens/authenticated/overview/DropzoneOverview.tsx","app/screens/authenticated/overview/routes.tsx","app/screens/authenticated/TabBar.web.tsx","app/screens/authenticated/routes.tsx","app/screens/drawers/UserDrawer.tsx","app/screens/routes.tsx","app/entrypoint/Entrypoint.tsx","app/entrypoint/hooks/useAppearance.tsx","app/entrypoint/hooks/useRouteChange.tsx","app/entrypoint/index.ts","app/entrypoint/hooks/useCachedResources.ts","index.js","assets/images/logo-black.png","assets/images/logo-white.png","assets/images/webb-dark.png","assets/images/pattern.png","assets/images/night.png","assets/images/weather.png"],"names":["module","exports","api","content","__esModule","default","i","options","locals","___CSS_LOADER_API_IMPORT___","push","Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","config","Constants","manifest","extra","manifest2","expoClient","googleMapsApiKey","select","ios","googleMapsIos","android","googleMapsAndroid","web","googleMapsWeb","Geocoder","init","setGoogleApiKey","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","DropzoneState","DropzoneStateEvent","EventAccessLevel","EventAction","EventLevel","LoadState","ModerationRole","NotificationType","OrderState","Permission","TransactionStatus","TransactionType","DropzoneWizardStep","initialState","original","open","fields","federation","value","error","lat","lng","name","secondaryColor","primaryColor","banner","isCreditSystemEnabled","status","Public","createSlice","reducers","setField","state","action","payload","field","setFieldError","setOpen","Object","keys","forEach","key","payloadKey","typedKey","setOriginal","reset","role","expiresAt","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","map","idx","setFields","JSON","parse","console","log","Error","message","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","exitWeight","passengerName","passengerExitWeight","groupNumber","users","setFromSlots","slots","slot","id","Number","rigId","find","setDropzoneUsers","xorBy","dzUser","autoSelectedRig","user","rigs","length","first","availableRigs","avatar","image","apfNumber","email","phone","nickname","license","setFederation","userFederations","uid","userFederation","debug","jumpRun","temperature","exitSpotMiles","offsetDirection","winds","dropzone","rigInspection","rigInspectionTemplate","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","currentIndex","completed","Name","Federation","Location","Aircraft","Tickets","Branding","setIndex","complete","skipRigSetup","login","signup","dropzoneWizard","userWizard","close","successColor","infoColor","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","fonts","fontFamily","fontWeight","thin","medium","regular","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","authenticated","expoPushToken","currentRouteName","theme","palette","main","accent","isDarkMode","setCredentials","setAuthenticated","setUser","setExpoPushToken","setCurrentRouteName","setPermissions","setPrimaryColor","color","darken","hex","lighten","setAccentColor","setDropzone","setAppearance","current","merge","logout","persistConfig","storage","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","getServerUrl","url","URL","ActionCableLink","cable","channelName","actionName","connectionParams","operation","_next","Observable","observer","channelId","Math","round","Date","now","random","toString","channel","subscriptions","create","connected","perform","query","print","variables","operationId","operationName","received","result","data","errors","next","more","assign","closed","ApolloLink","hasSubscriptionOperation","definitions","some","kind","abortController","AbortController","httpLink","BatchHttpLink","batchDebounce","batchMax","uri","fetchOptions","mode","method","signal","createHttpLink","split","ActionCable","URI","scheme","host","join","a","getContext","authHeaders","createWebsocketsLink","NotificationContext","React","noop","useNotifications","AnimationState","LottieView","NotificationsProvider","props","children","queue","setQueue","successAnimation","animationState","setAnimationState","notification","variant","opening","notify","newNotification","isEqual","last","onHide","newQueue","onAnimationFinish","waiting","setTimeout","Toast","show","text1","type","context","Provider","View","style","StyleSheet","absoluteFillObject","alignItems","justifyContent","pointerEvents","loop","autoPlay","speed","ref","styles","animation","source","lottieDoneAnimation","autoHide","visibilityTime","position","height","width","defaultErrorLink","onError","graphQLErrors","networkError","extensions","code","process","EXPO_ENV","locations","path","nodes","stringify","AppSignalClient","Appsignal","ExpoManifest","appSignalApiKey","namespace","revision","expoConfig","version","ignoreErrors","INITIAL_TAGS","platform","currentUserId","INITIAL_CONTEXT","appSignal","tags","setTags","AppSignalContext","useAppSignalContext","ErrorBoundary","undefined","errorInfo","this","Fallback","fallback","ErrorScreen","isDetailsVisible","setDetailsVisible","reloading","setReloading","onToggleDetails","onReloadApp","window","location","reload","reloadAsync","useWindowDimensions","SafeAreaView","top","left","Card","minHeight","maxWidth","marginHorizontal","Title","title","subtitle","titleStyle","textAlign","subtitleStyle","Content","twigBreakAnimation","HelperText","maxHeight","stack","Actions","Button","compact","onPress","disabled","loading","AppSignalBoundary","instance","errorBoundaryRef","AppSignalProvider","use","AppSignalWindowEvents","AppSignalCurrentPath","onUpdateTags","newTags","onTagsChanged","span","addDecorator","uninitializedHandler","args","createCRUDContext","useHook","INITIAL_STATE","Context","rest","useContext","called","refetch","fetchMore","dialogs","aircraft","visible","createUser","ticketTypeAddon","DropzoneContext","useDropzoneContext","AppSignalSessionTagProvider","currentDropzoneUser","sessionTags","currentSessionTags","pick","DEFAULT_OPTIONS","breadcrumbs","includeQuery","includeResponse","includeVariables","excludeOperation","excludeError","isServerError","getDefinition","q","createBreadCrumb","category","timestamp","floor","getTime","metadata","createAppSignalErrorLink","client","createErrorLink","response","ignore","filteredErrors","filter","breadcrumb","loc","body","statusCode","addBreadcrumb","sendError","e","AppSignalBreadcrumbLink","forward","originalObserver","subscription","subscribe","omit","unsubscribe","ERROR_CODE_WHITELIST","useAppSignalLink","useAppSignal","includes","from","defaultLink","useLink","authLink","root","accessToken","Authorization","tokenType","isEmpty","setContext","_","headers","useAuthenticationLink","errorLink","dispatch","useErrorLink","appSignalLink","httpWebsocketsLink","useMemo","links","Boolean","cache","InMemoryCache","typePolicies","Event","relayStylePagination","DropzoneUsers","Loads","ApolloClient","link","Apollo","isAuthenticated","authStateChanged","setLink","useApolloClient","ApolloProvider","EntrypointWrapper","absoluteFill","defaultOptions","RoleEssentialsFragmentDoc","gql","LicenseEssentialsFragmentDoc","UserEssentialsFragmentDoc","DropzoneUserEssentialsFragmentDoc","ActivityEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","LoadEssentialsFragmentDoc","TicketTypeEssentialsFragmentDoc","TicketTypeAddonEssentialsFragmentDoc","TicketTypeDetailsFragmentDoc","JumpTypeEssentialsFragmentDoc","SlotEssentialsFragmentDoc","RigEssentialsFragmentDoc","PlaneEssentialsFragmentDoc","ActivityDetailsFragmentDoc","FederationEssentialsFragmentDoc","LicenseDetailsFragmentDoc","UserFederationEssentialsFragmentDoc","UserRigDetailedFragmentDoc","UserDetailedFragmentDoc","DropzoneUserDetailsFragmentDoc","RigInspectionEssentialsFragmentDoc","TransactionEssentialsFragmentDoc","ReceiptEssentialsFragmentDoc","OrderEssentialsFragmentDoc","SlotDetailsFragmentDoc","UserSlotDetailsFragmentDoc","DropzoneUserProfileFragmentDoc","DropzoneStatisticsEssentialsFragmentDoc","DropzoneStatisticsFragmentDoc","WeatherConditionEssentialsFragmentDoc","DropzoneDetailedFragmentDoc","CurrentUserEssentialsFragmentDoc","CurrentUserFragmentDoc","CurrentUserDetailedFragmentDoc","DropzoneExtensiveFragmentDoc","TicketTypeExtraEssentialsFragmentDoc","TicketTypeExtraDetailedFragmentDoc","MasterLogUserFragmentDoc","MasterLogAircraftFragmentDoc","MasterLogSlotFragmentDoc","MasterLogLoadFragmentDoc","LocationFragmentDoc","MasterLogEntryFragmentDoc","RigInspectionDetailedFragmentDoc","RigInspectionMutationEssentialsFragmentDoc","RoleDetailedFragmentDoc","LoadDetailsFragmentDoc","SlotExhaustiveFragmentDoc","TicketTypeAddonDetailsFragmentDoc","ArchivePlaneDocument","ArchiveTicketTypeDocument","ArchiveUserDocument","ConfirmUserDocument","CreateAircraftDocument","CreateDropzoneDocument","CreateLoadDocument","CreateOrderDocument","CreateRigDocument","CreateRigInspectionDocument","CreateTicketAddonDocument","CreateTicketTypeDocument","CreateGhostDocument","DeleteSlotDocument","FinalizeLoadDocument","GrantPermissionDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","LoginDocument","LoginWithFacebookDocument","ManifestGroupDocument","useManifestGroupMutation","ManifestUserDocument","useManifestUserMutation","MoveSlotDocument","RecoverPasswordDocument","RevokePermissionDocument","UpdateAircraftDocument","UpdateDropzoneDocument","UpdateDropzoneUserDocument","useUpdateDropzoneUserMutation","UpdateLoadDocument","UpdateLostPasswordDocument","UpdateMasterLogDocument","UpdateRigDocument","useUpdateRigMutation","UpdateRigInspectionTemplateDocument","UpdateRoleDocument","UpdateTicketAddonDocument","UpdateTicketTypeDocument","UpdateUserDocument","useUpdateUserMutation","UpdateVisibilityDocument","UserSignUpDocument","ActivityDetailsDocument","DropzoneDocument","DropzoneStatisticsDocument","DropzonesStatisticsDocument","DropzoneRigsDocument","DropzonePermissionsDocument","DropzoneTransactionsDocument","DropzoneUsersDocument","useDropzoneUsersQuery","DropzoneUsersDetailedDocument","DropzoneUserProfileDocument","useDropzoneUserProfileLazyQuery","DropzonesDocument","TicketTypeExtrasDocument","FederationsDocument","useFederationsQuery","AddressToLocationDocument","AllowedJumpTypesDocument","useAllowedJumpTypesQuery","LicensesDocument","useLicensesQuery","LoadDocument","LoadsDocument","MasterLogDocument","NotificationsDocument","PlanesDocument","usePlanesQuery","CurrentUserPermissionsDocument","RigInspectionTemplateDocument","useRigInspectionTemplateQuery","AvailableRigsDocument","RolesDocument","useRolesQuery","AllowedTicketTypesDocument","TicketTypesDocument","LoadUpdatedDocument","UserUpdatedDocument","useDropzone","vars","dropzoneId","useDropzoneLazyQuery","getDropzone","permissionsVariables","useCurrentUserPermissionsLazyQuery","getPermissions","queryVariables","useDropzonesLazyQuery","getDropzones","useUpdateVisibilityMutation","updateVisibilityMutation","updateVisibility","event","fieldErrors","dropzones","edges","edge","node","DropzonesProvider","useDropzonesContext","useRestriction","permission","isRequired","pattern","isNumeric","createMutation","mutation","getPayload","fieldErrorMap","validators","validates","opts","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","flat","msg","startCase","mopts","hasErrors","x","variable","validator","test","callback","validate","requestAnimationFrame","updateLoad","useLoad","useLoadLazyQuery","getLoad","subscribeToMore","mutationManifestUser","useFinalizeLoadMutation","mutationFinalizeLoad","document","updateQuery","prev","subscriptionData","update","useMutationUpdateLoad","loadNumber","manifestUser","validatedPayload","yup","shape","required","nullable","validateSync","createSlot","ValidationError","dispatchInMinutes","minutes","dispatchTime","DateTime","local","plus","toISO","dispatchAt","BoardingCall","Open","updateLoadState","updatePilot","pilot","updateGCA","gca","updatePlane","plane","updateLoadMaster","lm","loadMaster","markAsLanded","Landed","cancel","Cancelled","canDispatchAircraft","UpdateLoad","createAircraftDispatchAction","dispatchAtTime","time","fromSeconds","useUserProfile","updateMutation","getProfile","useCreateOrderMutation","mutationCreateOrder","useCreateGhostMutation","mutationCreateGhost","canGrantPermission","GrantPermission","canRevokePermission","RevokePermission","profile","attributes","refetchQueries","createGhost","updateDropzoneUser","createOrder","mutationResult","order","buyer","__typename","writeFragment","fragment","fragmentName","identify","seller","addCredits","amount","walletId","withdrawCredits","useRevokePermissionMutation","revoke","useGrantPermissionMutation","grant","grantPermission","dropzoneUserId","permissionName","revokePermission","useManifest","date","canCreateLoad","CreateLoad","canDeleteOwnSlot","DeleteSlot","canDeleteSlot","DeleteUserSlot","canManifestSelf","CreateSlot","canManifestOthers","CreateUserSlot","canUpdateSlot","UpdateSlot","canUpdateOwnSlot","UpdateUserSlot","canAddTransaction","CreateUserTransaction","useLoadsQuery","initialFetchPolicy","toISODate","skip","useMoveSlotMutation","moveSlotMutation","useDeleteSlotMutation","deleteSlotMutation","manifestGroupMutation","manifestUserMutation","useCreateLoadMutation","createLoadMutation","moveSlot","sourceLoad","mutationVariables","targetLoad","loads","createSlots","deleteSlot","createLoad","useTickets","useTicketTypesLazyQuery","getTickets","ticketTypes","useCreateTicketTypeMutation","createTicket","useUpdateTicketTypeMutation","updateTicket","useArchiveTicketTypeMutation","archiveTicket","useCreateTicketAddonMutation","createAddon","useUpdateTicketAddonMutation","updateAddon","createTicketType","updateTicketType","createTicketTypeAddon","fetchPolicy","createExtra","updateTicketTypeAddon","updateExtra","archiveTicketType","optimisticResponse","mutationData","evict","useAircrafts","usePlanesLazyQuery","getAircrafts","useCreateAircraftMutation","createAircraft","useUpdateAircraftMutation","updateAircraft","useArchivePlaneMutation","archiveAircraft","createPlane","planes","archive","deletePlane","aircrafts","noPadding","borderBottomWidth","paddingLeft","paddingRight","defaultPadding","button","padding","alignSelf","borderRadius","marginTop","right","DialogOrSheet","buttonLabel","disablePadding","buttonAction","onClose","useTheme","Drawer","anchor","PaperProps","ProgressBar","indeterminate","Typography","marginBottom","IconButton","icon","size","paddingBottom","Dialog","backgroundColor","withHookForm","Component","control","rules","defaultValue","render","onChange","onBlur","formState","TextField","helperText","setText","onChangeText","TextInput","flatten","surface","NumberFieldType","FormTextField","flex","adornments","Cash","CanopySize","Weight","muiVariants","outlined","NumberField","label","onChangeValue","parseInt","target","FormControl","fullWidth","InputProps","endAdornment","InputAdornment","startAdornment","FormHelperText","Chip","small","assignedColor","onSurface","chipStyle","borderColor","iconStyles","selectedColor","iconProps","MaterialCommunityIcons","textStyle","ChipSelect","items","allowEmpty","isSelected","isDisabled","renderItemLabel","autoSelectFirst","Wrapper","horizontal","flexDirection","flexWrap","isItemSelected","selected","margin","ChipSelectComponent","previous","ChipSelectField","defaultColors","ThemedSkeleton","boneColor","Color","negate","rgb","highlightColor","ChipSelectSkeleton","rows","isLoading","containerStyle","layout","marginVertical","marginRight","DropzoneUserChipSelect","requiredPermissions","onLoadingStateChanged","onChangeSelected","getItemLabel","Subheader","uniqBy","dropzoneUsers","DropzoneUserChipSelectField","JumpTypeChipSelect","userId","allowedForDropzoneUserIds","allowedJumpTypes","jumpTypes","JumpTypeChipSelectField","LicenseChipSelect","federationId","licenses","LicenseChipSelectField","PlaneChipSelect","PlaneChipSelectField","TicketTypeChipSelect","onlyPublicTickets","useAllowedTicketTypesQuery","cost","TicketTypeChipSelectField","FormNumberField","UserAvatar","initals","n","Image","Text","stringToColor","string","hash","charCodeAt","substr","initials","Avatar","sx","bgcolor","src","MenuItem","bold","testID","onClick","data-testid","ListItemIcon","ListItemAvatar","ListItemText","Menu","anchorEl","setAnchorEl","currentTarget","TouchableOpacity","anchorOrigin","vertical","transformOrigin","Select","compare","renderAnchor","onOpen","onDismiss","selectedOption","option","createSelectHandler","showAvatars","openMenu","m","minWidth","InputLabel","labelId","paddingTop","native","SelectDisplayProps","opt","val","b","RigSelect","loadId","tandem","useAvailableRigsLazyQuery","fetchRigs","isTandem","RigSelectField","ManifestForm","useWatch","allowedToManifestOthers","selectedAddons","addon","Divider","credits","ManifestContext","useManifestContext","schema","hasLicense","isTrue","hasMembership","hasRigInspection","hasReserveInDate","hasExitWeight","useManifestValidator","canManifest","abortEarly","manifestUserValidation","min","max","of","EMPTY_FORM_VALUES","ManifestUserDialog","initial","initialValues","defaultValues","setDefaultValues","methods","useForm","resolver","yupResolver","handleSubmit","setError","useAsyncFn","onManifest","onSubmit","portal","usePortal","removePortal","LoadForm","placeholder","ActAsGca","ActAsPilot","loadValidation","maxSlots","isOpen","LoadDialog","setValue","validatedFields","snapPoints","scrollable","CreditsForm","subtotal","Deposit","Withdrawal","DataTable","Row","Cell","numeric","orderValidation","integer","oneOf","values","DropzoneUserDialog","shouldUnregister","onCreateOrder","useCreditsForm","defaultIndex","onChangeIndex","newIndex","form","paddingHorizontal","createUseDialog","defaults","setState","newState","ManifestUserDialogWrapper","LoadDialogWrapper","CreditsDialogWrapper","useManifestUserDialog","useLoadDialog","useCreditsDialog","ManifestContextProvider","manifestUserDialog","loadDialog","creditsDialog","TimePicker","onDismissSingle","onConfirm","timestampLabel","format","Item","description","Icon","Modal","hours","toSeconds","hour","minute","locale","set","toJSDate","TimePickerDialog","setTime","setLoading","dismissable","timepicker","LoadContext","useLoadContext","useTimePickerDialog","LoadContextProvider","onChangeDispatchTime","then","withLoadContext","AircraftForm","aircraftValidation","registration","minSlots","basicEmptyWeight","maxTakeOffWeight","fuelType","AircraftDialog","register","validated","useAircraftForm","AltitudeSelect","AltitudeSelectField","DropzoneUserSelect","DropzoneUserSelectField","FederationSelect","federations","FederationSelectField","JumpTypeSelect","LicenseSelect","PlaneSelect","onCHange","RoleSelect","roles","RoleSelectField","TicketTypeSelect","allowManifestingSelf","useTicketTypesQuery","GhostForm","ghostValidation","optional","federationUid","CreateGhostDialog","federationNumber","Switch","onValueChange","SwitchField","TicketTypeForm","altitude","useTicketTypeExtrasLazyQuery","getTicketAddons","ticketTypeValidation","TicketTypeDialog","extraIds","selectedTicketTypes","ticketAddonValidation","ticketTypeIds","onSave","useAircraftDialog","useCreateUserDialog","useTicketTypeDialog","useTicketTypeAddonDialog","DropzoneContextProvider","token","Device","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","lightColor","PushNotifications","pushToken","notificationListener","responseListener","onOutsideLink","intendedRoute","updateUser","registerForPushNotificationsAsync","request","Linking","addEventListener","remove","remoteToken","muiTheme","createTheme","secondary","paper","common","white","black","matchMedia","addListener","matches","ThemeProvider","AppUpdate","fontsLoaded","overlay","setOverlay","onUpdate","play","Update","isNew","isUpdateAvailable","isAvailable","blur","intensity","fontSize","bottom","ImageViewer","mainSrc","onCloseRequest","NotFoundScreen","navigation","container","replace","linkText","paddingVertical","useThemeColor","colorName","colorFromProps","Colors","darkColor","otherProps","NoResults","empty","Paragraph","fab","DropzonesScreen","globalState","useNavigation","nameLines","lines","desaturate","textColor","shouldPushRoute","StackActions","screen","params","cardContainer","ImageBackground","numberOfLines","svgContainer","adjustsFontSizeToFit","allowFontScaling","overflow","fontStyle","FlatList","numColumns","refreshing","keyExtractor","onRefresh","flatlist","contentContainerStyle","ListEmptyComponent","renderItem","FAB","navigate","flexGrow","dzIcon","Stack","createStackNavigator","Limbo","Navigator","screenOptions","headerShown","cardStyle","initialRouteName","Screen","component","ScreenOrientation","divider","useLoginWithFacebook","useLoginWithFacebookMutation","onLoginWithFacebook","loginWithFacebook","authenticatable","FacebookButton","appId","reAuthenticate","autoLoad","buttonStyle","onFailure","textButton","AppleButton","useLoginForm","useState","useLoginMutation","mutationLogin","loginWithFacebookMutation","loginWithApple","loginWithAppleMutation","onLogin","useCallback","userLogin","LoginForm","ScrollView","animationContainer","loadingAnimation","secureTextEntry","onSubmitEditing","forgotPasswordDark","forgotPassword","labelStyle","textButtonLabel","logo","card","cardLandscape","fieldsLandscape","borderWidth","LoginScreen","orientation","Landscape","Portrait","useDevice","backgroundDark","backgroundLight","resizeMode","logoLight","logoDark","KeyboardAvoidingView","behavior","elevation","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","centerAlignedContent","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","interpolate","inputRange","outputRange","translateX","Animated","transform","childrenContainerStyle","useNativeAnimations","GradientText","opacity","Fields","fieldContent","Step","hideContentUntilNavigatedTo","useIsFocused","Dots","count","Array","activeDot","inactiveDot","marginLeft","Buttons","backLabel","nextLabel","onNext","onBack","onNextPress","back","PasswordStrength","dots","zIndex","steps","y","dimensions","setDimensions","carouselRef","getCurrentIndex","scrollTo","goBack","onLayout","nativeEvent","modeConfig","parallaxScrollingScale","parallaxScrollingOffset","pagingEnabled","panGestureHandlerProps","activeOffsetX","onSnapToItem","checkPasswordComplexity","passwordStrength","TooWeak","minDiversity","minLength","Weak","Acceptable","Strong","indicator","indicatorInactive","indicatorWeak","indicatorOk","indicatorStrong","PasswordStep","strength","indicatorStyle","useFormContext","textContentType","passwordRules","PasswordComplexityIndicator","EmailStep","PasswordConfirmationStep","DoneStep","SignUpSteps","signUpValidation","useSignupForm","Email","step","setStep","useUserSignUpMutation","onSignUp","userRegister","getValues","PasswordConfirmation","inner","validationError","Password","SignupWizard","SignupScreen","Unauthenticated","presentation","SignUpScreen","createDropzone","updateDropzone","newValue","active","itemSelected","FederationCardSelect","onSelect","degreesToRadians","degrees","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","DEFAULT_COORDS","Map","_coords","center","coords","interactive","onDragEnd","isLoaded","useJsApiLoader","mapStyle","onLoad","bounds","google","maps","LatLngBounds","fitBounds","panTo","onUnmount","rootLayout","setRootLayout","isFocused","mapTypeId","MapTypeId","HYBRID","mapContainerStyle","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","AddressSearchBar","suggestions","setSuggestions","useAddressToLocationLazyQuery","fetchLocation","fetchSuggestions","search","fetchSuggestionsDebounced","debounce","geocode","onPickResult","formattedString","Searchbar","suggestion","titleContainer","textShadowColor","textShadowRadius","textShadowOffset","markerFixed","myLocation","LocationWizardStep","setCenter","setUsersLocation","longitude","Value","region","latitudeDelta","longitudeDelta","fadeOut","timing","duration","toValue","useNativeDriver","fadeIn","setCoordinateFade","start","isDragging","setDragging","onDragStart","r","stop","autocomplete","toFixed","previewContainer","hairlineWidth","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","borderTopRightRadius","borderTopLeftRadius","previewTabBar","borderBottomRightRadius","borderBottomLeftRadius","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","colorBox","PhonePreview","Surface","WebPreview","ColorPickerDialog","Portal","sliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","ColorPicker","isCustomColor","isDialogOpen","setDialogOpen","TouchableRipple","manipulate","ThemingStep","Phone","Web","Done","PermissionListItem","canChangePermissions","useUpdateRoleMutation","mutationUpdatePermission","roleId","updateRole","PermissionWizardScreen","dropzoneForm","useDropzonePermissionsLazyQuery","queryRoles","capitalize","useImagePicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","base64","avatarContainer","paragraph","Logo","pickImage","onPickImage","DropzoneSetupScreen","mutationCreateDropzone","useMutationCreateDropzone","mutationUpdateDropzone","useMutationUpdateDropzone","onComplete","onNameNext","onFederationNext","onLogoNext","camelize","wizard","Promise","resolve","NameStep","FederationStep","LocationStep","LogoStep","stepProps","FederationWizardSceen","toUpperCase","RealName","UserInfoScreen","LicenseCardSelect","RigWizardScreen","isOtherMake","setIsOtherMake","concat","DatePicker","selectedDays","onDayClick","ReserveRepackStep","AskForRigStep","cardTitle","cardValue","slider","sliderControl","wingLoading","wingLoadingCardLeft","wingLoadingCardRight","WingloadingWizardScreen","rigForm","userForm","ceil","AvatarStep","UserWizardScreen","useRoute","joinFederation","mutationUpdateUser","useMutationUpdateUser","mutationUpdateRig","useCreateRigMutation","mutationCreateRig","onNicknameNext","toLowerCase","onFederationNumberNext","onLicenseNext","onRigNext","updateRig","createRig","onReserveRepackNext","onWingloadingNext","onImageNext","RealNameStep","NicknameStep","FederationNumberStep","LicenseStep","RigStep","WingloadingStep","newText","useRecoverPasswordMutation","onRecover","onClickRecover","redirectUrl","errorIcon","ConfirmUserScreen","route","useConfirmUserMutation","confirmUser","userConfirmRegistrationWithToken","catch","useUpdateLostPasswordMutation","updatePassword","onChangePassword","userUpdatePasswordWithToken","validatePassword","onFinished","useUserNavigation","UserCardSkeleton","loadingFragment","hasCredits","UsersScreen","omitBy","canCreateUser","CreateUser","initialLoading","fill","refreshControl","RefreshControl","descriptionStyle","separator","inputContainer","input","AppBar","onSearch","searchVisible","Appbar","Header","BackAction","autoFocus","RigInspectionItem","canInspect","ActAsRigInspector","valueType","Checkbox","Android","RigInspectionForm","RigCard","onSuccessfulImageUpload","isUploading","setUploading","useMutationUpdateRig","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","owner","textRow","chip","inspectedBy","innerChip","RigInspectionScreen","rigInspectionQuery","useCreateRigInspectionMutation","mutationCreateRigInspection","rigInspections","inspection","record","isOk","createRigInspection","readQuery","currentDz","earliestTimestamp","startOfDay","toISOString","writeQuery","ins","newData","Badge","iconName","ActAsDzso","ActAsLoadMaster","PermissionBadges","badges","shouldShowBadge","showsHorizontalScrollIndicator","DropzoneUserForm","canUpdateRole","newRole","getCachedUser","readFragment","mutationUpdateDropzoneUser","createData","userRoleId","RigForm","showTypeSelect","canCreateRigs","CreateRig","keyboardType","RigDialog","useMutationCreateRig","d","onDialogClose","SlotForm","num","ticketAddons","UpdateUserDialog","parseFloat","selectedLicenseFederation","slug","useProfileWizard","badgesInitials","UserHeader","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","primaryDark","actingPermissions","str","openURL","Caption","InfoGrid","verticalDivider","UserActionsButton","fabOpen","setFabOpen","rootNavigator","onClickSetupWizard","onClickAccessAndMembership","onClickTransactions","onClickEquipment","onClickAddFunds","onClickEdit","isSelf","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","canDeleteUsers","DeleteUser","useArchiveUserMutation","deleteUser","onDeleteUser","Alert","alert","fabActions","Group","fabStyle","onStateChange","SlotCard","transaction","transactionContent","transactionTitle","transactionDescription","avatarIcon","JumpHistoryTab","tabIndex","currentTabIndex","sections","groupBy","parseISO","createdAt","t","differenceInDays","formatDistance","addSuffix","enAU","easing","OrderCard","showAvatar","isSelfBuyer","fromISO","toLocaleString","DATETIME_SHORT","orderContent","orderTitle","orderDescription","ProfileTabs","TransactionsTab","orders","startOf","diffNow","Duration","fromDurationLike","days","DATE_MED_WITH_WEEKDAY","toRelative","hasSame","orderId","EquipmentTab","insp","ProfileTab","Funds","Equipment","Jumps","TabBar","disableSwipe","ProfileScreen","headerRight","setOptions","onCloseRigForm","onUserSheetClose","openWizard","getContent","ListHeaderComponent","wrappingHeader","wrappingHeaderItem","chipTitle","lineHeight","textAlignVertical","OrdersScreen","firstName","SectionList","renderSectionHeader","section","flatList","EquipmentScreen","getIcon","TransactionCard","transactionType","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","ScrollableScreen","rightStyle","receipts","Users","Routes","header","initialParams","OrderReceiptScreen","Wizards","DropzoneWizardScreen","RecoverPasswordScreen","ChangePasswordScreen","User","DrawerMenu","routeName","canUpdateDropzone","UpdateDropzone","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","canUpdateRigInspectionTemplate","UpdateFormTemplate","abort","clearStore","useLogout","onLogout","DrawerActions","closeDrawer","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","Section","moderationRole","profileHeader","Warning","contrast","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","hideWarnings","openDrawer","tintColor","isRigInspected","isRepackInDate","GCAChip","allowed","truncate","LoadMasterChip","PilotChip","PlaneChip","StyledTextField","styled","shouldForwardProp","prop","p","borderBottomColor","DropzoneUserAutocomplete","useDropzoneUsersLazyQuery","searchUsers","licensed","getOptionLabel","sort","localeCompare","nextValue","Autocomplete","renderInput","disableUnderline","onInputChange","inputValue","popupIcon","clearIcon","renderOption","menuItemProps","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","row","rowFirst","rowLast","SlotFields","DraggableRow","rowProps","useDraggable","slotId","setNodeRef","listeners","className","DroppableSlot","rowIndex","useDroppable","isOver","GROUP_COLORS","hsl","UserRow","onDeletePress","onSlotGroupPress","onSlotPress","canEditSelf","canEditOthers","canRemoveSelf","canRemoveOthers","slotGroup","isCurrentUser","isNumber","borderLeftWidth","borderLeftColor","hasLanded","avatarCell","nameCell","slotText","License","licenseCell","Rig","rigCell","WingLoading","wingLoadingCell","JumpType","jumpTypeCell","TicketType","ticketCell","Altitude","altitudeCell","tandemPassengerNameCell","tandemInfoCell","GroupPicker","availableGroups","createChangeHandler","sortedUniq","gap","UserCard","slotUser","newRig","ManifestGroupForm","isPublic","createToggleTicketAddonHandler","firstUser","mutationCreateSlots","userGroup","fetchProfile","onSelectUser","wrapper","Toolbar","Fade","in","LinearProgress","buttonContainer","contentContainer","userListContainer","sheet","sheetHeader","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ActionButton","isExpanded","setExpanded","canUpdateLoad","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","isFull","showManifestButton","showGroupIcon","callActions","isToday","isSameDay","manifestActions","workflowActions","InFlight","buttonActions","CountdownCircleTimer","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","RenderBadges","renderBadges","LinearGradient","AvailableRow","SlotsTable","onAvailableSlotPress","rowStyles","th","LoadTableView","numFields","LoadScreen","occupiedSlots","onDeleteSlot","weight","LoadScreenWrapper","WizardPagination","paginationIndex","icons","Dimensions","get","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","Wizard","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","wizardScreen","buttonBack","buttons","WizardScreen","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","WizardCompleteStep","createWeatherCondition","WindRow","direction","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","altitudeOption","alt","strengthCard","newSpeed","match","numbers","textField","directionCard","newDir","CARD_STYLE","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","getPointOnCircle","radius","offsetX","offsetY","sin","JumpRunSelector","MAP_SIZE","originX","originY","origin","setOrigin","rotation","planePosition","planeAnimation","resetBeforeIteration","onGestureEvent","currentCoordinates","angle","onMountRotatableView","planeStartPosition","onBegan","onEnded","iconContainer","rotate","translateY","degreeLabel","bottomDegreeLabel","borderStyle","textInput","setLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","Winds","JumpRun","JumpRunScreen","useAuthenticatedNavigation","WindScreen","DraggingRow","DragDropWrapper","draggedItem","setDraggedItem","over","sourceSlot","targetSlot","LoadingCard","smallChip","smallChipText","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","deletingSlot","setDeletingSlot","differenceInMinutes","planeIcon","CENTER_Y","CENTER_X","animate","scaleX","WeatherBoard","conditions","currentConditions","canUpdate","UpdateWeatherConditions","hasWeatherConditions","Easing","inOut","ease","onEditWindboard","onEditJumprun","defaultBackground","nightBackground","weatherBackground","onLongPress","cell","FontAwesome","windboard","orderBy","noData","noDataLabel","SetupProfileCard","SetupStepCard","rightProps","availableSlots","setupProfileCardFragment","setupAircraftsCardFragment","setupTicketsCardFragment","ManifestScreen","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","sheets","loadingAircrafts","loadingTickets","cardWidth","contentWidth","SettingsScreen","onChangeVisibility","Archived","Private","InReview","RequestPublication","Unpublish","Publish","descriptionNumberOfLines","TicketTypesScreen","canCreateTicketTypes","CreateTicketType","createArchiveTicketHandler","ticket","createToggleManifestSelfHandler","markerSize","labelSize","isAnimating","setAnimating","DropzoneForm","outsideLoading","skeletonCard","imagePickLight","imagePickDark","skeletonCardColorPicker","skeletonCardCheckbox","subheader","UpdateDropzoneScreen","hasError","isDirty","PlanesScreen","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","createArchiveAircraftHandler","createEditAircraftHandler","RigInspectionTemplateForm","newItem","setNewItem","onTouchEnd","RigInspectionTemplateScreen","canEdit","useUpdateRigInspectionTemplateMutation","mutationUpdateForm","updateForm","formId","DropzoneRigsScreen","useDropzoneRigsQuery","updateData","canCreateRig","CreateDropzoneRig","DropzonePermissionScreen","Accordion","usePalette","masterLogValidation","notes","dzso","useMasterLogForm","useUpdateMasterLogMutation","updateMasterLog","masterLog","DropzoneMasterLogScreen","setDate","isEditing","setIsEditing","toggleEditing","validRange","endDate","useMasterLogQuery","entry","onDownload","downloadUrl","TransactionsScreen","useDropzoneTransactionsLazyQuery","fetchTransactions","ExtrasScreen","useTicketTypeExtrasQuery","createEditHandler","canCreateExtras","CreateExtra","Configuration","SettingsTab","SettingsMenuScreen","DropzoneSettingsScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","Manifest","ManifestTab","headerStyleInterpolator","HeaderStyleInterpolators","forUIKit","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","ManifestedNotification","resource","BoardingCallNotification","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","NotificationScreen","useNotificationsLazyQuery","getNotifications","fetchNotifications","notifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","Notification","NotificationsScreen","Stats","cols","columns","itemWidth","cardHeight","statistic","valueText","labelText","lineBreakMode","LoadsByDay","startTime","showMonthLabels","classForValue","titleForValue","startDate","subDays","stateEvent","Archive","DropzoneTableRow","createdCell","statusCell","loadsCell","statistics","loadsCount","usersCell","activeUserCount","DropzonesTable","alwaysBounceVertical","controls","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","backgroundGradientFromOpacity","backgroundGradientToOpacity","barPercentage","useShadowColorFromDataset","TimeRange","JUMP_TYPE_COLORS","cam","ws","hnp","hp","fs","freefly","sortBy","stat","legendFontColor","legendFontSize","accessor","absolute","AdminOverviewPage","selectedTimeRange","setTimeRange","timeRange","subMonths","endTime","createTimeRangeHandler","range","selectedDropzones","setSelectedDropzones","useDropzonesStatisticsQuery","summedStatistics","revenueCents","sumBy","revenueCentsCount","cancelledLoadsCount","slotsCount","pilotCount","dzsoCount","gcaCount","totalUserCount","inactiveUserCount","loadCountByDay","slotsByJumpType","stickyHeaderIndices","ThreeMonths","SixMonths","Year","turnaround","dispatchedLoadsCard","jumpTypesCard","table","AdminOverviewPageWrapper","LEVEL_COLORS","Debug","Info","FeedItem","expanded","details","level","createdBy","levelCell","messageCell","Feed","onFetchMore","onEndReached","onEndReachedThreshold","ActivityFeedContainer","accessLevels","levels","canViewAdminActivity","ViewAdminActivity","canViewSystemActivity","ViewSystemActivity","canViewUserActivity","ViewUserActivity","useActivityDetailsLazyQuery","getActivity","activity","pageInfo","hasNextPage","endCursor","after","onChangeEventLevel","newLevels","onChangeAccessLevel","newAccessLevels","Admin","System","DashboardPage","canViewRevenue","ViewStatistics","canViewStatistics","ViewRevenue","activityVariables","setActivityVariables","onChangeActivityVariables","useDropzoneStatisticsQuery","Overview","OverviewTab","DashboardScreen","OverviewScreen","AnimatedTabBarNavigator","AuthenticatedTabBar","isAdmin","canViewUsers","ReadUser","canViewDashboard","tabBarActiveTintColor","tabBarInactiveBackgroundColor","backdrop","tabBarActiveBackgroundColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","borderTopWidth","borderTopColor","appearance","tabBarBackground","topPadding","shadow","bottomPadding","tabBarOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","tabBarIcon","focused","iconActive","unmountOnBlur","NotificationsTab","UsersTab","createDrawerNavigator","DrawerNavigator","drawerContent","drawerType","Authenticated","prefixes","LeftDrawer","UserListScreen","AircraftScreen","MasterLogScreen","AircraftsScreen","PermissionScreen","DropzoneSelectScreen","SignUpWizard","RootNavigator","listener","Appearance","addChangeListener","colorScheme","handler","useAppearanceListener","onRouteChange","s","getPathFromState","reverse","screenName","useRouteChange","NavigationContainer","documentTitle","formatter","linking","LinkingConfiguration","StatusBar","App","Entrypoint","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","Roboto_400Regular","roboto","Roboto_500Medium","Roboto_700Bold","Ionicons","font","MaterialIcons","SplashScreen","loadResourcesAndDataAsync","useCachedResources","ActivityIndicator","registerRootComponent"],"mappings":"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AAY,6BACZvwB,MAAM,eAGR,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,aACf+W,YAAY,qBACZvwB,MAAM,oBAIV,eAACL,GAAA,QAAD,CAAMtE,MAAOU,GAAOmiC,KAApB,SACE,gBAAC,QAAKkmB,QAAN,CAAcpkD,MAAM,WAAW3E,MAAO,CAAEkB,MAAO,QAA/C,UACE,gBAAC,QAAKgiE,UAAN,CAAgBv+D,MAAM,QAAQ3E,MAAO,CAAE+kB,gBAAiBxuB,EAAMb,OAAOqwB,SAArE,UACE,eAACksB,GAAD,CACElkD,KAAMA,EACNowB,eAAe,WACf+W,YAAY,6CACZvwB,MAAM,cAER,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,aACfxZ,MAAM,iBAER,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,aACf+W,YAAY,gEACZvwB,MAAM,iBAER,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,aACf+W,YAAY,oCACZvwB,MAAM,mBAIV,gBAAC,QAAKu+D,UAAN,CACEv+D,MAAM,cACN3E,MAAO,CAAE+kB,gBAAiBxuB,EAAMb,OAAOqwB,SAFzC,UAIE,eAACksB,GAAD,CACElkD,KAAMA,EACNowB,eAAe,aACf+W,YAAY,yCACZvwB,MAAM,kBAGR,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,mBACf+W,YAAY,2CACZvwB,MAAM,oBAGR,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,aACf+W,YAAY,+CACZvwB,MAAM,oBAGR,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,aACf+W,YAAY,+BACZvwB,MAAM,oBAGR,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,iBACf+W,YAAY,8CACZvwB,MAAM,0BAGR,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,yBACf+W,YAAY,iEACZvwB,MAAM,wBAGR,eAACstC,GAAD,CACElkD,KAAMA,EACNowB,eAAe,iBACf+W,YAAY,wCACZvwB,MAAM,4BAGR,eAACstC,GAAD,CACElkD,KAAMA,EACNowB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","file":"static/js/app.12f0160e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!./LoadsByDay.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".none {\\n  fill: #CCC;\\n}\\n\\n.few {\\n  fill: #00AA00;\\n}\\n\\n.many {\\n  fill: #008800;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import Constants from 'expo-constants';\n\nconst config = Constants.manifest?.extra || Constants.manifest2?.extra?.expoClient?.extra;\n\nexport default config;\n","import config from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nimport Geocoder from 'react-native-geocoding';\nimport { setGoogleApiKey } from 'expo-location';\n\nconst googleMapsApiKey = Platform.select({\n  ios: config?.googleMapsIos,\n  android: config?.googleMapsAndroid,\n  web: config?.googleMapsWeb,\n});\n\nGeocoder.init(googleMapsApiKey);\nsetGoogleApiKey(googleMapsApiKey);\n","import * as Notifications from 'expo-notifications';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** An ISO 8601-encoded date */\n  ISO8601Date: any;\n  /** An ISO 8601-encoded datetime */\n  ISO8601DateTime: any;\n};\n\nexport type AnyResource = {\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of Apple. */\nexport type ApplePayload = {\n  __typename?: 'ApplePayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone. */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateExtra. */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost. */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad. */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder. */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane. */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateRigInspection. */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig. */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot. */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots. */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket. */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition. */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteDropzone. */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteLoad. */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeletePlane. */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteRig */\nexport type DeleteRigInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteRig. */\nexport type DeleteRigPayload = {\n  __typename?: 'DeleteRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteSlot. */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteTicket. */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of DeleteUser */\nexport type DeleteUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the dropzone user to delete */\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteUser. */\nexport type DeleteUserPayload = {\n  __typename?: 'DeleteUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  extras: Array<Extra>;\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  state: DropzoneState;\n  statistics: Statistics;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userRoles: Array<UserRole>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: InputMaybe<Scalars['Int']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  banner?: InputMaybe<Scalars['String']>;\n  federation: Scalars['Int'];\n  isCreditSystemEnabled?: InputMaybe<Scalars['Boolean']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  lat?: InputMaybe<Scalars['Float']>;\n  lng?: InputMaybe<Scalars['Float']>;\n  name: Scalars['String'];\n  primaryColor?: InputMaybe<Scalars['String']>;\n  requestPublication?: InputMaybe<Scalars['Boolean']>;\n  secondaryColor?: InputMaybe<Scalars['String']>;\n};\n\nexport enum DropzoneState {\n  Archived = 'archived',\n  Demo = 'demo',\n  InReview = 'in_review',\n  Private = 'private',\n  Public = 'public'\n}\n\nexport enum DropzoneStateEvent {\n  /** archive */\n  Archive = 'archive',\n  /** demo */\n  Demo = 'demo',\n  /** publish */\n  Publish = 'publish',\n  /** request_publication */\n  RequestPublication = 'request_publication',\n  /** unpublish */\n  Unpublish = 'unpublish'\n}\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['ISO8601DateTime'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['ISO8601DateTime'];\n  user: User;\n  userFederation?: Maybe<UserFederation>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  credits?: InputMaybe<Scalars['Float']>;\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  expiresAt?: InputMaybe<Scalars['Int']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  userRoleId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Event = {\n  __typename?: 'Event';\n  action?: Maybe<EventAction>;\n  createdAt: Scalars['ISO8601DateTime'];\n  createdBy?: Maybe<DropzoneUser>;\n  details?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  level?: Maybe<EventLevel>;\n  message?: Maybe<Scalars['String']>;\n  resource?: Maybe<AnyResource>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum EventAccessLevel {\n  /** admin */\n  Admin = 'admin',\n  /** system */\n  System = 'system',\n  /** user */\n  User = 'user'\n}\n\nexport enum EventAction {\n  /** assigned */\n  Assigned = 'assigned',\n  /** confirmed */\n  Confirmed = 'confirmed',\n  /** created */\n  Created = 'created',\n  /** deleted */\n  Deleted = 'deleted',\n  /** updated */\n  Updated = 'updated'\n}\n\n/** The connection type for Event. */\nexport type EventConnection = {\n  __typename?: 'EventConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EventEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Event>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type EventEdge = {\n  __typename?: 'EventEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Event>;\n};\n\nexport enum EventLevel {\n  /** debug */\n  Debug = 'debug',\n  /** error */\n  Error = 'error',\n  /** info */\n  Info = 'info'\n}\n\nexport type Extra = AnyResource & SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type ExtraInput = {\n  cost?: InputMaybe<Scalars['Float']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  ticketTypeIds?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Autogenerated return type of Facebook. */\nexport type FacebookPayload = {\n  __typename?: 'FacebookPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  licenses?: Maybe<Array<License>>;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  state: LoadState;\n};\n\n/** Autogenerated return type of FinalizeLoad. */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FormTemplateInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type GeocodedLocation = {\n  __typename?: 'GeocodedLocation';\n  formattedString?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  lat?: Maybe<Scalars['Float']>;\n  lng: Scalars['Float'];\n};\n\nexport type GhostInput = {\n  dropzone: Scalars['Int'];\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  federationNumber?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  phone?: InputMaybe<Scalars['String']>;\n  role: Scalars['Int'];\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of GrantPermission. */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation. */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['ISO8601DateTime'];\n  federation?: Maybe<Federation>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  guid: Scalars['ID'];\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['ISO8601DateTime'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: InputMaybe<Scalars['ISO8601DateTime']>;\n  gca?: InputMaybe<Scalars['Int']>;\n  loadMaster?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  pilot?: InputMaybe<Scalars['Int']>;\n  plane?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** open */\n  Open = 'open'\n}\n\n/** Autogenerated return type of LoadUpdated. */\nexport type LoadUpdatedPayload = {\n  __typename?: 'LoadUpdatedPayload';\n  load?: Maybe<Load>;\n};\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type MasterLogAircraft = {\n  __typename?: 'MasterLogAircraft';\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  registration?: Maybe<Scalars['String']>;\n};\n\nexport type MasterLogEntry = {\n  __typename?: 'MasterLogEntry';\n  date?: Maybe<Scalars['ISO8601Date']>;\n  downloadUrl?: Maybe<Scalars['String']>;\n  dzso?: Maybe<MasterLogUser>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<MasterLogLoad>>;\n  location?: Maybe<GeocodedLocation>;\n  notes?: Maybe<Scalars['String']>;\n};\n\nexport type MasterLogInput = {\n  dzso?: InputMaybe<Scalars['ID']>;\n  notes?: InputMaybe<Scalars['String']>;\n};\n\nexport type MasterLogLoad = {\n  __typename?: 'MasterLogLoad';\n  aircraft?: Maybe<MasterLogAircraft>;\n  dispatchAt?: Maybe<Scalars['ISO8601DateTime']>;\n  gca?: Maybe<MasterLogUser>;\n  id: Scalars['ID'];\n  loadMaster?: Maybe<MasterLogUser>;\n  loadNumber?: Maybe<Scalars['Int']>;\n  pilot?: Maybe<MasterLogUser>;\n  slots?: Maybe<Array<MasterLogSlot>>;\n};\n\nexport type MasterLogSlot = {\n  __typename?: 'MasterLogSlot';\n  altitude?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpType?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type MasterLogUser = {\n  __typename?: 'MasterLogUser';\n  email?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n};\n\nexport enum ModerationRole {\n  /** administrator */\n  Administrator = 'administrator',\n  /** moderator */\n  Moderator = 'moderator',\n  /** support */\n  Support = 'support',\n  /** user */\n  User = 'user'\n}\n\n/** Autogenerated input type of MoveSlot */\nexport type MoveSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  sourceSlot: Scalars['Int'];\n  targetLoad: Scalars['Int'];\n  targetSlot?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of MoveSlot. */\nexport type MoveSlotPayload = {\n  __typename?: 'MoveSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  loads?: Maybe<Array<Load>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  archiveRig?: Maybe<DeleteRigPayload>;\n  archiveTicketType?: Maybe<DeleteTicketPayload>;\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteUser?: Maybe<DeleteUserPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  loginWithApple?: Maybe<ApplePayload>;\n  loginWithFacebook?: Maybe<FacebookPayload>;\n  moveSlot?: Maybe<MoveSlotPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateMasterLog?: Maybe<UpdateMasterLogPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  updateVisibility?: Maybe<UpdateVisibilityPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<SignUpPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationArchiveRigArgs = {\n  input: DeleteRigInput;\n};\n\n\nexport type MutationArchiveTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input: DeleteUserInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationLoginWithAppleArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n  userIdentity: Scalars['String'];\n};\n\n\nexport type MutationLoginWithFacebookArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\n\nexport type MutationMoveSlotArgs = {\n  input: MoveSlotInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateMasterLogArgs = {\n  input: UpdateMasterLogInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUpdateVisibilityArgs = {\n  input: UpdateVisibilityInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  phone: Scalars['String'];\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  confirmUrl: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** system */\n  System = 'system',\n  /** user_manifested */\n  UserManifested = 'user_manifested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  /** Total amount of the order */\n  amount: Scalars['Float'];\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: Scalars['ID'];\n  dropzone: Scalars['ID'];\n  /** Item to attach to order */\n  sellableItem?: InputMaybe<Scalars['ID']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: Scalars['ID'];\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport enum OrderState {\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** completed */\n  Completed = 'completed',\n  /** pending */\n  Pending = 'pending',\n  /** refunded */\n  Refunded = 'refunded'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  ActAsDzso = 'actAsDZSO',\n  ActAsGca = 'actAsGCA',\n  ActAsLoadMaster = 'actAsLoadMaster',\n  ActAsPilot = 'actAsPilot',\n  ActAsRigInspector = 'actAsRigInspector',\n  CreateDoubleSlot = 'createDoubleSlot',\n  CreateDropzoneRig = 'createDropzoneRig',\n  CreateExtra = 'createExtra',\n  CreateFormTemplate = 'createFormTemplate',\n  CreateLoad = 'createLoad',\n  CreatePackjob = 'createPackjob',\n  CreatePlane = 'createPlane',\n  CreateRig = 'createRig',\n  CreateSlot = 'createSlot',\n  CreateStudentSlot = 'createStudentSlot',\n  CreateTicketType = 'createTicketType',\n  CreateUser = 'createUser',\n  CreateUserDoubleSlot = 'createUserDoubleSlot',\n  CreateUserSlot = 'createUserSlot',\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  CreateUserTransaction = 'createUserTransaction',\n  DeleteDropzone = 'deleteDropzone',\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  DeleteExtra = 'deleteExtra',\n  DeleteFormTemplate = 'deleteFormTemplate',\n  DeleteLoad = 'deleteLoad',\n  DeletePackjob = 'deletePackjob',\n  DeletePlane = 'deletePlane',\n  DeleteRig = 'deleteRig',\n  DeleteSlot = 'deleteSlot',\n  DeleteStudentSlot = 'deleteStudentSlot',\n  DeleteTicketType = 'deleteTicketType',\n  DeleteUser = 'deleteUser',\n  DeleteUserSlot = 'deleteUserSlot',\n  GrantPermission = 'grantPermission',\n  ReadDropzoneRig = 'readDropzoneRig',\n  ReadExtra = 'readExtra',\n  ReadFormTemplate = 'readFormTemplate',\n  ReadLoad = 'readLoad',\n  ReadPackjob = 'readPackjob',\n  ReadPermissions = 'readPermissions',\n  ReadRig = 'readRig',\n  ReadUser = 'readUser',\n  ReadUserTransactions = 'readUserTransactions',\n  RevokePermission = 'revokePermission',\n  UndeleteDropzone = 'undeleteDropzone',\n  UndeleteDropzoneRig = 'undeleteDropzoneRig',\n  UndeleteExtra = 'undeleteExtra',\n  UndeletePlane = 'undeletePlane',\n  UndeleteRig = 'undeleteRig',\n  UndeleteStudentSlot = 'undeleteStudentSlot',\n  UndeleteTicketType = 'undeleteTicketType',\n  UndeleteUser = 'undeleteUser',\n  UndeleteUserSlot = 'undeleteUserSlot',\n  UpdateDropzone = 'updateDropzone',\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  UpdateExtra = 'updateExtra',\n  UpdateFormTemplate = 'updateFormTemplate',\n  UpdateLoad = 'updateLoad',\n  UpdatePackjob = 'updatePackjob',\n  UpdatePermissions = 'updatePermissions',\n  UpdatePlane = 'updatePlane',\n  UpdateRig = 'updateRig',\n  UpdateSlot = 'updateSlot',\n  UpdateStudentSlot = 'updateStudentSlot',\n  UpdateTicketType = 'updateTicketType',\n  UpdateUser = 'updateUser',\n  UpdateUserSlot = 'updateUserSlot',\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  ViewAdminActivity = 'viewAdminActivity',\n  ViewRevenue = 'viewRevenue',\n  ViewStatistics = 'viewStatistics',\n  ViewSystemActivity = 'viewSystemActivity',\n  ViewUserActivity = 'viewUserActivity'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots: Scalars['Int'];\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type PlaneInput = {\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  hours?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  minSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nextMaintenanceHours?: InputMaybe<Scalars['Int']>;\n  registration?: InputMaybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get all Activity Events for a dropzone (or all dropzones) */\n  activity: EventConnection;\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  /** Currently authenticated user */\n  currentUser?: Maybe<User>;\n  /** Get dropzone details */\n  dropzone?: Maybe<Dropzone>;\n  /** Get a specific user at a dropzone */\n  dropzoneUser?: Maybe<DropzoneUser>;\n  /** Search users at a dropzone */\n  dropzoneUsers?: Maybe<DropzoneUserConnection>;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get all ticket type extras */\n  extras: Array<Extra>;\n  /** Get all available federations */\n  federations: Array<Federation>;\n  /** Find location by searching */\n  geocode?: Maybe<GeocodedLocation>;\n  /** Get Base64 images via GraphQL */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load?: Maybe<Load>;\n  /** Get all loads */\n  loads: LoadConnection;\n  /** Get the master log entry for a specific day */\n  masterLog?: Maybe<MasterLogEntry>;\n  /** Get Aircrafts for a dropzone */\n  planes?: Maybe<Array<Plane>>;\n  /** Get ticket types for a dropzone */\n  ticketTypes?: Maybe<Array<TicketType>>;\n};\n\n\nexport type QueryActivityArgs = {\n  accessLevels?: InputMaybe<Array<EventAccessLevel>>;\n  actions?: InputMaybe<Array<EventAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  createdBy?: InputMaybe<Array<Scalars['ID']>>;\n  dropzone?: InputMaybe<Array<Scalars['ID']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  levels?: InputMaybe<Array<EventLevel>>;\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type QueryAvailableRigsArgs = {\n  dropzoneUser: Scalars['Int'];\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  licensed?: InputMaybe<Scalars['Boolean']>;\n  permissions?: InputMaybe<Array<Permission>>;\n  search?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<Array<DropzoneState>>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzone?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryGeocodeArgs = {\n  search: Scalars['String'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  dropzoneUsers?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  date?: InputMaybe<Scalars['ISO8601Date']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryMasterLogArgs = {\n  date: Scalars['ISO8601Date'];\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  dropzone: Scalars['ID'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition. */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of RevokePermission. */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  owner?: Maybe<User>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['ID'];\n};\n\nexport type RigInput = {\n  canopySize?: InputMaybe<Scalars['Int']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  maintainedAt?: InputMaybe<Scalars['Int']>;\n  make?: InputMaybe<Scalars['String']>;\n  model?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  packValue?: InputMaybe<Scalars['Int']>;\n  packingCard?: InputMaybe<Scalars['String']>;\n  repackExpiresAt?: InputMaybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: InputMaybe<Scalars['String']>;\n  serial?: InputMaybe<Scalars['String']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type RigInspectionInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzone?: InputMaybe<Scalars['ID']>;\n  isOk?: InputMaybe<Scalars['Boolean']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of SignUp. */\nexport type SignUpPayload = {\n  __typename?: 'SignUpPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  extras?: InputMaybe<Array<Scalars['ID']>>;\n  groupNumber?: InputMaybe<Scalars['Int']>;\n  jumpType?: InputMaybe<Scalars['ID']>;\n  load?: InputMaybe<Scalars['ID']>;\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n  userGroup?: InputMaybe<Array<SlotUser>>;\n};\n\nexport type SlotUser = {\n  exitWeight: Scalars['Float'];\n  id: Scalars['Int'];\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Statistics = {\n  __typename?: 'Statistics';\n  activeUserCount: Scalars['Int'];\n  cancelledLoadsCount: Scalars['Int'];\n  dzsoCount: Scalars['Int'];\n  finalizedLoadsCount: Scalars['Int'];\n  gcaCount: Scalars['Int'];\n  id: Scalars['ID'];\n  inactiveUserCount: Scalars['Int'];\n  /** Get the number of loads dispatched per day */\n  loadCountByDay?: Maybe<Array<StatisticsByDate>>;\n  loadsCount: Scalars['Int'];\n  pilotCount: Scalars['Int'];\n  revenueCentsCount: Scalars['Int'];\n  rigInspectorCount: Scalars['Int'];\n  /** Get the number of slots by jump type */\n  slotsByJumpType?: Maybe<Array<StatisticsByName>>;\n  slotsCount: Scalars['Int'];\n  totalUserCount: Scalars['Int'];\n};\n\n\nexport type StatisticsCancelledLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsFinalizedLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadCountByDayArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsRevenueCentsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsByJumpTypeArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\nexport type StatisticsByDate = {\n  __typename?: 'StatisticsByDate';\n  count: Scalars['Int'];\n  date: Scalars['ISO8601Date'];\n};\n\nexport type StatisticsByName = {\n  __typename?: 'StatisticsByName';\n  count: Scalars['Int'];\n  name: Scalars['String'];\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  loadUpdated: LoadUpdatedPayload;\n  userUpdated: UserUpdatedPayload;\n};\n\n\nexport type SubscriptionLoadUpdatedArgs = {\n  loadId: Scalars['ID'];\n};\n\n\nexport type SubscriptionUserUpdatedArgs = {\n  dropzoneUserId: Scalars['ID'];\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type TicketTypeInput = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  altitude?: InputMaybe<Scalars['Int']>;\n  cost?: InputMaybe<Scalars['Float']>;\n  currency?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  extraIds?: InputMaybe<Array<Scalars['Int']>>;\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type TimeRangeInput = {\n  endTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n  startTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser: DropzoneUser;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum TransactionStatus {\n  Cancelled = 'cancelled',\n  Completed = 'completed',\n  Reserved = 'reserved'\n}\n\nexport enum TransactionType {\n  Deposit = 'deposit',\n  Purchase = 'purchase',\n  Refund = 'refund',\n  Sale = 'sale',\n  Withdrawal = 'withdrawal'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateDropzone. */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser. */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateExtra. */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate. */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateLoad. */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateMasterLog */\nexport type UpdateMasterLogInput = {\n  attributes: MasterLogInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  date: Scalars['ISO8601Date'];\n  dropzone: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateMasterLog. */\nexport type UpdateMasterLogPayload = {\n  __typename?: 'UpdateMasterLogPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  masterLog?: Maybe<MasterLogEntry>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateNotification. */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdatePlane. */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection. */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig. */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  enabled: Scalars['Boolean'];\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Scalars['String'];\n};\n\n/** Autogenerated return type of UpdateRole. */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateSlot. */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateTicket. */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of UpdateUser. */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateVisibility */\nexport type UpdateVisibilityInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  event: DropzoneStateEvent;\n};\n\n/** Autogenerated return type of UpdateVisibility. */\nexport type UpdateVisibilityPayload = {\n  __typename?: 'UpdateVisibilityPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  licenses?: Maybe<Array<License>>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken. */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federation: Scalars['ID'];\n  license?: InputMaybe<Scalars['ID']>;\n  /** User Federation ID, e.g APF number */\n  uid?: InputMaybe<Scalars['String']>;\n};\n\nexport type UserInput = {\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserLogin. */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout. */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken. */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken. */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken. */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\n/** Autogenerated return type of UserUpdated. */\nexport type UserUpdatedPayload = {\n  __typename?: 'UserUpdatedPayload';\n  dropzoneUser?: Maybe<DropzoneUser>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['ISO8601DateTime'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  dropzoneId: Scalars['Int'];\n  exitSpotMiles?: InputMaybe<Scalars['Int']>;\n  jumpRun?: InputMaybe<Scalars['Int']>;\n  offsetDirection?: InputMaybe<Scalars['String']>;\n  offsetMiles?: InputMaybe<Scalars['Int']>;\n  temperature?: InputMaybe<Scalars['Int']>;\n  winds?: InputMaybe<Scalars['String']>;\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneDetailedFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { DropzoneState } from 'app/api/schema.d';\n\nexport type DropzoneFields = Pick<\n  DropzoneDetailedFragment,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'status'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: DropzoneExtensiveFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: DropzoneDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    status: {\n      value: DropzoneState.Public,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<boolean | DropzoneExtensiveFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<DropzoneExtensiveFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<DropzoneUserEssentialsFragment, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUserEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUserEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IDropzoneUserEditState,\n      action: PayloadAction<boolean | DropzoneUserEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.role.value = action.payload.role;\n        state.fields.expiresAt.value = action.payload.expiresAt;\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RigEssentialsFragment } from 'app/api/operations';\n\nexport type RigFields = Pick<\n  RigEssentialsFragment,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: RigEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: RigEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | RigEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.make.value = action.payload.make;\n        state.fields.name.value = action.payload.name;\n        state.fields.model.value = action.payload.model;\n        state.fields.serial.value = action.payload.serial;\n        state.fields.repackExpiresAt.value = action.payload.repackExpiresAt;\n        state.fields.canopySize.value = action.payload.canopySize;\n        state.fields.rigType.value = action.payload.rigType;\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<RigEssentialsFragment>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        if (error instanceof Error) {\n          console.error('Failed to read rig inspection template', error.message, action.payload);\n        }\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotDetailsFragment, SlotExhaustiveFragment } from 'app/api/operations';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: SlotDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | SlotDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.rig.value = action.payload.rig;\n        state.fields.ticketType.value = action.payload.ticketType;\n        state.fields.dropzoneUser.value = action.payload.dropzoneUser;\n        state.fields.exitWeight.value = action.payload.exitWeight;\n        state.fields.passengerName.value = action.payload.passengerName;\n        state.fields.passengerExitWeight.value = action.payload.passengerExitWeight;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserProfileFragment,\n  LoadDetailsFragment,\n  RigEssentialsFragment,\n  SlotDetailsFragment,\n} from 'app/api/operations';\nimport { first, xorBy } from 'lodash';\nimport { SlotUser } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = Omit<SlotUser, 'rig'> & {\n  rigId?: number;\n  rig?: RigEssentialsFragment;\n  avatar?: string;\n  name?: string;\n};\n\ninterface IFields\n  extends Pick<\n    SlotDetailsFragment & { load: LoadDetailsFragment },\n    'jumpType' | 'load' | 'ticketType' | 'extras' | 'groupNumber'\n  > {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    groupNumber: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (\n      state: ISlotEditState,\n      action: PayloadAction<{ load: LoadDetailsFragment; slots: SlotDetailsFragment[] }>\n    ) => {\n      state.fields.users.value = action.payload.slots.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        rig: slot.rig,\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUserWithRig[];\n\n      state.fields.jumpType.value = action.payload.slots.find((i) => i)?.jumpType;\n      state.fields.groupNumber.value = action.payload.slots.find((i) => i)?.groupNumber || null;\n      state.fields.load.value = action.payload.load;\n      state.fields.extras.value = action.payload.slots.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (\n      state: ISlotEditState,\n      action: PayloadAction<DropzoneUserProfileFragment[]>\n    ) => {\n      state.fields.users.value = xorBy(\n        state.fields.users.value,\n        action.payload?.map((dzUser) => {\n          const autoSelectedRig = dzUser?.user?.rigs?.length\n            ? first(dzUser.user.rigs)\n            : first(dzUser.availableRigs);\n          return {\n            id: Number(dzUser.id),\n            rigId: autoSelectedRig?.id ? Number(autoSelectedRig.id) : null,\n            rig: autoSelectedRig,\n            name: dzUser.user.name,\n            avatar: dzUser.user.image,\n            exitWeight: Number(dzUser?.user?.exitWeight),\n          };\n        }) as SlotUserWithRig[],\n        'id'\n      );\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.load.value = action.payload.load;\n        state.fields.users.value = action.payload.users;\n        state.fields.ticketType.value = action.payload.ticketType;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  CurrentUserDetailedFragment,\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\n\nexport type UserFields = Pick<\n  UserDetailedFragment & { license?: LicenseDetailsFragment },\n  | 'exitWeight'\n  | 'rigs'\n  | 'name'\n  | 'phone'\n  | 'email'\n  | 'apfNumber'\n  | 'nickname'\n  | 'license'\n  | 'image'\n>;\n\ninterface IUserEditState {\n  original: DropzoneUserDetailsFragment | CurrentUserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: UserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    image: {\n      value: null,\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<FederationEssentialsFragment>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (\n      state: IUserEditState,\n      action: PayloadAction<DropzoneUserDetailsFragment | CurrentUserDetailedFragment>\n    ) => {\n      state.original = action.payload;\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          if (typedKey in action.payload) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n              typedKey\n            ];\n          } else if (typedKey in action.payload.user) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n              typedKey\n            ];\n          }\n        }\n      });\n      state.federation.value =\n        action.payload.license?.federation ||\n        action.payload?.user?.userFederations?.find((i) => i)?.federation ||\n        null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        const userFederation = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        );\n        state.fields.apfNumber.value = userFederation?.uid;\n        state.fields.license.value =\n          state.fields.license.value || userFederation?.license || state?.original?.license;\n        console.debug('SET APF NUMBER TO ', state.fields.apfNumber.value);\n      }\n    },\n\n    setOpen: (\n      state: IUserEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherConditionEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<\n  WeatherConditionEssentialsFragment,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherConditionEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherConditionEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherConditionEssentialsFragment)[\n                typedKey\n              ];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUserEssentialsFragment[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (\n      state: IManifestScreenState,\n      action: PayloadAction<DropzoneUserEssentialsFragment[]>\n    ) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserWizardState {\n  skipRigSetup: boolean;\n}\n\nexport const initialState: IUserWizardState = {\n  skipRigSetup: false,\n};\n\nexport default createSlice({\n  name: 'screens/userWizard',\n  initialState,\n  reducers: {\n    skipRigSetup: (state: IUserWizardState, action: PayloadAction<boolean>) => {\n      state.skipRigSetup = action.payload;\n    },\n  },\n});\n","import * as users from './authenticated/user/user_list/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/dropzone/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './wizards/dropzone_wizard/slice';\nimport * as userWizard from './wizards/user_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  userWizard: userWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n  userWizard: userWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport merge from 'lodash/merge';\nimport { DropzoneExtensiveFragment, UserDetailedFragment } from '../api/operations';\nimport { Credential } from '../api/schema.d';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' },\n  },\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme: Theme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' as const },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' as const },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' as const },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' as const },\n  },\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  authenticated: boolean;\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: UserDetailedFragment | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: DropzoneExtensiveFragment | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  currentRouteName: string;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  authenticated: false,\n  expoPushToken: null,\n  currentRouteName: '',\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      console.debug('[Redux::Global]: Setting credentials', action.payload);\n      state.credentials = action.payload;\n    },\n    setAuthenticated: (state: IGlobalState, action: PayloadAction<boolean>) => {\n      state.authenticated = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<UserDetailedFragment>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setCurrentRouteName: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.currentRouteName = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<DropzoneExtensiveFragment | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n      console.debug('Setting id', action?.payload?.id);\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAppearance: (state: IGlobalState, action: PayloadAction<'light' | 'dark'>): IGlobalState => {\n      const current = state.isDarkMode ? 'dark' : 'light';\n      state.isDarkMode = action.payload === 'dark';\n\n      console.log('Setting appearance to', action.payload);\n      if (current === action.payload) {\n        return state;\n      }\n      state.theme = merge(\n        {},\n        action.payload === 'dark' ? CombinedDarkTheme : CombinedDefaultTheme,\n        {\n          colors: {\n            primary: state.currentDropzone?.primaryColor || CombinedDarkTheme.colors.primary,\n            accent: state.currentDropzone?.secondaryColor || CombinedDarkTheme.colors.accent,\n          },\n        }\n      );\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n      return state;\n    },\n    logout: (state: IGlobalState) => {\n      console.debug('Logout called?');\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\ntype ScreenReducers = {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\ntype FormReducers = {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\ntype ScreenActions = {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\n\ntype FormActions = {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as ScreenReducers;\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as FormReducers;\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as ScreenActions;\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as FormActions;\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import config from 'app/constants/expo';\n\nexport function getServerUrl(): string {\n  if (!config?.url) {\n    throw new Error('No server url found in config');\n  }\n  console.debug({ URL: config?.url });\n  return config?.url;\n}\n","import { ApolloLink, Observable, FetchResult, Operation, NextLink } from '@apollo/client';\nimport type { Consumer } from '@rails/actioncable';\nimport { print } from 'graphql';\n\ntype RequestResult = FetchResult<{ [key: string]: any }, Record<string, any>, Record<string, any>>;\ntype ConnectionParams = object | ((operation: Operation) => object);\n\nclass ActionCableLink extends ApolloLink {\n  cable: Consumer;\n\n  channelName: string;\n\n  actionName: string;\n\n  connectionParams: ConnectionParams;\n\n  constructor(options: {\n    cable: Consumer;\n    channelName?: string;\n    actionName?: string;\n    connectionParams?: ConnectionParams;\n  }) {\n    super();\n    this.cable = options.cable;\n    this.channelName = options.channelName || 'GraphqlChannel';\n    this.actionName = options.actionName || 'execute';\n    this.connectionParams = options.connectionParams || {};\n  }\n\n  // Interestingly, this link does _not_ call through to `next` because\n  // instead, it sends the request to ActionCable.\n  request(operation: Operation, _next: NextLink): Observable<RequestResult> {\n    return new Observable((observer) => {\n      const channelId = Math.round(Date.now() + Math.random() * 100000).toString(16);\n      const { actionName } = this;\n      const connectionParams =\n        typeof this.connectionParams === 'function'\n          ? this.connectionParams(operation)\n          : this.connectionParams;\n      const channel = this.cable.subscriptions.create(\n        {\n          channel: this.channelName,\n          channelId,\n          ...connectionParams,\n        },\n        {\n          connected() {\n            channel.perform(actionName, {\n              query: operation.query ? print(operation.query) : null,\n              variables: operation.variables,\n              // This is added for persisted operation support:\n              operationId: (operation as { operationId?: string }).operationId,\n              operationName: operation.operationName,\n            });\n          },\n          received(payload) {\n            if (payload?.result?.data || payload?.result?.errors) {\n              observer.next(payload.result);\n            }\n\n            if (!payload.more) {\n              observer.complete();\n            }\n          },\n        }\n      );\n      // Make the ActionCable subscription behave like an Apollo subscription\n      return Object.assign(channel, { closed: false });\n    });\n  }\n}\n\nexport default ActionCableLink;\n","import * as ActionCable from '@rails/actioncable';\nimport URI from 'urijs';\nimport { getServerUrl } from '../utils/getServerUrl';\nimport ActionCableLink from '../utils/ActionCableLink';\n\nexport const hasSubscriptionOperation = ({ query: { definitions } }) => {\n  return definitions.some(\n    ({ kind, operation }) => kind === 'OperationDefinition' && operation === 'subscription'\n  );\n};\n\nexport function createWebsocketsLink() {\n  const cable = ActionCable.createConsumer(\n    [\n      new URI(getServerUrl()).scheme() === 'https' ? 'wss://' : 'ws://',\n      new URI(getServerUrl()).host(),\n      '/subscriptions',\n    ].join('')\n  );\n\n  return new ActionCableLink({\n    cable,\n    connectionParams: (a) => {\n      const { authHeaders } = a.getContext();\n      return authHeaders;\n    },\n  });\n}\n","import { ApolloLink } from '@apollo/client';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { getServerUrl } from '../utils/getServerUrl';\nimport { createWebsocketsLink, hasSubscriptionOperation } from './websockets';\n\nexport const abortController = new AbortController();\nexport const httpLink = new BatchHttpLink({\n  batchDebounce: true,\n  batchMax: 10,\n  uri: getServerUrl(),\n  fetchOptions: {\n    mode: 'cors',\n    method: 'POST',\n    signal: abortController.signal,\n  },\n});\n\nexport function createHttpLink() {\n  return ApolloLink.split(hasSubscriptionOperation, createWebsocketsLink(), httpLink);\n}\n","import { noop } from 'lodash';\nimport * as React from 'react';\n\nexport interface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  createdAt: number;\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationContext {\n  success(message: INotification['message'], action?: INotification['action']): void;\n  error(message: INotification['message'], action?: INotification['action']): void;\n  info(message: INotification['message'], action?: INotification['action']): void;\n}\n\nexport const NotificationContext = React.createContext<INotificationContext>({\n  success: noop,\n  error: noop,\n  info: noop,\n});\n\nexport function useNotifications() {\n  return React.useContext(NotificationContext);\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport LottieView from 'app/components/LottieView';\nimport { isEqual, last } from 'lodash';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\nimport { NotificationContext } from './context';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\n\nexport function NotificationsProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [queue, setQueue] = React.useState<INotification[]>([]);\n\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(() => queue?.[0], [queue]);\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  const notify = React.useCallback(\n    (newNotification: INotification) => {\n      if (!isEqual(last(queue), newNotification)) {\n        setQueue([...queue, newNotification]);\n      }\n    },\n    [queue]\n  );\n\n  const onHide = React.useCallback(() => {\n    const [, ...newQueue] = queue;\n    setQueue(newQueue);\n  }, [queue]);\n\n  const success = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'success', action });\n    },\n    [notify]\n  );\n\n  const error = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'error', action });\n    },\n    [notify]\n  );\n\n  const info = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'info', action });\n    },\n    [notify]\n  );\n\n  const onAnimationFinish = React.useCallback(() => {\n    setAnimationState(AnimationState.waiting);\n    setTimeout(() => {\n      onHide();\n      setAnimationState(AnimationState.closed);\n    }, 200);\n  }, [onHide]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide,\n        text1: notification.message,\n        type: notification.variant || 'success',\n      });\n      if (notification.variant === 'error') {\n        console.error(notification.message);\n      }\n    }\n  }, [notification, onHide]);\n\n  const context = React.useMemo(\n    () => ({ notify, success, error, info }),\n    [error, info, notify, success]\n  );\n\n  return (\n    <NotificationContext.Provider value={context}>\n      {children}\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            {...{ onAnimationFinish }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast autoHide visibilityTime={4000} position=\"bottom\" type=\"success\" />\n    </NotificationContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300,\n  },\n});\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import { onError } from '@apollo/client/link/error';\nimport * as React from 'react';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nexport const defaultErrorLink = onError(({ graphQLErrors, networkError, operation }) => {\n  if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n    console.error('[Apollo::Links::Errors::Default]: Authentication Error');\n    return;\n  }\n\n  if (graphQLErrors && process.env.EXPO_ENV !== 'production') {\n    graphQLErrors.forEach((err) => {\n      const { message, locations, path, name, nodes } = err;\n      console.error(\n        `[Apollo::Links::Errors::Default]: ${message}, ${JSON.stringify(\n          locations\n        )}, ${path}, ${name}, ${nodes}`\n      );\n      console.log(operation);\n    });\n  }\n  if (networkError && process.env.EXPO_ENV !== 'production') {\n    console.error(`[Apollo::Links::Errors::Default::Network] ${networkError}`);\n  }\n});\n\nexport function useErrorLink() {\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const { authenticated } = useAppSelector((root) => root.global);\n  // Log any GraphQL errors or network error that occurred\n  return React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, forward }) => {\n        try {\n          if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n            notify.info(`Session expired`);\n            if (authenticated) {\n              console.debug(\n                '[Apollo::Links::Errors]: Received authentication error, logging out',\n                graphQLErrors\n              );\n              dispatch(actions.global.logout());\n            }\n            return;\n          }\n\n          if (graphQLErrors && process.env.EXPO_ENV !== 'production') {\n            graphQLErrors.forEach((err) => {\n              const { message, locations, path, name, nodes } = err;\n              notify.error(`[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`);\n              console.error(\n                `[GraphQL error]: ${message}, ${JSON.stringify(\n                  locations\n                )}, ${path}, ${name}, ${nodes}`\n              );\n              // console.log(JSON.stringify(err));\n              console.log(operation);\n            });\n          }\n          if (networkError && process.env.EXPO_ENV !== 'production') {\n            notify.error(`[Network error]: ${networkError}`);\n          }\n        } finally {\n          forward?.(operation);\n        }\n      }),\n    [dispatch, notify, authenticated]\n  );\n}\n","import Appsignal from '@appsignal/javascript';\nimport Constants from 'expo-constants';\nimport ExpoManifest from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nconst AppSignalClient = new Appsignal({\n  key: ExpoManifest?.extra?.appSignalApiKey,\n  namespace: Platform.OS,\n  revision: Constants.expoConfig?.version,\n  ignoreErrors: [],\n});\n\nexport default AppSignalClient;\n","import Appsignal from '@appsignal/javascript';\nimport noop from 'lodash/noop';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport AppSignalClient from './AppSignalClient';\n\nexport interface IAppSignalDefaultTags {\n  platform: string;\n  currentDropzoneId: string;\n  currentUserId: string;\n  currentDropzone: string;\n  currentUser: string;\n}\nexport interface IAppSignalContext {\n  appSignal: Appsignal;\n  tags: { [key: string]: string } & IAppSignalDefaultTags;\n  setTags(tags: Partial<IAppSignalDefaultTags> | { [key: string]: string }): void;\n}\n\nexport const INITIAL_TAGS = {\n  platform: Platform.OS,\n  currentDropzoneId: 'Unknown',\n  currentDropzone: 'Unknown',\n  currentUserId: 'Unknown',\n  currentUser: 'Unknown',\n};\n\nexport const INITIAL_CONTEXT: IAppSignalContext = {\n  appSignal: AppSignalClient,\n  tags: INITIAL_TAGS,\n  setTags: noop,\n};\n\nconst AppSignalContext = React.createContext(INITIAL_CONTEXT);\n\nexport function useAppSignalContext() {\n  return React.useContext(AppSignalContext);\n}\n\nexport default AppSignalContext;\n","import * as React from 'react';\n\ninterface IDefaultErrorBoundaryProps {\n  fallback: React.ComponentType<{ error?: Error | null }>;\n  children: React.ReactNode;\n}\n\ninterface IDefaultErrorBoundaryState {\n  error?: Error;\n}\nexport default class ErrorBoundary extends React.Component<\n  IDefaultErrorBoundaryProps,\n  IDefaultErrorBoundaryState\n> {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  public componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // eslint-disable-next-line no-console\n    console.error(error, errorInfo);\n  }\n\n  public render() {\n    const { fallback: Fallback, children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return <Fallback {...{ error }} />;\n    }\n    return children;\n  }\n}\n","import * as React from 'react';\nimport { reloadAsync } from 'expo-updates';\nimport { Button, Card, HelperText } from 'react-native-paper';\nimport { Platform, SafeAreaView, useWindowDimensions } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport LottieView from '../LottieView';\nimport twigBreakAnimation from '../../../assets/images/error-twig-break.json';\n\ninterface IErrorScreenProps {\n  error?: Error | null;\n}\nexport default function ErrorScreen(props: IErrorScreenProps) {\n  const { error } = props;\n  const [isDetailsVisible, setDetailsVisible] = React.useState(false);\n  const [reloading, setReloading] = React.useState(false);\n  const onToggleDetails = React.useCallback(\n    () => setDetailsVisible(!isDetailsVisible),\n    [isDetailsVisible]\n  );\n\n  const onReloadApp = React.useCallback(async () => {\n    try {\n      setReloading(true);\n\n      if (Platform.OS === 'web') {\n        window.location.reload();\n      } else {\n        await reloadAsync();\n      }\n    } finally {\n      setReloading(false);\n    }\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <SafeAreaView\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Card style={{ width: '100%', minHeight: 250, maxWidth: 450, marginHorizontal: 16 }}>\n        <Card.Title\n          title=\"That's a bug\"\n          subtitle=\"This error has been uploaded for review\"\n          titleStyle={{ textAlign: 'center' }}\n          subtitleStyle={{ textAlign: 'center' }}\n        />\n        <Card.Content style={{ alignItems: 'center' }}>\n          <LottieView\n            // eslint-disable-next-line global-require\n            source={twigBreakAnimation}\n            autoPlay\n            loop={false}\n            style={{\n              height: Platform.OS === 'web' ? 300 : 150,\n              width: Platform.OS === 'web' ? 300 : 150,\n            }}\n          />\n          {!error ? null : (\n            <>\n              <HelperText type=\"error\">{error?.message}</HelperText>\n              {isDetailsVisible ? (\n                <ScrollView style={{ maxHeight: 300 }}>\n                  <HelperText type=\"error\">{error.stack}</HelperText>\n                </ScrollView>\n              ) : null}\n            </>\n          )}\n        </Card.Content>\n        <Card.Actions style={{ justifyContent: 'space-between' }}>\n          <Button compact onPress={onToggleDetails}>\n            {isDetailsVisible ? 'Hide' : 'Show'} details\n          </Button>\n          <Button\n            disabled={reloading}\n            loading={reloading}\n            compact\n            mode=\"outlined\"\n            onPress={onReloadApp}\n          >\n            Reload\n          </Button>\n        </Card.Actions>\n      </Card>\n    </SafeAreaView>\n  );\n}\n","import * as React from 'react';\nimport { ErrorBoundary } from '@appsignal/react';\nimport { useAppSignalContext } from './AppSignalContext';\nimport DefaultErrorBoundary from './AppSignalFallbackBoundary';\nimport ErrorScreen from './ErrorScreen';\n\nfunction AppSignalBoundary(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { appSignal: instance, tags } = useAppSignalContext();\n\n  const errorBoundaryRef = React.useRef<ErrorBoundary>(null);\n  // Render children until we have an instance ready and use a\n  // default error boundary to catch it in the meantime and still\n  // display the fallback page\n  if (!instance) {\n    return <DefaultErrorBoundary fallback={ErrorScreen}>{children}</DefaultErrorBoundary>;\n  }\n  return (\n    <ErrorBoundary\n      {...{ instance, tags }}\n      fallback={() => (\n        <ErrorScreen error={errorBoundaryRef.current?.state?.error as Error | undefined} />\n      )}\n      ref={errorBoundaryRef}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport default AppSignalBoundary;\n","import { plugin as AppSignalCurrentPath } from '@appsignal/plugin-path-decorator';\nimport { plugin as AppSignalWindowEvents } from '@appsignal/plugin-window-events';\nimport * as React from 'react';\nimport type { JSSpan } from '@appsignal/types';\nimport isEqual from 'lodash/isEqual';\nimport AppSignalClient from './AppSignalClient';\nimport AppSignalBoundary from './AppSignalBoundary';\nimport AppSignalContext, {\n  IAppSignalContext,\n  IAppSignalDefaultTags,\n  INITIAL_CONTEXT,\n  INITIAL_TAGS,\n} from './AppSignalContext';\n\nexport default function AppSignalProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [tags, setTags] = React.useState<IAppSignalDefaultTags & { [key: string]: string }>(\n    INITIAL_CONTEXT.tags\n  );\n  React.useEffect(() => {\n    AppSignalClient.use(AppSignalWindowEvents);\n    AppSignalClient.use(AppSignalCurrentPath);\n  }, []);\n\n  const onUpdateTags = React.useCallback(\n    (newTags: Partial<IAppSignalDefaultTags>) => {\n      setTags({ ...tags, ...newTags });\n    },\n    [tags]\n  );\n\n  const value: IAppSignalContext = React.useMemo(\n    () => ({ appSignal: AppSignalClient, tags, setTags: onUpdateTags }),\n    [tags, onUpdateTags]\n  );\n\n  const onTagsChanged = React.useCallback(\n    (span: JSSpan) => {\n      if (isEqual(tags, INITIAL_TAGS)) {\n        return span;\n      }\n      return span.setTags(tags);\n    },\n    [tags]\n  );\n\n  React.useEffect(() => {\n    AppSignalClient?.addDecorator(onTagsChanged);\n  }, [onTagsChanged]);\n\n  return (\n    <AppSignalContext.Provider {...{ value }}>\n      <AppSignalBoundary>{children}</AppSignalBoundary>\n    </AppSignalContext.Provider>\n  );\n}\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { FieldError } from '../schema.d';\n\nexport type InferArguments<Func> = Func extends (arg: infer Argument) => unknown ? Argument : never;\ntype CRUDHook<Args extends object, Value extends object> = (args: Args) => Value;\ntype InferHookArguments<Hook> = Hook extends CRUDHook<infer Arguments, object> ? Arguments : never;\n\nexport const uninitializedHandler = async (args?: unknown) => undefined as unknown;\n\n// Streamline mutation results\nexport interface IMutationSuccessResponse<T> {\n  note: T;\n}\n\nexport interface IMutationFailureResponse {\n  fieldErrors?: FieldError[];\n  error?: string;\n}\n\nexport type TMutationResponse<MutationSuccessResponse extends { [key: string]: object }> =\n  | MutationSuccessResponse\n  | IMutationFailureResponse;\n\nconst DEBUG_PROVIDERS = false;\n/**\n * Create a context for the CRUD operations\n * to allow using it further down the tree without\n * remounting the same hooks\n *\n * Usage:\n * createCRUDContext<typeof useHook>({ onUpdate: noop, onDelete: noop })\n */\nexport default function createCRUDContext<\n  Args extends object,\n  Value extends object,\n  Hook extends CRUDHook<Args, Value>\n>(useHook: Hook, INITIAL_STATE: ReturnType<Hook>) {\n  const Context = React.createContext<ReturnType<Hook>>(INITIAL_STATE);\n\n  function Provider(props: React.PropsWithChildren<InferHookArguments<Hook>>) {\n    const { children, ...rest } = props;\n    const value = useHook(rest as InferHookArguments<Hook>) as ReturnType<Hook>;\n    const old = React.useRef<typeof value>(value);\n\n    // Leaving these in for debugging if needed later,\n    // just flip DEBUG_PROVIDERS to true\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        console.debug(useHook.name, 'mounted');\n        return () => {\n          console.debug(useHook.name, 'unmounted');\n        };\n      }\n      return undefined;\n    }, []);\n\n    // Print debugging information\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        if (JSON.stringify(value) !== JSON.stringify(old.current)) {\n          console.debug(useHook.name, '[CRUD Hook] Re-rendering because of state change: ', {\n            old: old.current,\n            new: value,\n          });\n          console.debug(useHook.name, '[CRUD Hook] Previous: ', old.current);\n          console.debug(useHook.name, '[CRUD Hook] Current: ', value);\n          difference(Object.values(old.current), Object.values(value)).forEach((key) => {\n            console.debug('DIFF IN ', key);\n          });\n          old.current = value;\n        }\n      }\n    }, [value]);\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext() {\n    return React.useContext(Context);\n  }\n\n  return { Provider: React.memo(Provider, isEqual), useContext, Context, INITIAL_STATE };\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IDropzoneContext {\n  dropzone: ReturnType<typeof useDropzone>;\n  dialogs: {\n    aircraft: IDialogContextSubstate<Pick<IPlaneDialogProps, 'initial' | 'original'>>;\n    ticketType: IDialogContextSubstate<Pick<ITicketTypeDialog, 'initial' | 'original'>>;\n    ticketTypeAddon: IDialogContextSubstate<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>;\n    createUser: IDialogContextSubstate<Pick<ICreateGhostDialog, 'initial' | 'original'>>;\n  };\n}\n\nexport const INITIAL_CONTEXT: IDropzoneContext = {\n  dropzone: {\n    permissions: [],\n    called: false,\n    loading: false,\n    dropzone: null,\n    currentUser: undefined,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  },\n  dialogs: {\n    aircraft: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    createUser: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketType: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketTypeAddon: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const DropzoneContext = React.createContext<IDropzoneContext>(INITIAL_CONTEXT);\n\nexport function useDropzoneContext() {\n  return React.useContext(DropzoneContext);\n}\n","import * as React from 'react';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport { Platform } from 'react-native';\nimport { useAppSignalContext, INITIAL_TAGS } from './AppSignalContext';\n\nfunction AppSignalSessionTagProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n\n  // This can be undefined here because this bondary\n  // is rendered at the top of the app to catch errors\n  // outside of GraphQL as wele\n  const {\n    dropzone: { dropzone, currentUser: currentDropzoneUser },\n  } = useDropzoneContext();\n  const { currentRouteName, currentUser, currentDropzoneId } = useAppSelector(\n    (state) => state.global\n  );\n  const { tags, setTags } = useAppSignalContext();\n\n  const sessionTags: { [key: string]: string } = React.useMemo(\n    () => ({\n      ...INITIAL_TAGS,\n      currentDropzoneId: (dropzone?.id || currentDropzoneId || 'Unknown')?.toString(),\n      currentDropzone: dropzone?.name || 'Unknown',\n      currentRouteName: currentRouteName || 'Unknown',\n      currentUser: (currentDropzoneUser?.id || currentUser?.id || 'Unknown')?.toString(),\n      platform: Platform.OS as string,\n    }),\n    [\n      currentDropzoneId,\n      currentDropzoneUser?.id,\n      currentRouteName,\n      currentUser?.id,\n      dropzone?.id,\n      dropzone?.name,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Update tags only if they're different\n    const currentSessionTags = pick(tags, Object.keys(sessionTags));\n    if (!isEqual(currentSessionTags, sessionTags)) {\n      // Prevent this component from resetting tags when the GraphQL store\n      // gets wiped on an error:\n      if (isEqual(tags, INITIAL_TAGS) || !isEqual({ ...tags, ...sessionTags }, INITIAL_TAGS)) {\n        setTags(sessionTags);\n      }\n    }\n  }, [sessionTags, setTags, tags]);\n\n  return children as JSX.Element;\n}\n\nexport default AppSignalSessionTagProvider;\n","import { ApolloLink, FetchResult, NextLink, Operation, ServerError } from '@apollo/client';\nimport { ErrorResponse, onError as createErrorLink } from '@apollo/client/link/error';\nimport { Observable } from 'zen-observable-ts';\nimport AppSignal from '@appsignal/javascript';\nimport type { Breadcrumb } from '@appsignal/types';\nimport { GraphQLError, OperationDefinitionNode, print } from 'graphql';\nimport { omit } from 'lodash';\n\nexport interface IAppSignalLinkOptions {\n  breadcrumbs: {\n    includeQuery?: boolean;\n    includeResponse?: boolean;\n    includeVariables?: boolean;\n  };\n  excludeOperation?(operation: Operation): boolean;\n  excludeError?(error: GraphQLError): boolean;\n  ignore?(errors: ErrorResponse): boolean;\n}\n\nconst DEFAULT_OPTIONS: IAppSignalLinkOptions = {\n  breadcrumbs: {\n    includeQuery: false,\n    includeResponse: false,\n    includeVariables: false,\n  },\n  excludeOperation: () => false,\n  excludeError: () => false,\n};\n\nfunction isServerError(error: unknown): error is ServerError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'response' in error &&\n    'result' in error &&\n    'statusCode' in error\n  );\n}\n\nfunction getDefinition(operation: Operation): OperationDefinitionNode {\n  return operation.query.definitions.find(\n    (q) => q.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode;\n}\n\nfunction createBreadCrumb(operation: Operation): Breadcrumb {\n  const definition = getDefinition(operation);\n  const operationName = definition.name?.value;\n  return {\n    message: operationName,\n    category: `graphql.${definition.operation}`,\n    action: operation.operationName,\n    timestamp: Math.floor(new Date().getTime() / 1000),\n    metadata: {},\n  };\n}\n\nfunction createAppSignalErrorLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions = DEFAULT_OPTIONS\n): ApolloLink {\n  return createErrorLink((errors) => {\n    const { graphQLErrors, operation, response } = errors;\n    if (options?.ignore?.(errors)) {\n      return;\n    }\n\n    if (graphQLErrors) {\n      const filteredErrors = graphQLErrors.filter((err) => !options?.excludeError?.(err));\n\n      // Rethrow errors not in the whitelist\n      if (filteredErrors.length) {\n        const breadcrumb = createBreadCrumb(operation);\n        breadcrumb.metadata ??= {};\n        const definition = getDefinition(operation);\n        // Always include query, variables and response on errors\n        const query = definition.loc?.source?.body ?? print(definition);\n        const { variables } = operation;\n        breadcrumb.metadata.query = query;\n        breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n        if (isServerError(response)) {\n          const { result } = response;\n\n          breadcrumb.metadata.statusCode = response?.response?.status;\n          breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n        }\n\n        client?.addBreadcrumb(breadcrumb);\n\n        try {\n          client?.sendError(new Error(filteredErrors.map((err) => err.message).join(', ')));\n        } catch (e) {\n          console.debug('Error', e);\n        }\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        response.errors = null;\n      }\n    }\n  });\n}\nexport class AppSignalBreadcrumbLink extends ApolloLink {\n  private readonly options: IAppSignalLinkOptions;\n\n  private readonly client?: AppSignal;\n\n  constructor(client: AppSignal, options: IAppSignalLinkOptions) {\n    super();\n    this.client = client;\n    this.options = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  }\n\n  request(operation: Operation, forward: NextLink): Observable<FetchResult> | null {\n    const { options } = this;\n\n    // If this operation should be excluded, continue\n    if (options.excludeOperation?.(operation) ?? false) {\n      return forward?.(operation);\n    }\n\n    const breadcrumb = createBreadCrumb(operation);\n\n    // While this could be done more simplistically by simply subscribing,\n    // wrapping the observer in our own observer ensures we get the results\n    // before they are passed along to other observers. This guarantees we\n    // get to run our instrumentation before others observers potentially\n    // throw and thus flush the results to Sentry.\n    return new Observable<FetchResult>((originalObserver) => {\n      const subscription = forward?.(operation).subscribe({\n        next: (result) => {\n          breadcrumb.metadata ??= {};\n          if (options?.breadcrumbs?.includeResponse) {\n            // We must have a breadcrumb if attachBreadcrumbs was set\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          if (options?.breadcrumbs?.includeQuery) {\n            const definition = getDefinition(operation);\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.query = definition.loc?.source?.body ?? print(definition);\n          }\n\n          if (options?.breadcrumbs?.includeVariables) {\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.variables = JSON.stringify(\n              omit(operation.variables || {}, ['password']),\n              null,\n              2\n            );\n          }\n\n          originalObserver.next(result);\n        },\n        complete: () => {\n          this.client?.addBreadcrumb(breadcrumb);\n          originalObserver.complete();\n        },\n        error: (error) => {\n          breadcrumb.metadata ??= {};\n          const definition = getDefinition(operation);\n          // Always include query, variables and response on errors\n          const query = definition.loc?.source?.body ?? print(definition);\n          const { variables } = operation;\n          breadcrumb.metadata.query = query;\n          breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n          if (isServerError(error)) {\n            const { result, response } = error;\n\n            breadcrumb.metadata.statusCode = response?.status;\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          this.client?.addBreadcrumb(breadcrumb);\n\n          originalObserver.error(error);\n        },\n      });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n\nexport default function createAppSignalLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions\n): ApolloLink {\n  return ApolloLink.from([\n    new AppSignalBreadcrumbLink(client, options),\n    createAppSignalErrorLink(client, options),\n  ]);\n}\n","import * as React from 'react';\nimport { createAppSignalLink, useAppSignal } from 'app/components/app_signal';\n\nconst ERROR_CODE_WHITELIST = ['INSUFFICIENT_PERMISSIONS'];\n\nexport function useAppSignalLink() {\n  const { appSignal } = useAppSignal();\n  return React.useMemo(\n    () =>\n      createAppSignalLink(appSignal, {\n        breadcrumbs: {\n          includeQuery: true,\n          includeVariables: true,\n          includeResponse: false,\n        },\n        ignore: ({ graphQLErrors }) =>\n          graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR') || false,\n        excludeError: (err) => ERROR_CODE_WHITELIST.includes(err.extensions?.code as string),\n      }),\n    [appSignal]\n  );\n}\n","import { ApolloLink } from '@apollo/client';\nimport React from 'react';\nimport { useAuthenticationLink } from './authentication';\nimport { useErrorLink, defaultErrorLink } from './errors';\nimport { createHttpLink, httpLink } from './http';\nimport { useAppSignalLink } from './appSignal';\n\nexport const defaultLink = ApolloLink.from([defaultErrorLink, httpLink]);\nexport function useLink() {\n  const authLink = useAuthenticationLink();\n  const errorLink = useErrorLink();\n  const appSignalLink = useAppSignalLink();\n  const httpWebsocketsLink = React.useMemo(() => createHttpLink(), []);\n\n  const links = React.useMemo(\n    () => [authLink, errorLink, appSignalLink, httpWebsocketsLink].filter(Boolean) as ApolloLink[],\n    [appSignalLink, authLink, errorLink, httpWebsocketsLink]\n  );\n  return React.useMemo(() => ApolloLink.from(links), [links]);\n}\n","import { setContext } from '@apollo/client/link/context';\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport isEmpty from 'lodash/isEmpty';\n\nexport function useAuthenticationLink() {\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const authHeaders = React.useMemo(() => {\n    if (!credentials?.accessToken) return {};\n    return {\n      Authorization: `Bearer ${credentials.accessToken}`,\n      'access-token': credentials.accessToken,\n      'token-type': credentials.tokenType,\n      ...credentials,\n    };\n  }, [credentials]);\n\n  console.debug('[Apollo::Link::Authentication]: Current: ', { authHeaders, credentials });\n  return React.useMemo(() => {\n    if (isEmpty(authHeaders)) {\n      console.debug('[Apollo::Link::Authentication]: No headers to set', authHeaders);\n      return undefined;\n    }\n\n    return setContext((_, { headers }) => {\n      console.debug('[Apollo::Link::Authentication]: Headers: ', {\n        ...headers,\n        ...authHeaders,\n      });\n      return {\n        authHeaders,\n        headers: {\n          ...headers,\n          ...authHeaders,\n        },\n      };\n    });\n  }, [authHeaders]);\n}\n","import { InMemoryCache } from '@apollo/client';\nimport { relayStylePagination } from '@apollo/client/utilities';\n\nexport const cache = new InMemoryCache({\n  typePolicies: {\n    Event: relayStylePagination(),\n    DropzoneUsers: relayStylePagination(),\n    Loads: relayStylePagination(),\n  },\n});\n","import { ApolloClient } from '@apollo/client';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { defaultLink, useLink } from './links';\nimport { cache } from './cache';\n\nconst client = new ApolloClient({\n  link: defaultLink,\n  cache,\n});\n\nexport default function useApolloClient() {\n  const link = useLink();\n  const dispatch = useAppDispatch();\n  const { credentials, authenticated } = useAppSelector((root) => root?.global);\n\n  React.useEffect(() => {\n    console.debug('[Apollo::Link]: Replacing Apollo Client Link');\n    // abortController.abort();\n    const isAuthenticated = !!credentials?.accessToken;\n    const authStateChanged = isAuthenticated !== authenticated;\n    if (authStateChanged) {\n      console.debug('[Apollo::Link]: Authentication state changed to ', isAuthenticated);\n      dispatch(actions.global.setAuthenticated(!!credentials?.accessToken));\n    }\n    console.debug('[Apollo::Link]: Replacing Apollo Client Link');\n    client.setLink(link);\n\n    if (authStateChanged) {\n      console.debug('[Apollo::Link]: Refetching queries after authentication state change');\n      // client.reFetchObservableQueries();\n    }\n  }, [authenticated, credentials?.accessToken, dispatch, link]);\n\n  return client;\n}\n","import { ApolloProvider } from '@apollo/client/react';\nimport * as React from 'react';\nimport useApolloClient from './client/client';\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const client = useApolloClient();\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function EntrypointWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport const RoleEssentialsFragmentDoc = gql`\n    fragment roleEssentials on UserRole {\n  id\n  name\n  dropzoneId\n}\n    `;\nexport const LicenseEssentialsFragmentDoc = gql`\n    fragment licenseEssentials on License {\n  id\n  name\n}\n    `;\nexport const UserEssentialsFragmentDoc = gql`\n    fragment userEssentials on User {\n  id\n  name\n  nickname\n  phone\n  email\n  exitWeight\n  moderationRole\n  image\n  apfNumber\n}\n    `;\nexport const DropzoneUserEssentialsFragmentDoc = gql`\n    fragment dropzoneUserEssentials on DropzoneUser {\n  id\n  walletId\n  expiresAt\n  hasCredits\n  hasMembership\n  hasLicense\n  hasExitWeight\n  role {\n    ...roleEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n  user {\n    ...userEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}\n${UserEssentialsFragmentDoc}`;\nexport const ActivityEssentialsFragmentDoc = gql`\n    fragment activityEssentials on Event {\n  action\n  id\n  level\n  message\n  details\n  createdAt\n  createdBy {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  walletId\n  lat\n  lng\n  name\n  status: state\n  primaryColor\n  secondaryColor\n  banner\n  isCreditSystemEnabled\n  createdAt\n}\n    `;\nexport const LoadEssentialsFragmentDoc = gql`\n    fragment loadEssentials on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n}\n    `;\nexport const TicketTypeEssentialsFragmentDoc = gql`\n    fragment ticketTypeEssentials on TicketType {\n  id\n  name\n  altitude\n  cost\n  isTandem\n  allowManifestingSelf\n}\n    `;\nexport const TicketTypeAddonEssentialsFragmentDoc = gql`\n    fragment ticketTypeAddonEssentials on Extra {\n  id\n  name\n  cost\n}\n    `;\nexport const TicketTypeDetailsFragmentDoc = gql`\n    fragment ticketTypeDetails on TicketType {\n  ...ticketTypeEssentials\n  extras {\n    ...ticketTypeAddonEssentials\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${TicketTypeAddonEssentialsFragmentDoc}`;\nexport const JumpTypeEssentialsFragmentDoc = gql`\n    fragment jumpTypeEssentials on JumpType {\n  id\n  name\n}\n    `;\nexport const SlotEssentialsFragmentDoc = gql`\n    fragment slotEssentials on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  groupNumber\n  cost\n  ticketType {\n    ...ticketTypeDetails\n  }\n  jumpType {\n    ...jumpTypeEssentials\n  }\n  extras {\n    id\n    name\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}\n${JumpTypeEssentialsFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n  isPublic\n  owner {\n    id\n    name\n  }\n  dropzone {\n    id\n  }\n}\n    `;\nexport const PlaneEssentialsFragmentDoc = gql`\n    fragment planeEssentials on Plane {\n  id\n  minSlots\n  maxSlots\n  name\n  registration\n}\n    `;\nexport const ActivityDetailsFragmentDoc = gql`\n    fragment activityDetails on Event {\n  ...activityEssentials\n  resource {\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n    ... on DropzoneUser {\n      ...dropzoneUserEssentials\n    }\n    ... on Load {\n      ...loadEssentials\n    }\n    ... on Slot {\n      ...slotEssentials\n    }\n    ... on Rig {\n      ...rigEssentials\n    }\n    ... on Plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}`;\nexport const FederationEssentialsFragmentDoc = gql`\n    fragment federationEssentials on Federation {\n  id\n  name\n  slug\n}\n    `;\nexport const LicenseDetailsFragmentDoc = gql`\n    fragment licenseDetails on License {\n  ...licenseEssentials\n  federation {\n    ...federationEssentials\n  }\n}\n    ${LicenseEssentialsFragmentDoc}\n${FederationEssentialsFragmentDoc}`;\nexport const UserFederationEssentialsFragmentDoc = gql`\n    fragment userFederationEssentials on UserFederation {\n  id\n  uid\n  federation {\n    ...federationEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}`;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  owner {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const UserDetailedFragmentDoc = gql`\n    fragment userDetailed on User {\n  ...userEssentials\n  userFederations {\n    ...userFederationEssentials\n  }\n  rigs {\n    ...userRigDetailed\n  }\n}\n    ${UserEssentialsFragmentDoc}\n${UserFederationEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const DropzoneUserDetailsFragmentDoc = gql`\n    fragment dropzoneUserDetails on DropzoneUser {\n  ...dropzoneUserEssentials\n  credits\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...userDetailed\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${UserDetailedFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const RigInspectionEssentialsFragmentDoc = gql`\n    fragment rigInspectionEssentials on RigInspection {\n  id\n  isOk\n  definition\n  inspectedBy {\n    ...dropzoneUserEssentials\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TransactionEssentialsFragmentDoc = gql`\n    fragment transactionEssentials on Transaction {\n  id\n  transactionType\n  amount\n  status\n  createdAt\n  message\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const ReceiptEssentialsFragmentDoc = gql`\n    fragment receiptEssentials on Receipt {\n  id\n  amountCents\n  createdAt\n  updatedAt\n  transactions {\n    ...transactionEssentials\n  }\n}\n    ${TransactionEssentialsFragmentDoc}`;\nexport const OrderEssentialsFragmentDoc = gql`\n    fragment orderEssentials on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  createdAt\n  buyer {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      id\n      name\n      banner\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    ...receiptEssentials\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${ReceiptEssentialsFragmentDoc}`;\nexport const SlotDetailsFragmentDoc = gql`\n    fragment slotDetails on Slot {\n  ...slotEssentials\n  rig {\n    ...rigEssentials\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n  }\n}\n    ${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}`;\nexport const UserSlotDetailsFragmentDoc = gql`\n    fragment userSlotDetails on Slot {\n  ...slotDetails\n  load {\n    ...loadEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${LoadEssentialsFragmentDoc}`;\nexport const DropzoneUserProfileFragmentDoc = gql`\n    fragment dropzoneUserProfile on DropzoneUser {\n  ...dropzoneUserDetails\n  permissions\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  slots {\n    edges {\n      node {\n        ...userSlotDetails\n      }\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${UserSlotDetailsFragmentDoc}`;\nexport const DropzoneStatisticsEssentialsFragmentDoc = gql`\n    fragment dropzoneStatisticsEssentials on Statistics {\n  id\n  activeUserCount\n  totalUserCount\n  slotsByJumpType(timeRange: $timeRange) {\n    name\n    count\n  }\n  slotsCount(timeRange: $timeRange)\n  cancelledLoadsCount(timeRange: $timeRange)\n  dzsoCount\n  finalizedLoadsCount(timeRange: $timeRange)\n  gcaCount\n  pilotCount\n  inactiveUserCount\n  loadsCount(timeRange: $timeRange)\n  loadCountByDay(timeRange: $timeRange) {\n    date\n    count\n  }\n  revenueCentsCount(timeRange: $timeRange)\n  rigInspectorCount\n}\n    `;\nexport const DropzoneStatisticsFragmentDoc = gql`\n    fragment dropzoneStatistics on Dropzone {\n  ...dropzoneEssentials\n  statistics {\n    ...dropzoneStatisticsEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${DropzoneStatisticsEssentialsFragmentDoc}`;\nexport const WeatherConditionEssentialsFragmentDoc = gql`\n    fragment weatherConditionEssentials on WeatherCondition {\n  id\n  jumpRun\n  temperature\n  offsetDirection\n  offsetMiles\n  createdAt\n  exitSpotMiles\n  winds {\n    temperature\n    altitude\n    speed\n    direction\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  currentConditions {\n    ...weatherConditionEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${WeatherConditionEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  walletId\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    ...roleEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const CurrentUserFragmentDoc = gql`\n    fragment currentUser on User {\n  ...userDetailed\n  dropzoneUsers {\n    ...dropzoneUserDetails\n  }\n  pushToken\n}\n    ${UserDetailedFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}`;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...currentUser\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${CurrentUserFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const TicketTypeExtraEssentialsFragmentDoc = gql`\n    fragment ticketTypeExtraEssentials on Extra {\n  id\n  name\n  createdAt\n  cost\n}\n    `;\nexport const TicketTypeExtraDetailedFragmentDoc = gql`\n    fragment ticketTypeExtraDetailed on Extra {\n  ...ticketTypeExtraEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeExtraEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const MasterLogUserFragmentDoc = gql`\n    fragment masterLogUser on MasterLogUser {\n  id\n  email\n  name\n  nickname\n  phone\n}\n    `;\nexport const MasterLogAircraftFragmentDoc = gql`\n    fragment masterLogAircraft on MasterLogAircraft {\n  id\n  name\n  registration\n}\n    `;\nexport const MasterLogSlotFragmentDoc = gql`\n    fragment masterLogSlot on MasterLogSlot {\n  id\n  altitude\n  jumpType\n  name\n}\n    `;\nexport const MasterLogLoadFragmentDoc = gql`\n    fragment masterLogLoad on MasterLogLoad {\n  id\n  loadNumber\n  dispatchAt\n  aircraft {\n    ...masterLogAircraft\n  }\n  gca {\n    ...masterLogUser\n  }\n  pilot {\n    ...masterLogUser\n  }\n  loadMaster {\n    ...masterLogUser\n  }\n  slots {\n    ...masterLogSlot\n  }\n}\n    ${MasterLogAircraftFragmentDoc}\n${MasterLogUserFragmentDoc}\n${MasterLogSlotFragmentDoc}`;\nexport const LocationFragmentDoc = gql`\n    fragment location on GeocodedLocation {\n  id\n  lat\n  lng\n  formattedString\n}\n    `;\nexport const MasterLogEntryFragmentDoc = gql`\n    fragment masterLogEntry on MasterLogEntry {\n  id\n  date\n  notes\n  downloadUrl\n  dzso {\n    ...masterLogUser\n  }\n  loads {\n    ...masterLogLoad\n  }\n  location {\n    ...location\n  }\n}\n    ${MasterLogUserFragmentDoc}\n${MasterLogLoadFragmentDoc}\n${LocationFragmentDoc}`;\nexport const RigInspectionDetailedFragmentDoc = gql`\n    fragment rigInspectionDetailed on RigInspection {\n  ...rigInspectionEssentials\n  rig {\n    ...userRigDetailed\n  }\n}\n    ${RigInspectionEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const RigInspectionMutationEssentialsFragmentDoc = gql`\n    fragment rigInspectionMutationEssentials on RigInspection {\n  ...rigInspectionDetailed\n  formTemplate {\n    id\n    definition\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n    rigInspections {\n      ...rigInspectionEssentials\n    }\n  }\n}\n    ${RigInspectionDetailedFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\nexport const RoleDetailedFragmentDoc = gql`\n    fragment roleDetailed on UserRole {\n  ...roleEssentials\n  permissions\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const LoadDetailsFragmentDoc = gql`\n    fragment loadDetails on Load {\n  ...loadEssentials\n  plane {\n    ...planeEssentials\n  }\n  gca {\n    ...dropzoneUserEssentials\n  }\n  pilot {\n    ...dropzoneUserEssentials\n  }\n  loadMaster {\n    ...dropzoneUserEssentials\n  }\n  slots {\n    ...slotDetails\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${SlotDetailsFragmentDoc}`;\nexport const SlotExhaustiveFragmentDoc = gql`\n    fragment slotExhaustive on Slot {\n  ...slotDetails\n  dropzoneUser {\n    ...dropzoneUserDetails\n  }\n  load {\n    ...loadDetails\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}\n${LoadDetailsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TicketTypeAddonDetailsFragmentDoc = gql`\n    fragment ticketTypeAddonDetails on Extra {\n  ...ticketTypeAddonEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeAddonEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const ArchivePlaneDocument = gql`\n    mutation ArchivePlane($id: Int!) {\n  deletePlane(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type ArchivePlaneMutationFn = Apollo.MutationFunction<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\n\n/**\n * __useArchivePlaneMutation__\n *\n * To run a mutation, you first call `useArchivePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchivePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archivePlaneMutation, { data, loading, error }] = useArchivePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchivePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>(ArchivePlaneDocument, options);\n      }\nexport type ArchivePlaneMutationHookResult = ReturnType<typeof useArchivePlaneMutation>;\nexport type ArchivePlaneMutationResult = Apollo.MutationResult<Operation.ArchivePlaneMutation>;\nexport type ArchivePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\nexport const ArchiveRigDocument = gql`\n    mutation ArchiveRig($id: Int!) {\n  archiveRig(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    rig {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport type ArchiveRigMutationFn = Apollo.MutationFunction<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\n\n/**\n * __useArchiveRigMutation__\n *\n * To run a mutation, you first call `useArchiveRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveRigMutation, { data, loading, error }] = useArchiveRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>(ArchiveRigDocument, options);\n      }\nexport type ArchiveRigMutationHookResult = ReturnType<typeof useArchiveRigMutation>;\nexport type ArchiveRigMutationResult = Apollo.MutationResult<Operation.ArchiveRigMutation>;\nexport type ArchiveRigMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\nexport const ArchiveTicketTypeDocument = gql`\n    mutation ArchiveTicketType($id: Int!) {\n  archiveTicketType(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    ticketType {\n      ...ticketTypeEssentials\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\nexport type ArchiveTicketTypeMutationFn = Apollo.MutationFunction<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\n\n/**\n * __useArchiveTicketTypeMutation__\n *\n * To run a mutation, you first call `useArchiveTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveTicketTypeMutation, { data, loading, error }] = useArchiveTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>(ArchiveTicketTypeDocument, options);\n      }\nexport type ArchiveTicketTypeMutationHookResult = ReturnType<typeof useArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationResult = Apollo.MutationResult<Operation.ArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\nexport const ArchiveUserDocument = gql`\n    mutation ArchiveUser($id: Int!) {\n  deleteUser(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserEssentials\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type ArchiveUserMutationFn = Apollo.MutationFunction<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\n\n/**\n * __useArchiveUserMutation__\n *\n * To run a mutation, you first call `useArchiveUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserMutation, { data, loading, error }] = useArchiveUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>(ArchiveUserDocument, options);\n      }\nexport type ArchiveUserMutationHookResult = ReturnType<typeof useArchiveUserMutation>;\nexport type ArchiveUserMutationResult = Apollo.MutationResult<Operation.ArchiveUserMutation>;\nexport type ArchiveUserMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateAircraftDocument = gql`\n    mutation CreateAircraft($attributes: PlaneInput!) {\n  createPlane(input: {attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        planes {\n          ...planeEssentials\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type CreateAircraftMutationFn = Apollo.MutationFunction<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\n\n/**\n * __useCreateAircraftMutation__\n *\n * To run a mutation, you first call `useCreateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createAircraftMutation, { data, loading, error }] = useCreateAircraftMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>(CreateAircraftDocument, options);\n      }\nexport type CreateAircraftMutationHookResult = ReturnType<typeof useCreateAircraftMutation>;\nexport type CreateAircraftMutationResult = Apollo.MutationResult<Operation.CreateAircraftMutation>;\nexport type CreateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\nexport const CreateDropzoneDocument = gql`\n    mutation CreateDropzone($name: String!, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String) {\n  createDropzone(\n    input: {attributes: {name: $name, banner: $banner, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, lat: $lat, lng: $lng}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type CreateDropzoneMutationFn = Apollo.MutationFunction<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\n\n/**\n * __useCreateDropzoneMutation__\n *\n * To run a mutation, you first call `useCreateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createDropzoneMutation, { data, loading, error }] = useCreateDropzoneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *   },\n * });\n */\nexport function useCreateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>(CreateDropzoneDocument, options);\n      }\nexport type CreateDropzoneMutationHookResult = ReturnType<typeof useCreateDropzoneMutation>;\nexport type CreateDropzoneMutationResult = Apollo.MutationResult<Operation.CreateDropzoneMutation>;\nexport type CreateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\nexport const CreateLoadDocument = gql`\n    mutation CreateLoad($name: String, $pilot: Int, $gca: Int, $maxSlots: Int, $plane: Int, $state: LoadState) {\n  createLoad(\n    input: {attributes: {name: $name, pilot: $pilot, gca: $gca, maxSlots: $maxSlots, plane: $plane, state: $state}}\n  ) {\n    load {\n      ...loadDetails\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type CreateLoadMutationFn = Apollo.MutationFunction<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\n\n/**\n * __useCreateLoadMutation__\n *\n * To run a mutation, you first call `useCreateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createLoadMutation, { data, loading, error }] = useCreateLoadMutation({\n *   variables: {\n *      name: // value for 'name'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      maxSlots: // value for 'maxSlots'\n *      plane: // value for 'plane'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useCreateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>(CreateLoadDocument, options);\n      }\nexport type CreateLoadMutationHookResult = ReturnType<typeof useCreateLoadMutation>;\nexport type CreateLoadMutationResult = Apollo.MutationResult<Operation.CreateLoadMutation>;\nexport type CreateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: ID!, $seller: ID!, $dropzone: ID!, $title: String, $amount: Float!) {\n  createOrder(\n    input: {attributes: {dropzone: $dropzone, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...orderEssentials\n    }\n  }\n}\n    ${OrderEssentialsFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzone: // value for 'dropzone'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const CreateRigInspectionDocument = gql`\n    mutation CreateRigInspection($dropzone: ID, $rig: ID, $isOk: Boolean, $definition: String) {\n  createRigInspection(\n    input: {attributes: {dropzone: $dropzone, rig: $rig, isOk: $isOk, definition: $definition}}\n  ) {\n    rigInspection {\n      ...rigInspectionMutationEssentials\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${RigInspectionMutationEssentialsFragmentDoc}`;\nexport type CreateRigInspectionMutationFn = Apollo.MutationFunction<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\n\n/**\n * __useCreateRigInspectionMutation__\n *\n * To run a mutation, you first call `useCreateRigInspectionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigInspectionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigInspectionMutation, { data, loading, error }] = useCreateRigInspectionMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      rig: // value for 'rig'\n *      isOk: // value for 'isOk'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useCreateRigInspectionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>(CreateRigInspectionDocument, options);\n      }\nexport type CreateRigInspectionMutationHookResult = ReturnType<typeof useCreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationResult = Apollo.MutationResult<Operation.CreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\nexport const CreateTicketAddonDocument = gql`\n    mutation CreateTicketAddon($attributes: ExtraInput!) {\n  createExtra(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    extra {\n      ...ticketTypeAddonDetails\n      dropzone {\n        id\n        extras {\n          ...ticketTypeAddonDetails\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeAddonDetailsFragmentDoc}`;\nexport type CreateTicketAddonMutationFn = Apollo.MutationFunction<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\n\n/**\n * __useCreateTicketAddonMutation__\n *\n * To run a mutation, you first call `useCreateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketAddonMutation, { data, loading, error }] = useCreateTicketAddonMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>(CreateTicketAddonDocument, options);\n      }\nexport type CreateTicketAddonMutationHookResult = ReturnType<typeof useCreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationResult = Apollo.MutationResult<Operation.CreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\nexport const CreateTicketTypeDocument = gql`\n    mutation CreateTicketType($attributes: TicketTypeInput!) {\n  createTicketType(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        id\n        ticketTypes {\n          id\n          name\n          altitude\n          cost\n          allowManifestingSelf\n          extras {\n            id\n            name\n            cost\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type CreateTicketTypeMutationFn = Apollo.MutationFunction<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\n\n/**\n * __useCreateTicketTypeMutation__\n *\n * To run a mutation, you first call `useCreateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketTypeMutation, { data, loading, error }] = useCreateTicketTypeMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>(CreateTicketTypeDocument, options);\n      }\nexport type CreateTicketTypeMutationHookResult = ReturnType<typeof useCreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationResult = Apollo.MutationResult<Operation.CreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\nexport const CreateGhostDocument = gql`\n    mutation CreateGhost($name: String!, $phone: String, $email: String!, $federationNumber: String, $role: Int!, $license: Int, $dropzone: Int!, $exitWeight: Float!) {\n  createGhost(\n    input: {attributes: {role: $role, federationNumber: $federationNumber, name: $name, phone: $phone, email: $email, dropzone: $dropzone, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    user {\n      ...userDetailed\n    }\n  }\n}\n    ${UserDetailedFragmentDoc}`;\nexport type CreateGhostMutationFn = Apollo.MutationFunction<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\n\n/**\n * __useCreateGhostMutation__\n *\n * To run a mutation, you first call `useCreateGhostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateGhostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createGhostMutation, { data, loading, error }] = useCreateGhostMutation({\n *   variables: {\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      federationNumber: // value for 'federationNumber'\n *      role: // value for 'role'\n *      license: // value for 'license'\n *      dropzone: // value for 'dropzone'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useCreateGhostMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>(CreateGhostDocument, options);\n      }\nexport type CreateGhostMutationHookResult = ReturnType<typeof useCreateGhostMutation>;\nexport type CreateGhostMutationResult = Apollo.MutationResult<Operation.CreateGhostMutation>;\nexport type CreateGhostMutationOptions = Apollo.BaseMutationOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\nexport const DeleteSlotDocument = gql`\n    mutation DeleteSlot($id: Int!) {\n  deleteSlot(input: {id: $id}) {\n    slot {\n      ...slotExhaustive\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type DeleteSlotMutationFn = Apollo.MutationFunction<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\n\n/**\n * __useDeleteSlotMutation__\n *\n * To run a mutation, you first call `useDeleteSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteSlotMutation, { data, loading, error }] = useDeleteSlotMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>(DeleteSlotDocument, options);\n      }\nexport type DeleteSlotMutationHookResult = ReturnType<typeof useDeleteSlotMutation>;\nexport type DeleteSlotMutationResult = Apollo.MutationResult<Operation.DeleteSlotMutation>;\nexport type DeleteSlotMutationOptions = Apollo.BaseMutationOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const GrantPermissionDocument = gql`\n    mutation GrantPermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  grantPermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type GrantPermissionMutationFn = Apollo.MutationFunction<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\n\n/**\n * __useGrantPermissionMutation__\n *\n * To run a mutation, you first call `useGrantPermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useGrantPermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [grantPermissionMutation, { data, loading, error }] = useGrantPermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useGrantPermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>(GrantPermissionDocument, options);\n      }\nexport type GrantPermissionMutationHookResult = ReturnType<typeof useGrantPermissionMutation>;\nexport type GrantPermissionMutationResult = Apollo.MutationResult<Operation.GrantPermissionMutation>;\nexport type GrantPermissionMutationOptions = Apollo.BaseMutationOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federation: ID!, $uid: String, $license: ID) {\n  joinFederation(\n    input: {attributes: {federation: $federation, uid: $uid, license: $license}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federation: // value for 'federation'\n *      uid: // value for 'uid'\n *      license: // value for 'license'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  userLogin(email: $email, password: $password) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<Operation.LoginMutation, Operation.LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginMutation, Operation.LoginMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginMutation, Operation.LoginMutationVariables>(LoginDocument, options);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<Operation.LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<Operation.LoginMutation, Operation.LoginMutationVariables>;\nexport const LoginWithAppleDocument = gql`\n    mutation LoginWithApple($token: String!, $userIdentity: String!, $pushToken: String) {\n  loginWithApple(\n    token: $token\n    userIdentity: $userIdentity\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithAppleMutationFn = Apollo.MutationFunction<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\n\n/**\n * __useLoginWithAppleMutation__\n *\n * To run a mutation, you first call `useLoginWithAppleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithAppleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithAppleMutation, { data, loading, error }] = useLoginWithAppleMutation({\n *   variables: {\n *      token: // value for 'token'\n *      userIdentity: // value for 'userIdentity'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithAppleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>(LoginWithAppleDocument, options);\n      }\nexport type LoginWithAppleMutationHookResult = ReturnType<typeof useLoginWithAppleMutation>;\nexport type LoginWithAppleMutationResult = Apollo.MutationResult<Operation.LoginWithAppleMutation>;\nexport type LoginWithAppleMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\nexport const LoginWithFacebookDocument = gql`\n    mutation LoginWithFacebook($token: String!, $pushToken: String) {\n  loginWithFacebook(\n    token: $token\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithFacebookMutationFn = Apollo.MutationFunction<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\n\n/**\n * __useLoginWithFacebookMutation__\n *\n * To run a mutation, you first call `useLoginWithFacebookMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithFacebookMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithFacebookMutation, { data, loading, error }] = useLoginWithFacebookMutation({\n *   variables: {\n *      token: // value for 'token'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithFacebookMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>(LoginWithFacebookDocument, options);\n      }\nexport type LoginWithFacebookMutationHookResult = ReturnType<typeof useLoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationResult = Apollo.MutationResult<Operation.LoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\nexport const ManifestGroupDocument = gql`\n    mutation ManifestGroup($jumpType: ID, $extras: [ID!], $load: ID, $ticketType: ID, $groupNumber: Int, $userGroup: [SlotUser!]!) {\n  createSlots(\n    input: {attributes: {jumpType: $jumpType, groupNumber: $groupNumber, extras: $extras, load: $load, ticketType: $ticketType, userGroup: $userGroup}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type ManifestGroupMutationFn = Apollo.MutationFunction<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\n\n/**\n * __useManifestGroupMutation__\n *\n * To run a mutation, you first call `useManifestGroupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestGroupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestGroupMutation, { data, loading, error }] = useManifestGroupMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      ticketType: // value for 'ticketType'\n *      groupNumber: // value for 'groupNumber'\n *      userGroup: // value for 'userGroup'\n *   },\n * });\n */\nexport function useManifestGroupMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>(ManifestGroupDocument, options);\n      }\nexport type ManifestGroupMutationHookResult = ReturnType<typeof useManifestGroupMutation>;\nexport type ManifestGroupMutationResult = Apollo.MutationResult<Operation.ManifestGroupMutation>;\nexport type ManifestGroupMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\nexport const ManifestUserDocument = gql`\n    mutation ManifestUser($jumpType: ID, $extras: [ID!], $load: ID, $rig: ID, $ticketType: ID, $dropzoneUser: ID, $exitWeight: Float, $passengerName: String, $groupNumber: Int, $passengerExitWeight: Float) {\n  createSlot(\n    input: {attributes: {jumpType: $jumpType, extras: $extras, load: $load, rig: $rig, groupNumber: $groupNumber, ticketType: $ticketType, dropzoneUser: $dropzoneUser, exitWeight: $exitWeight, passengerExitWeight: $passengerExitWeight, passengerName: $passengerName}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    slot {\n      ...slotExhaustive\n    }\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type ManifestUserMutationFn = Apollo.MutationFunction<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\n\n/**\n * __useManifestUserMutation__\n *\n * To run a mutation, you first call `useManifestUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestUserMutation, { data, loading, error }] = useManifestUserMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      rig: // value for 'rig'\n *      ticketType: // value for 'ticketType'\n *      dropzoneUser: // value for 'dropzoneUser'\n *      exitWeight: // value for 'exitWeight'\n *      passengerName: // value for 'passengerName'\n *      groupNumber: // value for 'groupNumber'\n *      passengerExitWeight: // value for 'passengerExitWeight'\n *   },\n * });\n */\nexport function useManifestUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>(ManifestUserDocument, options);\n      }\nexport type ManifestUserMutationHookResult = ReturnType<typeof useManifestUserMutation>;\nexport type ManifestUserMutationResult = Apollo.MutationResult<Operation.ManifestUserMutation>;\nexport type ManifestUserMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\nexport const MoveSlotDocument = gql`\n    mutation MoveSlot($sourceSlot: Int!, $targetSlot: Int, $targetLoad: Int!) {\n  moveSlot(\n    input: {sourceSlot: $sourceSlot, targetSlot: $targetSlot, targetLoad: $targetLoad}\n  ) {\n    loads {\n      ...loadDetails\n    }\n    errors\n    fieldErrors {\n      field\n      message\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type MoveSlotMutationFn = Apollo.MutationFunction<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\n\n/**\n * __useMoveSlotMutation__\n *\n * To run a mutation, you first call `useMoveSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMoveSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [moveSlotMutation, { data, loading, error }] = useMoveSlotMutation({\n *   variables: {\n *      sourceSlot: // value for 'sourceSlot'\n *      targetSlot: // value for 'targetSlot'\n *      targetLoad: // value for 'targetLoad'\n *   },\n * });\n */\nexport function useMoveSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>(MoveSlotDocument, options);\n      }\nexport type MoveSlotMutationHookResult = ReturnType<typeof useMoveSlotMutation>;\nexport type MoveSlotMutationResult = Apollo.MutationResult<Operation.MoveSlotMutation>;\nexport type MoveSlotMutationOptions = Apollo.BaseMutationOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\nexport const RecoverPasswordDocument = gql`\n    mutation RecoverPassword($email: String!, $redirectUrl: String!) {\n  userSendPasswordResetWithToken(email: $email, redirectUrl: $redirectUrl) {\n    message\n  }\n}\n    `;\nexport type RecoverPasswordMutationFn = Apollo.MutationFunction<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\n\n/**\n * __useRecoverPasswordMutation__\n *\n * To run a mutation, you first call `useRecoverPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRecoverPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [recoverPasswordMutation, { data, loading, error }] = useRecoverPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      redirectUrl: // value for 'redirectUrl'\n *   },\n * });\n */\nexport function useRecoverPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>(RecoverPasswordDocument, options);\n      }\nexport type RecoverPasswordMutationHookResult = ReturnType<typeof useRecoverPasswordMutation>;\nexport type RecoverPasswordMutationResult = Apollo.MutationResult<Operation.RecoverPasswordMutation>;\nexport type RecoverPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const RevokePermissionDocument = gql`\n    mutation RevokePermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  revokePermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type RevokePermissionMutationFn = Apollo.MutationFunction<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\n\n/**\n * __useRevokePermissionMutation__\n *\n * To run a mutation, you first call `useRevokePermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRevokePermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [revokePermissionMutation, { data, loading, error }] = useRevokePermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useRevokePermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>(RevokePermissionDocument, options);\n      }\nexport type RevokePermissionMutationHookResult = ReturnType<typeof useRevokePermissionMutation>;\nexport type RevokePermissionMutationResult = Apollo.MutationResult<Operation.RevokePermissionMutation>;\nexport type RevokePermissionMutationOptions = Apollo.BaseMutationOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\nexport const UpdateAircraftDocument = gql`\n    mutation UpdateAircraft($id: Int!, $attributes: PlaneInput!) {\n  updatePlane(input: {id: $id, attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        name\n        planes {\n          id\n          name\n          registration\n          minSlots\n          maxSlots\n          hours\n          nextMaintenanceHours\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type UpdateAircraftMutationFn = Apollo.MutationFunction<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\n\n/**\n * __useUpdateAircraftMutation__\n *\n * To run a mutation, you first call `useUpdateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateAircraftMutation, { data, loading, error }] = useUpdateAircraftMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>(UpdateAircraftDocument, options);\n      }\nexport type UpdateAircraftMutationHookResult = ReturnType<typeof useUpdateAircraftMutation>;\nexport type UpdateAircraftMutationResult = Apollo.MutationResult<Operation.UpdateAircraftMutation>;\nexport type UpdateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\nexport const UpdateDropzoneDocument = gql`\n    mutation UpdateDropzone($id: Int!, $name: String!, $requestPublication: Boolean, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String, $isCreditSystemEnabled: Boolean, $isPublic: Boolean) {\n  updateDropzone(\n    input: {id: $id, attributes: {name: $name, banner: $banner, lat: $lat, lng: $lng, requestPublication: $requestPublication, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, isCreditSystemEnabled: $isCreditSystemEnabled, isPublic: $isPublic}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type UpdateDropzoneMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\n\n/**\n * __useUpdateDropzoneMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneMutation, { data, loading, error }] = useUpdateDropzoneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      requestPublication: // value for 'requestPublication'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *      isCreditSystemEnabled: // value for 'isCreditSystemEnabled'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useUpdateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>(UpdateDropzoneDocument, options);\n      }\nexport type UpdateDropzoneMutationHookResult = ReturnType<typeof useUpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\nexport const UpdateDropzoneUserDocument = gql`\n    mutation UpdateDropzoneUser($dropzoneUserId: ID!, $attributes: DropzoneUserInput!) {\n  updateDropzoneUser(\n    input: {dropzoneUser: $dropzoneUserId, attributes: $attributes}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateDropzoneUserMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\n\n/**\n * __useUpdateDropzoneUserMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneUserMutation, { data, loading, error }] = useUpdateDropzoneUserMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateDropzoneUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>(UpdateDropzoneUserDocument, options);\n      }\nexport type UpdateDropzoneUserMutationHookResult = ReturnType<typeof useUpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\nexport const UpdateLoadDocument = gql`\n    mutation UpdateLoad($id: Int!, $pilot: Int, $gca: Int, $plane: Int, $loadMaster: Int, $dispatchAt: ISO8601DateTime) {\n  updateLoad(\n    input: {id: $id, attributes: {pilot: $pilot, gca: $gca, plane: $plane, loadMaster: $loadMaster, dispatchAt: $dispatchAt}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type UpdateLoadMutationFn = Apollo.MutationFunction<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\n\n/**\n * __useUpdateLoadMutation__\n *\n * To run a mutation, you first call `useUpdateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLoadMutation, { data, loading, error }] = useUpdateLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      plane: // value for 'plane'\n *      loadMaster: // value for 'loadMaster'\n *      dispatchAt: // value for 'dispatchAt'\n *   },\n * });\n */\nexport function useUpdateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>(UpdateLoadDocument, options);\n      }\nexport type UpdateLoadMutationHookResult = ReturnType<typeof useUpdateLoadMutation>;\nexport type UpdateLoadMutationResult = Apollo.MutationResult<Operation.UpdateLoadMutation>;\nexport type UpdateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation UpdateLostPassword($password: String!, $passwordConfirmation: String!, $token: String!) {\n  userUpdatePasswordWithToken(\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    resetPasswordToken: $token\n  ) {\n    authenticatable {\n      ...userEssentials\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    ${UserEssentialsFragmentDoc}`;\nexport type UpdateLostPasswordMutationFn = Apollo.MutationFunction<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, options);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = Apollo.MutationResult<Operation.UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\nexport const UpdateMasterLogDocument = gql`\n    mutation UpdateMasterLog($date: ISO8601Date!, $dropzone: ID!, $attributes: MasterLogInput!) {\n  updateMasterLog(\n    input: {dropzone: $dropzone, date: $date, attributes: $attributes}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    masterLog {\n      ...masterLogEntry\n    }\n  }\n}\n    ${MasterLogEntryFragmentDoc}`;\nexport type UpdateMasterLogMutationFn = Apollo.MutationFunction<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>;\n\n/**\n * __useUpdateMasterLogMutation__\n *\n * To run a mutation, you first call `useUpdateMasterLogMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateMasterLogMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateMasterLogMutation, { data, loading, error }] = useUpdateMasterLogMutation({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateMasterLogMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>(UpdateMasterLogDocument, options);\n      }\nexport type UpdateMasterLogMutationHookResult = ReturnType<typeof useUpdateMasterLogMutation>;\nexport type UpdateMasterLogMutationResult = Apollo.MutationResult<Operation.UpdateMasterLogMutation>;\nexport type UpdateMasterLogMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $isPublic: Boolean, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, isPublic: $isPublic, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      isPublic: // value for 'isPublic'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UpdateRigInspectionTemplateDocument = gql`\n    mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n  updateFormTemplate(\n    input: {id: $formId, attributes: {dropzoneId: $dropzoneId, definition: $definition}}\n  ) {\n    formTemplate {\n      id\n      name\n      definition\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRigInspectionTemplateMutationFn = Apollo.MutationFunction<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\n\n/**\n * __useUpdateRigInspectionTemplateMutation__\n *\n * To run a mutation, you first call `useUpdateRigInspectionTemplateMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigInspectionTemplateMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigInspectionTemplateMutation, { data, loading, error }] = useUpdateRigInspectionTemplateMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      formId: // value for 'formId'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useUpdateRigInspectionTemplateMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>(UpdateRigInspectionTemplateDocument, options);\n      }\nexport type UpdateRigInspectionTemplateMutationHookResult = ReturnType<typeof useUpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationResult = Apollo.MutationResult<Operation.UpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\nexport const UpdateRoleDocument = gql`\n    mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n  updateRole(input: {id: $roleId, permission: $permissionName, enabled: $enabled}) {\n    role {\n      id\n      name\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRoleMutationFn = Apollo.MutationFunction<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\n\n/**\n * __useUpdateRoleMutation__\n *\n * To run a mutation, you first call `useUpdateRoleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRoleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRoleMutation, { data, loading, error }] = useUpdateRoleMutation({\n *   variables: {\n *      roleId: // value for 'roleId'\n *      permissionName: // value for 'permissionName'\n *      enabled: // value for 'enabled'\n *   },\n * });\n */\nexport function useUpdateRoleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>(UpdateRoleDocument, options);\n      }\nexport type UpdateRoleMutationHookResult = ReturnType<typeof useUpdateRoleMutation>;\nexport type UpdateRoleMutationResult = Apollo.MutationResult<Operation.UpdateRoleMutation>;\nexport type UpdateRoleMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\nexport const UpdateTicketAddonDocument = gql`\n    mutation UpdateTicketAddon($id: Int!, $attributes: ExtraInput!) {\n  updateExtra(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      message\n      field\n    }\n    extra {\n      ...ticketTypeExtraDetailed\n    }\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\nexport type UpdateTicketAddonMutationFn = Apollo.MutationFunction<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\n\n/**\n * __useUpdateTicketAddonMutation__\n *\n * To run a mutation, you first call `useUpdateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketAddonMutation, { data, loading, error }] = useUpdateTicketAddonMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>(UpdateTicketAddonDocument, options);\n      }\nexport type UpdateTicketAddonMutationHookResult = ReturnType<typeof useUpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationResult = Apollo.MutationResult<Operation.UpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\nexport const UpdateTicketTypeDocument = gql`\n    mutation UpdateTicketType($id: Int!, $attributes: TicketTypeInput!) {\n  updateTicketType(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      ...ticketTypeEssentials\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        ...dropzoneEssentials\n        ticketTypes {\n          ...ticketTypeEssentials\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}`;\nexport type UpdateTicketTypeMutationFn = Apollo.MutationFunction<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\n\n/**\n * __useUpdateTicketTypeMutation__\n *\n * To run a mutation, you first call `useUpdateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketTypeMutation, { data, loading, error }] = useUpdateTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>(UpdateTicketTypeDocument, options);\n      }\nexport type UpdateTicketTypeMutationHookResult = ReturnType<typeof useUpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationResult = Apollo.MutationResult<Operation.UpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\nexport const UpdateUserDocument = gql`\n    mutation UpdateUser($dropzoneUser: ID, $name: String, $phone: String, $email: String, $image: String, $pushToken: String, $nickname: String, $license: Int, $exitWeight: Float) {\n  updateUser(\n    input: {dropzoneUser: $dropzoneUser, attributes: {pushToken: $pushToken, name: $name, phone: $phone, email: $email, image: $image, nickname: $nickname, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateUserMutationFn = Apollo.MutationFunction<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      dropzoneUser: // value for 'dropzoneUser'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      image: // value for 'image'\n *      pushToken: // value for 'pushToken'\n *      nickname: // value for 'nickname'\n *      license: // value for 'license'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useUpdateUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>(UpdateUserDocument, options);\n      }\nexport type UpdateUserMutationHookResult = ReturnType<typeof useUpdateUserMutation>;\nexport type UpdateUserMutationResult = Apollo.MutationResult<Operation.UpdateUserMutation>;\nexport type UpdateUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\nexport const UpdateVisibilityDocument = gql`\n    mutation UpdateVisibility($dropzone: ID!, $event: DropzoneStateEvent!) {\n  updateVisibility(input: {dropzone: $dropzone, event: $event}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzone {\n      ...dropzoneDetailed\n    }\n  }\n}\n    ${DropzoneDetailedFragmentDoc}`;\nexport type UpdateVisibilityMutationFn = Apollo.MutationFunction<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\n\n/**\n * __useUpdateVisibilityMutation__\n *\n * To run a mutation, you first call `useUpdateVisibilityMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateVisibilityMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateVisibilityMutation, { data, loading, error }] = useUpdateVisibilityMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      event: // value for 'event'\n *   },\n * });\n */\nexport function useUpdateVisibilityMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>(UpdateVisibilityDocument, options);\n      }\nexport type UpdateVisibilityMutationHookResult = ReturnType<typeof useUpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationResult = Apollo.MutationResult<Operation.UpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userRegister(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const ActivityDocument = gql`\n    query Activity($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!]) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n  ) {\n    edges {\n      node {\n        ...activityEssentials\n      }\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}`;\n\n/**\n * __useActivityQuery__\n *\n * To run a query within a React component, call `useActivityQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *   },\n * });\n */\nexport function useActivityQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n      }\nexport function useActivityLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n        }\nexport type ActivityQueryHookResult = ReturnType<typeof useActivityQuery>;\nexport type ActivityLazyQueryHookResult = ReturnType<typeof useActivityLazyQuery>;\nexport type ActivityQueryResult = Apollo.QueryResult<Operation.ActivityQuery, Operation.ActivityQueryVariables>;\nexport const ActivityDetailsDocument = gql`\n    query ActivityDetails($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!], $after: String) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n    after: $after\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ...activityDetails\n      }\n    }\n  }\n}\n    ${ActivityDetailsFragmentDoc}`;\n\n/**\n * __useActivityDetailsQuery__\n *\n * To run a query within a React component, call `useActivityDetailsQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityDetailsQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useActivityDetailsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n      }\nexport function useActivityDetailsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n        }\nexport type ActivityDetailsQueryHookResult = ReturnType<typeof useActivityDetailsQuery>;\nexport type ActivityDetailsLazyQueryHookResult = ReturnType<typeof useActivityDetailsLazyQuery>;\nexport type ActivityDetailsQueryResult = Apollo.QueryResult<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>;\nexport const CurrentUserDocument = gql`\n    query CurrentUser {\n  currentUser {\n    ...currentUser\n  }\n}\n    ${CurrentUserFragmentDoc}`;\n\n/**\n * __useCurrentUserQuery__\n *\n * To run a query within a React component, call `useCurrentUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentUserQuery(baseOptions?: Apollo.QueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n      }\nexport function useCurrentUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n        }\nexport type CurrentUserQueryHookResult = ReturnType<typeof useCurrentUserQuery>;\nexport type CurrentUserLazyQueryHookResult = ReturnType<typeof useCurrentUserLazyQuery>;\nexport type CurrentUserQueryResult = Apollo.QueryResult<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>;\nexport const DropzoneDocument = gql`\n    query Dropzone($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useDropzoneQuery__\n *\n * To run a query within a React component, call `useDropzoneQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n      }\nexport function useDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n        }\nexport type DropzoneQueryHookResult = ReturnType<typeof useDropzoneQuery>;\nexport type DropzoneLazyQueryHookResult = ReturnType<typeof useDropzoneLazyQuery>;\nexport type DropzoneQueryResult = Apollo.QueryResult<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>;\nexport const DropzoneStatisticsDocument = gql`\n    query DropzoneStatistics($dropzoneId: ID!, $timeRange: TimeRangeInput) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneStatistics\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzoneStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzoneStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneStatisticsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      timeRange: // value for 'timeRange'\n *   },\n * });\n */\nexport function useDropzoneStatisticsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n      }\nexport function useDropzoneStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n        }\nexport type DropzoneStatisticsQueryHookResult = ReturnType<typeof useDropzoneStatisticsQuery>;\nexport type DropzoneStatisticsLazyQueryHookResult = ReturnType<typeof useDropzoneStatisticsLazyQuery>;\nexport type DropzoneStatisticsQueryResult = Apollo.QueryResult<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>;\nexport const DropzonesStatisticsDocument = gql`\n    query DropzonesStatistics($timeRange: TimeRangeInput, $after: String) {\n  dropzones(after: $after) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...dropzoneStatistics\n      }\n    }\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzonesStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzonesStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesStatisticsQuery({\n *   variables: {\n *      timeRange: // value for 'timeRange'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzonesStatisticsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n      }\nexport function useDropzonesStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n        }\nexport type DropzonesStatisticsQueryHookResult = ReturnType<typeof useDropzonesStatisticsQuery>;\nexport type DropzonesStatisticsLazyQueryHookResult = ReturnType<typeof useDropzonesStatisticsLazyQuery>;\nexport type DropzonesStatisticsQueryResult = Apollo.QueryResult<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>;\nexport const DropzoneRigsDocument = gql`\n    query DropzoneRigs($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneRigsQuery__\n *\n * To run a query within a React component, call `useDropzoneRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneRigsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n      }\nexport function useDropzoneRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n        }\nexport type DropzoneRigsQueryHookResult = ReturnType<typeof useDropzoneRigsQuery>;\nexport type DropzoneRigsLazyQueryHookResult = ReturnType<typeof useDropzoneRigsLazyQuery>;\nexport type DropzoneRigsQueryResult = Apollo.QueryResult<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>;\nexport const DropzonePermissionsDocument = gql`\n    query DropzonePermissions($id: ID!) {\n  dropzone(id: $id) {\n    ...dropzoneEssentials\n    roles {\n      ...roleDetailed\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${RoleDetailedFragmentDoc}`;\n\n/**\n * __useDropzonePermissionsQuery__\n *\n * To run a query within a React component, call `useDropzonePermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonePermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonePermissionsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzonePermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n      }\nexport function useDropzonePermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n        }\nexport type DropzonePermissionsQueryHookResult = ReturnType<typeof useDropzonePermissionsQuery>;\nexport type DropzonePermissionsLazyQueryHookResult = ReturnType<typeof useDropzonePermissionsLazyQuery>;\nexport type DropzonePermissionsQueryResult = Apollo.QueryResult<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: ID!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const DropzoneUsersDocument = gql`\n    query DropzoneUsers($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n      }\nexport function useDropzoneUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n        }\nexport type DropzoneUsersQueryHookResult = ReturnType<typeof useDropzoneUsersQuery>;\nexport type DropzoneUsersLazyQueryHookResult = ReturnType<typeof useDropzoneUsersLazyQuery>;\nexport type DropzoneUsersQueryResult = Apollo.QueryResult<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>;\nexport const DropzoneUsersDetailedDocument = gql`\n    query DropzoneUsersDetailed($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersDetailedQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n      }\nexport function useDropzoneUsersDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n        }\nexport type DropzoneUsersDetailedQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedQuery>;\nexport type DropzoneUsersDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedLazyQuery>;\nexport type DropzoneUsersDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>;\nexport const DropzoneUserDocument = gql`\n    query DropzoneUser($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUserQuery__\n *\n * To run a query within a React component, call `useDropzoneUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n      }\nexport function useDropzoneUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n        }\nexport type DropzoneUserQueryHookResult = ReturnType<typeof useDropzoneUserQuery>;\nexport type DropzoneUserLazyQueryHookResult = ReturnType<typeof useDropzoneUserLazyQuery>;\nexport type DropzoneUserQueryResult = Apollo.QueryResult<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>;\nexport const DropzoneUserDetailedDocument = gql`\n    query DropzoneUserDetailed($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserDetails\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useDropzoneUserDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUserDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserDetailedQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n      }\nexport function useDropzoneUserDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n        }\nexport type DropzoneUserDetailedQueryHookResult = ReturnType<typeof useDropzoneUserDetailedQuery>;\nexport type DropzoneUserDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUserDetailedLazyQuery>;\nexport type DropzoneUserDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>;\nexport const DropzoneUserProfileDocument = gql`\n    query DropzoneUserProfile($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserProfile\n  }\n}\n    ${DropzoneUserProfileFragmentDoc}`;\n\n/**\n * __useDropzoneUserProfileQuery__\n *\n * To run a query within a React component, call `useDropzoneUserProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserProfileQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserProfileQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n      }\nexport function useDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n        }\nexport type DropzoneUserProfileQueryHookResult = ReturnType<typeof useDropzoneUserProfileQuery>;\nexport type DropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useDropzoneUserProfileLazyQuery>;\nexport type DropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>;\nexport const DropzonesDocument = gql`\n    query Dropzones($state: [DropzoneState!]) {\n  dropzones(state: $state) {\n    edges {\n      node {\n        ...dropzoneEssentials\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzonesQuery__\n *\n * To run a query within a React component, call `useDropzonesQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesQuery({\n *   variables: {\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useDropzonesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n      }\nexport function useDropzonesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n        }\nexport type DropzonesQueryHookResult = ReturnType<typeof useDropzonesQuery>;\nexport type DropzonesLazyQueryHookResult = ReturnType<typeof useDropzonesLazyQuery>;\nexport type DropzonesQueryResult = Apollo.QueryResult<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>;\nexport const TicketTypeExtrasDocument = gql`\n    query TicketTypeExtras($dropzoneId: ID!) {\n  extras(dropzone: $dropzoneId) {\n    ...ticketTypeExtraDetailed\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\n\n/**\n * __useTicketTypeExtrasQuery__\n *\n * To run a query within a React component, call `useTicketTypeExtrasQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypeExtrasQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypeExtrasQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useTicketTypeExtrasQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n      }\nexport function useTicketTypeExtrasLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n        }\nexport type TicketTypeExtrasQueryHookResult = ReturnType<typeof useTicketTypeExtrasQuery>;\nexport type TicketTypeExtrasLazyQueryHookResult = ReturnType<typeof useTicketTypeExtrasLazyQuery>;\nexport type TicketTypeExtrasQueryResult = Apollo.QueryResult<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>;\nexport const FederationsDocument = gql`\n    query Federations {\n  federations {\n    ...federationEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}`;\n\n/**\n * __useFederationsQuery__\n *\n * To run a query within a React component, call `useFederationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useFederationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFederationsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useFederationsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n      }\nexport function useFederationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n        }\nexport type FederationsQueryHookResult = ReturnType<typeof useFederationsQuery>;\nexport type FederationsLazyQueryHookResult = ReturnType<typeof useFederationsLazyQuery>;\nexport type FederationsQueryResult = Apollo.QueryResult<Operation.FederationsQuery, Operation.FederationsQueryVariables>;\nexport const AddressToLocationDocument = gql`\n    query AddressToLocation($search: String!) {\n  geocode(search: $search) {\n    formattedString\n    id\n    lat\n    lng\n  }\n}\n    `;\n\n/**\n * __useAddressToLocationQuery__\n *\n * To run a query within a React component, call `useAddressToLocationQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressToLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressToLocationQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useAddressToLocationQuery(baseOptions: Apollo.QueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n      }\nexport function useAddressToLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n        }\nexport type AddressToLocationQueryHookResult = ReturnType<typeof useAddressToLocationQuery>;\nexport type AddressToLocationLazyQueryHookResult = ReturnType<typeof useAddressToLocationLazyQuery>;\nexport type AddressToLocationQueryResult = Apollo.QueryResult<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>;\nexport const JumpTypesDocument = gql`\n    query JumpTypes($allowedForDropzoneUserIds: [Int!]) {\n  jumpTypes(dropzoneUsers: $allowedForDropzoneUserIds) {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}`;\n\n/**\n * __useJumpTypesQuery__\n *\n * To run a query within a React component, call `useJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useJumpTypesQuery({\n *   variables: {\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *   },\n * });\n */\nexport function useJumpTypesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n      }\nexport function useJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n        }\nexport type JumpTypesQueryHookResult = ReturnType<typeof useJumpTypesQuery>;\nexport type JumpTypesLazyQueryHookResult = ReturnType<typeof useJumpTypesLazyQuery>;\nexport type JumpTypesQueryResult = Apollo.QueryResult<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>;\nexport const AllowedJumpTypesDocument = gql`\n    query AllowedJumpTypes($dropzoneId: ID!, $allowedForDropzoneUserIds: [Int!]!, $isPublic: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    allowedJumpTypes(userId: $allowedForDropzoneUserIds) {\n      ...jumpTypeEssentials\n    }\n    ticketTypes(isPublic: $isPublic) {\n      ...ticketTypeEssentials\n    }\n  }\n  jumpTypes {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedJumpTypesQuery__\n *\n * To run a query within a React component, call `useAllowedJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedJumpTypesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useAllowedJumpTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n      }\nexport function useAllowedJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n        }\nexport type AllowedJumpTypesQueryHookResult = ReturnType<typeof useAllowedJumpTypesQuery>;\nexport type AllowedJumpTypesLazyQueryHookResult = ReturnType<typeof useAllowedJumpTypesLazyQuery>;\nexport type AllowedJumpTypesQueryResult = Apollo.QueryResult<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>;\nexport const LicensesDocument = gql`\n    query Licenses($federationId: Int) {\n  licenses(federationId: $federationId) {\n    ...licenseDetails\n  }\n}\n    ${LicenseDetailsFragmentDoc}`;\n\n/**\n * __useLicensesQuery__\n *\n * To run a query within a React component, call `useLicensesQuery` and pass it any options that fit your needs.\n * When your component renders, `useLicensesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLicensesQuery({\n *   variables: {\n *      federationId: // value for 'federationId'\n *   },\n * });\n */\nexport function useLicensesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n      }\nexport function useLicensesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n        }\nexport type LicensesQueryHookResult = ReturnType<typeof useLicensesQuery>;\nexport type LicensesLazyQueryHookResult = ReturnType<typeof useLicensesLazyQuery>;\nexport type LicensesQueryResult = Apollo.QueryResult<Operation.LicensesQuery, Operation.LicensesQueryVariables>;\nexport const LoadDocument = gql`\n    query Load($id: ID!) {\n  load(id: $id) {\n    ...loadDetails\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadQuery__\n *\n * To run a query within a React component, call `useLoadQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n      }\nexport function useLoadLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n        }\nexport type LoadQueryHookResult = ReturnType<typeof useLoadQuery>;\nexport type LoadLazyQueryHookResult = ReturnType<typeof useLoadLazyQuery>;\nexport type LoadQueryResult = Apollo.QueryResult<Operation.LoadQuery, Operation.LoadQueryVariables>;\nexport const LoadsDocument = gql`\n    query Loads($date: ISO8601Date, $dropzone: ID!) {\n  loads(date: $date, dropzone: $dropzone) {\n    edges {\n      node {\n        ...loadEssentials\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}`;\n\n/**\n * __useLoadsQuery__\n *\n * To run a query within a React component, call `useLoadsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadsQuery({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *   },\n * });\n */\nexport function useLoadsQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n      }\nexport function useLoadsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n        }\nexport type LoadsQueryHookResult = ReturnType<typeof useLoadsQuery>;\nexport type LoadsLazyQueryHookResult = ReturnType<typeof useLoadsLazyQuery>;\nexport type LoadsQueryResult = Apollo.QueryResult<Operation.LoadsQuery, Operation.LoadsQueryVariables>;\nexport const MasterLogDocument = gql`\n    query MasterLog($dropzoneId: ID!, $date: ISO8601Date!) {\n  masterLog(dropzone: $dropzoneId, date: $date) {\n    ...masterLogEntry\n  }\n}\n    ${MasterLogEntryFragmentDoc}`;\n\n/**\n * __useMasterLogQuery__\n *\n * To run a query within a React component, call `useMasterLogQuery` and pass it any options that fit your needs.\n * When your component renders, `useMasterLogQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMasterLogQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      date: // value for 'date'\n *   },\n * });\n */\nexport function useMasterLogQuery(baseOptions: Apollo.QueryHookOptions<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>(MasterLogDocument, options);\n      }\nexport function useMasterLogLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>(MasterLogDocument, options);\n        }\nexport type MasterLogQueryHookResult = ReturnType<typeof useMasterLogQuery>;\nexport type MasterLogLazyQueryHookResult = ReturnType<typeof useMasterLogLazyQuery>;\nexport type MasterLogQueryResult = Apollo.QueryResult<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>;\nexport const NotificationsDocument = gql`\n    query Notifications($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    currentUser {\n      id\n      notifications {\n        edges {\n          node {\n            id\n            message\n            notificationType\n            createdAt\n            sentBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n            resource {\n              ... on Load {\n                ...loadEssentials\n              }\n              ... on Transaction {\n                id\n                amount\n                message\n                status\n              }\n              ... on Slot {\n                ...slotEssentials\n              }\n              ... on Rig {\n                ...rigEssentials\n                rigInspections(dropzoneId: $dropzoneId) {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              ... on RigInspection {\n                ...rigInspectionEssentials\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\n\n/**\n * __useNotificationsQuery__\n *\n * To run a query within a React component, call `useNotificationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useNotificationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNotificationsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useNotificationsQuery(baseOptions: Apollo.QueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n      }\nexport function useNotificationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n        }\nexport type NotificationsQueryHookResult = ReturnType<typeof useNotificationsQuery>;\nexport type NotificationsLazyQueryHookResult = ReturnType<typeof useNotificationsLazyQuery>;\nexport type NotificationsQueryResult = Apollo.QueryResult<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>;\nexport const PlanesDocument = gql`\n    query Planes($dropzoneId: ID!) {\n  planes(dropzone: $dropzoneId) {\n    ...planeEssentials\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\n\n/**\n * __usePlanesQuery__\n *\n * To run a query within a React component, call `usePlanesQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlanesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlanesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function usePlanesQuery(baseOptions: Apollo.QueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n      }\nexport function usePlanesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n        }\nexport type PlanesQueryHookResult = ReturnType<typeof usePlanesQuery>;\nexport type PlanesLazyQueryHookResult = ReturnType<typeof usePlanesLazyQuery>;\nexport type PlanesQueryResult = Apollo.QueryResult<Operation.PlanesQuery, Operation.PlanesQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        ...roleEssentials\n      }\n      permissions\n    }\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;\nexport const RigInspectionTemplateDocument = gql`\n    query RigInspectionTemplate($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigInspectionTemplate {\n      id\n      name\n      definition\n    }\n  }\n}\n    `;\n\n/**\n * __useRigInspectionTemplateQuery__\n *\n * To run a query within a React component, call `useRigInspectionTemplateQuery` and pass it any options that fit your needs.\n * When your component renders, `useRigInspectionTemplateQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRigInspectionTemplateQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useRigInspectionTemplateQuery(baseOptions: Apollo.QueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n      }\nexport function useRigInspectionTemplateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n        }\nexport type RigInspectionTemplateQueryHookResult = ReturnType<typeof useRigInspectionTemplateQuery>;\nexport type RigInspectionTemplateLazyQueryHookResult = ReturnType<typeof useRigInspectionTemplateLazyQuery>;\nexport type RigInspectionTemplateQueryResult = Apollo.QueryResult<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>;\nexport const AvailableRigsDocument = gql`\n    query AvailableRigs($dropzoneUserId: Int!, $isTandem: Boolean, $loadId: Int) {\n  availableRigs(\n    dropzoneUser: $dropzoneUserId\n    isTandem: $isTandem\n    loadId: $loadId\n  ) {\n    ...userRigDetailed\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\n\n/**\n * __useAvailableRigsQuery__\n *\n * To run a query within a React component, call `useAvailableRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAvailableRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAvailableRigsQuery({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      isTandem: // value for 'isTandem'\n *      loadId: // value for 'loadId'\n *   },\n * });\n */\nexport function useAvailableRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n      }\nexport function useAvailableRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n        }\nexport type AvailableRigsQueryHookResult = ReturnType<typeof useAvailableRigsQuery>;\nexport type AvailableRigsLazyQueryHookResult = ReturnType<typeof useAvailableRigsLazyQuery>;\nexport type AvailableRigsQueryResult = Apollo.QueryResult<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>;\nexport const RolesDocument = gql`\n    query Roles($dropzoneId: ID!, $selectable: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    roles(selectable: $selectable) {\n      ...roleDetailed\n    }\n  }\n}\n    ${RoleDetailedFragmentDoc}`;\n\n/**\n * __useRolesQuery__\n *\n * To run a query within a React component, call `useRolesQuery` and pass it any options that fit your needs.\n * When your component renders, `useRolesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRolesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      selectable: // value for 'selectable'\n *   },\n * });\n */\nexport function useRolesQuery(baseOptions: Apollo.QueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n      }\nexport function useRolesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n        }\nexport type RolesQueryHookResult = ReturnType<typeof useRolesQuery>;\nexport type RolesLazyQueryHookResult = ReturnType<typeof useRolesLazyQuery>;\nexport type RolesQueryResult = Apollo.QueryResult<Operation.RolesQuery, Operation.RolesQueryVariables>;\nexport const AllowedTicketTypesDocument = gql`\n    query AllowedTicketTypes($dropzone: ID!, $onlyPublicTickets: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $onlyPublicTickets) {\n    ...ticketTypeDetails\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useAllowedTicketTypesQuery__\n *\n * To run a query within a React component, call `useAllowedTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      onlyPublicTickets: // value for 'onlyPublicTickets'\n *   },\n * });\n */\nexport function useAllowedTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n      }\nexport function useAllowedTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n        }\nexport type AllowedTicketTypesQueryHookResult = ReturnType<typeof useAllowedTicketTypesQuery>;\nexport type AllowedTicketTypesLazyQueryHookResult = ReturnType<typeof useAllowedTicketTypesLazyQuery>;\nexport type AllowedTicketTypesQueryResult = Apollo.QueryResult<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>;\nexport const TicketTypesDocument = gql`\n    query TicketTypes($dropzone: ID!, $allowManifestingSelf: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $allowManifestingSelf) {\n    ...ticketTypeDetails\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useTicketTypesQuery__\n *\n * To run a query within a React component, call `useTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *   },\n * });\n */\nexport function useTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n      }\nexport function useTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n        }\nexport type TicketTypesQueryHookResult = ReturnType<typeof useTicketTypesQuery>;\nexport type TicketTypesLazyQueryHookResult = ReturnType<typeof useTicketTypesLazyQuery>;\nexport type TicketTypesQueryResult = Apollo.QueryResult<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>;\nexport const LoadUpdatedDocument = gql`\n    subscription LoadUpdated($id: ID!) {\n  loadUpdated(loadId: $id) {\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadUpdatedSubscription__\n *\n * To run a query within a React component, call `useLoadUpdatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useLoadUpdatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadUpdatedSubscription({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadUpdatedSubscription(baseOptions: Apollo.SubscriptionHookOptions<Operation.LoadUpdatedSubscription, Operation.LoadUpdatedSubscriptionVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useSubscription<Operation.LoadUpdatedSubscription, Operation.LoadUpdatedSubscriptionVariables>(LoadUpdatedDocument, options);\n      }\nexport type LoadUpdatedSubscriptionHookResult = ReturnType<typeof useLoadUpdatedSubscription>;\nexport type LoadUpdatedSubscriptionResult = Apollo.SubscriptionResult<Operation.LoadUpdatedSubscription>;\nexport const UserUpdatedDocument = gql`\n    subscription UserUpdated($id: ID!) {\n  userUpdated(dropzoneUserId: $id) {\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useUserUpdatedSubscription__\n *\n * To run a query within a React component, call `useUserUpdatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useUserUpdatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserUpdatedSubscription({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserUpdatedSubscription(baseOptions: Apollo.SubscriptionHookOptions<Operation.UserUpdatedSubscription, Operation.UserUpdatedSubscriptionVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useSubscription<Operation.UserUpdatedSubscription, Operation.UserUpdatedSubscriptionVariables>(UserUpdatedDocument, options);\n      }\nexport type UserUpdatedSubscriptionHookResult = ReturnType<typeof useUserUpdatedSubscription>;\nexport type UserUpdatedSubscriptionResult = Apollo.SubscriptionResult<Operation.UserUpdatedSubscription>;","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { useAppSelector } from 'app/state';\nimport { useCurrentUserPermissionsLazyQuery, useDropzoneLazyQuery } from '../reflection';\nimport { CurrentUserPermissionsQueryVariables, DropzoneQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\n\nexport function useDropzone(vars: Partial<DropzoneQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const [getDropzone, query] = useDropzoneLazyQuery();\n  const permissionsVariables = React.useMemo(\n    () => ({ dropzoneId: variables?.dropzoneId }),\n    [variables?.dropzoneId]\n  );\n\n  const [getPermissions, permissions] = useCurrentUserPermissionsLazyQuery();\n\n  React.useEffect(() => {\n    if (authenticated && variables?.dropzoneId && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Dropzone] Fetching dropzone', variables);\n      getDropzone({ variables });\n    }\n  }, [authenticated, getDropzone, query.variables, variables]);\n\n  React.useEffect(() => {\n    if (\n      authenticated &&\n      permissionsVariables?.dropzoneId &&\n      !isEqual(permissionsVariables, permissions.variables)\n    ) {\n      console.debug('[Context::Dropzone] Fetching user permissions', permissionsVariables);\n      getPermissions({ variables: permissionsVariables as CurrentUserPermissionsQueryVariables });\n    }\n  }, [\n    authenticated,\n    getDropzone,\n    getPermissions,\n    permissions.variables,\n    permissionsVariables,\n    query.variables,\n    variables,\n  ]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      permissions: permissions?.data?.dropzone?.currentUser?.permissions || [],\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      dropzone: data?.dropzone,\n      currentUser: data?.dropzone?.currentUser,\n    }),\n    [\n      variables,\n      loading,\n      called,\n      permissions?.data?.dropzone?.currentUser?.permissions,\n      refetch,\n      queryVariables?.dropzoneId,\n      fetchMore,\n      data?.dropzone,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { useAppSignal } from 'app/components/app_signal';\nimport { isEqual } from 'lodash';\nimport {\n  useDropzonesLazyQuery,\n  useDropzonesQuery,\n  useUpdateVisibilityMutation,\n} from '../reflection';\nimport { DropzoneDetailedFragment, DropzonesQueryVariables } from '../operations';\nimport createCRUDContext, { uninitializedHandler, TMutationResponse } from './factory';\nimport { DropzoneStateEvent } from '../schema.d';\n\nexport default function useDropzones(vars: Partial<DropzonesQueryVariables>) {\n  const state = useAppSelector((root) => root.global);\n  const { authenticated } = state;\n  const variables: DropzonesQueryVariables = React.useMemo(\n    () => ({\n      state: vars?.state,\n    }),\n    [vars?.state]\n  );\n\n  const [getDropzones, query] = useDropzonesLazyQuery();\n\n  React.useEffect(() => {\n    if (authenticated && (!isEqual(variables, query.variables) || !query.called)) {\n      console.debug('[Context::Dropzones] Fetching dropzones', variables);\n      getDropzones({ variables });\n    }\n  }, [authenticated, getDropzones, query.called, query.variables, variables]);\n\n  const [updateVisibilityMutation] = useUpdateVisibilityMutation();\n  const { appSignal } = useAppSignal();\n\n  const updateVisibility = React.useCallback(\n    async function UpdateVisibility(\n      id: string,\n      event: DropzoneStateEvent\n    ): Promise<TMutationResponse<{ dropzone: DropzoneDetailedFragment }>> {\n      try {\n        const response = await updateVisibilityMutation({\n          variables: {\n            dropzone: id,\n            event,\n          },\n        });\n\n        if (response?.data?.updateVisibility?.dropzone?.id) {\n          return { dropzone: response.data.updateVisibility?.dropzone };\n        }\n        return {\n          error: response?.data?.updateVisibility?.errors?.[0],\n          fieldErrors: response?.data?.updateVisibility?.fieldErrors || undefined,\n        };\n      } catch (e) {\n        appSignal.sendError(e as Error);\n        return { error: 'You cant modify dropzone visibility' };\n      }\n    },\n    [appSignal, updateVisibilityMutation]\n  );\n\n  const { loading, fetchMore, refetch, data, called } = query;\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      updateVisibility,\n      dropzones: data?.dropzones?.edges?.map((edge) => edge?.node),\n    }),\n    [called, data?.dropzones?.edges, fetchMore, loading, refetch, updateVisibility]\n  );\n}\n\nconst { Provider: DropzonesProvider, useContext: useDropzonesContext } = createCRUDContext(\n  useDropzones,\n  {\n    called: false,\n    loading: false,\n    dropzones: [],\n    updateVisibility: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  }\n);\n\nexport { DropzonesProvider, useDropzonesContext, useDropzones };\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Permission } from '../api/schema.d';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const {\n    dropzone: { permissions },\n  } = useDropzoneContext();\n\n  const check = permissions?.includes(permission as Permission) || false;\n  return check;\n}\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport startCase from 'lodash/startCase';\nimport { FieldError, Mutation } from './schema.d';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern:\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  } | null\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: { [K in keyof Mutation]: Maybe<Payload> }) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string | string[]) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        const [msg] = [message].flat();\n        onFieldError?.(`${fieldName}`, `${startCase(fieldName)} ${msg}`);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable as string}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          if (err instanceof Error) {\n            onError?.(err.message);\n          }\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema.d';\nimport { UpdateLoadDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(UpdateLoadDocument, {\n  getPayload: (result) => result.updateLoad,\n});\n","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useAppSelector } from 'app/state';\nimport {\n  LoadUpdatedDocument,\n  useFinalizeLoadMutation,\n  useLoadLazyQuery,\n  useManifestUserMutation,\n} from '../reflection';\nimport { LoadQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\nimport { CreateSlotPayload, LoadState, Permission } from '../schema.d';\nimport useMutationUpdateLoad from '../hooks/useMutationUpdateLoad';\n\nexport function useLoad(variables: Partial<LoadQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const [getLoad, query] = useLoadLazyQuery();\n\n  React.useEffect(() => {\n    if (authenticated && variables?.id && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Load] Fetching load', variables);\n      getLoad({ variables: variables as LoadQueryVariables });\n    }\n  }, [authenticated, getLoad, query.variables, variables]);\n\n  const refetch = React.useCallback(() => {\n    if (variables?.id) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables, subscribeToMore } = query;\n  const load = React.useMemo(() => data?.load, [data?.load]);\n\n  const [mutationManifestUser] = useManifestUserMutation();\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  // Subscribe to updates over websockets\n  React.useEffect(() => {\n    if (!authenticated || !data?.load?.id) {\n      return undefined;\n    }\n    console.debug('[Apollo::Subscriptions::Load] Subscribed to updates for load', data?.load?.id);\n    const unsubscribe = subscribeToMore({\n      document: LoadUpdatedDocument,\n      variables: { id: data?.load?.id },\n      onError: console.error,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData?.data?.load?.id) {\n          return prev;\n        }\n        console.debug('[Apollo::Subscriptions::Load] Received update', subscriptionData.data.load);\n        return {\n          ...prev,\n          load: {\n            ...(prev?.load || {}),\n            ...subscriptionData.data.load,\n          },\n        };\n      },\n    });\n\n    return () => {\n      console.debug('[Apollo::Subscriptions::Load] Unsubscribing');\n      unsubscribe();\n    };\n  }, [data?.load?.id, subscribeToMore, authenticated]);\n\n  const update = useMutationUpdateLoad({\n    onSuccess: () => notify.success(`Load #${load?.loadNumber} updated`),\n    onError: (message) => notify.error(message),\n  });\n\n  const manifestUser = React.useCallback(\n    async (payload: Omit<CreateSlotPayload, 'loadId'>) => {\n      if (load?.id) {\n        return undefined;\n      }\n      const schema = yup.object().shape({\n        dropzoneUser: yup.string().required(),\n        exitWeight: yup.number().nullable(),\n        groupNumber: yup.number().nullable(),\n        passengerExitWeight: yup.number().nullable(),\n        passengerName: yup.string().nullable(),\n        rig: yup.string().nullable(),\n        ticketType: yup.string().required('You must select a ticket type'),\n        jumpType: yup.string().required('You must specify the type of jump'),\n      });\n      const validatedPayload = schema.validateSync(payload);\n      const response = await mutationManifestUser({\n        variables: {\n          load: load?.id,\n          ...validatedPayload,\n        },\n      });\n\n      if (response?.data?.createSlot?.fieldErrors?.length) {\n        throw new ValidationError(\n          response?.data?.createSlot?.fieldErrors?.map(\n            ({ field, message }) => new ValidationError([], message, field)\n          )\n        );\n      }\n      return response?.data?.createSlot?.slot;\n    },\n    [load?.id, mutationManifestUser]\n  );\n\n  const dispatchInMinutes = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : DateTime.local().plus({ minutes }).toISO();\n\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: dispatchTime,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      if (!load) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [update, load]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: { id: string | number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        pilot: Number(pilot.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        gca: Number(gca.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: { id: string | number; maxSlots: number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        plane: Number(plane.id),\n      });\n    },\n    [load?.id, update]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        loadMaster: Number(lm.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const markAsLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load?.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const cancel = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: { id: Number(load?.id), state: LoadState.Cancelled },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const canDispatchAircraft = useRestriction(Permission.UpdateLoad);\n\n  const createAircraftDispatchAction = React.useCallback(\n    (minutes: number | null) => () => dispatchInMinutes(minutes),\n    [dispatchInMinutes]\n  );\n\n  const dispatchAtTime = React.useCallback(\n    async (time: number | null) => {\n      if (!load || !time) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: DateTime.fromSeconds(time).toISO(),\n        state: time ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      refetch: queryVariables?.id ? refetch : noop,\n      fetchMore: queryVariables?.id ? () => fetchMore({ variables }) : uninitializedHandler,\n      load: data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n    }),\n    [\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      queryVariables?.id,\n      refetch,\n      data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import { useAppSignal } from 'app/components/app_signal';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  CreateOrderMutationVariables,\n  DropzoneUserEssentialsFragment,\n  DropzoneUserProfileFragment,\n  DropzoneUserQueryVariables,\n  OrderEssentialsFragment,\n  UpdateDropzoneUserMutationVariables,\n  UserEssentialsFragment,\n} from '../operations';\nimport {\n  DropzoneUserProfileDocument,\n  DropzoneUserProfileFragmentDoc,\n  DropzoneUsersDocument,\n  useCreateGhostMutation,\n  useCreateOrderMutation,\n  useDropzoneUserProfileLazyQuery,\n  useGrantPermissionMutation,\n  useRevokePermissionMutation,\n  UserUpdatedDocument,\n  useUpdateDropzoneUserMutation,\n} from '../reflection';\nimport { GhostInput, Permission } from '../schema.d';\nimport createCRUDContext, { TMutationResponse, uninitializedHandler } from './factory';\n\nfunction useUserProfile(variables?: Partial<DropzoneUserQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const { id } = variables || {};\n  const [updateMutation] = useUpdateDropzoneUserMutation();\n  const [getProfile, query] = useDropzoneUserProfileLazyQuery();\n  const [mutationCreateOrder] = useCreateOrderMutation();\n  const [mutationCreateGhost] = useCreateGhostMutation();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { appSignal } = useAppSignal();\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n  const canRevokePermission = useRestriction(Permission.RevokePermission);\n\n  const { subscribeToMore } = query;\n  const profile = React.useMemo(() => query?.data?.dropzoneUser, [query?.data?.dropzoneUser]);\n\n  React.useEffect(() => {\n    if (authenticated && id && id !== query?.variables?.id) {\n      getProfile({ variables: { id } });\n    }\n  }, [authenticated, getProfile, id, query?.variables?.id]);\n\n  // Subscribe to updates over websockets\n  React.useEffect(() => {\n    if (!profile?.id) {\n      return undefined;\n    }\n    const unsubscribe = subscribeToMore({\n      document: UserUpdatedDocument,\n      variables: { id: profile?.id },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData?.data?.dropzoneUser?.id) {\n          return prev;\n        }\n        console.debug('[Apollo::Subscription::UpdateUser]: Received update', subscriptionData);\n        return {\n          ...prev,\n          dropzoneUser: {\n            ...(prev?.dropzoneUser || {}),\n            ...subscriptionData.data.dropzoneUser,\n          },\n        };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [profile?.id, subscribeToMore]);\n\n  const create = React.useCallback(\n    async function CreateGhost(\n      attributes: GhostInput\n    ): Promise<TMutationResponse<{ user: UserEssentialsFragment }>> {\n      try {\n        const response = await mutationCreateGhost({\n          variables: attributes,\n          refetchQueries: [\n            DropzoneUsersDocument,\n            { query: DropzoneUsersDocument, variables: { dropzoneId: dropzone?.id } },\n          ],\n        });\n\n        if (response?.data?.createGhost?.user?.id) {\n          return { user: response?.data?.createGhost?.user };\n        }\n        return {\n          error: response?.data?.createGhost?.errors?.[0],\n          fieldErrors: response?.data?.createGhost?.fieldErrors || undefined,\n        };\n      } catch (error) {\n        console.debug('CreateGhost failed', error);\n        if (error instanceof Error) {\n          appSignal?.sendError(error);\n        }\n        return { error: 'Oh no, something went wrong' };\n      }\n    },\n    [appSignal, dropzone?.id, mutationCreateGhost]\n  );\n  const update = React.useCallback(\n    async function UpdateDropzoneUser(\n      attributes: UpdateDropzoneUserMutationVariables\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      const { data } = await updateMutation({\n        variables: {\n          ...attributes,\n        },\n      });\n\n      if (data?.updateDropzoneUser?.dropzoneUser?.id) {\n        return { dropzoneUser: data?.updateDropzoneUser?.dropzoneUser };\n      }\n\n      return {\n        error: data?.updateDropzoneUser?.errors?.[0],\n        fieldErrors: data?.updateDropzoneUser?.fieldErrors || undefined,\n      };\n    },\n    [updateMutation]\n  );\n\n  const createOrder = React.useCallback(\n    async function CreateOrder(\n      attributes: CreateOrderMutationVariables\n    ): Promise<TMutationResponse<{ order: OrderEssentialsFragment }>> {\n      try {\n        const { data } = await mutationCreateOrder({\n          variables: {\n            ...attributes,\n          },\n          update: (cache, { data: mutationResult }) => {\n            if (mutationResult?.createOrder?.order?.id) {\n              const { order } = mutationResult.createOrder;\n\n              if (order.buyer.__typename === 'DropzoneUser') {\n                // Deduct credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.buyer),\n                  data: order.buyer,\n                });\n              } else if (order.seller.__typename === 'DropzoneUser') {\n                // Add credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.seller),\n                  data: order.seller,\n                });\n              }\n            }\n          },\n        });\n        if (data?.createOrder?.order?.id) {\n          return { order: data?.createOrder?.order };\n        }\n\n        return {\n          error: data?.createOrder?.errors?.[0],\n          fieldErrors: data?.createOrder?.fieldErrors || undefined,\n        };\n      } catch (error) {\n        appSignal.sendError(error as Error);\n        return { error: 'Something went wrong' };\n      }\n    },\n    [appSignal, mutationCreateOrder]\n  );\n\n  const addCredits = React.useCallback(\n    async function AddCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Added funds`,\n        seller: dropzoneUser.walletId,\n        buyer: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const withdrawCredits = React.useCallback(\n    async function DeductCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Withdrew funds`,\n        buyer: dropzoneUser.walletId,\n        seller: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const [revoke] = useRevokePermissionMutation();\n  const [grant] = useGrantPermissionMutation();\n\n  const grantPermission = React.useCallback(\n    async function GrantPermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canGrantPermission) {\n        return { error: 'You cannot grant permissions' };\n      }\n      const { data } = await grant({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.grantPermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.grantPermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.grantPermission?.errors?.[0],\n        fieldErrors: data?.grantPermission?.fieldErrors || undefined,\n      };\n    },\n    [canGrantPermission, dropzone?.id, grant]\n  );\n\n  const revokePermission = React.useCallback(\n    async function RevokePermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canRevokePermission) {\n        return { error: 'You cannot revoke permissions' };\n      }\n      const { data } = await revoke({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.revokePermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.revokePermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.revokePermission?.errors?.[0],\n        fieldErrors: data?.revokePermission?.fieldErrors || undefined,\n      };\n    },\n    [canRevokePermission, dropzone?.id, revoke]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading: query?.loading,\n      dropzoneUser: query?.data?.dropzoneUser,\n      refetch: query?.refetch,\n      create,\n      update,\n      addCredits,\n      grantPermission,\n      revokePermission,\n      withdrawCredits,\n    }),\n    [\n      addCredits,\n      grantPermission,\n      query?.refetch,\n      create,\n      query?.data?.dropzoneUser,\n      query?.loading,\n      revokePermission,\n      update,\n      withdrawCredits,\n    ]\n  );\n}\n\nconst { Provider: UserProfileProvider, useContext: useUserProfileContext } = createCRUDContext(\n  useUserProfile,\n  {\n    loading: false,\n    dropzoneUser: null,\n    refetch: uninitializedHandler as never,\n    update: uninitializedHandler as never,\n    create: uninitializedHandler as never,\n    addCredits: uninitializedHandler as never,\n    withdrawCredits: uninitializedHandler as never,\n    grantPermission: uninitializedHandler as never,\n    revokePermission: uninitializedHandler as never,\n  }\n);\n\nexport { UserProfileProvider, useUserProfileContext, useUserProfile };\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport {\n  useLoadsQuery,\n  useManifestGroupMutation,\n  useManifestUserMutation,\n  useMoveSlotMutation,\n  useDeleteSlotMutation,\n  useCreateLoadMutation,\n  LoadDocument,\n} from '../reflection';\nimport {\n  CreateLoadMutationVariables,\n  DeleteSlotMutationVariables,\n  LoadDetailsFragment,\n  LoadsQueryVariables,\n  ManifestGroupMutationVariables,\n  ManifestUserMutationVariables,\n  MoveSlotMutationVariables,\n  SlotExhaustiveFragment,\n} from '../operations';\nimport { TMutationResponse } from './factory';\nimport { Permission } from '../schema.d';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nexport default function useManifest({ dropzone, date }: UseManifestOptions) {\n  const state = useAppSelector((root) => root.global);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n  const canDeleteOwnSlot = useRestriction(Permission.DeleteSlot);\n  const canDeleteSlot = useRestriction(Permission.DeleteUserSlot);\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const canUpdateSlot = useRestriction(Permission.UpdateSlot);\n  const canUpdateOwnSlot = useRestriction(Permission.UpdateUserSlot);\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const permissions = React.useMemo(\n    () => ({\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestSelf,\n      canManifestOthers,\n      canUpdateSlot,\n      canUpdateOwnSlot,\n    }),\n    [\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestOthers,\n      canManifestSelf,\n      canUpdateOwnSlot,\n      canUpdateSlot,\n    ]\n  );\n\n  const variables: LoadsQueryVariables | undefined = React.useMemo(() => {\n    if (!dropzone) {\n      return undefined;\n    }\n    return {\n      dropzone,\n      date: date || DateTime.local().toISODate(),\n    };\n  }, [date, dropzone]);\n\n  const query = useLoadsQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken || !dropzone,\n  });\n\n  const [moveSlotMutation] = useMoveSlotMutation();\n  const [deleteSlotMutation] = useDeleteSlotMutation();\n  const [manifestGroupMutation] = useManifestGroupMutation();\n  const [manifestUserMutation] = useManifestUserMutation();\n  const [createLoadMutation] = useCreateLoadMutation();\n\n  const { loading, fetchMore, refetch, data, called, updateQuery } = query;\n\n  const moveSlot = React.useCallback(\n    async function MoveSlot(\n      sourceLoad: string,\n      mutationVariables: MoveSlotMutationVariables\n    ): Promise<TMutationResponse<{ loads: LoadDetailsFragment[] }>> {\n      const result = await moveSlotMutation({\n        variables: mutationVariables,\n        refetchQueries: [\n          { query: LoadDocument, variables: { id: sourceLoad } },\n          { query: LoadDocument, variables: { id: mutationVariables?.targetLoad?.toString() } },\n        ],\n      });\n\n      if (result?.data?.moveSlot?.fieldErrors?.length || result?.data?.moveSlot?.errors?.length) {\n        return {\n          error: result?.data?.moveSlot?.errors?.[0],\n          fieldErrors: result?.data?.moveSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.moveSlot?.loads) {\n        return {\n          loads: result.data.moveSlot.loads,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [moveSlotMutation]\n  );\n\n  const manifestUser = React.useCallback(\n    async function ManifestUser(\n      mutationVariables: ManifestUserMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await manifestUserMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlot?.fieldErrors?.length ||\n        result?.data?.createSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlot?.errors?.[0],\n          fieldErrors: result?.data?.createSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlot?.slot) {\n        return {\n          slot: result.data.createSlot.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestUserMutation]\n  );\n\n  const manifestGroup = React.useCallback(\n    async function ManifestGroup(\n      mutationVariables: ManifestGroupMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await manifestGroupMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlots?.fieldErrors?.length ||\n        result?.data?.createSlots?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlots?.errors?.[0],\n          fieldErrors: result?.data?.createSlots?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlots?.load?.id) {\n        return {\n          load: result.data.createSlots.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestGroupMutation]\n  );\n\n  const deleteSlot = React.useCallback(\n    async function DeleteSlot(\n      mutationVariables: DeleteSlotMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await deleteSlotMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.deleteSlot?.fieldErrors?.length ||\n        result?.data?.deleteSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.deleteSlot?.errors?.[0],\n          fieldErrors: result?.data?.deleteSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.deleteSlot?.slot?.id) {\n        return {\n          slot: result.data.deleteSlot?.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [deleteSlotMutation]\n  );\n\n  const createLoad = React.useCallback(\n    async function CreateLoad(\n      mutationVariables: CreateLoadMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await createLoadMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createLoad?.fieldErrors?.length ||\n        result?.data?.createLoad?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createLoad?.errors?.[0],\n          fieldErrors: result?.data?.createLoad?.fieldErrors || undefined,\n        };\n      }\n      if (result?.data?.createLoad?.load?.id) {\n        const { load } = result.data.createLoad;\n        updateQuery((prev) => ({\n          ...prev,\n          loads: {\n            ...prev?.loads,\n            edges: [{ node: load, __typename: 'LoadEdge' }, ...(prev?.loads?.edges || [])],\n          },\n        }));\n        return {\n          load: result.data.createLoad.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [createLoadMutation, updateQuery]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      moveSlot,\n      manifestUser,\n      manifestGroup,\n      deleteSlot,\n      createLoad,\n      permissions,\n      loads: data?.loads?.edges?.map((edge) => edge?.node) || [],\n    }),\n    [\n      called,\n      createLoad,\n      data?.loads?.edges,\n      deleteSlot,\n      fetchMore,\n      loading,\n      permissions,\n      manifestGroup,\n      manifestUser,\n      moveSlot,\n      refetch,\n    ]\n  );\n}\n\nexport { useManifest };\n","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  useCreateTicketTypeMutation,\n  useCreateTicketAddonMutation,\n  useUpdateTicketAddonMutation,\n  useUpdateTicketTypeMutation,\n  useArchiveTicketTypeMutation,\n  TicketTypesDocument,\n  TicketTypeExtrasDocument,\n  useTicketTypesLazyQuery,\n} from '../reflection';\nimport {\n  CreateTicketAddonMutationVariables,\n  CreateTicketTypeMutationVariables,\n  TicketTypeAddonDetailsFragment,\n  TicketTypeEssentialsFragment,\n  TicketTypesQueryVariables,\n  UpdateTicketAddonMutationVariables,\n  UpdateTicketTypeMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useTickets(vars?: Partial<TicketTypesQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const variables: TicketTypesQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzone) {\n      return vars as TicketTypesQueryVariables;\n    }\n    return undefined;\n  }, [vars]);\n\n  const [getTickets, query] = useTicketTypesLazyQuery();\n  React.useEffect(() => {\n    if (authenticated && variables?.dropzone && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Tickets] Fetching tickets', variables);\n      getTickets({ variables });\n    }\n  }, [authenticated, getTickets, query.variables, variables]);\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const ticketTypes = React.useMemo(() => data?.ticketTypes, [data?.ticketTypes]);\n  const [createTicket] = useCreateTicketTypeMutation();\n  const [updateTicket] = useUpdateTicketTypeMutation();\n  const [archiveTicket] = useArchiveTicketTypeMutation();\n  const [createAddon] = useCreateTicketAddonMutation();\n  const [updateAddon] = useUpdateTicketAddonMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzone) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const createTicketType = React.useCallback(\n    async function CreateTicketType(\n      attributes: Omit<CreateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await createTicket({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [{ query: TicketTypesDocument, variables: { dropzone: dropzone?.id } }],\n      });\n\n      if (response?.data?.createTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.createTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.createTicketType?.errors?.[0],\n        fieldErrors: response?.data?.createTicketType?.fieldErrors || undefined,\n      };\n    },\n    [createTicket, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketType = React.useCallback(\n    async function UpdateTicketType(\n      id: number,\n      attributes: Omit<UpdateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await updateTicket({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.updateTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.updateTicketType?.errors?.[0],\n        fieldErrors: response?.data?.updateTicketType?.fieldErrors || undefined,\n      };\n    },\n    [updateTicket]\n  );\n\n  const createTicketTypeAddon = React.useCallback(\n    async function CreateTicketTypeAddon(\n      attributes: Omit<CreateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await createAddon({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [\n          {\n            query: TicketTypeExtrasDocument,\n            variables: { dropzoneId: dropzone?.id },\n            fetchPolicy: 'network-only',\n          },\n        ],\n      });\n\n      if (response?.data?.createExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.createExtra?.extra };\n      }\n      return {\n        error: response?.data?.createExtra?.errors?.[0],\n        fieldErrors: response?.data?.createExtra?.fieldErrors || undefined,\n      };\n    },\n    [createAddon, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketTypeAddon = React.useCallback(\n    async function UpdateTicketTypeAddon(\n      id: number,\n      attributes: Omit<UpdateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await updateAddon({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.updateExtra?.extra };\n      }\n      return {\n        error: response?.data?.updateExtra?.errors?.[0],\n        fieldErrors: response?.data?.updateExtra?.fieldErrors || undefined,\n      };\n    },\n    [updateAddon]\n  );\n\n  const archiveTicketType = React.useCallback(\n    async function ArchiveTicket(\n      ticketType: TicketTypeEssentialsFragment\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await archiveTicket({\n        variables: { id: Number(ticketType.id) },\n        optimisticResponse: {\n          archiveTicketType: {\n            __typename: 'DeleteTicketPayload',\n            errors: null,\n            fieldErrors: null,\n            ticketType,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.archiveTicketType?.ticketType?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.archiveTicketType.ticketType) });\n        },\n      });\n\n      if (response?.data?.archiveTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.archiveTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.archiveTicketType?.errors?.[0],\n        fieldErrors: response?.data?.archiveTicketType?.fieldErrors || undefined,\n      };\n    },\n    [archiveTicket]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzone ? refetch : noop,\n      fetchMore: queryVariables?.dropzone ? () => fetchMore({ variables }) : uninitializedHandler,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzone,\n      refetch,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  useCreateAircraftMutation,\n  useUpdateAircraftMutation,\n  PlanesDocument,\n  useArchivePlaneMutation,\n  usePlanesLazyQuery,\n} from '../reflection';\nimport {\n  CreateAircraftMutationVariables,\n  PlanesQuery,\n  DropzoneQueryVariables,\n  PlaneEssentialsFragment,\n  PlanesQueryVariables,\n  UpdateAircraftMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useAircrafts(vars?: Partial<PlanesQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const [getAircrafts, query] = usePlanesLazyQuery({\n    variables,\n  });\n\n  React.useEffect(() => {\n    if (authenticated && variables?.dropzoneId && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Aircrafts] Fetching aircrafts', variables);\n      getAircrafts({ variables });\n    }\n  }, [authenticated, getAircrafts, query?.variables, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [createAircraft] = useCreateAircraftMutation();\n  const [updateAircraft] = useUpdateAircraftMutation();\n  const [archiveAircraft] = useArchivePlaneMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const create = React.useCallback(\n    async function CreateAircraft(\n      attributes: CreateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      const response = await createAircraft({\n        variables: { attributes },\n        refetchQueries: [{ query: PlanesDocument, variables: { dropzoneId: dropzone.id } }],\n        update: (cache, { data: mutationData }) => {\n          cache.updateQuery<PlanesQuery, PlanesQueryVariables>(\n            {\n              query: PlanesDocument,\n              variables: { dropzoneId: dropzone.id },\n              id: cache.identify(dropzone),\n            },\n            (prev) => {\n              if (!prev) {\n                return undefined;\n              }\n              if (!mutationData?.createPlane?.plane) {\n                return prev;\n              }\n\n              return {\n                ...prev,\n                planes: [...(prev?.planes || []), mutationData.createPlane.plane],\n              };\n            }\n          );\n        },\n      });\n\n      if (response?.data?.createPlane?.plane?.id) {\n        return { aircraft: response?.data?.createPlane?.plane };\n      }\n      return {\n        error: response?.data?.createPlane?.errors?.[0],\n        fieldErrors: response?.data?.createPlane?.fieldErrors || undefined,\n      };\n    },\n    [createAircraft, dropzone]\n  );\n\n  const update = React.useCallback(\n    async function UpdateAircraft(\n      id: number,\n      attributes: UpdateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await updateAircraft({ variables: { id, attributes } });\n\n      if (response?.data?.updatePlane?.plane?.id) {\n        return { aircraft: response?.data?.updatePlane?.plane };\n      }\n      return {\n        error: response?.data?.updatePlane?.errors?.[0],\n        fieldErrors: response?.data?.updatePlane?.fieldErrors || undefined,\n      };\n    },\n    [updateAircraft]\n  );\n\n  const archive = React.useCallback(\n    async function ArchiveAircraft(\n      plane: PlaneEssentialsFragment\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await archiveAircraft({\n        variables: { id: Number(plane.id) },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deletePlane: {\n            __typename: 'DeletePlanePayload',\n            errors: null,\n            fieldErrors: null,\n            plane,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.deletePlane?.plane?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.deletePlane.plane) });\n        },\n      });\n\n      if (response?.data?.deletePlane?.plane?.id) {\n        return { aircraft: response?.data?.deletePlane?.plane };\n      }\n      return {\n        error: response?.data?.deletePlane?.errors?.[0],\n        fieldErrors: response?.data?.deletePlane?.fieldErrors || undefined,\n      };\n    },\n    [archiveAircraft]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      aircrafts: data?.planes,\n      create,\n      update,\n      archive,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzoneId,\n      refetch,\n      data?.planes,\n      create,\n      update,\n      fetchMore,\n      variables,\n      archive,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { Drawer, Typography } from '@mui/material';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n  disablePadding?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  scrollable?: boolean;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nfunction DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, disablePadding, buttonAction, title, loading, open, children, onClose } =\n    props;\n  const theme = useTheme();\n\n  return (\n    <Drawer {...{ open, onClose }} anchor=\"right\" PaperProps={{ style: { width: 400 } }}>\n      <ProgressBar\n        indeterminate\n        color={theme?.colors?.primary}\n        visible={loading}\n        style={{ width: '100%' }}\n      />\n      {!title ? null : (\n        <Typography\n          variant=\"h5\"\n          style={{ marginBottom: 16, paddingLeft: 16, paddingRight: 16, marginTop: 16 }}\n        >\n          {title}\n          <IconButton icon=\"close\" style={styles.close} size={24} onPress={onClose} />\n        </Typography>\n      )}\n      <View style={{ padding: disablePadding ? 0 : 16, paddingBottom: 0 }}>{children}</View>\n      <Dialog.Actions\n        style={{ justifyContent: 'flex-end', backgroundColor: 'transparent', marginBottom: 16 }}\n      >\n        <Button\n          mode=\"contained\"\n          disabled={loading}\n          {...{ loading }}\n          onPress={buttonAction}\n          style={styles.button}\n        >\n          {buttonLabel}\n        </Button>\n      </Dialog.Actions>\n    </Drawer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  noPadding: { borderBottomWidth: 0, paddingLeft: 0, paddingRight: 0 },\n  defaultPadding: { borderBottomWidth: 0, paddingLeft: 24, paddingRight: 24 },\n  button: {\n    width: '100%',\n    padding: 5,\n    alignSelf: 'flex-end',\n    borderRadius: 20,\n    height: 42,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  close: { position: 'absolute', top: 4, right: 4 },\n});\n\nexport default DialogOrSheet;\n","import * as React from 'react';\nimport { Controller, ControllerProps, FieldValues, Path } from 'react-hook-form';\n\ninterface IMinimalHookFormProps<V> {\n  error?: string | null;\n  value?: V;\n  onChange?(value: V): void;\n}\n\nexport function withHookForm<BaseProps extends object, Value = unknown>(\n  Component: React.ComponentType<BaseProps>\n) {\n  return function WithHookForm<Fields extends FieldValues, TName extends Path<Fields>>(\n    props: Omit<BaseProps, 'value' | 'onChange' | 'error'> &\n      Pick<ControllerProps<Fields, TName>, 'control' | 'name' | 'rules' | 'defaultValue'>\n  ) {\n    const { control, name, rules, defaultValue, ...rest } = props;\n\n    return (\n      <Controller\n        {...{ control, name, rules }}\n        render={({ field: { onChange, onBlur, value }, formState: { errors } }) => (\n          <Component\n            {...(rest as BaseProps)}\n            {...{ value, onChange, onBlur }}\n            error={errors?.[name]?.message}\n          />\n        )}\n      />\n    );\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ITextFieldProps\n  extends Omit<Extract<typeof TextInput>, 'onChange' | 'onChangeText' | 'error'> {\n  error?: string | null;\n  helperText?: string | null;\n  onChangeText?(newValue: string): void;\n  onChange?(newValue: string): void;\n}\n\nfunction TextField(props: ITextFieldProps) {\n  const { error, helperText, onChangeText: setText, onChange, style, ...rest } = props;\n  const onChangeText = onChange || setText;\n  const theme = useTheme();\n  return (\n    <>\n      <TextInput\n        mode=\"outlined\"\n        style={StyleSheet.flatten([styles.field, { backgroundColor: theme.colors.surface }, style])}\n        {...rest}\n        {...{ onChangeText }}\n        error={!!error}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const FormTextField = withHookForm(TextField);\n\nexport default TextField;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import * as React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nexport enum NumberFieldType {\n  Cash = 'cash',\n  Weight = 'weight',\n  CanopySize = 'canopySize',\n}\ninterface INumberFieldProps {\n  error?: string | null;\n  label?: string;\n  helperText?: string;\n  disabled?: boolean;\n  value?: number | null;\n  mode?: 'outlined' | 'flat';\n  variant?: NumberFieldType | null;\n  onChange(newValue: number): void;\n}\n\nconst adornments = {\n  [NumberFieldType.Cash]: '$',\n  [NumberFieldType.CanopySize]: 'ft',\n  [NumberFieldType.Weight]: 'kg',\n};\nconst muiVariants = {\n  flat: 'standard',\n  outlined: 'outlined',\n};\nexport default function NumberField(props: INumberFieldProps) {\n  const {\n    label,\n    mode,\n    disabled,\n    onChange: onChangeValue,\n    helperText,\n    error,\n    variant,\n    ...rest\n  } = props;\n  const { value } = rest;\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeValue(parseInt(e.target.value, 10));\n    },\n    [onChangeValue]\n  );\n\n  return (\n    <FormControl\n      style={{ paddingRight: 8 }}\n      variant={\n        mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n      }\n      fullWidth\n    >\n      <TextField\n        type=\"number\"\n        fullWidth\n        variant={\n          mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n        }\n        {...{ label, disabled, value, onChange }}\n        InputProps={{\n          ...(variant && variant !== NumberFieldType.Cash\n            ? {\n                endAdornment: <InputAdornment position=\"end\">{adornments[variant]}</InputAdornment>,\n              }\n            : {}),\n          ...(variant !== NumberFieldType.Cash\n            ? {}\n            : {\n                startAdornment: (\n                  <InputAdornment position=\"start\">{adornments[variant]}</InputAdornment>\n                ),\n              }),\n        }}\n      />\n      <FormHelperText error={!!error}>{error || helperText || ' '}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Chip as MaterialChip, useTheme } from 'react-native-paper';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nexport type ChipProps = Omit<ExtractProps<typeof MaterialChip>, 'icon'> & {\n  icon?: ExtractProps<typeof MaterialCommunityIcons>['name'];\n} & {\n  small?: boolean;\n  color?: string;\n  backgroundColor?: string;\n};\nexport default function Chip(props: ChipProps) {\n  const { small, icon, color: assignedColor, mode, style, backgroundColor, ...rest } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n\n  const chipStyle: ChipProps['style'] = React.useMemo(\n    () => ({\n      marginHorizontal: 4,\n      backgroundColor: mode !== 'flat' ? backgroundColor : undefined,\n      height: small ? 25 : undefined,\n      alignItems: 'center' as const,\n      borderColor: mode !== 'flat' ? color || undefined : undefined,\n    }),\n    [backgroundColor, color, mode, small]\n  );\n  const iconStyles: ChipProps['style'] = React.useMemo(\n    () => (Platform.OS === 'web' ? {} : { marginTop: 0, marginBottom: 3 }),\n    []\n  );\n\n  return (\n    <MaterialChip\n      mode={mode || 'outlined'}\n      selectedColor={color}\n      style={[chipStyle, style]}\n      icon={\n        icon\n          ? (iconProps) => <MaterialCommunityIcons name={icon} {...iconProps} style={iconStyles} />\n          : undefined\n      }\n      textStyle={iconStyles}\n      {...rest}\n    />\n  );\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { Platform, View, StyleSheet } from 'react-native';\nimport Chip, { ChipProps } from 'app/components/chips/Chip';\nimport { HelperText } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { withHookForm } from '../withHookForm';\n\nexport interface IChipSelect<T> {\n  items: T[];\n  value: T[];\n  autoSelectFirst?: boolean;\n  allowEmpty?: boolean;\n  icon?: ChipProps['icon'];\n  error?: string | null;\n  variant?: 'scroll' | 'flat';\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChange(newItems: T[]): void;\n}\n\nfunction ChipSelect<T>(props: IChipSelect<T>) {\n  const {\n    items,\n    allowEmpty,\n    value,\n    variant = 'flat',\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChange,\n    autoSelectFirst,\n    error,\n  } = props;\n\n  React.useEffect(() => {\n    if (items?.length && (!value || !value.length) && autoSelectFirst) {\n      onChange([items[0]]);\n    }\n  }, [value, autoSelectFirst, onChange, items]);\n\n  const Wrapper = React.useCallback(\n    ({ children }: React.PropsWithChildren<object>) =>\n      variant === 'scroll' ? (\n        <ScrollView horizontal>{children} </ScrollView>\n      ) : (\n        (children as JSX.Element)\n      ),\n    [variant]\n  );\n\n  return (\n    <Wrapper>\n      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n        {items?.map((item) => {\n          const isItemSelected = isSelected\n            ? isSelected(item)\n            : value.some((selected) => isEqual(item, selected));\n          return (\n            <Chip\n              key={JSON.stringify(item)}\n              small\n              mode={!isItemSelected ? 'flat' : 'outlined'}\n              icon={\n                !value?.some((selected) =>\n                  isSelected ? isSelected(selected) : isEqual(item, selected)\n                ) && icon\n                  ? icon\n                  : undefined\n              }\n              style={{ margin: Platform.OS === 'web' ? 4 : 1 }}\n              disabled={isDisabled?.(item) || false}\n              selected={isItemSelected}\n              onPress={() =>\n                onChange(\n                  !allowEmpty && value.length === 1\n                    ? [item]\n                    : xorBy(value, [item], isSelected || JSON.stringify)\n                )\n              }\n            >\n              {renderItemLabel(item)}\n            </Chip>\n          );\n        })}\n      </View>\n      <HelperText style={styles.helperText} type=\"error\">\n        {error || ''}\n      </HelperText>\n    </Wrapper>\n  );\n}\n\nconst styles = StyleSheet.create({\n  helperText: {\n    marginBottom: 16,\n  },\n});\n\nconst ChipSelectComponent = React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected', 'error']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected', 'error'])\n  );\n}) as typeof ChipSelect;\n\nexport const ChipSelectField = withHookForm(ChipSelect);\n\nexport default ChipSelectComponent;\n","import * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Color from 'color';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nconst defaultColors = {\n  boneColor: '#E1E9EE',\n  highlightColor: '#F2F8FC',\n};\n\nexport default function ThemedSkeleton(props: ExtractProps<typeof SkeletonContent>) {\n  const theme = useTheme();\n  const boneColor = theme.dark\n    ? Color(defaultColors.boneColor).negate().rgb().toString()\n    : defaultColors.boneColor;\n  const highlightColor = theme.dark\n    ? Color(defaultColors.highlightColor).negate().rgb().toString()\n    : defaultColors.highlightColor;\n\n  return <SkeletonContent {...{ boneColor, highlightColor }} {...props} />;\n}\n","import * as React from 'react';\nimport SkeletonContent from 'app/components/Skeleton';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { ChipProps } from 'app/components/chips/Chip';\nimport ChipSelect from './ChipSelect';\nimport type { IChipSelect } from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserChipSelect extends Pick<IChipSelect<unknown>, 'variant' | 'error'> {\n  value?: DropzoneUserEssentialsFragment | null;\n  label: string;\n  icon?: ChipProps['icon'];\n  requiredPermissions: Permission[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(dzuser: DropzoneUserEssentialsFragment): void;\n}\n\nfunction DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const {\n    label,\n    requiredPermissions,\n    icon,\n    value,\n    variant,\n    error,\n    onLoadingStateChanged,\n    onChange,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]: DropzoneUserEssentialsFragment[]) => (first ? onChange(first) : null),\n    [onChange]\n  );\n  const getItemLabel = React.useCallback(\n    (dzUser: DropzoneUserEssentialsFragment) => dzUser?.user.name,\n    []\n  );\n  const isSelected = React.useCallback(\n    (item: DropzoneUserEssentialsFragment) => item.id === value?.id,\n    [value?.id]\n  );\n  const selected = React.useMemo(\n    () => [value].filter(Boolean) as DropzoneUserEssentialsFragment[],\n    [value]\n  );\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUserEssentialsFragment>\n        {...{ error, variant }}\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={\n          uniqBy(\n            data?.dropzoneUsers?.edges?.map((edge) => edge?.node) || [],\n            'id'\n          ) as DropzoneUserEssentialsFragment[]\n        }\n        value={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChange={onChangeSelected}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserChipSelectField = withHookForm(DropzoneUserChipSelect);\n\nexport default DropzoneUserChipSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  userId?: number | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onChange, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect<JumpTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={\n          uniqBy(\n            [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n            ({ id }) => id\n          ) || []\n        }\n        value={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const JumpTypeChipSelectField = withHookForm(JumpTypeChipSelect);\n\nexport default JumpTypeChipSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  error?: string | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onChange, value, error } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<LicenseEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        value={[value].filter(Boolean) as LicenseEssentialsFragment[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const LicenseChipSelectField = withHookForm(LicenseChipSelect);\n\nexport default LicenseChipSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: PlaneEssentialsFragment): void;\n}\n\nfunction PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onChange, onLoadingStateChanged, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<PlaneEssentialsFragment>\n        autoSelectFirst\n        {...{ error }}\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        value={[value].filter(Boolean) as PlaneEssentialsFragment[]}\n        renderItemLabel={(plane: PlaneEssentialsFragment) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChange={([first]) => (first ? onChange(first as PlaneEssentialsFragment) : null)}\n      />\n    </>\n  );\n}\n\nexport const PlaneChipSelectField = withHookForm(PlaneChipSelect);\n\nexport default PlaneChipSelect;\n","import { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedTicketTypesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  onlyPublicTickets?: boolean;\n  error?: string;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onChange, onlyPublicTickets, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useAllowedTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect<TicketTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={data?.ticketTypes || []}\n        value={[value].filter(Boolean) as TicketTypeEssentialsFragment[]}\n        renderItemLabel={(ticketType) => `${ticketType?.name} ($${ticketType?.cost})`}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const TicketTypeChipSelectField = withHookForm(TicketTypeChipSelect);\n\nexport default TicketTypeChipSelect;\n","import { withHookForm } from '../withHookForm';\nimport NumberField from './NumberField';\n\nexport const FormNumberField = withHookForm(NumberField);\n\nexport default NumberField;\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string | null;\n  name?: string | null;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, size, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text\n      label={initals || ''}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\nimport first from 'lodash/first';\n\ninterface IUserAvatarProps {\n  image?: string | null;\n  name?: string | null;\n  size?: number;\n}\n\nfunction stringToColor(string: string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, size } = props;\n  const initials = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return (\n    <Avatar\n      sx={{\n        bgcolor: stringToColor(name || 'Dropzone User'),\n      }}\n      style={{ height: size, width: size, alignSelf: 'center', marginRight: 12 }}\n      src={image || undefined}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n","import * as React from 'react';\nimport MuiMenu from '@mui/material/Menu';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport { View, TouchableOpacity, GestureResponderEvent } from 'react-native';\nimport { ListItemAvatar, ListItemIcon, ListItemText } from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IPopoverMenuProps {\n  open: boolean;\n  anchor: React.ReactNode;\n  children: React.ReactNode;\n  setOpen(open: boolean): void;\n}\n\ninterface IMenuItemProps {\n  title?: string | null;\n  testID?: string;\n  bold?: boolean;\n  icon?: IconSource;\n  avatar?: { name: string; image?: string } | null;\n  onPress(): void;\n}\n\nexport function MenuItem(props: IMenuItemProps) {\n  const { title, bold, onPress, avatar, icon, testID } = props;\n  return (\n    <MuiMenuItem\n      style={{ fontWeight: bold ? 'bold' : undefined }}\n      onClick={onPress}\n      data-testid={testID}\n    >\n      {!icon || avatar ? null : (\n        <ListItemIcon>\n          {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon} /> : null}\n          {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n        </ListItemIcon>\n      )}\n      {!avatar ? null : (\n        <ListItemAvatar>\n          <UserAvatar name={avatar.name} image={avatar?.image} size={32} />\n        </ListItemAvatar>\n      )}\n      <ListItemText>{title}</ListItemText>\n    </MuiMenuItem>\n  );\n}\n\nexport default function Menu(props: IPopoverMenuProps) {\n  const { open, setOpen, anchor, children } = props;\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const ref = React.useRef<TouchableOpacity>(null);\n  const onClick = React.useCallback(\n    (event: GestureResponderEvent) => {\n      setOpen(true);\n      console.log({ event });\n      setAnchorEl(event.currentTarget as unknown as Element);\n    },\n    [setOpen]\n  );\n  const onClose = React.useCallback(() => {\n    setAnchorEl(null);\n    setOpen(false);\n  }, [setOpen]);\n\n  return (\n    <>\n      <TouchableOpacity ref={ref} onPress={onClick}>\n        <View pointerEvents=\"none\">{anchor}</View>\n      </TouchableOpacity>\n      <MuiMenu\n        {...{ anchorEl, onClose, open }}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {children}\n      </MuiMenu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport MuiSelect from '@mui/material/Select';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport {\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  ListItemIcon,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport UserAvatar from 'app/components/UserAvatar';\nimport Menu from 'app/components/popover/Menu';\nimport { isEqual } from 'lodash';\n\nexport interface ISelectOption<T> {\n  label: string;\n  value: T;\n  icon?: IconSource;\n  avatar?: string | null;\n}\ninterface ISelectProps<T> {\n  label?: string;\n  error?: string | null;\n  helperText?: string;\n  options: ISelectOption<T>[];\n  value?: T | null;\n  onChange(item: T): void;\n  compare?(a: T | null | undefined, b: T | null | undefined): boolean;\n  renderAnchor?: React.FC<IAnchorProps<T>>;\n}\n\ninterface IAnchorProps<T> {\n  item?: ISelectOption<T>;\n  openMenu(): void;\n}\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : unknown;\ntype AllowedIcons = Extract<typeof MaterialCommunityIcons>['name'];\n\nexport default function Select<T>(props: ISelectProps<T>) {\n  const {\n    label,\n    error,\n    compare = isEqual,\n    options,\n    renderAnchor,\n    onChange,\n    value,\n    helperText,\n  } = props;\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const onOpen = React.useCallback(() => {\n    if (!options?.length) {\n      return;\n    }\n    setOpen(true);\n  }, [options?.length]);\n  const onDismiss = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const selectedOption = React.useMemo(\n    () => options.find((option) => compare(option.value, value)),\n    [compare, options, value]\n  );\n\n  const createSelectHandler = React.useCallback(\n    (option: ISelectOption<T>) => () => {\n      onDismiss();\n      onChange(option.value);\n    },\n    [onChange, onDismiss]\n  );\n  const showAvatars = React.useMemo(() => options?.some((option) => option.avatar), [options]);\n\n  const anchor = React.useMemo(\n    () =>\n      typeof renderAnchor === 'function'\n        ? (renderAnchor as Function)({ item: selectedOption, openMenu: onOpen })\n        : null,\n    [onOpen, renderAnchor, selectedOption]\n  );\n\n  if (renderAnchor) {\n    return (\n      <Menu {...{ anchor, open, setOpen }}>\n        {options?.map((option) => {\n          const { icon, avatar, label: title } = option;\n\n          return (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            <MuiMenuItem onClick={createSelectHandler(option)}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? (\n                    <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                  ) : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n\n              <ListItemText>{title}</ListItemText>\n            </MuiMenuItem>\n          );\n        })}\n      </Menu>\n    );\n  }\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\n      <MuiSelect\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={selectedOption?.value ? JSON.stringify(selectedOption?.value) : null}\n        defaultValue={selectedOption?.value ? JSON.stringify(selectedOption?.value) : null}\n        {...{ label }}\n        variant=\"standard\"\n        error={!!error}\n        style={{ paddingTop: 0 }}\n        native={false}\n        SelectDisplayProps={{\n          style: { display: 'inline-flex', alignItems: 'center' },\n        }}\n        onChange={({ target }) => {\n          const option = options.find((opt) => JSON.stringify(opt.value) === target.value);\n          if (option) {\n            onChange(option.value);\n          }\n        }}\n      >\n        {options?.map(({ value: val, icon, avatar, label: title }) => {\n          const isSelected = compare?.(selectedOption?.value, val as T);\n          console.debug({ title, isSelected, a: selectedOption?.value, b: val });\n          return (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            <MuiMenuItem value={JSON.stringify(val as T)} selected={isSelected}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? (\n                    <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                  ) : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n              <ListItemText primary={title} />\n            </MuiMenuItem>\n          );\n        })}\n      </MuiSelect>\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { UserRigDetailedFragment } from 'app/api/operations';\nimport { useAvailableRigsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport Chip from 'app/components/chips/Chip';\nimport Select, { ISelectOption } from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRigSelect {\n  dropzoneUserId?: number;\n  loadId?: number;\n  value?: UserRigDetailedFragment | null;\n  tandem?: boolean;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  autoSelectFirst?: boolean;\n  variant?: 'chip' | 'select';\n  label?: string;\n  error?: string | null;\n  onChange(rig: UserRigDetailedFragment): void;\n}\n\nfunction RigSelect(props: IRigSelect) {\n  const {\n    dropzoneUserId,\n    label,\n    variant,\n    value,\n    small,\n    loadId,\n    color: assignedColor,\n    backgroundColor,\n    autoSelectFirst,\n    onChange,\n    tandem,\n    error,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [fetchRigs, { data }] = useAvailableRigsLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUserId) {\n      fetchRigs({\n        variables: {\n          dropzoneUserId,\n          loadId,\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [fetchRigs, currentDropzoneId, tandem, dropzoneUserId, loadId]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.availableRigs?.length) {\n      onChange(data.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.availableRigs, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.availableRigs?.map((rig) => ({\n        label: rig?.name || [rig?.make, rig?.model].join(' '),\n        value: rig as UserRigDetailedFragment,\n      })) || [],\n    [data?.availableRigs]\n  );\n\n  const selected = React.useMemo(\n    () => data?.availableRigs?.find((node) => node?.id === value?.id),\n    [data?.availableRigs, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<UserRigDetailedFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"parachute\">\n        {item?.label || 'No Rig'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <Select<UserRigDetailedFragment>\n      {...{ options, error, renderAnchor: variant === 'chip' ? renderAnchor : undefined, label }}\n      value={selected}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RigSelectField = withHookForm(RigSelect);\n\nexport default RigSelect;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, List } from 'react-native-paper';\nimport { NumberFieldType } from 'app/components/input/number_input/NumberField';\nimport { Control, useWatch } from 'react-hook-form';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\n\nimport { Permission } from 'app/api/schema.d';\nimport { JumpTypeChipSelectField } from 'app/components/input/chip_select/JumpTypeChipSelect';\nimport { TicketTypeChipSelectField } from 'app/components/input/chip_select/TicketTypeChipSelect';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RigSelectField } from 'app/components/input/dropdown_select/RigSelect';\nimport { ManifestUserFields } from './useForm';\n\ninterface IManifestFormProps {\n  control: Control<ManifestUserFields>;\n}\nexport default function ManifestForm(props: IManifestFormProps) {\n  const { control } = props;\n\n  const { id, dropzoneUser, ticketType, load } = useWatch<ManifestUserFields>({ control });\n\n  const allowedToManifestOthers = useRestriction(\n    id ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n  const { extras: selectedAddons } = useWatch({ control });\n\n  return (\n    <>\n      <JumpTypeChipSelectField\n        {...{ control }}\n        name=\"jumpType\"\n        userId={Number(dropzoneUser?.id) || null}\n      />\n\n      <TicketTypeChipSelectField\n        {...{ control }}\n        onlyPublicTickets={!allowedToManifestOthers}\n        name=\"ticketType\"\n      />\n\n      {!ticketType?.extras?.length ? null : <List.Subheader>Ticket addons</List.Subheader>}\n      <ChipSelectField<ManifestUserFields, 'extras'>\n        {...{ control }}\n        allowEmpty\n        defaultValue={[]}\n        isSelected={(item) =>\n          selectedAddons\n            ?.map((addon) => addon?.id)\n            .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n        }\n        items={ticketType?.extras as TicketTypeExtraEssentialsFragment[]}\n        renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n          `${item.name} ($${item.cost})`\n        }\n        name=\"extras\"\n      />\n      <Divider />\n      {!dropzoneUser ? null : (\n        <RigSelectField\n          {...{ control }}\n          loadId={load?.id ? Number(load?.id) : undefined}\n          name=\"rig\"\n          label=\"Equipment\"\n          dropzoneUserId={Number(dropzoneUser?.id)}\n        />\n      )}\n      <FormNumberField\n        label=\"Exit weight\"\n        variant={NumberFieldType.Weight}\n        {...{ control }}\n        name=\"exitWeight\"\n      />\n\n      {!ticketType?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <FormTextField {...{ control }} label=\"Passenger name\" name=\"passengerName\" />\n\n          <FormNumberField\n            {...{ control }}\n            label=\"Passenger exit weight\"\n            name=\"passengerExitWeight\"\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IManifestContext {\n  manifest: ReturnType<typeof useManifest>;\n  dialogs: {\n    manifestUser: IDialogContextSubstate<\n      Omit<IManifestUserDialog, 'open' | 'onClose' | 'onSuccess'>\n    >;\n    credits: IDialogContextSubstate<Omit<ICreditsSheet, 'open' | 'onClose' | 'onSuccess'>>;\n    load: IDialogContextSubstate<Omit<ILoadDialog, 'open' | 'onClose' | 'onSuccess'>>;\n  };\n}\nexport const INITIAL_CONTEXT: IManifestContext = {\n  manifest: {\n    called: false,\n    loading: false,\n    loads: [],\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    deleteSlot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    manifestGroup: uninitializedHandler as never,\n    moveSlot: uninitializedHandler as never,\n    createLoad: uninitializedHandler as never,\n    permissions: {\n      canAddTransaction: false,\n      canCreateLoad: false,\n      canDeleteOwnSlot: false,\n      canDeleteSlot: false,\n      canManifestOthers: false,\n      canManifestSelf: false,\n      canUpdateOwnSlot: false,\n      canUpdateSlot: false,\n    },\n  },\n  dialogs: {\n    manifestUser: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        slot: undefined,\n        load: undefined,\n      },\n    },\n    load: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        load: undefined,\n      },\n    },\n    credits: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        dropzoneUser: undefined,\n      },\n    },\n  },\n};\nexport const ManifestContext = React.createContext<IManifestContext>(INITIAL_CONTEXT);\n\nexport function useManifestContext() {\n  return React.useContext(ManifestContext);\n}\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport * as React from 'react';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\n\nconst schema = yup.object().shape({\n  hasLicense: yup.boolean().isTrue('You need to select a license on your user profile'),\n  hasMembership: yup.boolean().isTrue('Your membership is out of date'),\n  hasRigInspection: yup.boolean().isTrue('Your rig needs to be inspected before you can manifest'),\n  hasReserveInDate: yup.boolean().isTrue('Your rig needs a reserve repack'),\n  hasExitWeight: yup.boolean().isTrue('You need to set your exit weight on your profile'),\n});\n\nexport default function useManifestValidator() {\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const canManifest = React.useCallback(\n    async function CheckManifestRequirements() {\n      try {\n        await schema.validate(currentUser, { abortEarly: true });\n        return true;\n      } catch (err) {\n        if (err instanceof ValidationError) {\n          throw err;\n        }\n        return false;\n      }\n    },\n    [currentUser]\n  );\n\n  return { canManifest };\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { SlotExhaustiveFragment, TicketTypeDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport isEqual from 'lodash/isEqual';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  // | 'load'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'groupNumber'\n  | 'passengerExitWeight'\n  | 'passengerName'\n> & { id?: string; load?: { id: string }; ticketType: TicketTypeDetailsFragment | null };\n\nexport const manifestUserValidation = yup.object().shape({\n  load: yup.object().required(),\n  exitWeight: yup.number().required('Please specify exit weight').min(0).max(300),\n  rig: yup.object().required('You cant manifest without a rig').nullable(),\n  jumpType: yup.object().required('Jump type is required').nullable(),\n  ticketType: yup.object().required('Ticket is required to manifest').nullable(),\n  original: yup.object().nullable(),\n  extras: yup.array().of(yup.object()).nullable(),\n});\n\nexport const EMPTY_FORM_VALUES: ManifestUserFields = {\n  id: undefined,\n  load: undefined,\n  exitWeight: 50,\n  rig: null,\n  ticketType: null,\n  jumpType: null,\n  passengerExitWeight: null,\n  passengerName: null,\n  extras: null,\n  groupNumber: 0,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<ManifestUserFields>;\n  onSuccess?(): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const notify = useNotifications();\n  const methods = useForm<ManifestUserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(manifestUserValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  React.useEffect(() => {\n    methods.reset(defaultValues);\n  }, [defaultValues, methods]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { manifestUser },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: ManifestUserFields) => {\n      try {\n        await canManifest();\n\n        const response = await manifestUser({\n          jumpType: fields.jumpType?.id,\n          extras: fields.extras?.map(({ id }) => id),\n          load: fields?.load?.id,\n          rig: !fields.rig?.id ? undefined : fields.rig?.id,\n          ticketType: fields.ticketType?.id,\n          dropzoneUser: fields.dropzoneUser?.id,\n          exitWeight: fields.exitWeight,\n          ...(!fields.ticketType?.isTandem\n            ? {}\n            : {\n                passengerName: fields.passengerName,\n                passengerExitWeight: fields.passengerExitWeight,\n              }),\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof ManifestUserFields, { type: 'custom', message });\n          });\n        }\n        if ('slot' in response) {\n          notify.success(`${fields.dropzoneUser?.user?.name} has been added to the load`);\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [manifestUser, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { usePortal } from '@gorhom/portal';\nimport { LoadEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport SlotForm from './ManifestForm';\nimport useForm from './useForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  load?: Pick<LoadEssentialsFragment, 'id' | 'loadNumber' | 'name'>;\n  slot?: Partial<SlotDetailsFragment>;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, load, slot, onSuccess, onClose } = props;\n\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      id: slot?.id,\n      load,\n      exitWeight: slot?.exitWeight || Number(slot?.dropzoneUser?.user?.exitWeight || 70),\n      dropzoneUser: slot?.dropzoneUser,\n      extras: slot?.extras || null,\n      groupNumber: slot?.groupNumber,\n      jumpType: slot?.jumpType,\n      passengerExitWeight: slot?.passengerExitWeight,\n      passengerName: slot?.passengerName,\n      rig: slot?.rig,\n      ticketType: slot?.ticketType || undefined,\n    },\n    onSuccess,\n  });\n\n  const portal = usePortal('drawer');\n\n  React.useEffect(() => {\n    if (!open) {\n      portal.removePortal('drawer');\n    }\n  }, [open, portal]);\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      title={`Manifest ${slot?.dropzoneUser?.user?.name} on ${load?.name}`}\n      {...{ open, onClose, loading }}\n      buttonLabel=\"Manifest\"\n      buttonAction={onSubmit}\n    >\n      <SlotForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Permission } from 'app/api/schema.d';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control } from 'react-hook-form';\nimport {\n  DropzoneUserChipSelectField,\n  PlaneChipSelectField,\n} from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { LoadFields } from './useForm';\n\ninterface ILoadFormProps {\n  control: Control<LoadFields>;\n}\nexport default function LoadForm(props: ILoadFormProps) {\n  const { control } = props;\n\n  return (\n    <>\n      <FormTextField name=\"name\" label=\"Name\" {...{ control }} placeholder=\"Optional\" />\n\n      <FormNumberField label=\"Max Slots\" {...{ control }} name=\"maxSlots\" />\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelectField {...{ control }} name=\"plane\" />\n\n        <DropzoneUserChipSelectField\n          label=\"GCA\"\n          {...{ control }}\n          name=\"gca\"\n          requiredPermissions={[Permission.ActAsGca]}\n        />\n\n        <DropzoneUserChipSelectField\n          label=\"Pilot\"\n          name=\"pilot\"\n          {...{ control }}\n          requiredPermissions={[Permission.ActAsPilot]}\n        />\n        <Divider style={{ marginVertical: 8 }} />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport { isEqual } from 'lodash';\nimport { LoadState } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type LoadFields = Required<\n  Pick<LoadDetailsFragment, 'gca' | 'pilot' | 'maxSlots' | 'plane' | 'isOpen'>\n> &\n  Pick<LoadDetailsFragment, 'name'> & { id?: string | null };\n\nexport const loadValidation = yup.object({\n  name: yup.string().nullable().default(null),\n  gca: yup.object().required('You must select a GCA'),\n  pilot: yup.object().required('Every load needs a pilot'),\n  plane: yup.object().required('You cant create a load without an aircraft'),\n  original: yup.object().nullable(),\n  maxSlots: yup.number().required('You must specify max slots').default(0),\n  id: yup.string().nullable(),\n  isOpen: yup.boolean().default(true),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<LoadFields> = {\n  id: undefined,\n  gca: null,\n  pilot: null,\n  plane: undefined,\n  maxSlots: 0,\n  name: null,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<LoadFields>;\n  onSuccess?(load: LoadDetailsFragment): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<LoadFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(loadValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { control, reset, setValue } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const { plane } = useWatch<LoadFields>({ control });\n\n  React.useEffect(() => {\n    if (plane?.maxSlots) {\n      setValue('maxSlots', plane.maxSlots);\n    }\n  }, [plane?.maxSlots, setValue]);\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: LoadFields) => {\n      try {\n        await canManifest();\n        const validatedFields = loadValidation.validateSync(fields);\n\n        const response = await createLoad({\n          gca: Number(validatedFields.gca?.id),\n          state: LoadState.Open,\n          pilot: Number(validatedFields.pilot?.id),\n          plane: Number(validatedFields.plane?.id),\n          maxSlots: Number(validatedFields.maxSlots),\n          name: validatedFields.name,\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof LoadFields, { type: 'custom', message });\n          });\n        }\n        if ('load' in response) {\n          notify.success(`Load #${response.load?.loadNumber} added to the board`);\n          onSuccess?.(response.load);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\n\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport LoadForm from './LoadForm';\nimport useForm from './useForm';\n\nexport interface ILoadDialog {\n  open?: boolean;\n  load?: LoadDetailsFragment;\n  onClose(): void;\n  onSuccess(load: LoadDetailsFragment): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, load, onClose, onSuccess } = props;\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      gca: load?.gca,\n      maxSlots: load?.maxSlots,\n      name: load?.name,\n      pilot: load?.pilot,\n      plane: load?.plane,\n      id: load?.id,\n    },\n    onSuccess,\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSubmit}\n      scrollable\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={loading}\n      title=\"New Load\"\n    >\n      <LoadForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, DataTable } from 'react-native-paper';\nimport { TransactionType } from 'app/api/schema.d';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { DropzoneUserDetailsFragment } from 'app/api/operations';\nimport { NumberFieldType } from '../../components/input/number_input/NumberField';\nimport { CreditFields } from './useForm';\n\ninterface ICreditsFormProps {\n  control: Control<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment;\n}\nexport default function CreditsForm(props: ICreditsFormProps) {\n  const { control, dropzoneUser } = props;\n  const { amount = 0, type } = useWatch({ control });\n\n  const subtotal =\n    type === TransactionType.Deposit\n      ? (dropzoneUser?.credits || 0) + amount\n      : (dropzoneUser?.credits || 0) - amount;\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Message\"\n        name=\"message\"\n        // style={{ marginHorizontal: 8 }}\n      />\n      <View>\n        <FormNumberField\n          variant={NumberFieldType.Cash}\n          label={type === TransactionType.Withdrawal ? 'Withdraw amount' : 'Add amount'}\n          name=\"amount\"\n          {...{ control }}\n        />\n        <Divider />\n\n        <DataTable>\n          <DataTable.Row>\n            <DataTable.Title>Current balance</DataTable.Title>\n            <DataTable.Cell numeric>{`$${dropzoneUser?.credits || 0}`}</DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              {type === TransactionType.Withdrawal ? 'Withdraw' : 'Deposit'}\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[type === TransactionType.Deposit ? '+' : '-', '$', amount].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              <Text style={{ fontWeight: 'bold' }}>New total</Text>\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[subtotal < 0 ? '-' : '', '$', subtotal < 0 ? subtotal * -1 : subtotal].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n        </DataTable>\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { DropzoneUserDetailsFragment, OrderEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { TransactionType } from 'app/api/schema.d';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type CreditFields = {\n  amount: number;\n  dropzoneUser: DropzoneUserDetailsFragment | null;\n  type: TransactionType;\n  message?: string | null;\n};\n\nexport const orderValidation = yup.object({\n  amount: yup.number().integer().default(0).min(1, 'Amount must be greater than 0'),\n  message: yup.string().nullable().default(null),\n  type: yup\n    .string()\n    .oneOf(Object.values(TransactionType))\n    .required('No transaction type selected')\n    .default(TransactionType.Withdrawal),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<CreditFields> = {\n  amount: 0,\n  message: null,\n  dropzoneUser: null,\n  type: TransactionType.Deposit,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment | null;\n  onSuccess?(order: OrderEssentialsFragment): void;\n}\n\nexport default function useCreditsForm(opts: IUseManifestFormOpts) {\n  const { initial, dropzoneUser, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n  const { addCredits, withdrawCredits } = useUserProfile();\n\n  const methods = useForm<CreditFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(orderValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: CreditFields) => {\n      console.debug({ fields });\n      if (!dropzoneUser) {\n        setError('amount', { message: 'No user selected' });\n        return;\n      }\n      try {\n        const response =\n          fields.type === TransactionType.Deposit\n            ? await addCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              })\n            : await withdrawCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'message':\n                  setError('message', { message });\n                  break;\n                default:\n                  setError('amount', { message });\n                  break;\n              }\n            });\n          }\n          if ('order' in response && response.order) {\n            onSuccess?.(response.order);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad, dropzoneUser, setError, notify, onSuccess, addCredits, withdrawCredits]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { TransactionType } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport CreditsForm from './CreditsForm';\nimport useCreditsForm from './useForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUserEssentialsFragment;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser, onSuccess } = props;\n  const { onSubmit, control, setValue, loading } = useCreditsForm({\n    onSuccess,\n    dropzoneUser,\n  });\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      {...{ open, loading, onClose }}\n      disablePadding\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n      scrollable={false}\n    >\n      <View style={{ marginBottom: 24 }}>\n        <Tabs\n          defaultIndex={0} // default = 0\n          onChangeIndex={(newIndex) => {\n            setValue('type', newIndex === 1 ? TransactionType.Withdrawal : TransactionType.Deposit);\n          }}\n          mode=\"fixed\"\n        >\n          <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n            <View />\n          </TabScreen>\n          <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n            <View />\n          </TabScreen>\n        </Tabs>\n      </View>\n      <View style={styles.form}>\n        <CreditsForm {...{ control, dropzoneUser }} />\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  form: {\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\n\nexport interface IDialogContextSubstate<State extends object = object> {\n  visible: boolean;\n  open(state?: State): void;\n  close(): void;\n  state?: State;\n}\nexport default function createUseDialog<State extends object = object>(defaults?: State) {\n  return function useDialog(): IDialogContextSubstate<State> {\n    const [state, setState] = React.useState<State>();\n    const open = React.useCallback((newState: State) => {\n      setState({ ...defaults, ...newState });\n    }, []);\n    const close = React.useCallback(() => setState(undefined), []);\n\n    return { state, visible: !!state, open, close };\n  };\n}\n","import * as React from 'react';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport noop from 'lodash/noop';\nimport { LoadsQueryVariables } from 'app/api/operations';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport ManifestUserDialog from 'app/forms/manifest_user/Dialog';\nimport LoadDialog from 'app/forms/load/Dialog';\nimport CreditSheet from 'app/forms/credits/Credits';\nimport createUseDialog from '../hooks/useDialog';\nimport { ManifestContext, useManifestContext } from './context';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nfunction ManifestUserDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { manifestUser } = dialogs;\n  return (\n    <ManifestUserDialog\n      onClose={manifestUser.close}\n      onSuccess={manifestUser.close}\n      open={manifestUser.visible}\n      {...manifestUser.state}\n    />\n  );\n}\n\nfunction LoadDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { load } = dialogs;\n  return (\n    <LoadDialog onClose={load.close} onSuccess={load.close} open={load.visible} {...load.state} />\n  );\n}\n\nfunction CreditsDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { credits } = dialogs;\n  return (\n    <CreditSheet\n      onClose={credits.close}\n      onSuccess={credits.close}\n      open={credits.visible}\n      {...credits.state}\n    />\n  );\n}\n\nconst useManifestUserDialog = createUseDialog<Pick<IManifestUserDialog, 'load' | 'slot'>>();\nconst useLoadDialog = createUseDialog<Pick<ILoadDialog, 'load'>>();\nconst useCreditsDialog = createUseDialog<Pick<ICreditsSheet, 'dropzoneUser'>>();\n\nexport function ManifestContextProvider(props: React.PropsWithChildren<UseManifestOptions>) {\n  const { dropzone, date, children } = props;\n  const manifestUserDialog = useManifestUserDialog();\n  const loadDialog = useLoadDialog();\n  const creditsDialog = useCreditsDialog();\n\n  const manifest = useManifest({ dropzone, date });\n\n  const { permissions } = manifest;\n\n  const dialogs = React.useMemo(\n    () => ({\n      manifestUser: manifestUserDialog,\n      load: permissions.canCreateLoad ? loadDialog : { ...loadDialog, open: noop },\n      credits: permissions.canAddTransaction ? creditsDialog : { ...creditsDialog, open: noop },\n    }),\n    [\n      manifestUserDialog,\n      permissions.canCreateLoad,\n      loadDialog,\n      permissions.canAddTransaction,\n      creditsDialog,\n    ]\n  );\n\n  const context = React.useMemo(() => ({ manifest, dialogs }), [manifest, dialogs]);\n\n  return (\n    <ManifestContext.Provider value={context}>\n      {children}\n      <CreditsDialogWrapper />\n      <LoadDialogWrapper />\n      <ManifestUserDialogWrapper />\n    </ManifestContext.Provider>\n  );\n}\n\nexport { useManifest };\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { List, Modal } from 'react-native-paper';\nimport { TimePickerModal } from 'react-native-paper-dates';\nimport { DateTime } from 'luxon';\n\ninterface ITimePickerProps {\n  label?: string;\n  timestamp?: number;\n  disabled?: boolean;\n  color?: string;\n  onChange(timestamp: number): void;\n}\nexport default function TimePicker(props: ITimePickerProps) {\n  const { disabled, label, timestamp, onChange, color } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const onDismissSingle = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirm = React.useCallback(\n    ({ date }: { date: Date }) => {\n      setOpen(false);\n      onChange(date.getTime() / 1000);\n    },\n    [setOpen, onChange]\n  );\n\n  const timestampLabel = timestamp ? format(timestamp * 1000, 'hh:mm') : 'No time selected';\n\n  return (\n    <>\n      <List.Item\n        title={label || timestampLabel}\n        disabled={!!disabled}\n        description={!label ? null : timestampLabel}\n        left={() => <List.Icon color={color} icon=\"calendar\" />}\n        onPress={() => setOpen(true)}\n      />\n\n      <Modal visible={open}>\n        <TimePickerModal\n          hours={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).hour}\n          minutes={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).minute}\n          locale=\"en\"\n          visible={open}\n          onDismiss={onDismissSingle}\n          onConfirm={(time) =>\n            onConfirm({\n              date: DateTime.local()\n                .set({\n                  hour: time.hours,\n                  minute: time.minutes,\n                })\n                .toJSDate(),\n            })\n          }\n          label={label}\n        />\n      </Modal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog } from 'react-native-paper';\nimport TimePicker from 'app/components/input/time_picker/TimePicker';\n\nexport interface ITimePickerDialog {\n  open: boolean;\n  onChange(time: number): void;\n  onClose(): void;\n}\n\nexport function TimePickerDialog(props: ITimePickerDialog) {\n  const { open, onClose, onChange } = props;\n  const [time, setTime] = React.useState<number>();\n  const [loading, setLoading] = React.useState(false);\n\n  const onSubmit = React.useCallback(() => {\n    try {\n      setLoading(true);\n      if (time) {\n        onChange(time);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [onChange, time]);\n\n  return (\n    <Dialog visible={open} dismissable onDismiss={onClose}>\n      <Dialog.Title>Dispatch Aircraft</Dialog.Title>\n      <Dialog.Content>\n        <TimePicker onChange={setTime} timestamp={time} label=\"Take-off\" />\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button disabled={loading} onPress={onClose}>\n          Cancel\n        </Button>\n        <Button disabled={loading} onPress={onSubmit}>\n          Dispatch\n        </Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useLoad } from 'app/api/crud/useLoad';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface ILoadContext {\n  load: ReturnType<typeof useLoad>;\n  dialogs: {\n    timepicker: IDialogContextSubstate<object>;\n  };\n}\n\nexport const INITIAL_CONTEXT: ILoadContext = {\n  load: {\n    called: false,\n    loading: false,\n    load: null,\n    update: { loading: false, mutate: uninitializedHandler as never },\n    updateGCA: uninitializedHandler as never,\n    updateLoadMaster: uninitializedHandler as never,\n    updatePlane: uninitializedHandler as never,\n    updatePilot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    canDispatchAircraft: false,\n    createAircraftDispatchAction: noop as never,\n    dispatchAtTime: uninitializedHandler as never,\n    dispatchInMinutes: uninitializedHandler as never,\n    markAsLanded: uninitializedHandler as never,\n    cancel: uninitializedHandler as never,\n    updateLoadState: uninitializedHandler as never,\n  },\n  dialogs: {\n    timepicker: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const LoadContext = React.createContext<ILoadContext>(INITIAL_CONTEXT);\n\nexport function useLoadContext() {\n  return React.useContext(LoadContext);\n}\n","import * as React from 'react';\nimport type { LoadQueryVariables } from 'app/api/operations';\nimport { useLoad } from 'app/api/crud';\nimport { TimePickerDialog } from './TimePickerDialog';\nimport { LoadContext } from './context ';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useTimePickerDialog = createUseDialog();\n\nfunction LoadContextProvider(props: React.PropsWithChildren<Partial<LoadQueryVariables>>) {\n  const { children, ...variables } = props;\n  const load = useLoad(variables);\n  const timepicker = useTimePickerDialog();\n  const dialogs = React.useMemo(() => ({ timepicker }), [timepicker]);\n\n  const onChangeDispatchTime = React.useCallback(\n    (time: number) => {\n      load.dispatchAtTime(time).then(timepicker.close);\n    },\n    [load, timepicker.close]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      load,\n      dialogs,\n    }),\n    [load, dialogs]\n  );\n  return (\n    <LoadContext.Provider value={context}>\n      {children}\n      <TimePickerDialog\n        open={timepicker.visible}\n        onClose={timepicker.close}\n        onChange={onChangeDispatchTime}\n      />\n    </LoadContext.Provider>\n  );\n}\n\nexport function withLoadContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<LoadQueryVariables>) {\n    const { id, ...rest } = props;\n    return (\n      <LoadContextProvider {...{ id }}>\n        <Component {...(rest as T)} />\n      </LoadContextProvider>\n    );\n  };\n}\n\nexport { LoadContextProvider };\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Control } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { AircraftFields } from './useForm';\n\nexport interface IAircraftFormProps {\n  control: Control<AircraftFields>;\n}\nexport default function AircraftForm(props: IAircraftFormProps) {\n  const { control } = props;\n  return (\n    <>\n      <FormTextField {...{ control }} name=\"name\" mode=\"outlined\" label=\"Name\" />\n\n      <FormTextField {...{ control }} name=\"registration\" label=\"Registration\" />\n      <FormNumberField {...{ control }} name=\"minSlots\" label=\"Min slots\" />\n\n      <FormNumberField\n        {...{ control }}\n        name=\"maxSlots\"\n        label=\"Max slots\"\n        helperText=\"Maximum amount of jumpers who can be manifested on one load\"\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\n\nimport { isEqual } from 'lodash';\nimport { useAircrafts } from 'app/api/crud/useAircrafts';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type AircraftFields = {\n  id?: string;\n  name?: string;\n  registration: string;\n  minSlots?: number;\n  maxSlots: number;\n  basicEmptyWeight?: number;\n  maxTakeOffWeight?: number;\n\n  // FIXME: Should be AVGAS/Jetfuel\n  fuelType?: string;\n};\n\nexport const aircraftValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().nullable().default(null),\n  registration: yup.string().required('Registration is required'),\n  minSlots: yup.number().integer().default(1).min(1, 'Minimum slots must be greater than 0'),\n  maxSlots: yup\n    .number()\n    .integer()\n    .required('Maximum slots is required')\n    .min(1, 'Maximum slots must be greater than 0'),\n  basicEmptyWeight: yup.number().default(0).min(0, 'Basic empty weight must be greater than 0'),\n  maxTakeOffWeight: yup\n    .number()\n    .default(0)\n    .min(0, 'Maximum take off weight must be greater than 0'),\n  fuelType: yup.string().nullable().default(null),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<AircraftFields> = {\n  name: '',\n  registration: '',\n  minSlots: 1,\n  maxSlots: 4,\n  basicEmptyWeight: 0,\n  maxTakeOffWeight: 0,\n  fuelType: undefined,\n};\n\nexport interface IUseAircraftFormOpts {\n  initial?: Partial<AircraftFields>;\n  onSuccess?(aircraft: PlaneEssentialsFragment): void;\n}\n\nexport default function useAircraftForm(opts: IUseAircraftFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<AircraftFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(aircraftValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create, update } = useAircrafts();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: AircraftFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await aircraftValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await update(Number(fields.id), {\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            })\n          : await create({\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'name':\n                case 'maxSlots':\n                case 'minSlots':\n                case 'registration':\n                  setError(field, { message });\n                  break;\n                default:\n                  break;\n              }\n            });\n          }\n          if ('aircraft' in response && response.aircraft) {\n            notify.success('Aircraft saved');\n            onSuccess?.(response.aircraft);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, create, update]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport PlaneForm from './AircraftForm';\nimport useAircraftForm, { AircraftFields } from './useForm';\n\nexport interface IPlaneDialogProps {\n  open: boolean;\n  initial?: Partial<AircraftFields>;\n  original?: PlaneEssentialsFragment;\n  onClose(): void;\n}\n\nexport default function AircraftDialog(props: IPlaneDialogProps) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit } = useAircraftForm({\n    initial: {\n      id: original?.id || initial?.id || undefined,\n      name: original?.name || initial?.name,\n      registration: original?.registration || original?.registration || undefined,\n      minSlots: original?.minSlots || original?.minSlots || undefined,\n      maxSlots: original?.maxSlots || original?.maxSlots,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n    >\n      <PlaneForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  error?: string | null;\n  onChange(value: number): void;\n}\nfunction AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange, error } = props;\n\n  console.debug('alt', { value, props });\n  return (\n    <Select\n      label=\"Altitude\"\n      {...{ value, onChange, error }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\n\nexport const AltitudeSelectField = withHookForm(AltitudeSelect);\n\nexport default AltitudeSelect;\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { Title } from 'react-native-paper';\nimport { DropzoneUser, Permission } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserSelect {\n  requiredPermissions?: Permission[];\n  value: DropzoneUser | null;\n  label: string;\n  onChange(dzUser: DropzoneUser): void;\n}\n\nfunction DropzoneUserSelect(props: IDropzoneUserSelect) {\n  const { requiredPermissions, value, onChange, label } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  return (\n    <>\n      <Title>{label}</Title>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        compare={(a, b) => a?.id === b?.id}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserSelectField = withHookForm(DropzoneUserSelect);\n\nexport default DropzoneUserSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IFederationSelect {\n  value?: FederationEssentialsFragment | null;\n  onChange(jt: FederationEssentialsFragment): void;\n}\n\nfunction FederationSelect(props: IFederationSelect) {\n  const { value, onChange } = props;\n\n  const { data } = useFederationsQuery();\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onChange(data.federations[0]);\n    }\n  }, [data?.federations, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.federations?.map((node) => ({\n        label: node?.name || '',\n        value: node as FederationEssentialsFragment,\n      })) || [],\n    [data?.federations]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Select<FederationEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const FederationSelectField = withHookForm(FederationSelect);\n\nexport default FederationSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  allowedForDropzoneUserIds?: number[] | null;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeSelect(props: IJumpTypeSelect) {\n  const { allowedForDropzoneUserIds, onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((state) => state.global);\n\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      allowedForDropzoneUserIds: allowedForDropzoneUserIds as number[],\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.jumpTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as JumpTypeEssentialsFragment,\n      })) || [],\n    [data?.jumpTypes]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n  return (\n    <Select<JumpTypeEssentialsFragment>\n      label=\"Jump type\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const JumpTypeSelectField = withHookForm(JumpTypeSelect);\n\nexport default JumpTypeSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseSelect(props: ILicenseSelect) {\n  const { onChange, value, federationId } = props;\n\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.licenses.map((node) => ({\n        label: node?.name || '',\n        value: node as LicenseEssentialsFragment,\n      })) || [],\n    [data?.licenses]\n  );\n\n  const selected = React.useMemo(() => value, [value]);\n  return (\n    <Select<LicenseEssentialsFragment>\n      label=\"License\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const LicenseSelectField = withHookForm(LicenseSelect);\n\nexport default LicenseSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  onCHange(plane: PlaneEssentialsFragment): void;\n}\nfunction PlaneSelect(props: IPlaneSelect) {\n  const { onCHange, value } = props;\n  const { dropzone: currentDropzone } = useDropzoneContext();\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  return <Select<PlaneEssentialsFragment> value={selected} options={options} onChange={onCHange} />;\n}\n\nexport const PlaneSelectField = withHookForm(PlaneSelect);\n\nexport default PlaneSelect;\n","import { RoleEssentialsFragment } from 'app/api/operations';\nimport { useRolesQuery } from 'app/api/reflection';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRoleSelect {\n  value?: RoleEssentialsFragment | null;\n  disabled?: boolean;\n  onChange(jt: RoleEssentialsFragment): void;\n}\n\nfunction RoleSelect(props: IRoleSelect) {\n  const { onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useRolesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.roles?.map(({ permissions, ...node }) => ({\n        label: startCase(node?.name || ''),\n        value: node,\n      })) || [],\n    [data?.dropzone?.roles]\n  );\n\n  return (\n    <Select<RoleEssentialsFragment>\n      label=\"Access level\"\n      compare={(a, b) => a?.id === b?.id}\n      {...{ options, value, onChange }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RoleSelectField = withHookForm(RoleSelect);\n\nexport default RoleSelect;\n","import * as React from 'react';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useTicketTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  required?: boolean;\n  allowManifestingSelf?: boolean | null;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeSelect(props: ITicketTypeSelect) {\n  const { allowManifestingSelf, value, onChange } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      allowManifestingSelf,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.ticketTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as TicketTypeEssentialsFragment,\n      })) || [],\n    [data?.ticketTypes]\n  );\n  return <Select<TicketTypeEssentialsFragment> {...{ value, options, onChange }} />;\n}\n\nexport const TicketTypeSelectField = withHookForm(TicketTypeSelect);\n\nexport default TicketTypeSelect;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { FederationSelectField, RoleSelectField } from 'app/components/input/dropdown_select';\nimport { LicenseChipSelectField } from 'app/components/input/chip_select';\n\nimport { UserFields } from './useForm';\n\ninterface IGhostFormProps {\n  control: Control<UserFields>;\n}\nexport default function GhostForm(props: IGhostFormProps) {\n  const { control } = props;\n\n  const { federation, license } = useWatch({ control });\n\n  return (\n    <>\n      <FormTextField label=\"Name\" name=\"name\" {...{ control }} />\n\n      <FormTextField label=\"Nickname\" name=\"nickname\" placeholder=\"Optional\" {...{ control }} />\n\n      <FormTextField label=\"Email\" name=\"email\" {...{ control }} />\n      <FormTextField label=\"Phone number\" name=\"phone\" {...{ control }} />\n\n      <FormNumberField label=\"Exit weight (kg)\" name=\"exitWeight\" {...{ control }} />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelectField {...{ control }} name=\"federation\" />\n\n        {(license?.federation?.id || federation?.id) && (\n          <LicenseChipSelectField name=\"license\" {...{ control }} />\n        )}\n      </View>\n      <RoleSelectField name=\"role\" {...{ control }} />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport {\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  RoleEssentialsFragment,\n  UserEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type UserFields = {\n  id?: string | null;\n  name: string;\n  phone?: string | null;\n  federationUid?: string | null;\n  nickname: string;\n  email: string;\n  exitWeight: number;\n  federation?: FederationEssentialsFragment;\n  license?: LicenseDetailsFragment;\n  role?: RoleEssentialsFragment;\n};\n\nexport const ghostValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  nickname: yup.string().optional().nullable(),\n  email: yup.string().required('Email is required to invite the user'),\n  phone: yup.string().optional().nullable(),\n  federationUid: yup.string().optional().nullable(),\n  exitWeight: yup\n    .number()\n    .required('Exit weight is required')\n    .min(40, 'Exit weight must be more than 40kg')\n    .default(50),\n  federation: yup.object().required('Federation must be selected'),\n  license: yup.object().required('All jumpers must have a license'),\n  role: yup.object().required('You must select a role'),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<UserFields> = {\n  name: '',\n  nickname: '',\n  email: '',\n  role: undefined,\n  license: undefined,\n  exitWeight: 50,\n  federation: undefined,\n  id: null,\n  phone: '',\n  federationUid: null,\n};\n\nexport interface IUseUserFormOpts {\n  initial?: Partial<UserFields>;\n  onSuccess?(user: UserEssentialsFragment): void;\n}\n\nexport default function useUserForm(opts: IUseUserFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<UserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ghostValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('license');\n    register('federation');\n    register('role');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create } = useUserProfile();\n  const notify = useNotifications();\n\n  const [{ loading }, createUser] = useAsyncFn(\n    async (fields: UserFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ghostValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = await create({\n          dropzone: Number(dropzone.id),\n          email: validated.email,\n          name: validated.name,\n          exitWeight: validated.exitWeight,\n          role: Number(validated.role?.id),\n          license: Number(validated?.license?.id),\n          federationNumber: validated?.federationUid,\n          phone: validated?.phone,\n        });\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('user' in response && response.user) {\n            notify.success(`${validated.name} has been invited`);\n            onSuccess?.(response.user);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, defaultValues, create]\n  );\n\n  const { control, setValue } = methods;\n  const { federation, license } = useWatch({ control });\n\n  React.useEffect(() => {\n    if (license?.federation && license?.federation?.id !== federation?.id) {\n      setValue('federation', license.federation as FederationEssentialsFragment);\n    }\n  }, [federation?.id, license?.federation, setValue]);\n\n  const onSubmit = React.useMemo(() => handleSubmit(createUser), [createUser, handleSubmit]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport GhostForm from './Form';\nimport useForm, { UserFields } from './useForm';\n\nexport interface ICreateGhostDialog {\n  open?: boolean;\n  original?: DropzoneUserEssentialsFragment;\n  initial?: Partial<UserFields>;\n  onClose(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.user?.name || initial?.name,\n      nickname: original?.user?.nickname || initial?.nickname,\n      phone: original?.user?.phone || initial?.phone,\n      license: original?.license || initial?.license,\n      federation: initial?.federation,\n      email: original?.user?.email || initial?.email,\n      role: original?.role || initial?.role,\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      {...{ open, loading, onClose, snapPoints }}\n      buttonAction={onSubmit}\n      buttonLabel=\"Create\"\n    >\n      <GhostForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, useTheme, Switch as SwitchComponent, List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ISwitchProps\n  extends Omit<Extract<typeof SwitchComponent>, 'onChange' | 'onChangeText' | 'error'> {\n  label?: string;\n  error?: string | null;\n  helperText?: string | null;\n  onChange?(value: boolean): void;\n}\n\nfunction Switch(props: ISwitchProps) {\n  const { error, label, helperText, onChange, style, ...rest } = props;\n  const theme = useTheme();\n  return (\n    <>\n      <List.Item\n        title={label}\n        right={() => (\n          <SwitchComponent\n            style={StyleSheet.flatten([\n              styles.field,\n              { backgroundColor: theme.colors.surface },\n              style,\n            ])}\n            {...rest}\n            onValueChange={onChange}\n          />\n        )}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const SwitchField = withHookForm(Switch);\n\nexport default Switch;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import { useTicketTypeExtrasLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List, Divider } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { Control, useWatch } from 'react-hook-form';\nimport { AltitudeSelectField } from 'app/components/input/dropdown_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { SwitchField } from 'app/components/input/switch/Switch';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { TicketTypeFields } from './useForm';\n\ninterface ITicketTypeFormProps {\n  control: Control<TicketTypeFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { altitude } = useWatch({ control });\n  const [getTicketAddons, query] = useTicketTypeExtrasLazyQuery();\n  const { data } = query;\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      getTicketAddons({ variables: { dropzoneId: dropzone?.id } });\n    }\n  }, [dropzone?.id, getTicketAddons]);\n\n  const { extras: selectedAddons } = useWatch({ control });\n  console.debug({ altitude });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Base cost without extra ticket addons\"\n      />\n      <View style={{ width: '100%' }}>\n        <AltitudeSelectField {...{ control }} name=\"altitude\" />\n\n        {(!altitude || ![4000, 14000].includes(altitude)) && (\n          <FormNumberField {...{ control }} label=\"Custom altitude\" name=\"altitude\" />\n        )}\n\n        <SwitchField\n          {...{ control }}\n          name=\"isTandem\"\n          label=\"Tandem\"\n          helperText=\"Allow also manifesting a passenger when using this ticket type\"\n        />\n\n        <SwitchField\n          {...{ control }}\n          name=\"allowManifestingSelf\"\n          label=\"Public manifesting\"\n          helperText=\"Allow this ticket to be used for public manifesting, e.g not tandems\"\n        />\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        <ChipSelectField<TicketTypeFields, 'extras'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedAddons\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n          }\n          items={(data?.extras as TicketTypeExtraEssentialsFragment[]) || []}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"extras\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  altitude: number;\n  allowManifestingSelf: boolean;\n  isTandem: boolean;\n  extras: TicketTypeAddonEssentialsFragment[];\n};\n\nexport const ticketTypeValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().default(14000).required().default(14000),\n  extras: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeFields> = {\n  name: '',\n  cost: 30,\n  allowManifestingSelf: true,\n  altitude: 14000,\n  extras: [],\n  id: undefined,\n  isTandem: false,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeFields>;\n  onSuccess?(ticketType: TicketTypeEssentialsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketTypeValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('altitude');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketType, updateTicketType } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: TicketTypeFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketTypeValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketType(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[]).map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            })\n          : await createTicketType({\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[])?.map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketType' in response && response.ticketType) {\n            notify.success('Ticket saved');\n            onSuccess?.(response.ticketType);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, createTicketType, updateTicketType, defaultValues]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketTypeForm';\nimport useForm, { TicketTypeFields } from './useForm';\n\nexport interface ITicketTypeDialog {\n  open: boolean;\n  original?: TicketTypeDetailsFragment;\n  initial?: Partial<TicketTypeFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      allowManifestingSelf: original?.allowManifestingSelf || initial?.allowManifestingSelf,\n      altitude: original?.altitude || initial?.altitude || 14000,\n      extras: original?.extras || initial?.extras,\n      id: original?.id || initial?.id || undefined,\n      isTandem: original?.isTandem || initial?.isTandem,\n    },\n    onSuccess: onClose,\n  });\n\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  TicketTypeEssentialsFragment,\n  TicketTypeExtraEssentialsFragment,\n} from 'app/api/operations';\nimport { useTickets } from 'app/api/crud';\nimport { Control, useWatch } from 'react-hook-form';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport type { TicketTypeAddonFields } from './useForm';\n\ninterface ITicketTypeAddonFormProps {\n  control: Control<TicketTypeAddonFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeAddonFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { ticketTypes } = useTickets({ dropzone: dropzone?.id });\n\n  const { ticketTypes: selectedTicketTypes } = useWatch({ control });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Cost to add this addon to a ticket\"\n      />\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        <ChipSelectField<TicketTypeAddonFields, 'ticketTypes'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedTicketTypes\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeEssentialsFragment)?.id) || false\n          }\n          items={ticketTypes as TicketTypeEssentialsFragment[]}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"ticketTypes\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonDetailsFragment,\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeAddonFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  ticketTypes: TicketTypeEssentialsFragment[];\n};\n\nexport const ticketAddonValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().required().default(14000),\n  ticketTypes: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeAddonFields> = {\n  name: '',\n  cost: 30,\n  ticketTypes: [],\n  id: undefined,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeAddonFields>;\n  onSuccess?(ticketTypeAddon: TicketTypeAddonDetailsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeAddonFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketAddonValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketTypeAddon, updateTicketTypeAddon } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onSave] = useAsyncFn(\n    async (fields: TicketTypeAddonFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketAddonValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketTypeAddon(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            })\n          : await createTicketTypeAddon({\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketTypeAddon' in response && response.ticketTypeAddon) {\n            notify.success('Ticket addon saved');\n            onSuccess?.(response.ticketTypeAddon);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [\n      dropzone?.id,\n      setError,\n      notify,\n      onSuccess,\n      createTicketTypeAddon,\n      updateTicketTypeAddon,\n      defaultValues,\n    ]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onSave), [handleSubmit, onSave]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketAddonForm';\nimport useForm from './useForm';\nimport type { TicketTypeAddonFields } from './useForm';\n\nexport interface ITicketTypeAddonDialog {\n  open: boolean;\n  original?: TicketTypeAddonDetailsFragment;\n  initial?: Partial<TicketTypeAddonFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeAddonDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      ticketTypes: original?.ticketTypes || initial?.ticketTypes || [],\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport type { DropzoneQueryVariables } from 'app/api/operations';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport AircraftSheet from 'app/forms/aircraft/Dialog';\nimport CreateUserSheet from 'app/forms/create_user/Dialog';\nimport TicketTypeSheet from 'app/forms/ticket_type/Dialog';\nimport TicketTypeAddonSheet from 'app/forms/ticket_type_addon/Dialog';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport { DropzoneContext } from './context';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useAircraftDialog = createUseDialog<Pick<IPlaneDialogProps, 'initial' | 'original'>>();\nconst useCreateUserDialog = createUseDialog<Pick<ICreateGhostDialog, 'initial' | 'original'>>();\nconst useTicketTypeDialog = createUseDialog<Pick<ITicketTypeDialog, 'initial' | 'original'>>();\nconst useTicketTypeAddonDialog =\n  createUseDialog<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>();\n\nfunction DropzoneContextProvider(props: React.PropsWithChildren<Partial<DropzoneQueryVariables>>) {\n  const { children, ...variables } = props;\n  const dropzone = useDropzone(variables);\n  const aircraft = useAircraftDialog();\n  const ticketType = useTicketTypeDialog();\n  const ticketTypeAddon = useTicketTypeAddonDialog();\n  const createUser = useCreateUserDialog();\n  const dialogs = React.useMemo(\n    () => ({ aircraft, ticketType, ticketTypeAddon, createUser }),\n    [aircraft, ticketType, ticketTypeAddon, createUser]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      dropzone,\n      dialogs,\n    }),\n    [dropzone, dialogs]\n  );\n  return (\n    <DropzoneContext.Provider value={context}>\n      {children}\n      <AircraftSheet {...aircraft.state} onClose={aircraft.close} open={aircraft.visible} />\n      <TicketTypeSheet {...ticketType.state} onClose={ticketType.close} open={ticketType.visible} />\n      <CreateUserSheet {...createUser.state} onClose={createUser.close} open={createUser.visible} />\n      <TicketTypeAddonSheet\n        {...ticketTypeAddon.state}\n        onClose={ticketTypeAddon.close}\n        open={ticketTypeAddon.visible}\n      />\n    </DropzoneContext.Provider>\n  );\n}\n\nexport function withDropzoneContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<DropzoneQueryVariables>) {\n    const { dropzoneId, ...rest } = props;\n    return (\n      <DropzoneContextProvider {...{ dropzoneId }}>\n        <Component {...(rest as T)} />\n      </DropzoneContextProvider>\n    );\n  };\n}\n\nexport { DropzoneContextProvider };\n","import React from 'react';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { ManifestContextProvider, DropzoneContextProvider } from 'app/providers';\nimport { useAppSelector } from 'app/state';\n\nexport default function Provider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root?.global);\n  return (\n    <DropzonesProvider>\n      <DropzoneContextProvider dropzoneId={currentDropzoneId?.toString() || undefined}>\n        <ManifestContextProvider dropzone={currentDropzoneId?.toString() || undefined}>\n          {children}\n        </ManifestContextProvider>\n      </DropzoneContextProvider>\n    </DropzonesProvider>\n  );\n}\n","import * as React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { Linking, Platform } from 'react-native';\nimport * as Device from 'expo-device';\nimport URI from 'urijs';\nimport { useUpdateUserMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Device.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nexport default function PushNotifications(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, called },\n  } = useDropzoneContext();\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = React.useCallback((link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  }, []);\n\n  const [updateUser] = useUpdateUserMutation();\n  React.useEffect(() => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        notify.info(notification.request.content.body);\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      // console.log({ notification: response });\n    });\n\n    const subscription = Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      subscription.remove();\n    };\n  }, [dispatch, notify, onOutsideLink]);\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const remoteToken = currentUser?.user?.pushToken;\n\n    if (!loading && currentUser?.id) {\n      if (pushToken && pushToken !== remoteToken) {\n        updateUser({\n          variables: {\n            dropzoneUser: currentUser.id,\n            pushToken,\n          },\n        });\n      }\n    }\n  }, [pushToken, currentUser?.id, currentUser?.user?.pushToken, loading, called, updateUser]);\n  return children as JSX.Element;\n}\n","import { ThemeProvider } from '@mui/material';\nimport { Theme, createTheme } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Provider as MaterialProvider } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state/store';\n\nfunction Content(props: { children: React.ReactNode }) {\n  const { children } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const muiTheme: Theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: state.palette.primary,\n          secondary: state.palette.accent,\n          background: {\n            default: state.palette.background,\n            paper: state.palette.surface,\n          },\n          mode: state.theme.dark ? 'dark' : 'light',\n          common: {\n            white: state.palette.background,\n            black: state.palette.onSurface,\n          },\n        },\n      }),\n    [\n      state.palette.accent,\n      state.palette.background,\n      state.palette.onSurface,\n      state.palette.primary,\n      state.palette.surface,\n      state.theme.dark,\n    ]\n  );\n\n  window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {\n    dispatch(actions.global.setAppearance(e.matches ? 'dark' : 'light'));\n  });\n  return (\n    <MaterialProvider theme={state.theme as ReactNativePaper.Theme}>\n      <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\n    </MaterialProvider>\n  );\n}\nexport default Content;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport * as Device from 'expo-device';\n\n// eslint-disable-next-line camelcase\nimport * as fonts from '@expo-google-fonts/roboto';\nimport LottieView from 'app/components/LottieView';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const { useFonts, __metadata__, ...rest } = fonts;\n  const [fontsLoaded] = fonts.useFonts({\n    ...rest,\n  });\n\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const notify = useNotifications();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      notify.success('New version installed');\n    }\n  }, [notify]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport { Paragraph, Title, useTheme } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults extends ViewProps {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle, ...rest }: INoResults) {\n  const theme = useTheme();\n  return (\n    <View {...rest} style={StyleSheet.flatten([styles.empty, rest?.style])}>\n      <Title style={{ color: color || theme.colors.onSurface }}>{title}</Title>\n      <Paragraph style={{ color: color || theme.colors.onSurface, textAlign: 'center' }}>\n        {subtitle}\n      </Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ImageBackground } from 'react-native';\nimport { Avatar, Text } from 'react-native-paper';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { DropzoneEssentialsFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Color from 'color';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\ninterface DropzoneCardProps {\n  dropzone: DropzoneEssentialsFragment;\n}\nexport default function DropzonesScreen(props: DropzoneCardProps) {\n  const { dropzone } = props;\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const navigation = useNavigation();\n\n  const nameLines = dropzone?.name?.split(/\\s/) || [];\n  const lines = [\n    nameLines.length > 2 ? nameLines[0] : null,\n    nameLines.length > 2 ? nameLines[1] : nameLines[0],\n    nameLines.length > 2 ? nameLines[2] : null,\n    nameLines.length === 2 ? nameLines[1] : null,\n  ];\n\n  const backgroundColor = Color(dropzone?.primaryColor || '#ffffff')\n    .desaturate(0.2)\n    .lighten(0.1);\n  const textColor = backgroundColor.lighten(0.35);\n\n  return (\n    <TouchableOpacity\n      style={{ alignSelf: 'center' }}\n      onPress={async () => {\n        if (dropzone) {\n          const shouldPushRoute = !!globalState.currentDropzoneId;\n          dispatch(actions.global.setDropzone(dropzone as DropzoneExtensiveFragment));\n\n          if (shouldPushRoute) {\n            navigation.dispatch(\n              StackActions.replace('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              })\n            );\n          }\n        }\n      }}\n    >\n      {dropzone?.banner ? (\n        <View style={styles.cardContainer}>\n          <ImageBackground source={{ uri: dropzone?.banner as string }} style={styles.banner}>\n            <Text style={styles.title} numberOfLines={1}>\n              {dropzone.name}\n            </Text>\n          </ImageBackground>\n        </View>\n      ) : (\n        <View\n          style={[\n            styles.cardContainer,\n            {\n              backgroundColor: backgroundColor.toString(),\n            },\n          ]}\n        >\n          <Avatar.Icon\n            style={styles.icon}\n            icon=\"airplane-takeoff\"\n            size={160}\n            color={textColor.toString()}\n          />\n          <View style={styles.svgContainer}>\n            {lines.map((substr) => (\n              <Text style={styles.title} numberOfLines={1} adjustsFontSizeToFit allowFontScaling>\n                {substr}\n              </Text>\n            ))}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    margin: 16,\n    width: 160,\n    height: 160,\n    borderRadius: 80,\n    overflow: 'hidden',\n  },\n  title: {\n    fontStyle: 'italic',\n    fontFamily: 'Roboto_700Bold_Italic',\n    textAlign: 'center',\n    fontSize: 26,\n    color: 'white',\n    overflow: 'visible',\n    width: 160,\n  },\n  icon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  svgContainer: {\n    position: 'absolute',\n    left: 0,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    top: 0,\n    height: 180,\n    width: '100%',\n  },\n  banner: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList, Platform } from 'react-native';\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nimport NoResults from '../../../components/NoResults';\nimport DropzoneCard from './DropzoneCard';\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { dropzones, loading, refetch } = useDropzonesContext();\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={dropzones}\n        numColumns={Platform.OS === 'web' ? 3 : 2}\n        refreshing={loading}\n        keyExtractor={(item) => `dropzone-${item?.id}`}\n        onRefresh={() => refetch()}\n        style={styles.flatlist}\n        contentContainerStyle={styles.content}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item: dropzone }) => (!dropzone ? null : <DropzoneCard {...{ dropzone }} />)}\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  flatlist: { flex: 1, width: '100%', flexGrow: 1 },\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    paddingBottom: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from './dropzone_select/DropzonesScreen';\n\nexport type LimboRoutes = {\n  DropzoneSelectScreen: undefined;\n};\nconst Stack = createStackNavigator<LimboRoutes>();\n\nexport function useLimboNavigation() {\n  return useNavigation<NavigationProp<LimboRoutes>>();\n}\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"DropzoneSelectScreen\"\n    >\n      <Stack.Screen name=\"DropzoneSelectScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import { useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\nexport enum ScreenOrientation {\n  Landscape = 'LANDSCAPE',\n  Portrait = 'PORTRAIT',\n}\nexport default function useDevice() {\n  const { width, height } = useWindowDimensions();\n  const orientation = useMemo(\n    () => (width > height ? ScreenOrientation.Landscape : ScreenOrientation.Portrait),\n    [height, width]\n  );\n\n  return useMemo(() => ({ width, height, orientation }), [height, orientation, width]);\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Divider as MaterialDivider, Text, useTheme } from 'react-native-paper';\n\nexport default function Divider(props: { children: React.ReactText }) {\n  const { children } = props;\n  const theme = useTheme();\n  return (\n    <View style={styles.container}>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n      <Text style={styles.text}>{children}</Text>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  divider: { flex: 2 / 5, backgroundColor: 'white' },\n  text: { flex: 1 / 5, textAlign: 'center' },\n});\n","import * as React from 'react';\nimport { useLoginWithFacebookMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport { LoginWithFacebookMutation, LoginWithFacebookMutationVariables } from 'app/api/operations';\nimport Button, { ReactFacebookFailureResponse, ReactFacebookLoginInfo } from 'react-facebook-login';\nimport { View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : never;\n\nexport function useLoginWithFacebook(\n  opts?: MutationFunctionOptions<LoginWithFacebookMutation, LoginWithFacebookMutationVariables>\n) {\n  const { expoPushToken } = useAppSelector((root) => root.global);\n  const [onLoginWithFacebook, mutation] = useLoginWithFacebookMutation(opts);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async (response: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n      try {\n        if ('accessToken' in response) {\n          const { data } = await onLoginWithFacebook({\n            variables: {\n              pushToken: expoPushToken || null,\n              token: response.accessToken,\n            },\n          });\n          if (data?.loginWithFacebook?.authenticatable && data?.loginWithFacebook?.credentials) {\n            dispatch(actions.global.setCredentials(data.loginWithFacebook.credentials));\n            dispatch(actions.global.setUser(data.loginWithFacebook.authenticatable));\n          }\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, expoPushToken, notify, onLoginWithFacebook]\n  );\n  return [onLogin, mutation] as [() => Promise<void>, MutationResult<LoginWithFacebookMutation>];\n}\nexport default function FacebookButton(\n  props: Omit<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields' | 'children'> &\n    Partial<Pick<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields'>> & {\n      onPress: Extract<typeof Button>['callback'];\n    }\n) {\n  const notify = useNotifications();\n  const { onPress } = props;\n  return (\n    <View style={{ height: 100 }}>\n      <Button\n        appId=\"686479516065674\"\n        reAuthenticate\n        autoLoad\n        fields=\"email,name,picture\"\n        buttonStyle={{\n          height: 25,\n          fontSize: 14,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: 4,\n          marginTop: 16,\n        }}\n        onFailure={() => {\n          notify.error('Facebook authentication failed');\n        }}\n        {...props}\n        callback={onPress}\n        textButton=\"Login with Facebook\"\n      />\n    </View>\n  );\n}\n","import { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport {\n  LoginWithAppleMutation,\n  LoginWithAppleMutationVariables,\n  LoginWithFacebookMutation,\n} from 'app/api/operations';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nexport function useLoginWithApple(\n  opts?: MutationFunctionOptions<LoginWithAppleMutation, LoginWithAppleMutationVariables>\n) {\n  return [() => null, null] as unknown as [\n    () => Promise<void>,\n    MutationResult<LoginWithFacebookMutation>\n  ];\n}\n\nexport default function AppleButton() {\n  return <View />;\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { useLoginMutation } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch } from 'app/state';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { useLoginWithApple } from './AppleButton';\nimport { useLoginWithFacebook } from './FacebookButton';\n\nexport interface LoginFields {\n  email: string;\n  password: string;\n}\n\nexport const validate = yup.object({\n  email: yup.string().required('Email is required').email('This is not a valid email'),\n  password: yup.string().required('Password is required'),\n});\n\nconst EMPTY_FORM_VALUES: LoginFields = {\n  email: '',\n  password: '',\n};\n\nexport default function useLoginForm() {\n  const dispatch = useAppDispatch();\n  const methods = useForm({\n    defaultValues: EMPTY_FORM_VALUES,\n    mode: 'all',\n    resolver: yupResolver(validate),\n  });\n  const { handleSubmit } = methods;\n  const [loading, setLoading] = React.useState(false);\n  const [mutationLogin, data] = useLoginMutation();\n  const [loginWithFacebook, loginWithFacebookMutation] = useLoginWithFacebook();\n  const [loginWithApple, loginWithAppleMutation] = useLoginWithApple();\n\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async function Login(variables: LoginFields) {\n      try {\n        const result = await mutationLogin({\n          variables,\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, mutationLogin, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onLogin), [handleSubmit, onLogin]);\n\n  return React.useMemo(\n    () => ({\n      ...methods,\n      onSubmit,\n      loginWithFacebook,\n      loginWithApple,\n      loading:\n        loginWithFacebookMutation?.loading || data?.loading || loginWithAppleMutation?.loading,\n    }),\n    [\n      data?.loading,\n      loginWithApple,\n      loginWithAppleMutation?.loading,\n      loginWithFacebook,\n      loginWithFacebookMutation?.loading,\n      methods,\n      onSubmit,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { Button, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nimport { primaryColor } from 'app/constants/Colors';\nimport Divider from 'app/components/Divider';\n\nimport LottieView from 'app/components/LottieView';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport FacebookButton from './FacebookButton';\nimport AppleButton from './AppleButton';\nimport useLoginForm from './useForm';\n\nexport default function LoginForm() {\n  const navigation = useNavigation();\n  const theme = useTheme();\n\n  const { control, onSubmit, loading, loginWithApple, loginWithFacebook } = useLoginForm();\n  return (\n    <ScrollView>\n      {loading ? (\n        <View style={styles.animationContainer}>\n          <LottieView\n            autoPlay\n            loop\n            style={styles.loadingAnimation}\n            // eslint-disable-next-line global-require\n            source={require('../../../../../assets/images/loading.json')}\n          />\n        </View>\n      ) : (\n        <>\n          <FormTextField\n            {...{ control }}\n            name=\"email\"\n            label=\"Email\"\n            mode=\"outlined\"\n            disabled={loading}\n          />\n\n          <FormTextField\n            {...{ control }}\n            label=\"Password\"\n            name=\"password\"\n            mode=\"outlined\"\n            disabled={loading}\n            secureTextEntry\n            onSubmitEditing={onSubmit}\n          />\n        </>\n      )}\n      {loading ? null : (\n        <TouchableOpacity\n          onPress={() => navigation.navigate('Wizards', { screen: 'RecoverPasswordScreen' })}\n        >\n          <Text style={theme.dark ? styles.forgotPasswordDark : styles.forgotPassword}>\n            Forgot your password?\n          </Text>\n        </TouchableOpacity>\n      )}\n      <Button\n        mode=\"contained\"\n        disabled={loading}\n        labelStyle={{ color: theme.colors.onSurface }}\n        style={[\n          styles.button,\n          { backgroundColor: theme.colors.surface, borderColor: theme.colors.surface },\n        ]}\n        onPress={onSubmit}\n      >\n        {loading ? 'Authenticating...' : 'Log in'}\n      </Button>\n\n      <Divider>or</Divider>\n      <FacebookButton disabled={loading} style={{ marginTop: 8 }} onPress={loginWithFacebook} />\n\n      <AppleButton onPress={loginWithApple} style={{ width: '100%', flex: 1 }} />\n\n      <Button\n        labelStyle={styles.textButtonLabel}\n        style={styles.textButton}\n        onPress={() => navigation.navigate('Unauthenticated', { screen: 'SignUpScreen' })}\n      >\n        Sign up\n      </Button>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  cardLandscape: { height: '100%', width: '100%', justifyContent: 'center' },\n\n  animationContainer: {\n    width: '100%',\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loadingAnimation: {\n    alignSelf: 'center',\n    marginTop: 24,\n    marginBottom: 32,\n    height: 156,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  forgotPassword: {\n    marginBottom: 16,\n    color: 'rgb(50, 50, 50)',\n  },\n  forgotPasswordDark: {\n    marginTop: 8,\n    color: 'rgb(180, 180, 180)',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  fieldsLandscape: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 400,\n  },\n  button: {\n    marginVertical: 4,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%',\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  },\n});\n","import * as React from 'react';\nimport { Image, ImageBackground, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport { Card, useTheme } from 'react-native-paper';\n\nimport useDevice, { ScreenOrientation } from 'app/hooks/useDevice';\nimport logoDark from '../../../../assets/images/logo-black.png';\nimport logoLight from '../../../../assets/images/logo-white.png';\nimport backgroundDark from '../../../../assets/images/webb-dark.png';\nimport backgroundLight from '../../../../assets/images/pattern.png';\nimport LoginForm from './form/LoginForm';\n\nexport default function LoginScreen() {\n  const theme = useTheme();\n  const { orientation } = useDevice();\n  return (\n    <ImageBackground\n      source={theme.dark ? backgroundDark : backgroundLight}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      {orientation === ScreenOrientation.Portrait ? (\n        <>\n          <Image\n            source={theme.dark ? logoLight : logoDark}\n            style={styles.logo}\n            resizeMode=\"contain\"\n          />\n          <KeyboardAvoidingView\n            style={styles.fields}\n            behavior={Platform.OS === 'android' ? undefined : 'padding'}\n          >\n            <Card style={styles.card} elevation={3}>\n              <Card.Content>\n                <LoginForm />\n              </Card.Content>\n            </Card>\n          </KeyboardAvoidingView>\n        </>\n      ) : (\n        <KeyboardAvoidingView\n          style={styles.fieldsLandscape}\n          behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        >\n          <Card style={styles.cardLandscape} elevation={3}>\n            <Image\n              source={theme.dark ? logoLight : logoDark}\n              style={styles.logo}\n              resizeMode=\"contain\"\n            />\n            <Card.Content>\n              <LoginForm />\n            </Card.Content>\n          </Card>\n        </KeyboardAvoidingView>\n      )}\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  cardLandscape: { height: '100%', width: '100%', justifyContent: 'center' },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  fieldsLandscape: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 400,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions, View } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n  fullWidth?: boolean;\n  scrollable?: boolean;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height, width } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const {\n    style,\n    children,\n    fullWidth = false,\n    scrollable = true,\n    contentContainerStyle,\n    ...rest\n  } = props;\n\n  if (!scrollable) {\n    return <View style={{ flex: 1, width: '100%' }}>{children}</View>;\n  }\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={StyleSheet.flatten([\n        styles.container,\n        { backgroundColor: theme.colors.background },\n        style,\n      ])}\n      contentContainerStyle={StyleSheet.flatten(\n        [\n          styles.content,\n          fullWidth\n            ? { paddingHorizontal: 0 }\n            : { width: width < 920 ? '100%' : 920, paddingHorizontal: 16 },\n          contentContainerStyle,\n        ].filter(Boolean)\n      )}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    alignItems: 'flex-start',\n    alignSelf: 'center',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n  centerAlignedContent: {\n    maxWidth: 920,\n  },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation<string | number>,\n    dragX: Animated.AnimatedInterpolation<string | number>\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n        style={{ height: '100%' }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      childrenContainerStyle={{ height: '100%' }}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore This is ok in web\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import { useIsFocused } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  actions: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, actions, hideContentUntilNavigatedTo } = props;\n  const theme = useAppSelector((state) => state.global.theme);\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <ScrollView\n      style={[styles.container, { backgroundColor: theme.colors.background }]}\n      contentContainerStyle={styles.content}\n    >\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <View style={{ width: '100%', alignItems: 'center', justifyContent: 'center' }}>\n        {children}\n      </View>\n\n      {actions}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n    marginBottom: 56,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","import * as React from 'react';\n\nimport { StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\nexport interface IWizardButtonsProps {\n  nextLabel: string;\n  backLabel: string;\n  onNext?(): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport default function Buttons(props: IWizardButtonsProps) {\n  const { backLabel = 'Back', nextLabel = 'Next', onNext, onBack } = props;\n  const [loading, setLoading] = React.useState(false);\n  const { palette } = useAppSelector((root) => root.global);\n\n  const onNextPress = React.useCallback(async () => {\n    try {\n      await onNext?.();\n    } catch {\n      return undefined;\n    } finally {\n      setLoading(false);\n    }\n\n    return undefined;\n  }, [onNext]);\n\n  return (\n    <View style={styles.actions}>\n      {onNextPress && (\n        <Button\n          disabled={loading}\n          loading={loading}\n          onPress={onNextPress}\n          style={[styles.next, { backgroundColor: palette.placeholder }]}\n          mode=\"contained\"\n        >\n          {nextLabel || 'Next'}\n        </Button>\n      )}\n      {onBack && (\n        <Button style={styles.back} disabled={loading} mode=\"text\" onPress={onBack}>\n          {backLabel}\n        </Button>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n    width: '100%',\n    maxWidth: 500,\n    height: 80,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n    minHeight: 36,\n  },\n  back: {\n    minHeight: 36,\n  },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\n\nimport {\n  KeyboardAvoidingView,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport Carousel, { ICarouselInstance } from 'react-native-reanimated-carousel';\nimport { useNavigation } from '@react-navigation/core';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\nimport Buttons from './Buttons';\n\nexport interface IWizardProps {\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport type WizardRef = ICarouselInstance;\n\nfunction Wizard(props: IWizardProps, ref: React.Ref<ICarouselInstance>) {\n  const { steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const navigation = useNavigation();\n  const [dimensions, setDimensions] = React.useState<LayoutRectangle>({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const carouselRef = React.useRef<ICarouselInstance>(null);\n  const screen = useWindowDimensions();\n\n  React.useImperativeHandle(ref, () => ({\n    next: () => carouselRef.current?.next(),\n    prev: () => carouselRef.current?.prev(),\n    getCurrentIndex: () => carouselRef.current?.getCurrentIndex() || 0,\n    scrollTo: (opts) => carouselRef.current?.scrollTo(opts),\n  }));\n\n  const onNext = React.useCallback(\n    async function WizardNextStep() {\n      if (steps[currentIndex]?.onNext) {\n        await steps[currentIndex]?.onNext?.(navigation);\n      }\n      if (currentIndex === steps.length - 1) {\n        navigation.goBack();\n      } else {\n        carouselRef?.current?.next();\n        setIndex(currentIndex + 1);\n      }\n\n      return undefined;\n    },\n    [currentIndex, navigation, steps]\n  );\n\n  const onBack = React.useCallback(\n    async function WizardBackStep() {\n      steps[currentIndex]?.onBack?.();\n      if (currentIndex === 0) {\n        navigation.goBack();\n      } else {\n        carouselRef?.current?.prev();\n        setIndex(currentIndex - 1 || 0);\n      }\n      return undefined;\n    },\n    [currentIndex, navigation, steps]\n  );\n\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const { width, height } = dimensions;\n\n  return (\n    <KeyboardAvoidingView\n      style={StyleSheet.absoluteFill}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      {...{ onLayout }}\n    >\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <Carousel\n        autoPlay={false}\n        loop={false}\n        modeConfig={{ parallaxScrollingScale: 1, parallaxScrollingOffset: 32 }}\n        pagingEnabled={false}\n        enabled={false}\n        panGestureHandlerProps={{\n          // Disable swiping\n          activeOffsetX: [-width, width],\n        }}\n        mode=\"parallax\"\n        style={StyleSheet.absoluteFill}\n        data={steps}\n        width={width || screen.width}\n        onSnapToItem={setIndex}\n        ref={carouselRef}\n        renderItem={({ item }) => {\n          if (!item) {\n            return <View />;\n          }\n          const { component: Step } = item;\n          return (\n            <Step\n              actions={\n                <Buttons\n                  nextLabel={currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n                  backLabel=\"Back\"\n                  onNext={onNext}\n                  onBack={onBack}\n                />\n              }\n            />\n          );\n        }}\n      />\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 48,\n    zIndex: 1100,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default React.forwardRef(Wizard);\n","import { passwordStrength } from 'check-password-strength';\n\nexport enum PasswordStrength {\n  TooWeak,\n  Weak,\n  Acceptable,\n  Strong,\n}\nexport default function checkPasswordComplexity(password: string) {\n  const score = passwordStrength<PasswordStrength>(password, [\n    { value: PasswordStrength.TooWeak, id: 0, minDiversity: 0, minLength: 0 },\n    { value: PasswordStrength.Weak, id: 1, minDiversity: 2, minLength: 8 },\n    { value: PasswordStrength.Acceptable, id: 2, minDiversity: 3, minLength: 10 },\n    { value: PasswordStrength.Strong, id: 3, minDiversity: 4, minLength: 16 },\n  ]);\n  return score.value;\n}\n","import { errorColor, successColor, warningColor } from 'app/constants/Colors';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { PasswordStrength } from '../../utils/checkPasswordComplexity';\n\ninterface IPasswordComplexityIndicatorProps {\n  strength: PasswordStrength;\n}\nfunction PasswordStep(props: IPasswordComplexityIndicatorProps) {\n  const { strength } = props;\n\n  const indicatorStyle = [styles.indicatorWeak, styles.indicatorOk, styles.indicatorStrong];\n\n  return (\n    <>\n      <Text style={styles.title}>{['Too weak', 'Weak', 'Acceptable', 'Strong'][strength]}</Text>\n      <View style={styles.indicator}>\n        <View style={indicatorStyle[strength]} />\n        {strength < PasswordStrength.Acceptable ? (\n          <View style={[styles.indicatorInactive, { flex: 1 / 3 }]} />\n        ) : null}\n        {[PasswordStrength.Weak, PasswordStrength.Acceptable].includes(strength) ? (\n          <View\n            style={[\n              styles.indicatorInactive,\n              { flex: strength < PasswordStrength.Acceptable ? 1 / 3 : 1 / 2 },\n            ]}\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n    marginTop: 8,\n  },\n  indicator: {\n    flexDirection: 'row',\n    height: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginTop: 8,\n  },\n  indicatorInactive: {\n    backgroundColor: '#AAA',\n  },\n  indicatorWeak: {\n    flex: 1 / 3,\n    backgroundColor: errorColor,\n  },\n  indicatorOk: {\n    flex: 2 / 3,\n    backgroundColor: warningColor,\n  },\n  indicatorStrong: {\n    backgroundColor: successColor,\n    flex: 1,\n  },\n});\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\nimport { useFormContext, useWatch } from 'react-hook-form';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  const { password } = useWatch({ control });\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <FormTextField\n          name=\"password\"\n          {...{ control }}\n          mode=\"flat\"\n          label=\"Password\"\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(password)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport { useFormContext } from 'react-hook-form';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          name=\"email\"\n          mode=\"flat\"\n          label=\"Email\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport { useFormContext } from 'react-hook-form';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          mode=\"flat\"\n          label=\"Password\"\n          name=\"passwordConfirmation\"\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\n\nexport interface SignUpFields {\n  email: string;\n  name: string;\n  password: string;\n  passwordConfirmation: string;\n}\n\nexport const signUpValidation = yup.object().shape({\n  name: yup.string().default(''),\n  email: yup.string().required('Email is required').email('This is not a valid email'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .test({\n      test: (value) => checkPasswordComplexity(value || '') >= PasswordStrength.Acceptable,\n      message: 'Password is too weak',\n      name: 'password-complexity',\n    }),\n  passwordConfirmation: yup\n    .string()\n    .oneOf([yup.ref('password')], 'Passwords must match')\n    .required('Please type the password again'),\n});\n\nexport const EMPTY_FORM_VALUES: SignUpFields = {\n  name: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n};\n\nexport interface ISignUpFormOpts {\n  initial?: Partial<SignUpFields>;\n  onSuccess?(): void;\n}\n\nenum SignUpSteps {\n  Email,\n  Password,\n  PasswordConfirmation,\n}\n\nexport default function useSignupForm(opts: ISignUpFormOpts) {\n  const { onSuccess } = opts;\n  const [loading, setLoading] = React.useState(false);\n  const globalState = useAppSelector((root) => root.global);\n\n  const [step, setStep] = React.useState(SignUpSteps.Email);\n\n  const notify = useNotifications();\n  const methods = useForm<SignUpFields>({\n    defaultValues: EMPTY_FORM_VALUES,\n    mode: 'all',\n  });\n\n  React.useEffect(() => {\n    methods.reset(EMPTY_FORM_VALUES);\n  }, [methods]);\n  const { setError } = methods;\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const onSubmit = React.useCallback(\n    async (fields: SignUpFields) => {\n      try {\n        const { data } = await onSignUp({\n          variables: {\n            pushToken: globalState.expoPushToken,\n            email: fields.email,\n            name: fields.name,\n            password: fields.password,\n            exitWeight: 60,\n            phone: '',\n            passwordConfirmation: fields.passwordConfirmation,\n          },\n        });\n\n        if (data?.userRegister?.fieldErrors) {\n          data?.userRegister?.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof SignUpFields, { type: 'custom', message });\n          });\n        }\n        if (data?.userRegister?.authenticatable?.id) {\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n          throw new Error();\n        }\n      }\n    },\n    [onSignUp, globalState.expoPushToken, setError, onSuccess, notify]\n  );\n\n  const onNext = React.useCallback(\n    async function FormNext() {\n      try {\n        setLoading(true);\n        const validated = await signUpValidation.validate(methods.getValues(), {\n          abortEarly: false,\n        });\n        console.debug({ validated });\n\n        if (step === SignUpSteps.PasswordConfirmation) {\n          await onSubmit(validated);\n        }\n      } catch (error) {\n        if (error instanceof yup.ValidationError) {\n          console.debug({ inner: error.inner });\n          error.inner.forEach((validationError) => {\n            switch (step) {\n              case SignUpSteps.Email:\n                if (validationError.path === 'email') {\n                  setError('email', { message: validationError.message });\n                  throw error;\n                }\n                break;\n              case SignUpSteps.Password:\n                if (validationError.path === 'password') {\n                  setError('password', { message: validationError.message });\n                  throw error;\n                }\n                break;\n              case SignUpSteps.PasswordConfirmation:\n                if (validationError.path === 'passwordConfirmation') {\n                  setError('passwordConfirmation', { message: validationError.message });\n                  throw error;\n                }\n                break;\n              default:\n                break;\n            }\n          });\n          setStep(step + 1);\n        } else {\n          throw error;\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [methods, onSubmit, setError, step]\n  );\n\n  return React.useMemo(() => ({ ...methods, onNext, loading }), [methods, onNext, loading]);\n}\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { FormProvider } from 'react-hook-form';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useNavigation } from '@react-navigation/core';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\nimport useSignupForm from './useForm';\n\nexport default function SignupWizard() {\n  const notify = useNotifications();\n  const navigation = useNavigation();\n  const { onNext, ...methods } = useSignupForm({\n    onSuccess: () => {\n      notify.success('A confirmation link has been sent to your email');\n      navigation.navigate('Unauthenticated', { screen: 'LoginScreen' });\n    },\n  });\n  return (\n    <FormProvider {...methods}>\n      <Wizard\n        dots\n        steps={[\n          { onNext, component: EmailStep },\n          { onNext, component: PasswordStep },\n          { onNext, component: PasswordConfirmationStep },\n          { component: DoneStep },\n        ]}\n      />\n    </FormProvider>\n  );\n}\n","import * as React from 'react';\nimport { Screen } from 'app/components/layout';\nimport SignupWizard from 'app/forms/sign_up/SignupWizard';\n\nexport default function SignupScreen() {\n  return (\n    <Screen>\n      <SignupWizard />\n    </Screen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LoginScreen from './login/LoginScreen';\nimport SignUpScreen from './signup/SignUpScreen';\n\nexport type UnauthenticatedRoutes = {\n  LoginScreen: undefined;\n  SignUpScreen: undefined;\n  SignUpWizard: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<UnauthenticatedRoutes>();\nexport function useUnauthenticatedNavigation() {\n  return useNavigation<NavigationProp<UnauthenticatedRoutes>>();\n}\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n        presentation: 'modal',\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n    </Stack.Navigator>\n  );\n}\n","import { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzoneDocument } from '../reflection';\nimport { CreateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federation: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  Required<CreateDropzoneMutation>['createDropzone']\n>(CreateDropzoneDocument, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federation: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs } from '../schema.d';\nimport { UpdateDropzoneDocument } from '../reflection';\nimport { UpdateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  Required<UpdateDropzoneMutation>['updateDropzone']\n>(UpdateDropzoneDocument, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChange={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      keyExtractor={(item) => JSON.stringify(item)}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useFederationsQuery();\n\n  return (\n    <CardSelect<FederationEssentialsFragment>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as FederationEssentialsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport Constants from 'app/constants/expo';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { useIsFocused } from '@react-navigation/core';\n\n// Used if user location cant be used and we have no other fallback\n// This points to Brisbane:\nconst DEFAULT_COORDS = { lat: -27.4705, lng: 153.026 };\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const {\n    width,\n    height,\n    position,\n    children,\n    center,\n    coords: _coords,\n    shape,\n    interactive,\n    onDragEnd,\n  } = props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: Constants?.googleMapsWeb,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n  const coords = _coords || DEFAULT_COORDS;\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        // const location = await Location.getCurrentPositionAsync({});\n        // const lat = coords?.lat || location.coords.latitude;\n        // const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        console.log({ error });\n      } finally {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds(coords);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n        map.current?.panTo?.(coords);\n      }\n    },\n    [coords]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  const isFocused = useIsFocused();\n\n  return !isLoaded || !isFocused ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        ref={map}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        mapTypeId={google.maps.MapTypeId.HYBRID}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          center: coords,\n          mapTypeControl: false,\n          mapTypeId: google.maps.MapTypeId.HYBRID,\n          zoomControl: false,\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, List, Searchbar } from 'react-native-paper';\nimport debounce from 'lodash/debounce';\nimport { GeocodedLocation } from 'app/api/schema.d';\nimport { first } from 'lodash';\nimport { useAddressToLocationLazyQuery } from 'app/api/reflection';\n\ninterface IAddressSearchBarProps {\n  value: string;\n  autocomplete?: boolean;\n  selectedLocation?: GeocodedLocation;\n  onChange(value: string): void;\n  onSelect(value: GeocodedLocation): void;\n}\nexport default function AddressSearchBar(props: IAddressSearchBarProps) {\n  const { value, onChange: onChangeText, onSelect } = props;\n  const [suggestions, setSuggestions] = React.useState<GeocodedLocation[]>([]);\n  const [selected, setSelected] = React.useState<GeocodedLocation>();\n  const [fetchLocation, { data }] = useAddressToLocationLazyQuery();\n\n  const fetchSuggestions = React.useCallback(\n    (search: string) => {\n      fetchLocation({\n        variables: {\n          search,\n        },\n      });\n    },\n    [fetchLocation]\n  );\n\n  const fetchSuggestionsDebounced = React.useMemo(\n    () => debounce<typeof fetchSuggestions>(fetchSuggestions),\n    [fetchSuggestions]\n  );\n\n  React.useEffect(() => {\n    if (data?.geocode) {\n      setSuggestions([data.geocode]);\n    }\n  }, [data?.geocode]);\n\n  React.useEffect(() => {\n    if (value && value?.length > 4) {\n      fetchSuggestionsDebounced(value);\n    } else if (!value) {\n      setSuggestions([]);\n    }\n  }, [value, fetchSuggestionsDebounced]);\n\n  const onPickResult = React.useCallback(\n    (location: GeocodedLocation) => {\n      onSelect(location);\n      onChangeText(location.formattedString || '');\n      setSuggestions([]);\n      setSelected(location);\n    },\n    [onChangeText, onSelect]\n  );\n\n  return (\n    <View style={{ width: '100%', borderRadius: 3, backgroundColor: 'white' }}>\n      <Searchbar\n        {...{ value, onChangeText }}\n        allowFontScaling\n        numberOfLines={1}\n        onSubmitEditing={() => {\n          if (first(suggestions)) {\n            onPickResult(first(suggestions) as GeocodedLocation);\n          }\n        }}\n      />\n      {suggestions\n        ?.filter((suggestion) => suggestion.formattedString !== selected?.formattedString)\n        .map((item) => {\n          return (\n            <>\n              <Divider />\n              <List.Item\n                title={item.formattedString}\n                onPress={() => {\n                  onPickResult(item);\n                }}\n              />\n            </>\n          );\n        })}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport Map from 'app/components/map/Map';\nimport AddressSearchBar from 'app/components/input/search/AddressSearchBar';\nimport { useIsFocused } from '@react-navigation/core';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const [searchText, setSearchText] = React.useState('');\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <Step {...props} title=\"Location\" hideContentUntilNavigatedTo>\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <View style={{ width: 300, display: 'none', alignSelf: 'flex-start', marginLeft: 32 }}>\n          <AddressSearchBar\n            value={searchText}\n            onChange={setSearchText}\n            autocomplete\n            onSelect={(item) => {\n              dispatch(actions.forms.dropzone.setField(['lat', item.lat]));\n              dispatch(actions.forms.dropzone.setField(['lng', item.lng]));\n            }}\n          />\n        </View>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 32,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\n// import SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={() => null}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import { useUpdateRoleMutation } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RoleDetailedFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: RoleDetailedFragment;\n  permissionName: string;\n}\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useUpdateRoleMutation();\n  const notify = useNotifications();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) => notify.error(message));\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\nimport { useDropzonePermissionsLazyQuery } from 'app/api/reflection';\nimport { Paragraph } from 'react-native-paper';\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n  description?: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, description, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useDropzonePermissionsLazyQuery();\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          id: dropzoneForm.original.id,\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      {description && <Paragraph>{description}</Paragraph>}\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Platform } from 'react-native';\n\nexport default function useImagePicker() {\n  const onPickImage = React.useCallback(async () => {\n    if (Platform.OS !== 'web') {\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n    const result = (await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.1,\n      base64: true,\n    })) as { base64: string };\n\n    return result?.base64;\n  }, []);\n\n  return onPickImage;\n}\n","import * as React from 'react';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { View, StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\n\nfunction Logo(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      } else {\n        console.log({ base64 });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n  const theme = useTheme();\n\n  return (\n    <Step {...props} title=\"Banner\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.banner?.value ? (\n              <LottieView\n                style={{ height: 175, width: 175 }}\n                autoPlay\n                loop={false}\n                // eslint-disable-next-line global-require\n                source={require('../../../../../assets/images/image-pick.json')}\n              />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.banner?.value }}\n                style={{\n                  borderWidth: StyleSheet.hairlineWidth,\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={{ paddingHorizontal: 48, marginTop: 24 }}>\n            Your logo is displayed as an avatar for your dropzone throughout the app.\n          </Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\nexport default Logo;\n","import * as React from 'react';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport type { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport LogoStep from './steps/Logo';\n\nfunction DropzoneSetupScreen() {\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      notify.error(error);\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) => notify.error(error),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const onComplete = React.useCallback(() => {\n    navigation.dispatch(\n      StackActions.replace('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: {\n            screen: 'ManifestScreen',\n          },\n        },\n      })\n    );\n  }, [navigation]);\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onLogoNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: dropzone.fields.banner.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: dropzone.fields.banner.value || '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.find(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            wizard.current?.scrollTo({ index: 3 });\n            return true;\n          case 'federation':\n            wizard.current?.scrollTo({ index: 1 });\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            return true;\n          case 'name':\n            wizard.current?.scrollTo({ index: 0 });\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            return true;\n          case 'lat':\n          case 'lng':\n            wizard.current?.scrollTo({ index: 2 });\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            return true;\n          default:\n            break;\n        }\n        return false;\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.banner.value,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n  ]);\n\n  const noop = React.useCallback(() => Promise.resolve(), []);\n  const wizard = React.useRef<WizardRef>();\n\n  return (\n    <Wizard\n      dots\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: noop },\n        {\n          onNext: onLogoNext,\n          component: LogoStep,\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateSlot}\n              title=\"Manifest\"\n              description=\"Who can manifest themselves on loads?\"\n            />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              description=\"Who can manifest other people on loads?\"\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            onComplete();\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { UpdateUserMutation, UpdateUserMutationVariables } from '../operations';\nimport { UpdateUserDocument } from '../reflection';\n\nexport default createMutation<\n  UpdateUserMutationVariables,\n  Required<UpdateUserMutation>['updateUser']\n>(UpdateUserDocument, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title={`${state.federation?.value?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <TextInput\n          value={state.fields?.apfNumber?.value || ''}\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n          }\n          label={`${state.federation.value?.name} ID`}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RealName(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <TextInput\n          value={state.fields?.name?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction UserInfoScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <TextInput\n          value={state.fields?.nickname?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n          {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default UserInfoScreen;\n","import { LicenseDetailsFragment, LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseDetailsFragment): void;\n}\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<LicenseDetailsFragment>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as LicenseDetailsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseCardSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default FederationStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, Surface, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport Select from 'app/components/input/select/Select';\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Select<string>\n          label=\"Manufacturer\"\n          onChange={(value) => {\n            setIsOtherMake(value === 'other');\n            dispatch(actions.forms.rig.setField(['make', value]));\n          }}\n          value={state.fields.make.value}\n          options={[\n            'Icon',\n            'Javelin',\n            'Mirage',\n            'Vector',\n            'PA (Talon)',\n            'Infinity',\n            'Parachutes de France',\n            'Parachute Systems',\n            'Racer',\n          ]\n            .map((label) => ({ label, value: label }))\n            .concat([{ label: 'Other', value: 'other' }])}\n        />\n        {!isOtherMake ? null : (\n          <Surface style={styles.card}>\n            <TextInput\n              style={{ backgroundColor: 'transparent' }}\n              mode=\"flat\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          </Surface>\n        )}\n        {state.fields.make.error && (\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n        )}\n\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Model\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Surface>\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Serial number\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          {state.fields.serial.error && (\n            <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n              {state.fields.serial.error}\n            </HelperText>\n          )}\n        </Surface>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { marginVertical: 8 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport Menu from 'app/components/popover/Menu';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\nimport { View } from 'react-native';\n\ninterface IDatepicker {\n  label: string;\n  value: number;\n  disabled?: boolean;\n  onChange(value: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, value, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const left = React.useCallback(() => <List.Icon icon=\"calendar\" />, []);\n  return (\n    <Menu\n      {...{ open, setOpen }}\n      anchor={\n        <List.Item\n          onPress={() => setOpen(true)}\n          disabled={!!disabled}\n          title={label}\n          description={value ? format(value * 1000, 'yyyy/MM/dd') : 'No date selected'}\n          left={left}\n        />\n      }\n    >\n      <View style={{ zIndex: 1500 }}>\n        <DayPicker\n          selectedDays={value ? [new Date(value * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </View>\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            label=\"Reserve repack due date\"\n            value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <CardSelect\n          items={[\n            { value: false, label: 'I have my own rig' },\n            { value: true, label: 'I dont have my own rig' },\n          ]}\n          renderItemLabel={({ label }) => label}\n          onChangeSelected={(options) =>\n            dispatch(actions.screens.userWizard.skipRigSetup(options[0].value))\n          }\n          isSelected={({ value }) => value === state.skipRigSetup}\n          selected={[\n            state.skipRigSetup\n              ? { value: true, label: 'I dont have my own rig' }\n              : { value: false, label: 'I have my own rig' },\n          ]}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Card, Paragraph } from 'react-native-paper';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil(\n                (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                  (rigForm.fields.canopySize.value || 150),\n                2\n              ).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>\n              Your wingloading is an indicator of your descent rate under canopy\n            </Paragraph>\n          </View>\n        </View>\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            label=\"Your exit weight\"\n            variant={NumberFieldType.Weight}\n            value={Number(userForm?.fields?.exitWeight?.value) || 50}\n            onChange={(value) =>\n              dispatch(actions.forms.user.setField(['exitWeight', value.toString()]))\n            }\n            error={userForm.fields.exitWeight?.error}\n            helperText=\"Your weight in kg's with all equipment on\"\n          />\n          <NumberField\n            label=\"Canopy Size\"\n            variant={NumberFieldType.CanopySize}\n            value={Number(rigForm?.fields?.canopySize?.value) || 120}\n            onChange={(value) => dispatch(actions.forms.rig.setField(['canopySize', value]))}\n            helperText=\"Size of your main canopy in square feet\"\n            error={userForm.fields.exitWeight?.error}\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, paddingRight: 16, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginVertical: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\n\nfunction AvatarStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.user.setField(['image', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  return (\n    <Step {...props} title=\"Avatar\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.image?.value ? (\n              <Avatar.Icon size={175} icon=\"camera\" />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.image?.value }}\n                style={{\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={styles.paragraph}>Press to upload a photo</Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\n\nexport default AvatarStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  useJoinFederationMutation,\n  useCreateRigMutation,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport useMutationUpdateUser from 'app/api/hooks/useMutationUpdateUser';\nimport { UserFields } from 'app/components/forms/user/slice';\nimport { License, Rig } from 'app/api/schema.d';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { useRoute } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\nimport AvatarStep from './steps/Avatar';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const { params } = useRoute<{ key: string; name: string; params: { index: number } }>();\n  console.debug('PARAMS', params);\n\n  React.useEffect(() => {\n    if (params?.index !== undefined && wizard.current) {\n      console.debug('SETTING INDEX', params.index);\n      wizard.current?.scrollTo({ index: params.index });\n    }\n  }, [params?.index]);\n\n  const [joinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: notify.error,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const [mutationUpdateRig] = useUpdateRigMutation();\n  const [mutationCreateRig] = useCreateRigMutation();\n\n  const onNameNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n      dispatch(\n        actions.forms.user.setFieldError(['name', 'Please enter your full name, including surname'])\n      );\n      throw new Error();\n    }\n  }, [dispatch, userForm.fields.name.value]);\n\n  const onNicknameNext = React.useCallback(async () => {\n    // Update user license\n    const result = await mutationUpdateUser.mutate({\n      dropzoneUser: userForm.original?.id?.toString(),\n      nickname: userForm.fields.nickname.value,\n      name: userForm.fields.name.value,\n    });\n\n    if (result?.errors) {\n      throw new Error();\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.name.value,\n    userForm.fields.nickname.value,\n    userForm.original?.id,\n  ]);\n\n  const onFederationNext = React.useCallback(async () => {\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [dispatch, joinFederation, userForm.federation.value?.id, userForm.federation.value?.name]);\n\n  const onFederationNumberNext = React.useCallback(async () => {\n    // Validate\n    if (\n      userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n      !userForm.fields.apfNumber.value\n    ) {\n      dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n      throw new Error();\n    }\n\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          uid: userForm.fields.apfNumber.value,\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n      console.debug('FOUND LICENSE', mutationResult?.data?.joinFederation);\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation.value?.id,\n    userForm.federation.value?.name,\n    userForm.fields.apfNumber.value,\n  ]);\n\n  const onLicenseNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.license?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n      throw new Error();\n    }\n\n    if (!userForm.federation?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a federation']));\n      throw new Error();\n    }\n\n    try {\n      const response = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n          license: userForm.fields.license?.value?.id,\n        },\n      });\n      if (response.data?.joinFederation?.errors) {\n        response.data?.joinFederation?.errors?.map((message) =>\n          dispatch(actions.forms.user.setFieldError(['license', message]))\n        );\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation?.value?.id,\n    userForm.fields.license?.value?.id,\n  ]);\n\n  const onRigNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.make?.value) {\n      dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n      throw new Error();\n    }\n\n    if (!rigForm.fields.model?.value) {\n      dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n      throw new Error();\n    }\n\n    // Create user rig\n    try {\n      if (!rigForm.original?.id) {\n        console.debug('CREATING RIG');\n        const response = await mutationCreateRig({\n          variables: {\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.createRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.createRig?.rig as Rig));\n        } else {\n          console.debug('ERROR CREATING RIG', response?.data?.createRig);\n        }\n      } else {\n        console.debug('RIG ID IS', rigForm.original?.id);\n        const response = await mutationUpdateRig({\n          variables: {\n            id: Number(rigForm.original?.id),\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.updateRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.updateRig?.rig as Rig));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    rigForm.fields.make.value,\n    rigForm.fields.model.value,\n    rigForm.fields.serial.value,\n    rigForm.original?.id,\n    dispatch,\n    mutationCreateRig,\n    userForm.original?.user?.id,\n    mutationUpdateRig,\n  ]);\n\n  const onReserveRepackNext = React.useCallback(async () => {\n    try {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        throw new Error();\n      }\n\n      // Update repack expiry date\n      const { data } = await mutationUpdateRig({\n        variables: {\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        },\n      });\n      console.debug('Updated rig', data);\n      if (data?.updateRig?.rig) {\n        dispatch(actions.forms.rig.setOriginal(data?.updateRig?.rig as Rig));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]);\n\n  const onWingloadingNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.canopySize?.value) {\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n      throw new Error();\n    }\n\n    if (!userForm.fields.exitWeight?.value) {\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight']));\n      throw new Error();\n    }\n\n    await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        canopySize: rigForm.fields.canopySize.value,\n      },\n    });\n    await mutationUpdateUser.mutate({\n      dropzoneUser: userForm.original?.id,\n      exitWeight: Number(userForm.fields.exitWeight?.value),\n    });\n  }, [\n    rigForm.fields.canopySize.value,\n    rigForm.original?.id,\n    userForm.fields.exitWeight?.value,\n    userForm.original?.id,\n    dispatch,\n    mutationUpdateRig,\n    mutationUpdateUser,\n  ]);\n\n  const onImageNext = React.useCallback(async () => {\n    try {\n      if (\n        userForm.fields.image?.value &&\n        userForm.fields.image?.value !== userForm.original?.user?.image\n      ) {\n        // Upload image\n        await mutationUpdateUser.mutate({\n          dropzoneUser: userForm?.original?.id,\n          image: userForm.fields.image.value,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.image.value,\n    userForm.original?.id,\n    userForm.original?.user?.image,\n  ]);\n\n  const steps = React.useMemo(\n    () =>\n      [\n        {\n          component: RealNameStep,\n          onNext: onNameNext,\n          onBack: () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n        { component: NicknameStep, onNext: onNicknameNext },\n        { component: AvatarStep, onNext: onImageNext },\n        { component: FederationStep, onNext: onFederationNext },\n        userForm.federation?.value?.id && userForm?.federation?.value?.name?.toLowerCase() === 'apf'\n          ? { component: FederationNumberStep, onNext: onFederationNumberNext }\n          : null,\n        { component: LicenseStep, onNext: onLicenseNext },\n        { component: AskForRigStep },\n        state?.skipRigSetup ? null : { component: RigStep, onNext: onRigNext },\n        state?.skipRigSetup ? null : { component: ReserveRepackStep, onNext: onReserveRepackNext },\n        state?.skipRigSetup ? null : { component: WingloadingStep, onNext: onWingloadingNext },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n      ].filter(Boolean),\n    [\n      dispatch,\n      onFederationNext,\n      onFederationNumberNext,\n      onImageNext,\n      onLicenseNext,\n      onNameNext,\n      onNicknameNext,\n      onReserveRepackNext,\n      onRigNext,\n      onWingloadingNext,\n      state?.skipRigSetup,\n      userForm.federation?.value?.id,\n      userForm.federation?.value?.name,\n    ]\n  );\n\n  return <Wizard ref={wizard} dots {...{ steps }} />;\n}\n\nexport default UserWizardScreen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>We've sent you a link to restore your password.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useRecoverPasswordMutation } from 'app/api/reflection';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport EmailStep from './steps/Email';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const [onRecover] = useRecoverPasswordMutation();\n\n  const onClickRecover = React.useCallback(async () => {\n    try {\n      await onRecover({\n        variables: {\n          email: state.fields.email.value,\n          redirectUrl: '',\n        },\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['email', e.message]));\n      }\n      throw e;\n    }\n  }, [dispatch, onRecover, state.fields.email.value]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[{ onNext: onClickRecover, component: EmailStep }, { component: DoneStep }]}\n    />\n  );\n}\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('Limbo', { screen: 'DropzoneSelectScreen' });\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Password changed\">\n      <Fields>\n        <LottieView\n          loop={false}\n          autoPlay\n          speed={1.2}\n          style={{ height: 300, width: 300, alignSelf: 'center' }}\n          source={lottieDoneAnimation as unknown as string}\n        />\n        <Paragraph>Your password has been changed. You can now log in again.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUpdateLostPasswordMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { User } from 'app/api/schema.d';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport DoneStep from './steps/Done';\nimport PasswordStep from './steps/Password';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n\n  const [updatePassword] = useUpdateLostPasswordMutation();\n  const wizard = React.useRef<WizardRef>(null);\n\n  const onChangePassword = React.useCallback(async () => {\n    try {\n      if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n        throw new Error('Password mismatch. Did you type exactly the same password?');\n      }\n      if (!route.params?.token) {\n        throw new Error('Security token missing - try clicking the link in the email again');\n      }\n      const result = await updatePassword({\n        variables: {\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          token: route.params.token,\n        },\n      });\n\n      if (result?.data?.userUpdatePasswordWithToken?.authenticatable) {\n        dispatch(\n          actions.global.setUser(result.data.userUpdatePasswordWithToken.authenticatable as User)\n        );\n        return;\n      }\n      if (result.errors?.length) {\n        throw new Error(result.errors[0].message);\n      }\n      throw new Error('Password change failed');\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw e;\n    }\n  }, [\n    dispatch,\n    route.params?.token,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    updatePassword,\n  ]);\n\n  const navigation = useNavigation();\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Password too weak');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onFinished = React.useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    navigation.replace('Unauthenticated', { screen: 'LoginScreen' });\n    throw new Error('Error thrown to prevent navigation.goBack');\n  }, [navigation]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[\n        { onBack: navigation.goBack, onNext: validatePassword, component: PasswordStep },\n        { onNext: onChangePassword, component: PasswordConfirmationStep },\n        { component: DoneStep, onNext: onFinished },\n      ]}\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { UserRoutes } from './routes';\n\nexport function useUserNavigation() {\n  return useNavigation<NavigationProp<UserRoutes>>();\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { RefreshControl, FlatList, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport SkeletonContent from 'app/components/Skeleton';\nimport NoResults from 'app/components/NoResults';\nimport { Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment, DropzoneUsersQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers';\nimport omitBy from 'lodash/omitBy';\nimport isEmpty from 'lodash/isEmpty';\nimport { useUserNavigation } from '../useUserNavigation';\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 48, width: 48, marginHorizontal: 12, borderRadius: 48 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\n\nconst loadingFragment: DropzoneUserEssentialsFragment = {\n  id: '__LOADING__',\n  hasCredits: false,\n  walletId: '__LOADING__',\n  hasExitWeight: false,\n  hasLicense: false,\n  hasMembership: false,\n  user: {\n    id: '__LOADING__',\n  },\n};\n\nexport type UserListRoute = {\n  UserListScreen: undefined;\n};\n\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n\n  const { data, loading, refetch } = useDropzoneUsersQuery({\n    variables: omitBy<DropzoneUsersQueryVariables>(\n      {\n        dropzoneId: dropzone?.id as string,\n        search: state.searchText,\n      },\n      isEmpty\n    ) as DropzoneUsersQueryVariables,\n    skip: !dropzone?.id,\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const navigation = useUserNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = React.useMemo(() => data?.dropzoneUsers?.edges || [], [data?.dropzoneUsers?.edges]);\n  console.debug({ users, numColumns });\n  const initialLoading = !users?.length && loading;\n  const theme = useTheme();\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.surface }}>\n      <ProgressBar indeterminate color={global.theme.colors.primary} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList<DropzoneUserEssentialsFragment>\n        data={initialLoading ? new Array(8).fill(loadingFragment) : users.map((edge) => edge?.node)}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: global.currentDropzoneId?.toString(),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={(item, idx) => `user-${item?.id || idx}-${idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%' }}\n        renderItem={({ item }) =>\n          item.id === '__LOADING__' ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${item?.id}`}\n              style={{\n                margin: 0,\n                marginVertical: 0,\n                borderRadius: 2,\n                width: `${100 / numColumns}%`,\n              }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 4, paddingRight: 0, paddingBottom: 4 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={item?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={item?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !item?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={48}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: item?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={48}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('ProfileScreen', {\n                      userId: item?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n          small\n          icon=\"plus\"\n          onPress={dialogs.createUser.open}\n          label=\"Add user\"\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from 'app/state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  onSearch,\n  options,\n  back,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search users...\"\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n      )}\n      {searchVisible ? (\n        <MaterialIcons\n          name=\"close\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      ) : (\n        <MaterialIcons\n          name=\"search\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      )}\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import NumberField from 'app/components/input/number_input/NumberField';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport TextInput from '../../input/text/TextField';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChange={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <NumberField\n          disabled={!canInspect}\n          value={value as number}\n          mode=\"outlined\"\n          helperText={config.description || 'No description'}\n          onChange={(text) => onChange({ ...config, value: text as number })}\n          label={config.label || ''}\n        />\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          value={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema.d';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Avatar, Card, Chip, Divider, ProgressBar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  RigInspectionEssentialsFragment,\n  RigEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n} from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport useMutationUpdateRig from 'app/api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, successColor } from 'app/constants/Colors';\n\nimport { Permission } from 'app/api/schema.d';\nimport { AvailableRigsDocument, DropzoneUsersDetailedDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport interface IRigCardProps {\n  rig: RigEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  rigInspection?: RigInspectionEssentialsFragment;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const pickImage = useImagePicker();\n\n  const updateRig = useMutationUpdateRig({\n    mutation: {\n      refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n    },\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      notify.success('Image uploaded');\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      notify.error('Upload failed');\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = pickImage();\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pickImage, rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useUserNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.owner?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16, maxWidth: 500 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          setOpen={setPackingCardMenuOpen}\n          open={isPackingCardMenuOpen}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              textStyle={{ marginTop: 0 }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <MenuItem\n            title=\"Upload new\"\n            icon=\"camera\"\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <MenuItem\n                title=\"View\"\n                icon=\"eye\"\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rigId: rig.id,\n              dropzoneUserId: dropzoneUser?.id as string,\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, Paragraph } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform, View } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport {\n  DropzoneDocument,\n  DropzoneUserProfileDocument,\n  useCreateRigInspectionMutation,\n  useRigInspectionTemplateQuery,\n} from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Query, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUserProfileQuery, DropzoneUserProfileQueryVariables } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\nimport RigCard from '../equipment/RigCard';\n\nexport type RigInspectionRoute = {\n  RigInspectionScreen: {\n    rigId: string;\n    dropzoneUserId: string;\n  };\n};\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  const notify = useNotifications();\n  const route = useRoute<RouteProp<RigInspectionRoute>>();\n  const { rigId, dropzoneUserId } = route.params;\n  const { dropzoneUser } = useUserProfile({\n    id: dropzoneUserId,\n  });\n  const { data: rigInspectionQuery } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n    skip: !currentDropzone?.dropzone?.id,\n  });\n\n  const rig = React.useMemo(\n    () => dropzoneUser?.user?.rigs?.find(({ id }) => id === rigId),\n    [dropzoneUser?.user?.rigs, rigId]\n  );\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useCreateRigInspectionMutation();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = dropzoneUser?.rigInspections?.some(\n      (inspection) =>\n        inspection.rig?.id?.toString() === rig?.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = dropzoneUser?.rigInspections?.find((record) => record.rig?.id === rig?.id);\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition,\n    dispatch,\n    rig?.id,\n    dropzoneUser?.rigInspections,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzone: currentDropzone?.dropzone?.id,\n          rig: rig?.id,\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<\n            DropzoneUserProfileQuery,\n            DropzoneUserProfileQueryVariables\n          >({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              id: currentDropzone?.dropzone?.id as string,\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: DropzoneDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              earliestTimestamp: startOfDay(new Date()).toISOString(),\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: DropzoneDocument,\n              variables: {\n                dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n                earliestTimestamp: startOfDay(new Date()).toISOString(),\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            dropzoneUser: {\n              rigInspections: [\n                ...(result?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      notify.success('Rig inspection saved');\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig?.id,\n    state.fields,\n    state.ok,\n    notify,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <Screen fullWidth={false}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          backgroundColor: 'transparent',\n        }}\n      >\n        {rig && <RigCard {...{ rig }} />}\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={rigInspectionQuery?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            {canInspect ? null : (\n              <Paragraph>\n                You need Rig Inspector permissions to update this form, but you can still view it.\n              </Paragraph>\n            )}\n            <View style={{ flex: 1, flexGrow: 1, opacity: canInspect ? 1.0 : 0.6 }}>\n              <RigInspectionForm />\n            </View>\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) ===\n                  rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </Screen>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    [Permission.ActAsDzso]: 'shield-cross',\n    [Permission.ActAsGca]: 'radio-handheld',\n    [Permission.ActAsLoadMaster]: 'shield-account',\n    [Permission.ActAsPilot]: 'account-tie-hat',\n    [Permission.ActAsRigInspector]: 'shield-search',\n  }[type];\n\n  const label = {\n    [Permission.ActAsDzso]: 'DZSO',\n    [Permission.ActAsGca]: 'GCA',\n    [Permission.ActAsLoadMaster]: 'Load Master',\n    [Permission.ActAsPilot]: 'Pilot',\n    [Permission.ActAsRigInspector]: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\nimport { Permission } from 'app/api/schema.d';\n// eslint-disable-next-line max-len\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUserEssentialsFragment;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const { revokePermission, grantPermission } = useUserProfile();\n  const notify = useNotifications();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const badges = React.useMemo(\n    () => permissions?.filter((name) => /^actAs/.test(name)) || [],\n    [permissions]\n  );\n\n  const shouldShowBadge = React.useCallback(\n    (permission: Permission) => canGrantPermission || badges.includes(permission),\n    [badges, canGrantPermission]\n  );\n\n  const grant = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await grantPermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [dropzoneUser?.id, grantPermission, notify]\n  );\n\n  const revoke = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await revokePermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [notify, dropzoneUser?.id, revokePermission]\n  );\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revoke(permission)\n                : grant(permission)\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onChange={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        value={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { useApolloClient } from '@apollo/client';\nimport PermissionBadges from 'app/screens/authenticated/user/profile/UserInfo/PermissionBadges';\nimport * as React from 'react';\nimport { Button, Dialog, List, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Permission } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment, DropzoneUserProfileFragment } from 'app/api/operations';\nimport { DropzoneUserProfileFragmentDoc, useUpdateDropzoneUserMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, onSuccess } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const client = useApolloClient();\n  const getCachedUser = React.useCallback(\n    () =>\n      !state.original\n        ? null\n        : client.readFragment<DropzoneUserProfileFragment>({\n            fragment: DropzoneUserProfileFragmentDoc,\n            fragmentName: 'dropzoneUserProfile',\n            id: client.cache.identify(state.original),\n          }),\n    [client, state.original]\n  );\n  const [mutationUpdateDropzoneUser, createData] = useUpdateDropzoneUserMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          dropzoneUserId: state.original?.id as string,\n          attributes: {\n            userRoleId: Number(state.fields.role.value?.id),\n            expiresAt: state.fields.expiresAt.value,\n          },\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        notify.error(result?.errors[0]);\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    notify,\n    onSuccess,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Dialog visible={!!open}>\n      <ProgressBar\n        indeterminate\n        visible={createData.loading}\n        color={globalState.theme.colors.primary}\n      />\n      <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n      <Dialog.Content>\n        <DropzoneUserForm />\n        {state.original && getCachedUser() ? (\n          <>\n            <List.Subheader style={{ paddingLeft: 0 }}>Acting permissions</List.Subheader>\n            <PermissionBadges\n              dropzoneUser={getCachedUser() as DropzoneUser}\n              permissions={\n                (getCachedUser() as DropzoneUser).permissions?.filter((name) =>\n                  /^actAs/.test(name)\n                ) as Permission[]\n              }\n            />\n          </>\n        ) : null}\n      </Dialog.Content>\n      <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n        <Button\n          onPress={() => {\n            dispatch(actions.forms.dropzoneUser.reset());\n            onClose();\n          }}\n        >\n          Cancel\n        </Button>\n\n        <Button onPress={onSave}>Save</Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema.d';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        owner {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('is required')],\n    model: [isRequired('is required')],\n    serial: [isRequired('number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"You can give your equipment a nickname\"\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Make\"\n        helperText=\"e.g Javelin, Mirage\"\n        error={state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Model\"\n        error={state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Serial\"\n        error={state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Current canopy size\"\n        error={state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Size of canopy in container\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          value={[state.fields.rigType?.value || 'sport']}\n          onChange={([rigType]) => dispatch(actions.forms.rig.setField(['rigType', rigType]))}\n        />\n      )}\n      <DatePicker\n        value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        console.log(payload);\n        onSuccess();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      const params = {\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      };\n      console.log(params);\n      const d = await updateRig.mutate(params);\n      console.log(d);\n    } else {\n      const x = await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n      console.log(x);\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField(['exitWeight', state.original.user?.exitWeight || '60'])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.user?.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Nickname\"\n        error={state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Phone\"\n        error={state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        error={state.fields.exitWeight.error}\n        onChange={(num) => dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))}\n        label=\"Exit weight (kg)\"\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onChange={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onChange={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { useJoinFederationMutation, DropzoneUserProfileDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId?: string;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const [joinFederation] = useJoinFederationMutation();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      notify.success(`Profile has been updated`);\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) => notify.error(error),\n    mutation: {\n      refetchQueries: [\n        {\n          query: DropzoneUserProfileDocument,\n          variables: {\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      dropzoneUser: state.original?.id,\n      name: state.fields.name.value,\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    const selectedLicenseFederation = state.original?.user?.userFederations?.find(\n      ({ federation }) => federation.slug === state.fields.license.value?.federation?.slug\n    );\n    if (\n      (state.fields.license.value?.id &&\n        selectedLicenseFederation?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !== selectedLicenseFederation?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federation: state.fields.license.value?.federation?.id?.toString() as string,\n          uid: state.fields?.apfNumber?.value,\n          license: state.fields.license.value?.id,\n        },\n      });\n    }\n  }, [\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.federation?.slug,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.user?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function useProfileWizard() {\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (index?: number) => {\n      if (currentUser) {\n        dispatch(actions.forms.user.setOriginal(currentUser));\n        if (currentUser?.user?.rigs?.length) {\n          dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n        }\n\n        navigation.navigate('Wizards', {\n          screen: 'UserWizardScreen',\n          params: {\n            index,\n          },\n        });\n      }\n    },\n    [currentUser, dispatch, navigation]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Caption, Divider, Paragraph, Title, TouchableRipple } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport startCase from 'lodash/startCase';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\nimport UserAvatar from 'app/components/UserAvatar';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUserProfileFragment;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n}\n\nconst badgesInitials = {\n  [Permission.ActAsLoadMaster]: 'LM',\n  [Permission.ActAsPilot]: 'Pilot',\n  [Permission.ActAsRigInspector]: 'Rig.Insp',\n  [Permission.ActAsGca]: 'GCA',\n  [Permission.ActAsDzso]: 'DZSO',\n};\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  const actingPermissions = (\n    dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || []\n  ).map((str) => badgesInitials[str as keyof typeof badgesInitials]);\n\n  console.log('image', dropzoneUser?.user?.image);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            <UserAvatar\n              image={dropzoneUser?.user?.image}\n              name={dropzoneUser?.user?.name}\n              size={80}\n            />\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            setOpen={setContactOpen}\n            open={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n            {actingPermissions.length ? (\n              <Caption style={{ marginTop: 4 }}>\n                {` ${actingPermissions.map(startCase).join(', ')}`}\n              </Caption>\n            ) : null}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\n\nimport { FAB, useTheme } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useNavigation } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Alert } from 'react-native';\nimport { DropzoneUsersDocument, useArchiveUserMutation } from 'app/api/reflection';\nimport { errorColor, infoColor, successColor, warningColor } from 'app/constants/Colors';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\ntype PropsOf<T> = T extends React.ComponentType<infer P> ? P : never;\ntype FABActions = PropsOf<typeof FAB.Group>['actions'];\ninterface IUserActionsButtonProps {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  visible?: boolean;\n}\nexport default function UserActionsButton(props: IUserActionsButtonProps) {\n  const { dropzoneUser, visible } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fabOpen, setFabOpen] = React.useState(false);\n  const { dialogs } = useManifestContext();\n  const notify = useNotifications();\n\n  const dispatch = useAppDispatch();\n  const navigation = useUserNavigation();\n  const rootNavigator = useNavigation();\n  const theme = useTheme();\n\n  const onClickSetupWizard = React.useCallback(() => {\n    if (dropzoneUser) {\n      dispatch(actions.forms.user.setOriginal(dropzoneUser));\n      if (dropzoneUser?.user?.rigs?.length) {\n        dispatch(actions.forms.rig.setOriginal(dropzoneUser.user.rigs[0]));\n      }\n      rootNavigator.navigate('Wizards', {\n        screen: 'UserWizardScreen',\n        params: { index: undefined },\n      });\n    }\n  }, [dispatch, dropzoneUser, rootNavigator]);\n\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n\n  const onClickTransactions = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('OrdersScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickEquipment = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickAddFunds = React.useCallback(() => {\n    if (dropzoneUser) {\n      dialogs.credits.open({ dropzoneUser });\n    }\n  }, [dialogs.credits, dropzoneUser]);\n\n  const onClickEdit = React.useCallback(() => {\n    if (dropzoneUser?.user) {\n      dispatch(actions.forms.user.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const isSelf = React.useMemo(\n    () => currentUser?.id === dropzoneUser?.id,\n    [currentUser?.id, dropzoneUser?.id]\n  );\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const canDeleteUsers = useRestriction(Permission.DeleteUser);\n\n  const [deleteUser] = useArchiveUserMutation();\n\n  const onDeleteUser = React.useCallback(() => {\n    Alert.alert(\n      isSelf ? 'Delete My Account' : `Delete ${dropzoneUser?.user?.name}`,\n      isSelf\n        ? 'Are you sure you want to delete your account? You will be logged out'\n        : 'Are you sure you want to delete this user ? ',\n      [\n        { style: 'cancel', text: 'Cancel', onPress: () => null },\n        {\n          style: 'destructive',\n          text: 'Yes, delete',\n          onPress: async () => {\n            try {\n              const { data } = await deleteUser({\n                variables: {\n                  id: Number(dropzoneUser?.id),\n                },\n                refetchQueries: [DropzoneUsersDocument],\n              });\n\n              data?.deleteUser?.errors?.forEach((message) => {\n                notify.success(message);\n              });\n              if (data?.deleteUser?.dropzoneUser?.id) {\n                notify.success(`${dropzoneUser?.user?.name} has been removed`);\n              }\n\n              navigation.goBack();\n            } catch (e) {\n              console.log(e);\n            }\n          },\n        },\n      ]\n    );\n  }, [deleteUser, dropzoneUser?.id, dropzoneUser?.user?.name, isSelf, navigation, notify]);\n\n  const fabActions = React.useMemo(\n    () =>\n      [\n        isSelf && canUpdateUsers\n          ? {\n              icon: 'pencil',\n              label: 'Edit',\n              onPress: onClickEdit,\n            }\n          : null,\n        {\n          icon: 'account-convert',\n          label: 'Setup Wizard',\n          color: infoColor,\n          onPress: onClickSetupWizard,\n        },\n        canUpdateUsers\n          ? {\n              icon: 'lock',\n              label: 'Access & Membership',\n              color: warningColor,\n              onPress: onClickAccessAndMembership,\n            }\n          : null,\n        canAddTransaction\n          ? {\n              icon: 'cash-plus',\n              label: 'Add Funds',\n              color: successColor,\n              onPress: onClickAddFunds,\n            }\n          : null,\n        isSelf || canViewOthersTransactions\n          ? {\n              icon: 'account-cash',\n              label: 'Manage Transactions',\n              onPress: onClickTransactions,\n            }\n          : null,\n        {\n          icon: 'parachute',\n          label: 'Manage Equipment',\n          onPress: onClickEquipment,\n        },\n        canDeleteUsers\n          ? {\n              icon: 'account-off',\n              label: 'Delete user',\n              onPress: onDeleteUser,\n              color: errorColor,\n            }\n          : null,\n      ].filter(Boolean) as FABActions,\n    [\n      canAddTransaction,\n      canDeleteUsers,\n      canUpdateUsers,\n      canViewOthersTransactions,\n      isSelf,\n      onClickAccessAndMembership,\n      onClickAddFunds,\n      onClickEdit,\n      onClickEquipment,\n      onClickSetupWizard,\n      onClickTransactions,\n      onDeleteUser,\n    ]\n  );\n\n  return (\n    <FAB.Group\n      testID=\"user-profile-fab\"\n      open={fabOpen}\n      visible={(!!dropzoneUser?.id && visible) || false}\n      icon={fabOpen ? 'close' : 'account-edit'}\n      fabStyle={{\n        marginLeft: 16,\n        marginBottom: 16,\n        backgroundColor: theme.colors.primary,\n      }}\n      onStateChange={({ open }) => setFabOpen(open)}\n      actions={fabActions}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { UserSlotDetailsFragment } from 'app/api/operations';\n\ninterface ISlot {\n  slot: UserSlotDetailsFragment;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <List.Item\n            description={`on Load #${slot.load.loadNumber}`}\n            title={slot.jumpType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text\n                  style={[\n                    styles.jumpType,\n                    {\n                      color: theme.colors.onSurface,\n                    },\n                  ]}\n                >\n                  -${slot.cost?.toFixed(2)}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  width: 100,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <Avatar.Icon\n                  icon=\"parachute-outline\"\n                  size={48}\n                  style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n    flexGrow: 1,\n  },\n  jumpType: {\n    fontSize: 16,\n    fontFamily: 'Roboto_400Regular',\n    fontWeight: '400',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n    flexGrow: 1,\n    minWidth: 150,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\nimport enAU from 'date-fns/locale/en-AU';\n\nimport { groupBy, map } from 'lodash';\nimport { differenceInDays, format, formatDistance, parseISO, startOfDay } from 'date-fns';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\n\nimport SlotCard from '../SlotCard';\n\nexport interface IJumpHistoryTab {\n  tabIndex: number;\n  currentTabIndex: number;\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n}\nexport default function JumpHistoryTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useNavigation();\n\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.slots?.edges, (e) =>\n          startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n        ),\n        (d, t) => {\n          const date = parseISO(t);\n          const title =\n            differenceInDays(new Date(), date) > 7\n              ? format(date, 'dd MMM, yyyy')\n              : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n          return {\n            title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.slots?.edges]\n  );\n\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n      style={{ padding: 8 }}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <SlotCard\n                slot={item.node}\n                onPress={() => {\n                  if (item?.node?.load?.id) {\n                    navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Manifest',\n                        params: {\n                          screen: 'LoadScreen',\n                          params: {\n                            loadId: item.node?.load?.id,\n                          },\n                        },\n                      },\n                    });\n                  }\n                }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n} from 'app/api/operations';\nimport { DropzoneUser } from 'app/api/schema.d';\nimport { successColor } from 'app/constants/Colors';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { DateTime } from 'luxon';\n\ninterface IOrder {\n  order: OrderEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const isSelfBuyer =\n    order.buyer?.__typename === 'DropzoneUser' &&\n    (order.buyer as DropzoneUser)?.id === dropzoneUser?.id;\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    isSelfBuyer === dropzoneUser?.id ? 'cash-minus' : 'cash-plus';\n\n  const right = React.useCallback(\n    () => (\n      <Text\n        style={{\n          fontSize: 16,\n          fontFamily: 'Roboto_400Regular',\n          fontWeight: '400',\n          textAlign: 'center',\n          alignSelf: 'center',\n          color: theme.colors.onSurface,\n        }}\n      >\n        {`${isSelfBuyer ? '-$' : '$'}${order.amount.toFixed(2)}`}\n      </Text>\n    ),\n    [isSelfBuyer, order.amount, theme.colors.onSurface]\n  );\n\n  const left = React.useCallback(\n    () => (\n      <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n        {showAvatar ? (\n          <UserAvatar\n            style={{ alignSelf: 'center', marginHorizontal: 12 }}\n            size={60}\n            name={\n              (order?.buyer as DropzoneUserEssentialsFragment)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment).name ||\n              ''\n            }\n            image={\n              (order?.buyer as DropzoneUserEssentialsFragment).user?.image ||\n              (order?.buyer as DropzoneEssentialsFragment).banner ||\n              undefined\n            }\n          />\n        ) : (\n          <MaterialCommunityIcons\n            color={\n              // eslint-disable-next-line no-underscore-dangle\n              '__typename' in order.buyer &&\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              order.buyer.__typename === 'DropzoneUser' &&\n              (order.buyer as DropzoneUserEssentialsFragment)?.id === dropzoneUser?.id\n                ? '#FF1414'\n                : successColor\n            }\n            name={icon}\n            size={36}\n            style={{ marginHorizontal: 16 }}\n          />\n        )}\n      </View>\n    ),\n    [dropzoneUser?.id, icon, order.buyer, showAvatar]\n  );\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Caption\n          style={{\n            textAlign: 'right',\n            paddingRight: 4,\n            paddingTop: 2,\n            marginBottom: 0,\n          }}\n        >\n          {DateTime.fromISO(order?.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n        </Caption>\n        <Card.Content style={styles.orderContent}>\n          <List.Item\n            title={\n              (order?.buyer as DropzoneUser)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment)?.name\n            }\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            description={order.title || null}\n            descriptionStyle={styles.orderDescription}\n            {...{ right, left }}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport JumpHistoryTab from './JumpHistory';\nimport FundTab from './Transactions';\nimport EquipmentTab from './Equipment';\n\n// const ProfileTabs = createMaterialTopTabNavigator();\n\ninterface IProfileTabsProps {\n  onChange(tab: ProfileTabs): void;\n}\n\nexport enum ProfileTabs {\n  Funds,\n  Jumps,\n  Equipment,\n}\n\nexport function ProfileTab(props: {\n  active: ProfileTabs;\n  dropzoneUser: DropzoneUserProfileFragment;\n}) {\n  const { active, dropzoneUser } = props;\n  if (active === ProfileTabs.Funds) {\n    return <FundTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Funds} currentTabIndex={active} />;\n  }\n  if (active === ProfileTabs.Equipment) {\n    return (\n      <EquipmentTab\n        {...{ dropzoneUser }}\n        tabIndex={ProfileTabs.Equipment}\n        currentTabIndex={active}\n      />\n    );\n  }\n  if (active === ProfileTabs.Jumps) {\n    return (\n      <JumpHistoryTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Jumps} currentTabIndex={active} />\n    );\n  }\n  return null;\n}\nexport default function TabBar(props: IProfileTabsProps) {\n  const { onChange } = props;\n  const { colors, dark } = useAppSelector((state) => state.global.theme);\n\n  return (\n    <Tabs\n      defaultIndex={ProfileTabs.Jumps}\n      disableSwipe\n      style={{ backgroundColor: colors.surface }}\n      mode=\"fixed\"\n      dark={dark}\n    >\n      <TabScreen label=\"Funds\" icon=\"cash\" key=\"funds\" onPress={() => onChange(0)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Jumps\" icon=\"airplane-takeoff\" key=\"jumps\" onPress={() => onChange(1)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Equipment\" icon=\"parachute\" key=\"equipment\" onPress={() => onChange(2)}>\n        <View />\n      </TabScreen>\n    </Tabs>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\n\nimport { DropzoneUserProfileFragment, OrderEssentialsFragment } from 'app/api/operations';\n\nimport { groupBy, map } from 'lodash';\nimport { DateTime, Duration } from 'luxon';\nimport OrderCard from '../../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../../useUserNavigation';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function TransactionsTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useUserNavigation();\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.orders?.edges, (e) =>\n          DateTime.fromISO(e?.node?.createdAt).startOf('day').toISO()\n        ),\n        (d, t) => {\n          const date = DateTime.fromISO(t);\n          const title =\n            date.diffNow('days') > Duration.fromDurationLike({ days: 7 })\n              ? date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)\n              : date.toRelative({ locale: 'au', round: true, style: 'long' });\n          return {\n            title: date.startOf('day').hasSame(DateTime.local(), 'day') ? 'Today' : title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.orders?.edges]\n  );\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <OrderCard\n                showAvatar\n                onPress={() =>\n                  item?.node?.id &&\n                  dropzoneUser &&\n                  navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser?.id,\n                  })\n                }\n                order={item?.node as OrderEssentialsFragment}\n                {...{ dropzoneUser }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\n\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { actions, useAppDispatch } from 'app/state';\n\nimport RigCard from '../../equipment/RigCard';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function EquipmentTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const dispatch = useAppDispatch();\n  return (\n    <View\n      animation={currentTabIndex < tabIndex ? 'slideInRight' : 'slideInLeft'}\n      duration={200}\n      easing=\"ease-in-out\"\n      style={{ padding: 8 }}\n    >\n      {dropzoneUser?.user?.rigs?.map((item) => (\n        <RigCard\n          {...{ dropzoneUser }}\n          onSuccessfulImageUpload={() => null}\n          rig={item}\n          rigInspection={dropzoneUser?.rigInspections?.find(\n            (insp) => insp.rig?.id === item.id && insp.isOk\n          )}\n          onPress={() => {\n            dispatch(actions.forms.rig.setOpen(item));\n          }}\n        />\n      ))}\n    </View>\n  );\n}\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { FlatList, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Chip, Divider, ProgressBar } from 'react-native-paper';\nimport Skeleton from 'app/components/Skeleton';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { useUpdateUserMutation } from 'app/api/reflection';\n\nimport { errorColor, successColor } from 'app/constants/Colors';\nimport { format } from 'date-fns';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\nimport { useUserProfile } from 'app/api/crud';\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\n\nimport UserActionsButton from './UserActions';\nimport TabBar, { ProfileTab } from './tabs';\n\nexport type ProfileRoute = {\n  ProfileScreen: {\n    userId: string;\n  };\n};\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<ProfileRoute>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: route.params.userId || currentUser?.id,\n  });\n  const pickImage = useImagePicker();\n  const isFocused = useIsFocused();\n  const [defaultIndex, onChangeIndex] = React.useState(1);\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n  const headerRight = React.useCallback(\n    () =>\n      !currentUser?.expiresAt ? null : (\n        <Chip\n          onPress={onClickAccessAndMembership}\n          style={{\n            marginRight: 16,\n            height: 24,\n            backgroundColor:\n              currentUser.expiresAt * 1000 < new Date().getTime() ? errorColor : successColor,\n          }}\n          textStyle={{ color: 'white', marginTop: 0 }}\n        >\n          {format(currentUser.expiresAt * 1000, 'dd/MM/yy')}\n        </Chip>\n      ),\n    [currentUser?.expiresAt, onClickAccessAndMembership]\n  );\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({\n        headerRight,\n      });\n    }\n  }, [headerRight, isFocused, navigation]);\n\n  const [mutationUpdateUser] = useUpdateUserMutation();\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            dropzoneUser: dropzoneUser?.id,\n            image: `data:image/jpeg;base64,${base64}`,\n          },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.id, mutationUpdateUser, pickImage]);\n\n  const { dialogs } = useManifestContext();\n\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const openWizard = useProfileWizard();\n\n  const getContent = React.useCallback(\n    ({ index }: { index: number }) => {\n      if (index === 0) {\n        return <TabBar onChange={onChangeIndex} />;\n      }\n      if (dropzoneUser) {\n        return <ProfileTab active={defaultIndex} {...{ dropzoneUser }} />;\n      }\n      return null;\n    },\n    [defaultIndex, dropzoneUser]\n  );\n  return (\n    <>\n      <View style={StyleSheet.absoluteFill}>\n        {loading && (\n          <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n        )}\n        <FlatList\n          style={{ backgroundColor: state.theme.colors.background }}\n          contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n          refreshControl={<RefreshControl refreshing={loading} />}\n          keyExtractor={(_, idx) => `profile-${idx}`}\n          ListHeaderComponent={() => (\n            <View style={styles.wrappingHeader}>\n              <View style={{ width: '100%' }}>\n                {!dropzoneUser ? (\n                  <Skeleton\n                    key=\"profile-header\"\n                    containerStyle={{\n                      height: 256,\n                      width: '100%',\n                    }}\n                    isLoading\n                    layout={[{ key: 'header', width: '100%', height: 256, borderRadius: 8 }]}\n                  />\n                ) : (\n                  <Header dropzoneUser={dropzoneUser} onPressAvatar={onPickImage}>\n                    <InfoGrid\n                      style={{ height: 80 }}\n                      items={[\n                        {\n                          title: 'Funds',\n                          value: `$${dropzoneUser?.credits || 0}`,\n                          onPress: () => {\n                            dialogs.credits.open({ dropzoneUser });\n                          },\n                        },\n                        {\n                          title: 'License',\n                          value: `${dropzoneUser?.license?.name || '-'}`,\n                          onPress: () => {\n                            openWizard(5);\n                          },\n                        },\n                        {\n                          title: 'Exit weight',\n                          onPress: () => {\n                            openWizard(9);\n                          },\n                          value:\n                            Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                        },\n                      ]}\n                    />\n                    <Divider style={styles.divider} />\n                  </Header>\n                )}\n              </View>\n            </View>\n          )}\n          renderItem={getContent}\n          data={[null, null]}\n        />\n\n        <RigDialog\n          onClose={onCloseRigForm}\n          onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n          open={forms.rig.open}\n          userId={Number(dropzoneUser?.user?.id)}\n        />\n\n        <DropzoneUserDialog\n          onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n          onSuccess={(user) => {\n            dispatch(actions.forms.dropzoneUser.setOpen(false));\n            if (currentUser?.id === dropzoneUser?.id) {\n              dispatch(actions.global.setUser(user.user));\n            }\n          }}\n          open={forms.dropzoneUser.open}\n        />\n        <EditUserSheet\n          dropzoneUserId={dropzoneUser?.id}\n          onClose={onUserSheetClose}\n          onSuccess={() => {\n            dispatch(actions.forms.user.setOpen(false));\n          }}\n          open={forms.user.open}\n        />\n      </View>\n      <UserActionsButton {...{ dropzoneUser }} visible={isFocused} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    // flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { RouteProp, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { SectionList, StyleSheet, View } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\n\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { groupBy, map } from 'lodash';\nimport { formatDistance, parseISO, startOfDay, differenceInDays, format } from 'date-fns';\nimport enAU from 'date-fns/locale/en-AU';\nimport { OrderEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport type OrdersRoute = {\n  OrdersScreen: {\n    userId: string;\n  };\n};\nexport default function OrdersScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<OrdersRoute>>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  const navigation = useUserNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name?.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: state.theme.colors.surface }}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <SectionList\n        sections={map(\n          groupBy(dropzoneUser?.orders?.edges, (e) =>\n            startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n          ),\n          (d, t) => {\n            const date = parseISO(t);\n            const title =\n              differenceInDays(new Date(), date) > 7\n                ? format(date, 'dd MMM, yyyy')\n                : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n            return {\n              title,\n              data: d,\n            };\n          }\n        )}\n        renderSectionHeader={({ section: { title } }) => <List.Subheader>{title}</List.Subheader>}\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            showAvatar\n            onPress={() =>\n              !item?.node || !dropzoneUser\n                ? null\n                : navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser.id,\n                  })\n            }\n            order={item?.node as OrderEssentialsFragment}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport RigDialog from 'app/components/dialogs/Rig';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport RigCard from './RigCard';\n\nexport type EquipmentRoute = {\n  EquipmentScreen: {\n    userId: string;\n  };\n};\nexport default function EquipmentScreen() {\n  const globalState = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const navigation = useNavigation();\n\n  const route = useRoute<RouteProp<EquipmentRoute, 'EquipmentScreen'>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        keyExtractor={(item) => `rig-${item?.id}`}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            // onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={canUpdateUser}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from 'app/constants/Colors';\nimport { TransactionEssentialsFragment } from 'app/api/operations';\nimport { DateTime } from 'luxon';\n\ninterface ITransaction {\n  transaction: TransactionEssentialsFragment;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n              color: theme.colors.onSurface,\n            }}\n          >\n            {transaction?.createdAt &&\n              DateTime.fromISO(transaction.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Wallet } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n  ReceiptEssentialsFragment,\n} from 'app/api/operations';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: ReceiptEssentialsFragment;\n  index: number;\n  order: OrderEssentialsFragment;\n}\n\nexport default function ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | DropzoneEssentialsFragment | DropzoneUserEssentialsFragment) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        ?.filter((transaction) => isUser(transaction.receiver as DropzoneUserEssentialsFragment))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { RouteProp, useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from 'app/constants/Colors';\nimport LottieView from 'app/components/LottieView';\nimport { Dropzone, DropzoneUser } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport UserAvatar from 'app/components/UserAvatar';\nimport lottieTicketAnimation from 'app/../assets/images/ticket.json';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport ReceiptCard from './ReceiptCard';\n\nexport type OrderReceiptRoute = {\n  OrderReceiptScreen: {\n    orderId: string;\n    userId: string;\n  };\n};\nexport default function OrderScreen() {\n  const route = useRoute<RouteProp<OrderReceiptRoute, 'OrderReceiptScreen'>>();\n  const theme = useTheme();\n  const { orderId, userId } = route.params;\n  const { dropzoneUser } = useUserProfile({ id: userId });\n  const order = React.useMemo(\n    () =>\n      dropzoneUser?.orders?.edges?.map((edge) => edge?.node).find((node) => node?.id === orderId),\n    [dropzoneUser?.orders?.edges, orderId]\n  );\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                  color: theme.colors.onSurface,\n                }}\n              >{`Order #${order?.id || ''}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                  color: theme.colors.onSurface,\n                }}\n              >\n                {order?.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order?.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as DropzoneEssentialsFragment)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name ||\n                (order?.seller as DropzoneEssentialsFragment)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport UsersScreen, { UserListRoute } from './user_list/UsersScreen';\nimport SearchableAppBar from './user_list/AppBar';\nimport RigInspectionScreen, { RigInspectionRoute } from './rig_inspection/RigInspectionScreen';\nimport ProfileScreen, { ProfileRoute } from './profile/ProfileScreen';\nimport OrdersScreen, { OrdersRoute } from './orders/OrdersScreen';\nimport EquipmentScreen, { EquipmentRoute } from './equipment/EquipmentScreen';\nimport OrderReceiptScreen, { OrderReceiptRoute } from './order_receipt/OrderScreen';\n\nexport type UserRoutes = EquipmentRoute &\n  OrderReceiptRoute &\n  RigInspectionRoute &\n  ProfileRoute &\n  UserListRoute &\n  OrdersRoute;\n\nconst Users = createStackNavigator<UserRoutes>();\n\nexport default function Routes() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  return (\n    <AppSignalBoundary>\n      <Users.Navigator\n        screenOptions={{\n          cardStyle: {\n            flex: 1,\n          },\n          presentation: 'modal',\n        }}\n      >\n        <Users.Screen\n          name=\"UserListScreen\"\n          component={UsersScreen}\n          options={{\n            title: 'Dropzone users',\n            headerShown: true,\n            header: (props) => (\n              <SearchableAppBar\n                {...props}\n                searchText={searchText}\n                searchVisible={isSearchVisible}\n                setSearchVisible={(visible) =>\n                  dispatch(actions.screens.users.setSearchVisible(visible))\n                }\n                onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n              />\n            ),\n          }}\n        />\n        <Users.Screen\n          name=\"ProfileScreen\"\n          component={ProfileScreen}\n          options={{ title: 'User' }}\n          initialParams={{\n            userId: currentUser?.id,\n          }}\n        />\n        <Users.Screen\n          name=\"RigInspectionScreen\"\n          component={RigInspectionScreen}\n          options={{ title: 'Inspection' }}\n        />\n        <Users.Screen\n          name=\"OrdersScreen\"\n          component={OrdersScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Users.Screen\n          name=\"EquipmentScreen\"\n          component={EquipmentScreen}\n          options={{ title: 'Equipment' }}\n        />\n        <Users.Screen\n          name=\"OrderReceiptScreen\"\n          component={OrderReceiptScreen}\n          options={{ title: 'Order' }}\n        />\n      </Users.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { NavigationProp, NavigatorScreenParams, useNavigation } from '@react-navigation/core';\n\nimport DropzoneWizardScreen from './dropzone_wizard/DropzoneWizard';\nimport UserWizardScreen from './user_wizard/UserWizardScreen';\nimport RecoverPasswordScreen from './recover_password/RecoverPasswordScreen';\nimport ConfirmUserScreen from './confirm_user/ConfirmUserScreen';\nimport ChangePasswordScreen from './change_password/ChangePasswordScreen';\nimport User, { UserRoutes } from '../authenticated/user/routes';\n\nexport type WizardRoutes = {\n  DropzoneWizardScreen: undefined;\n  UserWizardScreen: {\n    index?: number;\n  };\n  ConfirmUserScreen: undefined;\n  RecoverPasswordScreen: undefined;\n  ChangePasswordScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Wizards = createStackNavigator<WizardRoutes>();\n\nexport function useWizardRoutes() {\n  return useNavigation<NavigationProp<WizardRoutes>>();\n}\n\nexport default function Routes() {\n  return (\n    <Wizards.Navigator\n      screenOptions={{\n        headerShown: false,\n        presentation: 'modal',\n        cardStyle: { flex: 1 },\n      }}\n    >\n      <Wizards.Screen name=\"DropzoneWizardScreen\" component={DropzoneWizardScreen} />\n      <Wizards.Screen name=\"UserWizardScreen\" component={UserWizardScreen} />\n      <Wizards.Screen name=\"RecoverPasswordScreen\" component={RecoverPasswordScreen} />\n      <Wizards.Screen name=\"ConfirmUserScreen\" component={ConfirmUserScreen} />\n      <Wizards.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} />\n      <Wizards.Screen name=\"User\" component={User} />\n    </Wizards.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`info-grid-${i}`}>\n            <View style={{ flex }}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </React.Fragment>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { DropzoneExtensiveFragment } from 'app/api/operations';\nimport InfoGrid from 'app/screens/authenticated/dropzone/load/InfoGrid';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { useLogout } from 'app/api/hooks/useLogout';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme, currentRouteName: routeName } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, dropzone, loading },\n  } = useDropzoneContext();\n  const { dropzones } = useDropzonesContext();\n\n  const navigation = useNavigation();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n  const logout = useLogout();\n  const onLogout = React.useCallback(() => {\n    navigation.dispatch(DrawerActions.closeDrawer());\n    logout();\n  }, [logout, navigation]);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'User',\n                  params: {\n                    screen: 'ProfileScreen',\n                    params: {\n                      userId: currentUser?.id as string,\n                    },\n                  },\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Dropzone\">\n          {dropzone?.currentUser?.user?.moderationRole !== ModerationRole.User ? (\n            <Drawer.Item\n              label=\"Admin\"\n              active={/Overview/.test(routeName || '')}\n              icon=\"view-dashboard\"\n              onPress={() => {\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Overview',\n                    params: {\n                      screen: 'OverviewScreen',\n                    },\n                  },\n                });\n              }}\n            />\n          ) : null}\n          <Drawer.Item\n            label=\"Overview\"\n            active={/Dashboard/.test(routeName || '')}\n            icon=\"view-dashboard-outline\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Overview',\n                  params: {\n                    screen: 'DashboardScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(routeName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={routeName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'Configuration',\n                    params: {\n                      screen: 'TransactionsScreen',\n                    },\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'SettingsMenuScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Profile\"\n            active={routeName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Wizards', {\n                screen: 'User',\n                params: {\n                  screen: 'ProfileScreen',\n                  params: {\n                    userId: currentUser?.id as string,\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={routeName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'EquipmentScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={routeName === 'NotificationsScreen'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Notifications',\n                  params: {\n                    screen: 'NotificationsScreen',\n                  },\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={routeName === 'OrdersScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'OrdersScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item label=\"Log out\" icon=\"logout\" onPress={onLogout} />\n        </Drawer.Section>\n\n        <Drawer.Section title=\"Switch dropzone\">\n          {dropzones?.map((item) => (\n            <Drawer.Item\n              key={`${item?.id}-dz`}\n              label={item?.name || ''}\n              icon={\n                item?.banner\n                  ? ({ size }) => (\n                      <Avatar.Image source={{ uri: item?.banner as string }} {...{ size }} />\n                    )\n                  : 'map-marker'\n              }\n              active={dropzone?.id === item?.id}\n              onPress={() => {\n                if (item) {\n                  dispatch(actions.global.setDropzone(item as DropzoneExtensiveFragment));\n                  navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'ManifestScreen',\n                      },\n                    },\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    marginLeft: 32,\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginLeft: 32,\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","import { useApolloClient } from '@apollo/client';\nimport { actions, useAppDispatch } from 'app/state';\nimport React from 'react';\nimport { abortController } from '../client/links';\n\nexport function useLogout() {\n  const dispatch = useAppDispatch();\n  const client = useApolloClient();\n  return React.useCallback(() => {\n    console.debug('[Hooks::useLogout]: Logging out...');\n    abortController.abort();\n    client.clearStore();\n    dispatch(actions.global.logout());\n  }, [client, dispatch]);\n}\n","import * as React from 'react';\nimport { Paragraph, useTheme, IconButton } from 'react-native-paper';\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\nimport Color from 'color';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  const { width } = useWindowDimensions();\n  const theme = useTheme();\n  const textColor =\n    Color(theme.colors.primary).contrast(Color(theme.colors.onSurface)) < 11\n      ? theme.colors.surface\n      : theme.colors.onSurface;\n  return (\n    <View style={[styles.warning, { backgroundColor: theme.colors.primary }]}>\n      <Paragraph\n        style={{ width: action ? width - 56 : width, color: textColor, flexGrow: 1 }}\n        adjustsFontSizeToFit\n        allowFontScaling\n      >\n        {title}\n      </Paragraph>\n      {!action ? null : (\n        <View style={{ width: 40 }}>\n          <IconButton icon=\"launch\" color={textColor} onPress={action} style={{ width: 24 }} />\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning\n        title=\"Your reserve repack is due. You can update the repack date on your profile\"\n        action={() =>\n          currentUser?.id &&\n          navigation.navigate('Authenticated', {\n            screen: 'LeftDrawer',\n            params: {\n              screen: 'Manifest',\n              params: {\n                screen: 'User',\n                params: { screen: 'EquipmentScreen', params: { userId: currentUser.id } },\n              },\n            },\n          })\n        }\n      />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport SetupWarning from './SetupWarning';\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { hideWarnings, back, options } = props;\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, dropzone },\n  } = useDropzoneContext();\n\n  const navigation = useNavigation();\n  const { openDrawer } = useNavigation<DrawerNavigationProp<never>>();\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {back ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton icon=\"menu\" size={32} onPress={openDrawer} />\n        )}\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n\n        {options.headerRight ? (\n          options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{\n              backgroundColor: palette.background,\n              height: 36,\n              padding: 4,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            mode=\"flat\"\n            textStyle={{\n              color: palette.onSurface,\n              fontFamily: 'Roboto_700Bold',\n            }}\n          >{`$${currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!currentUser?.expiresAt && currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!currentUser?.rigInspections?.length}\n          isRigSetUp={!!currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            console.log('opening setup wizard');\n            if (currentUser) {\n              dispatch(actions.forms.user.setOriginal(currentUser));\n              console.log(currentUser);\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n              }\n\n              navigation.navigate('Wizards', {\n                screen: 'UserWizardScreen',\n                params: {\n                  index: undefined,\n                },\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Select, { ISelectOption } from 'app/components/input/select/Select';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport { View } from 'react-native';\nimport Chip from './Chip';\n\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsGca],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"radio-handheld\">\n        {truncate(item?.label || 'No GCA', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"radio-handheld\">\n          {value?.user?.name || 'No gca'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          onChange={onSelect}\n          renderAnchor={renderAnchor}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface ILoadMasterChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: SlotDetailsFragment[];\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      slots?.map((slot) => ({\n        label: slot?.dropzoneUser?.user?.name || '',\n        value: slot?.dropzoneUser as DropzoneUserEssentialsFragment,\n        avatar: slot?.dropzoneUser?.user?.image,\n      })) || [],\n    [slots]\n  );\n\n  const selected = React.useMemo(\n    () => slots?.map((slot) => slot?.dropzoneUser)?.find((node) => node?.id === value?.id),\n    [slots, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-account\">\n        {truncate(item?.label || 'No LM', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"shield-account\">\n          {value?.user?.name || 'No LM'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          renderAnchor={renderAnchor}\n          onChange={onSelect}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsPilot],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"account-tie-hat\"\n      >\n        {truncate(item?.label || 'No Pilot', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 146 }} icon=\"account-tie-hat\">\n      {value?.user?.name || 'No Pilot'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 146 }}>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { usePlanesQuery } from '../../api/reflection';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPlaneChipSelect {\n  value?: PlaneEssentialsFragment | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<PlaneEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"airplane\"\n      >\n        {truncate(item?.label || 'No Plane', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 100 }} icon=\"airplane\">\n      {value?.name || 'No Plane'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 100 }}>\n      <Select<PlaneEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport {\n  Autocomplete,\n  InputAdornment,\n  ListItemAvatar,\n  ListItemText,\n  MenuItem,\n  styled,\n} from '@mui/material';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useDropzoneUsersLazyQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport first from 'lodash/first';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Caption, useTheme } from 'react-native-paper';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IDropzoneUserAutocompleteProps {\n  value?: DropzoneUserEssentialsFragment | null;\n  label?: string;\n  placeholder?: string;\n  color?: string;\n  onChange(value: DropzoneUserEssentialsFragment): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore This is supposed to be ok\nconst StyledTextField = styled(TextField, {\n  shouldForwardProp: (prop: keyof TextFieldProps) => prop !== 'color',\n})((p: TextFieldProps) => ({\n  // input label when focused\n  '& .MuiInput-input': {\n    color: p.color,\n  },\n  '& label.Mui-focused': {\n    color: p.color,\n  },\n  // focused color for input with variant='standard'\n  '& .MuiInput-root:before': {\n    borderBottomColor: p.color,\n  },\n  '& .MuiInput-root:hover': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='filled'\n  '& .MuiFilledInput-underline': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='outlined'\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: p.color,\n    },\n  },\n})) as React.ComponentType<Omit<TextFieldProps, 'color'> & { color?: string }>;\nexport default function DropzoneUserAutocomplete(props: IDropzoneUserAutocompleteProps) {\n  const { label, onChange, placeholder, color } = props;\n  const [searchUsers, { data, loading }] = useDropzoneUsersLazyQuery();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  React.useEffect(() => {\n    if (currentDropzoneId && searchText !== null) {\n      searchUsers({\n        variables: {\n          dropzoneId: currentDropzoneId?.toString() as string,\n          search: searchText,\n          licensed: false,\n        },\n      });\n    }\n  }, [currentDropzoneId, searchText, searchUsers]);\n\n  const theme = useTheme();\n  const getOptionLabel = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) =>\n      option.user.nickname\n        ? `${option.user.nickname} (${option.user.name})`\n        : (option.user.name as string),\n    []\n  );\n\n  const groupBy = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) => first(getOptionLabel(option).split('')) as string,\n    [getOptionLabel]\n  );\n\n  const options = React.useMemo(\n    () =>\n      (\n        (data?.dropzoneUsers?.edges?.map(\n          (edge) => edge?.node\n        ) as DropzoneUserEssentialsFragment[]) || []\n      ).sort(\n        (a, b) =>\n          -(first(getOptionLabel(b).split('')) as string).localeCompare(\n            first(getOptionLabel(a).split('')) as string\n          )\n      ),\n    [data?.dropzoneUsers?.edges, getOptionLabel]\n  );\n\n  const onSelect = React.useCallback(\n    (_: unknown, nextValue?: DropzoneUserEssentialsFragment | null) => {\n      setSearchText('');\n      if (nextValue) {\n        onChange(nextValue);\n      }\n    },\n    [onChange]\n  );\n  return (\n    <Autocomplete<DropzoneUserEssentialsFragment>\n      {...{ loading, options, groupBy, getOptionLabel, value: null }}\n      sx={{ width: '100%' }}\n      renderInput={(params) => (\n        <StyledTextField\n          variant=\"standard\"\n          {...params}\n          {...{ color, label, placeholder }}\n          fullWidth\n          value={searchText}\n          InputProps={{\n            ...params.InputProps,\n            value: searchText,\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MaterialCommunityIcons\n                  name=\"account-search-outline\"\n                  size={20}\n                  color={color || theme.colors.text}\n                />\n              </InputAdornment>\n            ),\n          }}\n        />\n      )}\n      onInputChange={(_, text) => setSearchText(text)}\n      onChange={onSelect}\n      inputValue={searchText}\n      popupIcon={<MaterialCommunityIcons name=\"chevron-down\" color={color} />}\n      clearIcon={<MaterialCommunityIcons name=\"close\" color={color} />}\n      renderOption={(menuItemProps, option) => (\n        <MenuItem {...menuItemProps} key={`autocomplete-user-${option.id}`} id={option.id}>\n          <ListItemAvatar>\n            <UserAvatar name={option.user.name} image={option?.user?.image} size={32} />\n          </ListItemAvatar>\n\n          <ListItemText>\n            {option.user.nickname ? (\n              <>\n                {option.user.nickname}&nbsp;\n                <Caption>({option.user.name})</Caption>\n              </>\n            ) : (\n              option.user.name\n            )}\n          </ListItemText>\n        </MenuItem>\n      )}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport { Card, ProgressBar, Divider, List, Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport calculateWingLoading from 'app/utils/calculateWingLoading';\nimport Chip from 'app/components/chips/Chip';\nimport TextInput from 'app/components/input/text/TextField';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: string;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: RigEssentialsFragment;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: RigEssentialsFragment): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: dropzoneUserId,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && dropzoneUser?.user?.exitWeight) {\n      onChangeExitWeight(Number(dropzoneUser.user.exitWeight));\n    }\n  }, [dropzoneUser?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={1}>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Card.Title\n        title={dropzoneUser?.user.name}\n        left={() => (\n          <UserAvatar name={dropzoneUser?.user?.name} image={dropzoneUser?.user?.image} size={36} />\n        )}\n        titleStyle={{ paddingRight: 0 }}\n        right={() => (\n          <View style={{ maxWidth: 100, marginRight: 16 }}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              mode=\"flat\"\n              variant={NumberFieldType.Weight}\n              onChange={(num) => onChangeExitWeight(num)}\n            />\n          </View>\n        )}\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={{ maxWidth: 128 }}>\n            <RigSelect\n              small\n              variant=\"chip\"\n              dropzoneUserId={dropzoneUserId ? Number(dropzoneUserId) : undefined}\n              onChange={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n            />\n          </View>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip small icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n          <Chip small icon=\"lock\" mode=\"outlined\" disabled>\n            {dropzoneUser?.role?.name}\n          </Chip>\n          <Chip small icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {dropzoneUser?.license?.name}\n          </Chip>\n        </ScrollView>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  mode=\"flat\"\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChange={(num) => onChangePassengerWeight?.(num)}\n                  variant={NumberFieldType.Weight}\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet, Text, View } from 'react-native';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport React from 'react';\nimport { Avatar, Caption, DataTable, Paragraph } from 'react-native-paper';\nimport { generateColor } from 'app/utils/generateColor';\nimport { isNumber } from 'lodash';\nimport SwipeActions from '../layout/SwipeActions';\nimport UserAvatar from '../UserAvatar';\nimport DraggableWrapper from './DragAndDrop/DraggableRow';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport enum SlotFields {\n  License = 'license',\n  Group = 'groupNumber',\n  WingLoading = 'wingloading',\n  Altitude = 'altitude',\n  Rig = 'rig',\n  TicketType = 'ticketType',\n  JumpType = 'jumpType',\n}\n\nexport interface ISlotUserRowProps {\n  load: LoadDetailsFragment;\n  fields?: SlotFields[];\n  slot: SlotDetailsFragment;\n  index: number;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n}\n\nexport const GROUP_COLORS = Array.from({ length: 20 }).map(() => generateColor());\n\nexport default function UserRow(props: ISlotUserRowProps) {\n  const { fields, load, slot, index, onDeletePress, onSlotGroupPress, onSlotPress } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const slotGroup: Required<typeof load['slots']> = load?.slots?.filter(\n    ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n  ) as Required<typeof load['slots']>;\n  const isCurrentUser = slot?.dropzoneUser?.id === currentUser?.id;\n\n  return (\n    <DroppableSlot loadId={load.id} slotId={slot?.id} rowIndex={index}>\n      <DraggableWrapper rowProps={props}>\n        {({ isDragging }) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              disabled={\n                isDragging ||\n                (isCurrentUser && !canRemoveSelf) ||\n                (!isCurrentUser && !canRemoveOthers)\n              }\n              key={`slot-${slot.id}`}\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: () => onDeletePress(slot),\n              }}\n            >\n              <DataTable.Row\n                testID=\"slot-row\"\n                style={\n                  isNumber(slot?.groupNumber)\n                    ? {\n                        borderLeftWidth: 5,\n                        borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                        paddingLeft: 4,\n                      }\n                    : undefined\n                }\n                disabled={!!load?.hasLanded}\n                onPress={() => {\n                  if (slot.dropzoneUser?.id === currentUser?.id) {\n                    if (canEditSelf) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  } else if (canEditOthers) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress(slotGroup);\n                    } else {\n                      onSlotPress(slot);\n                    }\n                  }\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell style={styles.avatarCell}>\n                  <UserAvatar\n                    size={20}\n                    name={\n                      slot?.dropzoneUser?.user?.nickname || slot?.dropzoneUser?.user?.name || ''\n                    }\n                    image={slot?.dropzoneUser?.user?.image}\n                    style={{ marginLeft: -12 }}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell style={styles.nameCell}>\n                  <Paragraph style={styles.slotText}>\n                    {slot?.dropzoneUser?.user?.nickname\n                      ? slot?.dropzoneUser?.user?.nickname\n                      : slot?.dropzoneUser?.user?.name}\n                  </Paragraph>\n\n                  {slot?.dropzoneUser?.user?.nickname ? (\n                    <Caption>{`(${slot?.dropzoneUser?.user?.name})`}</Caption>\n                  ) : null}\n                </DataTable.Cell>\n                {fields?.includes(SlotFields.License) ? (\n                  <DataTable.Cell numeric style={styles.licenseCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.dropzoneUser?.license?.name}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.Rig) ? (\n                  <DataTable.Cell numeric style={styles.rigCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.rig\n                        ? `${slot.rig.make} ${slot.rig.model} w/ ${slot.rig.canopySize}`\n                        : null}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.WingLoading) ? (\n                  <DataTable.Cell numeric style={styles.wingLoadingCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.wingLoading?.toFixed(2) || '-'}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.JumpType) ? (\n                  <DataTable.Cell numeric style={styles.jumpTypeCell}>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.TicketType) ? (\n                  <DataTable.Cell numeric style={styles.ticketCell}>\n                    <Paragraph style={styles.slotText}>{slot?.ticketType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.Altitude) ? (\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n              </DataTable.Row>\n\n              {slot?.ticketType?.isTandem && (\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  pointerEvents=\"none\"\n                  style={\n                    isNumber(slot?.groupNumber)\n                      ? {\n                          borderLeftWidth: 5,\n                          borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                          paddingLeft: 4,\n                        }\n                      : undefined\n                  }\n                >\n                  <DataTable.Cell style={styles.avatarCell}>\n                    <Avatar.Icon icon=\"parachute\" size={20} />\n                  </DataTable.Cell>\n                  <DataTable.Cell style={styles.tandemPassengerNameCell}>\n                    <Paragraph style={styles.slotText}>\n                      <Text style={{ fontWeight: 'bold' }}>Tandem Passenger:</Text>{' '}\n                      {slot?.passengerName}\n                    </Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n              )}\n            </SwipeActions>\n          </View>\n        )}\n      </DraggableWrapper>\n    </DroppableSlot>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  slotText: {\n    fontSize: 12,\n    alignSelf: 'center',\n    height: 24,\n    textAlignVertical: 'center',\n  },\n  avatarCell: {\n    flex: 1,\n  },\n  licenseCell: {\n    flex: 3,\n  },\n  rigCell: {\n    flex: 3,\n  },\n  wingLoadingCell: {\n    flex: 3,\n  },\n  jumpTypeCell: {\n    flex: 3,\n  },\n  altitudeCell: {\n    flex: 3,\n  },\n  nameCell: {\n    flex: 6,\n  },\n  tandemPassengerNameCell: {\n    flexGrow: 20,\n  },\n  tandemInfoCell: {\n    flex: 1,\n  },\n  ticketCell: {\n    flex: 3,\n  },\n});\n","import * as React from 'react';\nimport { useDraggable } from '@dnd-kit/core';\nimport { View } from 'react-native';\nimport { useManifestContext } from 'app/providers/manifest';\nimport type { ISlotUserRowProps } from '../UserRow';\n\ninterface IDraggableSlot {\n  rowProps: ISlotUserRowProps;\n  children(opts: { isDragging?: boolean }): JSX.Element;\n}\nexport default function DraggableRow(props: IDraggableSlot) {\n  const { children, rowProps } = props;\n  const {\n    manifest: { permissions },\n  } = useManifestContext();\n  const { setNodeRef, listeners, attributes, isDragging } = useDraggable({\n    id: rowProps.slot?.id,\n    disabled: !permissions.canUpdateSlot,\n    data: {\n      slotId: rowProps.slot?.id,\n      loadId: rowProps.load?.id,\n      props: rowProps,\n    },\n  });\n  return (\n    <div ref={setNodeRef} {...attributes} {...listeners} className=\"draggable-wrapper\">\n      <View pointerEvents=\"box-none\">{children?.({ isDragging })}</View>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nexport default function DroppableSlot(\n  props: React.PropsWithChildren<{ rowIndex: number; loadId: string; slotId?: string }>\n) {\n  const { rowIndex, loadId, slotId, children } = props;\n  const { setNodeRef, isOver, active } = useDroppable({\n    id: `load-${loadId}-row-${rowIndex}`,\n    data: {\n      slotId,\n      loadId,\n    },\n  });\n  const theme = useAppSelector((root) => root.global.theme);\n\n  const style: StyleProp<ViewStyle> = React.useMemo(\n    () => ({\n      backgroundColor:\n        isOver && active?.data?.current?.props?.load?.id !== loadId\n          ? theme.colors.primary\n          : undefined,\n      opacity: isOver ? 0.5 : undefined,\n    }),\n    [active?.data, isOver, loadId, theme.colors.primary]\n  );\n\n  return (\n    <div ref={setNodeRef} className=\"droppable-wrapper\">\n      <View {...{ style }}>{children}</View>\n    </div>\n  );\n}\n","import { hsl } from 'color';\n\nexport function generateColor() {\n  return hsl(360 * Math.random(), 25 + 70 * Math.random(), 85 + 10 * Math.random())\n    .rgb()\n    .toString();\n}\n","import * as React from 'react';\nimport { GROUP_COLORS } from 'app/components/slots_table/UserRow';\nimport { TouchableOpacity, View, StyleSheet } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { sortedUniq } from 'lodash';\n\ninterface IGroupPickerProps {\n  value?: number | null;\n  availableGroups: number[];\n  onChange(group: number | null): void;\n}\nexport default function GroupPicker(props: IGroupPickerProps) {\n  const { value, onChange, availableGroups } = props;\n  const createChangeHandler = React.useCallback(\n    (groupNumber: number | null) => () => onChange(groupNumber),\n    [onChange]\n  );\n  return (\n    <View style={styles.row}>\n      {sortedUniq(availableGroups)\n        .sort()\n        ?.map((groupNumber) => (\n          <TouchableOpacity onPress={createChangeHandler(groupNumber)}>\n            <Avatar.Text\n              label={`${groupNumber}`}\n              size={20}\n              style={[\n                value === groupNumber ? styles.selected : undefined,\n                { backgroundColor: GROUP_COLORS[groupNumber] },\n              ]}\n            />\n          </TouchableOpacity>\n        ))}\n      <TouchableOpacity onPress={createChangeHandler(null)}>\n        <Avatar.Icon\n          icon=\"plus\"\n          size={20}\n          style={[value === null ? styles.selected : undefined, { backgroundColor: '#FAFAFA' }]}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    padding: 16,\n    gap: 4,\n  },\n  selected: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { uniqBy } from 'lodash';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { JumpType, Permission, TicketType } from 'app/api/schema.d';\nimport { RigEssentialsFragment, TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\n\nimport UserRigCard from './UserRigCard';\nimport { SlotUserWithRig } from './slice';\nimport GroupPicker from './GroupPicker';\n\ninterface IUserCardProps {\n  slotUser: SlotUserWithRig;\n}\n\nfunction UserCard(props: IUserCardProps) {\n  const { slotUser } = props;\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const dispatch = useAppDispatch();\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  const onChangeExitWeight = React.useCallback(\n    (exitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onRemove = React.useCallback(\n    () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n        ])\n      ),\n    [dispatch, slotUser.id, state.fields.users.value]\n  );\n\n  const onChangeRig = React.useCallback(\n    (newRig: RigEssentialsFragment) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, rigId: Number(newRig.id), rig: newRig } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onChangePassengerName = React.useCallback(\n    (passengerName: string) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerName } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  const onChangePassengerWeight = React.useCallback(\n    (passengerExitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  return (\n    <UserRigCard\n      key={`user-rig-card-${slotUser.id}`}\n      dropzoneUserId={slotUser.id?.toString()}\n      selectedRig={slotUser.rig || undefined}\n      exitWeight={slotUser.exitWeight}\n      {...{\n        onChangeExitWeight,\n        onRemove,\n        onChangeRig,\n        onChangePassengerName,\n        onChangePassengerWeight,\n      }}\n      {...{ isTandem }}\n      passengerName={slotUser.passengerName}\n      passengerWeight={slotUser.passengerExitWeight}\n    />\n  );\n}\nexport default function ManifestGroupForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: state.fields.users?.value?.map(\n        (slotUser) => slotUser.id\n      ) as number[],\n      isPublic: canManifestOthers ? null : true,\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  const jumpTypes = React.useMemo(\n    () =>\n      uniqBy(\n        [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n        ({ id }) => id\n      ) || [],\n    [data]\n  );\n\n  const createToggleTicketAddonHandler = React.useCallback(\n    (extra: TicketTypeExtraEssentialsFragment) => () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'extras',\n          state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n            ? state?.fields?.extras.value?.filter(({ id }) => id !== extra.id)\n            : [...(state?.fields?.extras?.value || []), extra],\n        ])\n      ),\n    [dispatch, state?.fields?.extras.value]\n  );\n  return (\n    <>\n      <View style={{ paddingHorizontal: 8 }} key=\"manifest-group-config\">\n        <List.Subheader>Jump type</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={jumpTypes}\n          value={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n          renderItemLabel={(jumpType: JumpType) => jumpType.name}\n          isDisabled={(jumpType: JumpType) =>\n            !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n          }\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['jumpType', firstUser as JumpType]))\n          }\n        />\n\n        <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n          {state.fields.jumpType.error || ''}\n        </HelperText>\n\n        <List.Subheader>Ticket</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={data?.dropzone?.ticketTypes || []}\n          value={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n          renderItemLabel={(ticketType: TicketType) => ticketType.name}\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['ticketType', firstUser as TicketType]))\n          }\n        />\n        <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n          {state.fields.ticketType.error || ''}\n        </HelperText>\n        {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n          <List.Subheader>Ticket addons</List.Subheader>\n        )}\n        <ScrollView horizontal style={styles.ticketAddons}>\n          {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n            <Chip\n              key={`addon-${extra?.id}`}\n              selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n              onPress={createToggleTicketAddonHandler(extra as TicketTypeExtraEssentialsFragment)}\n            >\n              {`${extra.name} ($${extra.cost})`}\n            </Chip>\n          ))}\n        </ScrollView>\n        <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n          {state.fields.extras.error || ''}\n        </HelperText>\n      </View>\n\n      <Divider />\n\n      <View\n        style={{ paddingHorizontal: 0, paddingTop: 16, flexGrow: 1 }}\n        key=\"manifest-group-users\"\n      >\n        <List.Subheader style={styles.label}>\n          Group\n          <GroupPicker\n            value={state?.fields?.groupNumber?.value || null}\n            availableGroups={\n              state?.fields?.load?.value?.slots?.map(({ groupNumber }) => groupNumber) || []\n            }\n            onChange={(groupNumber) =>\n              dispatch(actions.forms.manifestGroup.setField(['groupNumber', groupNumber]))\n            }\n          />\n        </List.Subheader>\n        {state.fields?.users?.value?.map((slotUser) => (\n          <UserCard {...{ slotUser }} key={`manifest-${slotUser.id}`} />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  label: { justifyContent: 'space-between' },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { AppBar, Fade, LinearProgress, Toolbar } from '@mui/material';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useManifestGroupMutation, useDropzoneUserProfileLazyQuery } from 'app/api/reflection';\nimport DropzoneUserAutocomplete from 'app/components/autocomplete/DropzoneUserAutocomplete.web';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useManifestGroupMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate() || !state.fields.users.value?.length) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpType: state.fields.jumpType.value?.id,\n          ticketType: state.fields.ticketType.value?.id,\n          groupNumber: state.fields?.groupNumber?.value || null,\n          extras: state.fields.extras?.value?.map(({ id }) => id),\n          load: state.fields.load.value?.id,\n          userGroup: state.fields.users.value?.map(\n            ({ id, exitWeight, rigId, rig, passengerName, passengerExitWeight }) => ({\n              id,\n              rig: rigId?.toString() || rig?.id || undefined,\n              exitWeight,\n              passengerName,\n              passengerExitWeight,\n            })\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n          case 'jump_type_id':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        notify.error(result?.data?.createSlots?.errors[0]);\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onClose();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    validate,\n    state.fields.users.value,\n    state.fields.jumpType.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields?.groupNumber?.value,\n    state.fields.extras?.value,\n    state.fields.load.value?.id,\n    mutationCreateSlots,\n    dispatch,\n    notify,\n    onClose,\n  ]);\n\n  // dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n\n  const [fetchProfile, { loading }] = useDropzoneUserProfileLazyQuery();\n  const onSelectUser = React.useCallback(\n    (profile: DropzoneUserProfileFragment) => {\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([profile]));\n    },\n    [dispatch]\n  );\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      loading={mutationData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Manifest\"\n      onClose={() => {\n        dispatch(actions.forms.manifestGroup.reset());\n        onClose();\n      }}\n      buttonAction={onManifest}\n      scrollable={false}\n    >\n      <View style={styles.wrapper} testID=\"manifest-group-sheet\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <DropzoneUserAutocomplete\n              color=\"white\"\n              placeholder=\"Search skydivers...\"\n              onChange={(user) => {\n                fetchProfile({\n                  variables: {\n                    id: user.id,\n                  },\n                }).then((result) => {\n                  if (result.data?.dropzoneUser) {\n                    onSelectUser(result.data?.dropzoneUser);\n                  }\n                });\n              }}\n            />\n          </Toolbar>\n        </AppBar>\n        <Fade in={loading || mutationData.loading}>\n          <LinearProgress variant=\"indeterminate\" />\n        </Fade>\n        <ScrollView testID=\"scroll-area\">\n          <ManifestGroupForm />\n        </ScrollView>\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: { height: '100%' },\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n    paddingTop: 0,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: 'calc(100% - 200px)',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal, useTheme } from 'react-native-paper';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport { useDropzoneContext, useLoadContext, useManifestContext } from 'app/providers';\n\nimport { Permission, LoadState } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch } from 'app/state';\nimport isSameDay from 'date-fns/isSameDay';\nimport { parseISO } from 'date-fns';\n\ninterface ILoadActionButtonProps {\n  load: LoadDetailsFragment;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const { dialogs } = useManifestContext();\n  const {\n    dialogs: { timepicker },\n    load: { cancel, markAsLanded, updateLoadState, createAircraftDispatchAction },\n  } = useLoadContext();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const theme = useTheme();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const callActions = [\n    {\n      label: 'Custom call',\n      onPress: timepicker.open,\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '20 minute call',\n      onPress: createAircraftDispatchAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createAircraftDispatchAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createAircraftDispatchAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const isToday = isSameDay(new Date(), parseISO(load.createdAt));\n\n  const manifestActions = [\n    !showManifestButton || !isToday\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } }),\n        },\n    !showGroupIcon || !isToday\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createAircraftDispatchAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: cancel,\n        },\n    ![LoadState.Cancelled, LoadState.Landed].includes(load.state) || !isToday\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: markAsLanded,\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) && isToday ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n          backgroundColor: theme.colors.primary,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n}) as React.ComponentType<any>;\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { LoadEssentialsFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { format } from 'date-fns/esm';\nimport parseISO from 'date-fns/parseISO';\nimport { DateTime } from 'luxon';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: LoadEssentialsFragment;\n  children?: React.ReactNode;\n  renderBadges?: React.ComponentType<object>;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, renderBadges: RenderBadges, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          {load?.dispatchAt && DateTime.fromSeconds(load.dispatchAt) > DateTime.local() ? (\n            <Countdown\n              end={new Date(load.dispatchAt * 1000)}\n              variant={theme.dark ? 'light' : 'dark'}\n              size={80}\n            />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"account-tie-hat\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>\n            {load?.createdAt && format(parseISO(load.createdAt), 'dd LLLL, yyyy')}\n          </Paragraph>\n          {RenderBadges && width > 600 ? (\n            <RenderBadges />\n          ) : (\n            <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n          )}\n        </View>\n      </View>\n\n      {RenderBadges && width < 600 ? <RenderBadges /> : null}\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 8,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import React from 'react';\nimport { DataTable } from 'react-native-paper';\nimport { useLoadContext, useManifestContext } from 'app/providers';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DropzoneUserAutocomplete from '../autocomplete/DropzoneUserAutocomplete.web';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport interface IAvailableRowProps {\n  index: number;\n  onPress(): void;\n}\nexport default function AvailableRow(props: IAvailableRowProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { onPress, index } = props;\n  const {\n    load: { load },\n  } = useLoadContext();\n  const { dialogs } = useManifestContext();\n\n  const onSelectUser = React.useCallback(\n    (user: DropzoneUserEssentialsFragment) => {\n      if (load) {\n        dialogs.manifestUser.open({ load, slot: { dropzoneUser: user } });\n      }\n    },\n    [dialogs.manifestUser, load]\n  );\n\n  return (\n    <DroppableSlot loadId={load?.id?.toString() || '0'} rowIndex={index}>\n      <DataTable.Row testID=\"slot-row\" style={{ paddingTop: 8 }}>\n        <DropzoneUserAutocomplete\n          placeholder=\"- Available -\"\n          value={null}\n          onChange={onSelectUser}\n        />\n      </DataTable.Row>\n    </DroppableSlot>\n  );\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DataTable, Surface, Text } from 'react-native-paper';\nimport UserRow, { SlotFields, styles as rowStyles } from './UserRow';\nimport AvailableRow from './AvailableRow';\n\nexport interface ISlotsTableProps {\n  load?: LoadDetailsFragment | null;\n  loading?: boolean;\n  fields?: SlotFields[];\n  scrollable?: boolean;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onAvailableSlotPress(): void;\n}\nexport default function SlotsTable(props: ISlotsTableProps) {\n  const {\n    load,\n    fields,\n    onDeletePress,\n    scrollable = false,\n    onAvailableSlotPress,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n\n  console.log(fields);\n\n  return (\n    <Surface style={scrollable ? { height: '100%' } : undefined}>\n      <DataTable style={scrollable ? { height: '100%', paddingBottom: 80 } : undefined}>\n        <DataTable.Header style={{ width: '100%' }}>\n          <DataTable.Title style={rowStyles.avatarCell}>{null}</DataTable.Title>\n          <DataTable.Title style={rowStyles.nameCell}>\n            <Text style={styles.th}>Name</Text>\n          </DataTable.Title>\n          {fields?.includes(SlotFields.License) && (\n            <DataTable.Title numeric style={rowStyles.licenseCell}>\n              <Text style={styles.th}>License</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.Rig) && (\n            <DataTable.Title numeric style={rowStyles.rigCell}>\n              <Text style={styles.th}>Equipment</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.WingLoading) && (\n            <DataTable.Title numeric style={rowStyles.wingLoadingCell}>\n              <Text style={styles.th}>Wing Loading</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.JumpType) && (\n              <DataTable.Title numeric style={rowStyles.jumpTypeCell}>\n                <Text style={styles.th}>Jump type</Text>\n              </DataTable.Title>\n            ))}\n          {fields?.includes(SlotFields.TicketType) && (\n            <DataTable.Title numeric style={rowStyles.ticketCell}>\n              <Text style={styles.th}>Ticket</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.Altitude) && (\n              <DataTable.Title numeric style={rowStyles.altitudeCell}>\n                <Text style={styles.th}>Altitude</Text>\n              </DataTable.Title>\n            ))}\n        </DataTable.Header>\n        <FlatList\n          data={Array.from({ length: load?.maxSlots || 0 })?.map(\n            (_, index) => load?.slots?.[index] || null\n          )}\n          keyExtractor={(item, index) => item?.id || `available-${index}`}\n          renderItem={({ item: slot, index }) =>\n            !slot || !load ? (\n              <AvailableRow\n                {...{ onPress: onAvailableSlotPress }}\n                // eslint-disable-next-line react/no-array-index-key\n                key={`slot-available-${index}`}\n                index={index}\n              />\n            ) : (\n              <UserRow\n                {...{ fields, slot, load, onDeletePress, onSlotGroupPress, onSlotPress, index }}\n                key={`slot-${slot.id}`}\n              />\n            )\n          }\n        />\n      </DataTable>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  th: {\n    fontWeight: 'bold',\n  },\n});\n","import * as React from 'react';\nimport { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport LoadSlotTable, { ISlotsTableProps } from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useWindowDimensions } from 'react-native';\n\ninterface ITableViewProps extends Omit<ISlotsTableProps, 'load'> {\n  load?: LoadDetailsFragment | null;\n  loading: boolean;\n  refetch(): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n}\n\nexport default function LoadTableView(props: ITableViewProps) {\n  const { load, loading, onAvailableSlotPress, onDeletePress, onSlotGroupPress, onSlotPress } =\n    props;\n  const { width } = useWindowDimensions();\n  const numFields = Math.floor(width / 200);\n\n  console.log({ width, numFields, load });\n\n  return (\n    <LoadSlotTable\n      fields={\n        [\n          SlotFields.Altitude,\n          SlotFields.JumpType,\n          numFields > 2 ? SlotFields.License : null,\n          numFields > 3 ? SlotFields.TicketType : null,\n          numFields > 4 ? SlotFields.WingLoading : null,\n          numFields > 5 ? SlotFields.Rig : null,\n        ].filter(Boolean) as SlotFields[]\n      }\n      {...{\n        load,\n        loading,\n        onAvailableSlotPress,\n        onDeletePress,\n        onSlotGroupPress,\n        onSlotPress,\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { FlatList, Platform } from 'react-native';\n\nimport { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  LoadContextProvider,\n  useLoadContext,\n  useManifestContext,\n  useDropzoneContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport ManifestGroupSheet from 'app/components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Divider } from 'react-native-paper';\nimport { useNotifications } from 'app/providers/notifications';\nimport { Screen } from 'app/components/layout';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\n// import CardView from './views/CardView';\nimport TableView from './views/TableView';\n\nexport type LoadScreenRoute = {\n  LoadScreen: {\n    loadId: string;\n  };\n};\n/**\n *\n *\n * @returns\n */\nfunction LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const {\n    load: { load, loading, refetch, updateGCA, updateLoadMaster, updatePilot, updatePlane },\n  } = useLoadContext();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n  const maxSlots = load?.maxSlots || 0;\n  const occupiedSlots = load?.occupiedSlots || 0;\n  const notify = useNotifications();\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      const response = await deleteSlot({\n        id: Number(slot.id),\n      });\n\n      if ('error' in response && response.error) {\n        notify.error(\n          response?.error ||\n            `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n        );\n      } else if ('slot' in response && slot?.id) {\n        notify.error(\n          `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`\n        );\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const onSlotPress = React.useCallback(\n    (slot: SlotDetailsFragment) => {\n      const slotGroup = load?.slots?.filter(\n        ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n      );\n      const onSlotGroupPress = () => {\n        if (slotGroup && load) {\n          dispatch(actions.forms.manifestGroup.reset());\n          dispatch(actions.forms.manifestGroup.setOpen(true));\n          dispatch(\n            actions.forms.manifestGroup.setFromSlots({\n              slots: slotGroup?.length ? slotGroup : [slot],\n              load,\n            })\n          );\n          dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n          // FIXME: Open ManifestGroup Drawer\n        }\n      };\n      const onSlotSinglePress = () => {\n        dispatch(actions.forms.manifest.setOpen(slot));\n        dispatch(actions.forms.manifest.setField(['load', load]));\n      };\n\n      if ((canEditSelf && slot.dropzoneUser?.id === currentUser?.id) || canEditOthers) {\n        if (canEditSelf) {\n          if (slotGroup?.length || Platform.OS === 'web') {\n            onSlotGroupPress();\n          } else {\n            onSlotSinglePress();\n          }\n        }\n      }\n    },\n    [canEditOthers, canEditSelf, currentUser?.id, dispatch, load]\n  );\n\n  const onSlotGroupPress = React.useCallback(\n    (slotGroup: SlotDetailsFragment[]) => {\n      if (load) {\n        dispatch(actions.forms.manifestGroup.reset());\n        dispatch(actions.forms.manifestGroup.setOpen(true));\n        dispatch(\n          actions.forms.manifestGroup.setFromSlots({\n            slots: slotGroup,\n            load,\n          })\n        );\n        dispatch(actions.forms.manifestGroup.setField(['load', load]));\n      }\n    },\n    [dispatch, load]\n  );\n\n  const onAvailableSlotPress = React.useCallback(() => {\n    dispatch(actions.forms.manifestGroup.reset());\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n    if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n      // Automatically add current user to selection\n      dispatch(actions.screens.manifest.setSelected([currentUser]));\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n    }\n\n    dispatch(actions.forms.manifestGroup.setOpen(true));\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n  }, [canManifestGroup, canManifestGroupWithSelfOnly, currentUser, dispatch, load]);\n\n  return (\n    <Screen fullWidth scrollable={Platform.OS !== 'web'}>\n      <Header\n        load={load || undefined}\n        renderBadges={() => (\n          <FlatList\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            style={{ marginVertical: 8 }}\n            data={['plane', 'pilot', 'gca', 'loadMaster']}\n            keyExtractor={(item) => item.toString()}\n            renderItem={({ item }) => {\n              switch (item) {\n                case 'plane':\n                  return (\n                    <PlaneChip\n                      value={load?.plane}\n                      onSelect={async (plane) => {\n                        if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                          const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                          notify.info(\n                            `You need to take ${diff} people off the load to fit on this plane`\n                          );\n                        } else {\n                          await updatePlane(plane);\n                          refetch();\n                        }\n                      }}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'gca':\n                  return (\n                    <GCAChip\n                      value={load?.gca}\n                      onSelect={updateGCA}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'pilot':\n                  return (\n                    <PilotChip\n                      value={load?.pilot}\n                      onSelect={updatePilot}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                default:\n                  return (\n                    <LoadMasterChip\n                      value={load?.loadMaster}\n                      slots={load?.slots || []}\n                      onSelect={updateLoadMaster}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n              }\n            }}\n          />\n        )}\n      >\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state || LoadState.Open],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      {/* <CardView {...{ load, loading, refetch, onSlotPress, onDeletePress: onDeleteSlot }} /> */}\n      <Divider />\n      <TableView\n        scrollable={Platform.OS === 'web'}\n        {...{\n          slots: load?.slots?.filter(Boolean) || [],\n          load,\n          loading,\n          refetch,\n          onSlotPress,\n          onDeletePress: onDeleteSlot,\n          onSlotGroupPress,\n          onAvailableSlotPress,\n        }}\n      />\n      {load && isFocused ? <ActionButton load={load} /> : null}\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </Screen>\n  );\n}\n\nexport default function LoadScreenWrapper() {\n  const route = useRoute<RouteProp<LoadScreenRoute>>();\n  const loadId = route?.params?.loadId;\n\n  return (\n    <LoadContextProvider id={loadId}>\n      <LoadScreen />\n    </LoadContextProvider>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  const value = React.useMemo(\n    () => ({\n      index,\n      count,\n      setIndex: (idx: number) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref.current?.scrollToIndex({ index: idx, animated: true });\n      },\n    }),\n    [count, index]\n  );\n\n  return (\n    <WizardContext.Provider value={value}>\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema.d';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema.d';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"height\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds as Required<typeof winds>}\n        keyExtractor={(item, index) => `wind.${item.altitude}.${index}`}\n        scrollEnabled={false}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from 'app/components/wizard/Wizard';\nimport WizardCompleteStep from 'app/components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useNotifications } from 'app/providers/notifications';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n  ]);\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport function useAuthenticatedNavigation() {\n  return useNavigation<NavigationProp<AuthenticatedRoutes>>();\n}\n","import * as React from 'react';\nimport { Button, HelperText } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useAuthenticatedNavigation } from '../../useAuthenticatedNavigation';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useAuthenticatedNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() =>\n          navigation.navigate('Manifest', {\n            screen: 'JumpRunScreen',\n          })\n        }\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"outlined\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload Conditions\n        </Button>\n        <HelperText type=\"info\">\n          Winds aloft and temperature are retrieved from MarkSchulze.net's amazing Winds Aloft\n          service.\n        </HelperText>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 0,\n  },\n});\n","import { DragOverlay } from '@dnd-kit/core';\nimport * as React from 'react';\nimport UserRow from '../UserRow';\nimport type { ISlotUserRowProps } from '../UserRow';\n\nexport default function DraggingRow(props: { item?: ISlotUserRowProps }) {\n  const { item } = props;\n  return <DragOverlay>{item ? <UserRow {...item} /> : null}</DragOverlay>;\n}\n","import * as React from 'react';\nimport { DndContext, DragEndEvent, DragStartEvent } from '@dnd-kit/core';\nimport UserRowDragOverlay from 'app/components/slots_table/DragAndDrop/DraggingRow';\nimport type { ISlotUserRowProps } from 'app/components/slots_table/UserRow';\nimport { useManifestContext } from 'app/providers/manifest';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DragDropWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [draggedItem, setDraggedItem] = React.useState<ISlotUserRowProps>();\n  const {\n    manifest: { moveSlot },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const onDragEnd = React.useCallback(\n    async (event: DragEndEvent) => {\n      const targetLoad = event.over?.data?.current?.loadId;\n      const sourceLoad = event.active.data.current?.loadId;\n      const sourceSlot = event?.active?.data?.current?.slotId;\n      const targetSlot = event?.over?.data?.current?.slotId;\n\n      console.debug(`Moving Slot ${sourceSlot} from Load ${sourceLoad} to Load ${targetLoad}`, {\n        targetLoad,\n        sourceLoad,\n        sourceSlot,\n      });\n\n      if (sourceLoad !== targetLoad) {\n        const response = await moveSlot(sourceLoad, {\n          targetLoad: Number(targetLoad),\n          sourceSlot: Number(sourceSlot),\n          targetSlot: targetSlot ? Number(targetSlot) : undefined,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        }\n      }\n    },\n    [moveSlot, notify]\n  );\n  return (\n    <DndContext\n      onDragStart={(event: DragStartEvent) => {\n        console.debug('Drag start', event, event?.active?.data?.current?.props);\n        setDraggedItem(event?.active?.data?.current?.props);\n      }}\n      onDragEnd={onDragEnd}\n    >\n      {children}\n      <UserRowDragOverlay item={draggedItem} />\n    </DndContext>\n  );\n}\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: 335, height: 160, borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport { useLoadContext, withLoadContext } from 'app/providers/load';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  onPress(): void;\n}\n\nfunction LoadCard(props: ILoadCardSmall) {\n  const { onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const {\n    load: { load, loading, updatePlane, updatePilot },\n  } = useLoadContext();\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 8,\n        minWidth: 300,\n        maxWidth: 450,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber || '?'}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <ScrollView\n          style={{\n            flexDirection: 'row',\n            flexWrap: 'nowrap',\n            backgroundColor: 'transparent',\n            width: '100%',\n          }}\n          horizontal\n        >\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              await updatePlane(plane);\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12, marginTop: 0 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    maxWidth: 450,\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Platform, ScrollView } from 'react-native';\nimport { Button, Card, IconButton, Paragraph, ProgressBar, Text } from 'react-native-paper';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  useDropzoneContext,\n  useLoadContext,\n  useManifestContext,\n  withLoadContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport LoadSlotTable from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useNotifications } from 'app/providers/notifications';\nimport LoadingCard from './Loading';\n\ninterface ILoadCardLarge {\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onManifest(): void;\n}\n\nfunction LoadCard(props: ILoadCardLarge) {\n  const { onManifest, onManifestGroup, controlsVisible, onSlotGroupPress, onSlotPress } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const [deletingSlot, setDeletingSlot] = React.useState(false);\n  const notify = useNotifications();\n\n  const {\n    load: {\n      load,\n      loading,\n      refetch,\n      update,\n      updateGCA,\n      updatePlane,\n      updatePilot,\n      dispatchInMinutes,\n      updateLoadMaster,\n      markAsLanded,\n    },\n  } = useLoadContext();\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      try {\n        setDeletingSlot(true);\n\n        const response = await deleteSlot({\n          id: Number(slot.id),\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(\n            response?.error ||\n              `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n          );\n        } else if ('slot' in response && slot?.id) {\n          notify.error(\n            `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n              load?.loadNumber\n            }`\n          );\n        }\n      } finally {\n        setDeletingSlot(false);\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const navigation = useAuthenticatedNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text testID=\"title\">{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || update.loading || deletingSlot}\n        color={state.theme.colors.primary}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          paddingHorizontal: 0,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View\n          style={{ flexDirection: 'row', paddingHorizontal: 8, backgroundColor: 'transparent' }}\n        >\n          <ScrollView\n            style={{ height: 32 }}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              small\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  notify.info(`You need to take ${diff} people off the load to fit on this plane`);\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip small value={load?.gca} onSelect={updateGCA} />\n            <PilotChip small value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              small\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <LoadSlotTable\n          scrollable={Platform.OS === 'web'}\n          {...{ load, loading, onSlotPress, onSlotGroupPress }}\n          onDeletePress={onDeleteSlot}\n          onAvailableSlotPress={() =>\n            load?.id &&\n            navigation.navigate('Manifest', {\n              screen: 'LoadScreen',\n              params: { loadId: load?.id },\n            })\n          }\n          onSlotPress={onSlotPress}\n          fields={[SlotFields.JumpType].filter(Boolean) as SlotFields[]}\n        />\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button\n              mode=\"outlined\"\n              onPress={() => dispatchInMinutes(null)}\n              testID=\"dispatch-cancel\"\n            >\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              setOpen={setDispatchOpen}\n              open={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <MenuItem\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return notify.info(\n                    'You must select a load master before this load can be finalized'\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return notify.info('You must select a pilot before this load can be finalized');\n                }\n                return markAsLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from 'app/utils/calculateCoordinatesByAngle';\nimport Map from 'app/components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.x,\n    y: origin.y,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: rootLayout.height / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons\n            name=\"airplane\"\n            size={20}\n            color=\"#ffffff\"\n            style={styles.planeIcon}\n          />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  planeIcon: { transform: [{ rotate: '-45deg' }] },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport parseISO from 'date-fns/parseISO';\nimport nightBackground from '../../../../../../assets/images/night.png';\nimport weatherBackground from '../../../../../../assets/images/weather.png';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const {\n    dropzone: { dropzone, loading, called },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? parseISO(dropzone.currentConditions.createdAt)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  const onEditWindboard = React.useCallback(() => {\n    if (canUpdate && dropzone?.currentConditions) {\n      dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'WindScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const onEditJumprun = React.useCallback(() => {\n    if (dropzone?.currentConditions && canUpdate) {\n      dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'JumpRunScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const defaultBackground = theme.dark ? nightBackground : weatherBackground;\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        marginBottom: 8,\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={onEditWindboard}\n      >\n        <ImageBackground\n          source={defaultBackground}\n          style={{ ...StyleSheet.absoluteFillObject, opacity: 0.75 }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        height: height.current.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [100, 210],\n                        }),\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, 10],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'left' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onLongPress={onEditJumprun}\n                      onPress={onEditWindboard}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    height: 200,\n    width: '100%',\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    flexGrow: 3,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: 'rgba(50, 50,50, 0.5)',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  jumpRun: {\n    width: 94,\n    height: 94,\n    marginBottom: 24,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\nimport * as React from 'react';\nimport { Card, List } from 'react-native-paper';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\n\nexport default function SetupProfileCard() {\n  const openWizard = useProfileWizard();\n  const onPress = React.useCallback(() => openWizard(), [openWizard]);\n\n  return (\n    <Card style={styles.card} {...{ onPress }}>\n      <Card.Content style={styles.content}>\n        <List.Item\n          title=\"Complete your profile\"\n          description=\"Let this dropzone know who you are\"\n          titleStyle={{ marginBottom: 4 }}\n          left={() => (\n            <LottieView\n              style={{ height: 80, width: 80 }}\n              autoPlay\n              loop={false}\n              // eslint-disable-next-line global-require\n              source={require('../../../../../assets/images/profile2.json')}\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"chevron-right\" style={styles.icon} />}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { StyleSheet } from 'react-native';\nimport * as React from 'react';\nimport { Avatar, Card, List } from 'react-native-paper';\n\ninterface ISetupStepCard {\n  completed?: boolean;\n  index?: number;\n  title: string;\n  description?: string;\n  onPress(): void;\n}\n\nexport function SetupStepCard(props: ISetupStepCard) {\n  const { completed, index, title, description, onPress } = props;\n  return (\n    <Card\n      style={StyleSheet.flatten([styles.card, { opacity: completed ? 0.7 : 1 }])}\n      {...{ onPress }}\n      pointerEvents={completed ? 'none' : undefined}\n    >\n      <Card.Content style={styles.content}>\n        <List.Item\n          {...{ title, description }}\n          titleStyle={{ marginBottom: 4 }}\n          left={() =>\n            completed ? <Avatar.Icon icon=\"check\" /> : <Avatar.Text label={`${index}`} />\n          }\n          right={(rightProps) => (\n            <List.Icon {...rightProps} icon=\"chevron-right\" style={styles.icon} />\n          )}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8, marginVertical: 16 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  RefreshControl,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, ProgressBar, useTheme } from 'react-native-paper';\n\nimport NoResults from 'app/components/NoResults';\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { useAircrafts, useTickets } from 'app/api/crud';\nimport useRestriction from 'app/hooks/useRestriction';\nimport DragDropWrapper from '../../../../components/slots_table/DragAndDrop/DragDropSlotProvider';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\nimport SetupProfileCard from './SetupProfileCard';\nimport { SetupStepCard } from './FinishSetupSteps';\n\nconst loadingFragment: LoadDetailsFragment = {\n  id: '__LOADING__',\n  availableSlots: 0,\n  createdAt: '',\n  isFull: false,\n  isOpen: false,\n  loadNumber: 0,\n  maxSlots: 0,\n  occupiedSlots: 0,\n  plane: {\n    id: '__LOADING__',\n    maxSlots: 0,\n  },\n  state: LoadState.Open,\n  weight: 0,\n};\n\nconst setupProfileCardFragment = { ...loadingFragment, id: '__SETUP_PROFILE_CARD__' };\nconst setupAircraftsCardFragment = { ...loadingFragment, id: '__SETUP_AIRCRAFT_CARD__' };\nconst setupTicketsCardFragment = { ...loadingFragment, id: '__SETUP_TICKETS_CARD__' };\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const {\n    dropzone: { dropzone, currentUser, loading, refetch, fetchMore },\n    dialogs: sheets,\n  } = useDropzoneContext();\n  const { manifest, dialogs } = useManifestContext();\n  const { aircrafts, loading: loadingAircrafts } = useAircrafts({ dropzoneId: dropzone?.id });\n  const { ticketTypes, loading: loadingTickets } = useTickets({ dropzone: dropzone?.id });\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      // dispatch(actions.global.setAccentColor(dropzone.secondaryColor));\n      console.log('Accent color disabled');\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const initialLoading = !dropzone || (!manifest?.loads?.length && manifest?.loading);\n\n  const theme = useTheme();\n\n  const data = React.useMemo(\n    () =>\n      [\n        !loadingAircrafts &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupAircraftsCardFragment,\n        !loadingTickets &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupTicketsCardFragment,\n        !initialLoading &&\n        (!currentUser?.hasExitWeight || !currentUser?.hasLicense || !currentUser.user?.name)\n          ? setupProfileCardFragment\n          : null,\n        ...(initialLoading ? new Array(5).fill(loadingFragment) : manifest.loads),\n      ].filter(Boolean),\n    [\n      loadingAircrafts,\n      ticketTypes?.length,\n      aircrafts?.length,\n      canUpdateDropzone,\n      loadingTickets,\n      initialLoading,\n      currentUser?.hasExitWeight,\n      currentUser?.hasLicense,\n      currentUser?.user?.name,\n      manifest.loads,\n    ]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: load, index }: { item: LoadDetailsFragment; index: number }) => {\n      // 1 means loading, because null and undefined\n      // get filtered out\n      if (load.id === '__LOADING__') {\n        return manifestScreen.display === 'list' ? (\n          <LoadingCardLarge key={`loading-card-${index}`} />\n        ) : (\n          <LoadingCardSmall key={`loading-card-${index}`} />\n        );\n      }\n\n      if (load.id === '__SETUP_PROFILE_CARD__') {\n        return <SetupProfileCard />;\n      }\n\n      if (load.id === '__SETUP_AIRCRAFT_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Add an aircraft\"\n            completed={!!aircrafts?.length}\n            onPress={sheets.aircraft.open}\n            index={1}\n          />\n        );\n      }\n\n      if (load.id === '__SETUP_TICKETS_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Create a ticket\"\n            completed={!!ticketTypes?.length}\n            onPress={sheets.ticketType.open}\n            index={2}\n          />\n        );\n      }\n      return manifestScreen.display === 'list' ? (\n        <LoadCardLarge\n          controlsVisible={false}\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onSlotPress={(slot) => {\n            if (load) {\n              dialogs.manifestUser.open({\n                load,\n                slot: { ...(slot || {}), dropzoneUser: slot ? slot?.dropzoneUser : currentUser },\n              });\n            }\n          }}\n          onSlotGroupPress={(slots) => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setFromSlots({ load, slots }));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n            // FIXME: Open manifest group drawer\n          }}\n          onManifest={() => {\n            dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } });\n          }}\n          onManifestGroup={() => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          }}\n        />\n      ) : (\n        <LoadCardSmall\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'LoadScreen',\n                  params: { loadId: load?.id },\n                },\n              },\n            })\n          }\n        />\n      );\n    },\n    [\n      manifestScreen.display,\n      aircrafts?.length,\n      sheets.aircraft.open,\n      sheets.ticketType.open,\n      ticketTypes?.length,\n      dialogs.manifestUser,\n      currentUser,\n      dispatch,\n      navigation,\n    ]\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <ProgressBar\n        visible={loading || manifest.loading}\n        indeterminate\n        color={state.theme.colors.primary}\n      />\n\n      <View style={styles.container}>\n        <View\n          style={{\n            width: '100%',\n            flex: 1,\n            height: Dimensions.get('window').height,\n            backgroundColor: theme.colors.background,\n          }}\n        >\n          {dropzone?.banner && (\n            <ImageBackground\n              source={{ uri: dropzone.banner }}\n              style={{ position: 'absolute', top: -8, left: 0, width: '100%', height: 340 }}\n              resizeMode=\"cover\"\n            />\n          )}\n          <DragDropWrapper>\n            <FlatList<LoadDetailsFragment>\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults\n                  style={{ marginTop: 156 }}\n                  title=\"No loads so far today\"\n                  subtitle=\"How's the weather?\"\n                />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n              }}\n              testID=\"loads\"\n              keyExtractor={(item, idx) => `load-small-${item?.id || idx}-${idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n              }}\n              numColumns={numColumns}\n              {...{ data, renderItem }}\n              refreshControl={<RefreshControl refreshing={loading} onRefresh={() => fetchMore()} />}\n            />\n          </DragDropWrapper>\n        </View>\n        {manifest.permissions.canCreateLoad && (\n          <FAB\n            style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n            small\n            icon=\"plus\"\n            onPress={() => dialogs.load.open({})}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          open={isDisplayOptionsOpen}\n          setOpen={setDisplayOptionsOpen}\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n        >\n          <MenuItem\n            title=\"Show expanded cards\"\n            bold={manifestScreen.display !== 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <MenuItem\n            title=\"Show compact cards\"\n            bold={manifestScreen.display === 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import * as React from 'react';\nimport { Divider, List, Switch, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneState, DropzoneStateEvent, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const { updateVisibility } = useDropzonesContext();\n  const onChangeVisibility = React.useCallback(\n    async (event: DropzoneStateEvent) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, event);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [dropzone?.id, notify, updateVisibility]\n  );\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.surface }}>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n            onPress={() =>\n              !dropzone\n                ? null\n                : navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'Configuration',\n                        params: {\n                          screen: 'DropzoneSettingsScreen',\n                          params: {\n                            dropzone,\n                          },\n                        },\n                      },\n                    },\n                  })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n\n        <Divider />\n        <List.Item\n          title=\"Permissions\"\n          description=\"Grant or revoke access to define who can do what at this dropzone\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'PermissionScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Aircrafts\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'AircraftsScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'DropzoneRigsScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'RigInspectionTemplateScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        {!canUpdateDropzone ? null : (\n          <>\n            <Divider />\n            <List.Item\n              title=\"Master Log\"\n              left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n              right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n              description=\"View historic data for daily operations. Temporarily disabled\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'MasterLogScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          </>\n        )}\n        <Divider />\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title={\n              {\n                [DropzoneState.Archived]: 'Re-open dropzone',\n                [DropzoneState.Public]: 'Go offline',\n                [DropzoneState.Private]: 'Go live',\n                [DropzoneState.InReview]: 'Awaiting review',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            left={() => (\n              <List.Icon\n                color={theme.colors.text}\n                icon={\n                  {\n                    [DropzoneState.Archived]: 'archive',\n                    [DropzoneState.Public]: 'check',\n                    [DropzoneState.Private]: 'upload',\n                    [DropzoneState.InReview]: 'progress-upload',\n                  }[dropzone?.status || DropzoneState.Private] as IconSource\n                }\n              />\n            )}\n            right={() => (\n              <Switch\n                value={[DropzoneState.Public, DropzoneState.InReview].includes(\n                  dropzone?.status || DropzoneState.Private\n                )}\n                disabled={dropzone?.status === DropzoneState.InReview}\n                onValueChange={(value) => {\n                  onChangeVisibility(\n                    value ? DropzoneStateEvent.RequestPublication : DropzoneStateEvent.Unpublish\n                  );\n                }}\n              />\n            )}\n            onPress={() => {\n              switch (dropzone?.status) {\n                case DropzoneState.Archived:\n                  return onChangeVisibility(DropzoneStateEvent.Publish);\n                case DropzoneState.Private:\n                  return onChangeVisibility(DropzoneStateEvent.RequestPublication);\n                case DropzoneState.Public:\n                case DropzoneState.InReview:\n                  return onChangeVisibility(DropzoneStateEvent.Unpublish);\n                default:\n                  return null;\n              }\n            }}\n            description={\n              {\n                [DropzoneState.Archived]:\n                  'Your dropzone has been archived and is not visible to users',\n                [DropzoneState.Public]: 'Your dropzone is available to the public',\n                [DropzoneState.Private]:\n                  'Request a review to make your dropzone available to all users',\n                [DropzoneState.InReview]:\n                  'You may be contacted to verify the legitimacy of your dropzone.',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            descriptionNumberOfLines={4}\n          />\n        )}\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          title=\"Ticket types\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'TicketTypesScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <Divider />\n        <List.Item\n          title=\"Ticket add-ons\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'ExtrasScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useTickets } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n  const { ticketTypes, loading, refetch, archiveTicketType, updateTicketType } = useTickets({\n    dropzone: dropzone?.id,\n  });\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n\n  const createArchiveTicketHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ArchiveTicketType() {\n        const response = await archiveTicketType(ticket);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived ${ticket.name}`);\n        }\n      };\n    },\n    [archiveTicketType, notify]\n  );\n\n  const createToggleManifestSelfHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ToggleManifestSelf() {\n        const response = await updateTicketType(Number(ticket.id), {\n          allowManifestingSelf: !ticket.allowManifestingSelf,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`${ticket.name} can ${ticket.allowManifestingSelf ? 'no longer' : 'now'}`);\n        }\n      };\n    },\n    [notify, updateTicketType]\n  );\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {ticketTypes?.map((ticketType) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: createArchiveTicketHandler(ticketType),\n              }}\n            >\n              <DataTable.Row\n                onPress={() => {\n                  dialogs.ticketType.open({ original: ticketType });\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n                <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n                <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n                <DataTable.Cell numeric>\n                  <View pointerEvents=\"box-none\">\n                    <Switch\n                      onValueChange={createToggleManifestSelfHandler(ticketType)}\n                      value={!!ticketType.allowManifestingSelf}\n                    />\n                  </View>\n                </DataTable.Cell>\n              </DataTable.Row>\n            </SwipeActions>\n          </View>\n        ))}\n      </DataTable>\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: state.theme.colors.primary }]}\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dialogs.ticketType.open()}\n        label=\"New ticket type\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value, onChange } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value?.lng === null || value?.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value?.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","/* eslint-disable max-len */\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TextInput,\n  HelperText,\n  Card,\n  List,\n  Checkbox,\n  useTheme,\n  TouchableRipple,\n  Avatar,\n  Title,\n} from 'react-native-paper';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport LottieView from 'app/components/LottieView';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useNavigation } from '@react-navigation/core';\nimport ColorPicker from '../../input/colorpicker';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport imagePickDark from '../../../../assets/images/image-pick.json';\nimport imagePickLight from '../../../../assets/images/image-pick-light.json';\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useFederationsQuery();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n      if (base64) {\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    navigation.setOptions({ title: state.fields.name.value });\n  }, [navigation, state.fields.name.value]);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={[styles.skeletonCard, { marginTop: 0, paddingHorizontal: 0 }]}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card\n          style={[\n            styles.card,\n            {\n              paddingLeft: 0,\n              paddingRight: 0,\n              paddingHorizontal: 0,\n              marginLeft: 0,\n              width: '100%',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          ]}\n        >\n          <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n            <TouchableRipple onPress={onPickImage} style={{ width: 185 }}>\n              {!state?.fields?.banner?.value ? (\n                <LottieView\n                  style={{ height: 175, width: 175 }}\n                  autoPlay\n                  loop={false}\n                  // eslint-disable-next-line global-require\n                  source={theme.dark ? imagePickLight : imagePickDark}\n                />\n              ) : (\n                <Avatar.Image\n                  size={175}\n                  source={{ uri: state?.fields?.banner?.value }}\n                  style={{\n                    borderWidth: StyleSheet.hairlineWidth,\n                    backgroundColor: theme.colors.primary,\n                  }}\n                />\n              )}\n            </TouchableRipple>\n            <Title>{state.fields.name.value}</Title>\n            <HelperText type=\"info\" style={{ marginTop: 16 }}>\n              Your banner is displayed on the weather board and on the dropzone selection screen\n            </HelperText>\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onChange={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n            <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n    paddingHorizontal: 24,\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { Permission } from 'app/api/schema.d';\nimport DropzoneForm from 'app/components/forms/dropzone/DropzoneForm';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n\n  const {\n    dropzone: { dropzone, loading },\n  } = useDropzoneContext();\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(dropzone));\n    }\n  }, [dropzone, dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) => notify.error(message),\n    onSuccess: (payload) => {\n      if (payload?.dropzone?.id) {\n        dispatch(\n          actions.global.setDropzone({\n            ...(globalState.currentDropzone || {}),\n            ...payload?.dropzone,\n          })\n        );\n        notify.success(`Your settings have been saved`);\n        navigation.goBack();\n      }\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federation: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    }\n    return null;\n  }, [state.fields, dispatch, mutationUpdateDropzone, dropzone?.id, notify]);\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const isDirty: boolean = React.useMemo(() => {\n    return ['banner', 'isCreditSystemEnabled', 'name', 'primaryColor', 'lat', 'lng'].some(\n      (field) =>\n        state.original &&\n        field in state.original &&\n        state.original[field as keyof DropzoneEssentialsFragment] !==\n          state.fields[field as keyof typeof state.fields].value\n    );\n  }, [state]);\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Screen fullWidth={false}>\n        <DropzoneForm loading={loading} />\n      </Screen>\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={Boolean(canUpdateDropzone && isDirty)}\n        disabled={!isDirty || mutationUpdateDropzone.loading}\n        small\n        icon=\"check\"\n        onPress={onSave}\n        label=\"Save\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    marginTop: 0,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport { useAircrafts } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const { dialogs } = useDropzoneContext();\n  const { aircrafts, archive, loading, refetch } = useAircrafts({\n    dropzoneId: global.currentDropzoneId?.toString() as string,\n  });\n\n  const notify = useNotifications();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n  const theme = useTheme();\n\n  const createArchiveAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return async function ArchiveAircraftHandler() {\n        const response = await archive(aircraft);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived aircraft ${aircraft.name}`);\n        }\n      };\n    },\n    [archive, notify]\n  );\n\n  const createEditAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return function ArchiveAircraftHandler() {\n        dialogs.aircraft.open({ original: aircraft });\n      };\n    },\n    [dialogs.aircraft]\n  );\n  return (\n    <ScrollableScreen\n      contentContainerStyle={{ backgroundColor: theme.colors.surface }}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={global.theme.colors.primary} />\n\n      {aircrafts?.length ? null : (\n        <NoResults\n          title=\"No planes?\"\n          subtitle=\"You need to have at least one plane to manifest loads\"\n        />\n      )}\n\n      {!aircrafts?.length ? null : (\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Registration</DataTable.Title>\n            <DataTable.Title numeric>Slots</DataTable.Title>\n          </DataTable.Header>\n          {aircrafts?.map((plane) => (\n            <View style={{ height: 46 }}>\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: createArchiveAircraftHandler(plane),\n                }}\n              >\n                <DataTable.Row pointerEvents=\"none\" onPress={createEditAircraftHandler(plane)}>\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            </View>\n          ))}\n        </DataTable>\n      )}\n\n      <FAB\n        style={[styles.fab, { backgroundColor: global.theme.colors.primary }]}\n        visible={canCreatePlane}\n        small\n        icon=\"plus\"\n        onPress={dialogs.aircraft.open}\n        label=\"New plane\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n  useTheme,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"minus-circle\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n            backgroundColor: theme.colors.primary,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport {\n  useRigInspectionTemplateQuery,\n  useUpdateRigInspectionTemplateMutation,\n} from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from 'app/components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { FormTemplate, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useWindowDimensions, View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const { data } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useUpdateRigInspectionTemplateMutation();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(\n        actions.forms.rigInspectionTemplate.setOpen(\n          data.dropzone.rigInspectionTemplate as FormTemplate\n        )\n      );\n    }\n  }, [data?.dropzone?.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone?.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      notify.success('Template saved');\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone?.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    notify,\n  ]);\n\n  const { width } = useWindowDimensions();\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <ScrollableScreen style={{ marginTop: 16, width: width > 550 ? 550 : '100%' }}>\n        <Card style={{ width: '100%' }}>\n          <Card.Title title=\"Rig Inspection Form Template\" />\n\n          <Card.Content>\n            <RigInspectionTemplateForm />\n          </Card.Content>\n        </Card>\n        <Button\n          disabled={!canEdit}\n          mode=\"contained\"\n          loading={mutation.loading}\n          onPress={() => updateForm()}\n          style={{ width: '100%', marginTop: 16, borderRadius: 20 }}\n        >\n          Save template\n        </Button>\n      </ScrollableScreen>\n    </View>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport {\n  AvailableRigsDocument,\n  DropzoneUsersDetailedDocument,\n  useDropzoneRigsQuery,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n  const { data, loading, refetch } = useDropzoneRigsQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useUpdateRigMutation();\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                    refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    notify.error(result?.updateRig.errors[0]);\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, List, useTheme } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useRolesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const theme = useTheme();\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useRolesQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const isFocused = useIsFocused();\n\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({ title: 'Permissions' });\n      refetch();\n    }\n  }, [isFocused, navigation, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <View style={{ height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ maxWidth: 550 }}>\n        <SkeletonContent\n          isLoading\n          containerStyle={{\n            width: '100%',\n            flex: 1,\n            flexGrow: 1,\n            paddingHorizontal: 16,\n          }}\n          layout={[\n            {\n              key: 'first',\n              height: 175,\n              marginTop: 70,\n              marginBottom: 35,\n              width: '100%',\n            },\n            { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n          ]}\n        />\n      </View>\n    </View>\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Manifesting\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDoubleSlot\"\n                    description=\"Manifest on more than one load at a time\"\n                    title=\"Double Manifest\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket types\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket addons\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { MasterLogInput } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUpdateMasterLogMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers';\nimport { MasterLogEntryFragment, MasterLogUserFragment } from 'app/api/operations';\nimport { isEqual } from 'lodash';\n\nexport type MasterLogFields = Omit<MasterLogInput, 'dzso'> & {\n  date: string | null;\n  dzso: MasterLogUserFragment | null;\n};\n\nexport const masterLogValidation = yup.object({\n  date: yup.string(),\n  notes: yup.string().nullable().default(null),\n  dzso: yup.object().required('You must select a DZSO'),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<MasterLogFields> = {\n  dzso: null,\n  date: null,\n  notes: '',\n};\n\nexport interface IUseMasterLogFormOpts {\n  initial?: Partial<MasterLogFields>;\n  onSuccess?(entry: MasterLogEntryFragment): void;\n}\n\nexport default function useMasterLogForm(opts: IUseMasterLogFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(\n    () => ({ ...EMPTY_FORM_VALUES, ...initial, notes: initial?.notes || '' }),\n    [initial]\n  );\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n  const notify = useNotifications();\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const methods = useForm<MasterLogFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(masterLogValidation),\n  });\n\n  const { handleSubmit, reset, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [updateMasterLog] = useUpdateMasterLogMutation();\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [reset, defaultValues]);\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: MasterLogFields) => {\n      try {\n        const validatedFields = masterLogValidation.validateSync(fields);\n        console.debug({ validatedFields, dropzone });\n        if (!dropzone?.id) {\n          return;\n        }\n\n        const { data: response } = await updateMasterLog({\n          variables: {\n            date: validatedFields.date,\n            dropzone: dropzone?.id,\n            attributes: {\n              dzso: validatedFields.dzso?.id,\n              notes: validatedFields.notes,\n            },\n          },\n        });\n\n        if (response?.updateMasterLog?.fieldErrors) {\n          response?.updateMasterLog?.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof MasterLogFields, { type: 'custom', message });\n          });\n        }\n        if (response?.updateMasterLog?.masterLog?.date) {\n          notify.success(`Master Log entry updated`);\n          onSuccess?.(response?.updateMasterLog?.masterLog);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(error);\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone, updateMasterLog]\n  );\n\n  const { notes, dzso } = useWatch<MasterLogFields>({ control: methods.control });\n  const isDirty = React.useMemo(\n    () => !isEqual({ notes: initial?.notes, dzso: initial?.dzso?.id }, { notes, dzso: dzso?.id }),\n    [dzso, initial, notes]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(\n    () => ({ ...methods, isDirty, onSubmit, loading }),\n    [methods, isDirty, onSubmit, loading]\n  );\n}\n","import * as React from 'react';\nimport { Button, Card, DataTable, IconButton, List, Paragraph } from 'react-native-paper';\nimport { Linking, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport { Screen } from 'app/components/layout';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useMasterLogQuery } from 'app/api/reflection';\nimport { MasterLogQueryVariables } from 'app/api/operations';\nimport { DateTime } from 'luxon';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { DropzoneUserSelectField } from 'app/components/input/dropdown_select';\nimport { Permission } from 'app/api/schema.d';\nimport usePalette from 'app/hooks/usePalette';\nimport NoResults from 'app/components/NoResults';\nimport useMasterLogForm from './useForm';\n\nexport default function DropzoneMasterLogScreen() {\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const [date, setDate] = React.useState(DateTime.local().toISODate());\n  const navigation = useNavigation();\n  const [isEditing, setIsEditing] = React.useState(false);\n  const toggleEditing = React.useCallback(() => setIsEditing(!isEditing), [isEditing]);\n  const theme = usePalette();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          validRange={{ endDate: new Date() }}\n          onChange={(time) => setDate(DateTime.fromSeconds(time).toISODate())}\n          value={DateTime.fromISO(date).toSeconds()}\n          color={theme.text}\n        />\n      ),\n    });\n  }, [date, navigation, theme.text]);\n\n  const variables: MasterLogQueryVariables = React.useMemo(\n    () => ({\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n      date,\n    }),\n    [currentDropzone?.dropzone?.id, date]\n  );\n\n  const { data } = useMasterLogQuery({ variables, skip: !currentDropzone?.dropzone?.id });\n  const entry = React.useMemo(() => data?.masterLog, [data?.masterLog]);\n\n  const onDownload = React.useCallback(() => {\n    if (data?.masterLog?.downloadUrl) {\n      Linking.openURL(data?.masterLog?.downloadUrl);\n    }\n  }, [data?.masterLog?.downloadUrl]);\n\n  const { control, onSubmit, isDirty } = useMasterLogForm({\n    initial: {\n      date,\n      notes: entry?.notes,\n      dzso: entry?.dzso,\n    },\n    onSuccess: () => setIsEditing(false),\n  });\n\n  return (\n    <Screen scrollable fullWidth={false}>\n      <View style={{ width: '100%', paddingTop: 48 }}>\n        <Card>\n          <Card.Title\n            right={() => (\n              <IconButton icon=\"download\" onPress={onDownload} style={{ marginRight: 8 }} />\n            )}\n            title={`${DateTime.fromISO(date).toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)}`}\n          />\n          <Card.Content>\n            {isEditing ? (\n              <>\n                <DropzoneUserSelectField\n                  name=\"dzso\"\n                  label=\"DZSO\"\n                  requiredPermissions={[Permission.ActAsDzso]}\n                  {...{ control }}\n                />\n                <FormTextField\n                  mode=\"flat\"\n                  numberOfLines={5}\n                  placeholder=\"Any notes for the day? e.g hours of CI attendance\"\n                  name=\"notes\"\n                  label=\"Notes\"\n                  {...{ control }}\n                />\n              </>\n            ) : (\n              <>\n                <List.Item title={entry?.dzso?.name} description=\"DZSO\" />\n                <List.Subheader>Notes</List.Subheader>\n                <Paragraph style={{ padding: 16 }}>\n                  {entry?.notes || 'No notes for this day'}\n                </Paragraph>\n              </>\n            )}\n          </Card.Content>\n          <Card.Actions style={{ justifyContent: 'space-between' }}>\n            {isEditing && <Button onPress={toggleEditing}>Cancel</Button>}\n            {isEditing && (\n              <Button mode=\"contained\" onPress={onSubmit} disabled={!isDirty}>\n                Save\n              </Button>\n            )}\n            {!isEditing && <Button onPress={toggleEditing}>Edit</Button>}\n          </Card.Actions>\n        </Card>\n        {!data?.masterLog?.loads?.length ? (\n          <Card style={{ width: '100%', marginVertical: 16 }}>\n            <Card.Content>\n              <NoResults title=\"No loads for this day\" subtitle=\"\" />\n            </Card.Content>\n          </Card>\n        ) : null}\n        {data?.masterLog?.loads?.map((load) => (\n          <Card style={{ width: '100%', marginVertical: 16 }}>\n            <Card.Title title={`Load ${load.loadNumber}`} />\n            <Card.Content>\n              <List.Item title=\"Pilot\" description={load?.pilot?.name} />\n              <List.Item title=\"GCA\" description={load?.gca?.name} />\n              <List.Item\n                title=\"Plane\"\n                description={\n                  load?.aircraft?.registration\n                    ? `${load?.aircraft?.name} ${load?.aircraft?.registration}`\n                    : 'No plane selected'\n                }\n              />\n              <DataTable>\n                <DataTable.Header>\n                  <DataTable.Title>Name</DataTable.Title>\n                  <DataTable.Title>Jump type</DataTable.Title>\n                  <DataTable.Title numeric>Altitude</DataTable.Title>\n                </DataTable.Header>\n\n                {load.slots?.map((slot) => (\n                  <DataTable.Row>\n                    <DataTable.Cell>{slot?.name}</DataTable.Cell>\n                    <DataTable.Cell>{slot.jumpType}</DataTable.Cell>\n                    <DataTable.Cell numeric>{slot?.altitude}</DataTable.Cell>\n                  </DataTable.Row>\n                ))}\n              </DataTable>\n            </Card.Content>\n          </Card>\n        ))}\n      </View>\n    </Screen>\n  );\n}\n","import { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzoneTransactionsLazyQuery } from 'app/api/reflection';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: route?.params?.userId || currentUser?.id,\n  });\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({\n        variables: { dropzoneId: state.currentDropzoneId?.toString() as string },\n      });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        keyExtractor={(item) => `transaction-${item?.node?.id}`}\n        renderItem={({ item }) =>\n          !item?.node ? null : (\n            <OrderCard\n              onPress={() =>\n                !item?.node\n                  ? null\n                  : navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Users',\n                        params: {\n                          screen: 'OrderReceiptScreen',\n                          params: {\n                            orderId: item?.node?.id,\n                            userId: item?.node?.buyer?.id,\n                          },\n                        },\n                      },\n                    })\n              }\n              order={item?.node}\n              showAvatar\n              {...{ dropzoneUser }}\n            />\n          )\n        }\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\n\nexport default function ExtrasScreen() {\n  const { dropzone: currentDropzone, dialogs } = useDropzoneContext();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n  });\n  const createEditHandler = React.useCallback(\n    (ticketTypeAddon: TicketTypeAddonDetailsFragment) => () =>\n      dialogs.ticketTypeAddon.open({ original: ticketTypeAddon }),\n    [dialogs.ticketTypeAddon]\n  );\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.primary} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.extras?.map((extra) => (\n            <DataTable.Row onPress={createEditHandler(extra)} pointerEvents=\"none\">\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={dialogs.ticketTypeAddon.open}\n          label=\"New ticket addon\"\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","/* eslint-disable max-len */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport SettingsMenuScreen from './settings_menu/SettingsMenuScreen';\nimport TicketTypeSettingsScreen from './ticket_types/TicketTypesScreen';\nimport DropzoneSettingsScreen from './dropzone_settings/DropzoneSettingsScreen';\nimport PlanesScreen from './aircrafts/AircraftsScreen';\nimport RigInspectionTemplateScreen from './rig_inspection_template/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from './rigs/DropzoneRigsScreen';\nimport DropzonePermissionScreen from './permissions/PermissionsScreen';\nimport DropzoneMasterLogScreen from './master_log/MasterLogScreen';\nimport DropzoneTransactionsScreen from './transactions/DropzoneTransactionsScreen';\nimport ExtrasScreen from './extras/ExtrasScreen';\n\nexport type ConfigurationRoutes = {\n  DropzoneSettingsScreen: { dropzone: DropzoneEssentialsFragment };\n  SettingsMenuScreen: undefined;\n  TicketTypesScreen: undefined;\n  AircraftsScreen: undefined;\n  AircraftScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  TransactionsScreen: undefined;\n  PermissionScreen: undefined;\n  MasterLogScreen: undefined;\n};\n\nconst Configuration = createStackNavigator<ConfigurationRoutes>();\n\nexport function useConfigurationNavigation() {\n  return useNavigation<NavigationProp<ConfigurationRoutes>>();\n}\nexport default function SettingsTab() {\n  return (\n    <AppSignalBoundary>\n      <Configuration.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Configuration.Screen\n          name=\"SettingsMenuScreen\"\n          component={SettingsMenuScreen}\n          options={{ title: 'Settings' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneSettingsScreen\"\n          component={DropzoneSettingsScreen}\n          options={{ title: 'Basic settings' }}\n        />\n        <Configuration.Screen\n          name=\"AircraftsScreen\"\n          component={PlanesScreen}\n          options={{ title: 'Planes' }}\n        />\n        <Configuration.Screen\n          name=\"TicketTypesScreen\"\n          component={TicketTypeSettingsScreen}\n          options={{ title: 'Ticket types' }}\n        />\n        <Configuration.Screen\n          name=\"ExtrasScreen\"\n          component={ExtrasScreen}\n          options={{ title: 'Ticket add-ons' }}\n        />\n        <Configuration.Screen\n          name=\"RigInspectionTemplateScreen\"\n          component={RigInspectionTemplateScreen}\n          options={{ title: 'Rig Inspection Form' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneRigsScreen\"\n          component={DropzoneRigsScreen}\n          options={{ title: 'Dropzone rigs' }}\n        />\n        <Configuration.Screen\n          name=\"TransactionsScreen\"\n          component={DropzoneTransactionsScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Configuration.Screen\n          name=\"PermissionScreen\"\n          component={DropzonePermissionScreen}\n          options={{ title: 'Permissions' }}\n        />\n        <Configuration.Screen\n          name=\"MasterLogScreen\"\n          component={DropzoneMasterLogScreen}\n          options={{ title: 'Master log' }}\n        />\n      </Configuration.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport LoadScreen, { LoadScreenRoute } from './load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from './weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from './weather_conditions/JumpRunScreen';\nimport WindScreen from './weather_conditions/WindScreen';\n\nimport ManifestScreen from './manifest/ManifestScreen';\n\nimport User, { UserRoutes } from '../user/routes';\nimport Configuration, { ConfigurationRoutes } from '../configuration/routes';\n\nexport type DropzoneRoutes = {\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  ManifestScreen: undefined;\n  JumpRunScreen: undefined;\n  DashboardScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n  Configuration: NavigatorScreenParams<ConfigurationRoutes>;\n} & LoadScreenRoute;\n\nconst Manifest = createStackNavigator<DropzoneRoutes>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <AppSignalBoundary>\n      <Manifest.Navigator\n        screenOptions={{\n          headerShown: !!(globalState.credentials && globalState.currentDropzone),\n          header: (props) => <AppBar {...props} />,\n          headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Manifest.Screen\n          name=\"ManifestScreen\"\n          component={ManifestScreen}\n          options={{ title: 'Manifest' }}\n        />\n\n        <Manifest.Screen\n          name=\"WeatherConditionsScreen\"\n          component={WeatherConditionsScreen}\n          options={{ headerShown: false }}\n        />\n        <Manifest.Screen\n          name=\"WindScreen\"\n          component={WindScreen}\n          options={{ title: 'Winds Aloft' }}\n        />\n        <Manifest.Screen\n          name=\"JumpRunScreen\"\n          component={JumpRunScreen}\n          options={{ title: 'Jump Run' }}\n        />\n        <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n\n        <Manifest.Screen\n          name=\"User\"\n          component={User}\n          options={{ headerShown: false, presentation: 'modal' }}\n        />\n\n        <Manifest.Screen\n          name=\"Configuration\"\n          component={Configuration}\n          options={{ headerShown: false }}\n        />\n      </Manifest.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: string;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(parseISO(timestamp), { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification?.resource?.id },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport { Load, Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification.resource.id },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport NotificationCard from './NotificationCard';\nimport { useNotificationNavigation } from '../../useNotificationNavigation';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNotificationNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('User', {\n              screen: 'RigInspectionScreen',\n              params: {\n                rigId: (notification.resource as unknown as RigEssentialsFragment).id,\n                dropzoneUserId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n          : navigation.navigate('User', {\n              screen: 'ProfileScreen',\n              params: {\n                userId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n      }\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { NotificationRoutes } from './routes';\n\nexport function useNotificationNavigation() {\n  return useNavigation<NavigationProp<NotificationRoutes>>();\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { NotificationType } from 'app/api/schema.d';\nimport { useNotificationsLazyQuery } from 'app/api/reflection';\nimport { NotificationsQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from '../../../../state';\nimport NoResults from '../../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\nexport default function NotificationScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [getNotifications, query] = useNotificationsLazyQuery();\n  const { data, loading } = query;\n  const variables: NotificationsQueryVariables | undefined = React.useMemo(\n    () => (!dropzone?.id ? undefined : { dropzoneId: dropzone?.id }),\n    [dropzone?.id]\n  );\n\n  const fetchNotifications = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      getNotifications({ variables, fetchPolicy: 'cache-and-network' });\n    }\n  }, [getNotifications, variables]);\n\n  React.useEffect(() => {\n    if (!loading && query?.variables?.dropzoneId !== variables?.dropzoneId) {\n      getNotifications({ variables });\n    }\n  }, [getNotifications, loading, query?.variables?.dropzoneId, variables]);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && fetchNotifications) {\n      fetchNotifications();\n    }\n  }, [isFocused, fetchNotifications]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n  console.debug('Notifications', data?.dropzone?.currentUser?.notifications?.edges);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n      <FlatList\n        ListEmptyComponent={() => (\n          <View style={styles.empty}>\n            <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n          </View>\n        )}\n        contentContainerStyle={styles.content}\n        onRefresh={fetchNotifications}\n        data={data?.dropzone?.currentUser?.notifications?.edges}\n        refreshing={loading}\n        numColumns={1}\n        keyExtractor={(edge) => `notification-${edge?.node?.id}`}\n        style={StyleSheet.absoluteFill}\n        renderItem={({ item: edge }) => {\n          console.debug('Rendering notification ', edge?.node?.notificationType);\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return (\n                <BoardingCallNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.UserManifested:\n              console.debug('Renderign manifest card');\n              return <ManifestedCard key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return (\n                <RigInspectionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return (\n                <PermissionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PublicationRequested:\n              return (\n                <PublicationRequestNotification\n                  key={edge.node.id}\n                  notification={edge.node as never}\n                />\n              );\n            default:\n              return null;\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    height: '100%',\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from 'app/components/appbar/AppBar';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport NotificationsScreen from './notifications/NotificationsScreen';\nimport Users, { UserRoutes } from '../user/routes';\n\nexport type NotificationRoutes = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Notification = createStackNavigator<NotificationRoutes>();\n\nexport default function Notifications() {\n  return (\n    <AppSignalBoundary>\n      <Notification.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} hideWarnings />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n        initialRouteName=\"NotificationsScreen\"\n      >\n        <Notification.Screen\n          name=\"NotificationsScreen\"\n          component={NotificationsScreen}\n          options={{ title: 'Notifications' }}\n        />\n\n        <Notification.Screen name=\"User\" component={Users} />\n      </Notification.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\nexport interface IStatsProps {\n  title?: string;\n  columns?: number;\n  data: { label: string; value: number | string; color?: string }[];\n}\nexport default function Stats(props: IStatsProps) {\n  const { title, data, columns: cols } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const columns = React.useMemo(() => cols || data?.length || 1, [cols, data?.length]);\n\n  const itemWidth = React.useMemo(() => {\n    if (columns) {\n      return Math.floor((dimensions.width - 32) / columns);\n    }\n    return 50;\n  }, [columns, dimensions.width]);\n\n  const cardHeight = React.useMemo(\n    () => Math.ceil((data?.length || 1) / columns) * 120,\n    [columns, data?.length]\n  );\n  return (\n    <Card style={[styles.card, { height: cardHeight }]} {...{ onLayout }}>\n      <Card.Title title={title} />\n      <Card.Content style={styles.row}>\n        {data?.map(({ label, color, value }, index) => (\n          <View style={{ flexDirection: 'row', width: itemWidth, height: 70 }}>\n            <View style={styles.statistic}>\n              <View style={styles.value}>\n                <Text style={[styles.valueText, { color }]}>{value}</Text>\n              </View>\n              <View style={styles.label}>\n                <Text\n                  style={[styles.labelText, { color }]}\n                  lineBreakMode=\"middle\"\n                  numberOfLines={2}\n                >\n                  {label}\n                </Text>\n              </View>\n            </View>\n            {index === (data?.length || 0) - 1 ? null : <View style={styles.divider} />}\n          </View>\n        ))}\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { flex: 1, marginVertical: 4, maxWidth: '100%', justifyContent: 'center' },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    // width: 50,\n    // padding: 8,\n    // marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  label: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 4,\n    justifyContent: 'flex-start',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { subDays } from 'date-fns';\nimport * as React from 'react';\nimport ContributionGraph from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { Card } from 'react-native-paper';\n\nimport './LoadsByDay.css';\n\ninterface ILoadsByDayProps extends Pick<ViewProps, 'style'> {\n  data: { date: string; count: number }[];\n  startTime: Date;\n}\n\nexport default function LoadsByDay(props: ILoadsByDayProps) {\n  const { data, startTime, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Dispatched Loads\" />\n      <Card.Content style={{ height: dimensions.height - 75, width: dimensions.width - 32 }}>\n        <ContributionGraph\n          values={data}\n          showMonthLabels\n          classForValue={(value) => {\n            if (!value?.count) {\n              return 'none';\n            }\n            if (value.count > 3) {\n              return 'many';\n            }\n            if (value.count < 3 && value.count > 0) {\n              return 'few';\n            }\n            return 'none';\n          }}\n          horizontal\n          titleForValue={(value) =>\n            value?.date ? `${value?.date}: ${value?.count} loads` : 'No loads'\n          }\n          startDate={startTime || subDays(new Date(), 365)}\n          endDate={new Date()}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, FlatList, ScrollView } from 'react-native';\nimport { Card, DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { DropzoneState, DropzoneStateEvent } from 'app/api/schema.d';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport ChipSelect from 'app/components/input/chip_select/ChipSelect';\nimport Select from 'app/components/input/select/Select';\nimport { useDropzonesContext } from 'app/api/crud/useDropzones';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IDropzonesTableProps {\n  dropzones: DropzoneStatisticsFragment[];\n  selected: DropzoneStatisticsFragment[];\n  onChangeSelected(dropzones: DropzoneStatisticsFragment[]): void;\n}\n\nconst stateEvent = {\n  [DropzoneState.Archived]: DropzoneStateEvent.Archive,\n  [DropzoneState.InReview]: DropzoneStateEvent.RequestPublication,\n  [DropzoneState.Private]: DropzoneStateEvent.Unpublish,\n  [DropzoneState.Public]: DropzoneStateEvent.Publish,\n};\n\nfunction DropzoneTableRow(props: { dropzone?: DropzoneStatisticsFragment | null }) {\n  const { dropzone } = props;\n\n  const { updateVisibility } = useDropzonesContext();\n  const notify = useNotifications();\n\n  const onChangeVisibility = React.useCallback(\n    async (state: DropzoneState) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, stateEvent[state]);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [notify, dropzone?.id, updateVisibility]\n  );\n\n  if (!dropzone) {\n    return null;\n  }\n  return (\n    <DataTable.Row\n      style={{\n        borderLeftColor: dropzone.primaryColor || undefined,\n        borderLeftWidth: 5,\n      }}\n    >\n      <DataTable.Cell style={styles.avatarCell}>\n        <UserAvatar size={20} name={dropzone?.name} image={dropzone.banner} />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.nameCell}>{dropzone.name}</DataTable.Cell>\n      <DataTable.Cell style={styles.createdCell}>\n        <HelperText type=\"info\">{format(parseISO(dropzone.createdAt), 'dd MMM, HH:mm')}</HelperText>\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.statusCell}>\n        <Select<DropzoneState>\n          value={dropzone.status}\n          options={[\n            { label: 'Archived', value: DropzoneState.Archived },\n            { label: 'Private', value: DropzoneState.Private },\n            { label: 'In Review', value: DropzoneState.InReview },\n            { label: 'Public', value: DropzoneState.Public },\n          ]}\n          onChange={onChangeVisibility}\n        />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.loadsCell}>\n        {dropzone?.statistics?.loadsCount || 0}\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.usersCell}>\n        {dropzone?.statistics?.activeUserCount || 0}\n      </DataTable.Cell>\n    </DataTable.Row>\n  );\n}\nexport default function DropzonesTable(props: IDropzonesTableProps) {\n  const { dropzones, onChangeSelected, selected } = props;\n\n  return (\n    <Card style={{ flexGrow: 1, width: '100%' }}>\n      <Card.Title title=\"Dropzones\" />\n      <Card.Content style={{ width: '100%' }}>\n        <ChipSelect\n          allowEmpty\n          items={dropzones}\n          onChange={onChangeSelected}\n          value={selected}\n          renderItemLabel={(value) => value.name}\n        />\n        <ScrollView\n          horizontal\n          alwaysBounceVertical={false}\n          showsVerticalScrollIndicator={false}\n          style={{ width: '100%', height: '100%', flexGrow: 1 }}\n          contentContainerStyle={{ flexGrow: 1 }}\n        >\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title style={styles.avatarCell}>{null}</DataTable.Title>\n              <DataTable.Title style={styles.nameCell}>Name</DataTable.Title>\n              <DataTable.Title style={styles.createdCell}>Created</DataTable.Title>\n              <DataTable.Title style={styles.statusCell}>Status</DataTable.Title>\n              <DataTable.Title style={styles.loadsCell}>Loads</DataTable.Title>\n              <DataTable.Title style={styles.usersCell}>Active Users</DataTable.Title>\n            </DataTable.Header>\n            <FlatList\n              data={dropzones}\n              renderItem={({ item }) =>\n                !item ? null : <DropzoneTableRow key={`dropzone-row=${item?.id}`} dropzone={item} />\n              }\n            />\n          </DataTable>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n  },\n  avatarCell: {\n    flex: 5,\n  },\n  statusCell: {\n    flex: 20,\n  },\n  nameCell: {\n    flex: 40,\n  },\n  loadsCell: {\n    flex: 5,\n  },\n  usersCell: {\n    flex: 5,\n  },\n  createdCell: {\n    flex: 10,\n  },\n});\n","import { AbstractChartConfig } from 'react-native-chart-kit/dist/AbstractChart';\n\nexport const chartConfig: AbstractChartConfig = {\n  backgroundColor: '#e26a00',\n  backgroundGradientFrom: '#fb8c00',\n  backgroundGradientTo: '#ffa726',\n  decimalPlaces: 2, // optional, defaults to 2dp\n  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  style: {\n    borderRadius: 16,\n  },\n  propsForDots: {\n    r: '6',\n    strokeWidth: '2',\n    stroke: '#ffa726',\n  },\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientToOpacity: 0.5,\n  strokeWidth: 2, // optional, default 3\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false,\n};\n","import { chartConfig } from 'app/constants/ChartConfig';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { PieChart } from 'react-native-chart-kit';\nimport { Card } from 'react-native-paper';\n\ninterface IJumpTypePieChart extends Pick<ViewProps, 'style'> {\n  data: { name: string; count: number }[];\n}\n\nconst JUMP_TYPE_COLORS = {\n  angle: '#AA0000',\n  cam: '#FFAA00',\n  ws: '#AAFF00',\n  hnp: '#ABABFF',\n  hp: '#BAFFBA',\n  fs: '#DD00FF',\n  freefly: '#00ABFF',\n};\n\nexport default function LoadsByDay(props: IJumpTypePieChart) {\n  const { data: values, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const data = React.useMemo(\n    () =>\n      sortBy(values, 'count').map<{\n        name: string;\n        count: number;\n        legendFontColor: string;\n        legendFontSize: number;\n        color: string;\n      }>((stat) => ({\n        ...stat,\n        color:\n          stat?.name && stat?.name in JUMP_TYPE_COLORS\n            ? JUMP_TYPE_COLORS[stat.name as keyof typeof JUMP_TYPE_COLORS]\n            : '#AAA',\n        legendFontColor: '#333',\n        legendFontSize: 15,\n      })),\n    [values]\n  );\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Jump types\" />\n      <Card.Content style={{ height: 300 }}>\n        <PieChart\n          {...{ data, chartConfig }}\n          width={(dimensions.width || 400) - 32}\n          height={(dimensions.height || 200) - 75}\n          accessor=\"count\"\n          backgroundColor=\"transparent\"\n          paddingLeft=\"15\"\n          center={[0, 0]}\n          absolute={false}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import { useDropzonesStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { parseISO, subMonths } from 'date-fns';\nimport Chip from 'app/components/chips/Chip';\nimport { sumBy } from 'lodash';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport { Card } from 'react-native-paper';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { DropzoneState } from 'app/api/schema.d';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport DropzonesTable from './DropzonesTable';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nfunction AdminOverviewPage() {\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange).toISOString(),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return {\n      startTime: new Date(2020, 0, 1).toISOString(),\n      endTime: new Date().toISOString(),\n    };\n  }, [selectedTimeRange]);\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n\n  const [selectedDropzones, setSelectedDropzones] = React.useState<DropzoneStatisticsFragment[]>();\n\n  const { data } = useDropzonesStatisticsQuery({\n    variables: {\n      timeRange,\n    },\n  });\n  React.useEffect(() => {\n    if (data?.dropzones?.edges?.length && selectedDropzones === undefined) {\n      setSelectedDropzones(\n        data.dropzones.edges.map((edge) => edge?.node as DropzoneStatisticsFragment).filter(Boolean)\n      );\n    }\n  }, [data?.dropzones.edges, selectedDropzones]);\n\n  const summedStatistics = React.useMemo(\n    () => ({\n      revenueCents: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.revenueCentsCount || 0\n      ),\n      loadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.loadsCount || 0\n      ),\n      cancelledLoadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.cancelledLoadsCount || 0\n      ),\n      slotsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.slotsCount || 0\n      ),\n      pilotCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.pilotCount || 0\n      ),\n      dzsoCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.dzsoCount || 0),\n      gcaCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.gcaCount || 0),\n      totalUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.totalUserCount || 0\n      ),\n      activeUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.activeUserCount || 0\n      ),\n      inactiveUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.inactiveUserCount || 0\n      ),\n      loadCountByDay: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.loadCountByDay || [])\n        .flat(),\n      slotsByJumpType: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.slotsByJumpType || [])\n        .flat(),\n    }),\n    [selectedDropzones]\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        <Stats\n          title=\"Turn-around\"\n          columns={Platform.OS === 'web' ? undefined : 2}\n          data={\n            [\n              {\n                label: 'Total',\n                color: successColor,\n                value: `$${summedStatistics?.revenueCents || 0}`,\n              },\n              {\n                label: 'Dispatched',\n                value: summedStatistics?.loadsCount || 0,\n              },\n              {\n                label: 'Cancelled',\n                value: summedStatistics?.cancelledLoadsCount || 0,\n              },\n              {\n                label: 'Slots',\n                value: summedStatistics?.slotsCount || 0,\n              },\n            ].filter(Boolean) as IStatsProps['data']\n          }\n        />\n\n        <Stats\n          title=\"Accounts\"\n          columns={Platform.OS === 'web' ? undefined : 3}\n          data={[\n            { label: 'Dropzones', value: data?.dropzones.edges?.length || 0 },\n            { label: 'Users', value: summedStatistics?.totalUserCount || 0 },\n            {\n              label: 'Active',\n              value: summedStatistics?.activeUserCount || 0,\n              color: successColor,\n            },\n            {\n              label: 'Inactive',\n              value: summedStatistics?.inactiveUserCount || 0,\n              color: warningColor,\n            },\n            { label: 'Pilots', value: summedStatistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: summedStatistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: summedStatistics.dzsoCount || 0,\n            },\n          ]}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n        <LoadsByDay\n          style={styles.dispatchedLoadsCard}\n          data={summedStatistics?.loadCountByDay || []}\n          startTime={\n            timeRange?.startTime ? parseISO(timeRange?.startTime) : subMonths(new Date(), 6)\n          }\n        />\n\n        <JumpTypePieChart\n          style={styles.jumpTypesCard}\n          data={summedStatistics?.slotsByJumpType || []}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <DropzonesTable\n          selected={selectedDropzones || []}\n          onChangeSelected={setSelectedDropzones}\n          dropzones={\n            data?.dropzones?.edges?.map((edge) => edge?.node as DropzoneStatisticsFragment) || []\n          }\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nexport default function AdminOverviewPageWrapper() {\n  return (\n    <DropzonesProvider\n      state={[\n        DropzoneState.Archived,\n        DropzoneState.InReview,\n        DropzoneState.Private,\n        DropzoneState.Public,\n      ]}\n    >\n      <AdminOverviewPage />\n    </DropzonesProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n    marginVertical: 4,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList } from 'react-native';\nimport { DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { EventLevel } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\n\nconst LEVEL_COLORS = {\n  [EventLevel.Debug]: '#AF00FF',\n  [EventLevel.Error]: '#FF1515',\n  [EventLevel.Info]: '#15A0FF',\n};\n\ninterface IActivityFeedProps extends ActivityQueryVariables {\n  data: ActivityEssentialsFragment[];\n  onFetchMore(): void;\n}\n\nfunction FeedItem(props: { event?: ActivityEssentialsFragment | null }) {\n  const { event } = props;\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onPress = React.useCallback(() => {\n    if (event?.details) {\n      setExpanded(!expanded);\n    }\n  }, [event?.details, expanded]);\n\n  if (!event) {\n    return null;\n  }\n\n  return (\n    <>\n      <DataTable.Row\n        style={{\n          borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n          borderLeftWidth: 5,\n        }}\n        {...{ onPress }}\n      >\n        <DataTable.Cell style={styles.avatarCell}>\n          <UserAvatar\n            size={20}\n            name={event?.createdBy?.user?.name || 'System'}\n            image={event?.createdBy?.user?.image || undefined}\n          />\n          <HelperText type=\"info\">{format(parseISO(event.createdAt), 'dd MMM, HH:mm')}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.levelCell}>\n          <HelperText type=\"info\">{event?.level}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.messageCell}>{event?.message}</DataTable.Cell>\n      </DataTable.Row>\n      {!expanded ? null : (\n        <DataTable.Row\n          style={{\n            borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n            borderLeftWidth: 5,\n          }}\n        >\n          <DataTable.Cell style={styles.avatarCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.levelCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.messageCell}>{event?.details}</DataTable.Cell>\n        </DataTable.Row>\n      )}\n    </>\n  );\n}\nexport default function Feed(props: IActivityFeedProps) {\n  const { data, onFetchMore } = props;\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title style={styles.avatarCell}>Time</DataTable.Title>\n        <DataTable.Title style={styles.levelCell}>Level</DataTable.Title>\n        <DataTable.Title style={styles.messageCell}>Message</DataTable.Title>\n      </DataTable.Header>\n      <FlatList\n        {...{ data }}\n        renderItem={({ item }) =>\n          !item ? null : <FeedItem key={`event-log-row=${item?.id}`} event={item} />\n        }\n        onEndReached={onFetchMore}\n        onEndReachedThreshold={1}\n      />\n    </DataTable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarCell: {\n    flex: 1,\n  },\n  levelCell: {\n    flex: 1,\n  },\n  messageCell: {\n    flex: 4,\n  },\n});\n","import { useActivityDetailsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { EventLevel, EventAccessLevel, Permission } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { isEqual, uniqBy } from 'lodash';\nimport ChipSelect from '../input/chip_select/ChipSelect';\nimport Feed from './Feed';\n\ninterface IActivityFeedContainerProps extends ActivityQueryVariables {\n  onChange(variables: Partial<ActivityQueryVariables>): void;\n}\n\nexport default function ActivityFeedContainer(props: IActivityFeedContainerProps) {\n  const { dropzone, accessLevels, levels, timeRange, onChange } = props;\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewUserActivity = useRestriction(Permission.ViewUserActivity);\n\n  const variables: ActivityQueryVariables = React.useMemo(\n    () => ({\n      dropzone,\n      levels,\n      accessLevels,\n      timeRange,\n    }),\n    [accessLevels, dropzone, levels, timeRange]\n  );\n\n  const [getActivity, query] = useActivityDetailsLazyQuery();\n\n  React.useEffect(() => {\n    if (!isEqual(query?.variables, variables)) {\n      getActivity({ variables });\n    }\n  }, [getActivity, query?.variables, variables]);\n\n  const onFetchMore = React.useCallback(() => {\n    if (\n      query?.data?.activity?.pageInfo?.hasNextPage &&\n      !query?.loading &&\n      query?.data?.activity?.pageInfo?.endCursor !== query?.variables?.after\n    ) {\n      query\n        ?.fetchMore({ variables: { after: query?.data?.activity?.pageInfo?.endCursor } })\n        .then((result) => {\n          query?.updateQuery((prev) => ({\n            ...prev,\n            activity: {\n              ...prev?.activity,\n              ...result?.data?.activity,\n              pageInfo: result?.data?.activity?.pageInfo,\n              edges: uniqBy(\n                [...(prev.activity.edges || []), ...(result?.data?.activity?.edges || [])],\n                'node.id'\n              ),\n            },\n          }));\n        });\n    }\n  }, [query]);\n\n  const onChangeEventLevel = React.useCallback(\n    (newLevels: EventLevel[]) =>\n      onChange({\n        levels: newLevels,\n      }),\n    [onChange]\n  );\n\n  const onChangeAccessLevel = React.useCallback(\n    (newAccessLevels: EventAccessLevel[]) => {\n      onChange({\n        accessLevels: newAccessLevels,\n      });\n    },\n    [onChange]\n  );\n\n  console.debug({ accessLevels, timeRange, levels });\n\n  return (\n    <Card style={{ width: '100%' }}>\n      <Card.Title title=\"Events\" />\n      <Card.Content style={{ paddingHorizontal: 0 }}>\n        {(canViewAdminActivity || canViewSystemActivity) && (\n          <View style={styles.controls}>\n            <View>\n              <List.Subheader>Event Type</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewAdminActivity && EventAccessLevel.Admin,\n                    canViewUserActivity && EventAccessLevel.User,\n                    canViewSystemActivity && EventAccessLevel.System,\n                  ].filter(Boolean) as EventAccessLevel[]\n                }\n                onChange={onChangeAccessLevel}\n                value={(accessLevels || []) as EventAccessLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventAccessLevel).find(\n                    (key) => EventAccessLevel[key as keyof typeof EventAccessLevel] === value\n                  )\n                }\n              />\n            </View>\n\n            <View>\n              <List.Subheader>Event Level</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewUserActivity && EventLevel.Info,\n                    canViewSystemActivity && EventLevel.Debug,\n                    canViewAdminActivity && EventLevel.Error,\n                  ].filter(Boolean) as EventLevel[]\n                }\n                onChange={onChangeEventLevel}\n                value={(levels || []) as EventLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventLevel).find(\n                    (key) => EventLevel[key as keyof typeof EventLevel] === value\n                  )\n                }\n              />\n            </View>\n          </View>\n        )}\n\n        <Feed\n          data={\n            query?.data?.activity?.edges?.map((edge) => edge?.node as ActivityEssentialsFragment) ||\n            ([] as ActivityEssentialsFragment[])\n          }\n          {...{ onFetchMore }}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginHorizontal: 8,\n    marginBottom: 16,\n  },\n});\n","import { useDropzoneStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { subMonths } from 'date-fns';\nimport { EventAccessLevel, EventLevel, Permission } from 'app/api/schema.d';\nimport Chip from 'app/components/chips/Chip';\nimport ActivityFeed from 'app/components/activity/Container';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Card } from 'react-native-paper';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nexport default function DashboardPage() {\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewRevenue = useRestriction(Permission.ViewStatistics);\n  const canViewStatistics = useRestriction(Permission.ViewRevenue);\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return undefined;\n  }, [selectedTimeRange]);\n\n  const [activityVariables, setActivityVariables] = React.useState<ActivityQueryVariables>({\n    levels: [\n      canViewSystemActivity && EventLevel.Debug,\n      canViewSystemActivity && EventLevel.Error,\n      EventLevel.Info,\n    ].filter(Boolean) as EventLevel[],\n    accessLevels: [\n      canViewSystemActivity && EventAccessLevel.System,\n      EventAccessLevel.User,\n      canViewAdminActivity && EventAccessLevel.Admin,\n    ].filter(Boolean) as EventAccessLevel[],\n    timeRange,\n  });\n\n  const onChangeActivityVariables = React.useCallback(\n    (vars: ActivityQueryVariables) => setActivityVariables({ ...activityVariables, ...vars }),\n    [activityVariables]\n  );\n\n  const { data } = useDropzoneStatisticsQuery({\n    variables: {\n      dropzoneId: dropzone?.id?.toString() as string,\n      timeRange,\n    },\n    skip: !dropzone?.id,\n  });\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        {canViewStatistics && (\n          <Stats\n            title=\"Turn-around\"\n            columns={Platform.OS === 'web' ? undefined : 4}\n            data={\n              [\n                canViewRevenue\n                  ? {\n                      label: 'Total',\n                      color: successColor,\n                      value: `$${data?.dropzone?.statistics?.revenueCentsCount || 0}`,\n                    }\n                  : undefined,\n                {\n                  label: 'Dispatched',\n                  value: data?.dropzone?.statistics?.loadsCount || 0,\n                },\n                {\n                  label: 'Cancelled',\n                  value: data?.dropzone?.statistics?.cancelledLoadsCount || 0,\n                },\n                {\n                  label: 'Slots',\n                  value: data?.dropzone?.statistics?.slotsCount || 0,\n                },\n              ].filter(Boolean) as IStatsProps['data']\n            }\n          />\n        )}\n\n        <Stats\n          title=\"Roles\"\n          data={[\n            { label: 'Pilots', value: data?.dropzone?.statistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: data?.dropzone?.statistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: data?.dropzone?.statistics.dzsoCount || 0,\n            },\n          ]}\n        />\n        {canViewStatistics && (\n          <Stats\n            title=\"Users\"\n            data={[\n              { label: 'Total', value: data?.dropzone?.statistics?.totalUserCount || 0 },\n              {\n                label: 'Active',\n                value: data?.dropzone?.statistics?.activeUserCount || 0,\n                color: successColor,\n              },\n              {\n                label: 'Inactive',\n                value: data?.dropzone?.statistics?.inactiveUserCount || 0,\n                color: warningColor,\n              },\n            ]}\n          />\n        )}\n      </View>\n      {canViewStatistics && (\n        <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n          <LoadsByDay\n            style={styles.dispatchedLoadsCard}\n            data={data?.dropzone?.statistics?.loadCountByDay || []}\n            startTime={timeRange?.startTime || subMonths(new Date(), 6)}\n          />\n          <JumpTypePieChart\n            style={styles.jumpTypesCard}\n            data={data?.dropzone?.statistics?.slotsByJumpType || []}\n          />\n        </View>\n      )}\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <ActivityFeed\n          {...activityVariables}\n          {...{ timeRange }}\n          onChange={onChangeActivityVariables}\n          dropzone={dropzone?.id}\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport OverviewScreen from './AdminOverview';\nimport DashboardScreen from './DropzoneOverview';\n\nexport type OverviewRoutes = {\n  OverviewScreen: undefined;\n  DashboardScreen: undefined;\n};\n\nconst Overview = createStackNavigator<OverviewRoutes>();\n\nexport default function OverviewTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Overview.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Overview.Screen\n        name=\"DashboardScreen\"\n        component={DashboardScreen}\n        options={{ title: 'Dashboard' }}\n      />\n      <Overview.Screen\n        name=\"OverviewScreen\"\n        component={OverviewScreen}\n        options={{ title: 'Overview' }}\n      />\n    </Overview.Navigator>\n  );\n}\n","import { AnimatedTabBarNavigator } from 'react-native-animated-nav-tab-bar';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport default (AnimatedTabBarNavigator as typeof createBottomTabNavigator)<AuthenticatedRoutes>();\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\n\nimport { useTheme } from 'react-native-paper';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport ManifestTab, { DropzoneRoutes } from './dropzone/routes';\nimport UsersTab, { UserRoutes } from './user/routes';\nimport NotificationsTab, { NotificationRoutes } from './notifications/routes';\nimport OverviewTab, { OverviewRoutes } from './overview/routes';\n\nimport BottomTab from './TabBar';\n\nexport type AuthenticatedRoutes = {\n  Manifest: NavigatorScreenParams<DropzoneRoutes>;\n  Overview: NavigatorScreenParams<OverviewRoutes>;\n  Users: NavigatorScreenParams<UserRoutes>;\n  Notifications: NavigatorScreenParams<NotificationRoutes>;\n};\n\nexport default function AuthenticatedTabBar() {\n  const { palette } = useAppSelector((root) => root.global);\n\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const isAdmin = currentUser?.user?.moderationRole !== ModerationRole.User;\n  const canViewUsers = useRestriction(Permission.ReadUser);\n  const canViewDashboard = useRestriction(Permission.ViewStatistics);\n\n  const theme = useTheme();\n\n  const screenOptions = React.useMemo(\n    () => ({\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n      tabBarActiveBackgroundColor: theme.colors.surface,\n      tabBarInactiveTintColor: '#CCCCCC',\n      tabBarShowLabel: Platform.OS !== 'web',\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderTopColor: '#CCCCCC',\n      },\n    }),\n    [\n      theme.colors.backdrop,\n      theme.colors.background,\n      theme.colors.primary,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n\n  return (\n    <AppSignalBoundary>\n      <BottomTab.Navigator\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        appearance={{\n          tabBarBackground: theme.colors.surface,\n          topPadding: 16,\n          shadow: true,\n          bottomPadding: 16,\n        }}\n        tabBarOptions={{\n          activeTintColor: '#FFFFFF',\n          inactiveTintColor: palette.primary.main,\n          activeBackgroundColor: palette.primary.main,\n        }}\n        initialRouteName=\"Manifest\"\n        {...{ screenOptions }}\n      >\n        {(canViewDashboard || isAdmin) && (\n          <BottomTab.Screen\n            name=\"Overview\"\n            component={OverviewTab}\n            options={{\n              tabBarIcon: ({ focused, color, size }) => (\n                <MaterialCommunityIcons\n                  name=\"view-dashboard-outline\"\n                  {...{ size, color }}\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: false,\n            }}\n          />\n        )}\n        <BottomTab.Screen\n          name=\"Manifest\"\n          component={ManifestTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"airplane\"\n                {...{ size, color }}\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n              />\n            ),\n            unmountOnBlur: false,\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={NotificationsTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"bell-outline\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size, color }}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n        {canViewUsers && (\n          <BottomTab.Screen\n            name=\"Users\"\n            component={UsersTab}\n            options={{\n              tabBarIcon: ({ size, color, focused }) => (\n                <MaterialCommunityIcons\n                  {...{ size, color }}\n                  name=\"account-group-outline\"\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: true,\n            }}\n          />\n        )}\n      </BottomTab.Navigator>\n    </AppSignalBoundary>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { NavigatorScreenParams } from '@react-navigation/native';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport DrawerMenu from 'app/components/drawer/Drawer';\nimport Authenticated, { AuthenticatedRoutes } from '../authenticated/routes';\n\nexport type LeftDrawerRoutes = {\n  LeftDrawer: NavigatorScreenParams<AuthenticatedRoutes>;\n};\n\nconst Drawer = createDrawerNavigator<LeftDrawerRoutes>();\n\nexport default function DrawerNavigator() {\n  const drawerContent = React.useCallback(() => <DrawerMenu />, []);\n  return (\n    <Drawer.Navigator\n      {...{ drawerContent }}\n      screenOptions={{ drawerType: 'back', headerShown: false }}\n    >\n      <Drawer.Screen name=\"LeftDrawer\" component={Authenticated} />\n    </Drawer.Navigator>\n  );\n}\n","import { LinkingOptions, NavigatorScreenParams } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport NotFoundScreen from './NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport Limbo, { LimboRoutes } from './limbo/routes';\nimport Unauthenticated, { UnauthenticatedRoutes } from './unauthenticated/routes';\nimport Wizards, { WizardRoutes } from './wizards/routes';\nimport LeftDrawer, { LeftDrawerRoutes } from './drawers/UserDrawer';\n\nexport const options: LinkingOptions<ReactNavigation.RootParamList> = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://www.openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      Authenticated: {\n        screens: {\n          LeftDrawer: {\n            screens: {\n              Overview: {\n                screens: {\n                  DashboardScreen: '/dropzone/dashboard',\n                  OverviewScreen: '/overview',\n                },\n              },\n              Manifest: {\n                screens: {\n                  ManifestScreen: '/dropzone/manifest',\n                  DashboardScreen: '/dropzone/overview',\n                  User: {\n                    screens: {\n                      EquipmentScreen: '/dropzone/manifest/users/:userId/equipment/',\n                      OrderReceiptScreen:\n                        '/dropzone/manifest/users/:userId/orders/:orderId/receipts',\n                      ProfileScreen: '/dropzone/manifest/users/:userId',\n                      OrdersScreen: '/dropzone/manifest/users/:userId/orders',\n                      RigInspectionScreen:\n                        '/dropzone/manifest/users/:dropzoneUserId/rig/:rigId/inspection',\n                      UserListScreen: '/dropzone/manifest/users',\n                    },\n                  },\n                  Configuration: {\n                    screens: {\n                      AircraftScreen: '/dropzone/configuration/aircraft/:planeId',\n                      TicketTypesScreen: '/dropzone/configuration/ticket-types',\n                      DropzoneRigsScreen: '/dropzone/configuration/rigs',\n                      ExtrasScreen: '/dropzone/ticket-types/extra',\n                      MasterLogScreen: '/dropzone/master-log',\n                      SettingsMenuScreen: '/dropzone/configuration',\n                      AircraftsScreen: '/dropzone/configuration/aircrafts',\n                      DropzoneSettingsScreen: '/dropzone/configuration/basic',\n                      PermissionScreen: '/dropzone/configuration/permissions',\n                      RigInspectionTemplateScreen: '/dropzone/configuration/rig-inspection',\n                      TransactionsScreen: '/dropzone/transactions',\n                    },\n                  },\n                  JumpRunScreen: '/dropzone/weather/jumprun',\n                  WeatherConditionsScreen: '/dropzone/weather',\n                  LoadScreen: '/dropzone/load/:loadId',\n                  WindScreen: '/dropzone/weather/winds',\n                },\n              },\n              Users: {\n                screens: {\n                  UserListScreen: '/users',\n                  ProfileScreen: '/user/:userId',\n                  EquipmentScreen: '/user/:userId/equipment',\n                  OrdersScreen: '/user/:userId/transactions',\n                  OrderReceiptScreen: '/user/:userId/transactions/:orderId/receipt',\n                  RigInspectionScreen: '/user/:dropzoneUserId/rig-inspection/:rig',\n                },\n              },\n              Notifications: {\n                screens: {\n                  NotificationsScreen: '/notifications',\n                },\n              },\n            },\n          },\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzoneSelectScreen: '/select-dropzone',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n          SignUpWizard: '/user-setup',\n        },\n      },\n      Wizards: {\n        screens: {\n          ConfirmUserScreen: '/confirm',\n          RecoverPasswordScreen: '/recover-password',\n          ChangePasswordScreen: '/change-password',\n          DropzoneWizardScreen: '/setup',\n          User: {\n            screens: {\n              UserListScreen: '/modal/users',\n              ProfileScreen: '/modal/user/:userId',\n              EquipmentScreen: '/modal/user/:userId/equipment',\n              OrdersScreen: '/modal/user/:userId/transactions',\n              OrderReceiptScreen: '/modal/user/:userId/transactions/:orderId/receipt',\n              RigInspectionScreen: '/modal/user/:dropzoneUserId/rig-inspection/:rig',\n            },\n          },\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport type Routes = {\n  Authenticated: NavigatorScreenParams<LeftDrawerRoutes>;\n  Unauthenticated: NavigatorScreenParams<UnauthenticatedRoutes>;\n  Limbo: NavigatorScreenParams<LimboRoutes>;\n  Wizards: NavigatorScreenParams<WizardRoutes>;\n  NotFound: undefined;\n};\n\nconst Stack = createStackNavigator<Routes>();\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface RootParamList extends Routes {}\n  }\n}\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\" component={LeftDrawer} />\n        ) : (\n          <Stack.Screen name=\"Limbo\" component={Limbo} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={Unauthenticated} />\n      )}\n      <Stack.Screen name=\"Wizards\" component={Wizards} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PortalProvider } from '@gorhom/portal';\n\nimport './bootstrap';\nimport Apollo from 'app/api/Apollo';\nimport { NotificationsProvider } from 'app/providers/notifications';\nimport Wrapper from './EntrypointWrapper';\n\nimport {\n  ExpoUpdatesProvider,\n  DropzonesProvider,\n  PushNotificationsProvider,\n  ThemeProvider,\n} from './providers';\n\nimport { useRouteChange, useAppearanceListener, useCachedResources } from './hooks';\n\nimport { store, persistor, useAppSelector } from '../state/store';\nimport ImageViewer from '../components/dialogs/ImageViewer/ImageViewer';\n\nimport RootNavigator, { options as LinkingConfiguration } from '../screens/routes';\nimport {\n  AppSignalBoundary,\n  AppSignalProvider,\n  AppSignalSessionTagger,\n} from '../components/app_signal';\n\nfunction Content() {\n  useAppearanceListener();\n  const state = useAppSelector((root) => root.global);\n  const onRouteChange = useRouteChange();\n\n  return (\n    <AppSignalProvider>\n      <AppSignalBoundary>\n        <ExpoUpdatesProvider>\n          <React.Suspense\n            fallback={\n              <View style={{ flex: 1, flexGrow: 1 }}>\n                <ProgressBar indeterminate color={state?.theme?.colors?.primary} visible />\n              </View>\n            }\n          >\n            <Apollo>\n              <ThemeProvider>\n                <GestureHandlerRootView style={{ flex: 1 }}>\n                  <PortalProvider>\n                    <SafeAreaProvider>\n                      <ImageViewer />\n                      <NotificationsProvider>\n                        <NavigationContainer\n                          documentTitle={{\n                            formatter: () => 'OpenManifest',\n                          }}\n                          onStateChange={onRouteChange}\n                          linking={LinkingConfiguration}\n                          theme={state.theme as unknown as never}\n                        >\n                          <Wrapper>\n                            <DropzonesProvider>\n                              <AppSignalSessionTagger>\n                                <PushNotificationsProvider>\n                                  <RootNavigator />\n                                </PushNotificationsProvider>\n                              </AppSignalSessionTagger>\n                            </DropzonesProvider>\n                          </Wrapper>\n                        </NavigationContainer>\n\n                        <StatusBar />\n                      </NotificationsProvider>\n                    </SafeAreaProvider>\n                  </PortalProvider>\n                </GestureHandlerRootView>\n              </ThemeProvider>\n            </Apollo>\n          </React.Suspense>\n        </ExpoUpdatesProvider>\n      </AppSignalBoundary>\n    </AppSignalProvider>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    console.debug('[App] Loading resources and rendering nothing');\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { Appearance } from 'react-native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\nimport { actions } from 'app/state';\n\nexport default function useAppearance() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const listener = React.useRef<ReturnType<typeof Appearance.addChangeListener>>(\n    Appearance.addChangeListener(({ colorScheme }) => {\n      if (colorScheme) {\n        dispatch(actions.global.setAppearance(colorScheme));\n      }\n    })\n  );\n\n  /// Listen to changes in Appearance and set dark mode theme in state\n  React.useEffect(() => {\n    const handler = listener?.current;\n    return () => handler?.remove?.();\n  }, [dispatch, state.isDarkMode, state.theme.colors.background]);\n}\n","import * as React from 'react';\nimport { NavigationState, getPathFromState } from '@react-navigation/native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\n\nimport { actions } from 'app/state';\n\nexport default function useRouteChange() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (s?: NavigationState) => {\n      if (s) {\n        const [path] = getPathFromState(s).split(/\\?/);\n        const [screenName] = path.split(/\\//).reverse();\n        if (state.currentRouteName !== screenName) {\n          dispatch(actions.global.setCurrentRouteName(screenName));\n        }\n      }\n    },\n    [dispatch, state.currentRouteName]\n  );\n}\n","import Entrypoint from './Entrypoint';\n\nexport default Entrypoint;\n","import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\nimport * as roboto from '@expo-google-fonts/roboto';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n    Roboto_400Regular: roboto.Roboto_400Regular,\n    Roboto_500Medium: roboto.Roboto_500Medium,\n    Roboto_700Bold: roboto.Roboto_700Bold,\n    ...Ionicons.font,\n    ...MaterialCommunityIcons.font,\n    ...MaterialIcons.font,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          ...MaterialCommunityIcons.font,\n          ...MaterialIcons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n        setLoadingComplete(true);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n","import { registerRootComponent } from 'expo';\nimport Entrypoint from './app/entrypoint';\n\nregisterRootComponent(Entrypoint);","module.exports = __webpack_public_path__ + \"static/media/logo-black.36bb8461.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.97bdff33.png\";","module.exports = __webpack_public_path__ + \"static/media/webb-dark.cc0e3dfa.png\";","module.exports = __webpack_public_path__ + \"static/media/pattern.9f57eead.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";"],"sourceRoot":""}