{"version":3,"sources":["app/components/map/Map.web.tsx","app/utils/calculateLatLngDelta.ts","app/utils/calculateCoordinatesByAngle.ts","assets/images/weather.png","assets/images/night.png","app/screens/authenticated/manifest/Weather/JumpRun.tsx","assets/images/logo-black.png","assets/images/logo.png","assets/fonts/SpaceMono-Regular.ttf","assets/images/pattern.png","app/PaperDatesPolyfill.ts","app/EntrypointWrapper.web.tsx","app/api/schema.d.ts","app/components/LottieView.web.tsx","app/components/forms/credits/slice.tsx","app/screens/authenticated/dropzone_wizard/slice.tsx","app/components/forms/dropzone/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/extra/slice.tsx","app/components/forms/load/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/plane/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/ticket_type/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/users/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/authenticated/user_wizard/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/components/notifications/slice.ts","app/state/store.ts","app/components/app_update/AppUpdate.tsx","app/api/Apollo.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/components/notifications/Notifications.tsx","app/navigation/Routes.ts","app/screens/NotFoundScreen.tsx","app/api/reflection.tsx","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateUser.ts","app/api/hooks/useCurrentDropzone.ts","app/hooks/useRestriction.ts","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/input/number_input/NumberField.tsx","app/api/createQuery.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/components/forms/manifest/ManifestForm.tsx","app/components/dialogs/ManifestUser/ManifestUser.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/components/dialogs/ManifestGroup/UserListSelect.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/load/SlotCard.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/screens/authenticated/load/ActionButton.tsx","app/screens/authenticated/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/load/Header.tsx","app/screens/authenticated/load/InfoGrid.tsx","app/api/hooks/useQueryLoad.ts","app/api/hooks/useMutationDeleteSlot.ts","app/screens/authenticated/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/layout/ScrollableScreen.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/weather_conditions/WindScreen.tsx","app/navigation/SetupWarning.tsx","app/navigation/AppBar.tsx","app/hooks/usePalette.ts","app/screens/authenticated/manifest/GetStarted.tsx","app/screens/authenticated/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/manifest/LoadCard/Small/Card.tsx","app/components/layout/SwipeActions.tsx","app/screens/authenticated/manifest/LoadCard/Large/Card.tsx","app/api/hooks/useMutationCreateLoad.ts","app/components/notifications/index.ts","app/api/hooks/useQueryDropzoneUsers.ts","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/forms/load/LoadForm.tsx","app/components/layout/DialogOrSheet.web.tsx","app/components/dialogs/Load.tsx","app/screens/authenticated/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/manifest/ManifestScreen.tsx","app/utils/checkDropzoneSetupComplete.ts","app/screens/authenticated/manifest/ManifestGroupScreen.tsx","app/screens/authenticated/manifest/ManifestGroupUserSelectScreen.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/components/forms/credits/CreditsForm.tsx","app/components/dialogs/CreditsDialog/Credits.web.tsx","app/api/hooks/useMutationCreateRig.ts","app/api/hooks/useMutationUpdateRig.tsx","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/forms/user/UserForm.tsx","app/api/hooks/useDropzoneUser.ts","app/components/dialogs/User.tsx","app/api/hooks/useDropzoneUserProfile.ts","app/screens/authenticated/profile/UserInfo/Header.tsx","app/screens/authenticated/profile/UserInfo/InfoGrid.tsx","app/components/Badge.tsx","app/api/hooks/useMutationRevokePermission.ts","app/api/hooks/useMutationGrantPermission.ts","app/screens/authenticated/profile/UserInfo/PermissionBadges.tsx","app/screens/authenticated/profile/SlotCard.tsx","app/screens/authenticated/profile/ProfileScreen.tsx","app/api/hooks/useNotifications.ts","app/screens/authenticated/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/NotificationsScreen.tsx","app/components/UserAvatar.tsx","app/screens/authenticated/transactions/OrderCard.tsx","app/screens/authenticated/transactions/TransactionsScreen.tsx","app/screens/authenticated/equipment/RigCard.tsx","app/screens/authenticated/equipment/EquipmentScreen.tsx","app/screens/authenticated/settings/SettingsScreen.tsx","app/api/hooks/useMutationCreateTicketType.ts","app/api/hooks/useMutationUpdateTicketType.ts","app/components/forms/ticket_type/TicketTypeForm.tsx","app/components/dialogs/TicketType.tsx","app/screens/authenticated/ticket_types/TicketTypesScreen.tsx","app/api/hooks/useMutationUpdateDropzone.ts","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/dropzones/UpdateDropzoneScreen.tsx","app/components/forms/plane/PlaneForm.tsx","app/components/dialogs/Plane.tsx","app/screens/authenticated/planes/PlanesScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/settings/RigInspectionTemplateScreen.tsx","app/screens/authenticated/settings/DropzoneRigsScreen.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/authenticated/settings/DropzonePermissionScreen.tsx","app/screens/authenticated/settings/DropzoneMasterLogScreen.tsx","app/components/forms/extra/ExtraForm.tsx","app/screens/authenticated/extras/UpdateExtraScreen.tsx","app/api/hooks/useMutationCreateExtra.ts","app/api/hooks/useMutationUpdateExtra.ts","app/components/dialogs/TicketTypeExtra.tsx","app/screens/authenticated/extras/ExtrasScreen.tsx","app/screens/authenticated/transactions/TransactionCard.tsx","app/screens/authenticated/transactions/OrderScreen.tsx","app/screens/authenticated/transactions/DropzoneTransactionsScreen.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/screens/authenticated/rig/RigInspectionScreen.tsx","app/navigation/tabs/manifest.tsx","app/components/forms/ghost/GhostForm.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/users/UsersScreen.tsx","app/screens/authenticated/users/AppBar.tsx","app/navigation/tabs/users.tsx","app/navigation/tabs/notifications.tsx","app/navigation/AnimatedTabBar.web.tsx","app/navigation/Authenticated.tsx","app/screens/authenticated/dropzones/DropzonesScreen.tsx","app/navigation/LimboRoutes.tsx","app/components/GradientText.web.tsx","app/components/navigation_wizard/Step.tsx","app/components/navigation_wizard/Dots.tsx","app/components/navigation_wizard/Wizard.tsx","app/screens/unauthenticated/signup/wizard/steps/Password.tsx","app/screens/unauthenticated/signup/wizard/steps/Email.tsx","app/screens/unauthenticated/signup/wizard/steps/PasswordConfirmation.tsx","app/screens/unauthenticated/signup/wizard/steps/Done.tsx","app/screens/unauthenticated/signup/wizard/SignupWizard.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/hooks/useMutationSignUp.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/navigation/Unauthenticated.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationCreatePlane.tsx","app/api/hooks/useMutationUpdatePlane.tsx","app/screens/authenticated/dropzone_wizard/steps/Name.tsx","app/components/input/card_select/CardSelect.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/screens/authenticated/dropzone_wizard/steps/Federation.tsx","app/screens/authenticated/dropzone_wizard/steps/Location.web.tsx","app/screens/authenticated/dropzone_wizard/steps/Aircraft.tsx","app/screens/authenticated/dropzone_wizard/steps/Theming.tsx","app/screens/authenticated/dropzone_wizard/steps/Done.tsx","app/screens/authenticated/dropzone_wizard/steps/Permissions.tsx","app/screens/authenticated/dropzone_wizard/steps/TicketType.tsx","app/screens/authenticated/dropzone_wizard/DropzoneWizard.tsx","app/screens/authenticated/user_wizard/steps/Federation.tsx","app/screens/authenticated/user_wizard/steps/FederationNumber.tsx","app/screens/authenticated/user_wizard/steps/RealName.tsx","app/screens/authenticated/user_wizard/steps/Nickname.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/screens/authenticated/user_wizard/steps/License.tsx","app/screens/authenticated/user_wizard/steps/Rig.tsx","app/screens/authenticated/user_wizard/steps/ReserveRepack.tsx","app/screens/authenticated/user_wizard/steps/AskForRig.tsx","app/screens/authenticated/user_wizard/steps/Wingloading.tsx","app/screens/authenticated/user_wizard/steps/Done.tsx","app/screens/authenticated/user_wizard/UserWizardScreen.tsx","app/screens/unauthenticated/signup/ConfirmUserScreen.tsx","app/api/hooks/useQueryDropzones.ts","app/navigation/drawer/Drawer.tsx","app/navigation/RootNavigator.tsx","app/Entrypoint.tsx","app/hooks/useCachedResources.ts"],"names":["Map","props","width","height","position","children","center","coords","shape","interactive","onDragEnd","isLoaded","useJsApiLoader","googleMapsApiKey","id","containerStyle","mapStyle","map","React","onLoad","component","a","async","current","Location","status","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","panDelayed","lat","lng","console","log","rootLayout","setRootLayout","onLayout","nativeEvent","layout","style","borderRadius","undefined","overflow","top","y","left","x","pointerEvents","mapContainerStyle","options","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","mapTypeId","degreesToRadians","degrees","Math","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","getPointOnCircle","opts","radius","offsetX","offsetY","sin","module","exports","Dimensions","get","styles","StyleSheet","create","container","paddingHorizontal","alignItems","paddingLeft","paddingRight","degreeLabel","textAlign","textShadowColor","textShadowRadius","textShadowOffset","fontSize","color","content","flexDirection","iconContainer","borderWidth","borderStyle","borderColor","alignSelf","justifyContent","MAP_SIZE","CENTER_Y","CENTER_X","jumpRun","originX","originY","origin","setOrigin","opacity","Animated","Value","planePosition","planeAnimation","loop","timing","duration","toValue","useNativeDriver","resetBeforeIteration","onMountRotatableView","event","start","animate","stop","reset","planeStartPosition","View","transform","rotate","backgroundColor","interpolate","inputRange","outputRange","scaleX","translateY","name","size","Text","round","b","isEqual","Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","Wrapper","absoluteFill","LoadState","ModerationRole","NotificationType","OrderState","Permission","SellableItemTypes","TransactionStatus","TransactionType","WalletableTypes","LottieView","DropzoneWizardStep","initialState","original","open","fields","amount","value","error","transactionType","Deposit","message","createSlice","reducers","setField","state","action","payload","field","setFieldError","setOpen","federation","secondaryColor","primaryColor","banner","isCreditSystemEnabled","isPublic","requestPublication","Object","keys","forEach","key","payloadKey","typedKey","setOriginal","role","expiresAt","cost","ticketTypes","gca","dispatchAt","isOpen","loadMaster","pilot","plane","maxSlots","exitWeight","email","phone","license","setFederation","registration","minSlots","hours","nextMaintenanceHours","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","idx","setFields","JSON","parse","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","passengerName","passengerExitWeight","users","setFromSlots","slot","Number","rigId","find","i","setDropzoneUsers","dzUser","availableRigs","user","altitude","allowManifestingSelf","isTandem","apfNumber","nickname","rigs","dropzone","userFederations","uid","temperature","exitSpotMiles","offsetDirection","winds","credits","extra","ghost","rigInspection","rigInspectionTemplate","manifest","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","currentIndex","completed","Name","Federation","Aircraft","Tickets","Branding","setIndex","complete","skipRigSetup","login","signup","dropzoneWizard","userWizard","image","close","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","expoPushToken","theme","palette","main","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setPermissions","setPrimaryColor","darken","hex","lighten","setAccentColor","setDropzone","toggleDarkMode","logout","queue","hideSnackbar","newQueue","showSnackbar","push","persistConfig","storage","default","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","notifications","notificationSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppUpdate","overlay","setOverlay","loading","setLoading","animation","dispatch","onUpdate","play","Update","isNew","isUpdateAvailable","isAvailable","flex","blur","intensity","title","ref","source","Button","disabled","button","mode","onPress","absoluteFillObject","fontWeight","bottom","Apollo","httpBatchLink","BatchHttpLink","batchDebounce","batchMax","uri","Constants","urls","url","root","errorLink","onError","graphQLErrors","networkError","operation","response","some","extensions","code","variant","process","EXPO_ENV","locations","path","nodes","stringify","authLink","setContext","_","headers","accessToken","Authorization","tokenType","client","ApolloClient","link","concat","RetryLink","cache","InMemoryCache","ApolloProvider","ImageViewer","mainSrc","onCloseRequest","AnimationState","slice","Notifications","successAnimation","closed","animationState","setAnimationState","notification","length","opening","Toast","show","onHide","text1","capitalize","text2","type","autoPlay","speed","onAnimationFinish","waiting","setTimeout","lottieDoneAnimation","setRef","autoHide","visibilityTime","prefixes","Linking","config","confirm","Authenticated","HomeScreen","LoadScreen","PackingScreen","ProfileScreen","SetupScreen","Limbo","DropzonesScreen","CreateDropzoneScreen","Unauthenticated","LoginScreen","SignUpScreen","NotFoundScreen","navigation","TouchableOpacity","replace","linkText","padding","marginTop","paddingVertical","defaultOptions","DropzoneEssentialsFragmentDoc","gql","DropzoneDetailedFragmentDoc","CurrentUserEssentialsFragmentDoc","CurrentUserDetailedFragmentDoc","DropzoneExtensiveFragmentDoc","SlotFragmentDoc","LoadFragmentDoc","TransactionFragmentDoc","OrderFragmentDoc","RigEssentialsFragmentDoc","UserRigDetailedFragmentDoc","ConfirmUserDocument","CreateOrderDocument","CreateRigDocument","FinalizeLoadDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","UpdateRigDocument","UserSignUpDocument","QueryDropzoneDocument","DropzoneTransactionsDocument","CurrentUserPermissionsDocument","isRequired","pattern","isEmail","RegExp","isNumeric","validates","callback","createMutation","mutation","getPayload","fieldErrorMap","validators","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","variables","mopts","hasErrors","variable","validator","test","validate","result","data","fieldErrors","errors","requestAnimationFrame","updateUser","licenseId","useCurrentDropzone","dropzoneId","pushToken","useQuery","earliestTimestamp","startOfDay","Date","getTime","fetchPolicy","mutationUpdateUser","useMutationUpdateUser","userId","remoteToken","localToken","called","useRestriction","permission","useCurrentUserPermissionsLazyQuery","execute","includes","QUERY_PERMISSION_USER","GCAChip","small","assignedColor","onSelect","useTheme","onSurface","isMenuOpen","setMenuOpen","UpdateLoad","Menu","onDismiss","visible","anchor","Chip","icon","selectedColor","marginHorizontal","textStyle","dropzoneUsers","edges","edge","Item","node","LoadMasterChip","slots","allowed","QUERY_DROPZONE_USERS","PilotChip","QUERY_PLANES","PlaneChip","planes","NumberField","onChangeValue","onChangeText","rest","match","numbers","TextInput","keyboardType","right","Affix","chevrons","affixTopChevron","surface","MaterialCommunityIcons","affixBottomChevron","caretHidden","borderLeftWidth","hairlineWidth","borderBottomWidth","paddingTop","marginRight","createQuery","query","pollInterval","refetch","transformedData","showSnackbarErrors","items","selected","isSelected","isDisabled","renderItemLabel","onChangeSelected","autoSelectFirst","flexWrap","margin","xorBy","previous","next","pick","ChipSelectSkeleton","rows","isLoading","marginBottom","marginVertical","useAllowedJumpTypes","allowedJumpTypes","jumpTypes","JumpTypeChipSelect","onLoadingStateChanged","userIds","filter","Boolean","Subheader","uniqBy","first","useTicketTypes","TicketTypeChipSelect","onlyPublicTickets","RigTitle","QUERY_RIGS","RigSelect","tandem","useLazyQuery","fetchRigs","onTouchEnd","label","Icon","editable","ManifestForm","allowedToManifestOthers","UpdateUserSlot","CreateUserSlot","HelperText","ScrollView","horizontal","ticketAddons","Divider","newValue","toString","MUTATION_CREATE_SLOT","ManifestUserDialog","globalState","mutationCreateSlot","mutationData","onManifest","jumpTypeId","extraIds","loadId","ticketTypeId","dropzoneUserId","createSlot","Portal","Dialog","maxHeight","ProgressBar","indeterminate","Title","ScrollArea","Actions","onClose","useQueryDropzoneUsersDetails","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","Card","elevation","Image","Content","toFixed","row","rowFirst","rowLast","num","SlotForm","canManifestOthers","slotUser","flexShrink","newRig","useThemeColor","colorName","colorFromProps","Colors","lightColor","darkColor","otherProps","NoResults","subtitle","empty","Paragraph","fab","UserListSelect","search","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","Searchbar","placeholder","contentContainerStyle","description","Checkbox","onNext","scrollView","MUTATION_CREATE_SLOTS","mutationCreateSlots","tabIndex","setTabIndex","userGroup","slotUserWithRig","omit","createSlots","testID","defaultIndex","onChangeIndex","userListContainer","paddingBottom","flexGrow","buttonContainer","contentContainer","sheet","sheetHeader","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","SlotCard","onDelete","hasPassenger","flatten","card","Badge","e","preventDefault","infoChip","chipText","wingLoading","chip","passengerTitle","passengerChip","updateLoad","pilotId","gcaId","planeId","loadMasterId","ActionButton","isExpanded","setExpanded","useFinalizeLoadMutation","mutationFinalizeLoad","mutationUpdateLoad","useMutationUpdateLoad","updateCall","minutes","dispatchTime","addMinutes","ceil","BoardingCall","Open","updateLoadState","onLanded","Landed","hasLicense","hasMembership","hasExitWeight","hasCredits","canUpdateLoad","canManifestSelf","CreateSlot","isFull","showManifestButton","showGroupIcon","createCallAction","callActions","manifestActions","workflowActions","Cancelled","InFlight","buttonActions","FAB","Group","fabStyle","marginLeft","onStateChange","CountdownCircleTimer","select","ios","then","android","web","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","UserHeader","onEdit","canEdit","LinearGradient","IconButton","avatarContainer","isAfter","titleContainer","loadNumber","paragraph","InfoGrid","divider","titleStyle","bold","descriptionStyle","verticalDivider","deleteSlot","AvailableSlotCard","SlotSkeleton","route","useRoute","useQueryLoad","params","detailedLoad","mutationDeleteSlot","useMutationDeleteSlot","onDeleteSlot","updatePilot","updateGCA","updatePlane","updateLoadMaster","lm","canEditSelf","UpdateSlot","canEditOthers","canRemoveSelf","DeleteSlot","canRemoveOthers","DeleteUserSlot","useNavigation","Array","from","availableSlots","occupiedSlots","useWindowDimensions","numColumns","floor","contentWidth","initialLoading","showsHorizontalScrollIndicator","weight","keyExtractor","refreshing","onRefresh","refreshControl","RefreshControl","renderItem","slotGroup","groupNumber","onSlotGroupPress","navigate","onSlotPress","WizardPagination","paginationIndex","icons","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","count","Wizard","Provider","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","wizardScreen","buttonBack","buttons","maxWidth","WizardScreen","onBack","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","scrollTo","ScrollableScreen","minHeight","WizardCompleteStep","createWeatherCondition","WindRow","direction","onChange","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","minWidth","altitudeOption","alt","strengthCard","onBlur","newSpeed","textField","directionCard","newDir","CARD_STYLE","textAlignVertical","lineHeight","borderBottomLeftRadius","borderBottomRightRadius","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","KeyboardAvoidingView","behavior","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","set","cardTitle","cardValue","slider","sliderControl","wingLoadingCardLeft","wingLoadingCardRight","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","JumpRunSelector","longitude","isDragging","setDragging","rotation","onGestureEvent","setValue","currentCoordinates","angle","onBegan","onEnded","zIndex","bottomDegreeLabel","textInput","location","setLocation","setUsersLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","Winds","goBack","JumpRun","JumpRunScreen","WindScreen","labelStyle","Warning","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","join","QUERY_CURRENT_USER","AppBar","scene","hideWarnings","loadData","Appbar","Header","BackAction","DrawerActions","toggleDrawer","descriptor","headerRight","tintColor","isRigInspected","rigInspections","inspection","isRepackInDate","usePalette","GetStarted","hasPlanes","hasTicketTypes","separator","LoadingCard","LoadCard","initialRecord","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","smallChip","smallChipText","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","translateX","useNativeAnimations","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","hasLanded","DataTable","numeric","isCurrentUser","Row","Cell","slotText","v","differenceInMinutes","createLoad","DropzoneUserChipSelect","requiredPermissions","useQueryDropzoneUsers","getItemLabel","PlaneChipSelect","LoadForm","DialogOrSheet","buttonLabel","buttonAction","dismissable","LoadDialog","useMutationCreateLoad","snackbar","snapPoints","onSave","WeatherBoard","conditions","currentConditions","date","createdAt","canUpdate","UpdateWeatherConditions","hasWeatherConditions","easing","Easing","inOut","ease","onLongPress","ImageBackground","nightBackground","weatherBackground","resizeMode","cell","FontAwesome","format","windboard","header","orderBy","noData","noDataLabel","ManifestScreen","manifestScreen","setup","isDisplayOptionsOpen","setDisplayOptionsOpen","isSetupCheckComplete","fetchMore","isFocused","useIsFocused","dropzoneWizardIndex","values","isComplete","checkDropzoneSetupComplete","setOptions","isSetupComplete","canCreateLoad","CreateLoad","hasRigInspection","hasReserveInDate","cardWidth","loads","ListHeaderComponent","ListEmptyComponent","ManifestGroupScreen","screen","ManifestGroupUserSelectScreen","Android","setParams","DatePicker","timestamp","selectedDays","onDayClick","QUERY_ROLES","RoleSelect","required","toUpperCase","roles","DropzoneUserForm","canUpdateRole","GrantPermission","newRole","time","MUTATION_EDIT_DROPZONE_USER","DropzoneUserDialog","mutationUpdateDropzoneUser","createData","userRoleId","updateDropzoneUser","CreditsForm","currentCredits","subtotal","useCreateOrderMutation","mutationCreateOrder","seller","Dropzone","DropzoneUser","buyer","createOrder","createRig","updateRig","RigForm","showTypeSelect","canCreateRigs","CreateRig","RigDialog","useMutationUpdateRig","useMutationCreateRig","onDialogClose","QUERY_LICENSES","LicenseChipSelect","federationId","licenses","QUERY_FEDERATIONS","FederationSelect","federations","QUERY_DROPZONE_USER","useDropzoneUser","UpdateUserDialog","joinFederation","refetchQueries","parseFloat","QUERY_DROPZONE_USER_PROFILE","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","textColor","primaryDark","TouchableRipple","openURL","innerChip","iconName","actAsDZSO","actAsGCA","actAsLoadMaster","actAsPilot","actAsRigInspector","revokePermission","permissionName","grantPermission","PermissionBadges","canGrantPermission","useMutationRevokePermission","useMutationGrantPermission","badges","ActAsPilot","ActAsDzso","ActAsGca","ActAsRigInspector","ActAsLoadMaster","shouldShowBadge","update","c","readQuery","updatedList","writeQuery","shouldUpdate","updatedGcaList","newData","transaction","transactionContent","Caption","transactionTitle","transactionDescription","avatarIcon","MUTATION_UPDATE_IMAGE","isSelf","useDropzoneUserProfile","ImagePicker","onPickImage","mediaTypes","Images","allowsEditing","aspect","quality","base64","canAddTransaction","CreateUserTransaction","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","onCloseRigForm","onUserSheetClose","windowDimensions","wrappingHeaderItemWidth","wrappingHeader","wrappingHeaderItem","chipTitle","QUERY_DROPZONE_USER_NOTIFICATIONS","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","addSuffix","ManifestedNotification","initial","resource","BoardingCallNotification","getIcon","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","useNotifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","UserAvatar","initals","split","n","OrderCard","order","showAvatar","__typename","orderContent","orderTitle","orderDescription","TransactionsScreen","firstName","flatList","orders","RigCard","onSuccessfulImageUpload","isUploading","setUploading","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","textRow","inspectedBy","insp","isOk","SettingsScreen","canUpdateDropzone","UpdateDropzone","canUpdateRigInspectionTemplate","UpdateFormTemplate","Section","createTicketType","updateTicketType","QUERY_EXTRAS","ALTITUDE_LABEL_MAP","TicketTypeForm","TicketTypeDialog","useMutationCreateTicketType","useMutationUpdateTicketType","QUERY_TICKET_TYPE","MUTATION_UPDATE_TICKET_TYPE","MUTATION_DELETE_TICKET_TYPE","TicketTypesScreen","form","mutationUpdateTicketType","mutationDeleteTicketType","canCreateTicketTypes","CreateTicketType","deleteTicketType","Switch","onValueChange","updateDropzone","ColorPickerDialog","sliderComponent","SliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","colorBox","ColorPicker","helperText","isCustomColor","isDialogOpen","setDialogOpen","Surface","manipulate","MaterialIcons","previewContainer","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","previewTabBar","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","PhonePreview","WebPreview","markerFixed","myLocation","LocationWizardStep","markerSize","labelSize","setCenter","region","isAnimating","setAnimating","fadeOut","fadeIn","setCoordinateFade","defaultZoom","onDragStart","r","DropzoneForm","outsideLoading","getDocumentAsync","multiple","skeletonCard","Cover","Phone","Web","skeletonCardColorPicker","skeletonCardCheckbox","descriptionNumberOfLines","iconProps","extraProps","moderationRole","subheader","UpdateDropzoneScreen","mutationUpdateDropzone","useMutationUpdateDropzone","hasError","MUTATION_UPDATE_PLANE","MUTATION_CREATE_PLANE","CreatePlaneScreen","mutationCreatePlane","mutationUpdatePlane","createPlane","MUTATION_DELETE_PLANE","PlanesScreen","deletePlane","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","RigInspectionItem","canInspect","valueType","RigInspectionTemplateForm","newItem","setNewItem","fabOpen","setFabOpen","QUERY_RIG_INSPECTION","MUTATION_UPDATE_FORM","RigInspectionTemplateScreen","mutationUpdateForm","updateForm","formId","QUERY_DROPZONE_RIGS","MUTATION_UPDATE_RIG","DropzoneRigsScreen","rigForm","mutationUpdateRig","updateData","canCreateRig","CreateDropzoneRig","MUTATION_UPDATE_ROLE","PermissionListItem","canChangePermissions","mutationUpdatePermission","roleId","optimisticResponse","updateRole","QUERY_DROPZONE_PERMISSIONS","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","masterLog","QUERY_TICKET_TYPES","ExtraForm","ticket","MUTATION_UPDATE_EXTRA","UpdateExtraScreen","mutationUpdateExtra","ticketTypeIds","updateExtra","createExtra","TicketTypeExtraDialog","useMutationCreateExtra","useMutationUpdateExtra","ExtrasScreen","formState","canCreateExtras","CreateExtra","TransactionCard","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","rightStyle","receipts","useDropzoneTransactionsLazyQuery","fetchTransactions","RigInspectionForm","QUERY_RIG_INSPECTIONS","MUTATION_CREATE_RIG_INSPECTION","RigInspectionScreen","mutationCreateRigInspection","record","createRigInspection","mutationResult","currentDz","ins","Manifest","createStackNavigator","ManifestTab","Navigator","screenOptions","headerShown","cardStyle","Screen","initialParams","NotificationsScreen","EquipmentScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","createGhost","exit_weight","CreateGhostDialog","mutationCreateGhost","useMutationCreateGhost","UserCardSkeleton","UsersScreen","ghostForm","canCreateUser","CreateUser","inputContainer","input","onSearch","searchVisible","autoFocus","Settings","SettingsTab","Profile","initialRouteName","BottomTab","createBottomTabNavigator","AnimatedIcon","createAnimatedComponent","AuthenticatedTabBar","Appearance","getColorScheme","canViewUsers","ReadUser","tabConfig","activeColor","inactiveColor","tabs","animatedFocus","iconActive","Users","tabBar","preset","inactiveOpacity","inactiveScale","tabBarOptions","activeTintColor","inactiveBackgroundColor","backdrop","activeBackgroundColor","inactiveTintColor","showLabel","adaptive","borderTopWidth","borderTopColor","tabBarLabel","focused","tabBarIcon","unmountOnBlur","NotificationsTab","UsersTab","QUERY_DROPZONES","SafeAreaView","FlatList","dropzones","shouldPushRoute","dzIcon","Stack","GradientText","Fields","fieldContent","Step","dots","Dots","activeDot","inactiveDot","WizardRoot","WizardModal","steps","transitionSpec","TransitionSpecs","TransitionIOSSpec","headerStyleInterpolator","HeaderStyleInterpolators","forFade","cardStyleInterpolator","layouts","overlayStyle","screenProps","nextIndex","nextIndexFactor","backIndexFactor","PasswordStep","textContentType","secureTextEntry","passwordRules","EmailStep","newText","PasswordConfirmationStep","DoneStep","SignupWizard","useUserSignUpMutation","onSignUp","validateEmail","Error","validatePassword","onClickSignUp","userSignUp","MUTATION_LOG_IN","mutationLogin","onLogin","emailRegex","userLogin","authenticatable","logo","onSubmitEditing","textButtonLabel","textButton","SignupScreen","useMutationSignUp","createDropzone","active","itemSelected","FederationCardSelect","latitudeDelta","longitudeDelta","AircraftWizardScreen","setMaxSlots","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","onSlidingComplete","ThemingStep","Done","PermissionWizardScreen","dropzoneForm","queryRoles","TicketTypeWizardScreen","price","setPrice","DropzoneSetupScreen","aircraft","mutationCreateDropzone","useMutationCreateDropzone","useMutationCreatePlane","useMutationUpdatePlane","mutationCreateTicketType","onNameNext","onFederationNext","onThemingNext","camelize","onAircraftNext","onTicketTypeNext","NameStep","FederationStep","LocationStep","AircraftStep","TicketTypeStep","stepProps","FederationWizardSceen","RealName","UserInfoScreen","LicenseCardSelect","RigWizardScreen","isOtherMake","setIsOtherMake","ReserveRepackStep","AskForRigStep","WingloadingWizardScreen","userForm","setCanopySize","setWeight","w","UserWizardScreen","useUpdateRigMutation","useCreateRigMutation","mutationCreateRig","onNicknameNext","toLowerCase","userFederation","onFederationNumberNext","onLicenseNext","onRigNext","onReserveRepackNext","onWingloadingNext","RealNameStep","NicknameStep","FederationNumberStep","LicenseStep","RigStep","WingloadingStep","errorIcon","ConfirmUserScreen","useConfirmUserMutation","confirmUser","setError","token","userConfirmRegistrationWithToken","catch","DrawerMenu","useQueryDropzones","routeName","getFocusedRouteNameFromRoute","navState","dangerouslyGetState","subNavState","routes","subNavRoutes","subNavSubState","subRouteName","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","closeDrawer","profileHeader","Drawer","createDrawerNavigator","RootNavigator","drawerContent","AuthenticatedRoutes","LimboRoutes","UnauthenticatedRoutes","UserSetupWizard","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","isDevice","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","registerForPushNotificationsAsync","request","body","addEventListener","removeEventListener","fallback","NavigationContainer","linking","LinkingConfiguration","StatusBar","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","Sentry","dsn","SENTRY_DSN","enableInExpoDevelopment","debug","registerRootComponent","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","fontsLoaded","SplashScreen","Ionicons","font","useCachedResources","ActivityIndicator"],"mappings":"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","file":"static/js/app.11eb7d08.chunk.js","sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n/* eslint-disable import/no-unresolved */\nimport { GOOGLE_MAPS_WEB } from '@env';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { calculateLatLngDelta } from '../../utils/calculateLatLngDelta';\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const { width, height, position, children, center, coords, shape, interactive, onDragEnd } =\n    props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_WEB,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n\n  const onLoad = React.useCallback(async (component: GoogleMap) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = component;\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      // const location = await Location.getCurrentPositionAsync({});\n      // const lat = coords?.lat || location.coords.latitude;\n      // const lng = coords?.lng || location.coords.longitude;\n    } catch (error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const bounds = new window.google.maps.LatLngBounds();\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current?.fitBounds(bounds);\n    }\n  }, []);\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const delayedPanningTimer = React.useRef<ReturnType<typeof setTimeout>>();\n\n  const panDelayed = React.useCallback((lat: number, lng: number) => {\n    if (delayedPanningTimer) {\n      // clearTimeout(delayedPanningTimer.current);\n      // delayedPanningTimer.current = null;\n    }\n    return;\n    if (map.current?.panTo) {\n      console.log('PANNING', lat, lng);\n      map.current?.panTo?.({ lat, lng });\n\n      const latDelta = calculateLatLngDelta(lat, 0.5);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const bounds = new window.google.maps.LatLngBounds(\n        { lat: lat - latDelta, lng: lng - latDelta },\n        { lat: lat + latDelta, lng: lng + latDelta }\n      );\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current?.fitBounds(bounds);\n    } else {\n      console.log('DELAYING PANNING TO ', lat, lng, map.current);\n      delayedPanningTimer.current = setTimeout(() => panDelayed(lat, lng), 500);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (center) {\n      console.log({ center, coords });\n      panDelayed(center.lat, center.lng);\n    }\n  }, [center, coords, panDelayed]);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  return !isLoaded ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        // provider={PROVIDER_GOOGLE}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          mapTypeControl: false,\n          zoomControl: false,\n          mapTypeId: 'satellite',\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from '../../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../../../components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: MAP_SIZE / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons name=\"airplane\" size={20} color=\"#ffffff\" />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","module.exports = __webpack_public_path__ + \"static/media/logo-black.36bb8461.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/pattern.9f57eead.png\";","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function Wrapper({ children }: { children: React.ReactNode }) {\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type AnyResource = {\n  id: Scalars['ID'];\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateExtra */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateRigInspection */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteDropzone */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteLoad */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeletePlane */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteSlot */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteTicket */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  dropzoneUsers: DropzoneUserConnection;\n  extras: Array<Extra>;\n  federation: Federation;\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  isPublic: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  loads: LoadConnection;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  requestPublication: Scalars['Boolean'];\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['Int'];\n  userRoles: Array<UserRole>;\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUsersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  permissions?: Maybe<Array<Permission>>;\n  search?: Maybe<Scalars['String']>;\n  licensed?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  name: Scalars['String'];\n  banner?: Maybe<Scalars['String']>;\n  federationId: Scalars['Int'];\n  requestPublication?: Maybe<Scalars['Boolean']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  primaryColor?: Maybe<Scalars['String']>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  isCreditSystemEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['Int'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['Int'];\n  user: User;\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  expiresAt?: Maybe<Scalars['Int']>;\n  credits?: Maybe<Scalars['Float']>;\n  userRoleId?: Maybe<Scalars['Int']>;\n};\n\nexport type Extra = SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type ExtraInput = {\n  name?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  ticketTypeIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  id: Scalars['Int'];\n  state: LoadState;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of FinalizeLoad */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['Int'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FormTemplateInput = {\n  name?: Maybe<Scalars['String']>;\n  definition?: Maybe<Scalars['String']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n};\n\nexport type GhostInput = {\n  name: Scalars['String'];\n  email: Scalars['String'];\n  phone?: Maybe<Scalars['String']>;\n  exitWeight: Scalars['Float'];\n  dropzoneId: Scalars['Int'];\n  roleId: Scalars['Int'];\n  licenseId?: Maybe<Scalars['Int']>;\n  federationNumber?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of GrantPermission */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['Int'];\n  federation?: Maybe<Federation>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['Int'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['Int'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  isOpen?: Maybe<Scalars['Boolean']>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  pilotId?: Maybe<Scalars['Int']>;\n  planeId?: Maybe<Scalars['Int']>;\n  gcaId?: Maybe<Scalars['Int']>;\n  loadMasterId?: Maybe<Scalars['Int']>;\n  state?: Maybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** open */\n  Open = 'open',\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum ModerationRole {\n  /** user */\n  User = 'user',\n  /** support */\n  Support = 'support',\n  /** moderator */\n  Moderator = 'moderator',\n  /** administrator */\n  Administrator = 'administrator'\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteTicketType?: Maybe<DeleteTicketPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<UserRegisterPayload>;\n  userResendConfirmation?: Maybe<UserResendConfirmationPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordReset?: Maybe<UserSendPasswordResetPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userSignUp?: Maybe<UserSignUpPayload>;\n  userUpdatePassword?: Maybe<UserUpdatePasswordPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  email: Scalars['String'];\n  confirmUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSignUpArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmSuccessUrl?: Maybe<Scalars['String']>;\n  phone: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  name: Scalars['String'];\n  licenseId?: Maybe<Scalars['Int']>;\n  pushToken?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  currentPassword?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** system */\n  System = 'system',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** user_manifested */\n  UserManifested = 'user_manifested',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  title?: Maybe<Scalars['String']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: WalletInput;\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: WalletInput;\n  /** Total amount of the order */\n  amount: Scalars['Int'];\n  sellableItem?: Maybe<SellableItemInput>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport enum OrderState {\n  /** pending */\n  Pending = 'pending',\n  /** completed */\n  Completed = 'completed',\n  /** refunded */\n  Refunded = 'refunded',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  /** updateDropzone */\n  UpdateDropzone = 'updateDropzone',\n  /** deleteDropzone */\n  DeleteDropzone = 'deleteDropzone',\n  /** updateWeatherConditions */\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  /** createLoad */\n  CreateLoad = 'createLoad',\n  /** updateLoad */\n  UpdateLoad = 'updateLoad',\n  /** deleteLoad */\n  DeleteLoad = 'deleteLoad',\n  /** readLoad */\n  ReadLoad = 'readLoad',\n  /** createSlot */\n  CreateSlot = 'createSlot',\n  /** updateSlot */\n  UpdateSlot = 'updateSlot',\n  /** deleteSlot */\n  DeleteSlot = 'deleteSlot',\n  /** createUserSlot */\n  CreateUserSlot = 'createUserSlot',\n  /** createUserSlotWithSelf */\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  /** updateUserSlot */\n  UpdateUserSlot = 'updateUserSlot',\n  /** deleteUserSlot */\n  DeleteUserSlot = 'deleteUserSlot',\n  /** createStudentSlot */\n  CreateStudentSlot = 'createStudentSlot',\n  /** updateStudentSlot */\n  UpdateStudentSlot = 'updateStudentSlot',\n  /** deleteStudentSlot */\n  DeleteStudentSlot = 'deleteStudentSlot',\n  /** createTicketType */\n  CreateTicketType = 'createTicketType',\n  /** updateTicketType */\n  UpdateTicketType = 'updateTicketType',\n  /** deleteTicketType */\n  DeleteTicketType = 'deleteTicketType',\n  /** createExtra */\n  CreateExtra = 'createExtra',\n  /** updateExtra */\n  UpdateExtra = 'updateExtra',\n  /** deleteExtra */\n  DeleteExtra = 'deleteExtra',\n  /** readExtra */\n  ReadExtra = 'readExtra',\n  /** createPlane */\n  CreatePlane = 'createPlane',\n  /** updatePlane */\n  UpdatePlane = 'updatePlane',\n  /** deletePlane */\n  DeletePlane = 'deletePlane',\n  /** createRig */\n  CreateRig = 'createRig',\n  /** updateRig */\n  UpdateRig = 'updateRig',\n  /** deleteRig */\n  DeleteRig = 'deleteRig',\n  /** readRig */\n  ReadRig = 'readRig',\n  /** createDropzoneRig */\n  CreateDropzoneRig = 'createDropzoneRig',\n  /** updateDropzoneRig */\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  /** deleteDropzoneRig */\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  /** readDropzoneRig */\n  ReadDropzoneRig = 'readDropzoneRig',\n  /** readPermissions */\n  ReadPermissions = 'readPermissions',\n  /** updatePermissions */\n  UpdatePermissions = 'updatePermissions',\n  /** createPackjob */\n  CreatePackjob = 'createPackjob',\n  /** updatePackjob */\n  UpdatePackjob = 'updatePackjob',\n  /** deletePackjob */\n  DeletePackjob = 'deletePackjob',\n  /** readPackjob */\n  ReadPackjob = 'readPackjob',\n  /** createFormTemplate */\n  CreateFormTemplate = 'createFormTemplate',\n  /** updateFormTemplate */\n  UpdateFormTemplate = 'updateFormTemplate',\n  /** deleteFormTemplate */\n  DeleteFormTemplate = 'deleteFormTemplate',\n  /** readFormTemplate */\n  ReadFormTemplate = 'readFormTemplate',\n  /** readUser */\n  ReadUser = 'readUser',\n  /** updateUser */\n  UpdateUser = 'updateUser',\n  /** deleteUser */\n  DeleteUser = 'deleteUser',\n  /** createUser */\n  CreateUser = 'createUser',\n  /** actAsPilot */\n  ActAsPilot = 'actAsPilot',\n  /** actAsLoadMaster */\n  ActAsLoadMaster = 'actAsLoadMaster',\n  /** actAsGCA */\n  ActAsGca = 'actAsGCA',\n  /** actAsDZSO */\n  ActAsDzso = 'actAsDZSO',\n  /** actAsRigInspector */\n  ActAsRigInspector = 'actAsRigInspector',\n  /** createUserTransaction */\n  CreateUserTransaction = 'createUserTransaction',\n  /** readUserTransactions */\n  ReadUserTransactions = 'readUserTransactions',\n  /** grantPermission */\n  GrantPermission = 'grantPermission',\n  /** revokePermission */\n  RevokePermission = 'revokePermission'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots?: Maybe<Scalars['Int']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type PlaneInput = {\n  name?: Maybe<Scalars['String']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  hours?: Maybe<Scalars['Int']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get dropzone details */\n  dropzone: Dropzone;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get ticket addons for a dropzone */\n  extras: Array<Extra>;\n  /** Available federations */\n  federations: Array<Federation>;\n  /** Load base64 images as graphql */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load: Load;\n  /** Get loads */\n  loads: LoadConnection;\n  /** Get planes from a dropzone */\n  planes: Array<Plane>;\n  /** Get ticket types for a dropzone */\n  ticketTypes: Array<TicketType>;\n  userCheckPasswordToken: User;\n  userConfirmAccount: User;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  requestedPublication?: Maybe<Scalars['Boolean']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  allowedForUserId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  dropzoneId: Scalars['Int'];\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  dropzoneId: Scalars['Int'];\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryUserCheckPasswordTokenArgs = {\n  resetPasswordToken: Scalars['String'];\n  redirectUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryUserConfirmAccountArgs = {\n  confirmationToken: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  id?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of RevokePermission */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n  user?: Maybe<User>;\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\nexport type RigInput = {\n  name?: Maybe<Scalars['String']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  maintainedAt?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  userId?: Maybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  canopySize?: Maybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['Int'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type RigInspectionInput = {\n  dropzoneId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  definition?: Maybe<Scalars['String']>;\n  isOk?: Maybe<Scalars['Boolean']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type SellableItemInput = {\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  type: SellableItemTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum SellableItemTypes {\n  Pack = 'pack',\n  TicketType = 'ticketType',\n  Extra = 'extra',\n  Slot = 'slot'\n}\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  user?: Maybe<User>;\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUserId?: Maybe<Scalars['Int']>;\n  ticketTypeId?: Maybe<Scalars['Int']>;\n  jumpTypeId?: Maybe<Scalars['Int']>;\n  loadId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n  userGroup?: Maybe<Array<SlotUser>>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type SlotUser = {\n  id: Scalars['Int'];\n  exitWeight: Scalars['Float'];\n  rigId?: Maybe<Scalars['Int']>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type TicketTypeInput = {\n  currency?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n  altitude?: Maybe<Scalars['Int']>;\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  isTandem?: Maybe<Scalars['Boolean']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser: DropzoneUser;\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum TransactionStatus {\n  Reserved = 'reserved',\n  Completed = 'completed',\n  Cancelled = 'cancelled'\n}\n\nexport enum TransactionType {\n  Purchase = 'purchase',\n  Sale = 'sale',\n  Deposit = 'deposit',\n  Withdrawal = 'withdrawal',\n  Refund = 'refund'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  id: Scalars['Int'];\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzone */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateExtra */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  id: Scalars['Int'];\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateLoad */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateNotification */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  id: Scalars['Int'];\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdatePlane */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  permission: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRole */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  id: Scalars['Int'];\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateSlot */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  id: Scalars['Int'];\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateTicket */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateUser */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['Int'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federationId: Scalars['Int'];\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  licenseId?: Maybe<Scalars['Int']>;\n};\n\nexport type UserInput = {\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['String']>;\n  apfNumber?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  licenseId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n};\n\n/** Autogenerated return type of UserLogin */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserRegister */\nexport type UserRegisterPayload = {\n  __typename?: 'UserRegisterPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n};\n\n/** Autogenerated return type of UserResendConfirmation */\nexport type UserResendConfirmationPayload = {\n  __typename?: 'UserResendConfirmationPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated return type of UserSendPasswordReset */\nexport type UserSendPasswordResetPayload = {\n  __typename?: 'UserSendPasswordResetPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSignUp */\nexport type UserSignUpPayload = {\n  __typename?: 'UserSignUpPayload';\n  authenticatable?: Maybe<User>;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated return type of UserUpdatePassword */\nexport type UserUpdatePasswordPayload = {\n  __typename?: 'UserUpdatePasswordPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\nexport type WalletInput = {\n  /** Any model with an account, e.g DropzoneUser or Dropzone */\n  type: WalletableTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum WalletableTypes {\n  DropzoneUser = 'dropzoneUser',\n  Dropzone = 'dropzone'\n}\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['Int'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['Int'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  winds?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['Int']>;\n  jumpRun?: Maybe<Scalars['Int']>;\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['String']>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser, Transaction, TransactionType } from '../../../api/schema.d';\n\ntype Fields = Pick<Transaction, 'amount' | 'transactionType' | 'message'>;\n\ninterface IDropzoneEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Transaction[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    amount: {\n      value: null,\n      error: null,\n    },\n    transactionType: {\n      value: TransactionType.Deposit,\n      error: null,\n    },\n    message: {\n      value: '',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/credits',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<DropzoneUser | boolean>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from 'app/api/schema.d';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\nexport type DropzoneFields = Pick<\n  Dropzone,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'isPublic'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n  | 'requestPublication'\n>;\n\ninterface IDropzoneEditState {\n  original: Dropzone | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: Dropzone[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    isPublic: {\n      value: false,\n      error: null,\n    },\n    requestPublication: {\n      value: false,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as Dropzone)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<Dropzone>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as Dropzone)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ntype Fields = Pick<DropzoneUser, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUser[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneUserEditState, action: PayloadAction<boolean | DropzoneUser>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Extra } from '../../../api/schema.d';\n\nexport type ExtraFields = Pick<Extra, 'name' | 'cost' | 'ticketTypes'>;\ninterface IExtraEditState {\n  original: Extra | null;\n  open: boolean;\n  fields: {\n    [K in keyof ExtraFields]-?: {\n      value: Extra[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IExtraEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    ticketTypes: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/extra',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IExtraEditState, action: PayloadAction<boolean | Extra>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.ticketTypes.value = action.payload.ticketTypes;\n        state.fields.cost.value = action.payload.cost;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: IExtraEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Load } from '../../../api/schema.d';\n\nexport type LoadFields = Pick<\n  Load,\n  'name' | 'gca' | 'dispatchAt' | 'isOpen' | 'loadMaster' | 'pilot' | 'maxSlots' | 'plane'\n>;\n\ninterface ILoadEditState {\n  original: Load | null;\n  open: boolean;\n  fields: {\n    [K in keyof LoadFields]-?: {\n      value: Load[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ILoadEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    gca: {\n      value: null,\n      error: null,\n    },\n    dispatchAt: {\n      value: null,\n      error: null,\n    },\n    isOpen: {\n      value: true,\n      error: null,\n    },\n    loadMaster: {\n      value: null,\n      error: null,\n    },\n    pilot: {\n      value: null,\n      error: null,\n    },\n    plane: {\n      value: null,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/load',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ILoadEditState, action: PayloadAction<boolean | Load>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ILoadEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Federation, User, DropzoneUser } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email' | 'license'> &\n  Pick<DropzoneUser, 'role'>;\n\ninterface IGhostEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (state: IGhostEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (state: IGhostEditState, action: PayloadAction<boolean | User>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Plane } from '../../../api/schema.d';\n\nexport type PlaneFields = Pick<\n  Plane,\n  'name' | 'registration' | 'minSlots' | 'maxSlots' | 'hours' | 'nextMaintenanceHours'\n>;\n\ninterface IPlaneEditState {\n  original: Plane | null;\n  open: boolean;\n  fields: {\n    [K in keyof PlaneFields]-?: {\n      value: Plane[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IPlaneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    registration: {\n      value: '',\n      error: null,\n    },\n    minSlots: {\n      value: 0,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n    hours: {\n      value: null,\n      error: null,\n    },\n    nextMaintenanceHours: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'Plane',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IPlaneEditState, action: PayloadAction<boolean | Plane>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.hours.value = action.payload.hours || 0;\n        state.fields.minSlots.value = action.payload.minSlots || 0;\n        state.fields.maxSlots.value = action.payload.maxSlots || 3;\n        state.fields.name.value = action.payload.name || '';\n        state.fields.registration.value = action.payload.registration || '';\n        state.fields.nextMaintenanceHours.value = action.payload.nextMaintenanceHours || 0;\n      }\n    },\n\n    setOriginal: (state: IPlaneEditState, action: PayloadAction<Plane>) => {\n      state.original = action.payload;\n      state.open = true;\n      state.fields.hours.value = action.payload.hours || 0;\n      state.fields.minSlots.value = action.payload.minSlots || 0;\n      state.fields.maxSlots.value = action.payload.maxSlots || 3;\n      state.fields.name.value = action.payload.name || '';\n      state.fields.registration.value = action.payload.registration || '';\n      state.fields.nextMaintenanceHours.value = action.payload.nextMaintenanceHours || 0;\n    },\n\n    reset: (state: IPlaneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig } from '../../../api/schema.d';\n\nexport type RigFields = Pick<\n  Rig,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: Rig | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: Rig[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | Rig>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<Rig>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        console.error('Failed to read rig inspection template', error.message, action.payload);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Slot } from '../../../api/schema.d';\n\nexport type ManifestUserFields = Pick<\n  Slot,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: Slot | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | Slot>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotUser, Slot, DropzoneUser, Rig } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = SlotUser & { rig?: Rig };\n\ninterface IFields extends Pick<Slot, 'jumpType' | 'load' | 'ticketType' | 'extras'> {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (state: ISlotEditState, action: PayloadAction<Slot[]>) => {\n      state.fields.users.value = action.payload.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUser[];\n\n      state.fields.jumpType.value = action.payload.find((i) => i)?.jumpType;\n      state.fields.load.value = action.payload.find((i) => i)?.load || null;\n      state.fields.extras.value = action.payload.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (state: ISlotEditState, action: PayloadAction<DropzoneUser[]>) => {\n      state.fields.users.value = action.payload.map<SlotUser>((dzUser) => ({\n        id: Number(dzUser.id),\n        rigId: Number(dzUser?.availableRigs?.find(({ id }) => id)?.id),\n        exitWeight: Number(dzUser?.user?.exitWeight),\n      })) as SlotUser[];\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketType } from '../../../api/schema.d';\n\nexport type TicketTypeFields = Pick<\n  TicketType,\n  'name' | 'cost' | 'isTandem' | 'allowManifestingSelf' | 'altitude' | 'extras'\n>;\n\ninterface ITicketTypeEditState {\n  original: TicketType | null;\n  open: boolean;\n  fields: {\n    [K in keyof TicketTypeFields]-?: {\n      value: TicketType[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ITicketTypeEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    altitude: {\n      value: 14000,\n      error: null,\n    },\n    allowManifestingSelf: {\n      value: false,\n      error: null,\n    },\n    isTandem: {\n      value: false,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ticketType',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (state: ITicketTypeEditState, action: PayloadAction<TicketType>) => {\n      state.original = action.payload;\n      state.open = true;\n      state.fields.altitude.value = action.payload.altitude || 0;\n      state.fields.cost.value = action.payload.cost || 0;\n      state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n      state.fields.name.value = action.payload.name || '';\n    },\n\n    setOpen: (state: ITicketTypeEditState, action: PayloadAction<boolean | TicketType>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.altitude.value = action.payload.altitude || 0;\n        state.fields.cost.value = action.payload.cost || 0;\n        state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: ITicketTypeEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser, Federation, User } from '../../../api/schema.d';\n\nexport type UserFields = Pick<\n  User,\n  'exitWeight' | 'rigs' | 'name' | 'phone' | 'email' | 'license' | 'apfNumber' | 'nickname'\n>;\n\ninterface IUserEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: User[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (state: IUserEditState, action: PayloadAction<DropzoneUser>) => {\n      state.original = action.payload.user;\n      state.federation.value =\n        action.payload.license?.federation || action.payload?.dropzone?.federation || null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        state.fields.apfNumber.value = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid;\n      }\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneUser).user[typedKey];\n        }\n      });\n    },\n\n    setOpen: (state: IUserEditState, action: PayloadAction<boolean | DropzoneUser>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload.user;\n        state.open = true;\n        state.federation.value =\n          action.payload.license?.federation || action.payload?.dropzone?.federation || null;\n        if (\n          state.federation.value &&\n          action.payload.user?.userFederations?.find(\n            ({ federation }) => federation.id === state.federation.value?.id\n          )?.uid\n        ) {\n          state.fields.apfNumber.value = action.payload.user?.userFederations?.find(\n            ({ federation }) => federation.id === state.federation.value?.id\n          )?.uid;\n        }\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as DropzoneUser).user[typedKey];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherCondition } from '../../../api/schema.d';\n\ntype Fields = Pick<\n  WeatherCondition,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherCondition | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherCondition>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherCondition)[typedKey];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as credits from './credits/slice';\nimport * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as extra from './extra/slice';\nimport * as load from './load/slice';\nimport * as ghost from './ghost/slice';\nimport * as plane from './plane/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as ticketType from './ticket_type/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  credits: credits.initialState,\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  extra: extra.initialState,\n  ghost: ghost.initialState,\n  load: load.initialState,\n  plane: plane.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  ticketType: ticketType.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  credits: credits.default,\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  extra: extra.default,\n  ghost: ghost.default,\n  load: load.default,\n  plane: plane.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  ticketType: ticketType.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUser[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (state: IManifestScreenState, action: PayloadAction<DropzoneUser[]>) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserWizardState {\n  skipRigSetup: boolean;\n}\n\nexport const initialState: IUserWizardState = {\n  skipRigSetup: false,\n};\n\nexport default createSlice({\n  name: 'screens/userWizard',\n  initialState,\n  reducers: {\n    skipRigSetup: (state: IUserWizardState, action: PayloadAction<boolean>) => {\n      state.skipRigSetup = action.payload;\n    },\n  },\n});\n","import * as users from './authenticated/users/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './authenticated/dropzone_wizard/slice';\nimport * as userWizard from './authenticated/user_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  userWizard: userWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n  userWizard: userWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport { Credential, User, Dropzone } from '../api/schema';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: User | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: Dropzone | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<User>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<Dropzone | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    toggleDarkMode: (state: IGlobalState) => {\n      state.isDarkMode = !state.isDarkMode;\n      state.theme = state.isDarkMode ? CombinedDarkTheme : CombinedDefaultTheme;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationState {\n  queue: INotification[];\n}\n\nexport const initialState = { queue: [] } as INotificationState;\nexport default createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    hideSnackbar: (state: INotificationState) => {\n      const [, ...newQueue] = state.queue;\n      state.queue = newQueue;\n    },\n    showSnackbar: (state: INotificationState, action: PayloadAction<INotification>) => {\n      state.queue.push(action.payload);\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\nimport notificationSlice, {\n  initialState as initialStateNotification,\n} from '../components/notifications/slice';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  notifications: initialStateNotification,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  notifications: notificationSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  notifications: notificationSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport LottieView from '../LottieView';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const dispatch = useAppDispatch();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'New version installed' }));\n    }\n  }, [dispatch]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport { RetryLink } from '@apollo/client/link/retry';\nimport * as React from 'react';\nimport * as Update from 'expo-updates';\nimport Constants from 'expo-constants';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const httpBatchLink = React.useMemo(\n    () =>\n      new BatchHttpLink({\n        batchDebounce: true,\n        batchMax: 10,\n        uri:\n          Update.releaseChannel in Constants.manifest?.extra?.urls\n            ? Constants.manifest?.extra?.urls[Update.releaseChannel]\n            : Constants.manifest?.extra?.url,\n      }),\n    []\n  );\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Session expired`,\n              variant: 'error',\n            })\n          );\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`,\n                variant: 'error',\n              })\n            );\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `[Network error]: ${networkError}`,\n              variant: 'error',\n            })\n          );\n        }\n      }),\n    [dispatch]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link: errorLink.concat(authLink).concat(new RetryLink()).concat(httpBatchLink),\n        cache: new InMemoryCache(),\n      }),\n    [authLink, errorLink, httpBatchLink]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import * as React from 'react';\nimport capitalize from 'lodash/capitalize';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport { useAppSelector, useAppDispatch } from '../../state';\nimport LottieView from '../LottieView';\nimport slice from './slice';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\n\nconst { actions } = slice;\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\nconst Notifications = () => {\n  const state = useAppSelector((root) => root.notifications);\n  const dispatch = useAppDispatch();\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(\n    () => (state.queue.length ? state.queue[0] : null),\n    [state.queue]\n  );\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide: () => dispatch(actions.hideSnackbar()),\n        text1: capitalize(notification.variant),\n        text2: notification.message,\n        type: notification.variant || 'success',\n      });\n    }\n  }, [dispatch, notification]);\n\n  return (\n    <>\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            onAnimationFinish={() => {\n              setAnimationState(AnimationState.waiting);\n              setTimeout(() => {\n                dispatch(actions.hideSnackbar());\n                setAnimationState(AnimationState.closed);\n              }, 200);\n            }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast\n        ref={(ref) => Toast.setRef(ref)}\n        autoHide\n        visibilityTime={4000}\n        position=\"bottom\"\n        type=\"success\"\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300,\n  },\n});\nexport default Notifications;\n","import { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nconst options: LinkingOptions = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      confirm: {\n        path: '/confirm',\n      },\n      Authenticated: {\n        screens: {\n          HomeScreen: '/home',\n          LoadScreen: '/load/:load_id',\n          PackingScreen: '/packing',\n          ProfileScreen: '/user/:id',\n          SetupScreen: '/dropzone/setup',\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzonesScreen: '/dropzones',\n          CreateDropzoneScreen: '/dropzone/create',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport default options;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions =  {}\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  lat\n  lng\n  name\n  primaryColor\n  secondaryColor\n  isPublic\n  requestPublication\n  planes {\n    id\n    name\n    registration\n  }\n  ticketTypes {\n    id\n    name\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  currentConditions {\n    id\n    jumpRun\n    temperature\n    offsetDirection\n    offsetMiles\n    winds {\n      altitude\n      speed\n      direction\n    }\n  }\n  loads(earliestTimestamp: $earliestTimestamp) {\n    edges {\n      node {\n        id\n        name\n        loadNumber\n        isOpen\n        maxSlots\n        state\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    id\n    name\n  }\n}\n    `;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  user {\n    id\n    nickname\n    name\n    moderationRole\n  }\n  rigInspections {\n    id\n    isOk\n    inspectedBy {\n      id\n      user {\n        id\n        name\n      }\n    }\n    rig {\n      id\n    }\n  }\n  orders {\n    edges {\n      node {\n        id\n        title\n        state\n        createdAt\n        title\n        amount\n        buyer {\n          __typename\n          ... on DropzoneUser {\n            id\n            user {\n              id\n              name\n            }\n          }\n          ... on Dropzone {\n            id\n            name\n          }\n        }\n        seller {\n          __typename\n          ... on DropzoneUser {\n            id\n            user {\n              id\n              name\n            }\n          }\n          ... on Dropzone {\n            id\n            name\n          }\n        }\n        item {\n          title\n          cost\n          ... on Slot {\n            id\n            ticketType {\n              id\n              name\n              cost\n            }\n            extras {\n              id\n              name\n              cost\n            }\n          }\n          ... on TicketType {\n            id\n          }\n          ... on Extra {\n            id\n            name\n          }\n        }\n        receipts {\n          id\n          transactions {\n            id\n            message\n            transactionType\n            status\n            createdAt\n            amount\n            sender {\n              ... on DropzoneUser {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n              ... on Dropzone {\n                id\n                name\n              }\n            }\n            receiver {\n              ... on DropzoneUser {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n              ... on Dropzone {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  availableRigs {\n    name\n    id\n    make\n    model\n    canopySize\n    serial\n    user {\n      id\n    }\n  }\n  license {\n    id\n    name\n  }\n  user {\n    id\n    name\n    exitWeight\n    email\n    phone\n    pushToken\n    image\n    rigs {\n      id\n      name\n      model\n      make\n      serial\n      canopySize\n      repackExpiresAt\n      packingCard\n      user {\n        id\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n    license {\n      id\n      name\n    }\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const SlotFragmentDoc = gql`\n    fragment slot on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  dropzoneUser {\n    id\n    role {\n      id\n      name\n    }\n    user {\n      id\n      name\n      nickname\n      exitWeight\n      image\n      license {\n        id\n        name\n      }\n    }\n  }\n  ticketType {\n    id\n    name\n    altitude\n    isTandem\n    extras {\n      id\n      name\n      cost\n    }\n  }\n  jumpType {\n    id\n    name\n  }\n  extras {\n    id\n    name\n  }\n}\n    `;\nexport const LoadFragmentDoc = gql`\n    fragment load on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n  plane {\n    id\n    maxSlots\n    name\n  }\n  gca {\n    id\n    user {\n      id\n      name\n    }\n  }\n  pilot {\n    id\n    user {\n      id\n      name\n    }\n  }\n  loadMaster {\n    id\n    user {\n      id\n      name\n    }\n  }\n  slots {\n    ...slot\n  }\n}\n    ${SlotFragmentDoc}`;\nexport const TransactionFragmentDoc = gql`\n    fragment transaction on Transaction {\n  id\n  transactionType\n  amount\n  status\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const OrderFragmentDoc = gql`\n    fragment order on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  buyer {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    id\n    amountCents\n    createdAt\n    updatedAt\n    transactions {\n      ...transaction\n    }\n  }\n}\n    ${TransactionFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n}\n    `;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  user {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: WalletInput!, $seller: WalletInput!, $dropzoneId: Int!, $title: String, $amount: Int!) {\n  createOrder(\n    input: {attributes: {dropzoneId: $dropzoneId, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...order\n    }\n  }\n}\n    ${OrderFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzoneId: // value for 'dropzoneId'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...load\n    }\n  }\n}\n    ${LoadFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federationId: Int!, $uid: String, $licenseId: Int) {\n  joinFederation(\n    input: {attributes: {federationId: $federationId, uid: $uid, licenseId: $licenseId}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federationId: // value for 'federationId'\n *      uid: // value for 'uid'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($dropzoneId: Int!, $id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userSignUp(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const QueryDropzoneDocument = gql`\n    query QueryDropzone($dropzoneId: Int!, $earliestTimestamp: Int) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useQueryDropzone__\n *\n * To run a query within a React component, call `useQueryDropzone` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzone` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzone({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      earliestTimestamp: // value for 'earliestTimestamp'\n *   },\n * });\n */\nexport function useQueryDropzone(baseOptions: Apollo.QueryHookOptions<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>(QueryDropzoneDocument, options);\n      }\nexport function useQueryDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>(QueryDropzoneDocument, options);\n        }\nexport type QueryDropzoneHookResult = ReturnType<typeof useQueryDropzone>;\nexport type QueryDropzoneLazyQueryHookResult = ReturnType<typeof useQueryDropzoneLazyQuery>;\nexport type QueryDropzoneQueryResult = Apollo.QueryResult<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: Int!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const QueryDropzoneUserProfileDocument = gql`\n    query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    dropzoneUser(id: $dropzoneUserId) {\n      id\n      credits\n      expiresAt\n      permissions\n      role {\n        id\n        name\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n        image\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n          repackExpiresAt\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n          federation {\n            id\n            name\n          }\n        }\n      }\n      slots {\n        edges {\n          node {\n            id\n            createdAt\n            load {\n              id\n              name\n              loadNumber\n              dispatchAt\n              createdAt\n            }\n            jumpType {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useQueryDropzoneUserProfile__\n *\n * To run a query within a React component, call `useQueryDropzoneUserProfile` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzoneUserProfile` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzoneUserProfile({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useQueryDropzoneUserProfile(baseOptions: Apollo.QueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n      }\nexport function useQueryDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n        }\nexport type QueryDropzoneUserProfileHookResult = ReturnType<typeof useQueryDropzoneUserProfile>;\nexport type QueryDropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useQueryDropzoneUserProfileLazyQuery>;\nexport type QueryDropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        id\n        name\n      }\n      permissions\n    }\n  }\n}\n    `;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport { FieldError, Mutation } from './schema';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern: new RegExp(\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    ),\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  }\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: Mutation) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        onFieldError?.(`${fieldName}`, message);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          onError?.(err.message);\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { MutationUpdateUserArgs, UpdateUserPayload } from '../schema';\n\nconst MUTATION_UPDATE_USER = gql`\n  mutation UpdateUser(\n    $id: Int\n    $name: String\n    $phone: String\n    $email: String\n    $pushToken: String\n    $nickname: String\n    $licenseId: Int\n    $exitWeight: Float\n  ) {\n    updateUser(\n      input: {\n        id: $id\n        attributes: {\n          pushToken: $pushToken\n          name: $name\n          phone: $phone\n          email: $email\n          nickname: $nickname\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        pushToken\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        userFederations {\n          id\n          license {\n            id\n            name\n          }\n          federation {\n            id\n            name\n            slug\n          }\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateUserArgs['input']['attributes'],\n  UpdateUserPayload\n>(MUTATION_UPDATE_USER, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    phone: [isRequired('Phone number is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport { QueryDropzoneDocument } from '../reflection';\nimport useMutationUpdateUser from './useMutationUpdateUser';\n\nexport default function useCurrentDropzone() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n\n  const currentDropzone = useQuery<Query>(QueryDropzoneDocument, {\n    variables: {\n      dropzoneId,\n      earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: () => null,\n  });\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const userId = currentDropzone?.data?.dropzone?.currentUser?.user?.id;\n    const remoteToken = currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken;\n    const localToken = pushToken;\n\n    if (!currentDropzone.loading && currentDropzone.called) {\n      if (localToken && localToken !== remoteToken && userId) {\n        mutationUpdateUser.mutate({\n          id: Number(userId),\n          pushToken: localToken,\n        });\n      }\n    }\n  }, [\n    pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.id,\n    currentDropzone.loading,\n    currentDropzone.called,\n    mutationUpdateUser,\n  ]);\n\n  return {\n    ...currentDropzone,\n    dropzone: currentDropzone?.data?.dropzone,\n    currentUser: currentDropzone?.data?.dropzone?.currentUser,\n  };\n}\n","import * as React from 'react';\nimport { Permission } from '../api/schema.d';\nimport { useCurrentUserPermissionsLazyQuery } from '../api/reflection';\nimport { useAppSelector } from '../state';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [execute, { data }] = useCurrentUserPermissionsLazyQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      execute({\n        variables: {\n          dropzoneId: Number(currentDropzoneId),\n        },\n      });\n    }\n  }, [currentDropzoneId, execute]);\n\n  const permissions = data?.dropzone?.currentUser?.permissions || [];\n  return permissions?.includes(permission as Permission) || false;\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: DropzoneUser): void;\n}\n\nexport const QUERY_PERMISSION_USER = gql`\n  query QueryGCAUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PERMISSION_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: ['actAsGCA'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No gca'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"radio-handheld\"\n          selectedColor={color}\n          onPress={() => setMenuOpen(true)}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n        >\n          {value?.id ? value?.user?.name : 'No gca'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`gca-chip-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge?.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Slot, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\n\ninterface ILoadMasterChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: Slot[];\n  onSelect(user: DropzoneUser): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"shield-account\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No loadmaster'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-account\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No loadmaster'}\n        </Chip>\n      }\n    >\n      {slots?.map((slot) => (\n        <Menu.Item\n          key={`lm-chip-${slot.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (slot?.dropzoneUser) {\n              onSelect(slot.dropzoneUser);\n            }\n          }}\n          title={slot?.dropzoneUser?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: DropzoneUser | null;\n  onSelect(user: DropzoneUser): void;\n}\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryPilotUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n      permissions: ['actAsPilot'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No pilot'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No pilot'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`pilot-select-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Plane, Permission, Query } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPlaneChipSelect {\n  value?: Plane | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QueryChipPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"airplane-takeoff\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n      }}\n      textStyle={{\n        color,\n        fontSize: small ? 12 : undefined,\n      }}\n    >\n      {value?.name || 'No plane'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.name || 'No plane'}\n        </Chip>\n      }\n    >\n      {data?.planes?.map((plane) => (\n        <Menu.Item\n          key={`lm-plane-chip-${plane.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(plane as Plane);\n          }}\n          title={plane.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { TextInput, useTheme } from 'react-native-paper';\n\ninterface INumberFieldProps {\n  error?: boolean;\n  label?: string;\n  value?: number | null;\n  onChangeText(newValue: number): void;\n}\nexport default function NumberField(props: INumberFieldProps) {\n  const { onChangeText: onChangeValue, ...rest } = props;\n  const { value } = rest;\n  const theme = useTheme();\n\n  const onChangeText = React.useCallback(\n    (text: string) => {\n      if (/\\d/.test(text)) {\n        const [numbers] = text.match(/^\\-?\\d+/) || ['0'];\n        onChangeValue(Number(numbers));\n      }\n    },\n    [onChangeValue]\n  );\n  return (\n    <TextInput\n      {...rest}\n      {...{ onChangeText }}\n      value={`${value || 0}`}\n      mode=\"outlined\"\n      keyboardType=\"number-pad\"\n      right={\n        <TextInput.Affix\n          textStyle={{\n            height: '100%',\n          }}\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          text={\n            <View style={styles.chevrons}>\n              <TouchableOpacity\n                style={[\n                  styles.affixTopChevron,\n                  { borderColor: theme.colors.text, backgroundColor: theme.colors.surface },\n                ]}\n                onPress={() => onChangeValue?.((value || 0) + 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-up\" size={24} />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.affixBottomChevron, { backgroundColor: theme.colors.surface }]}\n                onPress={() => onChangeValue?.((value || 0) - 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-down\" size={24} />\n              </TouchableOpacity>\n            </View>\n          }\n        />\n      }\n      caretHidden={false}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  affixBottomChevron: {\n    width: 48,\n    height: 54 / 2,\n    alignItems: 'center',\n    borderLeftWidth: StyleSheet.hairlineWidth,\n  },\n  affixTopChevron: {\n    width: 48,\n    height: 54 / 2,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderLeftWidth: StyleSheet.hairlineWidth,\n    alignItems: 'center',\n  },\n  chevrons: {\n    width: 48,\n    height: 59,\n    paddingTop: 4,\n    marginRight: -10,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  },\n});\n","import { DocumentNode, useQuery } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport { Query } from './schema';\nimport { actions, useAppDispatch } from '../state';\n\nexport interface IAppQuery<Payload, InputType> {\n  data: Maybe<Payload>;\n  loading: boolean;\n  refetch(variables?: InputType): void;\n}\n\nexport interface IAppQueryProps<InputType> {\n  onError?(message: string): void;\n  pollInterval?: number;\n  showSnackbarErrors?: boolean;\n  variables?: InputType;\n}\n\nexport function createQuery<\n  Payload extends Maybe<Record<string, unknown>>,\n  InputType extends object\n>(\n  query: DocumentNode,\n  options: {\n    getPayload(query?: Query): Maybe<Payload>;\n  }\n) {\n  const { getPayload } = options;\n\n  return function useAppQuery(opts: IAppQueryProps<InputType>): IAppQuery<Payload, InputType> {\n    const { variables, pollInterval, onError } = opts;\n    const dispatch = useAppDispatch();\n\n    const { data, loading, refetch, error } = useQuery(query, {\n      variables,\n      pollInterval,\n    });\n\n    const transformedData = React.useMemo(() => getPayload(data), [data]);\n\n    React.useEffect(() => {\n      if (error?.message) {\n        if (opts.showSnackbarErrors !== false) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n\n        onError?.(error.message);\n      }\n    }, [opts.onError, error?.message, opts.showSnackbarErrors, onError, dispatch]);\n\n    return {\n      loading,\n      data: transformedData,\n      refetch,\n    };\n  };\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Chip } from 'react-native-paper';\n\ninterface IChipSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  icon?: string;\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction ChipSelect<T extends Record<string, unknown> | string>(props: IChipSelect<T>) {\n  const {\n    items,\n    selected,\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChangeSelected,\n    autoSelectFirst,\n  } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n      {items.map((item) => (\n        <Chip\n          key={JSON.stringify(item)}\n          mode=\"outlined\"\n          icon={!selected.some((value) => isEqual(item, value)) && icon ? icon : undefined}\n          style={{ margin: 1 }}\n          disabled={isDisabled?.(item) || false}\n          selected={isSelected ? isSelected(item) : selected.some((value) => isEqual(item, value))}\n          onPress={() =>\n            onChangeSelected(\n              selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n            )\n          }\n        >\n          {renderItemLabel(item)}\n        </Chip>\n      ))}\n    </View>\n  );\n}\n\nexport default React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof ChipSelect;\n","import * as React from 'react';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpType | null;\n  userId?: number | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: JumpType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  { jumpTypes: JumpType[]; allowedJumpTypes: JumpType[] },\n  {\n    dropzoneId: number;\n    userIds: number[];\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypes({\n    variables: {\n      userIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: Number(currentDropzoneId),\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={\n          uniqBy([...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])], ({ id }) => id) ||\n          []\n        }\n        selected={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { TicketType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketType | null;\n  onlyPublicTickets?: boolean;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: TicketType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES = gql`\n  query DropzoneUsersAllowedTicketTypes($dropzoneId: Int!, $onlyPublicTickets: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      ticketTypes(isPublic: $onlyPublicTickets) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst useTicketTypes = createQuery<\n  { ticketTypes: TicketType[] },\n  {\n    dropzoneId: number;\n    onlyPublicTickets?: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES, {\n  getPayload: (query) => ({\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n  }),\n});\n\nexport default function TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onSelect, onlyPublicTickets } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useTicketTypes({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={data?.ticketTypes || []}\n        selected={[value].filter(Boolean) as TicketType[]}\n        renderItemLabel={(ticketType) => ticketType?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useLazyQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Rig, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRigSelect {\n  dropzoneId?: number;\n  userId?: number;\n  value?: Rig | null;\n  tandem?: boolean;\n  autoSelectFirst?: boolean;\n  onSelect(rig: Rig): void;\n}\n\nfunction RigTitle(props: { rig: Rig }): JSX.Element {\n  const theme = useTheme();\n  const { rig } = props;\n  const name = rig?.name || `${rig?.make} ${rig?.model}`;\n\n  return (\n    <>\n      <Text>{`${name} (${rig?.canopySize} sqft)`}</Text>\n      {!rig.user ? (\n        <View\n          style={{\n            padding: 2,\n            paddingHorizontal: 4,\n            backgroundColor: theme.colors.accent,\n            borderRadius: 16,\n          }}\n        >\n          <Text style={{ fontSize: 10, color: 'white' }}>Dropzone rig</Text>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nconst QUERY_RIGS = gql`\n  query QueryAvailableRigs($dropzoneId: Int!, $userId: Int!, $isTandem: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n      dropzoneUser(userId: $userId) {\n        id\n        availableRigs(isTandem: $isTandem) {\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigSelect(props: IRigSelect) {\n  const { userId, value, autoSelectFirst, onSelect, dropzoneId, tandem } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [fetchRigs, { data }] = useLazyQuery<Query>(QUERY_RIGS, {\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (userId && dropzoneId) {\n      fetchRigs({\n        variables: {\n          dropzoneId: currentDropzoneId,\n          userId: Number(userId),\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [userId, dropzoneId, fetchRigs, currentDropzoneId, tandem]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.dropzone?.dropzoneUser?.availableRigs?.length) {\n      onSelect(data.dropzone.dropzoneUser.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.dropzone.dropzoneUser?.availableRigs, onSelect, value]);\n\n  return (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <TextInput\n          onTouchEnd={() => setMenuOpen(true)}\n          label=\"Select rig\"\n          value={\n            value\n              ? `${value?.name || `${value?.make} ${value?.model}`} (${value?.canopySize} sqft)`\n              : undefined\n          }\n          left={() => <List.Icon icon=\"parachute\" />}\n          editable={false}\n          mode=\"outlined\"\n        />\n      }\n    >\n      {data?.dropzone?.dropzoneUser?.availableRigs?.map((rig) => (\n        <Menu.Item\n          key={`rig-select-${rig.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(rig);\n          }}\n          style={{ width: '100%' }}\n          title={<RigTitle rig={rig} />}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { TextInput, HelperText, Divider, Chip, List } from 'react-native-paper';\nimport NumberField from '../../input/number_input/NumberField';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Permission } from '../../../api/schema.d';\nimport JumpTypeChipSelect from '../../input/chip_select/JumpTypeChipSelect';\nimport TicketTypeChipSelect from '../../input/chip_select/TicketTypeChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function ManifestForm() {\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.manifest);\n  React.useEffect(() => {\n    if (state.fields.dropzoneUser?.value) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.manifest.setField([\n            'exitWeight',\n            Number(state.fields.dropzoneUser?.value?.user?.exitWeight || 60),\n          ])\n        );\n      }\n\n      if (!state.fields.rig.value && state.fields.dropzoneUser.value.user?.rigs?.length) {\n        dispatch(\n          actions.forms.manifest.setField(['rig', state.fields.dropzoneUser?.value?.user.rigs[0]])\n        );\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.dropzoneUser.value,\n    state.fields.dropzoneUser.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.rig.value,\n  ]);\n\n  const isEdit = state?.original?.id;\n\n  const allowedToManifestOthers = useRestriction(\n    isEdit ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n\n  return (\n    <>\n      <JumpTypeChipSelect\n        value={state.fields.jumpType.value}\n        userId={Number(state?.fields?.dropzoneUser?.value?.user?.id) || null}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['jumpType', value]))}\n      />\n      <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n        {state.fields.jumpType.error || ''}\n      </HelperText>\n\n      <TicketTypeChipSelect\n        value={state.fields.ticketType.value}\n        onlyPublicTickets={!allowedToManifestOthers}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['ticketType', value]))}\n      />\n      <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n        {state.fields.ticketType.error || ''}\n      </HelperText>\n\n      {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n        <List.Subheader>Ticket addons</List.Subheader>\n      )}\n      <ScrollView horizontal style={styles.ticketAddons}>\n        {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n          <Chip\n            selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n            onPress={\n              state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                ? () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                      ])\n                    )\n                : () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        [...(state?.fields?.extras?.value || []), extra],\n                      ])\n                    )\n            }\n          >\n            {`${extra.name} ($${extra.cost})`}\n          </Chip>\n        ))}\n      </ScrollView>\n      <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n        {state.fields.extras.error || ''}\n      </HelperText>\n      <Divider />\n      {!state.fields.dropzoneUser ? null : (\n        <RigSelect\n          value={state.fields.rig.value}\n          userId={Number(state.fields.dropzoneUser?.value?.user?.id)}\n          dropzoneId={Number(currentDropzone?.dropzone?.id)}\n          onSelect={(value) => dispatch(actions.forms.manifest.setField(['rig', value]))}\n        />\n      )}\n      <HelperText type={state.fields.rig.error ? 'error' : 'info'}>\n        {state.fields.rig.error || ''}\n      </HelperText>\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.manifest.setField(['exitWeight', Number(newValue)]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      {!state.fields.ticketType.value?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger name\"\n            error={!!state.fields.passengerName.error}\n            value={state.fields.passengerName?.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerName', newValue]))\n            }\n          />\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger exit weight\"\n            error={!!state.fields.passengerExitWeight.error}\n            value={state.fields.passengerExitWeight.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerExitWeight', Number(newValue)]))\n            }\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotForm from '../../forms/manifest/ManifestForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOT = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $rigId: Int\n    $ticketTypeId: Int\n    $dropzoneUserId: Int\n    $exitWeight: Float\n    $passengerName: String\n    $passengerExitWeight: Float\n  ) {\n    createSlot(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          rigId: $rigId\n          ticketTypeId: $ticketTypeId\n          dropzoneUserId: $dropzoneUserId\n          exitWeight: $exitWeight\n          passengerExitWeight: $passengerExitWeight\n          passengerName: $passengerName\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      slot {\n        id\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n        exitWeight\n        load {\n          id\n          name\n          createdAt\n          dispatchAt\n          hasLanded\n          maxSlots\n          isFull\n          isOpen\n          plane {\n            id\n            name\n          }\n          gca {\n            id\n            user {\n              id\n              name\n            }\n          }\n          pilot {\n            id\n            user {\n              id\n              name\n            }\n          }\n          loadMaster {\n            id\n            user {\n              id\n              name\n            }\n          }\n          slots {\n            id\n            createdAt\n            user {\n              id\n              name\n            }\n            passengerName\n            passengerExitWeight\n            ticketType {\n              id\n              name\n              isTandem\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { onSuccess, open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlot, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOT);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlot({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          rigId: !state.fields.rig.value?.id ? null : Number(state.fields.rig.value?.id),\n          ticketTypeId: Number(state.fields.ticketType?.value?.id),\n          dropzoneUserId: Number(state.fields.dropzoneUser?.value?.id),\n          exitWeight: state.fields.exitWeight.value,\n          ...(!state.fields.ticketType.value?.isTandem\n            ? {}\n            : {\n                passengerName: state.fields.passengerName?.value,\n                passengerExitWeight: state.fields.passengerExitWeight?.value,\n              }),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifest.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifest.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifest.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifest.setFieldError(['ticketType', message]));\n          case 'rig':\n            return dispatch(actions.forms.manifest.setFieldError(['rig', message]));\n          case 'dropzone_user':\n            return dispatch(actions.forms.manifest.setFieldError(['dropzoneUser', message]));\n          case 'exit_weight':\n            return dispatch(actions.forms.manifest.setFieldError(['exitWeight', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlot?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlot?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlot?.fieldErrors?.length) {\n        onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlot,\n    onSuccess,\n    state.fields.dropzoneUser?.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.passengerExitWeight?.value,\n    state.fields.passengerName?.value,\n    state.fields.rig.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.ticketType.value?.isTandem,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} style={{ maxHeight: 500 }}>\n        <ProgressBar\n          indeterminate\n          visible={mutationData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>\n          {/* eslint-disable-next-line max-len */}\n          {`Manifest ${state?.fields?.dropzoneUser?.value?.user?.name} on ${state.fields.load?.value?.name}`}\n        </Dialog.Title>\n        <Dialog.ScrollArea>\n          <ScrollView>\n            <SlotForm />\n          </ScrollView>\n        </Dialog.ScrollArea>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.manifest.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          <Button onPress={onManifest}>Manifest</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Card,\n  TextInput,\n  ProgressBar,\n  Chip,\n  Divider,\n  List,\n  Button,\n} from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { DropzoneUser, Query, Rig } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport calculateWingLoading from '../../../utils/calculateWingLoading';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: number;\n  dropzoneId: number;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: Rig;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: Rig): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nconst QUERY_DROPZONE_USERS_MANIFEST_DETAILS = gql`\n  query QueryDropzoneUsersManifestDetails($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          license {\n            id\n            name\n          }\n          rigs {\n            id\n            name\n            make\n            model\n            canopySize\n          }\n        }\n        role {\n          id\n          name\n        }\n        user {\n          id\n          name\n          image\n        }\n      }\n    }\n  }\n`;\nconst useQueryDropzoneUsersDetails = createQuery<\n  Query['dropzone']['dropzoneUser'],\n  {\n    dropzoneId: number;\n    dropzoneUserId: number;\n  }\n>(QUERY_DROPZONE_USERS_MANIFEST_DETAILS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUser as DropzoneUser | null,\n});\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneId,\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { data, loading } = useQueryDropzoneUsersDetails({\n    variables: {\n      dropzoneUserId,\n      dropzoneId,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && data?.user?.exitWeight) {\n      onChangeExitWeight(Number(data.user.exitWeight));\n    }\n  }, [data?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={3}>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <Card.Title\n        title={data?.user.name}\n        left={() =>\n          data?.user?.image ? (\n            <Avatar.Image source={{ uri: data.user.image }} size={24} />\n          ) : (\n            <Avatar.Icon icon=\"account\" size={24} />\n          )\n        }\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"lock\" mode=\"outlined\" disabled>\n            {data?.role?.name}\n          </Chip>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {data?.license?.name}\n          </Chip>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip style={{ marginHorizontal: 1 }} icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n        </ScrollView>\n        <View style={styles.row}>\n          <View style={styles.rowFirst}>\n            <RigSelect\n              userId={dropzoneUserId}\n              dropzoneId={dropzoneId}\n              onSelect={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n            />\n          </View>\n          <View style={styles.rowLast}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              onChangeText={(num) => onChangeExitWeight(num)}\n              label=\"Exit weight (kg)\"\n            />\n          </View>\n        </View>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                  mode=\"outlined\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChangeText={(num) => onChangePassengerWeight?.(num)}\n                  label=\"Exit weight (kg)\"\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { HelperText, Divider, Chip, List, Card } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useRestriction from '../../../hooks/useRestriction';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType, Permission, TicketType } from '../../../api/schema.d';\n\nimport UserRigCard from './UserRigCard';\n\nconst QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!, $isPublic: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n\n      ticketTypes(isPublic: $isPublic) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  {\n    jumpTypes: JumpType[];\n    allowedJumpTypes: JumpType[];\n    ticketTypes: TicketType[];\n  },\n  {\n    dropzoneId: number;\n    userIds: number[];\n    isPublic: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypes({\n    variables: {\n      userIds: state.fields.users?.value?.map((slotUser) => slotUser.id) as number[],\n      dropzoneId: globalState.currentDropzoneId as number,\n      isPublic: canManifestOthers ? null : true,\n    },\n    onError: console.error,\n  });\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  return (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <Card elevation={2} style={{ marginBottom: 16, flexShrink: 1, marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={\n              uniqBy(\n                [...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n                ({ id }) => id\n              ) || []\n            }\n            selected={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n            renderItemLabel={(jumpType: JumpType) => jumpType.name}\n            isDisabled={(jumpType: JumpType) =>\n              !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n            }\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['jumpType', first as JumpType]))\n            }\n          />\n\n          <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n            {state.fields.jumpType.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n\n      <List.Subheader>Ticket</List.Subheader>\n      <Card elevation={2} style={{ marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={data?.ticketTypes || []}\n            selected={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n            renderItemLabel={(ticketType: TicketType) => ticketType.name}\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['ticketType', first as TicketType]))\n            }\n          />\n          <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n            {state.fields.ticketType.error || ''}\n          </HelperText>\n\n          {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n            <List.Subheader>Ticket addons</List.Subheader>\n          )}\n          <ScrollView horizontal style={styles.ticketAddons}>\n            {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n              <Chip\n                selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n                onPress={\n                  state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                    ? () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                          ])\n                        )\n                    : () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            [...(state?.fields?.extras?.value || []), extra],\n                          ])\n                        )\n                }\n              >\n                {`${extra.name} ($${extra.cost})`}\n              </Chip>\n            ))}\n          </ScrollView>\n          <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n            {state.fields.extras.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n      <Divider />\n\n      <List.Subheader>Group</List.Subheader>\n      {state.fields?.users?.value?.map((slotUser) => (\n        <UserRigCard\n          dropzoneId={globalState.currentDropzoneId as number}\n          dropzoneUserId={Number(slotUser.id)}\n          selectedRig={slotUser.rig || undefined}\n          exitWeight={slotUser.exitWeight}\n          onChangeExitWeight={(exitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n                ),\n              ])\n            )\n          }\n          onRemove={() =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n              ])\n            )\n          }\n          onChangeRig={(newRig) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id\n                    ? { ...slotUser, rigId: Number(newRig.id), rig: newRig }\n                    : user\n                ),\n              ])\n            )\n          }\n          {...{ isTandem }}\n          passengerName={slotUser.passengerName}\n          passengerWeight={slotUser.passengerExitWeight}\n          onChangePassengerName={(passengerName) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerName } : user\n                ),\n              ])\n            )\n          }\n          onChangePassengerWeight={(passengerExitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n                ),\n              ])\n            )\n          }\n        />\n      ))}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Paragraph, Title } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle }: INoResults) {\n  return (\n    <View style={styles.empty}>\n      <Title style={{ color }}>{title}</Title>\n      <Paragraph style={{ color, textAlign: 'center' }}>{subtitle}</Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Button, Checkbox, Divider, List, Searchbar } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport NoResults from '../../NoResults';\nimport { DropzoneUser, Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n              exitWeight\n            }\n\n            availableRigs {\n              id\n              name\n              make\n              model\n              canopySize\n              serial\n\n              user {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IUserListSelect {\n  onNext(): void;\n}\n\nexport default function UserListSelect(props: IUserListSelect) {\n  const { screens } = useAppSelector((root) => root);\n  const dispatch = useAppDispatch();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      search: searchText,\n    },\n  });\n\n  const { currentUser } = useCurrentDropzone();\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  return (\n    <>\n      <Searchbar value={searchText} onChangeText={setSearchText} placeholder=\"Search skydivers\" />\n      <View style={{ height: 380 }}>\n        <ScrollView contentContainerStyle={{ paddingTop: 16 }}>\n          {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n            <NoResults title=\"No users\" subtitle=\"\" />\n          )}\n\n          {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n            <React.Fragment key={`user-${edge?.node?.id || 0}`}>\n              <List.Item\n                style={{ width: '100%' }}\n                key={`user-${edge?.node?.id}`}\n                title={edge?.node?.user.name}\n                description={edge?.node?.role?.name}\n                left={() =>\n                  !edge?.node?.user?.image ? (\n                    <List.Icon icon=\"account\" />\n                  ) : (\n                    <Avatar.Image\n                      source={{ uri: edge?.node?.user.image }}\n                      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                      size={32}\n                    />\n                  )\n                }\n                right={() => (\n                  <Checkbox\n                    status={\n                      screens.manifest.selectedUsers\n                        ?.map<string>(({ id }) => id)\n                        .includes(edge?.node?.id as string)\n                        ? 'checked'\n                        : 'unchecked'\n                    }\n                  />\n                )}\n                disabled={\n                  // Dont allow removing current user if the user\n                  // can only manifest a group with themselves in it\n                  edge?.node?.user.id === currentUser?.id &&\n                  canManifestGroupWithSelfOnly &&\n                  !canManifestGroup\n                }\n                onPress={() => {\n                  dispatch(\n                    actions.screens.manifest.setSelected(\n                      screens.manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                        ? screens.manifest.selectedUsers?.filter(\n                            ({ id }) => id !== `${edge?.node?.id}`\n                          )\n                        : ([...screens.manifest.selectedUsers, edge?.node] as DropzoneUser[])\n                    )\n                  );\n                }}\n              />\n              <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n            </React.Fragment>\n          ))}\n        </ScrollView>\n      </View>\n      <Button\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n          props.onNext();\n        }}\n        style={styles.button}\n        mode=\"contained\"\n      >\n        Next\n      </Button>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  scrollView: {\n    height: 100,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\nimport UserListSelect from './UserListSelect';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const [tabIndex, setTabIndex] = React.useState(0);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        props.onClose();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    props,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={onClose}>\n        <View style={{ backgroundColor: 'white' }} testID=\"manifest-group-sheet\">\n          <View pointerEvents={(state.fields.users?.value?.length || 0) > 0 ? undefined : 'none'}>\n            <Tabs defaultIndex={tabIndex} mode=\"fixed\" onChangeIndex={setTabIndex}>\n              <TabScreen label=\"Create group\">\n                <View />\n              </TabScreen>\n              <TabScreen label=\"Configure jump\">\n                <View />\n              </TabScreen>\n            </Tabs>\n          </View>\n\n          {tabIndex === 0 ? (\n            <View style={styles.userListContainer}>\n              <UserListSelect onNext={() => setTabIndex(1)} />\n            </View>\n          ) : (\n            <ScrollView contentContainerStyle={{ paddingBottom: 200, flexGrow: 1 }}>\n              <ManifestGroupForm />\n              <View style={styles.buttonContainer}>\n                <Button\n                  onPress={onManifest}\n                  loading={mutationData.loading}\n                  mode=\"contained\"\n                  style={styles.button}\n                >\n                  Save\n                </Button>\n              </View>\n            </ScrollView>\n          )}\n        </View>\n      </Dialog>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: '100%',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Badge, Card, Chip, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ViewProps } from '../../../components/Themed';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlotCardProps {\n  slot: Slot;\n  style?: ViewProps['style'];\n  onPress?(slot: Slot): void;\n  onDelete?(slot: Slot): void;\n}\n\nexport default function SlotCard(props: ISlotCardProps) {\n  const { slot, onPress, onDelete, style } = props;\n  const theme = useTheme();\n\n  const hasPassenger = !!slot?.passengerName;\n  return (\n    <>\n      <Card\n        onPress={() => onPress?.(slot)}\n        elevation={3}\n        style={StyleSheet.flatten([styles.card, { marginBottom: hasPassenger ? -4 : 12 }, style])}\n      >\n        <Card.Title\n          title={slot?.dropzoneUser?.user.name || slot?.passengerName}\n          left={() =>\n            slot?.dropzoneUser?.user?.image ? (\n              <Avatar.Image\n                style={{ backgroundColor: theme.colors.surface }}\n                source={{ uri: slot?.dropzoneUser?.user.image }}\n                size={24}\n              />\n            ) : (\n              <Avatar.Icon\n                style={{ backgroundColor: theme.colors.surface }}\n                color={theme.dark ? theme.colors.text : theme.colors.primary}\n                icon=\"account\"\n                size={40}\n              />\n            )\n          }\n          right={() =>\n            !onDelete ? null : (\n              <Badge\n                style={{ marginTop: -45, marginRight: -5 }}\n                onPress={(e) => {\n                  e.preventDefault();\n                  onDelete?.(slot);\n                }}\n              >\n                -\n              </Badge>\n            )\n          }\n        />\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"lock\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.role?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"ticket-account\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.license?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"human-handsup\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.jumpType?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"arrow-up-bold\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.ticketType?.name}\n          </Chip>\n          {!slot.wingLoading ? null : (\n            <Chip\n              style={styles.chip}\n              textStyle={styles.chipText}\n              icon=\"escalator-down\"\n              mode=\"outlined\"\n              disabled\n            >\n              {slot.wingLoading.toFixed(2)}\n            </Chip>\n          )}\n        </Card.Content>\n      </Card>\n      {!slot?.passengerName ? null : (\n        <>\n          <View\n            style={{\n              width: '100%',\n              height: 30,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <MaterialCommunityIcons color={theme.colors.onSurface} name=\"link-variant\" size={30} />\n          </View>\n          <Card\n            style={StyleSheet.flatten([\n              { margin: 12, marginTop: -4, height: 150, width: '100%' },\n              style,\n            ])}\n            elevation={3}\n          >\n            <Card.Title\n              title={slot?.passengerName}\n              left={() => (\n                <Avatar.Icon\n                  icon=\"account-supervisor\"\n                  color={theme.dark ? theme.colors.text : theme.colors.primary}\n                  style={{ backgroundColor: theme.colors.surface }}\n                  size={40}\n                />\n              )}\n            />\n            <Card.Content>\n              <Text style={styles.passengerTitle}>P A S S E N G E R</Text>\n            </Card.Content>\n          </Card>\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  chip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  infoChip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  chipText: {\n    fontSize: 12,\n  },\n  passengerChip: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  passengerTitle: {\n    fontSize: 30,\n    opacity: 0.5,\n    alignSelf: 'center',\n    width: '100%',\n    textAlign: 'center',\n    color: '#CCCCCC',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema';\n\nconst MUTATION_UPDATE_LOAD = gql`\n  mutation UpdateLoad(\n    $id: Int!\n    $pilotId: Int\n    $gcaId: Int\n    $planeId: Int\n    $isOpen: Boolean\n    $loadMasterId: Int\n    $dispatchAt: Int\n    $hasLanded: Boolean\n  ) {\n    updateLoad(\n      input: {\n        id: $id\n        attributes: {\n          pilotId: $pilotId\n          gcaId: $gcaId\n          planeId: $planeId\n          isOpen: $isOpen\n          loadMasterId: $loadMasterId\n          dispatchAt: $dispatchAt\n          hasLanded: $hasLanded\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        createdAt\n        loadNumber\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          exitWeight\n\n          passengerName\n          passengerExitWeight\n\n          user {\n            id\n            name\n          }\n          ticketType {\n            id\n            name\n            altitude\n            isTandem\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(MUTATION_UPDATE_LOAD, {\n  getPayload: (result) => result.updateLoad,\n  fieldErrorMap: {\n    pilotId: 'pilot',\n    gcaId: 'gca',\n    planeId: 'plane',\n    loadMasterId: 'loadMaster',\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal } from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\n\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nimport { Load, Permission, LoadState } from '../../../api/schema.d';\nimport { useFinalizeLoadMutation } from '../../../api/reflection';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../../state';\n\ninterface ILoadActionButtonProps {\n  load: Load;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () => null,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const onManifest = React.useCallback(() => {\n    if (!currentUser?.hasLicense) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You need to select a license on your user profile',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasMembership) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your membership is out of date',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasExitWeight) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Update your exit weight on your profile before manifesting',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasCredits) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You have no credits on your account',\n          variant: 'info',\n        })\n      );\n    }\n\n    dispatch(actions.forms.manifest.setOpen(true));\n    dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n    dispatch(actions.forms.manifest.setField(['load', load]));\n    return null;\n  }, [currentUser, dispatch, load]);\n\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const createCallAction = React.useCallback(\n    (minutes: number | null) => () => {\n      setExpanded(false);\n      updateCall(minutes);\n    },\n    [updateCall]\n  );\n\n  const callActions = [\n    {\n      label: '20 minute call',\n      onPress: createCallAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createCallAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createCallAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const manifestActions = [\n    !showManifestButton\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => onManifest(),\n        },\n    !showGroupIcon\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createCallAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: () =>\n            mutationFinalizeLoad({\n              variables: { id: Number(load.id), state: LoadState.Cancelled },\n            }),\n        },\n    ![LoadState.Cancelled].includes(load.state)\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: () => onLanded(),\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n});\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, IconButton, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useAppSelector } from '../../../state';\nimport { Load } from '../../../api/schema';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: Load;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, onEdit, canEdit, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.surface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          {load?.dispatchAt && isAfter(load.dispatchAt * 1000, new Date()) ? (\n            <Countdown end={new Date(load.dispatchAt * 1000)} variant=\"light\" size={80} />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"shield-airplane\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 48,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          <>\n            <View\n              style={{ flex }}\n              // eslint-disable-next-line react/no-array-index-key\n              key={`info-grid-${i}`}\n            >\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_LOAD = gql`\n  query QueryLoad($id: Int!) {\n    load(id: $id) {\n      id\n      name\n      createdAt\n      dispatchAt\n      hasLanded\n      loadNumber\n      isFull\n      state\n      isOpen\n      weight\n      maxSlots\n      availableSlots\n      occupiedSlots\n      plane {\n        id\n        maxSlots\n        name\n      }\n      gca {\n        id\n        user {\n          id\n          name\n        }\n      }\n      pilot {\n        id\n        user {\n          id\n          name\n        }\n      }\n      loadMaster {\n        id\n        user {\n          id\n          name\n        }\n      }\n      slots {\n        id\n        createdAt\n        exitWeight\n        passengerName\n        passengerExitWeight\n        wingLoading\n        dropzoneUser {\n          id\n          role {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n          user {\n            id\n            name\n            exitWeight\n            license {\n              id\n              name\n            }\n          }\n        }\n        ticketType {\n          id\n          name\n          altitude\n          isTandem\n\n          extras {\n            id\n            name\n            cost\n          }\n        }\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['load'],\n  {\n    id: number;\n  }\n>(QUERY_LOAD, {\n  getPayload: (query) => query?.load,\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { DeleteSlotInput, DeleteSlotPayload } from '../schema';\n\nconst MUTATION_DELETE_SLOT = gql`\n  mutation DeleteSlot($id: Int!) {\n    deleteSlot(input: { id: $id }) {\n      slot {\n        id\n\n        dropzoneUser {\n          id\n          user {\n            id\n            name\n          }\n        }\n        load {\n          id\n          availableSlots\n          isOpen\n          weight\n          slots {\n            id\n            createdAt\n            exitWeight\n\n            passengerName\n            passengerExitWeight\n\n            user {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n              altitude\n              isTandem\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<DeleteSlotInput, DeleteSlotPayload>(MUTATION_DELETE_SLOT, {\n  getPayload: (result) => result.deleteSlot,\n});\n","import * as React from 'react';\nimport { Dimensions, RefreshControl, useWindowDimensions } from 'react-native';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { Card } from 'react-native-paper';\n\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../components/chips/PilotChip';\nimport PlaneChip from '../../../components/chips/PlaneChip';\nimport ManifestUserSheet from '../../../components/dialogs/ManifestUser/ManifestUser';\nimport ManifestGroupSheet from '../../../components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from '../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser, LoadState } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotCard from './SlotCard';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\nimport useQueryLoad from '../../../api/hooks/useQueryLoad';\nimport useMutationDeleteSlot from '../../../api/hooks/useMutationDeleteSlot';\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\n\nfunction AvailableSlotCard({ width }: { width: number }) {\n  return (\n    <Card\n      style={{\n        height: 150,\n        opacity: 0.5,\n        margin: 12,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      elevation={3}\n    >\n      <Card.Title\n        title=\"Available\"\n        style={{ alignSelf: 'center', justifyContent: 'center', flex: 1 }}\n        titleStyle={{ textAlign: 'center' }}\n      />\n    </Card>\n  );\n}\n\nfunction SlotSkeleton({ width }: { width: number }) {\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 150,\n        width,\n        margin: 12,\n      }}\n      layout={[{ key: 'user-card-container', height: 150, width }]}\n    />\n  );\n}\n\nexport default function LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const route = useRoute<{ key: string; name: string; params: { load: Load } }>();\n\n  const {\n    data: detailedLoad,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(route.params.load.id),\n    },\n    pollInterval: 30000,\n  });\n\n  const load = detailedLoad || route.params.load;\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const navigation = useNavigation();\n\n  const slots: (Slot | 2)[] = Array.from({\n    length: (load?.slots?.length || 0) + (load?.availableSlots || 0),\n  }).map((_, index) => ((load?.slots?.length || 0) > index ? (load.slots as Slot[])[index] : 2));\n\n  const maxSlots = load?.maxSlots || load?.plane?.maxSlots || 0;\n  const occupiedSlots = maxSlots - (load?.availableSlots || 0);\n\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 364;\n  const padding = 24;\n  const numColumns = Math.floor(width / (cardWidth + padding)) || 1;\n  let contentWidth = (cardWidth + padding) * numColumns + padding;\n  contentWidth = width < contentWidth ? width : contentWidth;\n\n  const initialLoading = !detailedLoad?.slots?.length && loading;\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.background }}>\n      <Header load={load}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ marginVertical: 8 }}>\n          <PlaneChip\n            value={load?.plane}\n            onSelect={async (plane) => {\n              if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'info',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <GCAChip\n            value={load?.gca}\n            onSelect={updateGCA}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <PilotChip\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <LoadMasterChip\n            value={load?.loadMaster}\n            slots={load.slots || []}\n            onSelect={updateLoadMaster}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n        </ScrollView>\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      <FlatList\n        testID=\"slots\"\n        keyExtractor={(item, idx) => `slot-${item?.id || idx}`}\n        style={{ flex: 1, height: Dimensions.get('window').height }}\n        contentContainerStyle={{\n          width: contentWidth,\n          alignSelf: 'center',\n          justifyContent: 'space-evenly',\n          paddingBottom: 100,\n        }}\n        numColumns={numColumns}\n        horizontal={false}\n        data={!initialLoading ? slots : [1, 1, 1, 1, 1, 1, 1, 1]}\n        refreshing={loading}\n        onRefresh={refetch}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n        renderItem={({ item: node, index }) => {\n          if (node === 1) {\n            return <SlotSkeleton width={cardWidth} />;\n          }\n\n          return node === 2 ? (\n            <AvailableSlotCard key={`empty-slot-${index}`} width={cardWidth} />\n          ) : (\n            <SlotCard\n              style={{ width: cardWidth }}\n              key={`slot-${node.id}`}\n              slot={node}\n              onDelete={\n                (currentUser?.id === node?.dropzoneUser?.id && canRemoveSelf) || canRemoveOthers\n                  ? onDeleteSlot\n                  : undefined\n              }\n              onPress={(slot) => {\n                const slotGroup = load?.slots?.filter(\n                  ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n                );\n                const onSlotGroupPress = () => {\n                  if (slotGroup) {\n                    dispatch(actions.forms.manifestGroup.reset());\n                    dispatch(actions.forms.manifestGroup.setFromSlots(slotGroup));\n                    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n                    navigation.navigate('ManifestGroupScreen');\n                  }\n                };\n                const onSlotPress = () => {\n                  dispatch(actions.forms.manifest.setOpen(slot));\n                  dispatch(actions.forms.manifest.setField(['load', load]));\n                };\n\n                if (slot.user?.id === currentUser?.id) {\n                  if (canEditSelf) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress();\n                    } else {\n                      onSlotPress();\n                    }\n                  }\n                } else if (canEditOthers) {\n                  if (slotGroup?.length) {\n                    onSlotGroupPress();\n                  } else {\n                    onSlotPress();\n                  }\n                }\n              }}\n            />\n          );\n        }}\n      />\n      <ActionButton load={load} />\n      <ManifestUserSheet\n        open={forms.manifest.open}\n        onClose={() => dispatch(actions.forms.manifest.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.manifest.setOpen(false));\n        }}\n      />\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  return (\n    <WizardContext.Provider\n      value={{\n        index,\n        count,\n        setIndex: (idx) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          ref.current?.scrollToIndex({ index: idx, animated: true });\n        },\n      }}\n    >\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              console.log('onNext with index', index);\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"position\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds}\n        keyExtractor={({ item }, index) => `wind.${index}`}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../../components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport JumpRunSelector from '../../../../components/input/jump_run_select/JumpRunSelect';\n\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport JumpRunSelector from '../../../components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    dispatch,\n  ]);\n\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../components/forms/weather_conditions/WeatherConditionForm';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [mutationCreateWeatherConditions, state, dropzoneId, navigation, dispatch]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() => navigation.navigate('JumpRunScreen')}\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload conditions from MarkSchulz.net\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, Button } from 'react-native-paper';\nimport { View, StyleSheet } from 'react-native';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  return (\n    <View style={styles.warning}>\n      <Paragraph style={{ color: 'white', flex: 7 / 10, flexGrow: 2 }}>{title}</Paragraph>\n      {!action ? null : (\n        <Button onPress={action} style={{ flex: 1 / 10, flexShrink: 1 }}>\n          Fix\n        </Button>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning title=\"Your reserve repack is due. You cannot manifest if your repack is out of date.\" />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 32,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { DrawerActions } from '@react-navigation/native';\nimport { Query } from '../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\nimport SetupWarning from './SetupWarning';\n\nconst QUERY_CURRENT_USER = gql`\n  query QueryDropzone($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      isCreditSystemEnabled\n\n      currentUser {\n        id\n        credits\n        expiresAt\n\n        rigInspections {\n          id\n          rig {\n            id\n            repackExpiresAt\n          }\n        }\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { navigation, previous, scene, hideWarnings } = props;\n  const { currentDropzoneId, palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [loadData, { data, loading }] = useLazyQuery<Query>(QUERY_CURRENT_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      loadData();\n    }\n  }, [loadData, currentDropzoneId]);\n\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {previous ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton\n            icon=\"menu\"\n            size={32}\n            onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n          />\n        )}\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold' }}\n        />\n\n        {scene.descriptor.options.headerRight ? (\n          scene.descriptor.options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{ backgroundColor: palette.accent.main }}\n            mode=\"flat\"\n            textStyle={{ color: palette.surface }}\n          >{`$${data?.dropzone?.currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={data?.dropzone?.currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!data?.dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!data?.dropzone?.currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!data?.dropzone?.currentUser?.expiresAt &&\n            data?.dropzone?.currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!data?.dropzone?.currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = data.dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!data?.dropzone?.currentUser?.rigInspections?.length}\n          isRigSetUp={!!data?.dropzone?.currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            const currentUser = data?.dropzone?.currentUser;\n            console.log('opening setup wizard');\n            if (currentUser) {\n              dispatch(actions.forms.user.setOriginal(currentUser));\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n              }\n\n              navigation.navigate('UserSetupWizard');\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List } from 'react-native-paper';\n\nimport { Text, View } from '../../../components/Themed';\nimport usePalette from '../../../hooks/usePalette';\n\ninterface IGetStartedProps {\n  hasPlanes: boolean;\n  hasTicketTypes: boolean;\n  isPublic: boolean;\n}\nexport default function GetStarted({ hasPlanes, hasTicketTypes, isPublic }: IGetStartedProps) {\n  const palette = usePalette();\n\n  return (\n    <View style={{ width: '70%' }}>\n      <Text style={styles.title}>Set up dropzone</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <List.Item\n        title=\"Create dropzone\"\n        left={() => <List.Icon color={palette.success} icon=\"check\" />}\n      />\n      <List.Item\n        title=\"Add a plane\"\n        left={() =>\n          !hasPlanes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n      <List.Item\n        title=\"Configure jump tickets\"\n        left={() =>\n          !hasTicketTypes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { Load, Plane, DropzoneUser, LoadState } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport useQueryLoad from 'app/api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from 'app/api/hooks/useMutationUpdateLoad';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  load: Load;\n  onPress(): void;\n}\n\nexport default function LoadCard(props: ILoadCardSmall) {\n  const { load: initialRecord, onPress } = props;\n  const dispatch = useAppDispatch();\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    pollInterval: 30000,\n  });\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 2,\n        minWidth: 300,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load?.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <View style={{ flexDirection: 'row', flexWrap: 'nowrap', backgroundColor: 'transparent' }}>\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              if ((load?.occupiedSlots || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.occupiedSlots || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'info',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport {\n  Button,\n  Card,\n  DataTable,\n  IconButton,\n  Menu,\n  Paragraph,\n  ProgressBar,\n  Text,\n} from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { useNavigation } from '@react-navigation/native';\nimport useCurrentDropzone from '../../../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser } from '../../../../../api/schema.d';\nimport useRestriction from '../../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../../state';\nimport SwipeActions from '../../../../../components/layout/SwipeActions';\nimport LoadingCard from '../Small/Loading';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport useMutationDeleteSlot from '../../../../../api/hooks/useMutationDeleteSlot';\n\ninterface ILoadCardLarge {\n  load: Load;\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: Slot[]): void;\n  onSlotPress(slot: Slot): void;\n  onManifest(): void;\n}\n\nexport default function LoadCard(props: ILoadCardLarge) {\n  const {\n    load: initialRecord,\n    onManifest,\n    onManifestGroup,\n    controlsVisible,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    // pollInterval: 30000,\n  });\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load?.id) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    if (!load?.id) {\n      return;\n    }\n    await mutationUpdateLoad.mutate({\n      id: Number(load.id),\n      hasLanded: true,\n    });\n  }, [load?.id, mutationUpdateLoad]);\n\n  const navigation = useNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Text>{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || mutationUpdateLoad.loading || mutationDeleteSlot.loading}\n        color={state.theme.colors.accent}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n          <ScrollView\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: `You need to take ${diff} people off the load to fit on this plane`,\n                      variant: 'info',\n                    })\n                  );\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip value={load?.gca} onSelect={updateGCA} />\n            <PilotChip value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <DataTable>\n          <DataTable.Header style={{ width: '100%' }}>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Jump type</DataTable.Title>\n            <DataTable.Title numeric>Altitude</DataTable.Title>\n          </DataTable.Header>\n          {load?.slots?.map((slot) => {\n            const slotGroup = load?.slots?.filter(\n              ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n            );\n            const isCurrentUser = slot?.user?.id === currentUser?.id;\n\n            return (\n              <SwipeActions\n                disabled={(isCurrentUser && !canRemoveSelf) || (!isCurrentUser && !canRemoveOthers)}\n                key={`slot-${slot.id}`}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: () => onDeleteSlot(slot),\n                }}\n              >\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  onPress={() => {\n                    if (slot.user?.id === currentUser?.id) {\n                      if (canEditSelf) {\n                        if (slotGroup?.length) {\n                          onSlotGroupPress(slotGroup);\n                        } else {\n                          onSlotPress(slot);\n                        }\n                      }\n                    } else if (canEditOthers) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  }}\n                  pointerEvents=\"none\"\n                >\n                  <DataTable.Cell>\n                    <Paragraph style={styles.slotText}>{slot?.dropzoneUser?.user?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n\n                {slot?.ticketType?.isTandem && (\n                  <DataTable.Row\n                    testID=\"slot-row\"\n                    disabled={!!load?.hasLanded}\n                    pointerEvents=\"none\"\n                  >\n                    <DataTable.Cell>\n                      <Paragraph style={styles.slotText}>{slot?.passengerName}</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>Passenger</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>\n                        {(slot?.ticketType?.altitude || 14000) / 1000}k\n                      </Paragraph>\n                    </DataTable.Cell>\n                  </DataTable.Row>\n                )}\n              </SwipeActions>\n            );\n          })}\n          {Array.from({ length: load?.availableSlots || 0 }, (v, i) => i).map((i) => (\n            <DataTable.Row\n              key={`${load?.id}-empty-slot-${i}`}\n              testID=\"slot-row\"\n              onPress={() => navigation.navigate('LoadScreen', { load })}\n            >\n              <DataTable.Cell>\n                <Paragraph style={styles.slotText}>- Available -</Paragraph>\n              </DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button mode=\"outlined\" onPress={() => updateCall(null)} testID=\"dispatch-cancel\">\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              onDismiss={() => setDispatchOpen(false)}\n              visible={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <Menu.Item\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a load master before this load can be finalized',\n                      variant: 'info',\n                    })\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a pilot before this load can be finalized',\n                      variant: 'info',\n                    })\n                  );\n                }\n                return onLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  slotText: {\n    fontSize: 12,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateLoadPayload, LoadInput } from '../schema';\n\nconst MUTATION_CREATE_LOAD = gql`\n  mutation CreateLoad(\n    $name: String\n    $pilotId: Int\n    $gcaId: Int\n    $maxSlots: Int!\n    $planeId: Int\n    $isOpen: Boolean\n  ) {\n    createLoad(\n      input: {\n        attributes: {\n          name: $name\n          pilotId: $pilotId\n          gcaId: $gcaId\n          maxSlots: $maxSlots\n          planeId: $planeId\n          isOpen: $isOpen\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        loadNumber\n        occupiedSlots\n        availableSlots\n        maxSlots\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        maxSlots\n        isOpen\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<LoadInput, CreateLoadPayload>(MUTATION_CREATE_LOAD, {\n  getPayload: (result) => result.createLoad,\n  validates: {\n    maxSlots: [\n      isRequired('lease specify amount of allowed jumpers'),\n      isNumeric('Please enter a valid number'),\n    ],\n    planeId: [isRequired('What plane is flying this load?')],\n    gcaId: [isRequired('You must have a GCA for this load')],\n  },\n  fieldErrorMap: {\n    planeId: 'plane',\n    gcaId: 'gca',\n  },\n});\n","import slice from './slice';\nimport Notifications from './Notifications';\n\nconst { actions } = slice;\n\nexport { actions };\nexport default Notifications;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['dropzone']['dropzoneUsers'],\n  {\n    dropzoneId: number;\n    permissions: string[];\n  }\n>(QUERY_DROPZONE_USERS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUsers,\n});\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport useQueryDropzoneUsers from '../../../api/hooks/useQueryDropzoneUsers';\nimport { DropzoneUser } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IDropzoneUserChipSelect {\n  value?: DropzoneUser | null;\n  label: string;\n  icon?: string;\n  requiredPermissions: string[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(dzuser: DropzoneUser): void;\n}\n\nexport default function DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const { label, requiredPermissions, icon, value, onLoadingStateChanged, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQueryDropzoneUsers({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: requiredPermissions,\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]) => (first ? onSelect(first) : null),\n    [onSelect]\n  );\n  const getItemLabel = React.useCallback((dzUser) => dzUser?.user.name, []);\n  const isSelected = React.useCallback((item) => item.id === value?.id, [value?.id]);\n  const selected = React.useMemo(() => [value].filter(Boolean) as DropzoneUser[], [value]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUser>\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={uniqBy(data?.edges?.map((edge) => edge?.node) || [], 'id') as DropzoneUser[]}\n        selected={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChangeSelected={onChangeSelected}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Plane, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: Plane | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QuerySelectPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onSelect, onLoadingStateChanged } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<Plane>\n        autoSelectFirst\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        selected={[value].filter(Boolean) as Plane[]}\n        renderItemLabel={(plane: Plane) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChangeSelected={([first]) => (first ? onSelect(first as Plane) : null)}\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DropzoneUserChipSelect from '../../input/chip_select/DropzoneUserChipSelect';\nimport PlaneChipSelect from '../../input/chip_select/PlaneChipSelect';\n\nexport default function LoadForm() {\n  const state = useAppSelector((root) => root.forms.load);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        placeholder=\"Optional\"\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.load.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'e.g Starcrest load, Tandem load'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.load.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error || ''}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelect\n          value={state.fields.plane.value}\n          onSelect={(value) => {\n            dispatch(actions.forms.load.setField(['plane', value]));\n            dispatch(actions.forms.load.setField(['maxSlots', value.maxSlots]));\n          }}\n        />\n        <HelperText type={state.fields.plane.error ? 'error' : 'info'}>\n          {state.fields.plane.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"GCA\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['gca', dzUser]))}\n          value={state.fields.gca.value || null}\n          requiredPermissions={['actAsGCA']}\n        />\n        <HelperText type={state.fields.gca.error ? 'error' : 'info'}>\n          {state.fields.gca.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"Pilot\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['pilot', dzUser]))}\n          value={state.fields.pilot.value || null}\n          requiredPermissions={['actAsPilot']}\n        />\n        <HelperText type={state.fields.pilot.error ? 'error' : 'info'}>\n          {state.fields.pilot.error || ''}\n        </HelperText>\n\n        <Divider style={{ marginVertical: 8 }} />\n\n        <Checkbox.Item\n          label=\"Allow public manifesting\"\n          status={state.fields.isOpen.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.load.setField(['isOpen', !state.fields.isOpen.value]))\n          }\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nexport default function DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, buttonAction, title, loading, open, children } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} dismissable={false} style={{ maxWidth: 500, alignSelf: 'center' }}>\n        <ProgressBar indeterminate visible={loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>{title}</Dialog.Title>\n        <Dialog.Content pointerEvents=\"box-none\">\n          <Dialog.ScrollArea>\n            <ScrollView>{children}</ScrollView>\n          </Dialog.ScrollArea>\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={buttonAction}>{buttonLabel}</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\n\nimport useMutationCreateLoad from '../../api/hooks/useMutationCreateLoad';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { actions as snackbar } from '../notifications';\n\nimport { Load } from '../../api/schema';\nimport LoadForm from '../forms/load/LoadForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport { LoadFields } from '../forms/load/slice';\n\ninterface ILoadDialog {\n  open: boolean;\n  onClose(): void;\n  onSuccess(load: Load): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, onClose, onSuccess } = props;\n  const state = useAppSelector((root) => root.forms.load);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const dispatch = useAppDispatch();\n  const createLoad = useMutationCreateLoad({\n    onSuccess: (payload) => {\n      dispatch(\n        snackbar.showSnackbar({\n          message: `Load ${payload?.load?.name} created`,\n          variant: 'success',\n        })\n      );\n\n      if (payload?.load) {\n        onSuccess(payload?.load);\n      }\n      dispatch(actions.forms.load.reset());\n      requestAnimationFrame(() => dispatch(actions.forms.load.setOpen(false)));\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.load.setFieldError([field as keyof LoadFields, message])),\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  const onSave = React.useCallback(() => {\n    const variables = {\n      isOpen: !!state.fields.isOpen.value,\n      name: state.fields.name.value,\n      dropzoneId: currentDropzoneId,\n      maxSlots: state.fields.maxSlots.value || null,\n      planeId: Number(state.fields.plane.value?.id) || null,\n      gcaId: Number(state.fields.gca.value?.id) || null,\n      pilotId: Number(state.fields.pilot.value?.id) || null,\n    };\n    createLoad.mutate(variables);\n  }, [\n    createLoad,\n    currentDropzoneId,\n    state.fields.gca.value?.id,\n    state.fields.isOpen.value,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.pilot.value?.id,\n    state.fields.plane.value?.id,\n  ]);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={createLoad.loading}\n      title=\"New Load\"\n    >\n      <LoadForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport { useNavigation } from '@react-navigation/native';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport weatherBackground from '../../../../../assets/images/weather.png';\nimport nightBackground from '../../../../../assets/images/night.png';\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\nimport { actions, useAppDispatch } from '../../../../state';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { Permission } from '../../../../api/schema.d';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const { dropzone, loading, called } = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? new Date(dropzone?.currentConditions?.createdAt * 1000)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={() => {\n          if (canUpdate && dropzone?.currentConditions) {\n            dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n            navigation.navigate('WindScreen');\n          }\n        }}\n      >\n        <ImageBackground\n          source={theme.dark ? nightBackground : weatherBackground}\n          style={{ ...StyleSheet.absoluteFillObject }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, -80],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'center' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onPress={() => {\n                        if (dropzone?.currentConditions && canUpdate) {\n                          dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n                          navigation.navigate('JumpRunScreen');\n                        }\n                      }}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    marginHorizontal: 16,\n    // height: 200,\n    overflow: 'hidden',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    flexDirection: 'column',\n  },\n  jumpRun: {\n    width: 105,\n    height: 105,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Dimensions, RefreshControl, StyleSheet, useWindowDimensions } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, Menu, ProgressBar, useTheme } from 'react-native-paper';\nimport checkDropzoneSetupComplete from 'app/utils/checkDropzoneSetupComplete';\n\nimport NoResults from '../../../components/NoResults';\nimport { View } from '../../../components/Themed';\nimport { Load, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport GetStarted from './GetStarted';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport LoadDialog from '../../../components/dialogs/Load';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const setup = useAppSelector((root) => root.screens.dropzoneWizard);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const [isSetupCheckComplete, setSetupCheckComplete] = React.useState(false);\n  const { dropzone, currentUser, loading, refetch, fetchMore } = useCurrentDropzone();\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (dropzone && isFocused) {\n      const dropzoneWizardIndex = checkDropzoneSetupComplete(dropzone);\n      console.log({ dropzoneWizardIndex });\n\n      if (dropzoneWizardIndex) {\n        dispatch(actions.screens.dropzoneWizard.setIndex(dropzoneWizardIndex));\n        dispatch(actions.forms.dropzone.setOriginal(dropzone));\n        if (dropzone?.planes?.length) {\n          dispatch(actions.forms.plane.setOriginal(dropzone.planes[0]));\n        }\n        if (dropzone?.ticketTypes?.length) {\n          dispatch(actions.forms.ticketType.setOriginal(dropzone.ticketTypes[0]));\n        }\n        navigation.navigate('DropzoneSetupScreen');\n      }\n    }\n  }, [dispatch, dropzone, isFocused, navigation, setup.completed, isSetupCheckComplete]);\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const hasPlanes = !!dropzone?.planes?.length;\n  const hasTicketTypes = !!dropzone?.ticketTypes?.length;\n  const isPublic = !!dropzone?.isPublic;\n  const isSetupComplete = hasPlanes && hasTicketTypes;\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      dispatch(actions.global.setPrimaryColor(dropzone.secondaryColor));\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n\n  const onManifest = React.useCallback(\n    (load: Load) => {\n      if (!currentUser?.hasLicense) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You need to select a license on your user profile',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasMembership) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your membership is out of date',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasRigInspection) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs to be inspected before manifesting',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasReserveInDate) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs a reserve repack',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasExitWeight) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Update your exit weight on your profile before manifesting',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasCredits) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You have no credits on your account',\n            variant: 'info',\n          })\n        );\n      }\n\n      dispatch(actions.forms.manifest.setOpen(true));\n      dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n      dispatch(actions.forms.manifest.setField(['load', load]));\n      return null;\n    },\n    [currentUser, dispatch]\n  );\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const loads = dropzone?.loads?.edges || [];\n  const initialLoading = !loads?.length && loading;\n\n  const theme = useTheme();\n  return (\n    <View style={{ flex: 1, backgroundColor: theme.colors.background }}>\n      <ProgressBar visible={loading} indeterminate color={state.theme.colors.accent} />\n\n      <View style={styles.container}>\n        {!initialLoading && !isSetupComplete ? (\n          <GetStarted {...{ hasPlanes, hasTicketTypes, isPublic }} />\n        ) : (\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              height: Dimensions.get('window').height,\n            }}\n          >\n            <FlatList\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults title=\"No loads so far today\" subtitle=\"How's the weather?\" />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n                backgroundColor: theme.colors.background,\n              }}\n              testID=\"loads\"\n              keyExtractor={({ item }, idx) => `load-small-${item?.node?.id || idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n                backgroundColor: theme.colors.background,\n              }}\n              numColumns={numColumns}\n              data={initialLoading ? [1, 1, 1, 1, 1] : loads}\n              refreshControl={\n                <RefreshControl refreshing={loading} onRefresh={() => fetchMore({})} />\n              }\n              renderItem={({ item: edge, index }) => {\n                // 1 means loading, because null and undefined\n                // get filtered out\n                if (edge === 1) {\n                  return manifestScreen.display === 'list' ? (\n                    <LoadingCardLarge key={`loading-card-${index}`} />\n                  ) : (\n                    <LoadingCardSmall key={`loading-card-${index}`} />\n                  );\n                }\n                return manifestScreen.display === 'list' ? (\n                  <LoadCardLarge\n                    controlsVisible={false}\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onSlotPress={(slot) => {\n                      if (edge?.node) {\n                        dispatch(actions.forms.manifest.setOpen(slot));\n                        dispatch(actions.forms.manifest.setField(['load', edge.node]));\n                      }\n                    }}\n                    onSlotGroupPress={(slots) => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setFromSlots(slots));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                      navigation.navigate('ManifestGroupScreen');\n                    }}\n                    onManifest={() => {\n                      onManifest(edge.node);\n                    }}\n                    onManifestGroup={() => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setOpen(true));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                    }}\n                  />\n                ) : (\n                  <LoadCardSmall\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onPress={() => navigation.navigate('LoadScreen', { load: edge.node })}\n                  />\n                );\n              }}\n            />\n          </View>\n        )}\n        {canCreateLoad && isSetupComplete && (\n          <FAB\n            style={styles.fab}\n            small\n            icon=\"plus\"\n            onPress={() => dispatch(actions.forms.load.setOpen(true))}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n          visible={isDisplayOptionsOpen}\n          onDismiss={() => setDisplayOptionsOpen(false)}\n        >\n          <Menu.Item\n            title=\"Show expanded cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'cards' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <Menu.Item\n            title=\"Show compact cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'list' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n\n      <LoadDialog\n        onSuccess={() => {\n          dispatch(actions.forms.load.setOpen(false));\n          refetch();\n        }}\n        open={forms.load.open}\n        onClose={() => dispatch(actions.forms.load.setOpen(false))}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import { Dropzone } from 'app/api/schema.d';\nimport { DropzoneWizardStep } from 'app/screens/authenticated/dropzone_wizard/slice';\n\nexport default function checkDropzoneSetupComplete(dropzone: Dropzone) {\n  const completed = {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  };\n\n  let currentIndex;\n  if (dropzone?.ticketTypes?.length) {\n    completed[DropzoneWizardStep.Tickets] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Tickets;\n  }\n\n  if (dropzone.planes?.length) {\n    completed[DropzoneWizardStep.Aircraft] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Aircraft;\n  }\n\n  if (dropzone?.primaryColor) {\n    completed[DropzoneWizardStep.Branding] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Branding;\n  }\n  if (dropzone.lat && dropzone.lng) {\n    completed[DropzoneWizardStep.Location] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Location;\n  }\n\n  if (dropzone.federation?.id) {\n    completed[DropzoneWizardStep.Federation] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Federation;\n  }\n\n  if (dropzone.name) {\n    completed[DropzoneWizardStep.Name] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Name;\n  }\n\n  if (Object.values(completed).some((isComplete) => !isComplete)) {\n    return currentIndex;\n  }\n  return false;\n}\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { omit } from 'lodash';\nimport { Button, Card, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../../components/forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestGroupScreen {\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateMultipleSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupScreen(props: IManifestGroupScreen) {\n  const { onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const navigation = useNavigation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onSuccess?.();\n        navigation.navigate('Manifest', { screen: 'DropzoneScreen' });\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    navigation,\n    onSuccess,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <ProgressBar\n        indeterminate\n        visible={mutationData.loading}\n        color={globalState.theme.colors.accent}\n      />\n      <Card.Title\n        // eslint-disable-next-line max-len\n        title={`Manifest ${state?.fields?.users?.value?.length} jumpers on Load #${state.fields.load?.value?.loadNumber}`}\n      />\n      <ManifestGroupForm />\n      <Button\n        mode=\"contained\"\n        style={{ width: '100%', marginVertical: 16 }}\n        onPress={() => onManifest()}\n        loading={mutationData.loading}\n      >\n        Save\n      </Button>\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Checkbox, Divider, FAB, List, ProgressBar } from 'react-native-paper';\n\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { DropzoneUser, Query } from '../../../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupUserSelectScreen() {\n  const global = useAppSelector((root) => root.global);\n  const manifest = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: manifest.searchText,\n    },\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (manifest.isSearchVisible) {\n      dispatch(actions.screens.manifest.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, manifest.isSearchVisible]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 0 }}>\n        {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n          <NoResults title=\"No users\" subtitle=\"\" />\n        )}\n\n        {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n          <>\n            <List.Item\n              style={{ width: '100%' }}\n              key={`user-${edge?.node?.id}`}\n              title={edge?.node?.user.name}\n              description={edge?.node?.role?.name}\n              left={() =>\n                !edge?.node?.user?.image ? (\n                  <List.Icon icon=\"account\" />\n                ) : (\n                  <Avatar.Image\n                    source={{ uri: edge?.node?.user.image }}\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={32}\n                  />\n                )\n              }\n              right={() => (\n                <Checkbox.Android\n                  status={\n                    manifest.selectedUsers?.map(({ id }) => id).includes(edge?.node?.id || '')\n                      ? 'checked'\n                      : 'unchecked'\n                  }\n                />\n              )}\n              onPress={() =>\n                dispatch(\n                  actions.screens.manifest.setSelected(\n                    manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                      ? manifest.selectedUsers?.filter(({ id }) => id !== `${edge?.node?.id}`)\n                      : [...manifest.selectedUsers, edge?.node as DropzoneUser]\n                  )\n                )\n              }\n            />\n            <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n          </>\n        ))}\n      </ScrollableScreen>\n      <FAB\n        style={styles.fab}\n        small\n        visible={manifest.selectedUsers.length > 0}\n        icon=\"check\"\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(manifest.selectedUsers));\n          navigation.setParams({ select: false });\n          dispatch(actions.screens.manifest.setSearchVisible(false));\n          dispatch(actions.screens.manifest.setSelected([]));\n          navigation.navigate('ManifestGroupScreen');\n        }}\n        label=\"Next\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\n\ninterface IDatepicker {\n  label: string;\n  timestamp: number;\n  disabled?: boolean;\n  onChange(timestamp: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, timestamp, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Menu\n        onDismiss={() => setOpen(false)}\n        visible={open}\n        anchor={\n          <List.Item\n            onPress={() => setOpen(true)}\n            disabled={!!disabled}\n            title={label}\n            description={timestamp ? format(timestamp * 1000, 'yyyy/MM/dd') : 'No date selected'}\n            left={() => <List.Icon icon=\"calendar\" />}\n          />\n        }\n      >\n        <DayPicker\n          selectedDays={timestamp ? [new Date(timestamp * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </Menu>\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport { Query, UserRole } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRoleSelect {\n  value?: UserRole | null;\n  required?: boolean;\n  disabled?: boolean;\n  onSelect(jt: UserRole): void;\n}\n\nconst QUERY_ROLES = gql`\n  query RolesQuery($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles(selectable: true) {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const { onSelect, disabled, required, value } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useQuery<Query>(QUERY_ROLES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  return (\n    <>\n      <List.Subheader style={{ paddingLeft: 0 }}>Access level</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={!disabled && isMenuOpen}\n        anchor={\n          <List.Item\n            left={() => <List.Icon icon=\"lock\" />}\n            onPress={\n              disabled\n                ? undefined\n                : () => {\n                    setMenuOpen(true);\n                  }\n            }\n            title={value?.name?.replace('_', ' ')?.toUpperCase() || 'Access level'}\n            description={!required ? 'Optional' : null}\n          />\n        }\n      >\n        {data?.dropzone?.roles?.map((role) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(role);\n            }}\n            title={role.name?.replace('_', ' ').toUpperCase() || '-'}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n        required\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Mutation } from '../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUser): void;\n}\n\nconst MUTATION_EDIT_DROPZONE_USER = gql`\n  mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n    updateDropzoneUser(\n      input: { id: $dropzoneUserId, attributes: { userRoleId: $userRoleId, expiresAt: $expiresAt } }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      dropzoneUser {\n        id\n        credits\n        expiresAt\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationUpdateDropzoneUser, createData] = useMutation<Mutation>(\n    MUTATION_EDIT_DROPZONE_USER\n  );\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        props.onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    props,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n        <Dialog.Content>\n          <DropzoneUserForm />\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.dropzoneUser.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, HelperText, Divider, DataTable } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport { TransactionType } from '../../../api/schema.d';\nimport NumberField from '../../input/number_input/NumberField';\n\nexport default function CreditsForm() {\n  const state = useAppSelector((root) => root.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = state.original?.credits || 0;\n  const amount = state.fields.amount.value || 0;\n\n  const subtotal =\n    state.fields.transactionType.value === TransactionType.Deposit\n      ? amount + currentCredits\n      : amount - currentCredits;\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Message\"\n        error={!!state.fields.message.error}\n        value={state.fields.message.value?.toString() || ''}\n        onChangeText={(newValue: string) =>\n          dispatch(actions.forms.credits.setField(['message', newValue]))\n        }\n      />\n      <HelperText type={state.fields.message.error ? 'error' : 'info'}>\n        {state.fields.message.error || ''}\n      </HelperText>\n      {state.fields.transactionType.value === 'deposit' ? (\n        <View>\n          <NumberField\n            label=\"Add amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Deposit</DataTable.Title>\n              <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      ) : (\n        <View>\n          <NumberField\n            label=\"Withdraw amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Withdraw</DataTable.Title>\n              <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { useCreateOrderMutation } from '../../../api/reflection';\nimport { DropzoneUser, TransactionType, WalletableTypes } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsForm from '../../forms/credits/CreditsForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUser;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.credits);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateOrder, createData] = useCreateOrderMutation();\n  const global = useAppSelector((root) => root.global);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(actions.forms.credits.setFieldError(['amount', 'You must specify an amount']));\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.amount.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n\n    if (!dropzoneUser?.id || state.fields.amount.value === null || !global.currentDropzoneId) {\n      return;\n    }\n\n    try {\n      const response = await mutationCreateOrder({\n        variables: {\n          amount: state.fields.amount.value,\n          title:\n            state.fields.message.value ||\n            `${\n              state.fields.transactionType.value === TransactionType.Deposit\n                ? 'Added funds'\n                : 'Withdrew funds'\n            }`,\n          seller:\n            state.fields.transactionType.value !== TransactionType.Deposit\n              ? {\n                  type: WalletableTypes.Dropzone,\n                  id: `${global.currentDropzoneId}`,\n                }\n              : {\n                  type: WalletableTypes.DropzoneUser,\n                  id: dropzoneUser.id,\n                },\n          buyer:\n            state.fields.transactionType.value === TransactionType.Deposit\n              ? {\n                  type: WalletableTypes.Dropzone,\n                  id: `${global.currentDropzoneId}`,\n                }\n              : {\n                  type: WalletableTypes.DropzoneUser,\n                  id: dropzoneUser.id,\n                },\n          dropzoneId: Number(global.currentDropzoneId),\n        },\n      });\n      const { data: result } = response;\n\n      result?.createOrder?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'amount':\n            return dispatch(actions.forms.credits.setFieldError(['amount', message]));\n          case 'message':\n            return dispatch(actions.forms.credits.setFieldError(['message', message]));\n          case 'status':\n            return dispatch(actions.forms.credits.setFieldError(['status', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.createOrder?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.createOrder?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.createOrder?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        props.onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    validate,\n    dropzoneUser?.id,\n    state.fields.amount.value,\n    state.fields.message.value,\n    state.fields.transactionType.value,\n    global.currentDropzoneId,\n    mutationCreateOrder,\n    dispatch,\n    props,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <CreditsForm />\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.credits.reset());\n              onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('Manufacturer is required')],\n    model: [isRequired('Model is required')],\n    serial: [isRequired('Serial number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'You can give your equipment a nickname'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Make\"\n        error={!!state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n      <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n        {state.fields.make.error || 'e.g Javelin, Mirage'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Model\"\n        error={!!state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Serial\"\n        error={!!state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n      <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n        {state.fields.serial.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Current canopy size\"\n        error={!!state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.canopySize.error ? 'error' : 'info'}>\n        {state.fields.canopySize.error || 'Size of canopy in container'}\n      </HelperText>\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          selected={[state.fields.rigType?.value || 'sport']}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField(['rigType', rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateRig.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    } else {\n      await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { License, Query } from '../../../api/schema.d';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: License | null;\n  federationId?: number | null;\n  onSelect(jt: License): void;\n}\n\nconst QUERY_LICENSES = gql`\n  query Licenses($federationId: Int) {\n    licenses(federationId: $federationId) {\n      id\n      name\n\n      federation {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useQuery<Query>(QUERY_LICENSES, {\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<License>\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        selected={[value].filter(Boolean) as License[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { List, Menu, TextInput } from 'react-native-paper';\nimport { Federation, Query } from '../../../api/schema.d';\n\ninterface IFederationSelect {\n  value?: Federation | null;\n  onSelect(jt: Federation): void;\n}\n\nconst QUERY_FEDERATIONS = gql`\n  query Federations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\nexport default function FederationSelect(props: IFederationSelect) {\n  const { value, onSelect } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n\n  const { data } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onSelect(data.federations[0]);\n    }\n  }, [data?.federations, onSelect, value]);\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={isMenuOpen}\n        anchor={\n          <TouchableOpacity\n            onPress={() => {\n              setMenuOpen(true);\n            }}\n          >\n            <TextInput\n              mode=\"outlined\"\n              disabled\n              style={{ minWidth: 200 }}\n              value={value?.name || 'Please select federation'}\n            />\n          </TouchableOpacity>\n        }\n      >\n        {data?.federations?.map((federation) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(federation);\n            }}\n            title={federation.name || '-'}\n            key={`federation-select-${federation.id}`}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(actions.forms.user.setField(['exitWeight', state.original.exitWeight || '60']));\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Nickname\"\n        error={!!state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Phone\"\n        error={!!state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        onChangeText={(num) =>\n          dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))\n        }\n        label=\"Exit weight (kg)\"\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useCurrentDropzone from './useCurrentDropzone';\n\nexport const QUERY_DROPZONE_USER = gql`\n  query QueryDropzoneUser($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n        rigInspections {\n          id\n          isOk\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          rig {\n            id\n          }\n        }\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n            }\n          }\n        }\n\n        orders {\n          edges {\n            node {\n              id\n              state\n              createdAt\n              amount\n              title\n              buyer {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              seller {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              item {\n                title\n                cost\n\n                ... on Slot {\n                  id\n\n                  ticketType {\n                    id\n                    name\n                    cost\n                  }\n\n                  extras {\n                    id\n                    name\n                    cost\n                  }\n                }\n                ... on TicketType {\n                  id\n                }\n                ... on Extra {\n                  id\n                  name\n                }\n              }\n              receipts {\n                id\n                transactions {\n                  id\n                  transactionType\n                  status\n                  createdAt\n                  amount\n                  message\n                  sender {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                  receiver {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        license {\n          id\n          name\n        }\n        user {\n          id\n          name\n          nickname\n          exitWeight\n          email\n          phone\n          image\n          moderationRole\n          rigs {\n            id\n            packingCard\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id?: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const currentDropzone = useCurrentDropzone();\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id || Number(currentDropzone?.data?.dropzone?.currentUser?.id),\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser:\n      !id || id === Number(currentDropzone?.data?.dropzone?.currentUser?.id)\n        ? currentDropzone?.data?.dropzone?.currentUser\n        : dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import * as React from 'react';\nimport { startOfDay } from 'date-fns';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { QUERY_DROPZONE_USER } from '../../api/hooks/useDropzoneUser';\nimport { useJoinFederationMutation, QueryDropzoneDocument } from '../../api/reflection';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId: number;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const currentDropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [joinFederation] = useJoinFederationMutation();\n  const currentDropzone = useCurrentDropzone();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Profile has been updated`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    mutation: {\n      refetchQueries: [\n        {\n          query: QueryDropzoneDocument,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      id: Number(state.original?.id),\n      name: state.fields.name.value,\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    if (\n      (state.fields.license.value?.id &&\n        state.original?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !==\n          state.original?.userFederations?.find(\n            ({ federation }) => federation.id === currentDropzone.dropzone?.federation?.id\n          )?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federationId: Number(state.fields.license.value?.federation?.id),\n          uid: state.fields?.apfNumber?.value,\n          licenseId: state.fields.license.value?.id ? Number(state.fields.license.value?.id) : null,\n        },\n      });\n    }\n  }, [\n    currentDropzone.dropzone?.federation?.id,\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.license?.id,\n    state.original?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USER_PROFILE = gql`\n  query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n\n        slots {\n          edges {\n            node {\n              id\n              createdAt\n              load {\n                id\n                name\n                loadNumber\n                dispatchAt\n                createdAt\n              }\n              jumpType {\n                id\n                name\n              }\n              ticketType {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_PROFILE, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser: dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Menu,\n  Paragraph,\n  Title,\n  TouchableRipple,\n} from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { DropzoneUser, Permission } from '../../../../api/schema.d';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUser;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, onEdit, canEdit, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.onSurface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            {!dropzoneUser?.user?.image ? (\n              <Avatar.Icon size={80} icon=\"account\" />\n            ) : (\n              <Avatar.Image\n                size={80}\n                source={{ uri: dropzoneUser?.user.image }}\n                style={{ backgroundColor: palette.primary.light }}\n              />\n            )}\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            onDismiss={() => setContactOpen(false)}\n            visible={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    actAsDZSO: 'shield-cross',\n    actAsGCA: 'radio-handheld',\n    actAsLoadMaster: 'shield-account',\n    actAsPilot: 'shield-airplane',\n    actAsRigInspector: 'shield-search',\n  }[type];\n\n  const label = {\n    actAsDZSO: 'DZSO',\n    actAsGCA: 'GCA',\n    actAsLoadMaster: 'Load Master',\n    actAsPilot: 'Pilot',\n    actAsRigInspector: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            icon={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { RevokePermissionPayload } from '../schema';\n\nexport const MUTATION_REVOKE_PERMISSION = gql`\n  mutation RevokePermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    revokePermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  RevokePermissionPayload\n>(MUTATION_REVOKE_PERMISSION, {\n  getPayload: (result) => result.revokePermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { GrantPermissionPayload } from '../schema';\n\nexport const MUTATION_GRANT_PERMISSION = gql`\n  mutation GrantPermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    grantPermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  GrantPermissionPayload\n>(MUTATION_GRANT_PERMISSION, {\n  getPayload: (result) => result.grantPermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import { useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport startOfDay from 'date-fns/startOfDay';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { QUERY_DROPZONE_USERS } from 'app/api/hooks/useQueryDropzoneUsers';\nimport { QUERY_PERMISSION_USER } from 'app/components/chips/GcaChip';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUser, Permission, Query } from 'app/api/schema.d';\n\nimport { QueryDropzoneDocument } from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport { QUERY_DROPZONE_USER_PROFILE } from 'app/api/hooks/useDropzoneUserProfile';\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useMutationRevokePermission from 'app/api/hooks/useMutationRevokePermission';\nimport useMutationGrantPermission from 'app/api/hooks/useMutationGrantPermission';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUser;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const revokePermission = useMutationRevokePermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission revoked' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QueryDropzoneDocument,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(route.params.userId),\n          },\n        },\n      ],\n    },\n  });\n  const grantPermission = useMutationGrantPermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission granted' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QueryDropzoneDocument,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(route.params.userId),\n          },\n        },\n      ],\n    },\n  });\n\n  const badges = permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const shouldShowBadge = (permission: Permission) =>\n    canGrantPermission || badges.includes(permission);\n\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revokePermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const updatedList = (c?.dropzone?.dropzoneUsers?.edges || []).filter(\n                          (edge) => edge?.node?.id !== dropzoneUser?.id\n                        );\n\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        });\n\n                        return {\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        };\n                      },\n                    }\n                  )\n                : grantPermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const current = c?.dropzone?.dropzoneUsers?.edges || [];\n                        const shouldUpdate = !!current.find(\n                          (edge) => edge?.node?.id === dropzoneUser?.id\n                        );\n\n                        const updatedGcaList = shouldUpdate\n                          ? [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []).map((edge) =>\n                                edge?.node?.id !== dropzoneUser?.id\n                                  ? edge\n                                  : {\n                                      ...edge,\n                                      node: {\n                                        ...edge?.node,\n                                        ...data?.grantPermission?.dropzoneUser,\n                                      },\n                                    }\n                              ),\n                            ]\n                          : [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []),\n                              {\n                                node: data?.grantPermission?.dropzoneUser,\n                              },\n                            ];\n                        const newData = {\n                          ...c,\n                          dropzone: {\n                            ...c?.dropzone,\n                            dropzoneUsers: {\n                              edges: updatedGcaList,\n                            },\n                          },\n                        };\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            dropzoneId: Number(state.currentDropzoneId),\n                            permissions: [permission],\n                          },\n                          data: newData,\n                        });\n\n                        return {\n                          data: newData,\n                        };\n                      },\n                    }\n                  )\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlot {\n  slot: Slot;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 0,\n              right: 8,\n            }}\n          >\n            {format((slot?.load?.dispatchAt || slot.createdAt) * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`Load #${slot.load.loadNumber}`}\n            description={slot.ticketType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text style={[styles.jumpType, { color: theme.colors.onSurface }]}>\n                  {slot.jumpType?.name}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  flex: 1,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <MaterialCommunityIcons\n                  color={theme.colors.text}\n                  name=\"parachute-outline\"\n                  size={36}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  jumpType: { fontSize: 24, marginLeft: 4, fontWeight: '100', textAlign: 'center' },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 4, paddingBottom: 4 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Platform, RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Card, Divider, List, ProgressBar } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport * as ImagePicker from 'expo-image-picker';\nimport Skeleton from 'react-native-skeleton-content';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Mutation, Permission } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from 'app/components/dialogs/CreditsDialog/Credits';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\n// eslint-disable-next-line max-len\nimport useDropzoneUserProfile from 'app/api/hooks/useDropzoneUserProfile';\nimport useRestriction from 'app/hooks/useRestriction';\n\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\nimport PermissionBadges from './UserInfo/PermissionBadges';\n\nimport SlotCard from './SlotCard';\n\nconst MUTATION_UPDATE_IMAGE = gql`\n  mutation UpdateUserImage($id: Int, $image: String) {\n    updateUser(input: { id: $id, attributes: { image: $image } }) {\n      user {\n        id\n        name\n        exitWeight\n        email\n        image\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        userFederations {\n          id\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const isSelf = currentUser?.id === route.params.userId;\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUserProfile(\n    Number(route.params.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const [mutationUpdateUser] = useMutation<Mutation>(MUTATION_UPDATE_IMAGE);\n\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      // Upload image\n      await mutationUpdateUser({\n        variables: {\n          id: Number(dropzoneUser?.user?.id),\n          image: `data:image/jpeg;base64,${result.base64}`,\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.user?.id, mutationUpdateUser]);\n\n  const badges = dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const windowDimensions = useWindowDimensions();\n  const wrappingHeaderItemWidth =\n    windowDimensions.width > 600 ? windowDimensions.width / 2 : windowDimensions.width;\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      <ScrollableScreen\n        style={{ backgroundColor: state.theme.colors.background }}\n        contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n      >\n        <View style={styles.wrappingHeader}>\n          <View style={{ width: wrappingHeaderItemWidth }}>\n            {!dropzoneUser ? (\n              <Skeleton\n                key=\"profile-header\"\n                containerStyle={{\n                  height: 256,\n                  width: '100%',\n                }}\n                isLoading\n                layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n              />\n            ) : (\n              <Header\n                dropzoneUser={dropzoneUser}\n                canEdit={isSelf}\n                onEdit={() => {\n                  if (dropzoneUser?.user) {\n                    dispatch(actions.forms.user.setOpen(dropzoneUser));\n                  }\n                }}\n                onPressAvatar={onPickImage}\n              >\n                <PermissionBadges {...{ dropzoneUser, permissions: badges }} />\n                <InfoGrid\n                  style={{ height: 80 }}\n                  items={[\n                    {\n                      title: 'Funds',\n                      value: `$${dropzoneUser?.credits || 0}`,\n                      onPress: () => {\n                        if (dropzoneUser && canAddTransaction) {\n                          dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                        }\n                      },\n                    },\n                    {\n                      title: 'License',\n                      value: `${dropzoneUser?.license?.name || '-'}`,\n                    },\n                    {\n                      title: 'Exit weight',\n                      value: Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                    },\n                  ]}\n                />\n                <Divider style={styles.divider} />\n              </Header>\n            )}\n          </View>\n          <View style={{ width: wrappingHeaderItemWidth }}>\n            {windowDimensions.width === wrappingHeaderItemWidth ? (\n              <List.Subheader>Manage</List.Subheader>\n            ) : null}\n            <Card\n              style={{\n                minHeight: windowDimensions.width === wrappingHeaderItemWidth ? undefined : 256,\n                paddingTop: 8,\n              }}\n              elevation={1}\n            >\n              {isSelf ? (\n                <>\n                  <List.Item\n                    style={{ width: '100%', padding: 0 }}\n                    title=\"Setup Wizard\"\n                    left={() => <List.Icon icon=\"account-convert\" />}\n                    right={() => <List.Icon icon=\"chevron-right\" />}\n                    onPress={() => {\n                      if (dropzoneUser) {\n                        dispatch(actions.forms.user.setOriginal(dropzoneUser));\n                        if (dropzoneUser?.user?.rigs?.length) {\n                          dispatch(actions.forms.rig.setOriginal(dropzoneUser.user.rigs[0]));\n                        }\n                        navigation.navigate('UserSetupWizard');\n                      }\n                    }}\n                  />\n                  <Divider style={{ width: '100%' }} />\n                </>\n              ) : null}\n              {canUpdateUsers ? (\n                <>\n                  <List.Item\n                    style={{ width: '100%', padding: 0 }}\n                    title=\"Access and Membership\"\n                    left={() => <List.Icon icon=\"lock\" />}\n                    onPress={() =>\n                      dropzoneUser\n                        ? dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser))\n                        : null\n                    }\n                  />\n                  <Divider style={{ width: '100%' }} />\n                </>\n              ) : null}\n              {isSelf || canViewOthersTransactions ? (\n                <>\n                  <List.Item\n                    style={{ width: '100%', padding: 0 }}\n                    title=\"Transactions\"\n                    left={() => <List.Icon icon=\"cash\" />}\n                    right={() => <List.Icon icon=\"chevron-right\" />}\n                    onPress={() =>\n                      navigation.navigate('TransactionsScreen', { userId: dropzoneUser?.id })\n                    }\n                  />\n                  <Divider style={{ width: '100%' }} />\n                </>\n              ) : null}\n              <List.Item\n                style={{ width: '100%', padding: 0 }}\n                title=\"Equipment\"\n                left={() => <List.Icon icon=\"parachute\" />}\n                right={() => <List.Icon icon=\"chevron-right\" />}\n                onPress={() => navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id })}\n              />\n            </Card>\n          </View>\n        </View>\n        <View style={{ width: '100%' }}>\n          <List.Subheader>History</List.Subheader>\n          <Card style={{ margin: 8, marginHorizontal: 0 }} elevation={1}>\n            {dropzoneUser?.slots?.edges?.map((edge) =>\n              edge?.node ? (\n                <SlotCard\n                  slot={edge.node}\n                  onPress={() => {\n                    navigation.navigate('LoadScreen', { load: edge.node });\n                  }}\n                />\n              ) : null\n            )}\n          </Card>\n        </View>\n      </ScrollableScreen>\n\n      <RigDialog\n        onClose={onCloseRigForm}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n\n      <DropzoneUserDialog\n        onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n        onSuccess={(user) => {\n          dispatch(actions.forms.dropzoneUser.setOpen(false));\n          if (currentUser?.id === dropzoneUser?.id) {\n            dispatch(actions.global.setUser(user.user));\n            refetch();\n          }\n        }}\n        open={forms.dropzoneUser.open}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n\n      <EditUserSheet\n        dropzoneUserId={Number(dropzoneUser?.id)}\n        onClose={onUserSheetClose}\n        onSuccess={() => {\n          dispatch(actions.forms.user.setOpen(false));\n        }}\n        open={forms.user.open}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONE_USER_NOTIFICATIONS = gql`\n  query QueryNotifications($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      currentUser {\n        id\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n              sentBy {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n\n              resource {\n                ... on Load {\n                  id\n                  loadNumber\n                  dispatchAt\n                  state\n                }\n                ... on Transaction {\n                  id\n                  amount\n                  message\n                  status\n                }\n\n                ... on Slot {\n                  id\n                  load {\n                    id\n                    loadNumber\n                    dispatchAt\n                    state\n                  }\n                }\n\n                ... on Rig {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                  rigInspections(dropzoneId: $dropzoneId) {\n                    id\n                    createdAt\n                    inspectedBy {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                  }\n                }\n\n                ... on RigInspection {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useNotifications() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const query = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_NOTIFICATIONS, {\n    variables: {\n      dropzoneId,\n    },\n    pollInterval: 30000,\n  });\n\n  return {\n    ...query,\n    notifications: query?.data?.dropzone?.currentUser.notifications,\n  };\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from '../../../../state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: number;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(timestamp * 1000, { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Slot } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: (notification.resource as Slot).load },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useNavigation } from '@react-navigation/native';\nimport { Load, Notification } from '../../../../api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: notification.resource as Load },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Rig } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('RigInspectionScreen', {\n              rig: (notification.resource as Rig).id,\n              dropzoneUserId: (notification.resource as Rig).user?.id,\n            })\n          : navigation.navigate('Manifest', {\n              screen: 'Profile',\n              params: {\n                screen: 'ProfileScreen',\n              },\n            })\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport NotificationCard from './NotificationCard';\nimport { Notification } from '../../../../api/schema.d';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from '../../../state';\nimport useNotifications from '../../../api/hooks/useNotifications';\nimport { NotificationType } from '../../../api/schema.d';\nimport NoResults from '../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\n/* const MUTATION_MARK_AS_SEEN = gql`\n  mutation MarkAsSeen($id: Int) {\n    updateNotification(input: { id: $id, attributes: { isSeen: true } }) {\n      notification {\n        id\n        isSeen\n        message\n        notificationType\n        receivedBy {\n          notifications {\n            edges {\n              node {\n                id\n                message\n                isSeen\n                notificationType\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n*/\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { notifications, loading, refetch } = useNotifications();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      {notifications?.edges?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n        </View>\n      )}\n      <FlatList\n        data={notifications?.edges}\n        numColumns={1}\n        style={{\n          flex: 1,\n        }}\n        renderItem={({ item: edge }) => {\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return <BoardingCallNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.UserManifested:\n              return <ManifestedCard key={edge.node.id} notification={edge.node} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return <RigInspectionNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return <PermissionNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.PublicationRequested:\n              return <PublicationRequestNotification key={edge.node.id} notification={edge.node} />;\n            default:\n              return null;\n          }\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string;\n  name: string;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text label={initals} {...rest} />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n      size={32}\n      {...rest}\n    />\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Dropzone, DropzoneUser, Order } from '../../../api/schema';\nimport UserAvatar from '../../../components/UserAvatar';\n\ninterface IOrder {\n  order: Order;\n  dropzoneUser?: DropzoneUser | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    (order.buyer?.__typename === 'DropzoneUser' && (order.buyer as DropzoneUser))?.id ===\n    dropzoneUser?.id\n      ? 'cash-minus'\n      : 'cash-plus';\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Card.Content style={styles.orderContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {format(order?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`#${order.id} ${order.title}`}\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            descriptionStyle={styles.orderDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                {showAvatar ? (\n                  <UserAvatar\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={30}\n                    name={\n                      (order?.buyer as DropzoneUser)?.user?.name ||\n                      (order?.buyer as Dropzone).name ||\n                      ''\n                    }\n                    image={\n                      (order?.buyer as DropzoneUser).user?.image ||\n                      (order?.buyer as Dropzone).banner ||\n                      undefined\n                    }\n                  />\n                ) : (\n                  <MaterialCommunityIcons\n                    color={\n                      // eslint-disable-next-line no-underscore-dangle\n                      '__typename' in order.buyer &&\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                      // @ts-ignore\n                      order.buyer.__typename === 'DropzoneUser' &&\n                      (order.buyer as DropzoneUser)?.id === dropzoneUser?.id\n                        ? '#FF1414'\n                        : successColor\n                    }\n                    name={icon}\n                    size={36}\n                    style={{ marginHorizontal: 16 }}\n                  />\n                )}\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  ${order.amount}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet, Platform } from 'react-native';\nimport { Avatar, Card, Chip, Divider, Menu, ProgressBar, useTheme } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/core';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nimport useMutationUpdateRig from '../../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { errorColor, successColor } from '../../../constants/Colors';\n\nimport { DropzoneUser, Permission, Rig, RigInspection } from '../../../api/schema.d';\n\nexport interface IRigCardProps {\n  rig: Rig;\n  dropzoneUser?: DropzoneUser | null;\n  rigInspection?: RigInspection;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      dispatch(\n        actions.notifications.showSnackbar({ message: 'Image uploaded', variant: 'success' })\n      );\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'Upload failed', variant: 'error' }));\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result.base64}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.user?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          onDismiss={() => setPackingCardMenuOpen(false)}\n          visible={isPackingCardMenuOpen}\n          style={{ marginTop: 12 }}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <Menu.Item\n            title=\"Upload new\"\n            icon=\"camera\"\n            style={{ paddingVertical: 0 }}\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <Menu.Item\n                title=\"View\"\n                icon=\"eye\"\n                style={{ paddingVertical: 0 }}\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rig,\n              dropzoneUserId: Number(dropzoneUser?.id),\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Permission } from '../../../api/schema.d';\nimport RigDialog from '../../../components/dialogs/Rig';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigCard from './RigCard';\n\nexport default function ProfileScreen() {\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const navigation = useNavigation();\n\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        style={styles.fab}\n        visible={canUpdateUser}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { List, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const { data } = useCurrentDropzone();\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  return (\n    <ScrollableScreen>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            onPress={() =>\n              navigation.navigate('UpdateDropzoneScreen', {\n                dropzone: data?.dropzone,\n              })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n        <List.Item\n          title=\"Permissions\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() => navigation.navigate('DropzonePermissionScreen')}\n        />\n        <List.Item\n          title=\"Aircrafts\"\n          onPress={() => navigation.navigate('PlanesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() => navigation.navigate('DropzoneRigsScreen')}\n        />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() => navigation.navigate('RigInspectionTemplateScreen')}\n        />\n        <List.Item\n          title=\"Master Log\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"View historic data for daily operations\"\n          onPress={() => navigation.navigate('DropzoneMasterLogScreen')}\n        />\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          title=\"Ticket types\"\n          onPress={() => navigation.navigate('TicketTypesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <List.Item\n          title=\"Ticket add-ons\"\n          onPress={() => navigation.navigate('ExtrasScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { MutationCreateTicketTypeArgs, CreateTicketPayload } from '../schema';\n\nconst MUTATION_CREATE_TICKET_TYPE = gql`\n  mutation CreateTicketType(\n    $name: String\n    $cost: Float\n    $dropzoneId: Int!\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    createTicketType(\n      input: {\n        attributes: {\n          name: $name\n          cost: $cost\n          dropzoneId: $dropzoneId\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extraIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  MutationCreateTicketTypeArgs['input']['attributes'],\n  CreateTicketPayload\n>(MUTATION_CREATE_TICKET_TYPE, {\n  getPayload: (result) => result.createTicketType,\n  fieldErrorMap: {\n    extraIds: 'extras',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price')],\n    altitude: [isRequired('Altitude must be specified'), isNumeric('Altitude must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateTicketTypeArgs, UpdateTicketPayload } from '../schema';\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketType(\n    $id: Int!\n    $name: String\n    $cost: Float\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    updateTicketType(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          cost: $cost\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extraIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateTicketTypeArgs['input']['attributes'],\n  UpdateTicketPayload\n>(MUTATION_UPDATE_TICKET_TYPE, {\n  getPayload: (result) => result.updateTicketType,\n  fieldErrorMap: {\n    id: 'original',\n    extraIds: 'extras',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Menu, List, Divider } from 'react-native-paper';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Extra, Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nconst QUERY_EXTRAS = gql`\n  query QueryExtras($dropzoneId: Int!) {\n    extras(dropzoneId: $dropzoneId) {\n      id\n      cost\n      name\n\n      ticketTypes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst ALTITUDE_LABEL_MAP: { [key: string]: string } = {\n  '14000': 'Height',\n  '4000': 'Hop n Pop',\n};\n\nexport default function TicketTypeForm() {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const { data } = useQuery<Query>(QUERY_EXTRAS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ticketType.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'Name of the ticket users will see'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ticketType.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || 'Base cost without extra ticket addons'}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <Menu\n          onDismiss={() => setAltitudeMenuOpen(false)}\n          visible={altitudeMenuOpen}\n          style={{ position: 'absolute', right: '10%', left: '10%', flex: 1 }}\n          anchor={\n            <List.Item\n              onPress={() => {\n                setAltitudeMenuOpen(true);\n              }}\n              title={\n                state.fields.altitude.value &&\n                state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                  ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                  : 'Custom'\n              }\n              style={{ width: '100%', flex: 1 }}\n              right={() => (\n                <List.Icon\n                  icon={\n                    state.fields.altitude.value &&\n                    state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                      ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                      : 'pencil-plus'\n                  }\n                />\n              )}\n            />\n          }\n        >\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Hop n Pop\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Height\"\n            right={() => <List.Icon icon=\"airplane-takeoff\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Other\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n        </Menu>\n\n        {(!state.fields.altitude.value || ![4000, 14000].includes(state.fields.altitude.value)) && (\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Custom altitude\"\n            error={!!state.fields.altitude.error}\n            value={state.fields.altitude?.value?.toString()}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n            }\n          />\n        )}\n\n        <Checkbox.Item\n          label=\"Tandem\"\n          style={{ width: '100%' }}\n          status={state.fields.isTandem.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.ticketType.setField(['isTandem', !state.fields.isTandem.value]))\n          }\n        />\n        <HelperText type={state.fields.isTandem.error ? 'error' : 'info'}>\n          {state.fields.isTandem.error ||\n            'Allow also manifesting a passenger when using this ticket type'}\n        </HelperText>\n\n        <Checkbox.Item\n          label=\"Public manifesting\"\n          style={{ width: '100%' }}\n          status={state.fields.allowManifestingSelf.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(\n              actions.forms.ticketType.setField([\n                'allowManifestingSelf',\n                !state.fields.allowManifestingSelf.value,\n              ])\n            )\n          }\n        />\n\n        <HelperText type={state.fields.allowManifestingSelf.error ? 'error' : 'info'}>\n          {state.fields.allowManifestingSelf.error ||\n            'Allow users to manifest themselves with this ticket'}\n        </HelperText>\n\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        {data?.extras.map((extra) => (\n          <Checkbox.Item\n            key={`extra-${extra.id}`}\n            label={extra.name || ''}\n            status={\n              state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.ticketType.setField([\n                  'extras',\n                  state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                    ? state.fields.extras.value?.filter(({ id }) => id !== extra.id)\n                    : [...(state.fields.extras?.value as Required<Extra[]>), extra],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useIsFocused } from '@react-navigation/core';\nimport useMutationCreateTicketType from '../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../api/hooks/useMutationUpdateTicketType';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport TicketTypeForm from '../forms/ticket_type/TicketTypeForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { TicketTypeFields } from '../forms/ticket_type/slice';\n\ninterface ITicketTypeDialog {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const createTicketType = useMutationCreateTicketType({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Saved`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.ticketType.reset());\n      onClose();\n    },\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateTicketType = useMutationUpdateTicketType({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved`,\n            variant: 'success',\n          })\n        );\n        dispatch(actions.forms.ticketType.reset());\n        onClose();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (isFocused) {\n      dispatch(actions.forms.ticketType.reset());\n    }\n  }, [dispatch, isFocused]);\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateTicketType.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    } else {\n      await createTicketType.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    }\n  }, [\n    createTicketType,\n    currentDropzone?.dropzone?.id,\n    state.fields.allowManifestingSelf.value,\n    state.fields.altitude.value,\n    state.fields.cost.value,\n    state.fields.extras?.value,\n    state.fields.isTandem.value,\n    state.fields.name.value,\n    state.original?.id,\n    updateTicketType,\n  ]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket' : 'New ticket'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={() => {\n        onClose();\n      }}\n      loading={createTicketType.loading || updateTicketType.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useRoute } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport TicketTypesDialog from '../../../components/dialogs/TicketType';\nimport SwipeActions from '../../../components/layout/SwipeActions';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      ticketTypes {\n        id\n        cost\n        currency\n        name\n        altitude\n        allowManifestingSelf\n\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketTypePublic($id: Int!, $allowManifestingSelf: Boolean) {\n    updateTicketType(\n      input: { id: $id, attributes: { allowManifestingSelf: $allowManifestingSelf } }\n    ) {\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        isTandem\n        extras {\n          id\n          name\n          cost\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_DELETE_TICKET_TYPE = gql`\n  mutation DeleteTicketType($id: Int!) {\n    deleteTicketType(input: { id: $id }) {\n      ticketType {\n        id\n        dropzone {\n          id\n          ticketTypes {\n            id\n            cost\n            currency\n            name\n            altitude\n            allowManifestingSelf\n\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n      errors\n    }\n  }\n`;\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const form = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const { data, loading, refetch } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const route = useRoute();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n  const [mutationUpdateTicketType] = useMutation<Mutation>(MUTATION_UPDATE_TICKET_TYPE);\n  const [mutationDeleteTicketType] = useMutation<Mutation>(MUTATION_DELETE_TICKET_TYPE);\n\n  React.useEffect(() => {\n    if (route.name === 'TicketTypesScreen') {\n      refetch();\n    }\n  }, [refetch, route.name]);\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.ticketTypes?.map((ticketType) => (\n          <SwipeActions\n            rightAction={{\n              label: 'Delete',\n              backgroundColor: 'red',\n              onPress: async () => {\n                const { data: result } = await mutationDeleteTicketType({\n                  variables: { id: Number(ticketType.id) },\n                });\n\n                if (result?.deleteTicketType?.errors?.length) {\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: result?.deleteTicketType?.errors[0],\n                      variant: 'error',\n                    })\n                  );\n                }\n              },\n            }}\n          >\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setOpen(ticketType));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n              <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n              <DataTable.Cell numeric>\n                <Switch\n                  onValueChange={() => {\n                    mutationUpdateTicketType({\n                      variables: {\n                        id: Number(ticketType.id),\n                        allowManifestingSelf: !ticketType.allowManifestingSelf,\n                      },\n                    });\n                  }}\n                  value={!!ticketType.allowManifestingSelf}\n                />\n              </DataTable.Cell>\n            </DataTable.Row>\n          </SwipeActions>\n        ))}\n      </DataTable>\n\n      <FAB\n        style={styles.fab}\n        small\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.ticketType.setOpen(true))}\n        label=\"New ticket type\"\n      />\n      <TicketTypesDialog\n        open={form.open}\n        onClose={() => dispatch(actions.forms.ticketType.setOpen(false))}\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs, UpdateDropzonePayload } from '../schema';\n\nconst MUTATION_UPDATE_DROPZONE = gql`\n  mutation UpdateDropzone(\n    $id: Int!\n    $name: String!\n    $requestPublication: Boolean\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n    $isCreditSystemEnabled: Boolean\n    $isPublic: Boolean\n  ) {\n    updateDropzone(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          banner: $banner\n          lat: $lat\n          lng: $lng\n          requestPublication: $requestPublication\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          isCreditSystemEnabled: $isCreditSystemEnabled\n          isPublic: $isPublic\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n        primaryColor\n        secondaryColor\n        isCreditSystemEnabled\n\n        planes {\n          id\n          name\n        }\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  UpdateDropzonePayload\n>(MUTATION_UPDATE_DROPZONE, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\nimport SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={SliderComponent}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value.lng === null || value.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      defaultZoom={3}\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        props.onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, TextInput, HelperText, Card, List, Checkbox } from 'react-native-paper';\nimport { getDocumentAsync } from 'expo-document-picker';\nimport { useQuery, gql } from '@apollo/client';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport ColorPicker from '../../input/colorpicker';\nimport { Query } from '../../../api/schema';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport { warningColor } from '../../../constants/Colors';\n\nconst QUERY_FEDERATIONS = gql`\n  query QueryFederations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useQuery<Query>(QUERY_FEDERATIONS);\n  const { currentUser } = useCurrentDropzone();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await getDocumentAsync({\n        multiple: false,\n        type: 'image',\n      })) as { uri: string };\n\n      dispatch(actions.forms.dropzone.setField(['banner', result.uri as string]));\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch]);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Banner\" />\n          <Card.Cover\n            source={{\n              uri: state.fields.banner.value || 'https://picsum.photos/700',\n            }}\n            resizeMode=\"cover\"\n            style={{ width: '100%' }}\n          />\n          <Card.Actions style={{ justifyContent: 'flex-end' }}>\n            <Button onPress={onPickImage}>Upload</Button>\n          </Card.Actions>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n            <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title={\n              state?.original?.requestPublication && !state.original?.isPublic\n                ? 'Awaiting review'\n                : 'Request Publication'\n            }\n            description={\n              state?.original?.requestPublication && !state.original?.isPublic\n                ? 'You will be contacted to verify the legitimacy of your dropzone before your dropzone is publicly available. This is to prevent illegitimate actors on the platform. Thank you for your patience and understanding.'\n                : 'Your dropzone will not be visible to other users until it is published. You can request a review to publish your dropzone, and may be contacted for verification on the email or phone number on your profile.'\n            }\n            descriptionNumberOfLines={10}\n            onPress={() => {\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'requestPublication',\n                  !state.fields.requestPublication?.value,\n                ])\n              );\n              if (state.fields.isPublic) {\n                dispatch(\n                  actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic?.value])\n                );\n              }\n            }}\n            left={(iconProps) => {\n              const extraProps = {\n                icon: undefined as IconSource | undefined,\n                color: undefined as string | undefined,\n              };\n\n              if (state.fields.requestPublication?.value) {\n                extraProps.icon = 'upload';\n              }\n\n              if (state.original?.requestPublication && state.fields.requestPublication?.value) {\n                extraProps.color = warningColor;\n                extraProps.icon = 'progress-upload';\n              }\n\n              if (state.original?.isPublic && state.fields?.isPublic.value) {\n                extraProps.icon = 'check';\n              }\n\n              if (extraProps.icon) {\n                return <List.Icon {...iconProps} {...extraProps} />;\n              }\n              return <View style={{ width: 56, height: 56 }} />;\n            }}\n          />\n          {currentUser?.user?.moderationRole === 'administrator' &&\n          state?.original?.requestPublication ? (\n            <Card.Actions>\n              <Button\n                onPress={() => dispatch(actions.forms.dropzone.setField(['isPublic', false]))}\n              >\n                Decline\n              </Button>\n              <Button onPress={() => dispatch(actions.forms.dropzone.setField(['isPublic', true]))}>\n                Accept\n              </Button>\n            </Card.Actions>\n          ) : null}\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ProgressBar } from 'react-native-paper';\nimport { gql } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useMutationUpdateDropzone from '../../../api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { Dropzone } from '../../../api/schema';\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{ key: string; name: string; params: { dropzone: Dropzone } }>();\n  const { dropzone } = route.params;\n  const navigation = useNavigation();\n\n  const { data, currentUser, loading } = useCurrentDropzone();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(data.dropzone));\n    }\n  }, [data?.dropzone, data?.dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n    onSuccess: (payload) => {\n      dispatch(\n        actions.global.setDropzone({\n          ...(globalState.currentDropzone || {}),\n          ...(payload.dropzone as Dropzone),\n        })\n      );\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Your settings have been saved`,\n          variant: 'success',\n        })\n      );\n      navigation.goBack();\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n      requestPublication,\n      isPublic,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federationId: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n          isPublic:\n            isPublic?.value !== undefined &&\n            currentUser?.user.moderationRole &&\n            currentUser?.user.moderationRole !== 'user'\n              ? !!isPublic?.value\n              : null,\n          requestPublication: !!requestPublication?.value,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n    return null;\n  }, [\n    state.fields,\n    dispatch,\n    mutationUpdateDropzone,\n    dropzone?.id,\n    currentUser?.user.moderationRole,\n  ]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <ScrollableScreen\n        style={{ backgroundColor: '#f4f5f5' }}\n        contentContainerStyle={styles.content}\n      >\n        <DropzoneForm loading={loading} />\n        <View style={styles.fields}>\n          <Button\n            mode=\"contained\"\n            disabled={mutationUpdateDropzone.loading}\n            onPress={onSave}\n            loading={mutationUpdateDropzone.loading}\n          >\n            Save\n          </Button>\n        </View>\n      </ScrollableScreen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: 500,\n    padding: 48,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function DropzoneForm() {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Registration\"\n        error={!!state.fields.registration.error}\n        value={state.fields.registration?.value || ''}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['registration', newValue]))\n        }\n      />\n      <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n        {state.fields.registration.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"hours\"\n        error={!!state.fields.hours.error}\n        value={state.fields.hours?.value?.toString()}\n        placeholder=\"Optional\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['hours', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.hours.error ? 'error' : 'info'}>\n        {state.fields.hours.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Min slots\"\n        error={!!state.fields.minSlots.error}\n        value={state.fields.minSlots.value?.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['minSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.minSlots.error ? 'error' : 'info'}>\n        {state.fields.minSlots.error || 'Minimum tickets required to send it'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Max slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error ||\n          'Maximum amount of jumpers who can be manifested on one load'}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    width: '100%',\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\n\nimport { Mutation } from '../../api/schema';\nimport PlaneForm from '../forms/plane/PlaneForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        ...plane\n\n        dropzone {\n          id\n          planes {\n            ...plane\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n  fragment plane on Plane {\n    id\n    name\n    registration\n    minSlots\n    maxSlots\n    hours\n    nextMaintenanceHours\n\n    dropzone {\n      id\n      name\n      planes {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n      }\n    }\n  }\n`;\n\ninterface IPlaneDialogProps {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function CreatePlaneScreen(props: IPlaneDialogProps) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  const [mutationCreatePlane, create] = useMutation<Mutation>(MUTATION_CREATE_PLANE);\n  const [mutationUpdatePlane, update] = useMutation<Mutation>(MUTATION_UPDATE_PLANE);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.registration.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['registration', 'Registration is too short']));\n    }\n\n    if (!state.fields.maxSlots.value) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['maxSlots', 'Max slots must be specified']));\n    }\n\n    return !hasError;\n  }, [\n    dispatch,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.registration.value,\n  ]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots, hours, nextMaintenanceHours } = state.fields;\n\n    const mutation = state.original?.id ? mutationUpdatePlane : mutationCreatePlane;\n\n    if (validate()) {\n      try {\n        const result = await mutation({\n          variables: {\n            ...(state.original?.id\n              ? { id: Number(state.original.id) }\n              : { dropzoneId: Number(currentDropzone?.dropzone?.id) }),\n            name: name.value,\n            registration: registration.value,\n            minSlots: minSlots.value,\n            maxSlots: maxSlots.value,\n            hours: hours.value,\n            nextMaintenanceHours: nextMaintenanceHours.value,\n          },\n        });\n\n        const payload = state.original?.id ? result?.data?.updatePlane : result?.data?.createPlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'hours':\n                return dispatch(actions.forms.plane.setFieldError(['hours', message]));\n              case 'next_maintenance_hours':\n                return dispatch(\n                  actions.forms.plane.setFieldError(['nextMaintenanceHours', message])\n                );\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n    onClose,\n    state.fields,\n    state.original?.id,\n    validate,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n  const onDialogClose = React.useCallback(() => {\n    onClose();\n    dispatch(actions.forms.plane.reset());\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSave}\n      loading={create.loading || update.loading}\n      onClose={onDialogClose}\n    >\n      <PlaneForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PlaneDialog from '../../../components/dialogs/Plane';\nimport useRestriction from '../../../hooks/useRestriction';\nimport SwipeActions from '../../../components/layout/SwipeActions';\n\nconst QUERY_PLANES = gql`\n  query QueryPlanes($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      planes {\n        id\n        name\n        registration\n        hours\n        minSlots\n        maxSlots\n        nextMaintenanceHours\n        createdAt\n      }\n    }\n  }\n`;\n\nconst MUTATION_DELETE_PLANE = gql`\n  mutation DeletePlane($id: Int!) {\n    deletePlane(input: { id: $id }) {\n      errors\n      plane {\n        id\n        dropzone {\n          id\n          planes {\n            name\n            registration\n            hours\n            minSlots\n            maxSlots\n            nextMaintenanceHours\n            createdAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.forms.plane);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n    },\n  });\n\n  const [deletePlane] = useMutation<Mutation>(MUTATION_DELETE_PLANE);\n  const dispatch = useAppDispatch();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n\n  return (\n    <>\n      <ScrollableScreen\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n      >\n        <ProgressBar visible={loading} color={global.theme.colors.accent} />\n\n        {data?.dropzone?.planes?.length ? null : (\n          <NoResults\n            title=\"No planes?\"\n            subtitle=\"You need to have at least one plane to manifest loads\"\n          />\n        )}\n\n        {!data?.dropzone?.planes?.length ? null : (\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Name</DataTable.Title>\n              <DataTable.Title numeric>Registration</DataTable.Title>\n              <DataTable.Title numeric>Slots</DataTable.Title>\n            </DataTable.Header>\n            {data?.dropzone?.planes?.map((plane) => (\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: async () => {\n                    const { data: result } = await deletePlane({\n                      variables: { id: Number(plane.id) },\n                    });\n\n                    if (result?.deletePlane?.errors?.length) {\n                      dispatch(\n                        actions.notifications.showSnackbar({\n                          message: result.deletePlane.errors[0],\n                          variant: 'error',\n                        })\n                      );\n                    }\n                  },\n                }}\n              >\n                <DataTable.Row\n                  pointerEvents=\"none\"\n                  onPress={() => {\n                    dispatch(actions.forms.plane.setOpen(plane));\n                  }}\n                >\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            ))}\n          </DataTable>\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreatePlane}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.plane.setOpen(true))}\n          label=\"New plane\"\n        />\n      </ScrollableScreen>\n      <PlaneDialog open={state.open} onClose={() => dispatch(actions.forms.plane.setOpen(false))} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List, TextInput } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          mode=\"outlined\"\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChangeText={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          value={value as string}\n          mode=\"outlined\"\n          onChangeText={(text) => onChange({ ...config, value: text as string })}\n          label={config.label || ''}\n          keyboardType=\"number-pad\"\n          style={{ marginVertical: 8 }}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          timestamp={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"delete\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from '../../../components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_RIG_INSPECTION = gql`\n  query RigInspection($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_FORM = gql`\n  mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n    updateFormTemplate(\n      input: { id: $formId, attributes: { dropzoneId: $dropzoneId, definition: $definition } }\n    ) {\n      formTemplate {\n        id\n        name\n        definition\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const { data } = useQuery<Query>(QUERY_RIG_INSPECTION, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useMutation<Mutation>(MUTATION_UPDATE_FORM);\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(actions.forms.rigInspectionTemplate.setOpen(data.dropzone.rigInspectionTemplate));\n    }\n  }, [data?.dropzone.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Template saved',\n          variant: 'success',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <Card style={{ width: '100%' }}>\n        <Card.Title title=\"Rig Inspection Form Template\" />\n\n        <Card.Content>\n          <RigInspectionTemplateForm />\n        </Card.Content>\n\n        <Card.Actions>\n          <Button\n            disabled={!canEdit}\n            mode=\"contained\"\n            loading={mutation.loading}\n            onPress={() => updateForm()}\n            style={{ width: '100%' }}\n          >\n            Save template\n          </Button>\n        </Card.Actions>\n      </Card>\n    </ScrollableScreen>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_DROPZONE_RIGS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigs {\n        id\n        name\n        make\n        isPublic\n        model\n        serial\n        rigType\n        repackExpiresAt\n        canopySize\n        packValue\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateDropzoneRig($id: Int!, $isPublic: Boolean) {\n    updateRig(input: { id: $id, attributes: { isPublic: $isPublic } }) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        isPublic\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        dropzone {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            isPublic\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_RIGS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useMutation<Mutation>(MUTATION_UPDATE_RIG);\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    dispatch(\n                      actions.notifications.showSnackbar({\n                        message: result?.updateRig.errors[0],\n                        variant: 'error',\n                      })\n                    );\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Mutation, Permission, UserRole } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: UserRole;\n  permissionName: string;\n}\n\nconst MUTATION_UPDATE_ROLE = gql`\n  mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n    updateRole(input: { id: $roleId, permission: $permissionName, enabled: $enabled }) {\n      role {\n        id\n        name\n        permissions\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useMutation<Mutation>(MUTATION_UPDATE_ROLE);\n  const dispatch = useAppDispatch();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) =>\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'error',\n                  })\n                )\n              );\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport { Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PermissionListItem from '../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        flexGrow: 1,\n        paddingHorizontal: 16,\n      }}\n      layout={[\n        {\n          key: 'first',\n          height: 175,\n          marginTop: 70,\n          marginBottom: 35,\n          width: '100%',\n        },\n        { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n      ]}\n    />\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Manifesting\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket types\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket addons\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Query } from '../../../api/schema.d';\nimport DatePicker from '../../../components/input/date_picker/DatePicker';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: Int!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            dropzoneUser {\n              id\n              license {\n                id\n                name\n              }\n            }\n            user {\n              id\n              name\n              license {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          timestamp={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, List } from 'react-native-paper';\nimport { Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_TICKET_TYPES = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    ticketTypes(dropzoneId: $dropzoneId) {\n      id\n      cost\n      currency\n      name\n      allowManifestingSelf\n\n      extras {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function ExtraForm() {\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const { data } = useQuery<Query>(QUERY_TICKET_TYPES, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.extra.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.extra.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || ''}\n      </HelperText>\n\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        {data?.ticketTypes.map((ticket) => (\n          <Checkbox.Item\n            label={ticket.name || ''}\n            status={\n              state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.extra.setField([\n                  'ticketTypes',\n                  state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                    ? state.fields.ticketTypes.value?.filter(({ id }) => id !== ticket.id)\n                    : [...(state.fields.ticketTypes.value || []), ticket],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { gql, useMutation } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { actions as snackbar } from '../../../components/notifications';\n\nimport { Mutation, Extra } from '../../../api/schema';\nimport ExtraForm from '../../../components/forms/extra/ExtraForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        id\n        name\n\n        ticketTypes {\n          id\n          name\n          cost\n          altitude\n          allowManifestingSelf\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateExtraScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n  const route = useRoute<{ key: string; name: string; params: { extra: Extra } }>();\n  const { extra } = route.params;\n\n  React.useEffect(() => {\n    dispatch(actions.forms.extra.setOpen(extra));\n  }, [dispatch, extra, extra.id]);\n\n  const [mutationUpdateExtra, data] = useMutation<Mutation>(MUTATION_UPDATE_EXTRA);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (Number(state.fields.cost.value) < 0) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['cost', 'Price must be a number']));\n    }\n\n    return !hasError;\n  }, [state.fields, dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, cost, ticketTypes } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationUpdateExtra({\n          variables: {\n            id: Number(state.original?.id),\n            dropzoneId: Number(currentDropzone?.dropzone?.id),\n            name: name.value,\n            cost: cost.value,\n            ticketTypeIds: ticketTypes.value?.map(({ id }) => id),\n          },\n        });\n\n        if (result.data?.updateExtra?.extra) {\n          dispatch(snackbar.showSnackbar({ message: `Saved`, variant: 'success' }));\n          navigation.goBack();\n        }\n      } catch (error) {\n        dispatch(snackbar.showSnackbar({ message: error.message, variant: 'error' }));\n      }\n    }\n  }, [\n    state.fields,\n    state.original?.id,\n    validate,\n    mutationUpdateExtra,\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 48 }}>\n      <MaterialCommunityIcons\n        name=\"ticket-percent\"\n        size={100}\n        color=\"#999999\"\n        style={{ alignSelf: 'center' }}\n      />\n      <ExtraForm />\n      <View style={styles.fields}>\n        <Button mode=\"contained\" disabled={data.loading} onPress={onSave} loading={data.loading}>\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { ExtraInput, CreateExtraPayload } from '../schema';\n\nconst MUTATION_CREATE_EXTRA = gql`\n  mutation CreateExtra($name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n    createExtra(\n      input: {\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<ExtraInput, CreateExtraPayload>(MUTATION_CREATE_EXTRA, {\n  getPayload: (result) => result.createExtra,\n  fieldErrorMap: {\n    ticketTypeIds: 'ticketTypes',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price'), isNumeric('Price must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { ExtraInput, UpdateExtraPayload } from '../schema';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & ExtraInput, UpdateExtraPayload>(\n  MUTATION_UPDATE_EXTRA,\n  {\n    getPayload: (result) => result.updateExtra,\n    fieldErrorMap: {\n      id: 'original',\n      ticketTypeIds: 'ticketTypes',\n    },\n  }\n);\n","import * as React from 'react';\nimport useMutationCreateExtra from '../../api/hooks/useMutationCreateExtra';\nimport useMutationUpdateExtra from '../../api/hooks/useMutationUpdateExtra';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport ExtraForm from '../forms/extra/ExtraForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { ExtraFields } from '../forms/extra/slice';\n\ninterface ITicketTypeExtraDialog {\n  open: boolean;\n  onClose(): void;\n}\nexport default function TicketTypeExtraDialog(props: ITicketTypeExtraDialog) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const createExtra = useMutationCreateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateExtra = useMutationUpdateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    if (state?.original?.id) {\n      updateExtra.mutate({\n        id: Number(state.original.id),\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    } else {\n      createExtra.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    }\n  }, [\n    createExtra,\n    currentDropzone?.dropzone?.id,\n    state.fields.cost.value,\n    state.fields.name.value,\n    state.fields.ticketTypes.value,\n    state.original?.id,\n    updateExtra,\n  ]);\n\n  const snapPoints = React.useMemo(() => [300, 500], []);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket addon' : 'New ticket addon'}\n      open={open}\n      onClose={onClose}\n      loading={createExtra.loading || updateExtra.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      snapPoints={snapPoints}\n    >\n      <ExtraForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { View } from '../../../components/Themed';\nimport { Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport TicketTypeExtraDialog from '../../../components/dialogs/TicketTypeExtra';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryExtra($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      extras {\n        id\n        cost\n        name\n        ticketTypes {\n          id\n          altitude\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function ExtrasScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const globalState = useAppSelector((root) => root.global);\n  const formState = useAppSelector((root) => root.forms.extra);\n  const { data, loading } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.accent} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.dropzone?.extras?.map((extra) => (\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.extra.setOpen(extra));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.dropzone?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.extra.setOpen(true))}\n          label=\"New ticket addon\"\n        />\n      </View>\n      <TicketTypeExtraDialog\n        open={formState.open}\n        onClose={() => dispatch(actions.forms.extra.setOpen(false))}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Transaction } from '../../../api/schema';\n\ninterface ITransaction {\n  transaction: Transaction;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {transaction?.createdAt && format(transaction?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { Dropzone, DropzoneUser, Order, Receipt, Wallet } from '../../../api/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport UserAvatar from '../../../components/UserAvatar';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport lottieTicketAnimation from '../../../../assets/images/ticket.json';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: Receipt;\n  index: number;\n  order: Order;\n}\n\nfunction ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const { currentUser } = useCurrentDropzone();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | Dropzone | DropzoneUser) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        .filter((transaction) => isUser(transaction.receiver))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\nexport default function OrderScreen() {\n  const route = useRoute<{ key: string; name: string; params: { order: Order } }>();\n  const theme = useTheme();\n  const { order } = route.params;\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                }}\n              >{`Order #${order.id}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                }}\n              >\n                {order.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name || (order?.seller as Dropzone)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport { useDropzoneTransactionsLazyQuery } from '../../../api/reflection';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({ variables: { dropzoneId: state.currentDropzoneId } });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            showAvatar\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { QueryDropzoneDocument } from 'app/api/reflection';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { Mutation, Query, Rig, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { QUERY_DROPZONE_USER } from 'app/api/hooks/useDropzoneUser';\nimport RigCard from '../equipment/RigCard';\n\nconst QUERY_RIG_INSPECTIONS = gql`\n  query RigInspections($dropzoneUserId: Int, $dropzoneId: Int!, $userId: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n\n      dropzoneUser(id: $dropzoneUserId, userId: $userId) {\n        id\n        rigInspections {\n          id\n          isOk\n          definition\n          rig {\n            id\n            name\n          }\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          formTemplate {\n            id\n            name\n            definition\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_CREATE_RIG_INSPECTION = gql`\n  mutation CreateRigInspection($dropzoneId: Int, $rigId: Int, $isOk: Boolean, $definition: String) {\n    createRigInspection(\n      input: {\n        attributes: { dropzoneId: $dropzoneId, rigId: $rigId, isOk: $isOk, definition: $definition }\n      }\n    ) {\n      rigInspection {\n        id\n        isOk\n        definition\n        dropzoneUser {\n          id\n          rigInspections {\n            id\n            isOk\n            rig {\n              id\n            }\n            inspectedBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n          }\n        }\n        inspectedBy {\n          id\n          user {\n            id\n            name\n          }\n        }\n        rig {\n          id\n          name\n          make\n          model\n        }\n\n        formTemplate {\n          id\n          definition\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{\n    key: string;\n    name: string;\n    params: { rig: Rig; dropzoneUserId: number; userId: number };\n  }>();\n  const { rig, dropzoneUserId, userId } = route.params;\n  const { data, refetch } = useQuery<Query>(QUERY_RIG_INSPECTIONS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      dropzoneUserId,\n      userId,\n    },\n  });\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    refetch();\n  }, [isFocused, refetch]);\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useMutation<Mutation>(\n    MUTATION_CREATE_RIG_INSPECTION\n  );\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = data?.dropzone?.dropzoneUser?.rigInspections?.some(\n      (inspection) => inspection.rig?.id?.toString() === rig.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = data?.dropzone?.dropzoneUser?.rigInspections?.find(\n        (record) => record.rig?.id === rig.id\n      );\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          data?.dropzone.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    data?.dropzone?.dropzoneUser?.rigInspections,\n    data?.dropzone.rigInspectionTemplate?.definition,\n    dispatch,\n    rig.id,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzoneId: Number(currentDropzone?.dropzone?.id),\n          rigId: Number(rig.id),\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<Query>({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: QueryDropzoneDocument,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: QueryDropzoneDocument,\n              variables: {\n                dropzoneId: Number(currentDropzone?.dropzone?.id),\n                earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            ...result?.dropzone,\n            dropzoneUser: {\n              ...result?.dropzone?.dropzoneUser,\n              rigInspections: [\n                ...(result?.dropzone?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Rig inspection saved',\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig.id,\n    state.fields,\n    state.ok,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          maxWidth: 400,\n          backgroundColor: 'transparent',\n        }}\n      >\n        <RigCard rig={rig} />\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={data?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            <RigInspectionForm />\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) === data?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { Dropzone, DropzoneUser, Order, Slot } from '../../api/schema.d';\nimport { useAppSelector } from '../../state';\nimport LoadScreen from '../../screens/authenticated/load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from '../../screens/authenticated/weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from '../../screens/authenticated/weather_conditions/JumpRunScreen';\nimport WindScreen from '../../screens/authenticated/weather_conditions/WindScreen';\nimport AppBar from '../AppBar';\n\nimport ManifestScreen from '../../screens/authenticated/manifest/ManifestScreen';\nimport ManifestGroupScreen from '../../screens/authenticated/manifest/ManifestGroupScreen';\n// eslint-disable-next-line max-len\nimport ManifestGroupUserSelectScreen from '../../screens/authenticated/manifest/ManifestGroupUserSelectScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\n// Settings\nimport SettingsScreen from '../../screens/authenticated/settings/SettingsScreen';\nimport TicketTypeSettingsScreen from '../../screens/authenticated/ticket_types/TicketTypesScreen';\nimport UpdateDropzoneScreen from '../../screens/authenticated/dropzones/UpdateDropzoneScreen';\nimport PlanesScreen from '../../screens/authenticated/planes/PlanesScreen';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateScreen from '../../screens/authenticated/settings/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from '../../screens/authenticated/settings/DropzoneRigsScreen';\n// eslint-disable-next-line max-len\nimport DropzonePermissionScreen from '../../screens/authenticated/settings/DropzonePermissionScreen';\nimport DropzoneMasterLogScreen from '../../screens/authenticated/settings/DropzoneMasterLogScreen';\nimport UpdateExtraScreen from '../../screens/authenticated/extras/UpdateExtraScreen';\nimport ExtrasScreen from '../../screens/authenticated/extras/ExtrasScreen';\nimport OrderScreen from '../../screens/authenticated/transactions/OrderScreen';\nimport DropzoneTransactionsScreen from '../../screens/authenticated/transactions/DropzoneTransactionsScreen';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\n\nexport type IManifestTabParams = {\n  DropzoneScreen: undefined;\n  LoadScreen: undefined;\n  ManifestGroupUserSelectScreen: undefined;\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  JumpRunScreen: undefined;\n  Settings: undefined;\n  Profile: undefined;\n  ManifestGroupScreen: {\n    users?: DropzoneUser[];\n    slots?: Slot[];\n    loadId?: number;\n  };\n\n  ProfileScreen: {\n    userId: string;\n  };\n  NotificationsScreen: undefined;\n  EquipmentScreen: undefined;\n  TransactionsScreen: undefined;\n\n  SettingsScreen: undefined;\n  UpdateDropzoneScreen: { dropzone: Dropzone };\n  TicketTypeSettingsScreen: undefined;\n  PlanesScreen: undefined;\n  PlaneScreen: undefined;\n  TicketTypesScreen: undefined;\n  UpdateExtraScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  DropzonePermissionScreen: undefined;\n  DropzoneMasterLogScreen: undefined;\n  RigInspectionScreen: undefined;\n  DropzoneTransactionsScreen: undefined;\n  OrderScreen: {\n    order: Order;\n  };\n};\n\nconst Manifest = createStackNavigator<IManifestTabParams>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n  const { currentUser } = useCurrentDropzone();\n\n  return (\n    <Manifest.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Manifest.Screen\n        name=\"DropzoneScreen\"\n        component={ManifestScreen}\n        options={{ title: 'Manifest' }}\n      />\n      <Manifest.Screen\n        name=\"WeatherConditionsScreen\"\n        component={WeatherConditionsScreen}\n        options={{ headerShown: false }}\n      />\n      <Manifest.Screen\n        name=\"WindScreen\"\n        component={WindScreen}\n        options={{ title: 'Winds Aloft' }}\n      />\n      <Manifest.Screen\n        name=\"JumpRunScreen\"\n        component={JumpRunScreen}\n        options={{ title: 'Jump Run' }}\n      />\n      <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n      <Manifest.Screen\n        name=\"ManifestGroupScreen\"\n        component={ManifestGroupScreen}\n        options={{ title: 'Manifest group' }}\n      />\n      <Manifest.Screen\n        name=\"ManifestGroupUserSelectScreen\"\n        component={ManifestGroupUserSelectScreen}\n        options={{ title: 'Select users' }}\n      />\n\n      {/* PROFILE */}\n      <Manifest.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'Profile' }}\n        initialParams={{\n          userId: currentUser?.id,\n        }}\n      />\n      <Manifest.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n      <Manifest.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n      <Manifest.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Account History' }}\n      />\n\n      <Manifest.Screen name=\"OrderScreen\" component={OrderScreen} options={{ title: 'Order' }} />\n\n      <Manifest.Screen\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n        options={{ title: 'Settings' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateDropzoneScreen\"\n        component={UpdateDropzoneScreen}\n        options={{ title: 'Basic settings' }}\n      />\n      <Manifest.Screen name=\"PlanesScreen\" component={PlanesScreen} options={{ title: 'Planes' }} />\n      <Manifest.Screen\n        name=\"TicketTypesScreen\"\n        component={TicketTypeSettingsScreen}\n        options={{ title: 'Ticket types' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateExtraScreen\"\n        component={UpdateExtraScreen}\n        options={{ title: 'Update ticket add-on' }}\n      />\n      <Manifest.Screen\n        name=\"ExtrasScreen\"\n        component={ExtrasScreen}\n        options={{ title: 'Ticket add-ons' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionTemplateScreen\"\n        component={RigInspectionTemplateScreen}\n        options={{ title: 'Rig Inspection Form' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig Inspection' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneRigsScreen\"\n        component={DropzoneRigsScreen}\n        options={{ title: 'Dropzone rigs' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneTransactionsScreen\"\n        component={DropzoneTransactionsScreen}\n        options={{ title: 'Order Activity' }}\n      />\n      <Manifest.Screen\n        name=\"DropzonePermissionScreen\"\n        component={DropzonePermissionScreen}\n        options={{ title: 'Permissions' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneMasterLogScreen\"\n        component={DropzoneMasterLogScreen}\n        options={{ title: 'Master log' }}\n      />\n    </Manifest.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport NumberField from '../../input/number_input/NumberField';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.ghost.setField([\n            'exitWeight',\n            state.original.exitWeight?.toString() || '60',\n          ])\n        );\n      }\n\n      if (!state.fields.license.value && state.original?.license?.id) {\n        if (state.original.license.federation) {\n          dispatch(actions.forms.ghost.setFederation(state.original.license.federation));\n        }\n        dispatch(actions.forms.ghost.setField(['license', state.original.license]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.license.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={Number(state.fields.exitWeight?.value)}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue?.toString()]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onSelect={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostPayload, MutationCreateGhostArgs } from '../schema';\n\nconst MUTATION_CREATE_GHOST = gql`\n  mutation CreateGhost(\n    $name: String!\n    $phone: String\n    $email: String!\n    $federationNumber: String\n    $roleId: Int!\n    $licenseId: Int\n    $dropzoneId: Int!\n    $exitWeight: Float!\n  ) {\n    createGhost(\n      input: {\n        attributes: {\n          roleId: $roleId\n          federationNumber: $federationNumber\n          name: $name\n          phone: $phone\n          email: $email\n          dropzoneId: $dropzoneId\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n\n        jumpTypes {\n          id\n          name\n        }\n        userFederations {\n          id\n          license {\n            id\n            name\n          }\n          federation {\n            id\n            name\n            slug\n          }\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationCreateGhostArgs['input']['attributes'], CreateGhostPayload>(\n  MUTATION_CREATE_GHOST,\n  {\n    getPayload: (result) => result.createGhost,\n    validates: {\n      exitWeight: [\n        isRequired('Exit weight must be provided'),\n        isNumeric('Please enter a valid number'),\n      ],\n      email: [\n        isRequired('Please provide a valid email address'),\n        isEmail('Please provide a valid email address'),\n      ],\n      name: [isRequired('Name is required')],\n\n      roleId: [isRequired('You must select a role')],\n    },\n    fieldErrorMap: {\n      license: 'licenseId',\n      exit_weight: 'exitWeight',\n      role: 'roleId',\n    },\n  }\n);\n","import * as React from 'react';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => {\n      requestAnimationFrame(() => {\n        onSuccess();\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `${payload?.user?.name} has been added to your dropzone`,\n            variant: 'success',\n          })\n        );\n      });\n    },\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n    },\n\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    mutationCreateGhost.mutate({\n      dropzoneId: globalState.currentDropzoneId as number,\n      name: state.fields.name.value || '',\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: Number(state.fields.exitWeight.value),\n      email: state.fields.email.value || '',\n      roleId: Number(state.fields.role.value?.id),\n    });\n  }, [\n    mutationCreateGhost,\n    globalState.currentDropzoneId,\n    state.fields.name.value,\n    state.fields.license.value?.id,\n    state.fields.phone.value,\n    state.fields.exitWeight.value,\n    state.fields.email.value,\n    state.fields.role.value?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport NoResults from '../../../components/NoResults';\nimport { Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport CreateGhostDialog from '../../../components/dialogs/Ghost';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 36, width: 36, marginHorizontal: 12, borderRadius: 36 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: state.searchText,\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = data?.dropzone?.dropzoneUsers?.edges || [];\n  const initialLoading = !users?.length && loading;\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList\n        data={initialLoading ? [1, 1, 1, 11, 1, 1, 1, 1] : users}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: Number(global.currentDropzoneId),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={({ item }, idx) => `user-${item?.node?.id || idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%', alignSelf: 'center' }}\n        renderItem={({ item: edge }) =>\n          edge === 1 ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${edge?.node?.id}`}\n              style={{ margin: 0, marginVertical: 0, borderRadius: 2, width: '100%' }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={edge?.node?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={edge?.node?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !edge?.node?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={36}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: edge?.node?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={36}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('UserProfileScreen', {\n                      userId: edge?.node?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={styles.fab}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.ghost.setOpen(true))}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from '../../../state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  previous,\n  scene,\n  onSearch,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold' }}\n        />\n      )}\n      <MaterialIcons\n        name=\"search\"\n        onPress={() => setSearchVisible(!searchVisible)}\n        color=\"#FFFFFF\"\n        size={24}\n        style={styles.icon}\n      />\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport { Rig } from '../../api/schema';\n\nimport UsersScreen from '../../screens/authenticated/users/UsersScreen';\nimport SearchableAppBar from '../../screens/authenticated/users/AppBar';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\nexport type ISettingsTabParams = {\n  UsersScreen: {\n    select?: boolean;\n    loadId: number;\n    onSelect?(): void;\n  };\n  RigInspectionScreen: { dropzoneUserId: number; rig: Rig };\n  UserProfileScreen: undefined;\n  TransactionsScreen: undefined;\n  EquipmentScreen: undefined;\n};\n\nconst Settings = createStackNavigator<ISettingsTabParams>();\n\nexport default function SettingsTab() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Settings.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => (\n          <SearchableAppBar\n            {...props}\n            searchText={searchText}\n            searchVisible={isSearchVisible}\n            setSearchVisible={(visible) =>\n              dispatch(actions.screens.users.setSearchVisible(visible))\n            }\n            onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n          />\n        ),\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Settings.Screen\n        name=\"UsersScreen\"\n        component={UsersScreen}\n        options={{ title: 'Dropzone users' }}\n      />\n      <Settings.Screen\n        name=\"UserProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'User' }}\n      />\n      <Settings.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Inspection' }}\n      />\n      <Settings.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Transactions' }}\n      />\n      <Settings.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n    </Settings.Navigator>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from '../AppBar';\n\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\n\nexport type IProfileTabParams = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n};\n\nconst Profile = createStackNavigator<IProfileTabParams>();\n\nexport default function Notifications() {\n  return (\n    <Profile.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} hideWarnings />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"NotificationsScreen\"\n    >\n      <Profile.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n\n      <Profile.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig inspection' }}\n      />\n    </Profile.Navigator>\n  );\n}\n","import * as React from 'react';\n\nexport default () => <></>;\n","import {\n  BottomTabBarOptions,\n  BottomTabBarProps,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Appearance, Platform, StyleSheet, Text } from 'react-native';\nimport type { TabsConfig, BubbleTabBarItemConfig } from '@gorhom/animated-tabbar';\nimport Animated from 'react-native-reanimated';\n\nimport { useAppSelector } from '../state';\nimport ManifestTab from './tabs/manifest';\nimport UsersTab from './tabs/users';\nimport NotificationsTab from './tabs/notifications';\n\nimport useRestriction from '../hooks/useRestriction';\nimport { Permission } from '../api/schema.d';\n\nimport AnimatedTabBar from './AnimatedTabBar';\n\nexport type IAuthenticatedTabParams = {\n  Manifest: undefined;\n  Profile: undefined;\n  Packing: undefined;\n  Users: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n};\n\nconst BottomTab = createBottomTabNavigator<IAuthenticatedTabParams>();\n\nconst AnimatedIcon = Animated.createAnimatedComponent(MaterialCommunityIcons);\nexport default function AuthenticatedTabBar() {\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  const canViewUsers = useRestriction(Permission.ReadUser);\n\n  const tabConfig = React.useMemo(\n    () => ({\n      labelStyle: {\n        color: theme.dark ? theme.colors.onSurface : palette.surface,\n      },\n      icon: {\n        activeColor: palette.surface,\n        inactiveColor: palette.primary.dark,\n      },\n      background: {\n        // activeColor: palette.primary.main,\n        activeColor: palette.placeholder,\n        inactiveColor: theme.colors.surface,\n      },\n    }),\n    [\n      palette.placeholder,\n      palette.primary.dark,\n      palette.surface,\n      theme.colors.onSurface,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n  const tabs: TabsConfig<BubbleTabBarItemConfig> = React.useMemo(\n    () => ({\n      Manifest: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"airplane\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Notifications: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"bell-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Users: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"account-group-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n    }),\n    [tabConfig]\n  );\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Manifest\"\n      {...Platform.select({\n        web: {},\n        ios: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n        android: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n        activeBackgroundColor: theme.colors.surface,\n        inactiveTintColor: '#CCCCCC',\n        showLabel: Platform.OS !== 'web',\n        adaptive: true,\n        style: {\n          backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n          borderTopWidth: StyleSheet.hairlineWidth,\n          borderTopColor: '#CCCCCC',\n        },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Manifest\"\n        component={ManifestTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Manifest\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"airplane\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: false,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Notifications\"\n        component={NotificationsTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Notifications\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"bell\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: true,\n        }}\n      />\n      {canViewUsers && (\n        <BottomTab.Screen\n          name=\"Users\"\n          component={UsersTab}\n          options={{\n            tabBarLabel: ({ focused, color }) =>\n              !focused ? null : (\n                <Text\n                  style={[\n                    styles.label,\n                    { color: isDarkMode && focused ? theme.colors.primary : color },\n                  ]}\n                >\n                  Users\n                </Text>\n              ),\n            tabBarIcon: ({ size, color, focused }) => (\n              <MaterialCommunityIcons\n                {...{ size, color }}\n                name=\"account-group\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size }}\n                color={isDarkMode && focused ? theme.colors.primary : color}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n      )}\n    </BottomTab.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, FlatList, Dimensions, View } from 'react-native';\nimport { Card, Title, FAB, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Query } from '../../../api/schema.d';\n\nimport NoResults from '../../../components/NoResults';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONES);\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={data?.dropzones?.edges || []}\n        numColumns={2}\n        refreshing={loading}\n        onRefresh={() => refetch()}\n        style={{ flex: 1, width: '100%' }}\n        contentContainerStyle={{\n          flexGrow: 1,\n          width: '100%',\n          paddingBottom: 100,\n        }}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item }) => {\n          return (\n            <Card\n              style={{\n                width: Dimensions.get('window').width / 2 - 32,\n                margin: 8,\n              }}\n              onPress={async () => {\n                if (item?.node) {\n                  const shouldPushRoute = !!globalState.currentDropzoneId;\n                  dispatch(actions.global.setDropzone(item.node));\n\n                  if (shouldPushRoute) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    navigation.replace('Authenticated', {\n                      screen: 'HomeScreen',\n                    });\n                  }\n                }\n              }}\n            >\n              {item?.node?.banner ? (\n                <Card.Cover source={{ uri: item?.node?.banner as string }} />\n              ) : (\n                <View\n                  style={[\n                    styles.dzIcon,\n                    { backgroundColor: item?.node?.primaryColor || undefined },\n                  ]}\n                >\n                  <Avatar.Icon\n                    style={{ backgroundColor: item?.node?.secondaryColor || undefined }}\n                    icon=\"airplane-takeoff\"\n                  />\n                </View>\n              )}\n\n              <Card.Content>\n                <Title>{item?.node?.name}</Title>\n              </Card.Content>\n            </Card>\n          );\n        }}\n      />\n\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('DropzoneSetupScreen');\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"Dropzones\"\n    >\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  index: number;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title } = props;\n\n  return (\n    <View style={styles.container}>\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <View style={styles.content}>{children}</View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dots: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport usePalette from 'app/hooks/usePalette';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","import * as React from 'react';\nimport {\n  createStackNavigator,\n  HeaderStyleInterpolators,\n  TransitionSpecs,\n} from '@react-navigation/stack';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\n\nconst WizardRoot = createStackNavigator();\nconst WizardModal = createStackNavigator();\n\nexport interface IWizardProps {\n  name: string;\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  // How many screens ahead to jump onNext, default: 1\n  nextIndexFactor?: number;\n  backIndexFactor?: number;\n  onNext?(): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\nexport function Content(props: IWizardProps) {\n  const { name, steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigation();\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <KeyboardAvoidingView\n        style={styles.content}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <WizardRoot.Navigator\n          screenOptions={{\n            headerShown: false,\n            transitionSpec: {\n              open: TransitionSpecs.TransitionIOSSpec,\n              close: TransitionSpecs.TransitionIOSSpec,\n            },\n            headerStyleInterpolator: HeaderStyleInterpolators.forFade,\n            cardStyleInterpolator: ({ current, next, layouts }) => {\n              return {\n                cardStyle: {\n                  backgroundColor: 'transparent',\n                  transform: [\n                    {\n                      translateX: current.progress.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layouts.screen.width, 0],\n                      }),\n                    },\n                    {\n                      scale: next\n                        ? next.progress.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [1, 0.9],\n                          })\n                        : 1,\n                    },\n                  ],\n                },\n                overlayStyle: {\n                  opacity: current.progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 0.5],\n                  }),\n                },\n              };\n            },\n          }}\n        >\n          {steps.map((definition, index) => {\n            if (!definition) {\n              return null;\n            }\n            const { component: Step } = definition;\n            return (\n              <WizardRoot.Screen name={`${name}${index}`}>\n                {(screenProps) => <Step {...screenProps} {...{ index }} />}\n              </WizardRoot.Screen>\n            );\n          })}\n        </WizardRoot.Navigator>\n        <View style={styles.actions}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            onPress={async () => {\n              try {\n                const nextIndex = steps[currentIndex]?.nextIndexFactor || 1;\n                if (steps[currentIndex]?.onNext) {\n                  setLoading(true);\n                  await steps[currentIndex]?.onNext?.();\n                }\n                if (currentIndex === steps.length - 1) {\n                  navigation.goBack();\n                } else {\n                  navigation.navigate(`${name}${currentIndex + nextIndex}`);\n                  setIndex(currentIndex + nextIndex);\n                }\n              } catch {\n                return undefined;\n              } finally {\n                setLoading(false);\n              }\n\n              return undefined;\n            }}\n            style={[styles.next, { backgroundColor: palette.placeholder }]}\n            mode=\"contained\"\n          >\n            {currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n          </Button>\n          <Button\n            disabled={loading}\n            mode=\"text\"\n            onPress={async () => {\n              const backIndexFactor = steps[currentIndex]?.backIndexFactor || 1;\n              steps[currentIndex]?.onBack?.();\n              if (currentIndex === 0) {\n                navigation.goBack();\n              } else {\n                navigation.navigate(`${name}${currentIndex - backIndexFactor}`);\n                setIndex(currentIndex - backIndexFactor || 0);\n              }\n              return undefined;\n            }}\n          >\n            Back\n          </Button>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nexport function Wizard(props: IWizardProps) {\n  const { name } = props;\n  return (\n    <WizardModal.Navigator mode=\"modal\" screenOptions={{ headerShown: false }}>\n      <WizardModal.Screen {...{ name }}>{() => <Content {...props} />}</WizardModal.Screen>\n    </WizardModal.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={Boolean(fields.password.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type=\"error\">{fields.password.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type=\"error\">{fields.email.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={Boolean(fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type=\"error\">{fields.passwordConfirmation.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const validateEmail = React.useCallback(async () => {\n    const pattern =\n      // eslint-disable-next-line max-len\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      dispatch(actions.screens.signup.setFieldError(['email', 'Please enter a valid email']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.email.value]);\n\n  const validatePassword = React.useCallback(async () => {\n    const pattern =\n      // eslint-disable-next-line max-len\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n    const passwordRegex = new RegExp(pattern);\n\n    if (!passwordRegex.test(state.fields.password.value)) {\n      dispatch(\n        actions.screens.signup.setFieldError([\n          'password',\n          'Must contain at least one lowercase letter, one uppercase letter and one digit',\n        ])\n      );\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onClickSignUp = React.useCallback(async () => {\n    if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n      dispatch(\n        actions.screens.signup.setFieldError(['passwordConfirmation', 'Password doesnt match'])\n      );\n      throw new Error('Password mismatch');\n    }\n    try {\n      const result = await onSignUp({\n        variables: {\n          pushToken: globalState.expoPushToken,\n          email: state.fields.email.value,\n          name: state.fields.name.value,\n          exitWeight: state.fields.exitWeight.value,\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          licenseId: Number(state.fields.license?.value?.id) || null,\n          phone: state.fields.phone.value,\n        },\n      });\n\n      if (result?.data?.userSignUp?.fieldErrors?.length) {\n        result?.data?.userSignUp?.fieldErrors?.forEach(({ field, message }) => {\n          switch (field) {\n            case 'email':\n              dispatch(actions.screens.signup.setFieldError(['email', message]));\n              throw new Error('Email error');\n            case 'password':\n              dispatch(actions.screens.signup.setFieldError(['password', message]));\n              throw new Error('Password error');\n            case 'passwordConfirmation':\n              dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', message]));\n              throw new Error('Email error');\n            default:\n              return undefined;\n          }\n        });\n      }\n    } catch (e) {\n      dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    globalState.expoPushToken,\n    onSignUp,\n    state.fields.email.value,\n    state.fields.exitWeight.value,\n    state.fields.license?.value?.id,\n    state.fields.name.value,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    state.fields.phone.value,\n  ]);\n\n  return (\n    <Wizard\n      dots\n      name=\"SignupWizard\"\n      steps={[\n        { onNext: validateEmail, component: EmailStep },\n        { onNext: validatePassword, component: PasswordStep },\n        { onNext: onClickSignUp, component: PasswordConfirmationStep },\n        { component: DoneStep },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Image, ImageBackground, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport { Card, Button, HelperText, TextInput } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Mutation } from '../../../api/schema';\nimport { primaryColor } from '../../../constants/Colors';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNGs are allowed\nimport logo from '../../../../assets/images/logo-black.png';\n\nconst MUTATION_LOG_IN = gql`\n  mutation UserLogin($email: String!, $password: String!) {\n    userLogin(email: $email, password: $password) {\n      authenticatable {\n        id\n        email\n        name\n        phone\n        createdAt\n        updatedAt\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useMutation<Mutation>(MUTATION_LOG_IN);\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: e.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [dispatch, mutationLogin, state.fields.email.value, state.fields.password.value]);\n\n  return (\n    <ImageBackground\n      // eslint-disable-next-line global-require\n      source={require('assets/images/pattern.png')}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      <Image source={logo} style={{ height: 300, width: '100%' }} resizeMode=\"contain\" />\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Card style={{ padding: 16, borderRadius: 8 }} elevation={3}>\n          <Card.Content>\n            <TextInput\n              label=\"Email\"\n              mode=\"outlined\"\n              value={state.fields.email.value}\n              onChangeText={(newValue) => {\n                dispatch(actions.screens.login.setEmail(newValue));\n              }}\n            />\n            <HelperText type=\"error\">{state.fields.email.error}</HelperText>\n\n            <TextInput\n              label=\"Password\"\n              mode=\"outlined\"\n              value={state.fields.password.value}\n              secureTextEntry\n              onChangeText={(newValue) => {\n                dispatch(actions.screens.login.setPassword(newValue));\n              }}\n              onSubmitEditing={onLogin}\n              error={!!state.fields.password.error}\n            />\n\n            <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n            <Button\n              mode=\"contained\"\n              labelStyle={styles.buttonLabel}\n              style={styles.button}\n              onPress={onLogin}\n              loading={data.loading}\n            >\n              Log in\n            </Button>\n\n            <Button\n              labelStyle={styles.textButtonLabel}\n              style={styles.textButton}\n              // onPress={() => navigation.navigate('SignUpScreen')}\n              onPress={() => navigation.navigate('SignUpWizard')}\n            >\n              Sign up\n            </Button>\n          </Card.Content>\n        </Card>\n      </KeyboardAvoidingView>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserSignUpArgs, UserSignUpPayload } from '../schema';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserSignUpArgs, UserSignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userSignUp,\n  fieldErrorMap: {\n    license: 'licenseId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'A confirmation link has been sent to your email',\n          variant: 'success',\n        })\n      );\n\n      navigation.navigate('LoginScreen');\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value}\n          onChangeText={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Email\"\n          error={!!state.fields.email.error}\n          value={state.fields.email.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['email', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Repeat password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport SignupWizard from 'app/screens/unauthenticated/signup/wizard/SignupWizard';\nimport LoginScreen from '../screens/unauthenticated/login/LoginScreen';\nimport SignUpScreen from '../screens/unauthenticated/signup/SignUpScreen';\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator();\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      mode=\"modal\"\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n      <Stack.Screen name=\"SignUpWizard\" component={SignupWizard} />\n    </Stack.Navigator>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzonePayload } from '../schema';\n\nexport const MUTATION_CREATE_DROPZONE = gql`\n  mutation CreateDropzone(\n    $name: String!\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n  ) {\n    createDropzone(\n      input: {\n        attributes: {\n          name: $name\n          banner: $banner\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          lat: $lat\n          lng: $lng\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federationId: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  CreateDropzonePayload\n>(MUTATION_CREATE_DROPZONE, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federationId: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreatePlanePayload } from '../schema';\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    registration: string;\n    dropzoneId: number;\n    minSlots: number;\n    maxSlots: number;\n    hours?: number;\n    nextMaintenanceHours?: number;\n  },\n  CreatePlanePayload\n>(MUTATION_CREATE_PLANE, {\n  getPayload: (result) => result.createPlane,\n  fieldErrorMap: {\n    dropzone: 'dropzoneId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    registration: [isRequired('Registration is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdatePlaneArgs, UpdatePlanePayload } from '../schema';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdatePlaneArgs['input']['attributes'],\n  UpdatePlanePayload\n>(MUTATION_UPDATE_PLANE, {\n  getPayload: (result) => result.updatePlane,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Federation, Query } from '../../../api/schema.d';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: Federation | null;\n  onSelect(jt: Federation): void;\n}\n\nconst QUERY_FEDERATIONS = gql`\n  query Federations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  return (\n    <CardSelect<Federation>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as Federation[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport Map from 'app/components/map/Map';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Location\">\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <Text style={styles.title}>Pick location</Text>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 140,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction AircraftWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.plane);\n  const [minSlots, setMinSlots] = React.useState(state?.fields?.minSlots?.value || 0);\n  const [maxSlots, setMaxSlots] = React.useState(state?.fields?.maxSlots?.value || 0);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Aircraft\">\n      <Fields>\n        <List.Subheader>Information</List.Subheader>\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Registration\"\n          error={!!state.fields.registration.error}\n          value={state.fields.registration.value || ''}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.plane.setField(['registration', newValue]))\n          }\n        />\n        <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n          {state.fields.registration.error || ''}\n        </HelperText>\n\n        <View style={styles.cardTitle}>\n          <List.Subheader>Max slots</List.Subheader>\n          <Text style={styles.cardValue}>{maxSlots || 34}</Text>\n        </View>\n\n        <View style={styles.slider}>\n          <Slider\n            style={styles.sliderControl}\n            minimumValue={2}\n            maximumValue={34}\n            step={1}\n            minimumTrackTintColor=\"#FF1414\"\n            maximumTrackTintColor=\"#000000\"\n            value={maxSlots}\n            onValueChange={(value) => setMaxSlots(value)}\n            onSlidingComplete={() =>\n              dispatch(actions.forms.plane.setField(['maxSlots', Number(maxSlots)]))\n            }\n          />\n        </View>\n\n        <HelperText type={state.fields.maxSlots?.error ? 'error' : 'info'}>\n          {state.fields.maxSlots?.error || 'Max available slots on this aircraft'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 4 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default AircraftWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { Card } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission, Query } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzonePermissions($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useLazyQuery<Query>(QUERY_DROPZONE_PERMISSIONS);\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          dropzoneId: Number(dropzoneForm.original.id),\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, Menu, Paragraph, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction TicketTypeWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [price, setPrice] = React.useState(0);\n\n  return (\n    <Step {...props} title=\"Tickets\">\n      <Fields>\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.ticketType.setField(['name', newValue]))\n          }\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Price</List.Subheader>\n            <Text style={styles.cardValue}>${price || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={500}\n              step={1}\n              value={price}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onSlidingComplete={() => dispatch(actions.forms.ticketType.setField(['cost', price]))}\n              onValueChange={setPrice}\n            />\n          </View>\n\n          <HelperText type={state.fields.cost?.error ? 'error' : 'info'}>\n            {state.fields.cost?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            contentStyle={{ width: 300 }}\n            anchor={\n              <TouchableOpacity onPress={() => setAltitudeMenuOpen(true)}>\n                <View style={styles.cardTitle}>\n                  <List.Subheader>Altitude</List.Subheader>\n                  <Text style={styles.cardValue}>\n                    {state.fields.altitude.value &&\n                    [4000, 14000].includes(state.fields.altitude.value)\n                      ? {\n                          '14000': 'Height',\n                          '4000': 'Hop n Pop',\n                        }[state.fields.altitude.value.toString() as '14000' | '4000']\n                      : 'Custom'}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            }\n          >\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Hop n Pop\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Height\"\n              right={() => <List.Icon icon=\"airplane-takeoff\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Other\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n          </Menu>\n\n          {(!state.fields.altitude.value ||\n            ![4000, 14000].includes(state.fields.altitude.value)) && (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Custom altitude\"\n              error={!!state.fields.altitude.error}\n              value={state.fields.altitude?.value?.toString()}\n              onChangeText={(newValue) =>\n                dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n              }\n            />\n          )}\n        </Card>\n        <Paragraph style={styles.paragraph}>\n          You can add more tickets later under Settings\n        </Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  paragraph: {\n    marginBottom: 8,\n    fontWeight: 'bold',\n    // fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    // marginHorizontal: 16,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default TicketTypeWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { PlaneFields } from 'app/components/forms/plane/slice';\nimport { TicketTypeFields } from 'app/components/forms/ticket_type/slice';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport useMutationCreatePlane from 'app/api/hooks/useMutationCreatePlane';\nimport useMutationUpdatePlane from 'app/api/hooks/useMutationUpdatePlane';\nimport useMutationCreateTicketType from 'app/api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from 'app/api/hooks/useMutationUpdateTicketType';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport AircraftStep from './steps/Aircraft';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport TicketTypeStep from './steps/TicketType';\n\nfunction DropzoneSetupScreen() {\n  const aircraft = useAppSelector((root) => root.forms.plane);\n  const ticket = useAppSelector((root) => root.forms.ticketType);\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const mutationCreatePlane = useMutationCreatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationUpdatePlane = useMutationUpdatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationCreateTicketType = useMutationCreateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n  const mutationUpdateTicketType = useMutationUpdateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onThemingNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federationId: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federationId: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            break;\n          case 'federationId':\n            navigation.goBack();\n            navigation.goBack();\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            break;\n          case 'name':\n            navigation.goBack();\n            navigation.goBack();\n            navigation.goBack();\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            break;\n          case 'lat':\n          case 'lng':\n            navigation.goBack();\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n    navigation,\n  ]);\n\n  const onAircraftNext = React.useCallback(async () => {\n    if (!aircraft.fields.name.value) {\n      dispatch(actions.forms.plane.setFieldError(['name', 'You must name your aircraft']));\n      throw new Error();\n    }\n    if (!aircraft.fields.registration.value) {\n      dispatch(\n        actions.forms.plane.setFieldError(['registration', 'Please provide aircraft registration'])\n      );\n      throw new Error();\n    }\n\n    // Create or update dropzone\n    const result = !aircraft.original?.id\n      ? await mutationCreatePlane.mutate({\n          dropzoneId: Number(dropzone?.original?.id),\n          name: aircraft.fields.name.value,\n          registration: aircraft.fields.registration.value,\n          minSlots: Number(aircraft.fields.minSlots.value),\n          maxSlots: Number(aircraft.fields.maxSlots.value),\n        })\n      : await mutationUpdatePlane.mutate({\n          id: Number(aircraft.original.id),\n          name: aircraft.fields.name.value,\n          registration: aircraft.fields.registration.value,\n          minSlots: aircraft.fields.minSlots.value,\n          maxSlots: aircraft.fields.maxSlots.value,\n        });\n\n    if (!result?.errors?.length && result?.plane?.id) {\n      dispatch(actions.forms.plane.setOpen(result?.plane));\n    } else {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (field) {\n          case 'registration':\n            dispatch(actions.forms.plane.setFieldError(['registration', message]));\n            break;\n          case 'name':\n            dispatch(actions.forms.plane.setFieldError(['name', message]));\n            break;\n          case 'maxSlots':\n            dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    aircraft.fields.maxSlots.value,\n    aircraft.fields.minSlots.value,\n    aircraft.fields.name.value,\n    aircraft.fields.registration.value,\n    aircraft.original?.id,\n    dispatch,\n    dropzone?.original?.id,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n  ]);\n\n  const onTicketTypeNext = React.useCallback(async () => {\n    if (!ticket.fields.name.value) {\n      dispatch(actions.forms.ticketType.setFieldError(['name', 'You must name your ticket']));\n      throw new Error();\n    }\n\n    if (!ticket.fields.cost.value) {\n      dispatch(actions.forms.ticketType.setFieldError(['cost', 'Tickets must have a price']));\n      throw new Error();\n    }\n\n    // Create or update dropzone\n    const result = !ticket.original?.id\n      ? await mutationCreateTicketType.mutate({\n          dropzoneId: Number(dropzone.original?.id),\n          name: ticket.fields.name.value,\n          cost: ticket.fields.cost.value,\n          altitude: ticket.fields.altitude.value,\n          isTandem: false,\n          allowManifestingSelf: true,\n        })\n      : await mutationUpdateTicketType.mutate({\n          id: Number(ticket.original.id),\n          name: ticket.fields.name.value,\n          cost: ticket.fields.cost.value,\n          altitude: ticket.fields.altitude.value,\n          isTandem: false,\n          allowManifestingSelf: true,\n        });\n\n    if (!result?.errors?.length && result?.ticketType?.id) {\n      dispatch(actions.forms.ticketType.setOpen(result.ticketType));\n    } else {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (field) {\n          case 'cost':\n            dispatch(actions.forms.ticketType.setFieldError(['cost', message]));\n            break;\n          case 'name':\n            dispatch(actions.forms.ticketType.setFieldError(['name', message]));\n            break;\n          case 'altitude':\n            dispatch(actions.forms.ticketType.setFieldError(['altitude', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    ticket.fields.name.value,\n    ticket.fields.cost.value,\n    ticket.fields.altitude.value,\n    ticket.original?.id,\n    mutationCreateTicketType,\n    dropzone.original?.id,\n    mutationUpdateTicketType,\n    dispatch,\n  ]);\n\n  return (\n    <Wizard\n      dots\n      name=\"DropzoneWizard\"\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.ticketType.setOpen(false));\n            dispatch(actions.forms.plane.setOpen(false));\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.ticketType.reset());\n            dispatch(actions.forms.plane.reset());\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: onThemingNext },\n        { component: AircraftStep, onNext: onAircraftNext },\n        { component: TicketTypeStep, onNext: onTicketTypeNext },\n        {\n          component: (stepProps) => (\n            <PermissionStep {...stepProps} permission={Permission.CreateSlot} title=\"Manifest\" />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.ticketType.setOpen(false));\n            dispatch(actions.forms.plane.setOpen(false));\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.ticketType.reset());\n            dispatch(actions.forms.plane.reset());\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            navigation.replace('Authenticated', { screen: 'HomeScreen' });\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, TextInput } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title={`${state.federation?.value?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <TextInput\n          value={state.fields?.apfNumber?.value || ''}\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n          }\n          label={`${state.federation.value?.name} ID`}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RealName(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <TextInput\n          value={state.fields?.name?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction UserInfoScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <TextInput\n          value={state.fields?.nickname?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n          {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default UserInfoScreen;\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { License, Query } from '../../../api/schema.d';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: License | null;\n  federationId?: number | null;\n  onSelect(jt: License): void;\n}\n\nconst QUERY_LICENSES = gql`\n  query Licenses($federationId: Int) {\n    licenses(federationId: $federationId) {\n      id\n      name\n\n      federation {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useQuery<Query>(QUERY_LICENSES, {\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<License>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as License[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseCardSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default FederationStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { HelperText, Menu, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Menu\n          onDismiss={() => setMenuOpen(false)}\n          visible={isMenuOpen}\n          anchor={\n            <TouchableOpacity onPress={() => setMenuOpen(true)}>\n              <TextInput\n                pointerEvents=\"box-only\"\n                style={styles.field}\n                mode=\"outlined\"\n                error={!!state.fields.make.error}\n                value={isOtherMake ? 'Other' : state.fields.make.value || 'Select manufacturer'}\n                disabled\n              />\n            </TouchableOpacity>\n          }\n        >\n          {[\n            'Icon',\n            'Javelin',\n            'Mirage',\n            'Vector',\n            'PA (Talon)',\n            'Infinity',\n            'Parachutes de France',\n            'Parachute Systems',\n            'Racer',\n          ].map((make) => (\n            <Menu.Item\n              onPress={() => {\n                setMenuOpen(false);\n                setIsOtherMake(false);\n                dispatch(actions.forms.rig.setField(['make', make]));\n              }}\n              title={make}\n            />\n          ))}\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              dispatch(actions.forms.rig.setField(['make', '']));\n              setIsOtherMake(true);\n            }}\n            title=\"Other\"\n          />\n        </Menu>\n        {!isOtherMake ? null : (\n          <TextInput\n            style={styles.field}\n            mode=\"flat\"\n            label=\"Other manufacturer\"\n            error={!!state.fields.make.error}\n            value={state.fields.make.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n          />\n        )}\n\n        <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n          {state.fields.make.error || ''}\n        </HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Model\"\n          error={!!state.fields.model.error}\n          value={state.fields.model.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n        />\n        <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n          {state.fields.model.error || 'e.g G4.1'}\n        </HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Serial number\"\n          error={!!state.fields.serial.error}\n          value={state.fields.serial.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n        />\n        <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n          {state.fields.serial.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 16, marginVertical: 16 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <CardSelect\n          items={[\n            { value: false, label: 'I have my own rig' },\n            { value: true, label: 'I dont have my own rig' },\n          ]}\n          renderItemLabel={({ label }) => label}\n          onChangeSelected={(options) =>\n            dispatch(actions.screens.userWizard.skipRigSetup(options[0].value))\n          }\n          isSelected={({ value }) => value === state.skipRigSetup}\n          selected={[\n            state.skipRigSetup\n              ? { value: true, label: 'I dont have my own rig' }\n              : { value: false, label: 'I have my own rig' },\n          ]}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Card, HelperText, List, Paragraph } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [canopySize, setCanopySize] = React.useState(rigForm.fields.canopySize.value || 120);\n  const [weight, setWeight] = React.useState(Number(userForm.fields.exitWeight.value) || 120);\n\n  React.useEffect(() => {\n    if (rigForm.fields.canopySize.value) {\n      setCanopySize(rigForm.fields.canopySize.value);\n    }\n  }, [rigForm.fields.canopySize.value]);\n\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil(\n                (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                  (rigForm.fields.canopySize.value || 150),\n                2\n              ).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>\n              Your wingloading is an indicator of your descent rate under canopy\n            </Paragraph>\n          </View>\n        </View>\n        <View style={styles.cardTitle}>\n          <List.Subheader>Your exit weight</List.Subheader>\n          <Text style={styles.cardValue}>{weight || 50}kg</Text>\n        </View>\n        <Slider\n          style={styles.sliderControl}\n          minimumValue={50}\n          maximumValue={160}\n          step={0.5}\n          minimumTrackTintColor=\"#FF1414\"\n          maximumTrackTintColor=\"#000000\"\n          onSlidingComplete={() =>\n            dispatch(actions.forms.user.setField(['exitWeight', weight.toString()]))\n          }\n          value={weight}\n          onValueChange={(w) => setWeight(w)}\n        />\n        <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n          {userForm.fields.exitWeight?.error || \"Your weight in kg's with all equipment on\"}\n        </HelperText>\n\n        <View style={styles.cardTitle}>\n          <List.Subheader>Canopy size</List.Subheader>\n          <Text style={styles.cardValue}>{canopySize || 120}ft</Text>\n        </View>\n\n        <View style={styles.slider}>\n          <Slider\n            style={styles.sliderControl}\n            minimumValue={34}\n            maximumValue={350}\n            step={1}\n            value={canopySize || 120}\n            minimumTrackTintColor=\"#FF1414\"\n            maximumTrackTintColor=\"#000000\"\n            onValueChange={(size) => setCanopySize(size)}\n            onSlidingComplete={() =>\n              dispatch(actions.forms.rig.setField(['canopySize', canopySize]))\n            }\n          />\n        </View>\n\n        <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n          {userForm.fields.exitWeight?.error || 'Size of your main canopy in square feet'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  useJoinFederationMutation,\n  useCreateRigMutation,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport useMutationUpdateUser from 'app/api/hooks/useMutationUpdateUser';\nimport { UserFields } from 'app/components/forms/user/slice';\nimport { License, Rig } from 'app/api/schema.d';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  const [joinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const [mutationUpdateRig] = useUpdateRigMutation();\n  const [mutationCreateRig] = useCreateRigMutation();\n\n  const onNameNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n      dispatch(\n        actions.forms.user.setFieldError(['name', 'Please enter your full name, including surname'])\n      );\n      throw new Error();\n    }\n  }, [dispatch, userForm.fields.name.value]);\n\n  const onNicknameNext = React.useCallback(async () => {\n    // Update user license\n    const result = await mutationUpdateUser.mutate({\n      id: Number(userForm.original?.id),\n      nickname: userForm.fields.nickname.value,\n      name: userForm.fields.name.value,\n    });\n\n    if (result?.errors) {\n      throw new Error();\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.name.value,\n    userForm.fields.nickname.value,\n    userForm.original?.id,\n  ]);\n\n  const onFederationNext = React.useCallback(async () => {\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          federationId: Number(userForm.federation?.value?.id),\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [dispatch, joinFederation, userForm.federation.value?.id, userForm.federation.value?.name]);\n\n  const onFederationNumberNext = React.useCallback(async () => {\n    // Validate\n    if (\n      userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n      !userForm.fields.apfNumber.value\n    ) {\n      dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n      throw new Error();\n    }\n\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          uid: userForm.fields.apfNumber.value,\n          federationId: Number(userForm.federation?.value?.id),\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation.value?.id,\n    userForm.federation.value?.name,\n    userForm.fields.apfNumber.value,\n  ]);\n\n  const onLicenseNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.license?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n      throw new Error();\n    }\n\n    try {\n      const response = await joinFederation({\n        variables: {\n          federationId: Number(userForm.federation?.value?.id),\n          licenseId: Number(userForm.fields.license?.value?.id),\n        },\n      });\n      if (response.data?.joinFederation?.errors) {\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation?.value?.id,\n    userForm.fields.license?.value?.id,\n  ]);\n\n  const onRigNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.make?.value) {\n      dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n      throw new Error();\n    }\n\n    if (!rigForm.fields.model?.value) {\n      dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n      throw new Error();\n    }\n\n    // Create user rig\n    try {\n      if (!rigForm.original?.id) {\n        const response = await mutationCreateRig({\n          variables: {\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.id),\n          },\n        });\n        if (response?.data?.createRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.createRig?.rig as Rig));\n        }\n      } else {\n        const response = await mutationUpdateRig({\n          variables: {\n            id: Number(rigForm.original?.id),\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.id),\n          },\n        });\n        if (response?.data?.updateRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.updateRig?.rig as Rig));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    rigForm.fields.make.value,\n    rigForm.fields.model.value,\n    rigForm.fields.serial.value,\n    rigForm.original?.id,\n    dispatch,\n    mutationCreateRig,\n    userForm.original?.id,\n    mutationUpdateRig,\n  ]);\n\n  const onReserveRepackNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.repackExpiresAt?.value) {\n      dispatch(\n        actions.forms.rig.setFieldError([\n          'repackExpiresAt',\n          \"Select repack date, even if it's in the past\",\n        ])\n      );\n      throw new Error();\n    }\n\n    // Update repack expiry date\n    const { data } = await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n      },\n    });\n    if (data?.updateRig?.rig) {\n      dispatch(actions.forms.rig.setOriginal(data?.updateRig?.rig as Rig));\n    }\n  }, [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]);\n\n  const onWingloadingNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.canopySize?.value) {\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n      throw new Error();\n    }\n\n    if (!userForm.fields.exitWeight?.value) {\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight']));\n      throw new Error();\n    }\n\n    await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        canopySize: rigForm.fields.canopySize.value,\n      },\n    });\n    await mutationUpdateUser.mutate({\n      id: Number(userForm.original?.id),\n      exitWeight: Number(userForm.fields.exitWeight?.value),\n    });\n  }, [\n    rigForm.fields.canopySize.value,\n    rigForm.original?.id,\n    userForm.fields.exitWeight?.value,\n    userForm.original?.id,\n    dispatch,\n    mutationUpdateRig,\n    mutationUpdateUser,\n  ]);\n\n  return (\n    <Wizard\n      name=\"UserWizard\"\n      dots\n      steps={[\n        {\n          component: RealNameStep,\n          onNext: onNameNext,\n          onBack: () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n        { component: NicknameStep, onNext: onNicknameNext },\n        { component: FederationStep, onNext: onFederationNext },\n        userForm.federation?.value?.id && userForm?.federation?.value?.name?.toLowerCase() === 'apf'\n          ? { component: FederationNumberStep, onNext: onFederationNumberNext }\n          : null,\n        { component: LicenseStep, onNext: onLicenseNext },\n        { component: AskForRigStep },\n        state?.skipRigSetup ? null : { component: RigStep, onNext: onRigNext },\n        state?.skipRigSetup ? null : { component: ReserveRepackStep, onNext: onReserveRepackNext },\n        state?.skipRigSetup ? null : { component: WingloadingStep, onNext: onWingloadingNext },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n      ].filter(Boolean)}\n    />\n  );\n}\n\nexport default UserWizardScreen;\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('DropzonesScreen');\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query, QueryDropzonesArgs } from '../schema';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<Query['dropzones'], QueryDropzonesArgs>(QUERY_DROPZONES, {\n  getPayload: (query) => query?.dropzones,\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport {\n  DrawerActions,\n  getFocusedRouteNameFromRoute,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport InfoGrid from '../../screens/authenticated/load/InfoGrid';\nimport useRestriction from '../../hooks/useRestriction';\nimport { Permission } from '../../api/schema.d';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport useQueryDropzones from '../../api/hooks/useQueryDropzones';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { currentUser, dropzone, loading } = useCurrentDropzone();\n  const { data } = useQueryDropzones({\n    variables: {\n      isPublic: true,\n    },\n    onError: (err) => console.error(err),\n  });\n\n  const navigation = useNavigation();\n  const route = useRoute();\n  const routeName = getFocusedRouteNameFromRoute(route);\n  const navState = navigation.dangerouslyGetState();\n  const subNavState = navState.routes[navState.index].state;\n  // eslint-disable-next-line\n  // @ts-ignore\n  const subNavRoutes = subNavState?.routes[subNavState?.index];\n  const subNavSubState = subNavRoutes?.state;\n  let subRouteName = subNavState && getFocusedRouteNameFromRoute(subNavRoutes);\n  subRouteName = subRouteName || subNavSubState?.routes[0].name;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'Authenticated',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'ProfileScreen',\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(subRouteName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'ManifestScreen',\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Profile\"\n            active={subRouteName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ProfileScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={subRouteName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'EquipmentScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={subRouteName === 'Notifications'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Notifications',\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={subRouteName === 'TransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'TransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n        <Drawer.Section title=\"Dropzone\">\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={subRouteName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'DropzoneTransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'Authenticated',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'SettingsScreen',\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Switch dropzone\">\n          {data?.edges?.map((edge) => (\n            <Drawer.Item\n              key={`${edge?.node?.id}-dz`}\n              label={edge?.node?.name || ''}\n              icon=\"map-marker\"\n              active={dropzone?.id === edge?.node?.id}\n              onPress={() => {\n                if (edge?.node) {\n                  dispatch(actions.global.setDropzone(edge.node));\n                  navigation.navigate('Authenticated', {\n                    screen: 'Authenticated',\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('DropzoneSetupScreen');\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport AuthenticatedRoutes from './Authenticated';\nimport LimboRoutes from './LimboRoutes';\nimport UnauthenticatedRoutes from './Unauthenticated';\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport DropzoneSetupScreen from '../screens/authenticated/dropzone_wizard/DropzoneWizard';\nimport UserSetupWizard from '../screens/authenticated/user_wizard/UserWizardScreen';\nimport ConfirmUserScreen from '../screens/unauthenticated/signup/ConfirmUserScreen';\nimport DrawerMenu from './drawer/Drawer';\n\nexport type TRootNavigatorRouteParams = {\n  Authenticated: undefined;\n  Unauthenticated: undefined;\n  // eslint-disable-next-line camelcase\n  confirm: { account_confirmation_success?: boolean };\n  Dropzones: undefined;\n  DropzonesScreen: undefined;\n  DropzoneSetupScreen: undefined;\n  UserSetupWizard: undefined;\n  NotFound: undefined;\n};\n\nexport type TDrawerNavigatorRouteParams = {\n  Authenticated: undefined;\n  Profile: undefined;\n  Settings: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<TRootNavigatorRouteParams>();\nconst Drawer = createDrawerNavigator<TDrawerNavigatorRouteParams>();\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\">\n            {() => (\n              <Drawer.Navigator drawerContent={() => <DrawerMenu />}>\n                <Drawer.Screen name=\"Authenticated\" component={AuthenticatedRoutes} />\n              </Drawer.Navigator>\n            )}\n          </Stack.Screen>\n        ) : (\n          <Stack.Screen name=\"Dropzones\" component={LimboRoutes} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={UnauthenticatedRoutes} />\n      )}\n      <Stack.Screen name=\"DropzoneSetupScreen\" component={DropzoneSetupScreen} />\n      <Stack.Screen name=\"UserSetupWizard\" component={UserSetupWizard} />\n      <Stack.Screen name=\"confirm\" component={ConfirmUserScreen} />\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider as MaterialProvider, ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { Appearance, Linking, Platform, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { registerRootComponent } from 'expo';\nimport * as Sentry from 'sentry-expo';\nimport URI from 'urijs';\nimport './PaperDatesPolyfill';\nimport Wrapper from './EntrypointWrapper';\n\nimport AppUpdate from './components/app_update/AppUpdate';\n\nimport Apollo from './api/Apollo';\nimport { store, persistor, useAppSelector, useAppDispatch } from './state/store';\nimport ImageViewer from './components/dialogs/ImageViewer/ImageViewer';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport NotificationArea from './components/notifications/Notifications';\nimport LinkingConfiguration from './navigation/Routes';\nimport RootNavigator from './navigation/RootNavigator';\nimport { actions } from './state';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  enableInExpoDevelopment: true,\n  debug: true,\n});\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nfunction Content() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = (link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  };\n\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  React.useEffect(() => {\n    if (isDarkMode && !state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else if (!isDarkMode && state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else {\n      dispatch(actions.global.setPrimaryColor(state.theme.colors.primary));\n    }\n  }, [dispatch, isDarkMode, state.isDarkMode, state.theme.colors.primary]);\n\n  React.useEffect(() => {\n    if (Platform.OS === 'web') {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: notification.request.content.body,\n            variant: 'info',\n          })\n        );\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      console.log({ notification: response });\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch]);\n\n  return (\n    <AppUpdate>\n      <React.Suspense\n        fallback={\n          <View style={{ flex: 1, flexGrow: 1 }}>\n            <ProgressBar indeterminate color={state?.theme?.colors?.accent} visible />\n          </View>\n        }\n      >\n        <Apollo>\n          <MaterialProvider theme={state.theme}>\n            <SafeAreaProvider>\n              <ImageViewer />\n              <NavigationContainer\n                linking={LinkingConfiguration}\n                theme={state.theme as unknown as never}\n              >\n                <Wrapper>\n                  <RootNavigator />\n                </Wrapper>\n              </NavigationContainer>\n\n              <StatusBar />\n              <NotificationArea />\n            </SafeAreaProvider>\n          </MaterialProvider>\n        </Apollo>\n      </React.Suspense>\n    </AppUpdate>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default registerRootComponent(App);\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        // console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n"],"sourceRoot":""}