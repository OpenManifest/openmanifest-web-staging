{"version":3,"file":"static/js/main.37ab711a.js","mappings":"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","sources":["app/entrypoint/bootstrap/PaperDatesPolyfill.ts","app/constants/expo.ts","app/entrypoint/bootstrap/GoogleMaps.ts","app/entrypoint/bootstrap/Notifications.tsx","app/api/schema.d.ts","app/components/forms/dropzone/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/user/user_list/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/dropzone/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/wizards/dropzone_wizard/slice.tsx","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/state/store.ts","app/api/client/utils/getServerUrl.ts","app/api/client/utils/ActionCableLink.ts","app/api/client/links/websockets.ts","app/api/client/links/http.ts","app/providers/notifications/context.ts","app/components/LottieView.web.tsx","app/providers/notifications/provider.tsx","app/api/client/links/errors.ts","app/components/app_signal/AppSignalClient.tsx","app/components/app_signal/AppSignalContext.tsx","app/components/app_signal/AppSignalFallbackBoundary.tsx","app/components/app_signal/ErrorScreen.tsx","app/components/app_signal/AppSignalBoundary.tsx","app/components/app_signal/AppSignalProvider.tsx","app/api/crud/factory.tsx","app/providers/dropzone/context.ts","app/components/app_signal/AppSignalTagger.tsx","app/components/app_signal/AppSignalLink.tsx","app/api/client/links/appSignal.ts","app/api/client/links/link.ts","app/api/client/links/authentication.ts","app/api/client/cache.ts","app/api/client/client.ts","app/api/Apollo.tsx","app/entrypoint/EntrypointWrapper.web.tsx","app/api/reflection.tsx","app/api/crud/useDropzone.tsx","app/api/crud/useDropzones.tsx","app/hooks/useRestriction.ts","app/api/crud/subscriptions/useLoadUpdatedSubscription.tsx","app/api/crud/useLoad.tsx","app/api/crud/subscriptions/useUserUpdated.tsx","app/api/crud/useUserProfile.tsx","app/api/crud/subscriptions/useLoadCreatedSubscription.tsx","app/api/crud/useManifest.tsx","app/api/crud/useTickets.ts","app/api/crud/useAircrafts.ts","app/components/layout/DialogOrSheet.web.tsx","app/components/input/withHookForm.tsx","app/components/input/text/TextField.tsx","app/components/input/number_input/NumberField.web.tsx","app/components/chips/Chip.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/Skeleton.web.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/number_input/index.ts","app/components/UserAvatar.tsx","app/components/UserAvatar.web.old.tsx","app/components/popover/Menu.web.tsx","app/components/input/select/Select.web.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/forms/manifest_user/ManifestForm.tsx","app/providers/manifest/context.ts","app/hooks/useManifestValidator.ts","app/forms/manifest_user/useForm.tsx","app/forms/manifest_user/Dialog.web.tsx","app/forms/load/LoadForm.tsx","app/forms/load/useForm.tsx","app/forms/load/Dialog.tsx","app/forms/credits/CreditsForm.tsx","app/forms/credits/useForm.tsx","app/forms/credits/Credits.web.tsx","app/providers/hooks/useDialog.tsx","app/providers/manifest/provider.tsx","app/components/input/time_picker/TimePicker.tsx","app/providers/load/TimePickerDialog.tsx","app/providers/load/context .tsx","app/providers/load/provider.tsx","app/forms/aircraft/AircraftForm.tsx","app/forms/aircraft/useForm.tsx","app/forms/aircraft/Dialog.tsx","app/components/input/dropdown_select/AltitudeSelect.tsx","app/components/input/dropdown_select/DropzoneUserSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/input/dropdown_select/JumpTypeSelect.tsx","app/components/input/dropdown_select/LicenseSelect.tsx","app/components/input/dropdown_select/PlaneSelect.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/input/dropdown_select/TicketTypeSelect.tsx","app/forms/create_user/Form.tsx","app/forms/create_user/useForm.ts","app/forms/create_user/Dialog.tsx","app/components/input/switch/Switch.tsx","app/forms/ticket_type/TicketTypeForm.tsx","app/forms/ticket_type/useForm.tsx","app/forms/ticket_type/Dialog.tsx","app/forms/ticket_type_addon/TicketAddonForm.tsx","app/forms/ticket_type_addon/useForm.tsx","app/forms/ticket_type_addon/Dialog.tsx","app/providers/dropzone/provider.tsx","app/entrypoint/providers/Dropzones.tsx","app/entrypoint/providers/PushNotificationProvider.tsx","app/entrypoint/providers/ThemeProvider.web.tsx","app/entrypoint/providers/AppUpdate.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/screens/NotFoundScreen.tsx","app/components/Themed.tsx","app/hooks/useColorScheme.web.ts","app/components/NoResults.tsx","app/screens/limbo/dropzone_select/DropzoneCard.tsx","app/screens/limbo/dropzone_select/DropzonesScreen.tsx","app/screens/limbo/routes.tsx","app/hooks/useDevice.ts","app/components/Divider.tsx","app/screens/unauthenticated/login/form/FacebookButton.web.tsx","app/screens/unauthenticated/login/form/AppleButton.web.tsx","app/screens/unauthenticated/login/form/useForm.ts","app/screens/unauthenticated/login/form/LoginForm.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/components/layout/Screen.tsx","app/components/layout/SwipeActions.tsx","app/components/GradientText.web.tsx","app/components/carousel_wizard/Step.tsx","app/components/carousel_wizard/Dots.tsx","app/components/carousel_wizard/Buttons.tsx","app/components/carousel_wizard/Wizard.tsx","app/utils/checkPasswordComplexity.ts","app/components/input/PasswordComplexityIndicator.tsx","app/forms/sign_up/steps/Password.tsx","app/forms/sign_up/steps/Email.tsx","app/forms/sign_up/steps/PasswordConfirmation.tsx","app/forms/sign_up/steps/Done.tsx","app/forms/sign_up/useForm.tsx","app/forms/sign_up/SignupWizard.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/screens/unauthenticated/routes.tsx","app/components/input/card_select/CardSelect.tsx","app/hooks/react/useCustomEqualityCheck.ts","app/hooks/react/useMemo.ts","app/hooks/react/useEffect.ts","app/forms/user_wizard/steps/AskForRig.tsx","app/hooks/useImagePicker.ts","app/forms/user_wizard/steps/Avatar.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/forms/user_wizard/steps/Federation.tsx","app/forms/user_wizard/steps/FederationNumber.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/forms/user_wizard/steps/License.tsx","app/forms/user_wizard/steps/Nickname.tsx","app/forms/user_wizard/steps/RealName.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/components/input/date_picker/index.ts","app/forms/user_wizard/steps/ReserveRepack.tsx","app/forms/user_wizard/steps/Rig.tsx","app/forms/user_wizard/steps/Wingloading.tsx","app/api/crud/useEquipment.ts","app/hooks/forms/useWizard.ts","app/forms/user_wizard/useForm.tsx","app/components/carousel_wizard/HookFormWizard.tsx","app/forms/user_wizard/UserWizard.tsx","app/forms/user_wizard/steps/Done.tsx","app/api/createMutation.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationUpdateDropzone.ts","app/screens/wizards/dropzone_wizard/steps/Name.tsx","app/screens/wizards/dropzone_wizard/steps/Federation.tsx","app/utils/calculateLatLngDelta.ts","app/components/map/Map.web.tsx","app/components/input/search/AddressSearchBar.tsx","app/screens/wizards/dropzone_wizard/steps/Location.web.tsx","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/screens/wizards/dropzone_wizard/steps/Theming.tsx","app/screens/wizards/dropzone_wizard/steps/Done.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/wizards/dropzone_wizard/steps/Permissions.tsx","app/screens/wizards/dropzone_wizard/steps/Logo.tsx","app/screens/wizards/dropzone_wizard/DropzoneWizard.tsx","app/screens/wizards/recover_password/steps/Email.tsx","app/screens/wizards/recover_password/steps/Done.tsx","app/screens/wizards/recover_password/RecoverPasswordScreen.tsx","app/screens/wizards/confirm_user/ConfirmUserScreen.tsx","app/screens/wizards/change_password/steps/Done.tsx","app/screens/wizards/change_password/steps/Password.tsx","app/screens/wizards/change_password/steps/PasswordConfirmation.tsx","app/screens/wizards/change_password/ChangePasswordScreen.tsx","app/screens/authenticated/user/useUserNavigation.ts","app/screens/authenticated/user/user_list/UsersScreen.tsx","app/screens/authenticated/user/user_list/AppBar.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/api/hooks/useMutationUpdateRig.tsx","app/screens/authenticated/user/equipment/RigCard.tsx","app/screens/authenticated/user/rig_inspection/RigInspectionScreen.tsx","app/components/Badge.tsx","app/screens/authenticated/user/profile/UserInfo/PermissionBadges.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/api/hooks/useMutationCreateRig.ts","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/forms/user/UserForm.tsx","app/api/hooks/useMutationUpdateUser.ts","app/components/dialogs/User.tsx","app/hooks/navigation/useProfileWizard.tsx","app/screens/authenticated/user/profile/UserInfo/Header.tsx","app/screens/authenticated/user/profile/UserInfo/InfoGrid.tsx","app/screens/authenticated/user/profile/UserActions.tsx","app/screens/authenticated/user/profile/SlotCard.tsx","app/screens/authenticated/user/profile/tabs/JumpHistory.tsx","app/components/orders/OrderCard.tsx","app/screens/authenticated/user/profile/tabs/index.tsx","app/screens/authenticated/user/profile/tabs/Transactions.tsx","app/screens/authenticated/user/profile/tabs/Equipment.tsx","app/screens/authenticated/user/profile/ProfileScreen.tsx","app/screens/authenticated/user/orders/OrdersScreen.tsx","app/screens/authenticated/user/equipment/EquipmentScreen.tsx","app/components/layout/ScrollableScreen.tsx","app/screens/authenticated/user/order_receipt/TransactionCard.tsx","app/screens/authenticated/user/order_receipt/ReceiptCard.tsx","app/screens/authenticated/user/order_receipt/OrderScreen.tsx","app/screens/authenticated/user/routes.tsx","app/screens/wizards/routes.tsx","app/screens/authenticated/dropzone/load/InfoGrid.tsx","app/components/drawer/Drawer.tsx","app/api/hooks/useLogout.ts","app/components/appbar/SetupWarning.tsx","app/components/appbar/AppBar.tsx","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/autocomplete/DropzoneUserAutocomplete.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/slots_table/UserRow.tsx","app/components/slots_table/DragAndDrop/DraggableRow.web.tsx","app/components/slots_table/DragAndDrop/DroppableSlot.web.tsx","app/utils/generateColor.ts","app/components/forms/manifest_group/GroupPicker.tsx","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/dropzone/load/ActionButton.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/CountdownTimer.web.ts","app/screens/authenticated/dropzone/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/dropzone/load/Header.tsx","app/components/slots_table/AvailableRow.web.tsx","app/components/slots_table/Table.tsx","app/screens/authenticated/dropzone/load/views/TableView.tsx","app/screens/authenticated/dropzone/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/utils/calculateCoordinatesByAngle.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/dropzone/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/dropzone/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/useAuthenticatedNavigation.ts","app/screens/authenticated/dropzone/weather_conditions/WindScreen.tsx","app/components/slots_table/DragAndDrop/DraggingRow.web.tsx","app/components/slots_table/DragAndDrop/DragDropSlotProvider.web.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Card.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Card.tsx","app/screens/authenticated/dropzone/manifest/Weather/JumpRun.tsx","app/screens/authenticated/dropzone/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/dropzone/manifest/SetupProfileCard.tsx","app/screens/authenticated/dropzone/manifest/FinishSetupSteps.tsx","app/screens/authenticated/dropzone/manifest/ManifestScreen.tsx","app/screens/authenticated/configuration/settings_menu/SettingsMenuScreen.tsx","app/screens/authenticated/configuration/ticket_types/TicketTypesScreen.tsx","app/components/input/LocationPicker.web.tsx","app/forms/dropzone/DropzoneForm.tsx","app/forms/dropzone/useForm.ts","app/screens/authenticated/configuration/dropzone_settings/DropzoneSettingsScreen.tsx","app/screens/authenticated/configuration/aircrafts/AircraftsScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/configuration/rig_inspection_template/RigInspectionTemplateScreen.tsx","app/screens/authenticated/configuration/rigs/DropzoneRigsScreen.tsx","app/screens/authenticated/configuration/permissions/PermissionsScreen.tsx","app/hooks/usePalette.ts","app/screens/authenticated/configuration/master_log/useForm.ts","app/screens/authenticated/configuration/master_log/MasterLogScreen.tsx","app/screens/authenticated/configuration/transactions/DropzoneTransactionsScreen.tsx","app/screens/authenticated/configuration/extras/ExtrasScreen.tsx","app/screens/authenticated/configuration/routes.tsx","app/screens/authenticated/dropzone/routes.tsx","app/screens/authenticated/notifications/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/useNotificationNavigation.ts","app/screens/authenticated/notifications/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/notifications/NotificationsScreen.tsx","app/screens/authenticated/notifications/routes.tsx","app/screens/authenticated/overview/statistics/Stats.tsx","app/screens/authenticated/overview/statistics/LoadsByDay.web.tsx","app/screens/authenticated/overview/DropzonesTable.tsx","app/constants/ChartConfig.ts","app/screens/authenticated/overview/statistics/JumpTypePieChart.tsx","app/screens/authenticated/overview/AdminOverview.tsx","app/components/activity/Feed.web.tsx","app/components/activity/Container.tsx","app/screens/authenticated/overview/DropzoneOverview.tsx","app/screens/authenticated/overview/routes.tsx","app/screens/authenticated/TabBar.web.tsx","app/screens/authenticated/routes.tsx","app/screens/drawers/UserDrawer.tsx","app/screens/routes.tsx","app/entrypoint/Entrypoint.tsx","app/entrypoint/hooks/useAppearance.tsx","app/entrypoint/hooks/useRouteChange.tsx","app/entrypoint/index.ts","app/entrypoint/hooks/useCachedResources.ts","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/runtime/nonce","webpack/startup"],"sourcesContent":["import { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    \n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import Constants from 'expo-constants';\n\nconst config = Constants.manifest?.extra || Constants.manifest2?.extra?.expoClient?.extra;\n\nexport default config;\n","import config from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nimport Geocoder from 'react-native-geocoding';\nimport { setGoogleApiKey } from 'expo-location';\n\nconst googleMapsApiKey = Platform.select({\n  ios: config?.googleMapsIos,\n  android: config?.googleMapsAndroid,\n  web: config?.googleMapsWeb,\n});\n\nGeocoder.init(googleMapsApiKey);\nsetGoogleApiKey(googleMapsApiKey);\n","import * as Notifications from 'expo-notifications';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** An ISO 8601-encoded date */\n  ISO8601Date: any;\n  /** An ISO 8601-encoded datetime */\n  ISO8601DateTime: any;\n};\n\nexport type AnyResource = {\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of Apple. */\nexport type ApplePayload = {\n  __typename?: 'ApplePayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone. */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateExtra. */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost. */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad. */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder. */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane. */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateRigInspection. */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig. */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot. */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots. */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket. */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition. */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteDropzone. */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteLoad. */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeletePlane. */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteRig */\nexport type DeleteRigInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteRig. */\nexport type DeleteRigPayload = {\n  __typename?: 'DeleteRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteSlot. */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteTicket. */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of DeleteUser */\nexport type DeleteUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the dropzone user to delete */\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteUser. */\nexport type DeleteUserPayload = {\n  __typename?: 'DeleteUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  extras: Array<Extra>;\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  settings?: Maybe<Settings>;\n  state: DropzoneState;\n  statistics: Statistics;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userRoles: Array<UserRole>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: InputMaybe<Scalars['Int']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  banner?: InputMaybe<Scalars['String']>;\n  federation?: InputMaybe<Scalars['Int']>;\n  isCreditSystemEnabled?: InputMaybe<Scalars['Boolean']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  lat?: InputMaybe<Scalars['Float']>;\n  lng?: InputMaybe<Scalars['Float']>;\n  name: Scalars['String'];\n  primaryColor?: InputMaybe<Scalars['String']>;\n  requestPublication?: InputMaybe<Scalars['Boolean']>;\n  secondaryColor?: InputMaybe<Scalars['String']>;\n  /** Settings for the dropzone */\n  settings?: InputMaybe<SettingsInput>;\n};\n\nexport enum DropzoneState {\n  Archived = 'archived',\n  Demo = 'demo',\n  InReview = 'in_review',\n  Private = 'private',\n  Public = 'public'\n}\n\nexport enum DropzoneStateEvent {\n  /** archive */\n  Archive = 'archive',\n  /** demo */\n  Demo = 'demo',\n  /** publish */\n  Publish = 'publish',\n  /** request_publication */\n  RequestPublication = 'request_publication',\n  /** unpublish */\n  Unpublish = 'unpublish'\n}\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['ISO8601DateTime'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['ISO8601DateTime'];\n  user: User;\n  userFederation?: Maybe<UserFederation>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  credits?: InputMaybe<Scalars['Float']>;\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  expiresAt?: InputMaybe<Scalars['Int']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  userRoleId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Event = {\n  __typename?: 'Event';\n  action?: Maybe<EventAction>;\n  createdAt: Scalars['ISO8601DateTime'];\n  createdBy?: Maybe<DropzoneUser>;\n  details?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  level?: Maybe<EventLevel>;\n  message?: Maybe<Scalars['String']>;\n  resource?: Maybe<AnyResource>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum EventAccessLevel {\n  /** admin */\n  Admin = 'admin',\n  /** system */\n  System = 'system',\n  /** user */\n  User = 'user'\n}\n\nexport enum EventAction {\n  /** assigned */\n  Assigned = 'assigned',\n  /** confirmed */\n  Confirmed = 'confirmed',\n  /** created */\n  Created = 'created',\n  /** deleted */\n  Deleted = 'deleted',\n  /** updated */\n  Updated = 'updated'\n}\n\n/** The connection type for Event. */\nexport type EventConnection = {\n  __typename?: 'EventConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EventEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Event>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type EventEdge = {\n  __typename?: 'EventEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Event>;\n};\n\nexport enum EventLevel {\n  /** debug */\n  Debug = 'debug',\n  /** error */\n  Error = 'error',\n  /** info */\n  Info = 'info'\n}\n\nexport type Extra = AnyResource & SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type ExtraInput = {\n  cost?: InputMaybe<Scalars['Float']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  ticketTypeIds?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Autogenerated return type of Facebook. */\nexport type FacebookPayload = {\n  __typename?: 'FacebookPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  licenses?: Maybe<Array<License>>;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  state: LoadState;\n};\n\n/** Autogenerated return type of FinalizeLoad. */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FormTemplateInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type GeocodedLocation = {\n  __typename?: 'GeocodedLocation';\n  formattedString?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  lat?: Maybe<Scalars['Float']>;\n  lng: Scalars['Float'];\n};\n\nexport type GhostInput = {\n  dropzone: Scalars['Int'];\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  federationNumber?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  phone?: InputMaybe<Scalars['String']>;\n  role: Scalars['Int'];\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of GrantPermission. */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation. */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['ISO8601DateTime'];\n  federation?: Maybe<Federation>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  guid: Scalars['ID'];\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['ISO8601DateTime'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** Autogenerated return type of LoadCreated. */\nexport type LoadCreatedPayload = {\n  __typename?: 'LoadCreatedPayload';\n  load?: Maybe<Load>;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: InputMaybe<Scalars['ISO8601DateTime']>;\n  gca?: InputMaybe<Scalars['ID']>;\n  loadMaster?: InputMaybe<Scalars['ID']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  pilot?: InputMaybe<Scalars['ID']>;\n  plane?: InputMaybe<Scalars['ID']>;\n  state?: InputMaybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** open */\n  Open = 'open'\n}\n\n/** Autogenerated return type of LoadUpdated. */\nexport type LoadUpdatedPayload = {\n  __typename?: 'LoadUpdatedPayload';\n  load?: Maybe<Load>;\n};\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type MasterLogAircraft = {\n  __typename?: 'MasterLogAircraft';\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  registration?: Maybe<Scalars['String']>;\n};\n\nexport type MasterLogEntry = {\n  __typename?: 'MasterLogEntry';\n  date?: Maybe<Scalars['ISO8601Date']>;\n  downloadUrl?: Maybe<Scalars['String']>;\n  dzso?: Maybe<MasterLogUser>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<MasterLogLoad>>;\n  location?: Maybe<GeocodedLocation>;\n  notes?: Maybe<Scalars['String']>;\n};\n\nexport type MasterLogInput = {\n  dzso?: InputMaybe<Scalars['ID']>;\n  notes?: InputMaybe<Scalars['String']>;\n};\n\nexport type MasterLogLoad = {\n  __typename?: 'MasterLogLoad';\n  aircraft?: Maybe<MasterLogAircraft>;\n  dispatchAt?: Maybe<Scalars['ISO8601DateTime']>;\n  gca?: Maybe<MasterLogUser>;\n  id: Scalars['ID'];\n  loadMaster?: Maybe<MasterLogUser>;\n  loadNumber?: Maybe<Scalars['Int']>;\n  pilot?: Maybe<MasterLogUser>;\n  slots?: Maybe<Array<MasterLogSlot>>;\n};\n\nexport type MasterLogSlot = {\n  __typename?: 'MasterLogSlot';\n  altitude?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpType?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type MasterLogUser = {\n  __typename?: 'MasterLogUser';\n  email?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n};\n\nexport enum ModerationRole {\n  /** administrator */\n  Administrator = 'administrator',\n  /** moderator */\n  Moderator = 'moderator',\n  /** support */\n  Support = 'support',\n  /** user */\n  User = 'user'\n}\n\n/** Autogenerated input type of MoveSlot */\nexport type MoveSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  sourceSlot: Scalars['Int'];\n  targetLoad: Scalars['Int'];\n  targetSlot?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of MoveSlot. */\nexport type MoveSlotPayload = {\n  __typename?: 'MoveSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  loads?: Maybe<Array<Load>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  archiveRig?: Maybe<DeleteRigPayload>;\n  archiveTicketType?: Maybe<DeleteTicketPayload>;\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteUser?: Maybe<DeleteUserPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  loginWithApple?: Maybe<ApplePayload>;\n  loginWithFacebook?: Maybe<FacebookPayload>;\n  moveSlot?: Maybe<MoveSlotPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateMasterLog?: Maybe<UpdateMasterLogPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  updateVisibility?: Maybe<UpdateVisibilityPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<SignUpPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationArchiveRigArgs = {\n  input: DeleteRigInput;\n};\n\n\nexport type MutationArchiveTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input: DeleteUserInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationLoginWithAppleArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n  userIdentity: Scalars['String'];\n};\n\n\nexport type MutationLoginWithFacebookArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\n\nexport type MutationMoveSlotArgs = {\n  input: MoveSlotInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateMasterLogArgs = {\n  input: UpdateMasterLogInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUpdateVisibilityArgs = {\n  input: UpdateVisibilityInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  phone: Scalars['String'];\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  confirmUrl: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** system */\n  System = 'system',\n  /** user_manifested */\n  UserManifested = 'user_manifested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer?: Maybe<Wallet>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller?: Maybe<Wallet>;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  /** Total amount of the order */\n  amount: Scalars['Float'];\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: Scalars['ID'];\n  dropzone: Scalars['ID'];\n  /** Item to attach to order */\n  sellableItem?: InputMaybe<Scalars['ID']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: Scalars['ID'];\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport enum OrderState {\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** completed */\n  Completed = 'completed',\n  /** pending */\n  Pending = 'pending',\n  /** refunded */\n  Refunded = 'refunded'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  ActAsDzso = 'actAsDZSO',\n  ActAsGca = 'actAsGCA',\n  ActAsLoadMaster = 'actAsLoadMaster',\n  ActAsPilot = 'actAsPilot',\n  ActAsRigInspector = 'actAsRigInspector',\n  CreateDoubleSlot = 'createDoubleSlot',\n  CreateDropzoneRig = 'createDropzoneRig',\n  CreateExtra = 'createExtra',\n  CreateFormTemplate = 'createFormTemplate',\n  CreateLoad = 'createLoad',\n  CreatePackjob = 'createPackjob',\n  CreatePlane = 'createPlane',\n  CreateRig = 'createRig',\n  CreateSlot = 'createSlot',\n  CreateStudentSlot = 'createStudentSlot',\n  CreateTicketType = 'createTicketType',\n  CreateUser = 'createUser',\n  CreateUserDoubleSlot = 'createUserDoubleSlot',\n  CreateUserSlot = 'createUserSlot',\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  CreateUserTransaction = 'createUserTransaction',\n  DeleteDropzone = 'deleteDropzone',\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  DeleteExtra = 'deleteExtra',\n  DeleteFormTemplate = 'deleteFormTemplate',\n  DeleteLoad = 'deleteLoad',\n  DeletePackjob = 'deletePackjob',\n  DeletePlane = 'deletePlane',\n  DeleteRig = 'deleteRig',\n  DeleteSlot = 'deleteSlot',\n  DeleteStudentSlot = 'deleteStudentSlot',\n  DeleteTicketType = 'deleteTicketType',\n  DeleteUser = 'deleteUser',\n  DeleteUserSlot = 'deleteUserSlot',\n  GrantPermission = 'grantPermission',\n  ReadDropzoneRig = 'readDropzoneRig',\n  ReadExtra = 'readExtra',\n  ReadFormTemplate = 'readFormTemplate',\n  ReadLoad = 'readLoad',\n  ReadPackjob = 'readPackjob',\n  ReadPermissions = 'readPermissions',\n  ReadRig = 'readRig',\n  ReadUser = 'readUser',\n  ReadUserTransactions = 'readUserTransactions',\n  RevokePermission = 'revokePermission',\n  UndeleteDropzone = 'undeleteDropzone',\n  UndeleteDropzoneRig = 'undeleteDropzoneRig',\n  UndeleteExtra = 'undeleteExtra',\n  UndeletePlane = 'undeletePlane',\n  UndeleteRig = 'undeleteRig',\n  UndeleteStudentSlot = 'undeleteStudentSlot',\n  UndeleteTicketType = 'undeleteTicketType',\n  UndeleteUser = 'undeleteUser',\n  UndeleteUserSlot = 'undeleteUserSlot',\n  UpdateDropzone = 'updateDropzone',\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  UpdateExtra = 'updateExtra',\n  UpdateFormTemplate = 'updateFormTemplate',\n  UpdateLoad = 'updateLoad',\n  UpdatePackjob = 'updatePackjob',\n  UpdatePermissions = 'updatePermissions',\n  UpdatePlane = 'updatePlane',\n  UpdateRig = 'updateRig',\n  UpdateSlot = 'updateSlot',\n  UpdateStudentSlot = 'updateStudentSlot',\n  UpdateTicketType = 'updateTicketType',\n  UpdateUser = 'updateUser',\n  UpdateUserSlot = 'updateUserSlot',\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  ViewAdminActivity = 'viewAdminActivity',\n  ViewRevenue = 'viewRevenue',\n  ViewStatistics = 'viewStatistics',\n  ViewSystemActivity = 'viewSystemActivity',\n  ViewUserActivity = 'viewUserActivity'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots: Scalars['Int'];\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type PlaneInput = {\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  hours?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  minSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nextMaintenanceHours?: InputMaybe<Scalars['Int']>;\n  registration?: InputMaybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get all Activity Events for a dropzone (or all dropzones) */\n  activity: EventConnection;\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  /** Currently authenticated user */\n  currentUser?: Maybe<User>;\n  /** Get dropzone details */\n  dropzone?: Maybe<Dropzone>;\n  /** Get a specific user at a dropzone */\n  dropzoneUser?: Maybe<DropzoneUser>;\n  /** Search users at a dropzone */\n  dropzoneUsers?: Maybe<DropzoneUserConnection>;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get all ticket type extras */\n  extras: Array<Extra>;\n  /** Get all available federations */\n  federations: Array<Federation>;\n  /** Find location by searching */\n  geocode?: Maybe<GeocodedLocation>;\n  /** Get Base64 images via GraphQL */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load?: Maybe<Load>;\n  /** Get all loads */\n  loads: LoadConnection;\n  /** Get the master log entry for a specific day */\n  masterLog?: Maybe<MasterLogEntry>;\n  /** Get Aircrafts for a dropzone */\n  planes?: Maybe<Array<Plane>>;\n  /** Get ticket types for a dropzone */\n  ticketTypes?: Maybe<Array<TicketType>>;\n};\n\n\nexport type QueryActivityArgs = {\n  accessLevels?: InputMaybe<Array<EventAccessLevel>>;\n  actions?: InputMaybe<Array<EventAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  createdBy?: InputMaybe<Array<Scalars['ID']>>;\n  dropzone?: InputMaybe<Array<Scalars['ID']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  levels?: InputMaybe<Array<EventLevel>>;\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type QueryAvailableRigsArgs = {\n  dropzoneUser: Scalars['Int'];\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  licensed?: InputMaybe<Scalars['Boolean']>;\n  permissions?: InputMaybe<Array<Permission>>;\n  search?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<Array<DropzoneState>>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzone?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryGeocodeArgs = {\n  search: Scalars['String'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  dropzoneUsers?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  date?: InputMaybe<Scalars['ISO8601Date']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryMasterLogArgs = {\n  date: Scalars['ISO8601Date'];\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  dropzone: Scalars['ID'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition. */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of RevokePermission. */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  owner?: Maybe<User>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['ID'];\n};\n\nexport type RigInput = {\n  canopySize?: InputMaybe<Scalars['Int']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  maintainedAt?: InputMaybe<Scalars['Int']>;\n  make?: InputMaybe<Scalars['String']>;\n  model?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  packValue?: InputMaybe<Scalars['Int']>;\n  packingCard?: InputMaybe<Scalars['String']>;\n  repackExpiresAt?: InputMaybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: InputMaybe<Scalars['String']>;\n  serial?: InputMaybe<Scalars['String']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type RigInspectionInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzone?: InputMaybe<Scalars['ID']>;\n  isOk?: InputMaybe<Scalars['Boolean']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type Settings = {\n  __typename?: 'Settings';\n  /** Allow users to double-manifest */\n  allowDoubleManifesting?: Maybe<Scalars['Boolean']>;\n  /** Allow manifest to bypass all rules? */\n  allowManifestBypass?: Maybe<Scalars['Boolean']>;\n  /** When this is enabled, users can manifest even if they go into negatives */\n  allowNegativeCredits?: Maybe<Scalars['Boolean']>;\n  /** When this is enabled, users cannot manifest if they have no credits */\n  requireCredits?: Maybe<Scalars['Boolean']>;\n  /** When this is enabled, users cannot manifest if they have no equipment */\n  requireEquipment?: Maybe<Scalars['Boolean']>;\n  /** Should a valid license be required to manifest a jump? */\n  requireLicense?: Maybe<Scalars['Boolean']>;\n  /** When this is enabled, users cannot manifest if their membership is out of date */\n  requireMembership?: Maybe<Scalars['Boolean']>;\n  /** When this is enabled, users cannot manifest if their reserve is out of date */\n  requireReserveInDate?: Maybe<Scalars['Boolean']>;\n  /** Whether or not rig inspections are required before manifesting a jump */\n  requireRigInspection?: Maybe<Scalars['Boolean']>;\n};\n\nexport type SettingsInput = {\n  /** Allow users to double-manifest */\n  allowDoubleManifesting?: InputMaybe<Scalars['Boolean']>;\n  /** Allow manifest to bypass all rules? */\n  allowManifestBypass?: InputMaybe<Scalars['Boolean']>;\n  /** When this is enabled, users can manifest even if they go into negatives */\n  allowNegativeCredits?: InputMaybe<Scalars['Boolean']>;\n  /** When this is enabled, users cannot manifest if they have no credits */\n  requireCredits?: InputMaybe<Scalars['Boolean']>;\n  /** When this is enabled, users cannot manifest if they have no equipment */\n  requireEquipment?: InputMaybe<Scalars['Boolean']>;\n  /** Should a valid license be required to manifest a jump? */\n  requireLicense?: InputMaybe<Scalars['Boolean']>;\n  /** When this is enabled, users cannot manifest if their membership is out of date */\n  requireMembership?: InputMaybe<Scalars['Boolean']>;\n  /** When this is enabled, users cannot manifest if their reserve is out of date */\n  requireReserveInDate?: InputMaybe<Scalars['Boolean']>;\n  /** Whether or not rig inspections are required before manifesting a jump */\n  requireRigInspection?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** Autogenerated return type of SignUp. */\nexport type SignUpPayload = {\n  __typename?: 'SignUpPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  extras?: InputMaybe<Array<Scalars['ID']>>;\n  groupNumber?: InputMaybe<Scalars['Int']>;\n  jumpType?: InputMaybe<Scalars['ID']>;\n  load?: InputMaybe<Scalars['ID']>;\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n  userGroup?: InputMaybe<Array<SlotUser>>;\n};\n\nexport type SlotUser = {\n  exitWeight: Scalars['Float'];\n  id: Scalars['Int'];\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Statistics = {\n  __typename?: 'Statistics';\n  activeUserCount: Scalars['Int'];\n  cancelledLoadsCount: Scalars['Int'];\n  dzsoCount: Scalars['Int'];\n  finalizedLoadsCount: Scalars['Int'];\n  gcaCount: Scalars['Int'];\n  id: Scalars['ID'];\n  inactiveUserCount: Scalars['Int'];\n  /** Get the number of loads dispatched per day */\n  loadCountByDay?: Maybe<Array<StatisticsByDate>>;\n  loadsCount: Scalars['Int'];\n  pilotCount: Scalars['Int'];\n  revenueCentsCount: Scalars['Int'];\n  rigInspectorCount: Scalars['Int'];\n  /** Get the number of slots by jump type */\n  slotsByJumpType?: Maybe<Array<StatisticsByName>>;\n  slotsCount: Scalars['Int'];\n  totalUserCount: Scalars['Int'];\n};\n\n\nexport type StatisticsCancelledLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsFinalizedLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadCountByDayArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsRevenueCentsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsByJumpTypeArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\nexport type StatisticsByDate = {\n  __typename?: 'StatisticsByDate';\n  count: Scalars['Int'];\n  date: Scalars['ISO8601Date'];\n};\n\nexport type StatisticsByName = {\n  __typename?: 'StatisticsByName';\n  count: Scalars['Int'];\n  name: Scalars['String'];\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  loadCreated: LoadCreatedPayload;\n  loadUpdated: LoadUpdatedPayload;\n  userUpdated: UserUpdatedPayload;\n};\n\n\nexport type SubscriptionLoadCreatedArgs = {\n  dropzoneId: Scalars['ID'];\n};\n\n\nexport type SubscriptionLoadUpdatedArgs = {\n  loadId: Scalars['ID'];\n};\n\n\nexport type SubscriptionUserUpdatedArgs = {\n  dropzoneUserId: Scalars['ID'];\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type TicketTypeInput = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  altitude?: InputMaybe<Scalars['Int']>;\n  cost?: InputMaybe<Scalars['Float']>;\n  currency?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  extraIds?: InputMaybe<Array<Scalars['Int']>>;\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type TimeRangeInput = {\n  endTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n  startTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser: DropzoneUser;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver?: Maybe<Wallet>;\n  sender?: Maybe<Wallet>;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum TransactionStatus {\n  Cancelled = 'cancelled',\n  Completed = 'completed',\n  Reserved = 'reserved'\n}\n\nexport enum TransactionType {\n  Deposit = 'deposit',\n  Purchase = 'purchase',\n  Refund = 'refund',\n  Sale = 'sale',\n  Withdrawal = 'withdrawal'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateDropzone. */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser. */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateExtra. */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate. */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateLoad. */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateMasterLog */\nexport type UpdateMasterLogInput = {\n  attributes: MasterLogInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  date: Scalars['ISO8601Date'];\n  dropzone: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateMasterLog. */\nexport type UpdateMasterLogPayload = {\n  __typename?: 'UpdateMasterLogPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  masterLog?: Maybe<MasterLogEntry>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateNotification. */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdatePlane. */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection. */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig. */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  enabled: Scalars['Boolean'];\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Scalars['String'];\n};\n\n/** Autogenerated return type of UpdateRole. */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateSlot. */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateTicket. */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of UpdateUser. */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateVisibility */\nexport type UpdateVisibilityInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  event: DropzoneStateEvent;\n};\n\n/** Autogenerated return type of UpdateVisibility. */\nexport type UpdateVisibilityPayload = {\n  __typename?: 'UpdateVisibilityPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  licenses?: Maybe<Array<License>>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken. */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federation: Scalars['ID'];\n  license?: InputMaybe<Scalars['ID']>;\n  /** User Federation ID, e.g APF number */\n  uid?: InputMaybe<Scalars['String']>;\n};\n\nexport type UserInput = {\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserLogin. */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout. */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken. */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken. */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken. */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\n/** Autogenerated return type of UserUpdated. */\nexport type UserUpdatedPayload = {\n  __typename?: 'UserUpdatedPayload';\n  dropzoneUser?: Maybe<DropzoneUser>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['ISO8601DateTime'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  dropzoneId: Scalars['Int'];\n  exitSpotMiles?: InputMaybe<Scalars['Int']>;\n  jumpRun?: InputMaybe<Scalars['Int']>;\n  offsetDirection?: InputMaybe<Scalars['String']>;\n  offsetMiles?: InputMaybe<Scalars['Int']>;\n  temperature?: InputMaybe<Scalars['Int']>;\n  winds?: InputMaybe<Scalars['String']>;\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneDetailedFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { DropzoneState } from 'app/api/schema.d';\n\nexport type DropzoneFields = Pick<\n  DropzoneDetailedFragment,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'status'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: DropzoneExtensiveFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: DropzoneDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    status: {\n      value: DropzoneState.Public,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<boolean | DropzoneExtensiveFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof (typeof initialState)['fields'];\n            state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<DropzoneExtensiveFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof (typeof initialState)['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<DropzoneUserEssentialsFragment, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUserEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUserEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IDropzoneUserEditState,\n      action: PayloadAction<boolean | DropzoneUserEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.role.value = action.payload.role;\n        state.fields.expiresAt.value = action.payload.expiresAt;\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RigEssentialsFragment } from 'app/api/operations';\n\nexport type RigFields = Pick<\n  RigEssentialsFragment,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: RigEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: RigEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | RigEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.make.value = action.payload.make;\n        state.fields.name.value = action.payload.name;\n        state.fields.model.value = action.payload.model;\n        state.fields.serial.value = action.payload.serial;\n        state.fields.repackExpiresAt.value = action.payload.repackExpiresAt;\n        state.fields.canopySize.value = action.payload.canopySize;\n        state.fields.rigType.value = action.payload.rigType;\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<RigEssentialsFragment>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof (typeof initialState)['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        if (error instanceof Error) {\n          console.error('Failed to read rig inspection template', error.message, action.payload);\n        }\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotDetailsFragment, SlotExhaustiveFragment } from 'app/api/operations';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: SlotDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | SlotDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.rig.value = action.payload.rig;\n        state.fields.ticketType.value = action.payload.ticketType;\n        state.fields.dropzoneUser.value = action.payload.dropzoneUser;\n        state.fields.exitWeight.value = action.payload.exitWeight;\n        state.fields.passengerName.value = action.payload.passengerName;\n        state.fields.passengerExitWeight.value = action.payload.passengerExitWeight;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserProfileFragment,\n  LoadDetailsFragment,\n  RigEssentialsFragment,\n  SlotDetailsFragment,\n} from 'app/api/operations';\nimport { first, xorBy } from 'lodash';\nimport { SlotUser } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = Omit<SlotUser, 'rig'> & {\n  rigId?: number;\n  rig?: RigEssentialsFragment;\n  avatar?: string;\n  name?: string;\n};\n\ninterface IFields\n  extends Pick<\n    SlotDetailsFragment & { load: LoadDetailsFragment },\n    'jumpType' | 'load' | 'ticketType' | 'extras' | 'groupNumber'\n  > {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    groupNumber: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (\n      state: ISlotEditState,\n      action: PayloadAction<{ load: LoadDetailsFragment; slots: SlotDetailsFragment[] }>\n    ) => {\n      state.fields.users.value = action.payload.slots.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        rig: slot.rig,\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUserWithRig[];\n\n      state.fields.jumpType.value = action.payload.slots.find((i) => i)?.jumpType;\n      state.fields.groupNumber.value = action.payload.slots.find((i) => i)?.groupNumber || null;\n      state.fields.load.value = action.payload.load;\n      state.fields.extras.value = action.payload.slots.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (\n      state: ISlotEditState,\n      action: PayloadAction<DropzoneUserProfileFragment[]>\n    ) => {\n      state.fields.users.value = xorBy(\n        state.fields.users.value,\n        action.payload?.map((dzUser) => {\n          const autoSelectedRig = dzUser?.user?.rigs?.length\n            ? first(dzUser.user.rigs)\n            : first(dzUser.availableRigs);\n          return {\n            id: Number(dzUser.id),\n            rigId: autoSelectedRig?.id ? Number(autoSelectedRig.id) : null,\n            rig: autoSelectedRig,\n            name: dzUser.user.name,\n            avatar: dzUser.user.image,\n            exitWeight: Number(dzUser?.user?.exitWeight),\n          };\n        }) as SlotUserWithRig[],\n        'id'\n      );\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.load.value = action.payload.load;\n        state.fields.users.value = action.payload.users;\n        state.fields.ticketType.value = action.payload.ticketType;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  CurrentUserDetailedFragment,\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\n\nexport type UserFields = Pick<\n  UserDetailedFragment & { license?: LicenseDetailsFragment },\n  | 'exitWeight'\n  | 'rigs'\n  | 'name'\n  | 'phone'\n  | 'email'\n  | 'apfNumber'\n  | 'nickname'\n  | 'license'\n  | 'image'\n>;\n\ninterface IUserEditState {\n  original: DropzoneUserDetailsFragment | CurrentUserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: UserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    image: {\n      value: null,\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<FederationEssentialsFragment>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (\n      state: IUserEditState,\n      action: PayloadAction<DropzoneUserDetailsFragment | CurrentUserDetailedFragment>\n    ) => {\n      state.original = action.payload;\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof (typeof initialState)['fields'];\n          if (typedKey in action.payload) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n              typedKey\n            ];\n          } else if (typedKey in action.payload.user) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n              typedKey\n            ];\n          }\n        }\n      });\n      state.federation.value =\n        action.payload.license?.federation ||\n        action.payload?.user?.userFederations?.find((i) => i)?.federation ||\n        null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        const userFederation = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        );\n        state.fields.apfNumber.value = userFederation?.uid;\n        state.fields.license.value =\n          state.fields.license.value || userFederation?.license || state?.original?.license;\n        console.debug('SET APF NUMBER TO ', state.fields.apfNumber.value);\n      }\n    },\n\n    setOpen: (\n      state: IUserEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof (typeof initialState)['fields'];\n\n              if (typedKey === 'license') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherConditionEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<\n  WeatherConditionEssentialsFragment,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherConditionEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherConditionEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof (typeof initialState)['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherConditionEssentialsFragment)[\n                typedKey\n              ];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUserEssentialsFragment[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (\n      state: IManifestScreenState,\n      action: PayloadAction<DropzoneUserEssentialsFragment[]>\n    ) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import * as users from './authenticated/user/user_list/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/dropzone/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './wizards/dropzone_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport merge from 'lodash/merge';\nimport { DropzoneExtensiveFragment, UserDetailedFragment } from '../api/operations';\nimport { Credential } from '../api/schema.d';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' },\n  },\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme: Theme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' as const },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' as const },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' as const },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' as const },\n  },\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  authenticated: boolean;\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: UserDetailedFragment | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: DropzoneExtensiveFragment | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  currentRouteName: string;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  authenticated: false,\n  expoPushToken: null,\n  currentRouteName: '',\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      console.debug('[Redux::Global]: Setting credentials', action.payload);\n      state.credentials = action.payload;\n    },\n    setAuthenticated: (state: IGlobalState, action: PayloadAction<boolean>) => {\n      state.authenticated = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<UserDetailedFragment>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setCurrentRouteName: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.currentRouteName = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<DropzoneExtensiveFragment | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n      console.debug('Setting id', action?.payload?.id);\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAppearance: (state: IGlobalState, action: PayloadAction<'light' | 'dark'>): IGlobalState => {\n      const current = state.isDarkMode ? 'dark' : 'light';\n      state.isDarkMode = action.payload === 'dark';\n\n      console.log('Setting appearance to', action.payload);\n      if (current === action.payload) {\n        return state;\n      }\n      state.theme = merge(\n        {},\n        action.payload === 'dark' ? CombinedDarkTheme : CombinedDefaultTheme,\n        {\n          colors: {\n            primary: state.currentDropzone?.primaryColor || CombinedDarkTheme.colors.primary,\n            accent: state.currentDropzone?.secondaryColor || CombinedDarkTheme.colors.accent,\n          },\n        }\n      );\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n      return state;\n    },\n    logout: (state: IGlobalState) => {\n      console.debug('Logout called?');\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\ntype ScreenReducers = {\n  [K in keyof typeof screens]: (typeof screens)[K]['reducer'];\n};\n\ntype FormReducers = {\n  [K in keyof typeof forms]: (typeof forms)[K]['reducer'];\n};\n\ntype ScreenActions = {\n  [K in keyof typeof screens]: (typeof screens)[K]['actions'];\n};\n\ntype FormActions = {\n  [K in keyof typeof forms]: (typeof forms)[K]['actions'];\n};\n\n\nconst screenReducers = Object.keys(screens).reduce(\n\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as ScreenReducers;\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as FormReducers;\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as ScreenActions;\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as FormActions;\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import config from 'app/constants/expo';\n\nexport function getServerUrl(): string {\n  if (!config?.url) {\n    throw new Error('No server url found in config');\n  }\n  console.debug({ URL: config?.url });\n  return config?.url;\n}\n","import { ApolloLink, Observable, FetchResult, Operation, NextLink } from '@apollo/client';\nimport type { Consumer } from '@rails/actioncable';\nimport { print } from 'graphql';\n\n// rome-ignore lint/suspicious/noExplicitAny: Required here\ntype RequestResult = FetchResult<{ [key: string]: any }, Record<string, any>, Record<string, any>>;\ntype ConnectionParams = object | ((operation: Operation) => object);\n\nclass ActionCableLink extends ApolloLink {\n  cable: Consumer;\n\n  channelName: string;\n\n  actionName: string;\n\n  connectionParams: ConnectionParams;\n\n  constructor(options: {\n    cable: Consumer;\n    channelName?: string;\n    actionName?: string;\n    connectionParams?: ConnectionParams;\n  }) {\n    super();\n    this.cable = options.cable;\n    this.channelName = options.channelName || 'GraphqlChannel';\n    this.actionName = options.actionName || 'execute';\n    this.connectionParams = options.connectionParams || {};\n  }\n\n  // Interestingly, this link does _not_ call through to `next` because\n  // instead, it sends the request to ActionCable.\n  request(operation: Operation, _next: NextLink): Observable<RequestResult> {\n    return new Observable((observer) => {\n      const channelId = Math.round(Date.now() + Math.random() * 100000).toString(16);\n      const { actionName } = this;\n      const connectionParams =\n        typeof this.connectionParams === 'function'\n          ? this.connectionParams(operation)\n          : this.connectionParams;\n      const channel = this.cable.subscriptions.create(\n        {\n          channel: this.channelName,\n          channelId,\n          ...connectionParams,\n        },\n        {\n          connected() {\n            channel.perform(actionName, {\n              query: operation.query ? print(operation.query) : null,\n              variables: operation.variables,\n              // This is added for persisted operation support:\n              operationId: (operation as { operationId?: string }).operationId,\n              operationName: operation.operationName,\n            });\n          },\n          received(payload) {\n            if (payload?.result?.data || payload?.result?.errors) {\n              observer.next(payload.result);\n            }\n\n            if (!payload.more) {\n              observer.complete();\n            }\n          },\n        }\n      );\n      // Make the ActionCable subscription behave like an Apollo subscription\n      return Object.assign(channel, { closed: false });\n    });\n  }\n}\n\nexport default ActionCableLink;\n","import * as ActionCable from '@rails/actioncable';\nimport URI from 'urijs';\nimport { getServerUrl } from '../utils/getServerUrl';\nimport ActionCableLink from '../utils/ActionCableLink';\n\nexport const hasSubscriptionOperation = ({ query: { definitions } }) => {\n  return definitions.some(\n    ({ kind, operation }) => kind === 'OperationDefinition' && operation === 'subscription'\n  );\n};\n\nexport function createWebsocketsLink() {\n  const cable = ActionCable.createConsumer(\n    [\n      new URI(getServerUrl()).scheme() === 'https' ? 'wss://' : 'ws://',\n      new URI(getServerUrl()).host(),\n      '/subscriptions',\n    ].join('')\n  );\n\n  return new ActionCableLink({\n    cable,\n    connectionParams: (a) => {\n      const { authHeaders } = a.getContext();\n      return authHeaders;\n    },\n  });\n}\n","import { ApolloLink } from '@apollo/client';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { getServerUrl } from '../utils/getServerUrl';\nimport { createWebsocketsLink, hasSubscriptionOperation } from './websockets';\n\nexport const abortController = new AbortController();\nexport const httpLink = new BatchHttpLink({\n  batchDebounce: true,\n  batchMax: 10,\n  uri: getServerUrl(),\n  fetchOptions: {\n    mode: 'cors',\n    method: 'POST',\n    signal: abortController.signal,\n  },\n});\n\nexport function createHttpLink() {\n  return ApolloLink.split(hasSubscriptionOperation, createWebsocketsLink(), httpLink);\n}\n","import { noop } from 'lodash';\nimport * as React from 'react';\n\nexport interface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  createdAt: number;\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationContext {\n  success(message: INotification['message'], action?: INotification['action']): void;\n  error(message: INotification['message'], action?: INotification['action']): void;\n  info(message: INotification['message'], action?: INotification['action']): void;\n}\n\nexport const NotificationContext = React.createContext<INotificationContext>({\n  success: noop,\n  error: noop,\n  info: noop,\n});\n\nexport function useNotifications() {\n  return React.useContext(NotificationContext);\n}\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport LottieView from 'app/components/LottieView';\nimport { isEqual, last } from 'lodash';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\nimport { NotificationContext } from './context';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\n\nenum AnimationState {\n  opening = 0,\n  waiting = 1,\n  closed = 2\n}\n\nexport function NotificationsProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [queue, setQueue] = React.useState<INotification[]>([]);\n\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(() => queue?.[0], [queue]);\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  const notify = React.useCallback(\n    (newNotification: INotification) => {\n      if (!isEqual(last(queue), newNotification)) {\n        setQueue([...queue, newNotification]);\n      }\n    },\n    [queue]\n  );\n\n  const onHide = React.useCallback(() => {\n    const [, ...newQueue] = queue;\n    setQueue(newQueue);\n  }, [queue]);\n\n  const success = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'success', action });\n    },\n    [notify]\n  );\n\n  const error = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'error', action });\n    },\n    [notify]\n  );\n\n  const info = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'info', action });\n    },\n    [notify]\n  );\n\n  const onAnimationFinish = React.useCallback(() => {\n    setAnimationState(AnimationState.waiting);\n    setTimeout(() => {\n      onHide();\n      setAnimationState(AnimationState.closed);\n    }, 200);\n  }, [onHide]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide,\n        text1: notification.message,\n        type: notification.variant || 'success'\n      });\n      if (notification.variant === 'error') {\n        console.error(notification.message);\n      }\n    }\n  }, [notification, onHide]);\n\n  const context = React.useMemo(() => ({ notify, success, error, info }), [error, info, notify, success]);\n\n  return (\n    <NotificationContext.Provider value={context}>\n      {children}\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            {...{ onAnimationFinish }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast autoHide visibilityTime={4000} position=\"bottom\" type=\"success\" />\n    </NotificationContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300\n  }\n});\n","import { onError } from '@apollo/client/link/error';\nimport * as React from 'react';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nexport const defaultErrorLink = onError(({ graphQLErrors, networkError, operation }) => {\n  if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n    console.error('[Apollo::Links::Errors::Default]: Authentication Error');\n    return;\n  }\n\n  if (graphQLErrors && process.env.EXPO_ENV !== 'production') {\n    graphQLErrors.forEach((err) => {\n      const { message, locations, path, name, nodes } = err;\n      console.error(\n        `[Apollo::Links::Errors::Default]: ${message}, ${JSON.stringify(\n          locations\n        )}, ${path}, ${name}, ${nodes}`\n      );\n      console.log(operation);\n    });\n  }\n  if (networkError && process.env.EXPO_ENV !== 'production') {\n    console.error(`[Apollo::Links::Errors::Default::Network] ${networkError}`);\n  }\n});\n\nexport function useErrorLink() {\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const { authenticated } = useAppSelector((root) => root.global);\n  // Log any GraphQL errors or network error that occurred\n  return React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, forward }) => {\n        try {\n          if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n            notify.info('Session expired');\n            if (authenticated) {\n              console.debug(\n                '[Apollo::Links::Errors]: Received authentication error, logging out',\n                graphQLErrors\n              );\n              dispatch(actions.global.logout());\n            }\n            return;\n          }\n\n          if (graphQLErrors && process.env.EXPO_ENV !== 'production') {\n            graphQLErrors.forEach((err) => {\n              const { message, locations, path, name, nodes } = err;\n              notify.error(`[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`);\n              console.error(\n                `[GraphQL error]: ${message}, ${JSON.stringify(\n                  locations\n                )}, ${path}, ${name}, ${nodes}`\n              );\n              // console.log(JSON.stringify(err));\n              console.log(operation);\n            });\n          }\n          if (networkError && process.env.EXPO_ENV !== 'production') {\n            notify.error(`[Network error]: ${networkError}`);\n          }\n        } finally {\n          forward?.(operation);\n        }\n      }),\n    [dispatch, notify, authenticated]\n  );\n}\n","import Appsignal from '@appsignal/javascript';\nimport Constants from 'expo-constants';\nimport ExpoManifest from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nconst AppSignalClient = new Appsignal({\n  key: ExpoManifest?.extra?.appSignalApiKey,\n  namespace: Platform.OS,\n  revision: Constants.expoConfig?.version,\n  ignoreErrors: [],\n});\n\nexport default AppSignalClient;\n","import Appsignal from '@appsignal/javascript';\nimport noop from 'lodash/noop';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport AppSignalClient from './AppSignalClient';\n\nexport interface IAppSignalDefaultTags {\n  platform: string;\n  currentDropzoneId: string;\n  currentUserId: string;\n  currentDropzone: string;\n  currentUser: string;\n}\nexport interface IAppSignalContext {\n  appSignal: Appsignal;\n  tags: { [key: string]: string } & IAppSignalDefaultTags;\n  setTags(tags: Partial<IAppSignalDefaultTags> | { [key: string]: string }): void;\n}\n\nexport const INITIAL_TAGS = {\n  platform: Platform.OS,\n  currentDropzoneId: 'Unknown',\n  currentDropzone: 'Unknown',\n  currentUserId: 'Unknown',\n  currentUser: 'Unknown',\n};\n\nexport const INITIAL_CONTEXT: IAppSignalContext = {\n  appSignal: AppSignalClient,\n  tags: INITIAL_TAGS,\n  setTags: noop,\n};\n\nconst AppSignalContext = React.createContext(INITIAL_CONTEXT);\n\nexport function useAppSignalContext() {\n  return React.useContext(AppSignalContext);\n}\n\nexport default AppSignalContext;\n","import * as React from 'react';\n\ninterface IDefaultErrorBoundaryProps {\n  fallback: React.ComponentType<{ error?: Error | null }>;\n  children: React.ReactNode;\n}\n\ninterface IDefaultErrorBoundaryState {\n  error?: Error;\n}\nexport default class ErrorBoundary extends React.Component<IDefaultErrorBoundaryProps, IDefaultErrorBoundaryState> {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  public componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n\n    console.error(error, errorInfo);\n  }\n\n  public render() {\n    const { fallback: Fallback, children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return <Fallback {...{ error }} />;\n    }\n    return children;\n  }\n}\n","import * as React from 'react';\nimport { reloadAsync } from 'expo-updates';\nimport { Button, Card, HelperText } from 'react-native-paper';\nimport { Platform, SafeAreaView, useWindowDimensions } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport LottieView from '../LottieView';\nimport twigBreakAnimation from '../../../assets/images/error-twig-break.json';\n\ninterface IErrorScreenProps {\n  error?: Error | null;\n}\nexport default function ErrorScreen(props: IErrorScreenProps) {\n  const { error } = props;\n  const [isDetailsVisible, setDetailsVisible] = React.useState(false);\n  const [reloading, setReloading] = React.useState(false);\n  const onToggleDetails = React.useCallback(() => setDetailsVisible(!isDetailsVisible), [isDetailsVisible]);\n\n  const onReloadApp = React.useCallback(async () => {\n    try {\n      setReloading(true);\n\n      if (Platform.OS === 'web') {\n        window.location.reload();\n      } else {\n        await reloadAsync();\n      }\n    } finally {\n      setReloading(false);\n    }\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <SafeAreaView\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}\n    >\n      <Card style={{ width: '100%', minHeight: 250, maxWidth: 450, marginHorizontal: 16 }}>\n        <Card.Title\n          title=\"That's a bug\"\n          subtitle=\"This error has been uploaded for review\"\n          titleStyle={{ textAlign: 'center' }}\n          subtitleStyle={{ textAlign: 'center' }}\n        />\n        <Card.Content style={{ alignItems: 'center' }}>\n          <LottieView\n            source={twigBreakAnimation}\n            autoPlay\n            loop={false}\n            style={{\n              height: Platform.OS === 'web' ? 300 : 150,\n              width: Platform.OS === 'web' ? 300 : 150\n            }}\n          />\n          {!error ? null : (\n            <>\n              <HelperText type=\"error\">{error?.message}</HelperText>\n              {isDetailsVisible ? (\n                <ScrollView style={{ maxHeight: 300 }}>\n                  <HelperText type=\"error\">{error.stack}</HelperText>\n                </ScrollView>\n              ) : null}\n            </>\n          )}\n        </Card.Content>\n        <Card.Actions style={{ justifyContent: 'space-between' }}>\n          <Button compact onPress={onToggleDetails}>\n            {isDetailsVisible ? 'Hide' : 'Show'} details\n          </Button>\n          <Button disabled={reloading} loading={reloading} compact mode=\"outlined\" onPress={onReloadApp}>\n            Reload\n          </Button>\n        </Card.Actions>\n      </Card>\n    </SafeAreaView>\n  );\n}\n","import * as React from 'react';\nimport { ErrorBoundary } from '@appsignal/react';\nimport { useAppSignalContext } from './AppSignalContext';\nimport DefaultErrorBoundary from './AppSignalFallbackBoundary';\nimport ErrorScreen from './ErrorScreen';\n\nfunction AppSignalBoundary(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { appSignal: instance, tags } = useAppSignalContext();\n\n  const errorBoundaryRef = React.useRef<ErrorBoundary>(null);\n  // Render children until we have an instance ready and use a\n  // default error boundary to catch it in the meantime and still\n  // display the fallback page\n  if (!instance) {\n    return <DefaultErrorBoundary fallback={ErrorScreen}>{children}</DefaultErrorBoundary>;\n  }\n  return (\n    <ErrorBoundary\n      {...{ instance, tags }}\n      fallback={() => (\n        <ErrorScreen error={errorBoundaryRef.current?.state?.error as Error | undefined} />\n      )}\n      ref={errorBoundaryRef}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport default AppSignalBoundary;\n","import { plugin as AppSignalCurrentPath } from '@appsignal/plugin-path-decorator';\nimport { plugin as AppSignalWindowEvents } from '@appsignal/plugin-window-events';\nimport * as React from 'react';\nimport type { JSSpan } from '@appsignal/types';\nimport isEqual from 'lodash/isEqual';\nimport AppSignalClient from './AppSignalClient';\nimport AppSignalBoundary from './AppSignalBoundary';\nimport AppSignalContext, {\n  IAppSignalContext,\n  IAppSignalDefaultTags,\n  INITIAL_CONTEXT,\n  INITIAL_TAGS,\n} from './AppSignalContext';\n\nexport default function AppSignalProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [tags, setTags] = React.useState<IAppSignalDefaultTags & { [key: string]: string }>(\n    INITIAL_CONTEXT.tags\n  );\n  React.useEffect(() => {\n    AppSignalClient.use(AppSignalWindowEvents);\n    AppSignalClient.use(AppSignalCurrentPath);\n  }, []);\n\n  const onUpdateTags = React.useCallback(\n    (newTags: Partial<IAppSignalDefaultTags>) => {\n      setTags({ ...tags, ...newTags });\n    },\n    [tags]\n  );\n\n  const value: IAppSignalContext = React.useMemo(\n    () => ({ appSignal: AppSignalClient, tags, setTags: onUpdateTags }),\n    [tags, onUpdateTags]\n  );\n\n  const onTagsChanged = React.useCallback(\n    (span: JSSpan) => {\n      if (isEqual(tags, INITIAL_TAGS)) {\n        return span;\n      }\n      return span.setTags(tags);\n    },\n    [tags]\n  );\n\n  React.useEffect(() => {\n    AppSignalClient?.addDecorator(onTagsChanged);\n  }, [onTagsChanged]);\n\n  return (\n    <AppSignalContext.Provider {...{ value }}>\n      <AppSignalBoundary>{children}</AppSignalBoundary>\n    </AppSignalContext.Provider>\n  );\n}\n","import * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { FieldError } from '../schema.d';\n\nexport type InferArguments<Func> = Func extends (arg: infer Argument) => unknown ? Argument : never;\ntype CRUDHook<Args extends object, Value extends object> = ((args?: Args) => Value) | ((args: Args) => Value);\ntype InferHookArguments<Hook> = Hook extends CRUDHook<infer Arguments, object> ? Arguments : never;\n\nexport const uninitializedHandler = async (args?: unknown) => undefined as unknown;\n\n// Streamline mutation results\nexport interface IMutationSuccessResponse<T> {\n  note: T;\n}\n\nexport interface IMutationFailureResponse {\n  fieldErrors?: FieldError[];\n  error?: string;\n}\n\nexport type TMutationResponse<MutationSuccessResponse extends { [key: string]: object }> =\n  | MutationSuccessResponse\n  | IMutationFailureResponse;\n\nconst DEBUG_PROVIDERS = false;\n/**\n * Create a context for the CRUD operations\n * to allow using it further down the tree without\n * remounting the same hooks\n *\n * Usage:\n * createCRUDContext<typeof useHook>({ onUpdate: noop, onDelete: noop })\n */\nexport default function createCRUDContext<\n  Args extends object,\n  Value extends object,\n  Hook extends CRUDHook<Args, Value>\n>(useHook: Hook, INITIAL_STATE: ReturnType<Hook>) {\n  const Context = React.createContext<ReturnType<Hook>>(INITIAL_STATE);\n\n  function Provider(props: React.PropsWithChildren<InferHookArguments<Hook>>) {\n    const { children, ...rest } = props;\n    const value = useHook(rest as InferHookArguments<Hook>) as ReturnType<Hook>;\n    const old = React.useRef<typeof value>(value);\n\n    // Leaving these in for debugging if needed later,\n    // just flip DEBUG_PROVIDERS to true\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        console.debug(useHook.name, 'mounted');\n        return () => {\n          console.debug(useHook.name, 'unmounted');\n        };\n      }\n      return undefined;\n    }, []);\n\n    // Print debugging information\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        if (JSON.stringify(value) !== JSON.stringify(old.current)) {\n          console.debug(useHook.name, '[CRUD Hook] Re-rendering because of state change: ', {\n            old: old.current,\n            new: value\n          });\n          console.debug(useHook.name, '[CRUD Hook] Previous: ', old.current);\n          console.debug(useHook.name, '[CRUD Hook] Current: ', value);\n          difference(Object.values(old.current), Object.values(value)).forEach((key) => {\n            console.debug('DIFF IN ', key);\n          });\n          old.current = value;\n        }\n      }\n    }, [value]);\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext() {\n    return React.useContext(Context);\n  }\n\n  return { Provider: React.memo(Provider, isEqual), useContext, Context, INITIAL_STATE };\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IDropzoneContext {\n  dropzone: ReturnType<typeof useDropzone>;\n  dialogs: {\n    aircraft: IDialogContextSubstate<Pick<IPlaneDialogProps, 'initial' | 'original'>>;\n    ticketType: IDialogContextSubstate<Pick<ITicketTypeDialog, 'initial' | 'original'>>;\n    ticketTypeAddon: IDialogContextSubstate<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>;\n    createUser: IDialogContextSubstate<Pick<ICreateGhostDialog, 'initial' | 'original'>>;\n  };\n}\n\nexport const INITIAL_CONTEXT: IDropzoneContext = {\n  dropzone: {\n    permissions: [],\n    update: uninitializedHandler as never,\n    called: false,\n    loading: false,\n    dropzone: null,\n    currentUser: undefined,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  },\n  dialogs: {\n    aircraft: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    createUser: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketType: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketTypeAddon: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const DropzoneContext = React.createContext<IDropzoneContext>(INITIAL_CONTEXT);\n\nexport function useDropzoneContext() {\n  return React.useContext(DropzoneContext);\n}\n","import * as React from 'react';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport { Platform } from 'react-native';\nimport { useAppSignalContext, INITIAL_TAGS } from './AppSignalContext';\n\nfunction AppSignalSessionTagProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n\n  // This can be undefined here because this bondary\n  // is rendered at the top of the app to catch errors\n  // outside of GraphQL as wele\n  const {\n    dropzone: { dropzone, currentUser: currentDropzoneUser },\n  } = useDropzoneContext();\n  const { currentRouteName, currentUser, currentDropzoneId } = useAppSelector(\n    (state) => state.global\n  );\n  const { tags, setTags } = useAppSignalContext();\n\n  const sessionTags: { [key: string]: string } = React.useMemo(\n    () => ({\n      ...INITIAL_TAGS,\n      currentDropzoneId: (dropzone?.id || currentDropzoneId || 'Unknown')?.toString(),\n      currentDropzone: dropzone?.name || 'Unknown',\n      currentRouteName: currentRouteName || 'Unknown',\n      currentUser: (currentDropzoneUser?.id || currentUser?.id || 'Unknown')?.toString(),\n      platform: Platform.OS as string,\n    }),\n    [\n      currentDropzoneId,\n      currentDropzoneUser?.id,\n      currentRouteName,\n      currentUser?.id,\n      dropzone?.id,\n      dropzone?.name,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Update tags only if they're different\n    const currentSessionTags = pick(tags, Object.keys(sessionTags));\n    if (!isEqual(currentSessionTags, sessionTags)) {\n      // Prevent this component from resetting tags when the GraphQL store\n      // gets wiped on an error:\n      if (isEqual(tags, INITIAL_TAGS) || !isEqual({ ...tags, ...sessionTags }, INITIAL_TAGS)) {\n        setTags(sessionTags);\n      }\n    }\n  }, [sessionTags, setTags, tags]);\n\n  return children as JSX.Element;\n}\n\nexport default AppSignalSessionTagProvider;\n","import { ApolloLink, FetchResult, NextLink, Operation, ServerError } from '@apollo/client';\nimport { ErrorResponse, onError as createErrorLink } from '@apollo/client/link/error';\nimport { Observable } from 'zen-observable-ts';\nimport AppSignal from '@appsignal/javascript';\nimport type { Breadcrumb } from '@appsignal/types';\nimport { GraphQLError, OperationDefinitionNode, print } from 'graphql';\nimport { omit } from 'lodash';\n\nexport interface IAppSignalLinkOptions {\n  breadcrumbs: {\n    includeQuery?: boolean;\n    includeResponse?: boolean;\n    includeVariables?: boolean;\n  };\n  excludeOperation?(operation: Operation): boolean;\n  excludeError?(error: GraphQLError): boolean;\n  ignore?(errors: ErrorResponse): boolean;\n}\n\nconst DEFAULT_OPTIONS: IAppSignalLinkOptions = {\n  breadcrumbs: {\n    includeQuery: false,\n    includeResponse: false,\n    includeVariables: false\n  },\n  excludeOperation: () => false,\n  excludeError: () => false\n};\n\nfunction isServerError(error: unknown): error is ServerError {\n  return (\n    typeof error === 'object' && error !== null && 'response' in error && 'result' in error && 'statusCode' in error\n  );\n}\n\nfunction getDefinition(operation: Operation): OperationDefinitionNode {\n  return operation.query.definitions.find((q) => q.kind === 'OperationDefinition') as OperationDefinitionNode;\n}\n\nfunction createBreadCrumb(operation: Operation): Breadcrumb {\n  const definition = getDefinition(operation);\n  const operationName = definition.name?.value;\n  return {\n    message: operationName,\n    category: `graphql.${definition.operation}`,\n    action: operation.operationName,\n    timestamp: Math.floor(new Date().getTime() / 1000),\n    metadata: {}\n  };\n}\n\nfunction createAppSignalErrorLink(client: AppSignal, options: IAppSignalLinkOptions = DEFAULT_OPTIONS): ApolloLink {\n  return createErrorLink((errors) => {\n    const { graphQLErrors, operation, response } = errors;\n    if (options?.ignore?.(errors)) {\n      return;\n    }\n\n    if (graphQLErrors) {\n      const filteredErrors = graphQLErrors.filter((err) => !options?.excludeError?.(err));\n\n      // Rethrow errors not in the whitelist\n      if (filteredErrors.length) {\n        const breadcrumb = createBreadCrumb(operation);\n        breadcrumb.metadata ??= {};\n        const definition = getDefinition(operation);\n        // Always include query, variables and response on errors\n        const query = definition.loc?.source?.body ?? print(definition);\n        const { variables } = operation;\n        breadcrumb.metadata.query = query;\n        breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n        if (isServerError(response)) {\n          const { result } = response;\n\n          breadcrumb.metadata.statusCode = response?.response?.status;\n          breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n        }\n\n        client?.addBreadcrumb(breadcrumb);\n\n        try {\n          client?.sendError(new Error(filteredErrors.map((err) => err.message).join(', ')));\n        } catch (e) {\n          console.debug('Error', e);\n        }\n      } else {\n        // @ts-ignore\n        response.errors = null;\n      }\n    }\n  });\n}\nexport class AppSignalBreadcrumbLink extends ApolloLink {\n  private readonly options: IAppSignalLinkOptions;\n\n  private readonly client?: AppSignal;\n\n  constructor(client: AppSignal, options: IAppSignalLinkOptions) {\n    super();\n    this.client = client;\n    this.options = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  }\n\n  request(operation: Operation, forward: NextLink): Observable<FetchResult> | null {\n    const { options } = this;\n\n    // If this operation should be excluded, continue\n    if (options.excludeOperation?.(operation) ?? false) {\n      return forward?.(operation);\n    }\n\n    const breadcrumb = createBreadCrumb(operation);\n\n    // While this could be done more simplistically by simply subscribing,\n    // wrapping the observer in our own observer ensures we get the results\n    // before they are passed along to other observers. This guarantees we\n    // get to run our instrumentation before others observers potentially\n    // throw and thus flush the results to Sentry.\n    return new Observable<FetchResult>((originalObserver) => {\n      const subscription = forward?.(operation).subscribe({\n        next: (result) => {\n          breadcrumb.metadata ??= {};\n          if (options?.breadcrumbs?.includeResponse) {\n            // We must have a breadcrumb if attachBreadcrumbs was set\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          if (options?.breadcrumbs?.includeQuery) {\n            const definition = getDefinition(operation);\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.query = definition.loc?.source?.body ?? print(definition);\n          }\n\n          if (options?.breadcrumbs?.includeVariables) {\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.variables = JSON.stringify(omit(operation.variables || {}, ['password']), null, 2);\n          }\n\n          originalObserver.next(result);\n        },\n        complete: () => {\n          this.client?.addBreadcrumb(breadcrumb);\n          originalObserver.complete();\n        },\n        error: (error) => {\n          breadcrumb.metadata ??= {};\n          const definition = getDefinition(operation);\n          // Always include query, variables and response on errors\n          const query = definition.loc?.source?.body ?? print(definition);\n          const { variables } = operation;\n          breadcrumb.metadata.query = query;\n          breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n          if (isServerError(error)) {\n            const { result, response } = error;\n\n            breadcrumb.metadata.statusCode = response?.status;\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          this.client?.addBreadcrumb(breadcrumb);\n\n          originalObserver.error(error);\n        }\n      });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n\nexport default function createAppSignalLink(client: AppSignal, options: IAppSignalLinkOptions): ApolloLink {\n  return ApolloLink.from([new AppSignalBreadcrumbLink(client, options), createAppSignalErrorLink(client, options)]);\n}\n","import * as React from 'react';\nimport { createAppSignalLink, useAppSignal } from 'app/components/app_signal';\n\nconst ERROR_CODE_WHITELIST = ['INSUFFICIENT_PERMISSIONS'];\n\nexport function useAppSignalLink() {\n  const { appSignal } = useAppSignal();\n  return React.useMemo(\n    () =>\n      createAppSignalLink(appSignal, {\n        breadcrumbs: {\n          includeQuery: true,\n          includeVariables: true,\n          includeResponse: false,\n        },\n        ignore: ({ graphQLErrors }) =>\n          graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR') || false,\n        excludeError: (err) => ERROR_CODE_WHITELIST.includes(err.extensions?.code as string),\n      }),\n    [appSignal]\n  );\n}\n","import { ApolloLink } from '@apollo/client';\nimport React from 'react';\nimport { useAuthenticationLink } from './authentication';\nimport { useErrorLink, defaultErrorLink } from './errors';\nimport { createHttpLink, httpLink } from './http';\nimport { useAppSignalLink } from './appSignal';\n\nexport const defaultLink = ApolloLink.from([defaultErrorLink, httpLink]);\nexport function useLink() {\n  const authLink = useAuthenticationLink();\n  const errorLink = useErrorLink();\n  const appSignalLink = useAppSignalLink();\n  const httpWebsocketsLink = React.useMemo(() => createHttpLink(), []);\n\n  const links = React.useMemo(\n    () => [authLink, errorLink, appSignalLink, httpWebsocketsLink].filter(Boolean) as ApolloLink[],\n    [appSignalLink, authLink, errorLink, httpWebsocketsLink]\n  );\n  return React.useMemo(() => ApolloLink.from(links), [links]);\n}\n","import { setContext } from '@apollo/client/link/context';\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport isEmpty from 'lodash/isEmpty';\n\nexport function useAuthenticationLink() {\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const authHeaders = React.useMemo(() => {\n    if (!credentials?.accessToken) return {};\n    return {\n      Authorization: `Bearer ${credentials.accessToken}`,\n      'access-token': credentials.accessToken,\n      'token-type': credentials.tokenType,\n      ...credentials,\n    };\n  }, [credentials]);\n\n  console.debug('[Apollo::Link::Authentication]: Current: ', { authHeaders, credentials });\n  return React.useMemo(() => {\n    if (isEmpty(authHeaders)) {\n      console.debug('[Apollo::Link::Authentication]: No headers to set', authHeaders);\n      return undefined;\n    }\n\n    return setContext((_, { headers }) => {\n      console.debug('[Apollo::Link::Authentication]: Headers: ', {\n        ...headers,\n        ...authHeaders,\n      });\n      return {\n        authHeaders,\n        headers: {\n          ...headers,\n          ...authHeaders,\n        },\n      };\n    });\n  }, [authHeaders]);\n}\n","import { InMemoryCache } from '@apollo/client';\nimport { relayStylePagination } from '@apollo/client/utilities';\n\nexport const cache = new InMemoryCache({\n  typePolicies: {\n    Event: relayStylePagination(),\n    DropzoneUsers: relayStylePagination(),\n    Loads: relayStylePagination(),\n  },\n});\n","import { ApolloClient } from '@apollo/client';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { defaultLink, useLink } from './links';\nimport { cache } from './cache';\n\nconst client = new ApolloClient({\n  link: defaultLink,\n  cache,\n});\n\nexport default function useApolloClient() {\n  const link = useLink();\n  const dispatch = useAppDispatch();\n  const { credentials, authenticated } = useAppSelector((root) => root?.global);\n\n  React.useEffect(() => {\n    console.debug('[Apollo::Link]: Replacing Apollo Client Link');\n    // abortController.abort();\n    const isAuthenticated = !!credentials?.accessToken;\n    const authStateChanged = isAuthenticated !== authenticated;\n    if (authStateChanged) {\n      console.debug('[Apollo::Link]: Authentication state changed to ', isAuthenticated);\n      dispatch(actions.global.setAuthenticated(!!credentials?.accessToken));\n    }\n    console.debug('[Apollo::Link]: Replacing Apollo Client Link');\n    client.setLink(link);\n\n    if (authStateChanged) {\n      console.debug('[Apollo::Link]: Refetching queries after authentication state change');\n      // client.reFetchObservableQueries();\n    }\n  }, [authenticated, credentials?.accessToken, dispatch, link]);\n\n  return client;\n}\n","import { ApolloProvider } from '@apollo/client/react';\nimport * as React from 'react';\nimport useApolloClient from './client/client';\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const client = useApolloClient();\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function EntrypointWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport const RoleEssentialsFragmentDoc = gql`\n    fragment roleEssentials on UserRole {\n  id\n  name\n  dropzoneId\n}\n    `;\nexport const LicenseEssentialsFragmentDoc = gql`\n    fragment licenseEssentials on License {\n  id\n  name\n}\n    `;\nexport const UserEssentialsFragmentDoc = gql`\n    fragment userEssentials on User {\n  id\n  name\n  nickname\n  phone\n  email\n  exitWeight\n  moderationRole\n  image\n  apfNumber\n}\n    `;\nexport const DropzoneUserEssentialsFragmentDoc = gql`\n    fragment dropzoneUserEssentials on DropzoneUser {\n  id\n  walletId\n  expiresAt\n  hasCredits\n  hasMembership\n  hasLicense\n  hasExitWeight\n  role {\n    ...roleEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n  user {\n    ...userEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}\n${UserEssentialsFragmentDoc}`;\nexport const ActivityEssentialsFragmentDoc = gql`\n    fragment activityEssentials on Event {\n  action\n  id\n  level\n  message\n  details\n  createdAt\n  createdBy {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  walletId\n  lat\n  lng\n  name\n  status: state\n  primaryColor\n  secondaryColor\n  banner\n  isCreditSystemEnabled\n  createdAt\n  settings {\n    allowManifestBypass\n    allowNegativeCredits\n    allowDoubleManifesting\n    requireCredits\n    requireLicense\n    requireMembership\n    requireRigInspection\n    requireEquipment\n    requireReserveInDate\n  }\n}\n    `;\nexport const LoadEssentialsFragmentDoc = gql`\n    fragment loadEssentials on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n}\n    `;\nexport const TicketTypeEssentialsFragmentDoc = gql`\n    fragment ticketTypeEssentials on TicketType {\n  id\n  name\n  altitude\n  cost\n  isTandem\n  allowManifestingSelf\n}\n    `;\nexport const TicketTypeAddonEssentialsFragmentDoc = gql`\n    fragment ticketTypeAddonEssentials on Extra {\n  id\n  name\n  cost\n}\n    `;\nexport const TicketTypeDetailsFragmentDoc = gql`\n    fragment ticketTypeDetails on TicketType {\n  ...ticketTypeEssentials\n  extras {\n    ...ticketTypeAddonEssentials\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${TicketTypeAddonEssentialsFragmentDoc}`;\nexport const JumpTypeEssentialsFragmentDoc = gql`\n    fragment jumpTypeEssentials on JumpType {\n  id\n  name\n}\n    `;\nexport const SlotEssentialsFragmentDoc = gql`\n    fragment slotEssentials on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  groupNumber\n  cost\n  ticketType {\n    ...ticketTypeDetails\n  }\n  jumpType {\n    ...jumpTypeEssentials\n  }\n  extras {\n    id\n    name\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}\n${JumpTypeEssentialsFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n  isPublic\n  owner {\n    id\n    name\n  }\n  dropzone {\n    id\n  }\n}\n    `;\nexport const PlaneEssentialsFragmentDoc = gql`\n    fragment planeEssentials on Plane {\n  id\n  minSlots\n  maxSlots\n  name\n  registration\n}\n    `;\nexport const ActivityDetailsFragmentDoc = gql`\n    fragment activityDetails on Event {\n  ...activityEssentials\n  resource {\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n    ... on DropzoneUser {\n      ...dropzoneUserEssentials\n    }\n    ... on Load {\n      ...loadEssentials\n    }\n    ... on Slot {\n      ...slotEssentials\n    }\n    ... on Rig {\n      ...rigEssentials\n    }\n    ... on Plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}`;\nexport const FederationEssentialsFragmentDoc = gql`\n    fragment federationEssentials on Federation {\n  id\n  name\n  slug\n}\n    `;\nexport const LicenseDetailsFragmentDoc = gql`\n    fragment licenseDetails on License {\n  ...licenseEssentials\n  federation {\n    ...federationEssentials\n  }\n}\n    ${LicenseEssentialsFragmentDoc}\n${FederationEssentialsFragmentDoc}`;\nexport const UserFederationEssentialsFragmentDoc = gql`\n    fragment userFederationEssentials on UserFederation {\n  id\n  uid\n  federation {\n    ...federationEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}`;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  owner {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const UserDetailedFragmentDoc = gql`\n    fragment userDetailed on User {\n  ...userEssentials\n  userFederations {\n    ...userFederationEssentials\n  }\n  rigs {\n    ...userRigDetailed\n  }\n}\n    ${UserEssentialsFragmentDoc}\n${UserFederationEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const DropzoneUserDetailsFragmentDoc = gql`\n    fragment dropzoneUserDetails on DropzoneUser {\n  ...dropzoneUserEssentials\n  credits\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...userDetailed\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${UserDetailedFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const RigInspectionEssentialsFragmentDoc = gql`\n    fragment rigInspectionEssentials on RigInspection {\n  id\n  isOk\n  definition\n  inspectedBy {\n    ...dropzoneUserEssentials\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TransactionEssentialsFragmentDoc = gql`\n    fragment transactionEssentials on Transaction {\n  id\n  transactionType\n  amount\n  status\n  createdAt\n  message\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const ReceiptEssentialsFragmentDoc = gql`\n    fragment receiptEssentials on Receipt {\n  id\n  amountCents\n  createdAt\n  updatedAt\n  transactions {\n    ...transactionEssentials\n  }\n}\n    ${TransactionEssentialsFragmentDoc}`;\nexport const OrderEssentialsFragmentDoc = gql`\n    fragment orderEssentials on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  createdAt\n  buyer {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      id\n      name\n      banner\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    ...receiptEssentials\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${ReceiptEssentialsFragmentDoc}`;\nexport const SlotDetailsFragmentDoc = gql`\n    fragment slotDetails on Slot {\n  ...slotEssentials\n  rig {\n    ...rigEssentials\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n  }\n}\n    ${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}`;\nexport const UserSlotDetailsFragmentDoc = gql`\n    fragment userSlotDetails on Slot {\n  ...slotDetails\n  load {\n    ...loadEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${LoadEssentialsFragmentDoc}`;\nexport const DropzoneUserProfileFragmentDoc = gql`\n    fragment dropzoneUserProfile on DropzoneUser {\n  ...dropzoneUserDetails\n  permissions\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  slots {\n    edges {\n      node {\n        ...userSlotDetails\n      }\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${UserSlotDetailsFragmentDoc}`;\nexport const DropzoneStatisticsEssentialsFragmentDoc = gql`\n    fragment dropzoneStatisticsEssentials on Statistics {\n  id\n  activeUserCount\n  totalUserCount\n  slotsByJumpType(timeRange: $timeRange) {\n    name\n    count\n  }\n  slotsCount(timeRange: $timeRange)\n  cancelledLoadsCount(timeRange: $timeRange)\n  dzsoCount\n  finalizedLoadsCount(timeRange: $timeRange)\n  gcaCount\n  pilotCount\n  inactiveUserCount\n  loadsCount(timeRange: $timeRange)\n  loadCountByDay(timeRange: $timeRange) {\n    date\n    count\n  }\n  revenueCentsCount(timeRange: $timeRange)\n  rigInspectorCount\n}\n    `;\nexport const DropzoneStatisticsFragmentDoc = gql`\n    fragment dropzoneStatistics on Dropzone {\n  ...dropzoneEssentials\n  statistics {\n    ...dropzoneStatisticsEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${DropzoneStatisticsEssentialsFragmentDoc}`;\nexport const WeatherConditionEssentialsFragmentDoc = gql`\n    fragment weatherConditionEssentials on WeatherCondition {\n  id\n  jumpRun\n  temperature\n  offsetDirection\n  offsetMiles\n  createdAt\n  exitSpotMiles\n  winds {\n    temperature\n    altitude\n    speed\n    direction\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  currentConditions {\n    ...weatherConditionEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${WeatherConditionEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  walletId\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    ...roleEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const CurrentUserFragmentDoc = gql`\n    fragment currentUser on User {\n  ...userDetailed\n  dropzoneUsers {\n    ...dropzoneUserDetails\n  }\n  pushToken\n}\n    ${UserDetailedFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}`;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...currentUser\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${CurrentUserFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const TicketTypeExtraEssentialsFragmentDoc = gql`\n    fragment ticketTypeExtraEssentials on Extra {\n  id\n  name\n  createdAt\n  cost\n}\n    `;\nexport const TicketTypeExtraDetailedFragmentDoc = gql`\n    fragment ticketTypeExtraDetailed on Extra {\n  ...ticketTypeExtraEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeExtraEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const MasterLogUserFragmentDoc = gql`\n    fragment masterLogUser on MasterLogUser {\n  id\n  email\n  name\n  nickname\n  phone\n}\n    `;\nexport const MasterLogAircraftFragmentDoc = gql`\n    fragment masterLogAircraft on MasterLogAircraft {\n  id\n  name\n  registration\n}\n    `;\nexport const MasterLogSlotFragmentDoc = gql`\n    fragment masterLogSlot on MasterLogSlot {\n  id\n  altitude\n  jumpType\n  name\n}\n    `;\nexport const MasterLogLoadFragmentDoc = gql`\n    fragment masterLogLoad on MasterLogLoad {\n  id\n  loadNumber\n  dispatchAt\n  aircraft {\n    ...masterLogAircraft\n  }\n  gca {\n    ...masterLogUser\n  }\n  pilot {\n    ...masterLogUser\n  }\n  loadMaster {\n    ...masterLogUser\n  }\n  slots {\n    ...masterLogSlot\n  }\n}\n    ${MasterLogAircraftFragmentDoc}\n${MasterLogUserFragmentDoc}\n${MasterLogSlotFragmentDoc}`;\nexport const LocationFragmentDoc = gql`\n    fragment location on GeocodedLocation {\n  id\n  lat\n  lng\n  formattedString\n}\n    `;\nexport const MasterLogEntryFragmentDoc = gql`\n    fragment masterLogEntry on MasterLogEntry {\n  id\n  date\n  notes\n  downloadUrl\n  dzso {\n    ...masterLogUser\n  }\n  loads {\n    ...masterLogLoad\n  }\n  location {\n    ...location\n  }\n}\n    ${MasterLogUserFragmentDoc}\n${MasterLogLoadFragmentDoc}\n${LocationFragmentDoc}`;\nexport const RigInspectionDetailedFragmentDoc = gql`\n    fragment rigInspectionDetailed on RigInspection {\n  ...rigInspectionEssentials\n  rig {\n    ...userRigDetailed\n  }\n}\n    ${RigInspectionEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const RigInspectionMutationEssentialsFragmentDoc = gql`\n    fragment rigInspectionMutationEssentials on RigInspection {\n  ...rigInspectionDetailed\n  formTemplate {\n    id\n    definition\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n    rigInspections {\n      ...rigInspectionEssentials\n    }\n  }\n}\n    ${RigInspectionDetailedFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\nexport const RoleDetailedFragmentDoc = gql`\n    fragment roleDetailed on UserRole {\n  ...roleEssentials\n  permissions\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const LoadDetailsFragmentDoc = gql`\n    fragment loadDetails on Load {\n  ...loadEssentials\n  plane {\n    ...planeEssentials\n  }\n  gca {\n    ...dropzoneUserEssentials\n  }\n  pilot {\n    ...dropzoneUserEssentials\n  }\n  loadMaster {\n    ...dropzoneUserEssentials\n  }\n  slots {\n    ...slotDetails\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${SlotDetailsFragmentDoc}`;\nexport const SlotExhaustiveFragmentDoc = gql`\n    fragment slotExhaustive on Slot {\n  ...slotDetails\n  dropzoneUser {\n    ...dropzoneUserDetails\n  }\n  load {\n    ...loadDetails\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}\n${LoadDetailsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TicketTypeAddonDetailsFragmentDoc = gql`\n    fragment ticketTypeAddonDetails on Extra {\n  ...ticketTypeAddonEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeAddonEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const ArchivePlaneDocument = gql`\n    mutation ArchivePlane($id: Int!) {\n  deletePlane(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type ArchivePlaneMutationFn = Apollo.MutationFunction<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\n\n/**\n * __useArchivePlaneMutation__\n *\n * To run a mutation, you first call `useArchivePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchivePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archivePlaneMutation, { data, loading, error }] = useArchivePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchivePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>(ArchivePlaneDocument, options);\n      }\nexport type ArchivePlaneMutationHookResult = ReturnType<typeof useArchivePlaneMutation>;\nexport type ArchivePlaneMutationResult = Apollo.MutationResult<Operation.ArchivePlaneMutation>;\nexport type ArchivePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\nexport const ArchiveRigDocument = gql`\n    mutation ArchiveRig($id: Int!) {\n  archiveRig(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    rig {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport type ArchiveRigMutationFn = Apollo.MutationFunction<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\n\n/**\n * __useArchiveRigMutation__\n *\n * To run a mutation, you first call `useArchiveRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveRigMutation, { data, loading, error }] = useArchiveRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>(ArchiveRigDocument, options);\n      }\nexport type ArchiveRigMutationHookResult = ReturnType<typeof useArchiveRigMutation>;\nexport type ArchiveRigMutationResult = Apollo.MutationResult<Operation.ArchiveRigMutation>;\nexport type ArchiveRigMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\nexport const ArchiveTicketTypeDocument = gql`\n    mutation ArchiveTicketType($id: Int!) {\n  archiveTicketType(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    ticketType {\n      ...ticketTypeEssentials\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\nexport type ArchiveTicketTypeMutationFn = Apollo.MutationFunction<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\n\n/**\n * __useArchiveTicketTypeMutation__\n *\n * To run a mutation, you first call `useArchiveTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveTicketTypeMutation, { data, loading, error }] = useArchiveTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>(ArchiveTicketTypeDocument, options);\n      }\nexport type ArchiveTicketTypeMutationHookResult = ReturnType<typeof useArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationResult = Apollo.MutationResult<Operation.ArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\nexport const ArchiveUserDocument = gql`\n    mutation ArchiveUser($id: Int!) {\n  deleteUser(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserEssentials\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type ArchiveUserMutationFn = Apollo.MutationFunction<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\n\n/**\n * __useArchiveUserMutation__\n *\n * To run a mutation, you first call `useArchiveUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserMutation, { data, loading, error }] = useArchiveUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>(ArchiveUserDocument, options);\n      }\nexport type ArchiveUserMutationHookResult = ReturnType<typeof useArchiveUserMutation>;\nexport type ArchiveUserMutationResult = Apollo.MutationResult<Operation.ArchiveUserMutation>;\nexport type ArchiveUserMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateAircraftDocument = gql`\n    mutation CreateAircraft($attributes: PlaneInput!) {\n  createPlane(input: {attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        planes {\n          ...planeEssentials\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type CreateAircraftMutationFn = Apollo.MutationFunction<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\n\n/**\n * __useCreateAircraftMutation__\n *\n * To run a mutation, you first call `useCreateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createAircraftMutation, { data, loading, error }] = useCreateAircraftMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>(CreateAircraftDocument, options);\n      }\nexport type CreateAircraftMutationHookResult = ReturnType<typeof useCreateAircraftMutation>;\nexport type CreateAircraftMutationResult = Apollo.MutationResult<Operation.CreateAircraftMutation>;\nexport type CreateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\nexport const CreateDropzoneDocument = gql`\n    mutation CreateDropzone($name: String!, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String) {\n  createDropzone(\n    input: {attributes: {name: $name, banner: $banner, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, lat: $lat, lng: $lng}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type CreateDropzoneMutationFn = Apollo.MutationFunction<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\n\n/**\n * __useCreateDropzoneMutation__\n *\n * To run a mutation, you first call `useCreateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createDropzoneMutation, { data, loading, error }] = useCreateDropzoneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *   },\n * });\n */\nexport function useCreateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>(CreateDropzoneDocument, options);\n      }\nexport type CreateDropzoneMutationHookResult = ReturnType<typeof useCreateDropzoneMutation>;\nexport type CreateDropzoneMutationResult = Apollo.MutationResult<Operation.CreateDropzoneMutation>;\nexport type CreateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\nexport const CreateLoadDocument = gql`\n    mutation CreateLoad($name: String, $pilot: ID, $gca: ID, $maxSlots: Int, $plane: ID, $state: LoadState) {\n  createLoad(\n    input: {attributes: {name: $name, pilot: $pilot, gca: $gca, maxSlots: $maxSlots, plane: $plane, state: $state}}\n  ) {\n    load {\n      ...loadDetails\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type CreateLoadMutationFn = Apollo.MutationFunction<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\n\n/**\n * __useCreateLoadMutation__\n *\n * To run a mutation, you first call `useCreateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createLoadMutation, { data, loading, error }] = useCreateLoadMutation({\n *   variables: {\n *      name: // value for 'name'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      maxSlots: // value for 'maxSlots'\n *      plane: // value for 'plane'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useCreateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>(CreateLoadDocument, options);\n      }\nexport type CreateLoadMutationHookResult = ReturnType<typeof useCreateLoadMutation>;\nexport type CreateLoadMutationResult = Apollo.MutationResult<Operation.CreateLoadMutation>;\nexport type CreateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: ID!, $seller: ID!, $dropzone: ID!, $title: String, $amount: Float!) {\n  createOrder(\n    input: {attributes: {dropzone: $dropzone, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...orderEssentials\n    }\n  }\n}\n    ${OrderEssentialsFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzone: // value for 'dropzone'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const CreateRigInspectionDocument = gql`\n    mutation CreateRigInspection($dropzone: ID, $rig: ID, $isOk: Boolean, $definition: String) {\n  createRigInspection(\n    input: {attributes: {dropzone: $dropzone, rig: $rig, isOk: $isOk, definition: $definition}}\n  ) {\n    rigInspection {\n      ...rigInspectionMutationEssentials\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${RigInspectionMutationEssentialsFragmentDoc}`;\nexport type CreateRigInspectionMutationFn = Apollo.MutationFunction<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\n\n/**\n * __useCreateRigInspectionMutation__\n *\n * To run a mutation, you first call `useCreateRigInspectionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigInspectionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigInspectionMutation, { data, loading, error }] = useCreateRigInspectionMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      rig: // value for 'rig'\n *      isOk: // value for 'isOk'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useCreateRigInspectionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>(CreateRigInspectionDocument, options);\n      }\nexport type CreateRigInspectionMutationHookResult = ReturnType<typeof useCreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationResult = Apollo.MutationResult<Operation.CreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\nexport const CreateTicketAddonDocument = gql`\n    mutation CreateTicketAddon($attributes: ExtraInput!) {\n  createExtra(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    extra {\n      ...ticketTypeAddonDetails\n      dropzone {\n        id\n        extras {\n          ...ticketTypeAddonDetails\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeAddonDetailsFragmentDoc}`;\nexport type CreateTicketAddonMutationFn = Apollo.MutationFunction<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\n\n/**\n * __useCreateTicketAddonMutation__\n *\n * To run a mutation, you first call `useCreateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketAddonMutation, { data, loading, error }] = useCreateTicketAddonMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>(CreateTicketAddonDocument, options);\n      }\nexport type CreateTicketAddonMutationHookResult = ReturnType<typeof useCreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationResult = Apollo.MutationResult<Operation.CreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\nexport const CreateTicketTypeDocument = gql`\n    mutation CreateTicketType($attributes: TicketTypeInput!) {\n  createTicketType(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        id\n        ticketTypes {\n          id\n          name\n          altitude\n          cost\n          allowManifestingSelf\n          extras {\n            id\n            name\n            cost\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type CreateTicketTypeMutationFn = Apollo.MutationFunction<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\n\n/**\n * __useCreateTicketTypeMutation__\n *\n * To run a mutation, you first call `useCreateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketTypeMutation, { data, loading, error }] = useCreateTicketTypeMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>(CreateTicketTypeDocument, options);\n      }\nexport type CreateTicketTypeMutationHookResult = ReturnType<typeof useCreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationResult = Apollo.MutationResult<Operation.CreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\nexport const CreateGhostDocument = gql`\n    mutation CreateGhost($name: String!, $phone: String, $email: String!, $federationNumber: String, $role: Int!, $license: Int, $dropzone: Int!, $exitWeight: Float!) {\n  createGhost(\n    input: {attributes: {role: $role, federationNumber: $federationNumber, name: $name, phone: $phone, email: $email, dropzone: $dropzone, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    user {\n      ...userDetailed\n    }\n  }\n}\n    ${UserDetailedFragmentDoc}`;\nexport type CreateGhostMutationFn = Apollo.MutationFunction<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\n\n/**\n * __useCreateGhostMutation__\n *\n * To run a mutation, you first call `useCreateGhostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateGhostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createGhostMutation, { data, loading, error }] = useCreateGhostMutation({\n *   variables: {\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      federationNumber: // value for 'federationNumber'\n *      role: // value for 'role'\n *      license: // value for 'license'\n *      dropzone: // value for 'dropzone'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useCreateGhostMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>(CreateGhostDocument, options);\n      }\nexport type CreateGhostMutationHookResult = ReturnType<typeof useCreateGhostMutation>;\nexport type CreateGhostMutationResult = Apollo.MutationResult<Operation.CreateGhostMutation>;\nexport type CreateGhostMutationOptions = Apollo.BaseMutationOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\nexport const DeleteSlotDocument = gql`\n    mutation DeleteSlot($id: Int!) {\n  deleteSlot(input: {id: $id}) {\n    slot {\n      ...slotExhaustive\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type DeleteSlotMutationFn = Apollo.MutationFunction<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\n\n/**\n * __useDeleteSlotMutation__\n *\n * To run a mutation, you first call `useDeleteSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteSlotMutation, { data, loading, error }] = useDeleteSlotMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>(DeleteSlotDocument, options);\n      }\nexport type DeleteSlotMutationHookResult = ReturnType<typeof useDeleteSlotMutation>;\nexport type DeleteSlotMutationResult = Apollo.MutationResult<Operation.DeleteSlotMutation>;\nexport type DeleteSlotMutationOptions = Apollo.BaseMutationOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const GrantPermissionDocument = gql`\n    mutation GrantPermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  grantPermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type GrantPermissionMutationFn = Apollo.MutationFunction<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\n\n/**\n * __useGrantPermissionMutation__\n *\n * To run a mutation, you first call `useGrantPermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useGrantPermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [grantPermissionMutation, { data, loading, error }] = useGrantPermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useGrantPermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>(GrantPermissionDocument, options);\n      }\nexport type GrantPermissionMutationHookResult = ReturnType<typeof useGrantPermissionMutation>;\nexport type GrantPermissionMutationResult = Apollo.MutationResult<Operation.GrantPermissionMutation>;\nexport type GrantPermissionMutationOptions = Apollo.BaseMutationOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federation: ID!, $uid: String, $license: ID) {\n  joinFederation(\n    input: {attributes: {federation: $federation, uid: $uid, license: $license}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      ...userFederationEssentials\n    }\n  }\n}\n    ${UserFederationEssentialsFragmentDoc}`;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federation: // value for 'federation'\n *      uid: // value for 'uid'\n *      license: // value for 'license'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  userLogin(email: $email, password: $password) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<Operation.LoginMutation, Operation.LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginMutation, Operation.LoginMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginMutation, Operation.LoginMutationVariables>(LoginDocument, options);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<Operation.LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<Operation.LoginMutation, Operation.LoginMutationVariables>;\nexport const LoginWithAppleDocument = gql`\n    mutation LoginWithApple($token: String!, $userIdentity: String!, $pushToken: String) {\n  loginWithApple(\n    token: $token\n    userIdentity: $userIdentity\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithAppleMutationFn = Apollo.MutationFunction<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\n\n/**\n * __useLoginWithAppleMutation__\n *\n * To run a mutation, you first call `useLoginWithAppleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithAppleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithAppleMutation, { data, loading, error }] = useLoginWithAppleMutation({\n *   variables: {\n *      token: // value for 'token'\n *      userIdentity: // value for 'userIdentity'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithAppleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>(LoginWithAppleDocument, options);\n      }\nexport type LoginWithAppleMutationHookResult = ReturnType<typeof useLoginWithAppleMutation>;\nexport type LoginWithAppleMutationResult = Apollo.MutationResult<Operation.LoginWithAppleMutation>;\nexport type LoginWithAppleMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\nexport const LoginWithFacebookDocument = gql`\n    mutation LoginWithFacebook($token: String!, $pushToken: String) {\n  loginWithFacebook(\n    token: $token\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithFacebookMutationFn = Apollo.MutationFunction<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\n\n/**\n * __useLoginWithFacebookMutation__\n *\n * To run a mutation, you first call `useLoginWithFacebookMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithFacebookMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithFacebookMutation, { data, loading, error }] = useLoginWithFacebookMutation({\n *   variables: {\n *      token: // value for 'token'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithFacebookMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>(LoginWithFacebookDocument, options);\n      }\nexport type LoginWithFacebookMutationHookResult = ReturnType<typeof useLoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationResult = Apollo.MutationResult<Operation.LoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\nexport const ManifestGroupDocument = gql`\n    mutation ManifestGroup($jumpType: ID, $extras: [ID!], $load: ID, $ticketType: ID, $groupNumber: Int, $userGroup: [SlotUser!]!) {\n  createSlots(\n    input: {attributes: {jumpType: $jumpType, groupNumber: $groupNumber, extras: $extras, load: $load, ticketType: $ticketType, userGroup: $userGroup}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type ManifestGroupMutationFn = Apollo.MutationFunction<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\n\n/**\n * __useManifestGroupMutation__\n *\n * To run a mutation, you first call `useManifestGroupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestGroupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestGroupMutation, { data, loading, error }] = useManifestGroupMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      ticketType: // value for 'ticketType'\n *      groupNumber: // value for 'groupNumber'\n *      userGroup: // value for 'userGroup'\n *   },\n * });\n */\nexport function useManifestGroupMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>(ManifestGroupDocument, options);\n      }\nexport type ManifestGroupMutationHookResult = ReturnType<typeof useManifestGroupMutation>;\nexport type ManifestGroupMutationResult = Apollo.MutationResult<Operation.ManifestGroupMutation>;\nexport type ManifestGroupMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\nexport const ManifestUserDocument = gql`\n    mutation ManifestUser($jumpType: ID, $extras: [ID!], $load: ID, $rig: ID, $ticketType: ID, $dropzoneUser: ID, $exitWeight: Float, $passengerName: String, $groupNumber: Int, $passengerExitWeight: Float) {\n  createSlot(\n    input: {attributes: {jumpType: $jumpType, extras: $extras, load: $load, rig: $rig, groupNumber: $groupNumber, ticketType: $ticketType, dropzoneUser: $dropzoneUser, exitWeight: $exitWeight, passengerExitWeight: $passengerExitWeight, passengerName: $passengerName}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    slot {\n      ...slotExhaustive\n    }\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type ManifestUserMutationFn = Apollo.MutationFunction<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\n\n/**\n * __useManifestUserMutation__\n *\n * To run a mutation, you first call `useManifestUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestUserMutation, { data, loading, error }] = useManifestUserMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      rig: // value for 'rig'\n *      ticketType: // value for 'ticketType'\n *      dropzoneUser: // value for 'dropzoneUser'\n *      exitWeight: // value for 'exitWeight'\n *      passengerName: // value for 'passengerName'\n *      groupNumber: // value for 'groupNumber'\n *      passengerExitWeight: // value for 'passengerExitWeight'\n *   },\n * });\n */\nexport function useManifestUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>(ManifestUserDocument, options);\n      }\nexport type ManifestUserMutationHookResult = ReturnType<typeof useManifestUserMutation>;\nexport type ManifestUserMutationResult = Apollo.MutationResult<Operation.ManifestUserMutation>;\nexport type ManifestUserMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\nexport const MoveSlotDocument = gql`\n    mutation MoveSlot($sourceSlot: Int!, $targetSlot: Int, $targetLoad: Int!) {\n  moveSlot(\n    input: {sourceSlot: $sourceSlot, targetSlot: $targetSlot, targetLoad: $targetLoad}\n  ) {\n    loads {\n      ...loadDetails\n    }\n    errors\n    fieldErrors {\n      field\n      message\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type MoveSlotMutationFn = Apollo.MutationFunction<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\n\n/**\n * __useMoveSlotMutation__\n *\n * To run a mutation, you first call `useMoveSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMoveSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [moveSlotMutation, { data, loading, error }] = useMoveSlotMutation({\n *   variables: {\n *      sourceSlot: // value for 'sourceSlot'\n *      targetSlot: // value for 'targetSlot'\n *      targetLoad: // value for 'targetLoad'\n *   },\n * });\n */\nexport function useMoveSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>(MoveSlotDocument, options);\n      }\nexport type MoveSlotMutationHookResult = ReturnType<typeof useMoveSlotMutation>;\nexport type MoveSlotMutationResult = Apollo.MutationResult<Operation.MoveSlotMutation>;\nexport type MoveSlotMutationOptions = Apollo.BaseMutationOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\nexport const RecoverPasswordDocument = gql`\n    mutation RecoverPassword($email: String!, $redirectUrl: String!) {\n  userSendPasswordResetWithToken(email: $email, redirectUrl: $redirectUrl) {\n    message\n  }\n}\n    `;\nexport type RecoverPasswordMutationFn = Apollo.MutationFunction<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\n\n/**\n * __useRecoverPasswordMutation__\n *\n * To run a mutation, you first call `useRecoverPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRecoverPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [recoverPasswordMutation, { data, loading, error }] = useRecoverPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      redirectUrl: // value for 'redirectUrl'\n *   },\n * });\n */\nexport function useRecoverPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>(RecoverPasswordDocument, options);\n      }\nexport type RecoverPasswordMutationHookResult = ReturnType<typeof useRecoverPasswordMutation>;\nexport type RecoverPasswordMutationResult = Apollo.MutationResult<Operation.RecoverPasswordMutation>;\nexport type RecoverPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const RevokePermissionDocument = gql`\n    mutation RevokePermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  revokePermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type RevokePermissionMutationFn = Apollo.MutationFunction<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\n\n/**\n * __useRevokePermissionMutation__\n *\n * To run a mutation, you first call `useRevokePermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRevokePermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [revokePermissionMutation, { data, loading, error }] = useRevokePermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useRevokePermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>(RevokePermissionDocument, options);\n      }\nexport type RevokePermissionMutationHookResult = ReturnType<typeof useRevokePermissionMutation>;\nexport type RevokePermissionMutationResult = Apollo.MutationResult<Operation.RevokePermissionMutation>;\nexport type RevokePermissionMutationOptions = Apollo.BaseMutationOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\nexport const UpdateAircraftDocument = gql`\n    mutation UpdateAircraft($id: Int!, $attributes: PlaneInput!) {\n  updatePlane(input: {id: $id, attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        name\n        planes {\n          id\n          name\n          registration\n          minSlots\n          maxSlots\n          hours\n          nextMaintenanceHours\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type UpdateAircraftMutationFn = Apollo.MutationFunction<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\n\n/**\n * __useUpdateAircraftMutation__\n *\n * To run a mutation, you first call `useUpdateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateAircraftMutation, { data, loading, error }] = useUpdateAircraftMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>(UpdateAircraftDocument, options);\n      }\nexport type UpdateAircraftMutationHookResult = ReturnType<typeof useUpdateAircraftMutation>;\nexport type UpdateAircraftMutationResult = Apollo.MutationResult<Operation.UpdateAircraftMutation>;\nexport type UpdateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\nexport const UpdateDropzoneDocument = gql`\n    mutation UpdateDropzone($id: Int!, $attributes: DropzoneInput!) {\n  updateDropzone(input: {id: $id, attributes: $attributes}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type UpdateDropzoneMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\n\n/**\n * __useUpdateDropzoneMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneMutation, { data, loading, error }] = useUpdateDropzoneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>(UpdateDropzoneDocument, options);\n      }\nexport type UpdateDropzoneMutationHookResult = ReturnType<typeof useUpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\nexport const UpdateDropzoneUserDocument = gql`\n    mutation UpdateDropzoneUser($dropzoneUserId: ID!, $attributes: DropzoneUserInput!) {\n  updateDropzoneUser(\n    input: {dropzoneUser: $dropzoneUserId, attributes: $attributes}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateDropzoneUserMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\n\n/**\n * __useUpdateDropzoneUserMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneUserMutation, { data, loading, error }] = useUpdateDropzoneUserMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateDropzoneUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>(UpdateDropzoneUserDocument, options);\n      }\nexport type UpdateDropzoneUserMutationHookResult = ReturnType<typeof useUpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\nexport const UpdateLoadDocument = gql`\n    mutation UpdateLoad($id: ID!, $attributes: LoadInput!) {\n  updateLoad(input: {id: $id, attributes: $attributes}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type UpdateLoadMutationFn = Apollo.MutationFunction<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\n\n/**\n * __useUpdateLoadMutation__\n *\n * To run a mutation, you first call `useUpdateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLoadMutation, { data, loading, error }] = useUpdateLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>(UpdateLoadDocument, options);\n      }\nexport type UpdateLoadMutationHookResult = ReturnType<typeof useUpdateLoadMutation>;\nexport type UpdateLoadMutationResult = Apollo.MutationResult<Operation.UpdateLoadMutation>;\nexport type UpdateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation UpdateLostPassword($password: String!, $passwordConfirmation: String!, $token: String!) {\n  userUpdatePasswordWithToken(\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    resetPasswordToken: $token\n  ) {\n    authenticatable {\n      ...userEssentials\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    ${UserEssentialsFragmentDoc}`;\nexport type UpdateLostPasswordMutationFn = Apollo.MutationFunction<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, options);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = Apollo.MutationResult<Operation.UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\nexport const UpdateMasterLogDocument = gql`\n    mutation UpdateMasterLog($date: ISO8601Date!, $dropzone: ID!, $attributes: MasterLogInput!) {\n  updateMasterLog(\n    input: {dropzone: $dropzone, date: $date, attributes: $attributes}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    masterLog {\n      ...masterLogEntry\n    }\n  }\n}\n    ${MasterLogEntryFragmentDoc}`;\nexport type UpdateMasterLogMutationFn = Apollo.MutationFunction<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>;\n\n/**\n * __useUpdateMasterLogMutation__\n *\n * To run a mutation, you first call `useUpdateMasterLogMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateMasterLogMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateMasterLogMutation, { data, loading, error }] = useUpdateMasterLogMutation({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateMasterLogMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>(UpdateMasterLogDocument, options);\n      }\nexport type UpdateMasterLogMutationHookResult = ReturnType<typeof useUpdateMasterLogMutation>;\nexport type UpdateMasterLogMutationResult = Apollo.MutationResult<Operation.UpdateMasterLogMutation>;\nexport type UpdateMasterLogMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $isPublic: Boolean, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, isPublic: $isPublic, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      isPublic: // value for 'isPublic'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UpdateRigInspectionTemplateDocument = gql`\n    mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n  updateFormTemplate(\n    input: {id: $formId, attributes: {dropzoneId: $dropzoneId, definition: $definition}}\n  ) {\n    formTemplate {\n      id\n      name\n      definition\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRigInspectionTemplateMutationFn = Apollo.MutationFunction<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\n\n/**\n * __useUpdateRigInspectionTemplateMutation__\n *\n * To run a mutation, you first call `useUpdateRigInspectionTemplateMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigInspectionTemplateMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigInspectionTemplateMutation, { data, loading, error }] = useUpdateRigInspectionTemplateMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      formId: // value for 'formId'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useUpdateRigInspectionTemplateMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>(UpdateRigInspectionTemplateDocument, options);\n      }\nexport type UpdateRigInspectionTemplateMutationHookResult = ReturnType<typeof useUpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationResult = Apollo.MutationResult<Operation.UpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\nexport const UpdateRoleDocument = gql`\n    mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n  updateRole(input: {id: $roleId, permission: $permissionName, enabled: $enabled}) {\n    role {\n      id\n      name\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRoleMutationFn = Apollo.MutationFunction<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\n\n/**\n * __useUpdateRoleMutation__\n *\n * To run a mutation, you first call `useUpdateRoleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRoleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRoleMutation, { data, loading, error }] = useUpdateRoleMutation({\n *   variables: {\n *      roleId: // value for 'roleId'\n *      permissionName: // value for 'permissionName'\n *      enabled: // value for 'enabled'\n *   },\n * });\n */\nexport function useUpdateRoleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>(UpdateRoleDocument, options);\n      }\nexport type UpdateRoleMutationHookResult = ReturnType<typeof useUpdateRoleMutation>;\nexport type UpdateRoleMutationResult = Apollo.MutationResult<Operation.UpdateRoleMutation>;\nexport type UpdateRoleMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\nexport const UpdateTicketAddonDocument = gql`\n    mutation UpdateTicketAddon($id: Int!, $attributes: ExtraInput!) {\n  updateExtra(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      message\n      field\n    }\n    extra {\n      ...ticketTypeExtraDetailed\n    }\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\nexport type UpdateTicketAddonMutationFn = Apollo.MutationFunction<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\n\n/**\n * __useUpdateTicketAddonMutation__\n *\n * To run a mutation, you first call `useUpdateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketAddonMutation, { data, loading, error }] = useUpdateTicketAddonMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>(UpdateTicketAddonDocument, options);\n      }\nexport type UpdateTicketAddonMutationHookResult = ReturnType<typeof useUpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationResult = Apollo.MutationResult<Operation.UpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\nexport const UpdateTicketTypeDocument = gql`\n    mutation UpdateTicketType($id: Int!, $attributes: TicketTypeInput!) {\n  updateTicketType(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      ...ticketTypeEssentials\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        ...dropzoneEssentials\n        ticketTypes {\n          ...ticketTypeEssentials\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}`;\nexport type UpdateTicketTypeMutationFn = Apollo.MutationFunction<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\n\n/**\n * __useUpdateTicketTypeMutation__\n *\n * To run a mutation, you first call `useUpdateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketTypeMutation, { data, loading, error }] = useUpdateTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>(UpdateTicketTypeDocument, options);\n      }\nexport type UpdateTicketTypeMutationHookResult = ReturnType<typeof useUpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationResult = Apollo.MutationResult<Operation.UpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\nexport const UpdateUserDocument = gql`\n    mutation UpdateUser($dropzoneUser: ID, $name: String, $phone: String, $email: String, $image: String, $pushToken: String, $nickname: String, $license: Int, $exitWeight: Float) {\n  updateUser(\n    input: {dropzoneUser: $dropzoneUser, attributes: {pushToken: $pushToken, name: $name, phone: $phone, email: $email, image: $image, nickname: $nickname, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateUserMutationFn = Apollo.MutationFunction<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      dropzoneUser: // value for 'dropzoneUser'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      image: // value for 'image'\n *      pushToken: // value for 'pushToken'\n *      nickname: // value for 'nickname'\n *      license: // value for 'license'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useUpdateUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>(UpdateUserDocument, options);\n      }\nexport type UpdateUserMutationHookResult = ReturnType<typeof useUpdateUserMutation>;\nexport type UpdateUserMutationResult = Apollo.MutationResult<Operation.UpdateUserMutation>;\nexport type UpdateUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\nexport const UpdateVisibilityDocument = gql`\n    mutation UpdateVisibility($dropzone: ID!, $event: DropzoneStateEvent!) {\n  updateVisibility(input: {dropzone: $dropzone, event: $event}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzone {\n      ...dropzoneDetailed\n    }\n  }\n}\n    ${DropzoneDetailedFragmentDoc}`;\nexport type UpdateVisibilityMutationFn = Apollo.MutationFunction<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\n\n/**\n * __useUpdateVisibilityMutation__\n *\n * To run a mutation, you first call `useUpdateVisibilityMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateVisibilityMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateVisibilityMutation, { data, loading, error }] = useUpdateVisibilityMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      event: // value for 'event'\n *   },\n * });\n */\nexport function useUpdateVisibilityMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>(UpdateVisibilityDocument, options);\n      }\nexport type UpdateVisibilityMutationHookResult = ReturnType<typeof useUpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationResult = Apollo.MutationResult<Operation.UpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userRegister(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const ActivityDocument = gql`\n    query Activity($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!]) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n  ) {\n    edges {\n      node {\n        ...activityEssentials\n      }\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}`;\n\n/**\n * __useActivityQuery__\n *\n * To run a query within a React component, call `useActivityQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *   },\n * });\n */\nexport function useActivityQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n      }\nexport function useActivityLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n        }\nexport type ActivityQueryHookResult = ReturnType<typeof useActivityQuery>;\nexport type ActivityLazyQueryHookResult = ReturnType<typeof useActivityLazyQuery>;\nexport type ActivityQueryResult = Apollo.QueryResult<Operation.ActivityQuery, Operation.ActivityQueryVariables>;\nexport const ActivityDetailsDocument = gql`\n    query ActivityDetails($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!], $after: String) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n    after: $after\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ...activityDetails\n      }\n    }\n  }\n}\n    ${ActivityDetailsFragmentDoc}`;\n\n/**\n * __useActivityDetailsQuery__\n *\n * To run a query within a React component, call `useActivityDetailsQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityDetailsQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useActivityDetailsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n      }\nexport function useActivityDetailsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n        }\nexport type ActivityDetailsQueryHookResult = ReturnType<typeof useActivityDetailsQuery>;\nexport type ActivityDetailsLazyQueryHookResult = ReturnType<typeof useActivityDetailsLazyQuery>;\nexport type ActivityDetailsQueryResult = Apollo.QueryResult<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>;\nexport const CurrentUserDocument = gql`\n    query CurrentUser {\n  currentUser {\n    ...currentUser\n  }\n}\n    ${CurrentUserFragmentDoc}`;\n\n/**\n * __useCurrentUserQuery__\n *\n * To run a query within a React component, call `useCurrentUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentUserQuery(baseOptions?: Apollo.QueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n      }\nexport function useCurrentUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n        }\nexport type CurrentUserQueryHookResult = ReturnType<typeof useCurrentUserQuery>;\nexport type CurrentUserLazyQueryHookResult = ReturnType<typeof useCurrentUserLazyQuery>;\nexport type CurrentUserQueryResult = Apollo.QueryResult<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>;\nexport const DropzoneDocument = gql`\n    query Dropzone($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useDropzoneQuery__\n *\n * To run a query within a React component, call `useDropzoneQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n      }\nexport function useDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n        }\nexport type DropzoneQueryHookResult = ReturnType<typeof useDropzoneQuery>;\nexport type DropzoneLazyQueryHookResult = ReturnType<typeof useDropzoneLazyQuery>;\nexport type DropzoneQueryResult = Apollo.QueryResult<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>;\nexport const DropzoneStatisticsDocument = gql`\n    query DropzoneStatistics($dropzoneId: ID!, $timeRange: TimeRangeInput) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneStatistics\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzoneStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzoneStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneStatisticsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      timeRange: // value for 'timeRange'\n *   },\n * });\n */\nexport function useDropzoneStatisticsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n      }\nexport function useDropzoneStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n        }\nexport type DropzoneStatisticsQueryHookResult = ReturnType<typeof useDropzoneStatisticsQuery>;\nexport type DropzoneStatisticsLazyQueryHookResult = ReturnType<typeof useDropzoneStatisticsLazyQuery>;\nexport type DropzoneStatisticsQueryResult = Apollo.QueryResult<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>;\nexport const DropzonesStatisticsDocument = gql`\n    query DropzonesStatistics($timeRange: TimeRangeInput, $after: String) {\n  dropzones(after: $after) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...dropzoneStatistics\n      }\n    }\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzonesStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzonesStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesStatisticsQuery({\n *   variables: {\n *      timeRange: // value for 'timeRange'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzonesStatisticsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n      }\nexport function useDropzonesStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n        }\nexport type DropzonesStatisticsQueryHookResult = ReturnType<typeof useDropzonesStatisticsQuery>;\nexport type DropzonesStatisticsLazyQueryHookResult = ReturnType<typeof useDropzonesStatisticsLazyQuery>;\nexport type DropzonesStatisticsQueryResult = Apollo.QueryResult<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>;\nexport const DropzoneRigsDocument = gql`\n    query DropzoneRigs($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneRigsQuery__\n *\n * To run a query within a React component, call `useDropzoneRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneRigsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n      }\nexport function useDropzoneRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n        }\nexport type DropzoneRigsQueryHookResult = ReturnType<typeof useDropzoneRigsQuery>;\nexport type DropzoneRigsLazyQueryHookResult = ReturnType<typeof useDropzoneRigsLazyQuery>;\nexport type DropzoneRigsQueryResult = Apollo.QueryResult<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>;\nexport const DropzonePermissionsDocument = gql`\n    query DropzonePermissions($id: ID!) {\n  dropzone(id: $id) {\n    ...dropzoneEssentials\n    roles {\n      ...roleDetailed\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${RoleDetailedFragmentDoc}`;\n\n/**\n * __useDropzonePermissionsQuery__\n *\n * To run a query within a React component, call `useDropzonePermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonePermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonePermissionsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzonePermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n      }\nexport function useDropzonePermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n        }\nexport type DropzonePermissionsQueryHookResult = ReturnType<typeof useDropzonePermissionsQuery>;\nexport type DropzonePermissionsLazyQueryHookResult = ReturnType<typeof useDropzonePermissionsLazyQuery>;\nexport type DropzonePermissionsQueryResult = Apollo.QueryResult<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: ID!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const DropzoneUsersDocument = gql`\n    query DropzoneUsers($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n      }\nexport function useDropzoneUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n        }\nexport type DropzoneUsersQueryHookResult = ReturnType<typeof useDropzoneUsersQuery>;\nexport type DropzoneUsersLazyQueryHookResult = ReturnType<typeof useDropzoneUsersLazyQuery>;\nexport type DropzoneUsersQueryResult = Apollo.QueryResult<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>;\nexport const DropzoneUsersDetailedDocument = gql`\n    query DropzoneUsersDetailed($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersDetailedQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n      }\nexport function useDropzoneUsersDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n        }\nexport type DropzoneUsersDetailedQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedQuery>;\nexport type DropzoneUsersDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedLazyQuery>;\nexport type DropzoneUsersDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>;\nexport const DropzoneUserDocument = gql`\n    query DropzoneUser($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUserQuery__\n *\n * To run a query within a React component, call `useDropzoneUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n      }\nexport function useDropzoneUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n        }\nexport type DropzoneUserQueryHookResult = ReturnType<typeof useDropzoneUserQuery>;\nexport type DropzoneUserLazyQueryHookResult = ReturnType<typeof useDropzoneUserLazyQuery>;\nexport type DropzoneUserQueryResult = Apollo.QueryResult<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>;\nexport const DropzoneUserDetailedDocument = gql`\n    query DropzoneUserDetailed($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserDetails\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useDropzoneUserDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUserDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserDetailedQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n      }\nexport function useDropzoneUserDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n        }\nexport type DropzoneUserDetailedQueryHookResult = ReturnType<typeof useDropzoneUserDetailedQuery>;\nexport type DropzoneUserDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUserDetailedLazyQuery>;\nexport type DropzoneUserDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>;\nexport const DropzoneUserProfileDocument = gql`\n    query DropzoneUserProfile($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserProfile\n  }\n}\n    ${DropzoneUserProfileFragmentDoc}`;\n\n/**\n * __useDropzoneUserProfileQuery__\n *\n * To run a query within a React component, call `useDropzoneUserProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserProfileQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserProfileQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n      }\nexport function useDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n        }\nexport type DropzoneUserProfileQueryHookResult = ReturnType<typeof useDropzoneUserProfileQuery>;\nexport type DropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useDropzoneUserProfileLazyQuery>;\nexport type DropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>;\nexport const DropzonesDocument = gql`\n    query Dropzones($state: [DropzoneState!]) {\n  dropzones(state: $state) {\n    edges {\n      node {\n        ...dropzoneEssentials\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzonesQuery__\n *\n * To run a query within a React component, call `useDropzonesQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesQuery({\n *   variables: {\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useDropzonesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n      }\nexport function useDropzonesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n        }\nexport type DropzonesQueryHookResult = ReturnType<typeof useDropzonesQuery>;\nexport type DropzonesLazyQueryHookResult = ReturnType<typeof useDropzonesLazyQuery>;\nexport type DropzonesQueryResult = Apollo.QueryResult<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>;\nexport const TicketTypeExtrasDocument = gql`\n    query TicketTypeExtras($dropzoneId: ID!) {\n  extras(dropzone: $dropzoneId) {\n    ...ticketTypeExtraDetailed\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\n\n/**\n * __useTicketTypeExtrasQuery__\n *\n * To run a query within a React component, call `useTicketTypeExtrasQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypeExtrasQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypeExtrasQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useTicketTypeExtrasQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n      }\nexport function useTicketTypeExtrasLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n        }\nexport type TicketTypeExtrasQueryHookResult = ReturnType<typeof useTicketTypeExtrasQuery>;\nexport type TicketTypeExtrasLazyQueryHookResult = ReturnType<typeof useTicketTypeExtrasLazyQuery>;\nexport type TicketTypeExtrasQueryResult = Apollo.QueryResult<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>;\nexport const FederationsDocument = gql`\n    query Federations {\n  federations {\n    ...federationEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}`;\n\n/**\n * __useFederationsQuery__\n *\n * To run a query within a React component, call `useFederationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useFederationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFederationsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useFederationsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n      }\nexport function useFederationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n        }\nexport type FederationsQueryHookResult = ReturnType<typeof useFederationsQuery>;\nexport type FederationsLazyQueryHookResult = ReturnType<typeof useFederationsLazyQuery>;\nexport type FederationsQueryResult = Apollo.QueryResult<Operation.FederationsQuery, Operation.FederationsQueryVariables>;\nexport const AddressToLocationDocument = gql`\n    query AddressToLocation($search: String!) {\n  geocode(search: $search) {\n    formattedString\n    id\n    lat\n    lng\n  }\n}\n    `;\n\n/**\n * __useAddressToLocationQuery__\n *\n * To run a query within a React component, call `useAddressToLocationQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressToLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressToLocationQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useAddressToLocationQuery(baseOptions: Apollo.QueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n      }\nexport function useAddressToLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n        }\nexport type AddressToLocationQueryHookResult = ReturnType<typeof useAddressToLocationQuery>;\nexport type AddressToLocationLazyQueryHookResult = ReturnType<typeof useAddressToLocationLazyQuery>;\nexport type AddressToLocationQueryResult = Apollo.QueryResult<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>;\nexport const JumpTypesDocument = gql`\n    query JumpTypes($allowedForDropzoneUserIds: [Int!]) {\n  jumpTypes(dropzoneUsers: $allowedForDropzoneUserIds) {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}`;\n\n/**\n * __useJumpTypesQuery__\n *\n * To run a query within a React component, call `useJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useJumpTypesQuery({\n *   variables: {\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *   },\n * });\n */\nexport function useJumpTypesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n      }\nexport function useJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n        }\nexport type JumpTypesQueryHookResult = ReturnType<typeof useJumpTypesQuery>;\nexport type JumpTypesLazyQueryHookResult = ReturnType<typeof useJumpTypesLazyQuery>;\nexport type JumpTypesQueryResult = Apollo.QueryResult<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>;\nexport const AllowedJumpTypesDocument = gql`\n    query AllowedJumpTypes($dropzoneId: ID!, $allowedForDropzoneUserIds: [Int!]!, $isPublic: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    allowedJumpTypes(userId: $allowedForDropzoneUserIds) {\n      ...jumpTypeEssentials\n    }\n    ticketTypes(isPublic: $isPublic) {\n      ...ticketTypeEssentials\n    }\n  }\n  jumpTypes {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedJumpTypesQuery__\n *\n * To run a query within a React component, call `useAllowedJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedJumpTypesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useAllowedJumpTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n      }\nexport function useAllowedJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n        }\nexport type AllowedJumpTypesQueryHookResult = ReturnType<typeof useAllowedJumpTypesQuery>;\nexport type AllowedJumpTypesLazyQueryHookResult = ReturnType<typeof useAllowedJumpTypesLazyQuery>;\nexport type AllowedJumpTypesQueryResult = Apollo.QueryResult<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>;\nexport const LicensesDocument = gql`\n    query Licenses($federationId: Int) {\n  licenses(federationId: $federationId) {\n    ...licenseDetails\n  }\n}\n    ${LicenseDetailsFragmentDoc}`;\n\n/**\n * __useLicensesQuery__\n *\n * To run a query within a React component, call `useLicensesQuery` and pass it any options that fit your needs.\n * When your component renders, `useLicensesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLicensesQuery({\n *   variables: {\n *      federationId: // value for 'federationId'\n *   },\n * });\n */\nexport function useLicensesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n      }\nexport function useLicensesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n        }\nexport type LicensesQueryHookResult = ReturnType<typeof useLicensesQuery>;\nexport type LicensesLazyQueryHookResult = ReturnType<typeof useLicensesLazyQuery>;\nexport type LicensesQueryResult = Apollo.QueryResult<Operation.LicensesQuery, Operation.LicensesQueryVariables>;\nexport const LoadDocument = gql`\n    query Load($id: ID!) {\n  load(id: $id) {\n    ...loadDetails\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadQuery__\n *\n * To run a query within a React component, call `useLoadQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n      }\nexport function useLoadLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n        }\nexport type LoadQueryHookResult = ReturnType<typeof useLoadQuery>;\nexport type LoadLazyQueryHookResult = ReturnType<typeof useLoadLazyQuery>;\nexport type LoadQueryResult = Apollo.QueryResult<Operation.LoadQuery, Operation.LoadQueryVariables>;\nexport const LoadsDocument = gql`\n    query Loads($date: ISO8601Date, $dropzone: ID!) {\n  loads(date: $date, dropzone: $dropzone) {\n    edges {\n      node {\n        ...loadEssentials\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}`;\n\n/**\n * __useLoadsQuery__\n *\n * To run a query within a React component, call `useLoadsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadsQuery({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *   },\n * });\n */\nexport function useLoadsQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n      }\nexport function useLoadsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n        }\nexport type LoadsQueryHookResult = ReturnType<typeof useLoadsQuery>;\nexport type LoadsLazyQueryHookResult = ReturnType<typeof useLoadsLazyQuery>;\nexport type LoadsQueryResult = Apollo.QueryResult<Operation.LoadsQuery, Operation.LoadsQueryVariables>;\nexport const MasterLogDocument = gql`\n    query MasterLog($dropzoneId: ID!, $date: ISO8601Date!) {\n  masterLog(dropzone: $dropzoneId, date: $date) {\n    ...masterLogEntry\n  }\n}\n    ${MasterLogEntryFragmentDoc}`;\n\n/**\n * __useMasterLogQuery__\n *\n * To run a query within a React component, call `useMasterLogQuery` and pass it any options that fit your needs.\n * When your component renders, `useMasterLogQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMasterLogQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      date: // value for 'date'\n *   },\n * });\n */\nexport function useMasterLogQuery(baseOptions: Apollo.QueryHookOptions<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>(MasterLogDocument, options);\n      }\nexport function useMasterLogLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>(MasterLogDocument, options);\n        }\nexport type MasterLogQueryHookResult = ReturnType<typeof useMasterLogQuery>;\nexport type MasterLogLazyQueryHookResult = ReturnType<typeof useMasterLogLazyQuery>;\nexport type MasterLogQueryResult = Apollo.QueryResult<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>;\nexport const NotificationsDocument = gql`\n    query Notifications($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    currentUser {\n      id\n      notifications {\n        edges {\n          node {\n            id\n            message\n            notificationType\n            createdAt\n            sentBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n            resource {\n              ... on Load {\n                ...loadEssentials\n              }\n              ... on Transaction {\n                id\n                amount\n                message\n                status\n              }\n              ... on Slot {\n                ...slotEssentials\n              }\n              ... on Rig {\n                ...rigEssentials\n                rigInspections(dropzoneId: $dropzoneId) {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              ... on RigInspection {\n                ...rigInspectionEssentials\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\n\n/**\n * __useNotificationsQuery__\n *\n * To run a query within a React component, call `useNotificationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useNotificationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNotificationsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useNotificationsQuery(baseOptions: Apollo.QueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n      }\nexport function useNotificationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n        }\nexport type NotificationsQueryHookResult = ReturnType<typeof useNotificationsQuery>;\nexport type NotificationsLazyQueryHookResult = ReturnType<typeof useNotificationsLazyQuery>;\nexport type NotificationsQueryResult = Apollo.QueryResult<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>;\nexport const PlanesDocument = gql`\n    query Planes($dropzoneId: ID!) {\n  planes(dropzone: $dropzoneId) {\n    ...planeEssentials\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\n\n/**\n * __usePlanesQuery__\n *\n * To run a query within a React component, call `usePlanesQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlanesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlanesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function usePlanesQuery(baseOptions: Apollo.QueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n      }\nexport function usePlanesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n        }\nexport type PlanesQueryHookResult = ReturnType<typeof usePlanesQuery>;\nexport type PlanesLazyQueryHookResult = ReturnType<typeof usePlanesLazyQuery>;\nexport type PlanesQueryResult = Apollo.QueryResult<Operation.PlanesQuery, Operation.PlanesQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        ...roleEssentials\n      }\n      permissions\n    }\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;\nexport const RigInspectionTemplateDocument = gql`\n    query RigInspectionTemplate($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigInspectionTemplate {\n      id\n      name\n      definition\n    }\n  }\n}\n    `;\n\n/**\n * __useRigInspectionTemplateQuery__\n *\n * To run a query within a React component, call `useRigInspectionTemplateQuery` and pass it any options that fit your needs.\n * When your component renders, `useRigInspectionTemplateQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRigInspectionTemplateQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useRigInspectionTemplateQuery(baseOptions: Apollo.QueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n      }\nexport function useRigInspectionTemplateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n        }\nexport type RigInspectionTemplateQueryHookResult = ReturnType<typeof useRigInspectionTemplateQuery>;\nexport type RigInspectionTemplateLazyQueryHookResult = ReturnType<typeof useRigInspectionTemplateLazyQuery>;\nexport type RigInspectionTemplateQueryResult = Apollo.QueryResult<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>;\nexport const AvailableRigsDocument = gql`\n    query AvailableRigs($dropzoneUserId: Int!, $isTandem: Boolean, $loadId: Int) {\n  availableRigs(\n    dropzoneUser: $dropzoneUserId\n    isTandem: $isTandem\n    loadId: $loadId\n  ) {\n    ...userRigDetailed\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\n\n/**\n * __useAvailableRigsQuery__\n *\n * To run a query within a React component, call `useAvailableRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAvailableRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAvailableRigsQuery({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      isTandem: // value for 'isTandem'\n *      loadId: // value for 'loadId'\n *   },\n * });\n */\nexport function useAvailableRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n      }\nexport function useAvailableRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n        }\nexport type AvailableRigsQueryHookResult = ReturnType<typeof useAvailableRigsQuery>;\nexport type AvailableRigsLazyQueryHookResult = ReturnType<typeof useAvailableRigsLazyQuery>;\nexport type AvailableRigsQueryResult = Apollo.QueryResult<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>;\nexport const RolesDocument = gql`\n    query Roles($dropzoneId: ID!, $selectable: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    roles(selectable: $selectable) {\n      ...roleDetailed\n    }\n  }\n}\n    ${RoleDetailedFragmentDoc}`;\n\n/**\n * __useRolesQuery__\n *\n * To run a query within a React component, call `useRolesQuery` and pass it any options that fit your needs.\n * When your component renders, `useRolesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRolesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      selectable: // value for 'selectable'\n *   },\n * });\n */\nexport function useRolesQuery(baseOptions: Apollo.QueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n      }\nexport function useRolesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n        }\nexport type RolesQueryHookResult = ReturnType<typeof useRolesQuery>;\nexport type RolesLazyQueryHookResult = ReturnType<typeof useRolesLazyQuery>;\nexport type RolesQueryResult = Apollo.QueryResult<Operation.RolesQuery, Operation.RolesQueryVariables>;\nexport const AllowedTicketTypesDocument = gql`\n    query AllowedTicketTypes($dropzone: ID!, $onlyPublicTickets: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $onlyPublicTickets) {\n    ...ticketTypeDetails\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useAllowedTicketTypesQuery__\n *\n * To run a query within a React component, call `useAllowedTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      onlyPublicTickets: // value for 'onlyPublicTickets'\n *   },\n * });\n */\nexport function useAllowedTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n      }\nexport function useAllowedTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n        }\nexport type AllowedTicketTypesQueryHookResult = ReturnType<typeof useAllowedTicketTypesQuery>;\nexport type AllowedTicketTypesLazyQueryHookResult = ReturnType<typeof useAllowedTicketTypesLazyQuery>;\nexport type AllowedTicketTypesQueryResult = Apollo.QueryResult<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>;\nexport const TicketTypesDocument = gql`\n    query TicketTypes($dropzone: ID!, $allowManifestingSelf: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $allowManifestingSelf) {\n    ...ticketTypeDetails\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useTicketTypesQuery__\n *\n * To run a query within a React component, call `useTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *   },\n * });\n */\nexport function useTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n      }\nexport function useTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n        }\nexport type TicketTypesQueryHookResult = ReturnType<typeof useTicketTypesQuery>;\nexport type TicketTypesLazyQueryHookResult = ReturnType<typeof useTicketTypesLazyQuery>;\nexport type TicketTypesQueryResult = Apollo.QueryResult<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>;\nexport const LoadCreatedDocument = gql`\n    subscription LoadCreated($dropzoneId: ID!) {\n  loadCreated(dropzoneId: $dropzoneId) {\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadCreatedSubscription__\n *\n * To run a query within a React component, call `useLoadCreatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useLoadCreatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadCreatedSubscription({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useLoadCreatedSubscription(baseOptions: Apollo.SubscriptionHookOptions<Operation.LoadCreatedSubscription, Operation.LoadCreatedSubscriptionVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useSubscription<Operation.LoadCreatedSubscription, Operation.LoadCreatedSubscriptionVariables>(LoadCreatedDocument, options);\n      }\nexport type LoadCreatedSubscriptionHookResult = ReturnType<typeof useLoadCreatedSubscription>;\nexport type LoadCreatedSubscriptionResult = Apollo.SubscriptionResult<Operation.LoadCreatedSubscription>;\nexport const LoadUpdatedDocument = gql`\n    subscription LoadUpdated($id: ID!) {\n  loadUpdated(loadId: $id) {\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadUpdatedSubscription__\n *\n * To run a query within a React component, call `useLoadUpdatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useLoadUpdatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadUpdatedSubscription({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadUpdatedSubscription(baseOptions: Apollo.SubscriptionHookOptions<Operation.LoadUpdatedSubscription, Operation.LoadUpdatedSubscriptionVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useSubscription<Operation.LoadUpdatedSubscription, Operation.LoadUpdatedSubscriptionVariables>(LoadUpdatedDocument, options);\n      }\nexport type LoadUpdatedSubscriptionHookResult = ReturnType<typeof useLoadUpdatedSubscription>;\nexport type LoadUpdatedSubscriptionResult = Apollo.SubscriptionResult<Operation.LoadUpdatedSubscription>;\nexport const UserUpdatedDocument = gql`\n    subscription UserUpdated($id: ID!) {\n  userUpdated(dropzoneUserId: $id) {\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useUserUpdatedSubscription__\n *\n * To run a query within a React component, call `useUserUpdatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useUserUpdatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserUpdatedSubscription({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserUpdatedSubscription(baseOptions: Apollo.SubscriptionHookOptions<Operation.UserUpdatedSubscription, Operation.UserUpdatedSubscriptionVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useSubscription<Operation.UserUpdatedSubscription, Operation.UserUpdatedSubscriptionVariables>(UserUpdatedDocument, options);\n      }\nexport type UserUpdatedSubscriptionHookResult = ReturnType<typeof useUserUpdatedSubscription>;\nexport type UserUpdatedSubscriptionResult = Apollo.SubscriptionResult<Operation.UserUpdatedSubscription>;","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { useAppSelector } from 'app/state';\nimport { useCurrentUserPermissionsLazyQuery, useDropzoneLazyQuery, useUpdateDropzoneMutation } from '../reflection';\nimport {\n  CurrentUserPermissionsQueryVariables,\n  DropzoneEssentialsFragment,\n  DropzoneQueryVariables\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\nimport { DropzoneInput } from '../schema';\n\nexport function useDropzone(vars: Partial<DropzoneQueryVariables>) {\n  const { authenticated, currentDropzoneId } = useAppSelector((root) => root.global);\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const [getDropzone, query] = useDropzoneLazyQuery();\n  const [updateDropzone] = useUpdateDropzoneMutation();\n  const permissionsVariables = React.useMemo(() => ({ dropzoneId: variables?.dropzoneId }), [variables?.dropzoneId]);\n\n  const [getPermissions, permissions] = useCurrentUserPermissionsLazyQuery();\n\n  const update = React.useCallback(\n    async (attributes: DropzoneInput): Promise<TMutationResponse<{ dropzone: DropzoneEssentialsFragment }>> => {\n      try {\n        if (!query?.data?.dropzone?.id && !currentDropzoneId) return { error: 'No dropzone selected' };\n        const { data: response } = await updateDropzone({\n          variables: {\n            id: Number(query?.data?.dropzone?.id || currentDropzoneId),\n            attributes\n          }\n        });\n\n        if (response?.updateDropzone?.dropzone) {\n          return { dropzone: response?.updateDropzone?.dropzone };\n        }\n        return {\n          error: response?.updateDropzone?.errors?.[0],\n          fieldErrors: response?.updateDropzone?.fieldErrors || undefined\n        };\n      } catch (err) {\n        if (err instanceof Error) {\n          return { error: err.message };\n        }\n        return { error: 'Something went wrong' };\n      }\n    },\n    [currentDropzoneId, query?.data?.dropzone?.id, updateDropzone]\n  );\n  React.useEffect(() => {\n    if (authenticated && variables?.dropzoneId && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Dropzone] Fetching dropzone', variables);\n      getDropzone({ variables });\n    }\n  }, [authenticated, getDropzone, query.variables, variables]);\n\n  React.useEffect(() => {\n    if (authenticated && permissionsVariables?.dropzoneId && !isEqual(permissionsVariables, permissions.variables)) {\n      console.debug('[Context::Dropzone] Fetching user permissions', permissionsVariables);\n      getPermissions({ variables: permissionsVariables as CurrentUserPermissionsQueryVariables });\n    }\n  }, [\n    authenticated,\n    getDropzone,\n    getPermissions,\n    permissions.variables,\n    permissionsVariables,\n    query.variables,\n    variables\n  ]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      permissions: permissions?.data?.dropzone?.currentUser?.permissions || [],\n      update,\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      dropzone: data?.dropzone,\n      currentUser: data?.dropzone?.currentUser\n    }),\n    [\n      variables,\n      loading,\n      called,\n      update,\n      permissions?.data?.dropzone?.currentUser?.permissions,\n      refetch,\n      queryVariables?.dropzoneId,\n      fetchMore,\n      data?.dropzone\n    ]\n  );\n}\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { useAppSignal } from 'app/components/app_signal';\nimport { isEqual } from 'lodash';\nimport {\n  useDropzonesLazyQuery,\n  useDropzonesQuery,\n  useUpdateVisibilityMutation,\n} from '../reflection';\nimport { DropzoneDetailedFragment, DropzonesQueryVariables } from '../operations';\nimport createCRUDContext, { uninitializedHandler, TMutationResponse } from './factory';\nimport { DropzoneStateEvent } from '../schema.d';\n\nexport default function useDropzones(vars: Partial<DropzonesQueryVariables>) {\n  const state = useAppSelector((root) => root.global);\n  const { authenticated } = state;\n  const variables: DropzonesQueryVariables = React.useMemo(\n    () => ({\n      state: vars?.state,\n    }),\n    [vars?.state]\n  );\n\n  const [getDropzones, query] = useDropzonesLazyQuery();\n\n  React.useEffect(() => {\n    if (authenticated && (!isEqual(variables, query.variables) || !query.called)) {\n      console.debug('[Context::Dropzones] Fetching dropzones', variables);\n      getDropzones({ variables });\n    }\n  }, [authenticated, getDropzones, query.called, query.variables, variables]);\n\n  const [updateVisibilityMutation] = useUpdateVisibilityMutation();\n  const { appSignal } = useAppSignal();\n\n  const updateVisibility = React.useCallback(\n    async function UpdateVisibility(\n      id: string,\n      event: DropzoneStateEvent\n    ): Promise<TMutationResponse<{ dropzone: DropzoneDetailedFragment }>> {\n      try {\n        const response = await updateVisibilityMutation({\n          variables: {\n            dropzone: id,\n            event,\n          },\n        });\n\n        if (response?.data?.updateVisibility?.dropzone?.id) {\n          return { dropzone: response.data.updateVisibility?.dropzone };\n        }\n        return {\n          error: response?.data?.updateVisibility?.errors?.[0],\n          fieldErrors: response?.data?.updateVisibility?.fieldErrors || undefined,\n        };\n      } catch (e) {\n        appSignal.sendError(e as Error);\n        return { error: 'You cant modify dropzone visibility' };\n      }\n    },\n    [appSignal, updateVisibilityMutation]\n  );\n\n  const { loading, fetchMore, refetch, data, called } = query;\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      updateVisibility,\n      dropzones: data?.dropzones?.edges?.map((edge) => edge?.node),\n    }),\n    [called, data?.dropzones?.edges, fetchMore, loading, refetch, updateVisibility]\n  );\n}\n\nconst { Provider: DropzonesProvider, useContext: useDropzonesContext } = createCRUDContext(\n  useDropzones,\n  {\n    called: false,\n    loading: false,\n    dropzones: [],\n    updateVisibility: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  }\n);\n\nexport { DropzonesProvider, useDropzonesContext, useDropzones };\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Permission } from '../api/schema.d';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const {\n    dropzone: { permissions },\n  } = useDropzoneContext();\n\n  const check = permissions?.includes(permission as Permission) || false;\n  return check;\n}\n","import { OnDataOptions } from '@apollo/client';\nimport { LoadDetailsFragment, LoadQuery, LoadUpdatedSubscription } from 'app/api/operations';\nimport {\n  LoadDetailsFragmentDoc,\n  LoadDocument,\n  useLoadUpdatedSubscription,\n} from 'app/api/reflection';\nimport * as React from 'react';\n\nexport function useLoadUpdated(loadId?: string) {\n  const onData = React.useCallback(\n    ({ client, data: { data: result } }: OnDataOptions<LoadUpdatedSubscription>) => {\n      if (result?.loadUpdated?.load?.id) {\n        const { load } = result.loadUpdated;\n        client.cache.updateFragment<LoadDetailsFragment>(\n          {\n            fragment: LoadDetailsFragmentDoc,\n            fragmentName: 'loadDetails',\n            broadcast: true,\n            id: client.cache.identify(load),\n          },\n          () => load\n        );\n\n        client.cache.updateQuery<LoadQuery>(\n          {\n            query: LoadDocument,\n            broadcast: true,\n            variables: { id: load.id },\n          },\n          (previous) => ({\n            ...previous,\n            load: {\n              __typename: 'Load',\n              ...load,\n            },\n          })\n        );\n\n        console.debug('[Subscription::LoadUpdated] Updated load fragment for', load);\n      } else {\n        console.debug(\n          '[Subscription::LoadUpdated] Received subscription data without load id',\n          result\n        );\n      }\n    },\n    []\n  );\n\n  return useLoadUpdatedSubscription({\n    skip: !loadId,\n    variables: {\n      id: loadId as string,\n    },\n    onData,\n  });\n}\n","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useAppSelector } from 'app/state';\nimport {\n  useFinalizeLoadMutation,\n  useLoadLazyQuery,\n  useManifestUserMutation,\n  useUpdateLoadMutation,\n} from '../reflection';\nimport {\n  LoadDetailsFragment,\n  LoadQueryVariables,\n  UpdateLoadMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\nimport { CreateSlotPayload, LoadState, Permission } from '../schema.d';\nimport { useLoadUpdated } from './subscriptions/useLoadUpdatedSubscription';\n\nexport function useLoad(variables: Partial<LoadQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const [getLoad, query] = useLoadLazyQuery();\n\n  React.useEffect(() => {\n    if (authenticated && variables?.id && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Load] Fetching load', variables);\n      getLoad({ variables: variables as LoadQueryVariables });\n    }\n  }, [authenticated, getLoad, query.variables, variables]);\n\n  const refetch = React.useCallback(() => {\n    if (variables?.id) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const load = React.useMemo(() => data?.load, [data?.load]);\n\n  const [mutationManifestUser] = useManifestUserMutation();\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n  const [updateLoadMutation] = useUpdateLoadMutation();\n  useLoadUpdated(variables?.id);\n\n  const update = React.useCallback(\n    async function UpdateLoad(\n      attributes: Partial<UpdateLoadMutationVariables['attributes']>\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      try {\n        console.debug('[Context::Load] Updating load', load?.id, attributes);\n        if (!load?.id) {\n          return { error: 'Load cannot be updated' };\n        }\n\n        const { data: response } = await updateLoadMutation({\n          variables: {\n            id: load?.id as string,\n            attributes,\n          },\n          optimisticResponse: {\n            updateLoad: {\n              __typename: 'UpdateLoadPayload',\n              errors: null,\n              fieldErrors: null,\n              load: {\n                ...load,\n                state: (attributes?.state || load?.state) as LoadState,\n                dispatchAt: attributes?.dispatchAt || load?.dispatchAt,\n              } as LoadDetailsFragment,\n            },\n          },\n        });\n\n        console.debug({ response });\n\n        if (response?.updateLoad?.load?.id) {\n          notify.success(`Load #${load?.loadNumber} updated`);\n          return { load: response?.updateLoad?.load };\n        }\n\n        if (response?.updateLoad?.errors?.[0]) {\n          notify.error(response?.updateLoad?.errors?.[0]);\n        }\n        return {\n          error: response?.updateLoad?.errors?.[0],\n          fieldErrors: response?.updateLoad?.fieldErrors || undefined,\n        };\n      } catch (e) {\n        console.error(e);\n        return { error: 'Something went wrong' };\n      }\n    },\n    [load, notify, updateLoadMutation]\n  );\n\n  const manifestUser = React.useCallback(\n    async (payload: Omit<CreateSlotPayload, 'loadId'>) => {\n      if (load?.id) {\n        return undefined;\n      }\n      const schema = yup.object().shape({\n        dropzoneUser: yup.string().required(),\n        exitWeight: yup.number().nullable(),\n        groupNumber: yup.number().nullable(),\n        passengerExitWeight: yup.number().nullable(),\n        passengerName: yup.string().nullable(),\n        rig: yup.string().nullable(),\n        ticketType: yup.string().required('You must select a ticket type'),\n        jumpType: yup.string().required('You must specify the type of jump'),\n      });\n      const validatedPayload = schema.validateSync(payload);\n      const response = await mutationManifestUser({\n        variables: {\n          load: load?.id,\n          ...validatedPayload,\n        },\n      });\n\n      if (response?.data?.createSlot?.fieldErrors?.length) {\n        throw new ValidationError(\n          response?.data?.createSlot?.fieldErrors?.map(\n            ({ field, message }) => new ValidationError([], message, field)\n          )\n        );\n      }\n      return response?.data?.createSlot?.slot;\n    },\n    [load?.id, mutationManifestUser]\n  );\n\n  const dispatchInMinutes = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : DateTime.local().plus({ minutes }).toISO();\n\n      await update({\n        dispatchAt: dispatchTime,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      return update({\n        state,\n        dispatchAt: null,\n      });\n    },\n    [update]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: { id: string }) => {\n      await update({\n        pilot: pilot.id,\n      });\n    },\n    [update]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: { id: string }) => {\n      await update({\n        gca: gca.id,\n      });\n    },\n    [update]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: { id: string; maxSlots: number }) => {\n      await update({\n        plane: plane.id,\n      });\n    },\n    [update]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: { id: string }) => {\n      await update({\n        loadMaster: lm.id,\n      });\n    },\n    [update]\n  );\n\n  const markAsLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load?.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const cancel = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: { id: Number(load?.id), state: LoadState.Cancelled },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const canDispatchAircraft = useRestriction(Permission.UpdateLoad);\n\n  const createAircraftDispatchAction = React.useCallback(\n    (minutes: number | null) => () => dispatchInMinutes(minutes),\n    [dispatchInMinutes]\n  );\n\n  const dispatchAtTime = React.useCallback(\n    async (time: number | null) => {\n      if (!load) {\n        return;\n      }\n      await update({\n        dispatchAt: !time ? null : DateTime.fromSeconds(time).toISO(),\n        state: time ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      refetch: queryVariables?.id ? refetch : noop,\n      fetchMore: queryVariables?.id ? () => fetchMore({ variables }) : uninitializedHandler,\n      load: data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n    }),\n    [\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      queryVariables?.id,\n      refetch,\n      data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import { OnDataOptions } from '@apollo/client';\nimport { DropzoneUserDetailsFragment, UserUpdatedSubscription } from 'app/api/operations';\nimport { DropzoneUserDetailsFragmentDoc, useUserUpdatedSubscription } from 'app/api/reflection';\nimport * as React from 'react';\n\nexport function useUserUpdated(dropzoneUserId?: string) {\n  const onData = React.useCallback(\n    ({ client, data: { data: result } }: OnDataOptions<UserUpdatedSubscription>) => {\n      if (result?.userUpdated?.dropzoneUser) {\n        console.debug('[Apollo::Subscription::UpdateUser]: Received update', result?.userUpdated);\n        const { dropzoneUser } = result.userUpdated;\n        client.cache.updateFragment<DropzoneUserDetailsFragment>(\n          {\n            fragment: DropzoneUserDetailsFragmentDoc,\n            fragmentName: 'dropzoneUserDetails',\n            broadcast: true,\n            id: client.cache.identify(dropzoneUser),\n          },\n          (previous) => ({\n            ...previous,\n            ...dropzoneUser,\n          })\n        );\n      }\n    },\n    []\n  );\n\n  return useUserUpdatedSubscription({\n    variables: { id: dropzoneUserId as string },\n    skip: !dropzoneUserId,\n    onData,\n  });\n}\n","import { useAppSignal } from 'app/components/app_signal';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  CreateOrderMutationVariables,\n  DropzoneUserEssentialsFragment,\n  DropzoneUserProfileFragment,\n  DropzoneUserQueryVariables,\n  OrderEssentialsFragment,\n  UpdateDropzoneUserMutationVariables,\n  UpdateUserMutationVariables,\n  UserEssentialsFragment,\n  UserFederationEssentialsFragment\n} from '../operations';\nimport {\n  DropzoneUserProfileDocument,\n  DropzoneUserProfileFragmentDoc,\n  DropzoneUsersDocument,\n  useCreateGhostMutation,\n  useCreateOrderMutation,\n  useDropzoneUserProfileLazyQuery,\n  useGrantPermissionMutation,\n  useJoinFederationMutation,\n  useRevokePermissionMutation,\n  useUpdateUserMutation\n} from '../reflection';\nimport { GhostInput, JoinFederationInput, Permission } from '../schema.d';\nimport createCRUDContext, { TMutationResponse, uninitializedHandler } from './factory';\nimport { useUserUpdated } from './subscriptions/useUserUpdated';\n\nfunction useUserProfile(variables?: Partial<DropzoneUserQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const { id } = variables || {};\n  const [updateMutation] = useUpdateUserMutation();\n  const [getProfile, query] = useDropzoneUserProfileLazyQuery();\n  const [mutationCreateOrder] = useCreateOrderMutation();\n  const [mutationCreateGhost] = useCreateGhostMutation();\n  const [updateFederation] = useJoinFederationMutation();\n  const {\n    dropzone: { dropzone }\n  } = useDropzoneContext();\n  const { appSignal } = useAppSignal();\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n  const canRevokePermission = useRestriction(Permission.RevokePermission);\n\n  const profile = React.useMemo(() => query?.data?.dropzoneUser, [query?.data?.dropzoneUser]);\n  useUserUpdated(profile?.id);\n\n  React.useEffect(() => {\n    if (authenticated && id && id !== query?.variables?.id) {\n      getProfile({ variables: { id } });\n    }\n  }, [authenticated, getProfile, id, query?.variables?.id]);\n\n  const create = React.useCallback(\n    async function CreateGhost(attributes: GhostInput): Promise<TMutationResponse<{ user: UserEssentialsFragment }>> {\n      try {\n        const response = await mutationCreateGhost({\n          variables: attributes,\n          refetchQueries: [\n            DropzoneUsersDocument,\n            { query: DropzoneUsersDocument, variables: { dropzoneId: dropzone?.id } }\n          ]\n        });\n\n        if (response?.data?.createGhost?.user?.id) {\n          return { user: response?.data?.createGhost?.user };\n        }\n        return {\n          error: response?.data?.createGhost?.errors?.[0],\n          fieldErrors: response?.data?.createGhost?.fieldErrors || undefined\n        };\n      } catch (error) {\n        console.debug('CreateGhost failed', error);\n        if (error instanceof Error) {\n          appSignal?.sendError(error);\n        }\n        return { error: 'Oh no, something went wrong' };\n      }\n    },\n    [appSignal, dropzone?.id, mutationCreateGhost]\n  );\n  const update = React.useCallback(\n    async function UpdateUser(\n      attributes: UpdateUserMutationVariables\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      const { data } = await updateMutation({\n        variables: {\n          dropzoneUser: query?.data?.dropzoneUser?.id,\n          ...attributes\n        }\n      });\n\n      if (data?.updateUser?.dropzoneUser?.id) {\n        return { dropzoneUser: data?.updateUser?.dropzoneUser };\n      }\n\n      return {\n        error: data?.updateUser?.errors?.[0],\n        fieldErrors: data?.updateUser?.fieldErrors || undefined\n      };\n    },\n    [query?.data?.dropzoneUser?.id, updateMutation]\n  );\n\n  const joinFederation = React.useCallback(\n    async function JoinFederation(\n      attributes: JoinFederationInput['attributes']\n    ): Promise<TMutationResponse<{ userFederation: UserFederationEssentialsFragment }>> {\n      const { data } = await updateFederation({\n        variables: attributes\n      });\n\n      if (data?.joinFederation?.userFederation?.id) {\n        return { userFederation: data?.joinFederation?.userFederation };\n      }\n\n      return {\n        error: data?.joinFederation?.errors?.[0],\n        fieldErrors: data?.joinFederation?.fieldErrors || undefined\n      };\n    },\n    [updateFederation]\n  );\n\n  const createOrder = React.useCallback(\n    async function CreateOrder(\n      attributes: CreateOrderMutationVariables\n    ): Promise<TMutationResponse<{ order: OrderEssentialsFragment }>> {\n      try {\n        const { data } = await mutationCreateOrder({\n          variables: {\n            ...attributes\n          },\n          update: (cache, { data: mutationResult }) => {\n            if (mutationResult?.createOrder?.order?.id) {\n              const { order } = mutationResult.createOrder;\n\n              if (order?.buyer?.__typename === 'DropzoneUser') {\n                // Deduct credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.buyer),\n                  data: order.buyer\n                });\n              } else if (order?.seller?.__typename === 'DropzoneUser') {\n                // Add credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.seller),\n                  data: order.seller\n                });\n              }\n            }\n          }\n        });\n        if (data?.createOrder?.order?.id) {\n          return { order: data?.createOrder?.order };\n        }\n\n        return {\n          error: data?.createOrder?.errors?.[0],\n          fieldErrors: data?.createOrder?.fieldErrors || undefined\n        };\n      } catch (error) {\n        appSignal.sendError(error as Error);\n        return { error: 'Something went wrong' };\n      }\n    },\n    [appSignal, mutationCreateOrder]\n  );\n\n  const addCredits = React.useCallback(\n    async function AddCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || 'Added funds',\n        seller: dropzoneUser.walletId,\n        buyer: dropzone.walletId,\n        dropzone: dropzone.id\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const withdrawCredits = React.useCallback(\n    async function DeductCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || 'Withdrew funds',\n        buyer: dropzoneUser.walletId,\n        seller: dropzone.walletId,\n        dropzone: dropzone.id\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const [revoke] = useRevokePermissionMutation();\n  const [grant] = useGrantPermissionMutation();\n\n  const grantPermission = React.useCallback(\n    async function GrantPermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canGrantPermission) {\n        return { error: 'You cannot grant permissions' };\n      }\n      const { data } = await grant({\n        variables: {\n          dropzoneUserId,\n          permissionName\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] }\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId\n            }\n          }\n        ]\n      });\n\n      if (data?.grantPermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.grantPermission?.dropzoneUser\n        };\n      }\n      return {\n        error: data?.grantPermission?.errors?.[0],\n        fieldErrors: data?.grantPermission?.fieldErrors || undefined\n      };\n    },\n    [canGrantPermission, dropzone?.id, grant]\n  );\n\n  const revokePermission = React.useCallback(\n    async function RevokePermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canRevokePermission) {\n        return { error: 'You cannot revoke permissions' };\n      }\n      const { data } = await revoke({\n        variables: {\n          dropzoneUserId,\n          permissionName\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] }\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId\n            }\n          }\n        ]\n      });\n\n      if (data?.revokePermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.revokePermission?.dropzoneUser\n        };\n      }\n      return {\n        error: data?.revokePermission?.errors?.[0],\n        fieldErrors: data?.revokePermission?.fieldErrors || undefined\n      };\n    },\n    [canRevokePermission, dropzone?.id, revoke]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading: query?.loading,\n      dropzoneUser: query?.data?.dropzoneUser,\n      refetch: query?.refetch,\n      create,\n      update,\n      addCredits,\n      grantPermission,\n      joinFederation,\n      revokePermission,\n      withdrawCredits\n    }),\n    [\n      addCredits,\n      grantPermission,\n      joinFederation,\n      query?.refetch,\n      create,\n      query?.data?.dropzoneUser,\n      query?.loading,\n      revokePermission,\n      update,\n      withdrawCredits\n    ]\n  );\n}\n\nconst { Provider: UserProfileProvider, useContext: useUserProfileContext } = createCRUDContext(useUserProfile, {\n  loading: false,\n  dropzoneUser: null,\n  joinFederation: uninitializedHandler as never,\n  refetch: uninitializedHandler as never,\n  update: uninitializedHandler as never,\n  create: uninitializedHandler as never,\n  addCredits: uninitializedHandler as never,\n  withdrawCredits: uninitializedHandler as never,\n  grantPermission: uninitializedHandler as never,\n  revokePermission: uninitializedHandler as never\n});\n\nexport { UserProfileProvider, useUserProfileContext, useUserProfile };\n","import { OnDataOptions } from '@apollo/client';\nimport { LoadCreatedSubscription, LoadsQuery, LoadsQueryVariables } from 'app/api/operations';\nimport { useLoadCreatedSubscription, LoadsDocument } from 'app/api/reflection';\nimport { DateTime } from 'luxon';\nimport uniqBy from 'lodash/uniqBy';\nimport * as React from 'react';\n\nexport function useLoadCreated(variables: Partial<LoadsQueryVariables>) {\n  const onData = React.useCallback(\n    ({ client, data: { data: result } }: OnDataOptions<LoadCreatedSubscription>) => {\n      if (result?.loadCreated?.load?.id) {\n        const { load } = result.loadCreated;\n        console.debug('[Subscription::LoadCreated] Adding new load to the board...', variables, load);\n        client.cache.updateQuery<LoadsQuery>(\n          {\n            query: LoadsDocument,\n            broadcast: true,\n            variables: {\n              ...variables,\n              date: DateTime.fromISO(load.createdAt).toISODate()\n            }\n          },\n          (previous) => ({\n            ...previous,\n            loads: {\n              ...(previous?.loads || {}),\n              edges: uniqBy(\n                previous?.loads?.edges?.some((existing) => existing?.node?.id === load?.id)\n                  ? previous?.loads?.edges\n                  : [{ node: load, __typename: 'LoadEdge' }, ...(previous?.loads?.edges || [])],\n                (edge) => edge?.node?.id\n              )\n            }\n          })\n        );\n\n        console.debug('[Subscription::LoadCreated] Added new load to the board', load);\n      } else {\n        console.debug('[Subscription::LoadCreated] Received subscription data without load id', result);\n      }\n    },\n    [variables]\n  );\n\n  return useLoadCreatedSubscription({\n    skip: !variables?.dropzone,\n    shouldResubscribe: true,\n    variables: {\n      dropzoneId: variables?.dropzone as string\n    },\n    onData\n  });\n}\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport uniqBy from 'lodash/uniqBy';\nimport {\n  useLoadsQuery,\n  useManifestGroupMutation,\n  useManifestUserMutation,\n  useMoveSlotMutation,\n  useDeleteSlotMutation,\n  useCreateLoadMutation,\n  LoadDocument\n} from '../reflection';\nimport {\n  CreateLoadMutationVariables,\n  DeleteSlotMutationVariables,\n  LoadDetailsFragment,\n  LoadsQueryVariables,\n  ManifestGroupMutationVariables,\n  ManifestUserMutationVariables,\n  MoveSlotMutationVariables,\n  SlotExhaustiveFragment\n} from '../operations';\nimport { TMutationResponse } from './factory';\nimport { Permission } from '../schema.d';\nimport { useLoadCreated } from './subscriptions/useLoadCreatedSubscription';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nexport default function useManifest({ dropzone, date }: UseManifestOptions) {\n  const state = useAppSelector((root) => root.global);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n  const canDeleteOwnSlot = useRestriction(Permission.DeleteSlot);\n  const canDeleteSlot = useRestriction(Permission.DeleteUserSlot);\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const canUpdateSlot = useRestriction(Permission.UpdateSlot);\n  const canUpdateOwnSlot = useRestriction(Permission.UpdateUserSlot);\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const permissions = React.useMemo(\n    () => ({\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestSelf,\n      canManifestOthers,\n      canUpdateSlot,\n      canUpdateOwnSlot\n    }),\n    [\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestOthers,\n      canManifestSelf,\n      canUpdateOwnSlot,\n      canUpdateSlot\n    ]\n  );\n\n  const variables: LoadsQueryVariables | undefined = React.useMemo(() => {\n    if (!dropzone) {\n      return undefined;\n    }\n    return {\n      dropzone,\n      date\n    };\n  }, [date, dropzone]);\n\n  const query = useLoadsQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken || !dropzone\n  });\n\n  const [moveSlotMutation] = useMoveSlotMutation();\n  const [deleteSlotMutation] = useDeleteSlotMutation();\n  const [manifestGroupMutation] = useManifestGroupMutation();\n  const [manifestUserMutation] = useManifestUserMutation();\n  const [createLoadMutation] = useCreateLoadMutation();\n  useLoadCreated(variables as LoadsQueryVariables);\n\n  const { loading, fetchMore, refetch, data, called, updateQuery } = query;\n\n  const moveSlot = React.useCallback(\n    async function MoveSlot(\n      sourceLoad: string,\n      mutationVariables: MoveSlotMutationVariables\n    ): Promise<TMutationResponse<{ loads: LoadDetailsFragment[] }>> {\n      const result = await moveSlotMutation({\n        variables: mutationVariables,\n        refetchQueries: [\n          { query: LoadDocument, variables: { id: sourceLoad } },\n          { query: LoadDocument, variables: { id: mutationVariables?.targetLoad?.toString() } }\n        ]\n      });\n\n      if (result?.data?.moveSlot?.fieldErrors?.length || result?.data?.moveSlot?.errors?.length) {\n        return {\n          error: result?.data?.moveSlot?.errors?.[0],\n          fieldErrors: result?.data?.moveSlot?.fieldErrors || undefined\n        };\n      }\n      if (result.data?.moveSlot?.loads) {\n        return {\n          loads: result.data.moveSlot.loads\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined\n      };\n    },\n    [moveSlotMutation]\n  );\n\n  const manifestUser = React.useCallback(\n    async function ManifestUser(\n      mutationVariables: ManifestUserMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await manifestUserMutation({ variables: mutationVariables });\n\n      if (result?.data?.createSlot?.fieldErrors?.length || result?.data?.createSlot?.errors?.length) {\n        return {\n          error: result?.data?.createSlot?.errors?.[0],\n          fieldErrors: result?.data?.createSlot?.fieldErrors || undefined\n        };\n      }\n      if (result.data?.createSlot?.slot) {\n        return {\n          slot: result.data.createSlot.slot\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined\n      };\n    },\n    [manifestUserMutation]\n  );\n\n  const manifestGroup = React.useCallback(\n    async function ManifestGroup(\n      mutationVariables: ManifestGroupMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await manifestGroupMutation({ variables: mutationVariables });\n\n      if (result?.data?.createSlots?.fieldErrors?.length || result?.data?.createSlots?.errors?.length) {\n        return {\n          error: result?.data?.createSlots?.errors?.[0],\n          fieldErrors: result?.data?.createSlots?.fieldErrors || undefined\n        };\n      }\n      if (result.data?.createSlots?.load?.id) {\n        return {\n          load: result.data.createSlots.load\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined\n      };\n    },\n    [manifestGroupMutation]\n  );\n\n  const deleteSlot = React.useCallback(\n    async function DeleteSlot(\n      mutationVariables: DeleteSlotMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await deleteSlotMutation({ variables: mutationVariables });\n\n      if (result?.data?.deleteSlot?.fieldErrors?.length || result?.data?.deleteSlot?.errors?.length) {\n        return {\n          error: result?.data?.deleteSlot?.errors?.[0],\n          fieldErrors: result?.data?.deleteSlot?.fieldErrors || undefined\n        };\n      }\n      if (result.data?.deleteSlot?.slot?.id) {\n        return {\n          slot: result.data.deleteSlot?.slot\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined\n      };\n    },\n    [deleteSlotMutation]\n  );\n\n  const createLoad = React.useCallback(\n    async function CreateLoad(\n      mutationVariables: CreateLoadMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await createLoadMutation({ variables: mutationVariables });\n\n      if (result?.data?.createLoad?.fieldErrors?.length || result?.data?.createLoad?.errors?.length) {\n        return {\n          error: result?.data?.createLoad?.errors?.[0],\n          fieldErrors: result?.data?.createLoad?.fieldErrors || undefined\n        };\n      }\n      if (result?.data?.createLoad?.load?.id) {\n        const { load } = result.data.createLoad;\n        updateQuery((previous) => ({\n          ...previous,\n          loads: {\n            ...previous?.loads,\n            edges: uniqBy(\n              previous?.loads?.edges?.some((existing) => existing?.node?.id === load?.id)\n                ? previous?.loads?.edges\n                : [{ node: load, __typename: 'LoadEdge' }, ...(previous?.loads?.edges || [])],\n              (edge) => edge?.node?.id\n            )\n          }\n        }));\n        return {\n          load: result.data.createLoad.load\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined\n      };\n    },\n    [createLoadMutation, updateQuery]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      moveSlot,\n      manifestUser,\n      manifestGroup,\n      deleteSlot,\n      createLoad,\n      permissions,\n      variables,\n      loads: data?.loads?.edges?.map((edge) => edge?.node) || []\n    }),\n    [\n      called,\n      variables,\n      createLoad,\n      data?.loads?.edges,\n      deleteSlot,\n      fetchMore,\n      loading,\n      permissions,\n      manifestGroup,\n      manifestUser,\n      moveSlot,\n      refetch\n    ]\n  );\n}\n\nexport { useManifest };\n","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  useCreateTicketTypeMutation,\n  useCreateTicketAddonMutation,\n  useUpdateTicketAddonMutation,\n  useUpdateTicketTypeMutation,\n  useArchiveTicketTypeMutation,\n  TicketTypesDocument,\n  TicketTypeExtrasDocument,\n  useTicketTypesLazyQuery,\n} from '../reflection';\nimport {\n  CreateTicketAddonMutationVariables,\n  CreateTicketTypeMutationVariables,\n  TicketTypeAddonDetailsFragment,\n  TicketTypeEssentialsFragment,\n  TicketTypesQueryVariables,\n  UpdateTicketAddonMutationVariables,\n  UpdateTicketTypeMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useTickets(vars?: Partial<TicketTypesQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const variables: TicketTypesQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzone) {\n      return vars as TicketTypesQueryVariables;\n    }\n    return undefined;\n  }, [vars]);\n\n  const [getTickets, query] = useTicketTypesLazyQuery();\n  React.useEffect(() => {\n    if (authenticated && variables?.dropzone && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Tickets] Fetching tickets', variables);\n      getTickets({ variables });\n    }\n  }, [authenticated, getTickets, query.variables, variables]);\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const ticketTypes = React.useMemo(() => data?.ticketTypes, [data?.ticketTypes]);\n  const [createTicket] = useCreateTicketTypeMutation();\n  const [updateTicket] = useUpdateTicketTypeMutation();\n  const [archiveTicket] = useArchiveTicketTypeMutation();\n  const [createAddon] = useCreateTicketAddonMutation();\n  const [updateAddon] = useUpdateTicketAddonMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzone) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const createTicketType = React.useCallback(\n    async function CreateTicketType(\n      attributes: Omit<CreateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await createTicket({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [{ query: TicketTypesDocument, variables: { dropzone: dropzone?.id } }],\n      });\n\n      if (response?.data?.createTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.createTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.createTicketType?.errors?.[0],\n        fieldErrors: response?.data?.createTicketType?.fieldErrors || undefined,\n      };\n    },\n    [createTicket, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketType = React.useCallback(\n    async function UpdateTicketType(\n      id: number,\n      attributes: Omit<UpdateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await updateTicket({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.updateTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.updateTicketType?.errors?.[0],\n        fieldErrors: response?.data?.updateTicketType?.fieldErrors || undefined,\n      };\n    },\n    [updateTicket]\n  );\n\n  const createTicketTypeAddon = React.useCallback(\n    async function CreateTicketTypeAddon(\n      attributes: Omit<CreateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await createAddon({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [\n          {\n            query: TicketTypeExtrasDocument,\n            variables: { dropzoneId: dropzone?.id },\n            fetchPolicy: 'network-only',\n          },\n        ],\n      });\n\n      if (response?.data?.createExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.createExtra?.extra };\n      }\n      return {\n        error: response?.data?.createExtra?.errors?.[0],\n        fieldErrors: response?.data?.createExtra?.fieldErrors || undefined,\n      };\n    },\n    [createAddon, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketTypeAddon = React.useCallback(\n    async function UpdateTicketTypeAddon(\n      id: number,\n      attributes: Omit<UpdateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await updateAddon({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.updateExtra?.extra };\n      }\n      return {\n        error: response?.data?.updateExtra?.errors?.[0],\n        fieldErrors: response?.data?.updateExtra?.fieldErrors || undefined,\n      };\n    },\n    [updateAddon]\n  );\n\n  const archiveTicketType = React.useCallback(\n    async function ArchiveTicket(\n      ticketType: TicketTypeEssentialsFragment\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await archiveTicket({\n        variables: { id: Number(ticketType.id) },\n        optimisticResponse: {\n          archiveTicketType: {\n            __typename: 'DeleteTicketPayload',\n            errors: null,\n            fieldErrors: null,\n            ticketType,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.archiveTicketType?.ticketType?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.archiveTicketType.ticketType) });\n        },\n      });\n\n      if (response?.data?.archiveTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.archiveTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.archiveTicketType?.errors?.[0],\n        fieldErrors: response?.data?.archiveTicketType?.fieldErrors || undefined,\n      };\n    },\n    [archiveTicket]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzone ? refetch : noop,\n      fetchMore: queryVariables?.dropzone ? () => fetchMore({ variables }) : uninitializedHandler,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzone,\n      refetch,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  useCreateAircraftMutation,\n  useUpdateAircraftMutation,\n  PlanesDocument,\n  useArchivePlaneMutation,\n  usePlanesLazyQuery,\n} from '../reflection';\nimport {\n  CreateAircraftMutationVariables,\n  PlanesQuery,\n  DropzoneQueryVariables,\n  PlaneEssentialsFragment,\n  PlanesQueryVariables,\n  UpdateAircraftMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useAircrafts(vars?: Partial<PlanesQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const [getAircrafts, query] = usePlanesLazyQuery({\n    variables,\n  });\n\n  React.useEffect(() => {\n    if (authenticated && variables?.dropzoneId && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Aircrafts] Fetching aircrafts', variables);\n      getAircrafts({ variables });\n    }\n  }, [authenticated, getAircrafts, query?.variables, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [createAircraft] = useCreateAircraftMutation();\n  const [updateAircraft] = useUpdateAircraftMutation();\n  const [archiveAircraft] = useArchivePlaneMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const create = React.useCallback(\n    async function CreateAircraft(\n      attributes: CreateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      const response = await createAircraft({\n        variables: { attributes },\n        refetchQueries: [{ query: PlanesDocument, variables: { dropzoneId: dropzone.id } }],\n        update: (cache, { data: mutationData }) => {\n          cache.updateQuery<PlanesQuery, PlanesQueryVariables>(\n            {\n              query: PlanesDocument,\n              variables: { dropzoneId: dropzone.id },\n              id: cache.identify(dropzone),\n            },\n            (prev) => {\n              if (!prev) {\n                return undefined;\n              }\n              if (!mutationData?.createPlane?.plane) {\n                return prev;\n              }\n\n              return {\n                ...prev,\n                planes: [...(prev?.planes || []), mutationData.createPlane.plane],\n              };\n            }\n          );\n        },\n      });\n\n      if (response?.data?.createPlane?.plane?.id) {\n        return { aircraft: response?.data?.createPlane?.plane };\n      }\n      return {\n        error: response?.data?.createPlane?.errors?.[0],\n        fieldErrors: response?.data?.createPlane?.fieldErrors || undefined,\n      };\n    },\n    [createAircraft, dropzone]\n  );\n\n  const update = React.useCallback(\n    async function UpdateAircraft(\n      id: number,\n      attributes: UpdateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await updateAircraft({ variables: { id, attributes } });\n\n      if (response?.data?.updatePlane?.plane?.id) {\n        return { aircraft: response?.data?.updatePlane?.plane };\n      }\n      return {\n        error: response?.data?.updatePlane?.errors?.[0],\n        fieldErrors: response?.data?.updatePlane?.fieldErrors || undefined,\n      };\n    },\n    [updateAircraft]\n  );\n\n  const archive = React.useCallback(\n    async function ArchiveAircraft(\n      plane: PlaneEssentialsFragment\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await archiveAircraft({\n        variables: { id: Number(plane.id) },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deletePlane: {\n            __typename: 'DeletePlanePayload',\n            errors: null,\n            fieldErrors: null,\n            plane,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.deletePlane?.plane?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.deletePlane.plane) });\n        },\n      });\n\n      if (response?.data?.deletePlane?.plane?.id) {\n        return { aircraft: response?.data?.deletePlane?.plane };\n      }\n      return {\n        error: response?.data?.deletePlane?.errors?.[0],\n        fieldErrors: response?.data?.deletePlane?.fieldErrors || undefined,\n      };\n    },\n    [archiveAircraft]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      aircrafts: data?.planes,\n      create,\n      update,\n      archive,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzoneId,\n      refetch,\n      data?.planes,\n      create,\n      update,\n      fetchMore,\n      variables,\n      archive,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { Drawer, Typography } from '@mui/material';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n  disablePadding?: boolean;\n\n  snapPoints?: (string | number)[];\n  scrollable?: boolean;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nfunction DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, disablePadding, buttonAction, title, loading, open, children, onClose } = props;\n  const theme = useTheme();\n\n  return (\n    <Drawer {...{ open, onClose }} anchor=\"right\" PaperProps={{ style: { width: 400 } }}>\n      <ProgressBar indeterminate color={theme?.colors?.primary} visible={loading} style={{ width: '100%' }} />\n      {!title ? null : (\n        <Typography variant=\"h5\" style={{ marginBottom: 16, paddingLeft: 16, paddingRight: 16, marginTop: 16 }}>\n          {title}\n          <IconButton icon=\"close\" style={styles.close} size={24} onPress={onClose} />\n        </Typography>\n      )}\n      <View style={{ padding: disablePadding ? 0 : 16, paddingBottom: 0 }}>{children}</View>\n      <Dialog.Actions style={{ justifyContent: 'flex-end', backgroundColor: 'transparent', marginBottom: 16 }}>\n        <Button mode=\"contained\" disabled={loading} {...{ loading }} onPress={buttonAction} style={styles.button}>\n          {buttonLabel}\n        </Button>\n      </Dialog.Actions>\n    </Drawer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  noPadding: { borderBottomWidth: 0, paddingLeft: 0, paddingRight: 0 },\n  defaultPadding: { borderBottomWidth: 0, paddingLeft: 24, paddingRight: 24 },\n  button: {\n    width: '100%',\n    padding: 5,\n    alignSelf: 'flex-end',\n    borderRadius: 20,\n    height: 42,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  close: { position: 'absolute', top: 4, right: 4 }\n});\n\nexport default DialogOrSheet;\n","import * as React from 'react';\nimport { Controller, ControllerProps, FieldValues, Path } from 'react-hook-form';\n\ninterface IMinimalHookFormProps<V> {\n  error?: string | null;\n  value?: V;\n  onChange?(value: V): void;\n}\n\nexport function withHookForm<BaseProps extends object, Value = unknown>(Component: React.ComponentType<BaseProps>) {\n  return function WithHookForm<Fields extends FieldValues, TName extends Path<Fields>>(\n    props: Omit<BaseProps, 'value' | 'onChange' | 'error'> &\n      Pick<ControllerProps<Fields, TName>, 'control' | 'name' | 'rules' | 'defaultValue'>\n  ) {\n    const { control, name, rules, defaultValue, ...rest } = props;\n\n    return (\n      <Controller\n        {...{ control, name, rules }}\n        render={({ field: { onChange, onBlur, value }, fieldState }) => (\n          <Component\n            {...(rest as BaseProps)}\n            {...{ value, onBlur }}\n            onChange={(val) => {\n              console.debug('CHANGE: ', val);\n              onChange(val);\n            }}\n            error={fieldState?.error?.message}\n          />\n        )}\n      />\n    );\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ITextFieldProps\n  extends Omit<Extract<typeof TextInput>, 'onChange' | 'onChangeText' | 'error'> {\n  error?: string | null;\n  helperText?: string | null;\n  onChangeText?(newValue: string): void;\n  onChange?(newValue: string): void;\n}\n\nfunction TextField(props: ITextFieldProps) {\n  const { error, helperText, onChangeText: setText, onChange, style, ...rest } = props;\n  const onChangeText = onChange || setText;\n  const theme = useTheme();\n  return (\n    <>\n      <TextInput\n        mode=\"outlined\"\n        style={StyleSheet.flatten([styles.field, { backgroundColor: theme.colors.surface }, style])}\n        {...rest}\n        {...{ onChangeText }}\n        error={!!error}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const FormTextField = withHookForm(TextField);\n\nexport default TextField;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import * as React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nexport enum NumberFieldType {\n  Cash = 'cash',\n  Weight = 'weight',\n  CanopySize = 'canopySize',\n}\ninterface INumberFieldProps {\n  error?: string | null;\n  label?: string;\n  helperText?: string;\n  disabled?: boolean;\n  value?: number | null;\n  mode?: 'outlined' | 'flat';\n  variant?: NumberFieldType | null;\n  onChange(newValue: number): void;\n}\n\nconst adornments = {\n  [NumberFieldType.Cash]: '$',\n  [NumberFieldType.CanopySize]: 'ft',\n  [NumberFieldType.Weight]: 'kg',\n};\nconst muiVariants = {\n  flat: 'standard',\n  outlined: 'outlined',\n};\nexport default function NumberField(props: INumberFieldProps) {\n  const {\n    label,\n    mode,\n    disabled,\n    onChange: onChangeValue,\n    helperText,\n    error,\n    variant,\n    ...rest\n  } = props;\n  const { value } = rest;\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeValue(parseInt(e.target.value, 10));\n    },\n    [onChangeValue]\n  );\n\n  return (\n    <FormControl\n      style={{ paddingRight: 8 }}\n      variant={\n        mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n      }\n      fullWidth\n    >\n      <TextField\n        type=\"number\"\n        fullWidth\n        variant={\n          mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n        }\n        {...{ label, disabled, value, onChange }}\n        InputProps={{\n          ...(variant && variant !== NumberFieldType.Cash\n            ? {\n                endAdornment: <InputAdornment position=\"end\">{adornments[variant]}</InputAdornment>,\n              }\n            : {}),\n          ...(variant !== NumberFieldType.Cash\n            ? {}\n            : {\n                startAdornment: (\n                  <InputAdornment position=\"start\">{adornments[variant]}</InputAdornment>\n                ),\n              }),\n        }}\n      />\n      <FormHelperText error={!!error}>{error || helperText || ' '}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Chip as MaterialChip, useTheme } from 'react-native-paper';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nexport type ChipProps = Omit<ExtractProps<typeof MaterialChip>, 'icon'> & {\n  icon?: ExtractProps<typeof MaterialCommunityIcons>['name'];\n} & {\n  small?: boolean;\n  color?: string;\n  backgroundColor?: string;\n};\nexport default function Chip(props: ChipProps) {\n  const { small, icon, color: assignedColor, mode, style, backgroundColor, ...rest } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n\n  const chipStyle: ChipProps['style'] = React.useMemo(\n    () => ({\n      marginHorizontal: 4,\n      backgroundColor: mode !== 'flat' ? backgroundColor : undefined,\n      height: small ? 25 : undefined,\n      alignItems: 'center' as const,\n      borderColor: mode !== 'flat' ? color || undefined : undefined,\n    }),\n    [backgroundColor, color, mode, small]\n  );\n  const iconStyles: ChipProps['style'] = React.useMemo(\n    () => (Platform.OS === 'web' ? {} : { marginTop: 0, marginBottom: 3 }),\n    []\n  );\n\n  return (\n    <MaterialChip\n      mode={mode || 'outlined'}\n      selectedColor={color}\n      style={[chipStyle, style]}\n      icon={\n        icon\n          ? (iconProps) => <MaterialCommunityIcons name={icon} {...iconProps} style={iconStyles} />\n          : undefined\n      }\n      textStyle={iconStyles}\n      {...rest}\n    />\n  );\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { Platform, View, StyleSheet } from 'react-native';\nimport Chip, { ChipProps } from 'app/components/chips/Chip';\nimport { HelperText } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { withHookForm } from '../withHookForm';\n\nexport interface IChipSelect<T> {\n  items: T[];\n  value: T[];\n  autoSelectFirst?: boolean;\n  allowEmpty?: boolean;\n  icon?: ChipProps['icon'];\n  error?: string | null;\n  variant?: 'scroll' | 'flat';\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChange(newItems: T[]): void;\n}\n\nfunction ChipSelect<T>(props: IChipSelect<T>) {\n  const {\n    items,\n    allowEmpty,\n    value,\n    variant = 'flat',\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChange,\n    autoSelectFirst,\n    error,\n  } = props;\n\n  React.useEffect(() => {\n    if (items?.length && (!value || !value.length) && autoSelectFirst) {\n      onChange([items[0]]);\n    }\n  }, [value, autoSelectFirst, onChange, items]);\n\n  const Wrapper = React.useCallback(\n    ({ children }: React.PropsWithChildren<object>) =>\n      variant === 'scroll' ? (\n        <ScrollView horizontal>{children} </ScrollView>\n      ) : (\n        (children as JSX.Element)\n      ),\n    [variant]\n  );\n\n  return (\n    <Wrapper>\n      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n        {items?.map((item) => {\n          const isItemSelected = isSelected\n            ? isSelected(item)\n            : value.some((selected) => isEqual(item, selected));\n          return (\n            <Chip\n              key={JSON.stringify(item)}\n              small\n              mode={!isItemSelected ? 'flat' : 'outlined'}\n              icon={\n                !value?.some((selected) =>\n                  isSelected ? isSelected(selected) : isEqual(item, selected)\n                ) && icon\n                  ? icon\n                  : undefined\n              }\n              style={{ margin: Platform.OS === 'web' ? 4 : 1 }}\n              disabled={isDisabled?.(item) || false}\n              selected={isItemSelected}\n              onPress={() =>\n                onChange(\n                  !allowEmpty && value.length === 1\n                    ? [item]\n                    : xorBy(value, [item], isSelected || JSON.stringify)\n                )\n              }\n            >\n              {renderItemLabel(item)}\n            </Chip>\n          );\n        })}\n      </View>\n      <HelperText style={styles.helperText} type=\"error\">\n        {error || ''}\n      </HelperText>\n    </Wrapper>\n  );\n}\n\nconst styles = StyleSheet.create({\n  helperText: {\n    marginBottom: 16,\n  },\n});\n\nconst ChipSelectComponent = React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected', 'error']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected', 'error'])\n  );\n}) as typeof ChipSelect;\n\nexport const ChipSelectField = withHookForm(ChipSelect);\n\nexport default ChipSelectComponent;\n","import * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Color from 'color';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nconst defaultColors = {\n  boneColor: '#E1E9EE',\n  highlightColor: '#F2F8FC',\n};\n\nexport default function ThemedSkeleton(props: ExtractProps<typeof SkeletonContent>) {\n  const theme = useTheme();\n  const boneColor = theme.dark\n    ? Color(defaultColors.boneColor).negate().rgb().toString()\n    : defaultColors.boneColor;\n  const highlightColor = theme.dark\n    ? Color(defaultColors.highlightColor).negate().rgb().toString()\n    : defaultColors.highlightColor;\n\n  return <SkeletonContent {...{ boneColor, highlightColor }} {...props} />;\n}\n","import * as React from 'react';\nimport SkeletonContent from 'app/components/Skeleton';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { ChipProps } from 'app/components/chips/Chip';\nimport ChipSelect from './ChipSelect';\nimport type { IChipSelect } from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserChipSelect extends Pick<IChipSelect<unknown>, 'variant' | 'error'> {\n  value?: DropzoneUserEssentialsFragment | null;\n  label: string;\n  icon?: ChipProps['icon'];\n  requiredPermissions: Permission[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(dzuser: DropzoneUserEssentialsFragment): void;\n}\n\nfunction DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const { label, requiredPermissions, icon, value, variant, error, onLoadingStateChanged, onChange } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions\n    }\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]: DropzoneUserEssentialsFragment[]) => (first ? onChange(first) : null),\n    [onChange]\n  );\n  const getItemLabel = React.useCallback((dzUser: DropzoneUserEssentialsFragment) => dzUser?.user.name, []);\n  const isSelected = React.useCallback((item: DropzoneUserEssentialsFragment) => item.id === value?.id, [value?.id]);\n  const selected = React.useMemo(() => [value].filter(Boolean) as DropzoneUserEssentialsFragment[], [value]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUserEssentialsFragment>\n        {...{ error, variant }}\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={\n          uniqBy(\n            data?.dropzoneUsers?.edges?.map((edge) => edge?.node) || [],\n            (node) => node?.id\n          ) as DropzoneUserEssentialsFragment[]\n        }\n        value={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChange={onChangeSelected}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserChipSelectField = withHookForm(DropzoneUserChipSelect);\n\nexport default DropzoneUserChipSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  userId?: number | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onChange, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect<JumpTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={\n          uniqBy(\n            [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n            ({ id }) => id\n          ) || []\n        }\n        value={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const JumpTypeChipSelectField = withHookForm(JumpTypeChipSelect);\n\nexport default JumpTypeChipSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  error?: string | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onChange, value, error } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<LicenseEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        value={[value].filter(Boolean) as LicenseEssentialsFragment[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const LicenseChipSelectField = withHookForm(LicenseChipSelect);\n\nexport default LicenseChipSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: PlaneEssentialsFragment): void;\n}\n\nfunction PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onChange, onLoadingStateChanged, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<PlaneEssentialsFragment>\n        autoSelectFirst\n        {...{ error }}\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        value={[value].filter(Boolean) as PlaneEssentialsFragment[]}\n        renderItemLabel={(plane: PlaneEssentialsFragment) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChange={([first]) => (first ? onChange(first as PlaneEssentialsFragment) : null)}\n      />\n    </>\n  );\n}\n\nexport const PlaneChipSelectField = withHookForm(PlaneChipSelect);\n\nexport default PlaneChipSelect;\n","import { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedTicketTypesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  onlyPublicTickets?: boolean;\n  error?: string;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onChange, onlyPublicTickets, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useAllowedTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect<TicketTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={data?.ticketTypes || []}\n        value={[value].filter(Boolean) as TicketTypeEssentialsFragment[]}\n        renderItemLabel={(ticketType) => `${ticketType?.name} ($${ticketType?.cost})`}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const TicketTypeChipSelectField = withHookForm(TicketTypeChipSelect);\n\nexport default TicketTypeChipSelect;\n","import { withHookForm } from '../withHookForm';\nimport NumberField from './NumberField';\n\nexport const FormNumberField = withHookForm(NumberField);\n\nexport default NumberField;\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string | null;\n  name?: string | null;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, size, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text\n      label={initals || ''}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\nimport first from 'lodash/first';\n\ninterface IUserAvatarProps {\n  image?: string | null;\n  name?: string | null;\n  size?: number;\n}\n\nfunction stringToColor(string: string) {\n  let hash = 0;\n  let i;\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, size } = props;\n  const initials = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return (\n    <Avatar\n      sx={{\n        bgcolor: stringToColor(name || 'Dropzone User')\n      }}\n      style={{ height: size, width: size, alignSelf: 'center', marginRight: 12 }}\n      src={image || undefined}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n","import * as React from 'react';\nimport MuiMenu from '@mui/material/Menu';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport { View, TouchableOpacity, GestureResponderEvent } from 'react-native';\nimport { ListItemAvatar, ListItemIcon, ListItemText } from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IPopoverMenuProps {\n  open: boolean;\n  anchor: React.ReactNode;\n  children: React.ReactNode;\n  setOpen(open: boolean): void;\n}\n\ninterface IMenuItemProps {\n  title?: string | null;\n  testID?: string;\n  bold?: boolean;\n  icon?: IconSource;\n  avatar?: { name: string; image?: string } | null;\n  onPress(): void;\n}\n\nexport function MenuItem(props: IMenuItemProps) {\n  const { title, bold, onPress, avatar, icon, testID } = props;\n  return (\n    <MuiMenuItem\n      style={{ fontWeight: bold ? 'bold' : undefined }}\n      onClick={onPress}\n      data-testid={testID}\n    >\n      {!icon || avatar ? null : (\n        <ListItemIcon>\n          {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon} /> : null}\n          {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n        </ListItemIcon>\n      )}\n      {!avatar ? null : (\n        <ListItemAvatar>\n          <UserAvatar name={avatar.name} image={avatar?.image} size={32} />\n        </ListItemAvatar>\n      )}\n      <ListItemText>{title}</ListItemText>\n    </MuiMenuItem>\n  );\n}\n\nexport default function Menu(props: IPopoverMenuProps) {\n  const { open, setOpen, anchor, children } = props;\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const ref = React.useRef<TouchableOpacity>(null);\n  const onClick = React.useCallback(\n    (event: GestureResponderEvent) => {\n      setOpen(true);\n      console.log({ event });\n      setAnchorEl(event.currentTarget as unknown as Element);\n    },\n    [setOpen]\n  );\n  const onClose = React.useCallback(() => {\n    setAnchorEl(null);\n    setOpen(false);\n  }, [setOpen]);\n\n  return (\n    <>\n      <TouchableOpacity ref={ref} onPress={onClick}>\n        <View pointerEvents=\"none\">{anchor}</View>\n      </TouchableOpacity>\n      <MuiMenu\n        {...{ anchorEl, onClose, open }}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {children}\n      </MuiMenu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport MuiSelect from '@mui/material/Select';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport { FormControl, InputLabel, FormHelperText, ListItemIcon, ListItemAvatar, ListItemText } from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport UserAvatar from 'app/components/UserAvatar';\nimport Menu from 'app/components/popover/Menu';\nimport { isEqual } from 'lodash';\n\nexport interface ISelectOption<T> {\n  label: string;\n  value: T;\n  icon?: IconSource;\n  avatar?: string | null;\n}\ninterface ISelectProps<T> {\n  label?: string;\n  error?: string | null;\n  helperText?: string;\n  options: ISelectOption<T>[];\n  value?: T | null;\n  onChange(item: T): void;\n  compare?(a: T | null | undefined, b: T | null | undefined): boolean;\n  renderAnchor?: React.FC<IAnchorProps<T>>;\n}\n\ninterface IAnchorProps<T> {\n  item?: ISelectOption<T>;\n  openMenu(): void;\n}\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : unknown;\ntype AllowedIcons = Extract<typeof MaterialCommunityIcons>['name'];\n\nexport default function Select<T>(props: ISelectProps<T>) {\n  const { label, error, compare = isEqual, options, renderAnchor, onChange, value, helperText } = props;\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const onOpen = React.useCallback(() => {\n    if (!options?.length) {\n      return;\n    }\n    setOpen(true);\n  }, [options?.length]);\n  const onDismiss = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const selectedOption = React.useMemo(\n    () => options.find((option) => compare(option.value, value)),\n    [compare, options, value]\n  );\n\n  const createSelectHandler = React.useCallback(\n    (option: ISelectOption<T>) => () => {\n      onDismiss();\n      onChange(option.value);\n    },\n    [onChange, onDismiss]\n  );\n  const showAvatars = React.useMemo(() => options?.some((option) => option.avatar), [options]);\n\n  const anchor = React.useMemo(\n    () =>\n      typeof renderAnchor === 'function'\n        ? (renderAnchor as Function)({ item: selectedOption, openMenu: onOpen })\n        : null,\n    [onOpen, renderAnchor, selectedOption]\n  );\n\n  if (renderAnchor) {\n    return (\n      <Menu {...{ anchor, open, setOpen }}>\n        {options?.map((option) => {\n          const { icon, avatar, label: title } = option;\n\n          return (\n            // @ts-ignore\n            <MuiMenuItem onClick={createSelectHandler(option)}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} /> : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n\n              <ListItemText>{title}</ListItemText>\n            </MuiMenuItem>\n          );\n        })}\n      </Menu>\n    );\n  }\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\n      <MuiSelect\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={selectedOption?.value ? JSON.stringify(selectedOption?.value) : null}\n        defaultValue={selectedOption?.value ? JSON.stringify(selectedOption?.value) : null}\n        {...{ label }}\n        variant=\"standard\"\n        error={!!error}\n        style={{ paddingTop: 0 }}\n        native={false}\n        SelectDisplayProps={{\n          style: { display: 'inline-flex', alignItems: 'center' }\n        }}\n        onChange={({ target }) => {\n          const option = options.find((opt) => JSON.stringify(opt.value) === target.value);\n          if (option) {\n            onChange(option.value);\n          }\n        }}\n      >\n        {options?.map(({ value: val, icon, avatar, label: title }) => {\n          const isSelected = compare?.(selectedOption?.value, val as T);\n          console.debug({ title, isSelected, a: selectedOption?.value, b: val });\n          return (\n            // @ts-ignore\n            <MuiMenuItem value={JSON.stringify(val as T)} selected={isSelected}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} /> : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n              <ListItemText primary={title} />\n            </MuiMenuItem>\n          );\n        })}\n      </MuiSelect>\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { UserRigDetailedFragment } from 'app/api/operations';\nimport { useAvailableRigsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport Chip from 'app/components/chips/Chip';\nimport Select, { ISelectOption } from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRigSelect {\n  dropzoneUserId?: number;\n  loadId?: number;\n  value?: UserRigDetailedFragment | null;\n  tandem?: boolean;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  autoSelectFirst?: boolean;\n  variant?: 'chip' | 'select';\n  label?: string;\n  error?: string | null;\n  onChange(rig: UserRigDetailedFragment): void;\n}\n\nfunction RigSelect(props: IRigSelect) {\n  const {\n    dropzoneUserId,\n    label,\n    variant,\n    value,\n    small,\n    loadId,\n    color: assignedColor,\n    backgroundColor,\n    autoSelectFirst,\n    onChange,\n    tandem,\n    error,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [fetchRigs, { data }] = useAvailableRigsLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUserId) {\n      fetchRigs({\n        variables: {\n          dropzoneUserId,\n          loadId,\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [fetchRigs, currentDropzoneId, tandem, dropzoneUserId, loadId]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.availableRigs?.length) {\n      onChange(data.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.availableRigs, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.availableRigs?.map((rig) => ({\n        label: rig?.name || [rig?.make, rig?.model].join(' '),\n        value: rig as UserRigDetailedFragment,\n      })) || [],\n    [data?.availableRigs]\n  );\n\n  const selected = React.useMemo(\n    () => data?.availableRigs?.find((node) => node?.id === value?.id),\n    [data?.availableRigs, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<UserRigDetailedFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"parachute\">\n        {item?.label || 'No Rig'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <Select<UserRigDetailedFragment>\n      {...{ options, error, renderAnchor: variant === 'chip' ? renderAnchor : undefined, label }}\n      value={selected}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RigSelectField = withHookForm(RigSelect);\n\nexport default RigSelect;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, List } from 'react-native-paper';\nimport { NumberFieldType } from 'app/components/input/number_input/NumberField';\nimport { Control, useWatch } from 'react-hook-form';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\n\nimport { Permission } from 'app/api/schema.d';\nimport { JumpTypeChipSelectField } from 'app/components/input/chip_select/JumpTypeChipSelect';\nimport { TicketTypeChipSelectField } from 'app/components/input/chip_select/TicketTypeChipSelect';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RigSelectField } from 'app/components/input/dropdown_select/RigSelect';\nimport { ManifestUserFields } from './useForm';\n\ninterface IManifestFormProps {\n  control: Control<ManifestUserFields>;\n}\nexport default function ManifestForm(props: IManifestFormProps) {\n  const { control } = props;\n\n  const { id, dropzoneUser, ticketType, load } = useWatch<ManifestUserFields>({ control });\n\n  const allowedToManifestOthers = useRestriction(\n    id ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n  const { extras: selectedAddons } = useWatch({ control });\n\n  return (\n    <>\n      <JumpTypeChipSelectField\n        {...{ control }}\n        name=\"jumpType\"\n        userId={Number(dropzoneUser?.id) || null}\n      />\n\n      <TicketTypeChipSelectField\n        {...{ control }}\n        onlyPublicTickets={!allowedToManifestOthers}\n        name=\"ticketType\"\n      />\n\n      {!ticketType?.extras?.length ? null : <List.Subheader>Ticket addons</List.Subheader>}\n      <ChipSelectField<ManifestUserFields, 'extras'>\n        {...{ control }}\n        allowEmpty\n        defaultValue={[]}\n        isSelected={(item) =>\n          selectedAddons\n            ?.map((addon) => addon?.id)\n            .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n        }\n        items={ticketType?.extras as TicketTypeExtraEssentialsFragment[]}\n        renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n          `${item.name} ($${item.cost})`\n        }\n        name=\"extras\"\n      />\n      <Divider />\n      {!dropzoneUser ? null : (\n        <RigSelectField\n          {...{ control }}\n          loadId={load?.id ? Number(load?.id) : undefined}\n          name=\"rig\"\n          label=\"Equipment\"\n          dropzoneUserId={Number(dropzoneUser?.id)}\n        />\n      )}\n      <FormNumberField\n        label=\"Exit weight\"\n        variant={NumberFieldType.Weight}\n        {...{ control }}\n        name=\"exitWeight\"\n      />\n\n      {!ticketType?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <FormTextField {...{ control }} label=\"Passenger name\" name=\"passengerName\" />\n\n          <FormNumberField\n            {...{ control }}\n            label=\"Passenger exit weight\"\n            name=\"passengerExitWeight\"\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IManifestContext {\n  manifest: ReturnType<typeof useManifest>;\n  dialogs: {\n    manifestUser: IDialogContextSubstate<\n      Omit<IManifestUserDialog, 'open' | 'onClose' | 'onSuccess'>\n    >;\n    credits: IDialogContextSubstate<Omit<ICreditsSheet, 'open' | 'onClose' | 'onSuccess'>>;\n    load: IDialogContextSubstate<Omit<ILoadDialog, 'open' | 'onClose' | 'onSuccess'>>;\n  };\n}\nexport const INITIAL_CONTEXT: IManifestContext = {\n  manifest: {\n    called: false,\n    loading: false,\n    loads: [],\n    variables: {} as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    deleteSlot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    manifestGroup: uninitializedHandler as never,\n    moveSlot: uninitializedHandler as never,\n    createLoad: uninitializedHandler as never,\n    permissions: {\n      canAddTransaction: false,\n      canCreateLoad: false,\n      canDeleteOwnSlot: false,\n      canDeleteSlot: false,\n      canManifestOthers: false,\n      canManifestSelf: false,\n      canUpdateOwnSlot: false,\n      canUpdateSlot: false,\n    },\n  },\n  dialogs: {\n    manifestUser: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        slot: undefined,\n        load: undefined,\n      },\n    },\n    load: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        load: undefined,\n      },\n    },\n    credits: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        dropzoneUser: undefined,\n      },\n    },\n  },\n};\nexport const ManifestContext = React.createContext<IManifestContext>(INITIAL_CONTEXT);\n\nexport function useManifestContext() {\n  return React.useContext(ManifestContext);\n}\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport * as React from 'react';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\n\nconst schema = yup.object().shape({\n  hasLicense: yup.boolean().isTrue('You need to select a license on your user profile'),\n  hasMembership: yup.boolean().isTrue('Your membership is out of date'),\n  hasRigInspection: yup.boolean().isTrue('Your rig needs to be inspected before you can manifest'),\n  hasReserveInDate: yup.boolean().isTrue('Your rig needs a reserve repack'),\n  hasExitWeight: yup.boolean().isTrue('You need to set your exit weight on your profile'),\n});\n\nexport default function useManifestValidator() {\n  const {\n    dropzone: { currentUser, dropzone },\n  } = useDropzoneContext();\n\n  const canManifest = React.useCallback(\n    async function CheckManifestRequirements() {\n      try {\n        await schema.validate({\n          hasLicense: currentUser?.hasLicense || !dropzone?.settings?.requireLicense,\n          hasMembership: currentUser?.hasMembership || !dropzone?.settings?.requireMembership,\n          hasRigInspection: currentUser?.hasRigInspection || !dropzone?.settings?.requireRigInspection,\n          hasReserveInDate: currentUser?.hasReserveInDate || !dropzone?.settings?.requireReserveInDate\n        }, { abortEarly: true });\n        return true;\n      } catch (err) {\n        if (err instanceof ValidationError) {\n          throw err;\n        }\n        return false;\n      }\n    },\n    [currentUser?.hasMembership, currentUser?.hasRigInspection, currentUser?.hasLicense, dropzone?.settings?.requireLicense, dropzone?.settings?.requireMembership, dropzone?.settings?.requireRigInspection, currentUser?.hasReserveInDate, dropzone?.settings?.requireReserveInDate]\n  );\n\n  return { canManifest };\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { SlotExhaustiveFragment, TicketTypeDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport isEqual from 'lodash/isEqual';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport camelCase from 'lodash/camelCase';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  // | 'load'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'groupNumber'\n  | 'passengerExitWeight'\n  | 'passengerName'\n> & { id?: string; load?: { id: string }; ticketType: TicketTypeDetailsFragment | null };\n\nexport const EMPTY_FORM_VALUES: ManifestUserFields = {\n  id: undefined,\n  load: undefined,\n  exitWeight: 50,\n  rig: null,\n  ticketType: null,\n  jumpType: null,\n  passengerExitWeight: null,\n  passengerName: null,\n  extras: null,\n  groupNumber: 0\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<ManifestUserFields>;\n  onSuccess?(): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone }\n  } = useDropzoneContext();\n  const manifestUserValidation = yup.object().shape({\n    load: yup.object().required(),\n    exitWeight: yup.number().required('Please specify exit weight').min(0).max(300),\n    rig: yup\n      .object()\n      .nullable()\n      .when({\n        is: () => !!dropzone?.settings?.requireEquipment,\n        then: yup.object().required('You cant manifest without a rig').nullable(),\n        otherwise: yup.object().nullable()\n      }),\n    jumpType: yup.object().required('Jump type is required').nullable(),\n    ticketType: yup.object().required('Ticket is required to manifest').nullable(),\n    original: yup.object().nullable(),\n    extras: yup.array().of(yup.object()).nullable()\n  });\n  const methods = useForm<ManifestUserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(manifestUserValidation)\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  React.useEffect(() => {\n    methods.reset(defaultValues);\n  }, [defaultValues, methods]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { manifestUser }\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: ManifestUserFields) => {\n      try {\n        // await canManifest();\n\n        const response = await manifestUser({\n          jumpType: fields.jumpType?.id,\n          extras: fields.extras?.map(({ id }) => id),\n          load: fields?.load?.id,\n          rig: !fields.rig?.id ? undefined : fields.rig?.id,\n          ticketType: fields.ticketType?.id,\n          dropzoneUser: fields.dropzoneUser?.id,\n          exitWeight: fields.exitWeight,\n          ...(!fields.ticketType?.isTandem\n            ? {}\n            : {\n                passengerName: fields.passengerName,\n                passengerExitWeight: fields.passengerExitWeight\n              })\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            console.debug('Error in field', field, message);\n            setError(camelCase(field) as keyof ManifestUserFields, { type: 'custom', message });\n          });\n        }\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        }\n        if ('slot' in response) {\n          notify.success(`${fields.dropzoneUser?.user?.name} has been added to the load`);\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [manifestUser, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { usePortal } from '@gorhom/portal';\nimport { LoadEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport SlotForm from './ManifestForm';\nimport useForm from './useForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  load?: Pick<LoadEssentialsFragment, 'id' | 'loadNumber' | 'name'>;\n  slot?: Partial<SlotDetailsFragment>;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, load, slot, onSuccess, onClose } = props;\n\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      id: slot?.id,\n      load,\n      exitWeight: slot?.exitWeight || Number(slot?.dropzoneUser?.user?.exitWeight || 70),\n      dropzoneUser: slot?.dropzoneUser,\n      extras: slot?.extras || null,\n      groupNumber: slot?.groupNumber,\n      jumpType: slot?.jumpType,\n      passengerExitWeight: slot?.passengerExitWeight,\n      passengerName: slot?.passengerName,\n      rig: slot?.rig,\n      ticketType: slot?.ticketType || undefined\n    },\n    onSuccess\n  });\n\n  const portal = usePortal('drawer');\n\n  React.useEffect(() => {\n    if (!open) {\n      portal.removePortal('drawer');\n    }\n  }, [open, portal]);\n\n  return (\n    <DialogOrSheet\n      title={`Manifest ${slot?.dropzoneUser?.user?.name} on ${load?.name || `Load #${load?.loadNumber || 1}`}`}\n      {...{ open, onClose, loading }}\n      buttonLabel=\"Manifest\"\n      buttonAction={onSubmit}\n    >\n      <SlotForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Permission } from 'app/api/schema.d';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control } from 'react-hook-form';\nimport {\n  DropzoneUserChipSelectField,\n  PlaneChipSelectField,\n} from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { LoadFields } from './useForm';\n\ninterface ILoadFormProps {\n  control: Control<LoadFields>;\n}\nexport default function LoadForm(props: ILoadFormProps) {\n  const { control } = props;\n\n  return (\n    <>\n      <FormTextField name=\"name\" label=\"Name\" {...{ control }} placeholder=\"Optional\" />\n\n      <FormNumberField label=\"Max Slots\" {...{ control }} name=\"maxSlots\" />\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelectField {...{ control }} name=\"plane\" />\n\n        <DropzoneUserChipSelectField\n          label=\"GCA\"\n          {...{ control }}\n          name=\"gca\"\n          requiredPermissions={[Permission.ActAsGca]}\n        />\n\n        <DropzoneUserChipSelectField\n          label=\"Pilot\"\n          name=\"pilot\"\n          {...{ control }}\n          requiredPermissions={[Permission.ActAsPilot]}\n        />\n        <Divider style={{ marginVertical: 8 }} />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport { camelCase, isEqual } from 'lodash';\nimport { LoadState } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type LoadFields = Required<Pick<LoadDetailsFragment, 'gca' | 'pilot' | 'maxSlots' | 'plane' | 'isOpen'>> &\n  Pick<LoadDetailsFragment, 'name'> & { id?: string | null };\n\nexport const loadValidation = yup.object({\n  name: yup.string().nullable().default(null),\n  gca: yup.object().required('You must select a GCA'),\n  pilot: yup.object().required('Every load needs a pilot'),\n  plane: yup.object().required('You cant create a load without an aircraft'),\n  original: yup.object().nullable(),\n  maxSlots: yup.number().required('You must specify max slots').default(0),\n  id: yup.string().nullable(),\n  isOpen: yup.boolean().default(true)\n});\n\nexport const EMPTY_FORM_VALUES: Partial<LoadFields> = {\n  id: undefined,\n  gca: null,\n  pilot: null,\n  plane: undefined,\n  maxSlots: 0,\n  name: null\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<LoadFields>;\n  onSuccess?(load: LoadDetailsFragment): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<LoadFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(loadValidation)\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { control, reset, setValue } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad }\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const { plane } = useWatch<LoadFields>({ control });\n\n  React.useEffect(() => {\n    if (plane?.maxSlots) {\n      setValue('maxSlots', plane.maxSlots);\n    }\n  }, [plane?.maxSlots, setValue]);\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: LoadFields) => {\n      try {\n        await canManifest();\n        const validatedFields = loadValidation.validateSync(fields);\n\n        const response = await createLoad({\n          gca: validatedFields.gca?.id,\n          state: LoadState.Open,\n          pilot: validatedFields.pilot?.id,\n          plane: validatedFields.plane?.id,\n          maxSlots: Number(validatedFields.maxSlots),\n          name: validatedFields.name\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            const camelizedField = camelCase(field);\n            setError(camelizedField as keyof LoadFields, { type: 'custom', message });\n          });\n        }\n        if ('load' in response) {\n          notify.success(`Load #${response.load?.loadNumber} added to the board`);\n          onSuccess?.(response.load);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\n\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport LoadForm from './LoadForm';\nimport useForm from './useForm';\n\nexport interface ILoadDialog {\n  open?: boolean;\n  load?: LoadDetailsFragment;\n  onClose(): void;\n  onSuccess(load: LoadDetailsFragment): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, load, onClose, onSuccess } = props;\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      gca: load?.gca,\n      maxSlots: load?.maxSlots,\n      name: load?.name,\n      pilot: load?.pilot,\n      plane: load?.plane,\n      id: load?.id,\n    },\n    onSuccess,\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSubmit}\n      scrollable\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={loading}\n      title=\"New Load\"\n    >\n      <LoadForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, DataTable } from 'react-native-paper';\nimport { TransactionType } from 'app/api/schema.d';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { DropzoneUserDetailsFragment } from 'app/api/operations';\nimport { NumberFieldType } from '../../components/input/number_input/NumberField';\nimport { CreditFields } from './useForm';\n\ninterface ICreditsFormProps {\n  control: Control<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment;\n}\nexport default function CreditsForm(props: ICreditsFormProps) {\n  const { control, dropzoneUser } = props;\n  const { amount = 0, type } = useWatch({ control });\n\n  const subtotal =\n    type === TransactionType.Deposit\n      ? (dropzoneUser?.credits || 0) + amount\n      : (dropzoneUser?.credits || 0) - amount;\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Message\"\n        name=\"message\"\n        // style={{ marginHorizontal: 8 }}\n      />\n      <View>\n        <FormNumberField\n          variant={NumberFieldType.Cash}\n          label={type === TransactionType.Withdrawal ? 'Withdraw amount' : 'Add amount'}\n          name=\"amount\"\n          {...{ control }}\n        />\n        <Divider />\n\n        <DataTable>\n          <DataTable.Row>\n            <DataTable.Title>Current balance</DataTable.Title>\n            <DataTable.Cell numeric>{`$${dropzoneUser?.credits || 0}`}</DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              {type === TransactionType.Withdrawal ? 'Withdraw' : 'Deposit'}\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[type === TransactionType.Deposit ? '+' : '-', '$', amount].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              <Text style={{ fontWeight: 'bold' }}>New total</Text>\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[subtotal < 0 ? '-' : '', '$', subtotal < 0 ? subtotal * -1 : subtotal].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n        </DataTable>\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { DropzoneUserDetailsFragment, OrderEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { TransactionType } from 'app/api/schema.d';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type CreditFields = {\n  amount: number;\n  dropzoneUser: DropzoneUserDetailsFragment | null;\n  type: TransactionType;\n  message?: string | null;\n};\n\nexport const orderValidation = yup.object({\n  amount: yup.number().integer().default(0).min(1, 'Amount must be greater than 0'),\n  message: yup.string().nullable().default(null),\n  type: yup\n    .string()\n    .oneOf(Object.values(TransactionType))\n    .required('No transaction type selected')\n    .default(TransactionType.Withdrawal),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<CreditFields> = {\n  amount: 0,\n  message: null,\n  dropzoneUser: null,\n  type: TransactionType.Deposit,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment | null;\n  onSuccess?(order: OrderEssentialsFragment): void;\n}\n\nexport default function useCreditsForm(opts: IUseManifestFormOpts) {\n  const { initial, dropzoneUser, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n  const { addCredits, withdrawCredits } = useUserProfile();\n\n  const methods = useForm<CreditFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(orderValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: CreditFields) => {\n      console.debug({ fields });\n      if (!dropzoneUser) {\n        setError('amount', { message: 'No user selected' });\n        return;\n      }\n      try {\n        const response =\n          fields.type === TransactionType.Deposit\n            ? await addCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              })\n            : await withdrawCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'message':\n                  setError('message', { message });\n                  break;\n                default:\n                  setError('amount', { message });\n                  break;\n              }\n            });\n          }\n          if ('order' in response && response.order) {\n            onSuccess?.(response.order);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad, dropzoneUser, setError, notify, onSuccess, addCredits, withdrawCredits]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { TransactionType } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport CreditsForm from './CreditsForm';\nimport useCreditsForm from './useForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUserEssentialsFragment;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser, onSuccess } = props;\n  const { onSubmit, control, setValue, loading } = useCreditsForm({\n    onSuccess,\n    dropzoneUser\n  });\n\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      disablePadding\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n      scrollable={false}\n    >\n      <View style={{ marginBottom: 24 }}>\n        <Tabs\n          defaultIndex={0} // default = 0\n          onChangeIndex={(newIndex) => {\n            setValue('type', newIndex === 1 ? TransactionType.Withdrawal : TransactionType.Deposit);\n          }}\n          mode=\"fixed\"\n        >\n          <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n            <View />\n          </TabScreen>\n          <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n            <View />\n          </TabScreen>\n        </Tabs>\n      </View>\n      <View style={styles.form}>\n        <CreditsForm {...{ control, dropzoneUser }} />\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  form: {\n    paddingHorizontal: 16\n  }\n});\n","import * as React from 'react';\n\nexport interface IDialogContextSubstate<State extends object = object> {\n  visible: boolean;\n  open(state?: State): void;\n  close(): void;\n  state?: State;\n}\nexport default function createUseDialog<State extends object = object>(defaults?: State) {\n  return function useDialog(): IDialogContextSubstate<State> {\n    const [state, setState] = React.useState<State>();\n    const open = React.useCallback((newState: State) => {\n      setState({ ...defaults, ...newState });\n    }, []);\n    const close = React.useCallback(() => setState(undefined), []);\n\n    return { state, visible: !!state, open, close };\n  };\n}\n","import * as React from 'react';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport noop from 'lodash/noop';\nimport { LoadsQueryVariables } from 'app/api/operations';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport ManifestUserDialog from 'app/forms/manifest_user/Dialog';\nimport LoadDialog from 'app/forms/load/Dialog';\nimport CreditSheet from 'app/forms/credits/Credits';\nimport { DateTime } from 'luxon';\nimport createUseDialog from '../hooks/useDialog';\nimport { ManifestContext, useManifestContext } from './context';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nfunction ManifestUserDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { manifestUser } = dialogs;\n  return (\n    <ManifestUserDialog\n      onClose={manifestUser.close}\n      onSuccess={manifestUser.close}\n      open={manifestUser.visible}\n      {...manifestUser.state}\n    />\n  );\n}\n\nfunction LoadDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { load } = dialogs;\n  return (\n    <LoadDialog onClose={load.close} onSuccess={load.close} open={load.visible} {...load.state} />\n  );\n}\n\nfunction CreditsDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { credits } = dialogs;\n  return (\n    <CreditSheet\n      onClose={credits.close}\n      onSuccess={credits.close}\n      open={credits.visible}\n      {...credits.state}\n    />\n  );\n}\n\nconst useManifestUserDialog = createUseDialog<Pick<IManifestUserDialog, 'load' | 'slot'>>();\nconst useLoadDialog = createUseDialog<Pick<ILoadDialog, 'load'>>();\nconst useCreditsDialog = createUseDialog<Pick<ICreditsSheet, 'dropzoneUser'>>();\n\nexport function ManifestContextProvider(props: React.PropsWithChildren<UseManifestOptions>) {\n  const { dropzone, date = DateTime.local().toISODate(), children } = props;\n  const manifestUserDialog = useManifestUserDialog();\n  const loadDialog = useLoadDialog();\n  const creditsDialog = useCreditsDialog();\n\n  const manifest = useManifest({ dropzone, date });\n\n  const { permissions } = manifest;\n\n  const dialogs = React.useMemo(\n    () => ({\n      manifestUser: manifestUserDialog,\n      load: permissions.canCreateLoad ? loadDialog : { ...loadDialog, open: noop },\n      credits: permissions.canAddTransaction ? creditsDialog : { ...creditsDialog, open: noop },\n    }),\n    [\n      manifestUserDialog,\n      permissions.canCreateLoad,\n      loadDialog,\n      permissions.canAddTransaction,\n      creditsDialog,\n    ]\n  );\n\n  const context = React.useMemo(() => ({ manifest, dialogs }), [manifest, dialogs]);\n\n  return (\n    <ManifestContext.Provider value={context}>\n      {children}\n      <CreditsDialogWrapper />\n      <LoadDialogWrapper />\n      <ManifestUserDialogWrapper />\n    </ManifestContext.Provider>\n  );\n}\n\nexport { useManifest };\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { List, Modal } from 'react-native-paper';\nimport { TimePickerModal } from 'react-native-paper-dates';\nimport { DateTime } from 'luxon';\n\ninterface ITimePickerProps {\n  label?: string;\n  timestamp?: number;\n  disabled?: boolean;\n  color?: string;\n  onChange(timestamp: number): void;\n}\nexport default function TimePicker(props: ITimePickerProps) {\n  const { disabled, label, timestamp, onChange, color } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const onDismissSingle = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirm = React.useCallback(\n    ({ date }: { date: Date }) => {\n      setOpen(false);\n      onChange(date.getTime() / 1000);\n    },\n    [setOpen, onChange]\n  );\n\n  const timestampLabel = timestamp ? format(timestamp * 1000, 'hh:mm') : 'No time selected';\n\n  return (\n    <>\n      <List.Item\n        title={label || timestampLabel}\n        disabled={!!disabled}\n        description={!label ? null : timestampLabel}\n        left={() => <List.Icon color={color} icon=\"calendar\" />}\n        onPress={() => setOpen(true)}\n      />\n\n      <Modal visible={open}>\n        <TimePickerModal\n          hours={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).hour}\n          minutes={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).minute}\n          locale=\"en\"\n          visible={open}\n          onDismiss={onDismissSingle}\n          onConfirm={(time) =>\n            onConfirm({\n              date: DateTime.local()\n                .set({\n                  hour: time.hours,\n                  minute: time.minutes,\n                })\n                .toJSDate(),\n            })\n          }\n          label={label}\n        />\n      </Modal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog } from 'react-native-paper';\nimport TimePicker from 'app/components/input/time_picker/TimePicker';\n\nexport interface ITimePickerDialog {\n  open: boolean;\n  onChange(time: number): void;\n  onClose(): void;\n}\n\nexport function TimePickerDialog(props: ITimePickerDialog) {\n  const { open, onClose, onChange } = props;\n  const [time, setTime] = React.useState<number>();\n  const [loading, setLoading] = React.useState(false);\n\n  const onSubmit = React.useCallback(() => {\n    try {\n      setLoading(true);\n      if (time) {\n        onChange(time);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [onChange, time]);\n\n  return (\n    <Dialog visible={open} dismissable onDismiss={onClose}>\n      <Dialog.Title>Dispatch Aircraft</Dialog.Title>\n      <Dialog.Content>\n        <TimePicker onChange={setTime} timestamp={time} label=\"Take-off\" />\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button disabled={loading} onPress={onClose}>\n          Cancel\n        </Button>\n        <Button disabled={loading} onPress={onSubmit}>\n          Dispatch\n        </Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useLoad } from 'app/api/crud/useLoad';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface ILoadContext {\n  load: ReturnType<typeof useLoad>;\n  dialogs: {\n    timepicker: IDialogContextSubstate<object>;\n  };\n}\n\nexport const INITIAL_CONTEXT: ILoadContext = {\n  load: {\n    called: false,\n    loading: false,\n    load: null,\n    update: uninitializedHandler as never,\n    updateGCA: uninitializedHandler as never,\n    updateLoadMaster: uninitializedHandler as never,\n    updatePlane: uninitializedHandler as never,\n    updatePilot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    canDispatchAircraft: false,\n    createAircraftDispatchAction: noop as never,\n    dispatchAtTime: uninitializedHandler as never,\n    dispatchInMinutes: uninitializedHandler as never,\n    markAsLanded: uninitializedHandler as never,\n    cancel: uninitializedHandler as never,\n    updateLoadState: uninitializedHandler as never,\n  },\n  dialogs: {\n    timepicker: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const LoadContext = React.createContext<ILoadContext>(INITIAL_CONTEXT);\n\nexport function useLoadContext() {\n  return React.useContext(LoadContext);\n}\n","import * as React from 'react';\nimport type { LoadQueryVariables } from 'app/api/operations';\nimport { useLoad } from 'app/api/crud';\nimport { TimePickerDialog } from './TimePickerDialog';\nimport { LoadContext } from './context ';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useTimePickerDialog = createUseDialog();\n\nfunction LoadContextProvider(props: React.PropsWithChildren<Partial<LoadQueryVariables>>) {\n  const { children, ...variables } = props;\n  const load = useLoad(variables);\n  const timepicker = useTimePickerDialog();\n  const dialogs = React.useMemo(() => ({ timepicker }), [timepicker]);\n\n  const onChangeDispatchTime = React.useCallback(\n    (time: number) => {\n      load.dispatchAtTime(time).then(timepicker.close);\n    },\n    [load, timepicker.close]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      load,\n      dialogs,\n    }),\n    [load, dialogs]\n  );\n  return (\n    <LoadContext.Provider value={context}>\n      {children}\n      <TimePickerDialog\n        open={timepicker.visible}\n        onClose={timepicker.close}\n        onChange={onChangeDispatchTime}\n      />\n    </LoadContext.Provider>\n  );\n}\n\nexport function withLoadContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<LoadQueryVariables>) {\n    const { id, ...rest } = props;\n    return (\n      <LoadContextProvider {...{ id }}>\n        <Component {...(rest as T)} />\n      </LoadContextProvider>\n    );\n  };\n}\n\nexport { LoadContextProvider };\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Control } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { AircraftFields } from './useForm';\n\nexport interface IAircraftFormProps {\n  control: Control<AircraftFields>;\n}\nexport default function AircraftForm(props: IAircraftFormProps) {\n  const { control } = props;\n  return (\n    <>\n      <FormTextField {...{ control }} name=\"name\" mode=\"outlined\" label=\"Name\" />\n\n      <FormTextField {...{ control }} name=\"registration\" label=\"Registration\" />\n      <FormNumberField {...{ control }} name=\"minSlots\" label=\"Min slots\" />\n\n      <FormNumberField\n        {...{ control }}\n        name=\"maxSlots\"\n        label=\"Max slots\"\n        helperText=\"Maximum amount of jumpers who can be manifested on one load\"\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\n\nimport { camelCase, isEqual } from 'lodash';\nimport { useAircrafts } from 'app/api/crud/useAircrafts';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type AircraftFields = {\n  id?: string;\n  name?: string;\n  registration: string;\n  minSlots?: number;\n  maxSlots: number;\n  basicEmptyWeight?: number;\n  maxTakeOffWeight?: number;\n\n  // FIXME: Should be AVGAS/Jetfuel\n  fuelType?: string;\n};\n\nexport const aircraftValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().nullable().default(null),\n  registration: yup.string().required('Registration is required'),\n  minSlots: yup.number().integer().default(1).min(1, 'Minimum slots must be greater than 0'),\n  maxSlots: yup.number().integer().required('Maximum slots is required').min(1, 'Maximum slots must be greater than 0'),\n  basicEmptyWeight: yup.number().default(0).min(0, 'Basic empty weight must be greater than 0'),\n  maxTakeOffWeight: yup.number().default(0).min(0, 'Maximum take off weight must be greater than 0'),\n  fuelType: yup.string().nullable().default(null)\n});\n\nexport const EMPTY_FORM_VALUES: Partial<AircraftFields> = {\n  name: '',\n  registration: '',\n  minSlots: 1,\n  maxSlots: 4,\n  basicEmptyWeight: 0,\n  maxTakeOffWeight: 0,\n  fuelType: undefined\n};\n\nexport interface IUseAircraftFormOpts {\n  initial?: Partial<AircraftFields>;\n  onSuccess?(aircraft: PlaneEssentialsFragment): void;\n}\n\nexport default function useAircraftForm(opts: IUseAircraftFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<AircraftFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(aircraftValidation),\n    shouldUnregister: false\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone }\n  } = useDropzoneContext();\n  const { create, update } = useAircrafts();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: AircraftFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await aircraftValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await update(Number(fields.id), {\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration\n            })\n          : await create({\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              const camelizedField = camelCase(field);\n              switch (camelizedField) {\n                case 'name':\n                case 'maxSlots':\n                case 'minSlots':\n                case 'registration':\n                  setError(camelizedField, { message });\n                  break;\n                default:\n                  break;\n              }\n            });\n          }\n          if ('aircraft' in response && response.aircraft) {\n            notify.success('Aircraft saved');\n            onSuccess?.(response.aircraft);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, create, update]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport PlaneForm from './AircraftForm';\nimport useAircraftForm, { AircraftFields } from './useForm';\n\nexport interface IPlaneDialogProps {\n  open: boolean;\n  initial?: Partial<AircraftFields>;\n  original?: PlaneEssentialsFragment;\n  onClose(): void;\n}\n\nexport default function AircraftDialog(props: IPlaneDialogProps) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit } = useAircraftForm({\n    initial: {\n      id: original?.id || initial?.id || undefined,\n      name: original?.name || initial?.name,\n      registration: original?.registration || original?.registration || undefined,\n      minSlots: original?.minSlots || original?.minSlots || undefined,\n      maxSlots: original?.maxSlots || original?.maxSlots,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n    >\n      <PlaneForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  error?: string | null;\n  onChange(value: number): void;\n}\nfunction AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange, error } = props;\n\n  console.debug('alt', { value, props });\n  return (\n    <Select\n      label=\"Altitude\"\n      {...{ value, onChange, error }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\n\nexport const AltitudeSelectField = withHookForm(AltitudeSelect);\n\nexport default AltitudeSelect;\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { Title } from 'react-native-paper';\nimport { DropzoneUser, Permission } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserSelect {\n  requiredPermissions?: Permission[];\n  value: DropzoneUser | null;\n  label: string;\n  onChange(dzUser: DropzoneUser): void;\n}\n\nfunction DropzoneUserSelect(props: IDropzoneUserSelect) {\n  const { requiredPermissions, value, onChange, label } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  return (\n    <>\n      <Title>{label}</Title>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        compare={(a, b) => a?.id === b?.id}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserSelectField = withHookForm(DropzoneUserSelect);\n\nexport default DropzoneUserSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IFederationSelect {\n  value?: FederationEssentialsFragment | null;\n  onChange(jt: FederationEssentialsFragment): void;\n}\n\nfunction FederationSelect(props: IFederationSelect) {\n  const { value, onChange } = props;\n\n  const { data } = useFederationsQuery();\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onChange(data.federations[0]);\n    }\n  }, [data?.federations, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.federations?.map((node) => ({\n        label: node?.name || '',\n        value: node as FederationEssentialsFragment,\n      })) || [],\n    [data?.federations]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Select<FederationEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const FederationSelectField = withHookForm(FederationSelect);\n\nexport default FederationSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  allowedForDropzoneUserIds?: number[] | null;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeSelect(props: IJumpTypeSelect) {\n  const { allowedForDropzoneUserIds, onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((state) => state.global);\n\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      allowedForDropzoneUserIds: allowedForDropzoneUserIds as number[],\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.jumpTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as JumpTypeEssentialsFragment,\n      })) || [],\n    [data?.jumpTypes]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n  return (\n    <Select<JumpTypeEssentialsFragment>\n      label=\"Jump type\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const JumpTypeSelectField = withHookForm(JumpTypeSelect);\n\nexport default JumpTypeSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseSelect(props: ILicenseSelect) {\n  const { onChange, value, federationId } = props;\n\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.licenses.map((node) => ({\n        label: node?.name || '',\n        value: node as LicenseEssentialsFragment,\n      })) || [],\n    [data?.licenses]\n  );\n\n  const selected = React.useMemo(() => value, [value]);\n  return (\n    <Select<LicenseEssentialsFragment>\n      label=\"License\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const LicenseSelectField = withHookForm(LicenseSelect);\n\nexport default LicenseSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  onCHange(plane: PlaneEssentialsFragment): void;\n}\nfunction PlaneSelect(props: IPlaneSelect) {\n  const { onCHange, value } = props;\n  const { dropzone: currentDropzone } = useDropzoneContext();\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  return <Select<PlaneEssentialsFragment> value={selected} options={options} onChange={onCHange} />;\n}\n\nexport const PlaneSelectField = withHookForm(PlaneSelect);\n\nexport default PlaneSelect;\n","import { RoleEssentialsFragment } from 'app/api/operations';\nimport { useRolesQuery } from 'app/api/reflection';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRoleSelect {\n  value?: RoleEssentialsFragment | null;\n  disabled?: boolean;\n  onChange(jt: RoleEssentialsFragment): void;\n}\n\nfunction RoleSelect(props: IRoleSelect) {\n  const { onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useRolesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.roles?.map(({ permissions, ...node }) => ({\n        label: startCase(node?.name || ''),\n        value: node,\n      })) || [],\n    [data?.dropzone?.roles]\n  );\n\n  return (\n    <Select<RoleEssentialsFragment>\n      label=\"Access level\"\n      compare={(a, b) => a?.id === b?.id}\n      {...{ options, value, onChange }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RoleSelectField = withHookForm(RoleSelect);\n\nexport default RoleSelect;\n","import * as React from 'react';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useTicketTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  required?: boolean;\n  allowManifestingSelf?: boolean | null;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeSelect(props: ITicketTypeSelect) {\n  const { allowManifestingSelf, value, onChange } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      allowManifestingSelf,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.ticketTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as TicketTypeEssentialsFragment,\n      })) || [],\n    [data?.ticketTypes]\n  );\n  return <Select<TicketTypeEssentialsFragment> {...{ value, options, onChange }} />;\n}\n\nexport const TicketTypeSelectField = withHookForm(TicketTypeSelect);\n\nexport default TicketTypeSelect;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { FederationSelectField, RoleSelectField } from 'app/components/input/dropdown_select';\nimport { LicenseChipSelectField } from 'app/components/input/chip_select';\n\nimport { UserFields } from './useForm';\n\ninterface IGhostFormProps {\n  control: Control<UserFields>;\n}\nexport default function GhostForm(props: IGhostFormProps) {\n  const { control } = props;\n\n  const { federation, license } = useWatch({ control });\n\n  return (\n    <>\n      <FormTextField label=\"Name\" name=\"name\" {...{ control }} />\n\n      <FormTextField label=\"Nickname\" name=\"nickname\" placeholder=\"Optional\" {...{ control }} />\n\n      <FormTextField label=\"Email\" name=\"email\" {...{ control }} />\n      <FormTextField label=\"Phone number\" name=\"phone\" {...{ control }} />\n\n      <FormNumberField label=\"Exit weight (kg)\" name=\"exitWeight\" {...{ control }} />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelectField {...{ control }} name=\"federation\" />\n\n        {(license?.federation?.id || federation?.id) && (\n          <LicenseChipSelectField name=\"license\" {...{ control }} />\n        )}\n      </View>\n      <RoleSelectField name=\"role\" {...{ control }} />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport {\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  RoleEssentialsFragment,\n  UserEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { camelCase, isEqual } from 'lodash';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type UserFields = {\n  id?: string | null;\n  name: string;\n  phone?: string | null;\n  federationUid?: string | null;\n  nickname: string;\n  email: string;\n  exitWeight: number;\n  federation?: FederationEssentialsFragment;\n  license?: LicenseDetailsFragment;\n  role?: RoleEssentialsFragment;\n};\n\nexport const ghostValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  nickname: yup.string().optional().nullable(),\n  email: yup.string().required('Email is required to invite the user'),\n  phone: yup.string().optional().nullable(),\n  federationUid: yup.string().optional().nullable(),\n  exitWeight: yup\n    .number()\n    .required('Exit weight is required')\n    .min(40, 'Exit weight must be more than 40kg')\n    .default(50),\n  federation: yup.object().required('Federation must be selected'),\n  license: yup.object().required('All jumpers must have a license'),\n  role: yup.object().required('You must select a role'),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<UserFields> = {\n  name: '',\n  nickname: '',\n  email: '',\n  role: undefined,\n  license: undefined,\n  exitWeight: 50,\n  federation: undefined,\n  id: null,\n  phone: '',\n  federationUid: null,\n};\n\nexport interface IUseUserFormOpts {\n  initial?: Partial<UserFields>;\n  onSuccess?(user: UserEssentialsFragment): void;\n}\n\nexport default function useUserForm(opts: IUseUserFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<UserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ghostValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('license');\n    register('federation');\n    register('role');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create } = useUserProfile();\n  const notify = useNotifications();\n\n  const [{ loading }, createUser] = useAsyncFn(\n    async (fields: UserFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ghostValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = await create({\n          dropzone: Number(dropzone.id),\n          email: validated.email,\n          name: validated.name,\n          exitWeight: validated.exitWeight,\n          role: Number(validated.role?.id),\n          license: Number(validated?.license?.id),\n          federationNumber: validated?.federationUid,\n          phone: validated?.phone,\n        });\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              const camelizedField = camelCase(field);\n              if (Object.keys(defaultValues).includes(camelizedField)) {\n                setError(camelizedField as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('user' in response && response.user) {\n            notify.success(`${validated.name} has been invited`);\n            onSuccess?.(response.user);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, defaultValues, create]\n  );\n\n  const { control, setValue } = methods;\n  const { federation, license } = useWatch({ control });\n\n  React.useEffect(() => {\n    if (license?.federation && license?.federation?.id !== federation?.id) {\n      setValue('federation', license.federation as FederationEssentialsFragment);\n    }\n  }, [federation?.id, license?.federation, setValue]);\n\n  const onSubmit = React.useMemo(() => handleSubmit(createUser), [createUser, handleSubmit]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport GhostForm from './Form';\nimport useForm, { UserFields } from './useForm';\n\nexport interface ICreateGhostDialog {\n  open?: boolean;\n  original?: DropzoneUserEssentialsFragment;\n  initial?: Partial<UserFields>;\n  onClose(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.user?.name || initial?.name,\n      nickname: original?.user?.nickname || initial?.nickname,\n      phone: original?.user?.phone || initial?.phone,\n      license: original?.license || initial?.license,\n      federation: initial?.federation,\n      email: original?.user?.email || initial?.email,\n      role: original?.role || initial?.role,\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      {...{ open, loading, onClose, snapPoints }}\n      buttonAction={onSubmit}\n      buttonLabel=\"Create\"\n    >\n      <GhostForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, useTheme, Switch as SwitchComponent, List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ISwitchProps\n  extends Omit<Extract<typeof SwitchComponent>, 'onChange' | 'onChangeText' | 'error'> {\n  label?: string;\n  error?: string | null;\n  helperText?: string | null;\n  onChange?(value: boolean): void;\n}\n\nfunction Switch(props: ISwitchProps) {\n  const { error, label, helperText, onChange, style, ...rest } = props;\n  const theme = useTheme();\n  return (\n    <>\n      <List.Item\n        title={label}\n        right={() => (\n          <SwitchComponent\n            style={StyleSheet.flatten([\n              styles.field,\n              { backgroundColor: theme.colors.surface },\n              style,\n            ])}\n            {...rest}\n            onValueChange={onChange}\n          />\n        )}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const SwitchField = withHookForm(Switch);\n\nexport default Switch;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import { useTicketTypeExtrasLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List, Divider } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { Control, useWatch } from 'react-hook-form';\nimport { AltitudeSelectField } from 'app/components/input/dropdown_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { SwitchField } from 'app/components/input/switch/Switch';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { TicketTypeFields } from './useForm';\n\ninterface ITicketTypeFormProps {\n  control: Control<TicketTypeFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { altitude } = useWatch({ control });\n  const [getTicketAddons, query] = useTicketTypeExtrasLazyQuery();\n  const { data } = query;\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      getTicketAddons({ variables: { dropzoneId: dropzone?.id } });\n    }\n  }, [dropzone?.id, getTicketAddons]);\n\n  const { extras: selectedAddons } = useWatch({ control });\n  console.debug({ altitude });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Base cost without extra ticket addons\"\n      />\n      <View style={{ width: '100%' }}>\n        <AltitudeSelectField {...{ control }} name=\"altitude\" />\n\n        {(!altitude || ![4000, 14000].includes(altitude)) && (\n          <FormNumberField {...{ control }} label=\"Custom altitude\" name=\"altitude\" />\n        )}\n\n        <SwitchField\n          {...{ control }}\n          name=\"isTandem\"\n          label=\"Tandem\"\n          helperText=\"Allow also manifesting a passenger when using this ticket type\"\n        />\n\n        <SwitchField\n          {...{ control }}\n          name=\"allowManifestingSelf\"\n          label=\"Public manifesting\"\n          helperText=\"Allow this ticket to be used for public manifesting, e.g not tandems\"\n        />\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        <ChipSelectField<TicketTypeFields, 'extras'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedAddons\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n          }\n          items={(data?.extras as TicketTypeExtraEssentialsFragment[]) || []}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"extras\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { TicketTypeAddonEssentialsFragment, TicketTypeEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { camelCase, isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  altitude: number;\n  allowManifestingSelf: boolean;\n  isTandem: boolean;\n  extras: TicketTypeAddonEssentialsFragment[];\n};\n\nexport const ticketTypeValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().default(14000).required().default(14000),\n  extras: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false)\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeFields> = {\n  name: '',\n  cost: 30,\n  allowManifestingSelf: true,\n  altitude: 14000,\n  extras: [],\n  id: undefined,\n  isTandem: false\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeFields>;\n  onSuccess?(ticketType: TicketTypeEssentialsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketTypeValidation)\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('altitude');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone }\n  } = useDropzoneContext();\n  const { createTicketType, updateTicketType } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: TicketTypeFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketTypeValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketType(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[]).map((e) => Number(e.id)),\n              isTandem: validated.isTandem\n            })\n          : await createTicketType({\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[])?.map((e) => Number(e.id)),\n              isTandem: validated.isTandem\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              const camelizedField = camelCase(field);\n              if (Object.keys(defaultValues).includes(camelizedField)) {\n                setError(camelizedField as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketType' in response && response.ticketType) {\n            notify.success('Ticket saved');\n            onSuccess?.(response.ticketType);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, createTicketType, updateTicketType, defaultValues]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketTypeForm';\nimport useForm, { TicketTypeFields } from './useForm';\n\nexport interface ITicketTypeDialog {\n  open: boolean;\n  original?: TicketTypeDetailsFragment;\n  initial?: Partial<TicketTypeFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      allowManifestingSelf: original?.allowManifestingSelf || initial?.allowManifestingSelf,\n      altitude: original?.altitude || initial?.altitude || 14000,\n      extras: original?.extras || initial?.extras,\n      id: original?.id || initial?.id || undefined,\n      isTandem: original?.isTandem || initial?.isTandem,\n    },\n    onSuccess: onClose,\n  });\n\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  TicketTypeEssentialsFragment,\n  TicketTypeExtraEssentialsFragment,\n} from 'app/api/operations';\nimport { useTickets } from 'app/api/crud';\nimport { Control, useWatch } from 'react-hook-form';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport type { TicketTypeAddonFields } from './useForm';\n\ninterface ITicketTypeAddonFormProps {\n  control: Control<TicketTypeAddonFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeAddonFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { ticketTypes } = useTickets({ dropzone: dropzone?.id });\n\n  const { ticketTypes: selectedTicketTypes } = useWatch({ control });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Cost to add this addon to a ticket\"\n      />\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        <ChipSelectField<TicketTypeAddonFields, 'ticketTypes'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedTicketTypes\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeEssentialsFragment)?.id) || false\n          }\n          items={ticketTypes as TicketTypeEssentialsFragment[]}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"ticketTypes\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonDetailsFragment,\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { camelCase, isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeAddonFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  ticketTypes: TicketTypeEssentialsFragment[];\n};\n\nexport const ticketAddonValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().required().default(14000),\n  ticketTypes: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false)\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeAddonFields> = {\n  name: '',\n  cost: 30,\n  ticketTypes: [],\n  id: undefined\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeAddonFields>;\n  onSuccess?(ticketTypeAddon: TicketTypeAddonDetailsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeAddonFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketAddonValidation),\n    shouldUnregister: false\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone }\n  } = useDropzoneContext();\n  const { createTicketTypeAddon, updateTicketTypeAddon } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onSave] = useAsyncFn(\n    async (fields: TicketTypeAddonFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketAddonValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketTypeAddon(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[])?.map((e) =>\n                Number(e.id)\n              )\n            })\n          : await createTicketTypeAddon({\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[])?.map((e) =>\n                Number(e.id)\n              )\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              const camelizedField = camelCase(field);\n              if (Object.keys(defaultValues).includes(camelizedField)) {\n                setError(camelizedField as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketTypeAddon' in response && response.ticketTypeAddon) {\n            notify.success('Ticket addon saved');\n            onSuccess?.(response.ticketTypeAddon);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, createTicketTypeAddon, updateTicketTypeAddon, defaultValues]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onSave), [handleSubmit, onSave]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketAddonForm';\nimport useForm from './useForm';\nimport type { TicketTypeAddonFields } from './useForm';\n\nexport interface ITicketTypeAddonDialog {\n  open: boolean;\n  original?: TicketTypeAddonDetailsFragment;\n  initial?: Partial<TicketTypeAddonFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeAddonDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      ticketTypes: original?.ticketTypes || initial?.ticketTypes || [],\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport type { DropzoneQueryVariables } from 'app/api/operations';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport AircraftSheet from 'app/forms/aircraft/Dialog';\nimport CreateUserSheet from 'app/forms/create_user/Dialog';\nimport TicketTypeSheet from 'app/forms/ticket_type/Dialog';\nimport TicketTypeAddonSheet from 'app/forms/ticket_type_addon/Dialog';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport { DropzoneContext } from './context';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useAircraftDialog = createUseDialog<Pick<IPlaneDialogProps, 'initial' | 'original'>>();\nconst useCreateUserDialog = createUseDialog<Pick<ICreateGhostDialog, 'initial' | 'original'>>();\nconst useTicketTypeDialog = createUseDialog<Pick<ITicketTypeDialog, 'initial' | 'original'>>();\nconst useTicketTypeAddonDialog =\n  createUseDialog<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>();\n\nfunction DropzoneContextProvider(props: React.PropsWithChildren<Partial<DropzoneQueryVariables>>) {\n  const { children, ...variables } = props;\n  const dropzone = useDropzone(variables);\n  const aircraft = useAircraftDialog();\n  const ticketType = useTicketTypeDialog();\n  const ticketTypeAddon = useTicketTypeAddonDialog();\n  const createUser = useCreateUserDialog();\n  const dialogs = React.useMemo(\n    () => ({ aircraft, ticketType, ticketTypeAddon, createUser }),\n    [aircraft, ticketType, ticketTypeAddon, createUser]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      dropzone,\n      dialogs,\n    }),\n    [dropzone, dialogs]\n  );\n  return (\n    <DropzoneContext.Provider value={context}>\n      {children}\n      <AircraftSheet {...aircraft.state} onClose={aircraft.close} open={aircraft.visible} />\n      <TicketTypeSheet {...ticketType.state} onClose={ticketType.close} open={ticketType.visible} />\n      <CreateUserSheet {...createUser.state} onClose={createUser.close} open={createUser.visible} />\n      <TicketTypeAddonSheet\n        {...ticketTypeAddon.state}\n        onClose={ticketTypeAddon.close}\n        open={ticketTypeAddon.visible}\n      />\n    </DropzoneContext.Provider>\n  );\n}\n\nexport function withDropzoneContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<DropzoneQueryVariables>) {\n    const { dropzoneId, ...rest } = props;\n    return (\n      <DropzoneContextProvider {...{ dropzoneId }}>\n        <Component {...(rest as T)} />\n      </DropzoneContextProvider>\n    );\n  };\n}\n\nexport { DropzoneContextProvider };\n","import React from 'react';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { ManifestContextProvider, DropzoneContextProvider } from 'app/providers';\nimport { useAppSelector } from 'app/state';\n\nexport default function Provider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root?.global);\n  return (\n    <DropzonesProvider>\n      <DropzoneContextProvider dropzoneId={currentDropzoneId?.toString() || undefined}>\n        <ManifestContextProvider dropzone={currentDropzoneId?.toString() || undefined}>\n          {children}\n        </ManifestContextProvider>\n      </DropzoneContextProvider>\n    </DropzonesProvider>\n  );\n}\n","import * as React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { Linking, Platform } from 'react-native';\nimport * as Device from 'expo-device';\nimport URI from 'urijs';\nimport { useUpdateUserMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Device.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nexport default function PushNotifications(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, called },\n  } = useDropzoneContext();\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = React.useCallback((link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  }, []);\n\n  const [updateUser] = useUpdateUserMutation();\n  React.useEffect(() => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        notify.info(notification.request.content.body);\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      // console.log({ notification: response });\n    });\n\n    const subscription = Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      subscription.remove();\n    };\n  }, [dispatch, notify, onOutsideLink]);\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const remoteToken = currentUser?.user?.pushToken;\n\n    if (!loading && currentUser?.id) {\n      if (pushToken && pushToken !== remoteToken) {\n        updateUser({\n          variables: {\n            dropzoneUser: currentUser.id,\n            pushToken,\n          },\n        });\n      }\n    }\n  }, [pushToken, currentUser?.id, currentUser?.user?.pushToken, loading, called, updateUser]);\n  return children as JSX.Element;\n}\n","import { ThemeProvider } from '@mui/material';\nimport { Theme, createTheme } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Provider as MaterialProvider } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state/store';\n\nfunction Content(props: { children: React.ReactNode }) {\n  const { children } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const muiTheme: Theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: state.palette.primary,\n          secondary: state.palette.accent,\n          background: {\n            default: state.palette.background,\n            paper: state.palette.surface,\n          },\n          mode: state.theme.dark ? 'dark' : 'light',\n          common: {\n            white: state.palette.background,\n            black: state.palette.onSurface,\n          },\n        },\n      }),\n    [\n      state.palette.accent,\n      state.palette.background,\n      state.palette.onSurface,\n      state.palette.primary,\n      state.palette.surface,\n      state.theme.dark,\n    ]\n  );\n\n  window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {\n    dispatch(actions.global.setAppearance(e.matches ? 'dark' : 'light'));\n  });\n  return (\n    <MaterialProvider theme={state.theme as ReactNativePaper.Theme}>\n      <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\n    </MaterialProvider>\n  );\n}\nexport default Content;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport * as Device from 'expo-device';\n\nimport * as fonts from '@expo-google-fonts/roboto';\nimport LottieView from 'app/components/LottieView';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const { useFonts, __metadata__, ...rest } = fonts;\n  const [fontsLoaded] = fonts.useFonts({\n    ...rest\n  });\n\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const notify = useNotifications();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      notify.success('New version installed');\n    }\n  }, [notify]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120\n            }}\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20\n  }\n});\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","// useColorScheme from react-native does not support web currently. You can replace\n// this with react-native-appearance if you would like theme support on web.\nexport default function useColorScheme() {\n  return 'light';\n}\n","import * as React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport { Paragraph, Title, useTheme } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults extends ViewProps {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle, ...rest }: INoResults) {\n  const theme = useTheme();\n  return (\n    <View {...rest} style={StyleSheet.flatten([styles.empty, rest?.style])}>\n      <Title style={{ color: color || theme.colors.onSurface }}>{title}</Title>\n      <Paragraph style={{ color: color || theme.colors.onSurface, textAlign: 'center' }}>\n        {subtitle}\n      </Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ImageBackground } from 'react-native';\nimport { Avatar, Text } from 'react-native-paper';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { DropzoneEssentialsFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Color from 'color';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\ninterface DropzoneCardProps {\n  dropzone: DropzoneEssentialsFragment;\n}\nexport default function DropzonesScreen(props: DropzoneCardProps) {\n  const { dropzone } = props;\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const navigation = useNavigation();\n\n  const nameLines = dropzone?.name?.split(/\\s/) || [];\n  const lines = [\n    nameLines.length > 2 ? nameLines[0] : null,\n    nameLines.length > 2 ? nameLines[1] : nameLines[0],\n    nameLines.length > 2 ? nameLines[2] : null,\n    nameLines.length === 2 ? nameLines[1] : null,\n  ];\n\n  const backgroundColor = Color(dropzone?.primaryColor || '#ffffff')\n    .desaturate(0.2)\n    .lighten(0.1);\n  const textColor = backgroundColor.lighten(0.35);\n\n  return (\n    <TouchableOpacity\n      style={{ alignSelf: 'center' }}\n      onPress={async () => {\n        if (dropzone) {\n          const shouldPushRoute = !!globalState.currentDropzoneId;\n          dispatch(actions.global.setDropzone(dropzone as DropzoneExtensiveFragment));\n\n          if (shouldPushRoute) {\n            navigation.dispatch(\n              StackActions.replace('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              })\n            );\n          }\n        }\n      }}\n    >\n      {dropzone?.banner ? (\n        <View style={styles.cardContainer}>\n          <ImageBackground source={{ uri: dropzone?.banner as string }} style={styles.banner}>\n            <Text style={styles.title} numberOfLines={1}>\n              {dropzone.name}\n            </Text>\n          </ImageBackground>\n        </View>\n      ) : (\n        <View\n          style={[\n            styles.cardContainer,\n            {\n              backgroundColor: backgroundColor.toString(),\n            },\n          ]}\n        >\n          <Avatar.Icon\n            style={styles.icon}\n            icon=\"airplane-takeoff\"\n            size={160}\n            color={textColor.toString()}\n          />\n          <View style={styles.svgContainer}>\n            {lines.map((substr) => (\n              <Text style={styles.title} numberOfLines={1} adjustsFontSizeToFit allowFontScaling>\n                {substr}\n              </Text>\n            ))}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    margin: 16,\n    width: 160,\n    height: 160,\n    borderRadius: 80,\n    overflow: 'hidden',\n  },\n  title: {\n    fontStyle: 'italic',\n    fontFamily: 'Roboto_700Bold_Italic',\n    textAlign: 'center',\n    fontSize: 26,\n    color: 'white',\n    overflow: 'visible',\n    width: 160,\n  },\n  icon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  svgContainer: {\n    position: 'absolute',\n    left: 0,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    top: 0,\n    height: 180,\n    width: '100%',\n  },\n  banner: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList, Platform } from 'react-native';\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nimport NoResults from '../../../components/NoResults';\nimport DropzoneCard from './DropzoneCard';\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { dropzones, loading, refetch } = useDropzonesContext();\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={dropzones}\n        numColumns={Platform.OS === 'web' ? 3 : 2}\n        refreshing={loading}\n        keyExtractor={(item) => `dropzone-${item?.id}`}\n        onRefresh={() => refetch()}\n        style={styles.flatlist}\n        contentContainerStyle={styles.content}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item: dropzone }) => (!dropzone ? null : <DropzoneCard {...{ dropzone }} />)}\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  flatlist: { flex: 1, width: '100%', flexGrow: 1 },\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    paddingBottom: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from './dropzone_select/DropzonesScreen';\n\nexport type LimboRoutes = {\n  DropzoneSelectScreen: undefined;\n};\nconst Stack = createStackNavigator<LimboRoutes>();\n\nexport function useLimboNavigation() {\n  return useNavigation<NavigationProp<LimboRoutes>>();\n}\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"DropzoneSelectScreen\"\n    >\n      <Stack.Screen name=\"DropzoneSelectScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import { useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\nexport enum ScreenOrientation {\n  Landscape = 'LANDSCAPE',\n  Portrait = 'PORTRAIT',\n}\nexport default function useDevice() {\n  const { width, height } = useWindowDimensions();\n  const orientation = useMemo(\n    () => (width > height ? ScreenOrientation.Landscape : ScreenOrientation.Portrait),\n    [height, width]\n  );\n\n  return useMemo(() => ({ width, height, orientation }), [height, orientation, width]);\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Divider as MaterialDivider, Text, useTheme } from 'react-native-paper';\n\nexport default function Divider(props: { children: React.ReactText }) {\n  const { children } = props;\n  const theme = useTheme();\n  return (\n    <View style={styles.container}>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n      <Text style={styles.text}>{children}</Text>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  divider: { flex: 2 / 5, backgroundColor: 'white' },\n  text: { flex: 1 / 5, textAlign: 'center' },\n});\n","import * as React from 'react';\nimport { useLoginWithFacebookMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport { LoginWithFacebookMutation, LoginWithFacebookMutationVariables } from 'app/api/operations';\nimport Button, { ReactFacebookFailureResponse, ReactFacebookLoginInfo } from 'react-facebook-login';\nimport { View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : never;\n\nexport function useLoginWithFacebook(\n  opts?: MutationFunctionOptions<LoginWithFacebookMutation, LoginWithFacebookMutationVariables>\n) {\n  const { expoPushToken } = useAppSelector((root) => root.global);\n  const [onLoginWithFacebook, mutation] = useLoginWithFacebookMutation(opts);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async (response: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n      try {\n        if ('accessToken' in response) {\n          const { data } = await onLoginWithFacebook({\n            variables: {\n              pushToken: expoPushToken || null,\n              token: response.accessToken,\n            },\n          });\n          if (data?.loginWithFacebook?.authenticatable && data?.loginWithFacebook?.credentials) {\n            dispatch(actions.global.setCredentials(data.loginWithFacebook.credentials));\n            dispatch(actions.global.setUser(data.loginWithFacebook.authenticatable));\n          }\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, expoPushToken, notify, onLoginWithFacebook]\n  );\n  return [onLogin, mutation] as [() => Promise<void>, MutationResult<LoginWithFacebookMutation>];\n}\nexport default function FacebookButton(\n  props: Omit<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields' | 'children'> &\n    Partial<Pick<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields'>> & {\n      onPress: Extract<typeof Button>['callback'];\n    }\n) {\n  const notify = useNotifications();\n  const { onPress } = props;\n  return (\n    <View style={{ height: 100 }}>\n      <Button\n        appId=\"686479516065674\"\n        reAuthenticate\n        autoLoad\n        fields=\"email,name,picture\"\n        buttonStyle={{\n          height: 25,\n          fontSize: 14,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: 4,\n          marginTop: 16,\n        }}\n        onFailure={() => {\n          notify.error('Facebook authentication failed');\n        }}\n        {...props}\n        callback={onPress}\n        textButton=\"Login with Facebook\"\n      />\n    </View>\n  );\n}\n","import { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport {\n  LoginWithAppleMutation,\n  LoginWithAppleMutationVariables,\n  LoginWithFacebookMutation,\n} from 'app/api/operations';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nexport function useLoginWithApple(\n  opts?: MutationFunctionOptions<LoginWithAppleMutation, LoginWithAppleMutationVariables>\n) {\n  return [() => null, null] as unknown as [\n    () => Promise<void>,\n    MutationResult<LoginWithFacebookMutation>\n  ];\n}\n\nexport default function AppleButton() {\n  return <View />;\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { useLoginMutation } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch } from 'app/state';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { useLoginWithApple } from './AppleButton';\nimport { useLoginWithFacebook } from './FacebookButton';\n\nexport interface LoginFields {\n  email: string;\n  password: string;\n}\n\nexport const validate = yup.object({\n  email: yup.string().required('Email is required').email('This is not a valid email'),\n  password: yup.string().required('Password is required'),\n});\n\nconst EMPTY_FORM_VALUES: LoginFields = {\n  email: '',\n  password: '',\n};\n\nexport default function useLoginForm() {\n  const dispatch = useAppDispatch();\n  const methods = useForm({\n    defaultValues: EMPTY_FORM_VALUES,\n    mode: 'all',\n    resolver: yupResolver(validate),\n  });\n  const { handleSubmit } = methods;\n  const [loading, setLoading] = React.useState(false);\n  const [mutationLogin, data] = useLoginMutation();\n  const [loginWithFacebook, loginWithFacebookMutation] = useLoginWithFacebook();\n  const [loginWithApple, loginWithAppleMutation] = useLoginWithApple();\n\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async function Login(variables: LoginFields) {\n      try {\n        const result = await mutationLogin({\n          variables,\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, mutationLogin, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onLogin), [handleSubmit, onLogin]);\n\n  return React.useMemo(\n    () => ({\n      ...methods,\n      onSubmit,\n      loginWithFacebook,\n      loginWithApple,\n      loading:\n        loginWithFacebookMutation?.loading || data?.loading || loginWithAppleMutation?.loading,\n    }),\n    [\n      data?.loading,\n      loginWithApple,\n      loginWithAppleMutation?.loading,\n      loginWithFacebook,\n      loginWithFacebookMutation?.loading,\n      methods,\n      onSubmit,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { Button, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nimport { primaryColor } from 'app/constants/Colors';\nimport Divider from 'app/components/Divider';\n\nimport LottieView from 'app/components/LottieView';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport FacebookButton from './FacebookButton';\nimport AppleButton from './AppleButton';\nimport useLoginForm from './useForm';\n\nexport default function LoginForm() {\n  const navigation = useNavigation();\n  const theme = useTheme();\n\n  const { control, onSubmit, loading, loginWithApple, loginWithFacebook } = useLoginForm();\n  return (\n    <ScrollView>\n      {loading ? (\n        <View style={styles.animationContainer}>\n          <LottieView\n            autoPlay\n            loop\n            style={styles.loadingAnimation}\n            source={require('../../../../../assets/images/loading.json')}\n          />\n        </View>\n      ) : (\n        <>\n          <FormTextField {...{ control }} name=\"email\" label=\"Email\" mode=\"outlined\" disabled={loading} />\n\n          <FormTextField\n            {...{ control }}\n            label=\"Password\"\n            name=\"password\"\n            mode=\"outlined\"\n            disabled={loading}\n            secureTextEntry\n            onSubmitEditing={onSubmit}\n          />\n        </>\n      )}\n      {loading ? null : (\n        <TouchableOpacity onPress={() => navigation.navigate('Wizards', { screen: 'RecoverPasswordScreen' })}>\n          <Text style={theme.dark ? styles.forgotPasswordDark : styles.forgotPassword}>Forgot your password?</Text>\n        </TouchableOpacity>\n      )}\n      <Button\n        mode=\"contained\"\n        disabled={loading}\n        labelStyle={{ color: theme.colors.onSurface }}\n        style={[styles.button, { backgroundColor: theme.colors.surface, borderColor: theme.colors.surface }]}\n        onPress={onSubmit}\n      >\n        {loading ? 'Authenticating...' : 'Log in'}\n      </Button>\n\n      <Divider>or</Divider>\n      <FacebookButton disabled={loading} style={{ marginTop: 8 }} onPress={loginWithFacebook} />\n\n      <AppleButton onPress={loginWithApple} style={{ width: '100%', flex: 1 }} />\n\n      <Button\n        labelStyle={styles.textButtonLabel}\n        style={styles.textButton}\n        onPress={() => navigation.navigate('Unauthenticated', { screen: 'SignUpScreen' })}\n      >\n        Sign up\n      </Button>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  cardLandscape: { height: '100%', width: '100%', justifyContent: 'center' },\n\n  animationContainer: {\n    width: '100%',\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loadingAnimation: {\n    alignSelf: 'center',\n    marginTop: 24,\n    marginBottom: 32,\n    height: 156,\n    width: '100%'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n\n  forgotPassword: {\n    marginBottom: 16,\n    color: 'rgb(50, 50, 50)'\n  },\n  forgotPasswordDark: {\n    marginTop: 8,\n    color: 'rgb(180, 180, 180)'\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent'\n  },\n  fieldsLandscape: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 400\n  },\n  button: {\n    marginVertical: 4,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%'\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%'\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  }\n});\n","import * as React from 'react';\nimport { Image, ImageBackground, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport { Card, useTheme } from 'react-native-paper';\n\nimport useDevice, { ScreenOrientation } from 'app/hooks/useDevice';\nimport logoDark from '../../../../assets/images/logo-black.png';\nimport logoLight from '../../../../assets/images/logo-white.png';\nimport backgroundDark from '../../../../assets/images/webb-dark.png';\nimport backgroundLight from '../../../../assets/images/pattern.png';\nimport LoginForm from './form/LoginForm';\n\nexport default function LoginScreen() {\n  const theme = useTheme();\n  const { orientation } = useDevice();\n  return (\n    <ImageBackground\n      source={theme.dark ? backgroundDark : backgroundLight}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      {orientation === ScreenOrientation.Portrait ? (\n        <>\n          <Image\n            source={theme.dark ? logoLight : logoDark}\n            style={styles.logo}\n            resizeMode=\"contain\"\n          />\n          <KeyboardAvoidingView\n            style={styles.fields}\n            behavior={Platform.OS === 'android' ? undefined : 'padding'}\n          >\n            <Card style={styles.card} elevation={3}>\n              <Card.Content>\n                <LoginForm />\n              </Card.Content>\n            </Card>\n          </KeyboardAvoidingView>\n        </>\n      ) : (\n        <KeyboardAvoidingView\n          style={styles.fieldsLandscape}\n          behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        >\n          <Card style={styles.cardLandscape} elevation={3}>\n            <Image\n              source={theme.dark ? logoLight : logoDark}\n              style={styles.logo}\n              resizeMode=\"contain\"\n            />\n            <Card.Content>\n              <LoginForm />\n            </Card.Content>\n          </Card>\n        </KeyboardAvoidingView>\n      )}\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  cardLandscape: { height: '100%', width: '100%', justifyContent: 'center' },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  fieldsLandscape: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 400,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions, View } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n  fullWidth?: boolean;\n  scrollable?: boolean;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height, width } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const {\n    style,\n    children,\n    fullWidth = false,\n    scrollable = true,\n    contentContainerStyle,\n    ...rest\n  } = props;\n\n  if (!scrollable) {\n    return <View style={{ flex: 1, width: '100%' }}>{children}</View>;\n  }\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={StyleSheet.flatten([\n        styles.container,\n        { backgroundColor: theme.colors.background },\n        style,\n      ])}\n      contentContainerStyle={StyleSheet.flatten(\n        [\n          styles.content,\n          fullWidth\n            ? { paddingHorizontal: 0 }\n            : { width: width < 920 ? '100%' : 920, paddingHorizontal: 16 },\n          contentContainerStyle,\n        ].filter(Boolean)\n      )}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    alignItems: 'flex-start',\n    alignSelf: 'center',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n  centerAlignedContent: {\n    maxWidth: 920,\n  },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation<string | number>,\n    dragX: Animated.AnimatedInterpolation<string | number>\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0]\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10]\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n        style={{ height: '100%' }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }]\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }]\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      childrenContainerStyle={{ height: '100%' }}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n\n          // @ts-ignore This is ok in web\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text'\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import { useIsFocused } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  actions: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView style={styles.fields} behavior={Platform.OS === 'android' ? undefined : 'padding'}>\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, actions, hideContentUntilNavigatedTo } = props;\n  const theme = useAppSelector((state) => state.global.theme);\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <ScrollView\n      style={[styles.container, { backgroundColor: theme.colors.background }]}\n      contentContainerStyle={styles.content}\n    >\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <View style={{ width: '100%', alignItems: 'center', justifyContent: 'center' }}>{children}</View>\n\n      {actions}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'column'\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n    marginBottom: 56\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light }\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 }\n});\n","import * as React from 'react';\n\nimport { StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\nexport interface IWizardButtonsProps {\n  nextLabel: string;\n  backLabel: string;\n  loading?: boolean;\n  onNext?(): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport default function Buttons(props: IWizardButtonsProps) {\n  const { backLabel = 'Back', loading: controlledLoading, nextLabel = 'Next', onNext, onBack } = props;\n  const [loading, setLoading] = React.useState(false);\n  const { palette } = useAppSelector((root) => root.global);\n  const onNextPress = React.useCallback(async () => {\n    try {\n      await onNext?.();\n    } catch {\n      return undefined;\n    } finally {\n      setLoading(false);\n    }\n\n    return undefined;\n  }, [onNext]);\n\n  return (\n    <View style={styles.actions}>\n      {onNextPress && (\n        <Button\n          disabled={loading || controlledLoading}\n          loading={loading || controlledLoading}\n          onPress={onNextPress}\n          style={[styles.next, { backgroundColor: palette.placeholder }]}\n          mode=\"contained\"\n        >\n          {nextLabel || 'Next'}\n        </Button>\n      )}\n      {onBack && (\n        <Button style={styles.back} disabled={loading || controlledLoading} mode=\"text\" onPress={onBack}>\n          {backLabel}\n        </Button>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n    width: '100%',\n    maxWidth: 500,\n    height: 80\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n    minHeight: 36\n  },\n  back: {\n    minHeight: 36\n  }\n});\n","import * as React from 'react';\n\nimport {\n  KeyboardAvoidingView,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View\n} from 'react-native';\nimport Carousel, { ICarouselInstance } from 'react-native-reanimated-carousel';\nimport { useNavigation } from '@react-navigation/core';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\nimport Buttons from './Buttons';\n\nexport interface IWizardProps {\n  dots?: boolean;\n  currentIndex?: number;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport type WizardRef = ICarouselInstance;\n\nfunction Wizard(props: IWizardProps, ref: React.Ref<ICarouselInstance>) {\n  const { steps, dots, currentIndex: outerIndex } = props;\n  const [index, setIndex] = React.useState(0);\n  const currentIndex = React.useMemo(() => {\n    if (outerIndex !== undefined) return outerIndex;\n    return index;\n  }, [index, outerIndex]);\n  const navigation = useNavigation();\n  const [dimensions, setDimensions] = React.useState<LayoutRectangle>({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0\n  });\n  const carouselRef = React.useRef<ICarouselInstance>(null);\n  const screen = useWindowDimensions();\n\n  React.useImperativeHandle(ref, () => ({\n    next: () => carouselRef.current?.next(),\n    prev: () => carouselRef.current?.prev(),\n    getCurrentIndex: () => carouselRef.current?.getCurrentIndex() || 0,\n    scrollTo: (opts) => carouselRef.current?.scrollTo(opts)\n  }));\n\n  const onNext = React.useCallback(\n    async function WizardNextStep() {\n      if (steps[currentIndex]?.onNext) {\n        await steps[currentIndex]?.onNext?.(navigation);\n      }\n      if (currentIndex === steps.length - 1) {\n        navigation.goBack();\n      } else {\n        carouselRef?.current?.next();\n        setIndex(currentIndex + 1);\n      }\n\n      return undefined;\n    },\n    [currentIndex, navigation, steps]\n  );\n\n  const onBack = React.useCallback(\n    async function WizardBackStep() {\n      steps[currentIndex]?.onBack?.();\n      if (currentIndex === 0) {\n        navigation.goBack();\n      } else {\n        carouselRef?.current?.prev();\n        setIndex(currentIndex - 1 || 0);\n      }\n      return undefined;\n    },\n    [currentIndex, navigation, steps]\n  );\n\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const { width, height } = dimensions;\n\n  return (\n    <KeyboardAvoidingView\n      style={StyleSheet.absoluteFill}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      {...{ onLayout }}\n    >\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <Carousel\n        autoPlay={false}\n        loop={false}\n        modeConfig={{ parallaxScrollingScale: 1, parallaxScrollingOffset: 32 }}\n        pagingEnabled={false}\n        enabled={false}\n        panGestureHandlerProps={{\n          // Disable swiping\n          activeOffsetX: [-width, width]\n        }}\n        mode=\"parallax\"\n        style={StyleSheet.absoluteFill}\n        data={steps}\n        width={width || screen.width}\n        onSnapToItem={setIndex}\n        ref={carouselRef}\n        renderItem={({ item }) => {\n          if (!item) {\n            return <View />;\n          }\n          const { component: Step } = item;\n          return (\n            <Step\n              actions={\n                <Buttons\n                  nextLabel={currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n                  backLabel=\"Back\"\n                  onNext={onNext}\n                  onBack={onBack}\n                />\n              }\n            />\n          );\n        }}\n      />\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 48,\n    zIndex: 1100\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300\n  },\n  content: {\n    flexGrow: 1\n  }\n});\n\nexport default React.forwardRef(Wizard);\n","import { passwordStrength } from 'check-password-strength';\n\nexport enum PasswordStrength {\n  TooWeak = 0,\n  Weak = 1,\n  Acceptable = 2,\n  Strong = 3,\n}\nexport default function checkPasswordComplexity(password: string) {\n  const score = passwordStrength<PasswordStrength>(password, [\n    { value: PasswordStrength.TooWeak, id: 0, minDiversity: 0, minLength: 0 },\n    { value: PasswordStrength.Weak, id: 1, minDiversity: 2, minLength: 8 },\n    { value: PasswordStrength.Acceptable, id: 2, minDiversity: 3, minLength: 10 },\n    { value: PasswordStrength.Strong, id: 3, minDiversity: 4, minLength: 16 },\n  ]);\n  return score.value;\n}\n","import { errorColor, successColor, warningColor } from 'app/constants/Colors';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { PasswordStrength } from '../../utils/checkPasswordComplexity';\n\ninterface IPasswordComplexityIndicatorProps {\n  strength: PasswordStrength;\n}\nfunction PasswordStep(props: IPasswordComplexityIndicatorProps) {\n  const { strength } = props;\n\n  const indicatorStyle = [styles.indicatorWeak, styles.indicatorOk, styles.indicatorStrong];\n\n  return (\n    <>\n      <Text style={styles.title}>{['Too weak', 'Weak', 'Acceptable', 'Strong'][strength]}</Text>\n      <View style={styles.indicator}>\n        <View style={indicatorStyle[strength]} />\n        {strength < PasswordStrength.Acceptable ? (\n          <View style={[styles.indicatorInactive, { flex: 1 / 3 }]} />\n        ) : null}\n        {[PasswordStrength.Weak, PasswordStrength.Acceptable].includes(strength) ? (\n          <View\n            style={[\n              styles.indicatorInactive,\n              { flex: strength < PasswordStrength.Acceptable ? 1 / 3 : 1 / 2 },\n            ]}\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n    marginTop: 8,\n  },\n  indicator: {\n    flexDirection: 'row',\n    height: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginTop: 8,\n  },\n  indicatorInactive: {\n    backgroundColor: '#AAA',\n  },\n  indicatorWeak: {\n    flex: 1 / 3,\n    backgroundColor: errorColor,\n  },\n  indicatorOk: {\n    flex: 2 / 3,\n    backgroundColor: warningColor,\n  },\n  indicatorStrong: {\n    backgroundColor: successColor,\n    flex: 1,\n  },\n});\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\nimport { useFormContext, useWatch } from 'react-hook-form';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  const { password } = useWatch({ control });\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <FormTextField\n          name=\"password\"\n          {...{ control }}\n          mode=\"flat\"\n          label=\"Password\"\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(password)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport { useFormContext } from 'react-hook-form';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          name=\"email\"\n          mode=\"flat\"\n          label=\"Email\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport { useFormContext } from 'react-hook-form';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          mode=\"flat\"\n          label=\"Password\"\n          name=\"passwordConfirmation\"\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { camelCase } from 'lodash';\n\nexport interface SignUpFields {\n  step: number;\n  email: string;\n  name: string;\n  password: string;\n  passwordConfirmation: string;\n}\n\nexport const signUpValidation = yup.object().shape({\n  step: yup.number().default(0),\n  name: yup.string().default(''),\n  email: yup.string().when('step', {\n    is: (step: number) => step >= 0,\n    then: yup.string().required('Email is required').min(3).email('Please enter a valid email')\n  }),\n  password: yup\n    .string()\n    .default('')\n    .when('step', {\n      is: (step: number) => step >= 1,\n      then: yup\n        .string()\n        .required('Password is required')\n        .test({\n          test: (value) => checkPasswordComplexity(value || '') >= PasswordStrength.Acceptable,\n          message: 'Password is too weak',\n          name: 'password-complexity'\n        })\n    }),\n  passwordConfirmation: yup\n    .string()\n    .default('')\n    .when('step', {\n      is: (step: number) => step >= 2,\n      then: yup\n        .string()\n        .required('Password confirmation is required')\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\n    })\n});\n\nexport const EMPTY_FORM_VALUES: SignUpFields = {\n  step: 0,\n  name: '',\n  email: '',\n  password: '',\n  passwordConfirmation: ''\n};\n\nexport interface ISignUpFormOpts {\n  initial?: Partial<SignUpFields>;\n  onSuccess?(): void;\n}\n\nenum SignUpSteps {\n  Email = 0,\n  Password = 1,\n  PasswordConfirmation = 2\n}\n\nexport default function useSignupForm(opts: ISignUpFormOpts) {\n  const { onSuccess } = opts;\n  const [loading, setLoading] = React.useState(false);\n  const globalState = useAppSelector((root) => root.global);\n\n  const notify = useNotifications();\n  const methods = useForm<SignUpFields>({\n    defaultValues: EMPTY_FORM_VALUES,\n    mode: 'all',\n    resolver: yupResolver(signUpValidation)\n  });\n\n  React.useEffect(() => {\n    methods.reset(EMPTY_FORM_VALUES);\n  }, [methods]);\n  const { setError, setValue } = methods;\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const onSubmit = React.useCallback(\n    async (fields: SignUpFields) => {\n      try {\n        if (fields.step !== SignUpSteps.PasswordConfirmation) return setValue('step', fields.step + 1);\n        setLoading(true);\n        const { data } = await onSignUp({\n          variables: {\n            pushToken: globalState.expoPushToken,\n            email: fields.email,\n            name: fields.name,\n            password: fields.password,\n            exitWeight: 60,\n            phone: '',\n            passwordConfirmation: fields.passwordConfirmation\n          }\n        });\n\n        if (data?.userRegister?.fieldErrors) {\n          data?.userRegister?.fieldErrors?.forEach(({ field, message }) => {\n            setError(camelCase(field) as keyof SignUpFields, { type: 'custom', message });\n          });\n        }\n        if (data?.userRegister?.authenticatable?.id) {\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n          throw new Error();\n        }\n      }\n    },\n    [setValue, onSignUp, globalState.expoPushToken, setError, onSuccess, notify]\n  );\n\n  return React.useMemo(\n    () => ({ ...methods, onNext: methods.handleSubmit(onSubmit, () => Promise.reject()), loading }),\n    [methods, onSubmit, loading]\n  );\n}\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { FormProvider } from 'react-hook-form';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useNavigation } from '@react-navigation/core';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\nimport useSignupForm from './useForm';\n\nexport default function SignupWizard() {\n  const notify = useNotifications();\n  const navigation = useNavigation();\n  const { onNext, ...methods } = useSignupForm({\n    onSuccess: () => {\n      notify.success('A confirmation link has been sent to your email');\n      navigation.navigate('Unauthenticated', { screen: 'LoginScreen' });\n    },\n  });\n  return (\n    <FormProvider {...methods}>\n      <Wizard\n        dots\n        steps={[\n          { onNext, component: EmailStep },\n          { onNext, component: PasswordStep },\n          { onNext, component: PasswordConfirmationStep },\n          { component: DoneStep },\n        ]}\n      />\n    </FormProvider>\n  );\n}\n","import * as React from 'react';\nimport { Screen } from 'app/components/layout';\nimport SignupWizard from 'app/forms/sign_up/SignupWizard';\n\nexport default function SignupScreen() {\n  return (\n    <Screen>\n      <SignupWizard />\n    </Screen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LoginScreen from './login/LoginScreen';\nimport SignUpScreen from './signup/SignUpScreen';\n\nexport type UnauthenticatedRoutes = {\n  LoginScreen: undefined;\n  SignUpScreen: undefined;\n  SignUpWizard: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<UnauthenticatedRoutes>();\nexport function useUnauthenticatedNavigation() {\n  return useNavigation<NavigationProp<UnauthenticatedRoutes>>();\n}\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n        presentation: 'modal',\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n    </Stack.Navigator>\n  );\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      keyExtractor={(item) => JSON.stringify(item)}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { useRef } from 'react';\nimport _isEqual from 'lodash/isEqual';\n\nfunction checkEqualityWithFallback(\n  current: React.DependencyList,\n  next: React.DependencyList,\n  isEqual: typeof _isEqual\n) {\n  try {\n    return isEqual(current, next);\n  } catch {\n    return _isEqual(current, next);\n  }\n}\n\nexport function useCustomEqualityCheck(\n  value: React.DependencyList,\n  isEqual: (current: React.DependencyList, next: React.DependencyList) => boolean = _isEqual\n): React.DependencyList {\n  const ref = useRef<React.DependencyList>([]);\n\n  // Use a fallback if isEqual throw and fallback on lodash/isEqual\n  if (!checkEqualityWithFallback(value, ref.current, isEqual)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n","import * as React from 'react';\nimport fastDeepEqual from 'fast-deep-equal';\nimport { useCustomEqualityCheck } from './useCustomEqualityCheck';\n\nexport default function useMemo<Value>(\n  valueFn: () => Value,\n  dependencies: React.DependencyList,\n  isEqual: (current: unknown, next: unknown) => boolean = fastDeepEqual\n): Value {\n  const deps = useCustomEqualityCheck(dependencies, isEqual);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useMemo(valueFn, deps);\n}\n","import * as React from 'react';\nimport { useCustomEqualityCheck } from './useCustomEqualityCheck';\n\nexport default function useEffect<EffectFn extends () => void | (() => void), Dependencies extends unknown[] = []>(\n  effect: EffectFn,\n  dependencies?: Dependencies,\n  isEqual?: (current: React.DependencyList, next: React.DependencyList) => boolean\n): void {\n  // Memoize the effect with the dependencies\n  // then run it whenever it changes\n  const deps = useCustomEqualityCheck(dependencies as Dependencies, isEqual);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(effect, deps);\n}\n","import * as React from 'react';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { useUserProfileContext } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\n\nexport const validation = yup.object({\n  hasRig: yup.boolean().default(false)\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfileContext();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        hasRig: !!dropzoneUser?.user?.rigs?.length\n      },\n      validation\n    }),\n    [dropzoneUser?.user?.rigs?.length]\n  );\n}\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields>();\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <Controller\n          {...{ control }}\n          name=\"hasRig\"\n          render={({ field: { onChange, value } }) => (\n            <CardSelect\n              items={[\n                { value: true, label: 'I have my own rig' },\n                { value: false, label: 'I dont have my own rig' }\n              ]}\n              renderItemLabel={({ label }) => label}\n              onChangeSelected={(options) => onChange(options?.[0].value)}\n              isSelected={({ value: selected }) => value === selected}\n              selected={[\n                value === false\n                  ? { value: false, label: 'I dont have my own rig' }\n                  : { value: true, label: 'I have my own rig' }\n              ]}\n            />\n          )}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Platform } from 'react-native';\n\nexport default function useImagePicker() {\n  const onPickImage = React.useCallback(async () => {\n    if (Platform.OS !== 'web') {\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n    const result = (await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.1,\n      base64: true,\n    })) as { base64: string };\n\n    return result?.base64;\n  }, []);\n\n  return onPickImage;\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { useUserProfileContext } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\nimport * as yup from 'yup';\n\nexport const validation = yup.object({\n  avatar: yup.string().nullable().default(null)\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfileContext();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        avatar: dropzoneUser?.user?.image\n      },\n      validation\n    }),\n    [dropzoneUser?.user?.image]\n  );\n}\n\nfunction AvatarStep(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields>();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n\n  return (\n    <Step {...props} title=\"Avatar\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <Controller\n            {...{ control }}\n            name=\"avatar\"\n            render={({ field: { value, onChange } }) => (\n              <TouchableRipple\n                onPress={async () => {\n                  try {\n                    const base64 = await pickImage();\n\n                    if (base64) {\n                      // Upload image\n                      onChange(`data:image/jpeg;base64,${base64}`);\n                    }\n                  } catch (e) {\n                    console.log(e);\n                  }\n                }}\n              >\n                {!value ? (\n                  <Avatar.Icon size={175} icon=\"camera\" />\n                ) : (\n                  <Avatar.Image\n                    size={175}\n                    source={{ uri: value }}\n                    style={{\n                      backgroundColor: theme.colors.primary\n                    }}\n                  />\n                )}\n              </TouchableRipple>\n            )}\n          />\n          <Paragraph style={styles.paragraph}>Press to upload a photo</Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 }\n});\n\nexport default AvatarStep;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useFederationsQuery();\n\n  return (\n    <CardSelect<FederationEssentialsFragment>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as FederationEssentialsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { FederationEssentialsFragment } from 'app/api/operations';\nimport { Control, Controller, useFormContext } from 'react-hook-form';\nimport { useUserProfileContext } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\nimport * as yup from 'yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nconst federation = yup.object() as yup.SchemaOf<FederationEssentialsFragment>;\n\nexport const validation = yup.object({\n  federation: federation.nullable().default(null)\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfileContext();\n  const {\n    dropzone: { dropzone }\n  } = useDropzoneContext();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        federation: dropzoneUser?.license?.federation || dropzone?.federation\n      },\n      validation\n    }),\n    [dropzone?.federation, dropzoneUser?.license?.federation]\n  );\n}\n\nexport interface IFederationStepProps extends IWizardStepProps {\n  control: Control<StepFields>;\n}\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields>();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <Controller\n          {...{ control }}\n          name=\"federation\"\n          render={({ field: { value, onChange: onSelect }, fieldState }) => (\n            <>\n              <FederationCardSelect {...{ value, onSelect }} />\n              <HelperText type={fieldState?.error ? 'error' : 'info'}>{fieldState?.error?.message || ''}</HelperText>\n            </>\n          )}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { Control, useFormContext, useWatch } from 'react-hook-form';\nimport { FederationEssentialsFragment } from 'app/api/operations';\n\nimport { useUserProfile } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\nimport * as yup from 'yup';\n\nconst federation = yup.object() as yup.SchemaOf<FederationEssentialsFragment>;\n\nexport const validation = yup.object({\n  apfNumber: yup.string().nullable().default('')\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfile();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        apfNumber:\n          dropzoneUser?.user?.userFederations?.find((f) => f.federation?.id === dropzoneUser?.license?.federation?.id)\n            ?.uid || ''\n      },\n      validation\n    }),\n    [dropzoneUser?.license?.federation?.id, dropzoneUser?.user?.userFederations]\n  );\n}\n\nexport interface IFederationNumberStepProps extends IWizardStepProps {\n  control: Control<StepFields>;\n}\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields & { federation: FederationEssentialsFragment }>();\n  const { apfNumber, federation } = useWatch({ control });\n\n  return (\n    <Step {...props} title={`${federation?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          name=\"apfNumber\"\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          label={`${federation?.name} ID`}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import { LicenseDetailsFragment, LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseDetailsFragment): void;\n}\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<LicenseDetailsFragment>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as LicenseDetailsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { Controller, useFormContext, useWatch } from 'react-hook-form';\nimport { FederationEssentialsFragment, LicenseEssentialsFragment } from 'app/api/operations';\nimport { useUserProfileContext } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\nimport * as yup from 'yup';\n\nconst federation = yup.object() as yup.SchemaOf<FederationEssentialsFragment>;\nconst license = yup.object() as yup.SchemaOf<LicenseEssentialsFragment>;\n\nexport const validation = yup.object({\n  license: license.nullable().default(null)\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfileContext();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        federation: dropzoneUser?.license?.federation,\n        license: dropzoneUser?.license\n      },\n      validation\n    }),\n    [dropzoneUser?.license]\n  );\n}\n\nfunction LicenseStep(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields & { federation?: FederationEssentialsFragment }>();\n\n  const { federation } = useWatch({ control });\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {federation?.id && (\n          <Controller\n            {...{ control }}\n            name=\"license\"\n            render={({ field: { value, onChange: onSelect }, fieldState }) => (\n              <>\n                <LicenseCardSelect {...{ value, onSelect }} federationId={Number(federation?.id)} />\n                <HelperText type={fieldState.error ? 'error' : 'info'}>{fieldState.error?.message || ''}</HelperText>\n              </>\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default LicenseStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { Control, useFormContext } from 'react-hook-form';\nimport { useUserProfileContext } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\nimport * as yup from 'yup';\n\nexport const validation = yup.object({\n  nickname: yup.string().nullable().default(null)\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfileContext();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        nickname: dropzoneUser?.user?.nickname\n      },\n      validation\n    }),\n    [dropzoneUser?.user?.nickname]\n  );\n}\nexport interface INicknameStepProps extends IWizardStepProps {\n  control: Control<StepFields>;\n}\n\nfunction NicknameStep(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields>();\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          name=\"nickname\"\n          mode=\"flat\"\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\nexport default NicknameStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { Control, useFormContext } from 'react-hook-form';\n\nimport { useUserProfileContext } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\nimport * as yup from 'yup';\n\nexport const validation = yup.object({\n  name: yup\n    .string()\n    .required('Please enter your full name, including surname')\n    .test({\n      name: 'fullName',\n      test: (value) => {\n        console.debug('VALIDATING NAME', value);\n        return /\\w+\\s\\w+/.test(value || '');\n      },\n      message: 'Please enter your full name, including surname'\n    })\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfileContext();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        name: dropzoneUser?.user?.name || ''\n      },\n      validation\n    }),\n    [dropzoneUser?.user?.name]\n  );\n}\nexport interface IRealNameStepProps extends IWizardStepProps {\n  control: Control<StepFields>;\n}\n\nfunction RealName(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields>();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          defaultValue=\"\"\n          name=\"name\"\n          mode=\"flat\"\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport Menu from 'app/components/popover/Menu';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\nimport { View } from 'react-native';\n\ninterface IDatepicker {\n  label: string;\n  value: number;\n  disabled?: boolean;\n  onChange(value: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, value, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const left = React.useCallback(() => <List.Icon icon=\"calendar\" />, []);\n  return (\n    <Menu\n      {...{ open, setOpen }}\n      anchor={\n        <List.Item\n          onPress={() => setOpen(true)}\n          disabled={!!disabled}\n          title={label}\n          description={value ? format(value * 1000, 'yyyy/MM/dd') : 'No date selected'}\n          left={left}\n        />\n      }\n    >\n      <View style={{ zIndex: 1500 }}>\n        <DayPicker\n          selectedDays={value ? [new Date(value * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </View>\n    </Menu>\n  );\n}\n","import { withHookForm } from '../withHookForm';\nimport DatePicker from './DatePicker';\n\nexport const DatePickerField = withHookForm(DatePicker);\n\nexport default DatePicker;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { DatePickerField } from 'app/components/input/date_picker';\nimport { useFormContext } from 'react-hook-form';\nimport { useUserProfileContext } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\nimport * as yup from 'yup';\n\nexport const validation = yup.object({\n  repackExpiresAt: yup\n    .number()\n    .required('Please enter the date of your next repack')\n    .transform((value) => {\n      console.debug('Transforming repackExpiresAt', value, Number(value));\n      return value ? Number(value) : undefined;\n    })\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfileContext();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        repackExpiresAt: dropzoneUser?.user?.rigs?.[0]?.repackExpiresAt || undefined\n      },\n      validation\n    }),\n    [dropzoneUser?.user?.rigs]\n  );\n}\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields>();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePickerField {...{ control }} name=\"repackExpiresAt\" label=\"Reserve repack due date\" />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center'\n  },\n  field: {\n    marginBottom: 8\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column'\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center'\n  }\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport Select from 'app/components/input/select/Select';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { FormTextField } from 'app/components/input/text/TextField';\n\nimport { useUserProfileContext } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\nimport * as yup from 'yup';\n\nexport const validation = yup.object({\n  rigId: yup.string().nullable().default(null),\n  make: yup.string().required('Please select a manufacturer').default('Icon'),\n  model: yup.string().required('Please enter the model of your container'),\n  serial: yup.string().required('Serial number makes it faster to identify and inspect your container')\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfileContext();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        make: dropzoneUser?.user?.rigs?.[0]?.make || '',\n        model: dropzoneUser?.user?.rigs?.[0]?.model || '',\n        serial: dropzoneUser?.user?.rigs?.[0]?.serial || '',\n        rigId: dropzoneUser?.user?.rigs?.[0]?.id || null\n      },\n      validation\n    }),\n    [dropzoneUser?.user?.rigs]\n  );\n}\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields>();\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Controller\n          {...{ control }}\n          name=\"make\"\n          render={({ field: { value, onChange }, fieldState }) => (\n            <>\n              <Select<string>\n                label=\"Manufacturer\"\n                onChange={(value) => {\n                  setIsOtherMake(value === 'other');\n                  onChange(value);\n                }}\n                {...{ value }}\n                options={[\n                  'Icon',\n                  'Javelin',\n                  'Mirage',\n                  'Vector / UPT',\n                  'PA (Talon)',\n                  'Infinity',\n                  'Parachutes de France',\n                  'Parachute Systems',\n                  'Racer'\n                ]\n                  .map((label) => ({ label, value: label }))\n                  .concat([{ label: 'Other', value: 'other' }])}\n              />\n            </>\n          )}\n        />\n\n        {!isOtherMake ? null : (\n          <Surface style={styles.card}>\n            <FormTextField\n              {...{ control }}\n              name=\"make\"\n              style={{ backgroundColor: 'transparent' }}\n              mode=\"flat\"\n              label=\"Other manufacturer\"\n            />\n          </Surface>\n        )}\n\n        <Surface style={styles.card}>\n          <FormTextField\n            {...{ control }}\n            name=\"model\"\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Model\"\n          />\n        </Surface>\n        <Surface style={styles.card}>\n          <FormTextField\n            {...{ control }}\n            name=\"serial\"\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Serial number\"\n          />\n        </Surface>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center'\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column'\n  },\n  card: { marginVertical: 8 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Card, Paragraph } from 'react-native-paper';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { NumberFieldType } from 'app/components/input/number_input/NumberField';\nimport { useFormContext, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { useUserProfileContext } from 'app/api/crud';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useMemo } from 'app/hooks/react';\nimport * as yup from 'yup';\n\nexport const validation = yup.object({\n  canopySize: yup.number().required('Please enter your canopy size in square feet'),\n  exitWeight: yup.number().required('Enter your exit weight').default(70)\n});\n\ntype StepFields = { [K in keyof yup.InferType<typeof validation>]: yup.InferType<typeof validation>[K] };\n\nexport function useStep(): WizardFormStep<StepFields> {\n  const { dropzoneUser } = useUserProfileContext();\n\n  return useMemo(\n    () => ({\n      defaultValues: {\n        canopySize: dropzoneUser?.user?.rigs?.[0]?.canopySize ? Number(dropzoneUser?.user?.rigs?.[0]?.canopySize) : 150,\n        exitWeight: dropzoneUser?.user?.exitWeight ? parseFloat(dropzoneUser?.user?.exitWeight) : 70\n      },\n      validation\n    }),\n    [dropzoneUser?.user?.exitWeight, dropzoneUser?.user?.rigs]\n  );\n}\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const { control } = useFormContext<StepFields>();\n\n  const { canopySize, exitWeight } = useWatch({ control });\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil((2.205 * Number(exitWeight || 50)) / Number(canopySize || 150), 2).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>Your wingloading is an indicator of your descent rate under canopy</Paragraph>\n          </View>\n        </View>\n\n        <Card style={styles.card} elevation={3}>\n          <FormNumberField\n            {...{ control }}\n            name=\"exitWeight\"\n            label=\"Your exit weight\"\n            variant={NumberFieldType.Weight}\n            helperText=\"Your weight in kg's with all equipment on\"\n          />\n          <FormNumberField\n            {...{ control }}\n            name=\"canopySize\"\n            label=\"Canopy Size\"\n            variant={NumberFieldType.CanopySize}\n            helperText=\"Size of your main canopy in square feet\"\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center'\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column'\n  },\n  card: { padding: 8, paddingRight: 16, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center'\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center'\n  },\n  field: {\n    marginVertical: 8\n  },\n  slider: {\n    flexDirection: 'column'\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center'\n  },\n  wingLoadingCardLeft: {\n    width: '30%'\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%'\n  }\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  useCreateRigMutation,\n  useUpdateRigMutation,\n  useCreateRigInspectionMutation,\n} from '../reflection';\nimport {\n  UpdateRigMutationVariables,\n  CreateRigMutationVariables,\n  RigEssentialsFragment\n} from '../operations';\nimport { TMutationResponse } from './factory';\n\nexport function useEquipment() {\n  const [createRig] = useCreateRigMutation();\n  const [updateRig] = useUpdateRigMutation();\n  const [inspectRig] = useCreateRigInspectionMutation();\n\n  const create = React.useCallback(\n    async function CreateRig(\n      variables: CreateRigMutationVariables\n    ): Promise<TMutationResponse<{ rig: RigEssentialsFragment }>> {\n\n      const response = await createRig({ variables });\n\n      if (response?.data?.createRig?.rig?.id) {\n        return { rig: response?.data?.createRig?.rig };\n      }\n      return {\n        error: response?.data?.createRig?.errors?.[0],\n        fieldErrors: response?.data?.createRig?.fieldErrors || undefined,\n      };\n    },\n    [createRig]\n  );\n\n  const update = React.useCallback(\n    async function UpdateRig(\n      attributes: UpdateRigMutationVariables\n    ): Promise<TMutationResponse<{ rig: RigEssentialsFragment }>> {\n      const response = await updateRig({ variables: attributes });\n\n      if (response?.data?.updateRig?.rig?.id) {\n        return { rig: response?.data?.updateRig?.rig };\n      }\n      return {\n        error: response?.data?.updateRig?.errors?.[0],\n        fieldErrors: response?.data?.updateRig?.fieldErrors || undefined,\n      };\n    },\n    [updateRig]\n  );\n\n  const add = React.useCallback((attributes: CreateRigMutationVariables & { id?: string }) => {\n    if (attributes?.id) {\n      return update({ ...attributes, id: Number(attributes?.id) });\n    }\n    return create(attributes);\n  }, [create, update]);\n\n\n  return React.useMemo(\n    () => ({\n      create,\n      update,\n      add\n    }),\n    [create, update, add]\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { DeepPartial, FieldPath, FieldValues, Merge, useForm as useHookForm, useWatch } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useEffect, useMemo } from '../react';\n\ninterface DefaultWizardStepFields {\n  stepIndex: number;\n  lastStepIndex: number;\n}\n\nexport interface WizardFormStep<\n  StepFields extends FieldValues = FieldValues,\n  Validation extends yup.ObjectSchema<Shape<StepFields>> = yup.ObjectSchema<Shape<StepFields>>\n> {\n  defaultValues: DeepPartial<StepFields>;\n  validation?: Validation;\n}\n\ntype FormValues<T> = UnionToIntersection<T> & DefaultWizardStepFields;\n\ntype WizardStepValues<T extends WizardFormStep> = T['defaultValues'];\ntype WizardStepFields<Y extends WizardFormStep[]> = WizardStepValues<Y[number]>;\n\n// rome-ignore lint/suspicious/noExplicitAny: Only way to get this working\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never\n\nexport interface IUseWizardFormOpts<\n  Steps extends WizardFormStep[],\n  MergedFields extends FieldValues = WizardStepFields<Steps>,\n  WizardFields extends FieldValues = FormValues<MergedFields>,\n// CombinedFields extends UnionToIntersection<WizardFields> = UnionToIntersection<WizardFields>\n> {\n  startIndex?: number;\n  steps: Steps;\n}\n\nexport interface IUseWizardNavigationHandlers<\n  Steps extends WizardFormStep[],\n  MergedFields extends FieldValues = WizardStepFields<Steps>,\n  WizardFields extends FieldValues = FormValues<MergedFields>\n> {\n  onSubmit(fields: WizardFields, defaultValues: WizardFields): Promise<unknown>\n  onSuccess?(): void;\n  onClose?(): void;\n}\n\nexport interface IUseWizardReturnValue<\n  Steps extends WizardFormStep[],\n  MergedFields extends FieldValues = WizardStepFields<Steps>,\n  WizardFields extends FieldValues = FormValues<MergedFields>\n> extends ReturnType<typeof useHookForm<WizardFields>> {\n  loading: boolean;\n  startIndex?: number;\n  restore(): void;\n  getStepIndexByFieldName(key: string): number | undefined;\n  setIndex(index: number): void;\n  setMaxIndex(index: number): void;\n  createHandlers(params: IUseWizardNavigationHandlers<Steps, MergedFields, WizardFields>): {\n    next(): Promise<void>;\n    back(): Promise<void>;\n  }\n}\n\n\nconst INITIAL_WIZARD_VALUES: DefaultWizardStepFields = {\n  stepIndex: 0,\n  lastStepIndex: 0\n};\n\nexport type ConditionalSchema<T> = T extends string\n  ? yup.StringSchema\n  : T extends number\n  ? yup.NumberSchema\n  : T extends boolean\n  ? yup.BooleanSchema\n  // rome-ignore lint/suspicious/noExplicitAny: Not used, and its hard to type yup\n  : T extends Record<any, any>\n  ? yup.AnyObjectSchema\n  // rome-ignore lint/suspicious/noExplicitAny: Not used, and its hard to type yup\n  : T extends Array<any>\n  // rome-ignore lint/suspicious/noExplicitAny: Not used, and its hard to type yup\n  ? yup.ArraySchema<any, any>\n  : yup.AnySchema;\n\nexport type Shape<Fields> = {\n  [Key in keyof Fields]: ConditionalSchema<Fields[Key]>;\n};\n\nconst wizardSchema = yup.object({ stepIndex: yup.number().default(0), lastStepIndex: yup.number().default(0) });\n\nfunction createValidators(validators: ReturnType<typeof yup.object>[]) {\n  return yupResolver(\n    validators?.reduce((acc, validator, index) => {\n      return acc.when(({ stepIndex }) => {\n        if (stepIndex >= index) {\n          return acc.concat(validator);\n        }\n        return acc;\n      });\n    }, wizardSchema) || wizardSchema\n  );\n}\n\nexport function useWizardForm<\n  Steps extends WizardFormStep[],\n  MergedFields extends FieldValues = WizardStepFields<Steps>,\n  WizardFields extends FieldValues = FormValues<MergedFields>,\n// CombinedFields extends UnionToIntersection<WizardFields> = UnionToIntersection<WizardFields>\n>(opts: IUseWizardFormOpts<Steps, MergedFields, WizardFields>): IUseWizardReturnValue<\n  Steps,\n  MergedFields,\n  WizardFields\n> {\n  const { steps, startIndex } = opts;\n\n  const [loading, setLoading] = useState(false);\n\n  const initialValues: Partial<WizardFields> = useMemo(() =>\n    Object.assign({}, ...steps?.map((step) => step?.defaultValues || {})),\n    [steps]);\n\n  const defaultValues = useMemo(() => ({\n    ...INITIAL_WIZARD_VALUES,\n    stepIndex: startIndex || 0,\n    lastStepIndex: ((steps?.length || 1) - 1),\n    ...initialValues,\n  }), [initialValues, steps?.length, startIndex]);\n\n  console.debug({ defaultValues });\n\n\n  const form = useHookForm<WizardFields | typeof INITIAL_WIZARD_VALUES>({\n    resolver: createValidators(steps?.map((step) => step?.validation).filter(Boolean) as ReturnType<typeof yup.object>[] || []),\n    defaultValues,\n    mode: 'all',\n    shouldUnregister: false\n  });\n\n\n  const { reset, handleSubmit, setValue, control, formState } = form;\n  const { stepIndex } = useWatch({ control });\n\n  const restore = useCallback(() => reset(defaultValues), [defaultValues, reset]);\n  useEffect(() => {\n    console.debug('Resetting fields');\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n\n  const getStepIndexByFieldName = useCallback((fieldName: FieldPath<WizardFields>) => {\n    const fieldIndex = steps?.findIndex((step) => Object.keys(step?.defaultValues || {}).includes(fieldName as string));\n    return fieldIndex !== undefined ? fieldIndex : -1;\n  }, [steps]);\n\n  const setIndex = useCallback((index: number) => {\n    setValue('stepIndex', index, { shouldValidate: false });\n  }, [setValue]);\n\n  const setMaxIndex = useCallback((index: number) => {\n    setValue('lastStepIndex', index, { shouldValidate: false });\n  }, [setValue]);\n\n\n  const createHandlers = useCallback(({ onSubmit, onSuccess, onClose }: IUseWizardNavigationHandlers<Steps, MergedFields, WizardFields>): {\n    next(): Promise<void>;\n    back(): Promise<void>;\n  } => ({\n    back: async () => {\n      if (stepIndex === (startIndex || 0)) {\n        return onClose?.();\n      }\n      setValue('stepIndex', (stepIndex || 0) - 1);\n    },\n    next: handleSubmit(async (fields) => {\n      setLoading(true);\n      try {\n        const successful = await onSubmit(fields as WizardFields, defaultValues as never);\n        if (successful !== false && stepIndex < fields.lastStepIndex) {\n          console.debug({ successful });\n          setValue('stepIndex', (stepIndex || 0) + 1);\n          return false;\n        }\n      } finally {\n        setLoading(false);\n      }\n    })\n  }), [defaultValues, handleSubmit, setValue, startIndex, stepIndex]);\n\n\n  return useMemo(() => ({\n    ...form as ReturnType<typeof useHookForm<WizardFields>>,\n    getStepIndexByFieldName,\n    setIndex,\n    startIndex: startIndex || 0,\n    restore,\n    setMaxIndex,\n    createHandlers,\n    loading,\n  }), [setIndex, startIndex, restore, setMaxIndex, createHandlers, form, getStepIndexByFieldName, loading]);\n}\n\n","import * as React from 'react';\n\nimport { useStep as useAskForRigStep } from './steps/AskForRig';\nimport { useStep as useAvatarStep } from './steps/Avatar';\nimport { useStep as useFederationStep } from './steps/Federation';\nimport { useStep as useFederationNumberStep } from './steps/FederationNumber';\nimport { useStep as useLicenseStep } from './steps/License';\nimport { useStep as useNicknameStep } from './steps/Nickname';\nimport { useStep as useRealNameStep } from './steps/RealName';\nimport { useStep as useReserveRepackStep } from './steps/ReserveRepack';\nimport { useStep as useRigStep } from './steps/Rig';\nimport { useStep as useWingloadingStep } from './steps/Wingloading';\nimport { useUserProfileContext } from 'app/api/crud';\nimport { useEquipment } from 'app/api/crud/useEquipment';\nimport { useWizardForm } from 'app/hooks/forms';\nimport { useMemo } from 'app/hooks/react';\nimport { camelCase, isEqual } from 'lodash';\nexport interface IUserWizardFormOpts {\n  startIndex: number;\n  onSuccess?(): void;\n  onClose?(): void;\n}\n\nexport function useUserWizardForm(opts: IUserWizardFormOpts) {\n  const { onClose, onSuccess, startIndex } = opts;\n  const [loading, setLoading] = React.useState(false);\n\n  const step1 = useRealNameStep();\n  const step2 = useNicknameStep();\n  const step3 = useAvatarStep();\n  const step4 = useFederationStep();\n  const step5 = useFederationNumberStep();\n  const step6 = useLicenseStep();\n  const step7 = useAskForRigStep();\n  const step8 = useRigStep();\n  const step9 = useReserveRepackStep();\n  const step10 = useWingloadingStep();\n\n  const steps = useMemo(\n    () => [step1, step2, step3, step4, step5, step6, step7, step8, step9, step10],\n    [step1, step10, step2, step3, step4, step5, step6, step7, step8, step9]\n  );\n\n  const { update, dropzoneUser, joinFederation } = useUserProfileContext();\n  const equipment = useEquipment();\n\n  const methods = useWizardForm({\n    startIndex,\n    steps\n  });\n\n  const { restore, createHandlers, setValue, setError, getStepIndexByFieldName } = methods;\n\n  const handlers = useMemo(\n    () =>\n      createHandlers({\n        onClose,\n        onSuccess,\n        onSubmit: async (fields, initial) => {\n          try {\n            if (!dropzoneUser?.id) return;\n            setLoading(true);\n            const {\n              stepIndex = 0,\n              lastStepIndex = 0,\n              apfNumber,\n              avatar,\n              canopySize,\n              exitWeight,\n              federation,\n              hasRig,\n              license,\n              make,\n              model,\n              name,\n              nickname,\n              repackExpiresAt,\n              rigId,\n              serial\n            } = fields;\n            console.debug(`== SUBMITTING STEP ${stepIndex} ==`);\n            console.debug(fields);\n\n            if ([3, 4, 5].includes(stepIndex)) {\n              if (stepIndex === 4 && !apfNumber) return true;\n              if (!federation?.id) {\n                setError('federation', { message: 'You must select a federation', type: 'required' });\n                return false;\n              }\n\n              if (!license?.id && stepIndex === 5) {\n                setError('license', { message: 'You must select a license', type: 'required' });\n                return false;\n              }\n\n              if (\n                initial?.federation?.id === federation?.id &&\n                initial?.license?.id === license?.id &&\n                initial?.apfNumber === apfNumber\n              )\n                return true;\n\n              const federationResponse = await joinFederation({\n                federation: federation.id,\n                license: license?.id,\n                uid: apfNumber\n              });\n\n              if ('error' in federationResponse) {\n                console.log('Federation error??');\n                return setError('federation', { message: federationResponse.error, type: 'required' });\n              }\n\n              if ('userFederation' in federationResponse && federationResponse.userFederation.license) {\n                console.debug('Setting license', federationResponse.userFederation.license);\n                setValue('license', federationResponse.userFederation.license);\n              }\n              return true;\n            }\n\n            if (stepIndex === 6 && !hasRig) {\n              setValue('stepIndex', lastStepIndex);\n              return false;\n            }\n\n            if (hasRig && stepIndex >= 7 && stepIndex < lastStepIndex) {\n              if (\n                isEqual(\n                  { repackExpiresAt, make, model, serial, canopySize },\n                  {\n                    repackExpiresAt: initial?.repackExpiresAt,\n                    make: initial?.make,\n                    model: initial?.model,\n                    serial: initial?.serial,\n                    canopySize: initial?.canopySize\n                  }\n                )\n              ) {\n                return true;\n              }\n              const rigResponse = await equipment.add({\n                userId: Number(dropzoneUser.user.id),\n                repackExpiresAt,\n                make,\n                model,\n                serial,\n                canopySize,\n                id: rigId || undefined\n              });\n              if ('error' in rigResponse) {\n                setError('serial', { message: rigResponse.error, type: 'required' });\n                return false;\n              }\n              if ('fieldErrors' in rigResponse) {\n                rigResponse.fieldErrors?.forEach(({ field, message }) => {\n                  const camelizedField = camelCase(field);\n                  if (camelizedField === 'make') return setError('make', { message, type: 'required' });\n                  if (camelizedField === 'model') return setError('model', { message, type: 'required' });\n                  if (camelizedField === 'serial') return setError('serial', { message, type: 'required' });\n                  if (camelizedField === 'canopySize') return setError('canopySize', { message, type: 'required' });\n                  if (camelizedField in fields) return setError(camelizedField as keyof typeof fields, { message });\n                });\n                return false;\n              }\n              if ('rig' in rigResponse) {\n                setValue('rigId', rigResponse.rig.id);\n                setValue('make', rigResponse.rig.make || '');\n                setValue('model', rigResponse.rig.model || '');\n                setValue('serial', rigResponse.rig.serial || '');\n                setValue('stepIndex', stepIndex + 1);\n              }\n              return false;\n            }\n\n            if (stepIndex === lastStepIndex) {\n              const result = await update({\n                exitWeight,\n                image: avatar || undefined,\n                license: license?.id ? Number(license.id) : null,\n                nickname,\n                name\n              });\n\n              if ('fieldErrors' in result) {\n                result.fieldErrors?.forEach(({ field, message }) => {\n                  const camelizedField = camelCase(field);\n                  if (camelizedField === 'name') return setError('name', { message, type: 'required' });\n                  if (camelizedField === 'nickname') return setError('nickname', { message, type: 'required' });\n                  if (camelizedField === 'license') return setError('license', { message, type: 'required' });\n                  if (camelizedField === 'exitWeight') return setError('exitWeight', { message, type: 'required' });\n                  if (camelizedField in fields) return setError(camelizedField as keyof typeof fields, { message });\n                });\n\n                const firstError = Math.min(\n                  ...((result.fieldErrors\n                    ?.map(({ field }) => {\n                      return getStepIndexByFieldName(field);\n                    })\n                    .filter((i) => i !== -1) || []) as number[])\n                );\n                if (firstError !== -1) {\n                  setValue('stepIndex', firstError);\n                  return false;\n                }\n              } else {\n                onSuccess?.();\n                restore();\n              }\n            }\n          } finally {\n            setLoading(false);\n          }\n        }\n      }),\n    [\n      onSuccess,\n      restore,\n      getStepIndexByFieldName,\n      createHandlers,\n      dropzoneUser?.id,\n      dropzoneUser?.user.id,\n      equipment,\n      joinFederation,\n      setError,\n      setValue,\n      onClose,\n      update\n    ]\n  );\n\n  return React.useMemo(() => ({ ...methods, ...handlers, loading }), [methods, handlers, loading]);\n}\n","import * as React from 'react';\n\nimport {\n  KeyboardAvoidingView,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View\n} from 'react-native';\nimport Carousel, { ICarouselInstance } from 'react-native-reanimated-carousel';\nimport { useNavigation } from '@react-navigation/core';\nimport { Step } from './Step';\nimport Dots from './Dots';\nimport Buttons from './Buttons';\nimport type { IUseWizardReturnValue } from 'app/hooks/forms';\nimport { FormProvider, useWatch } from 'react-hook-form';\nimport { WizardFormStep } from 'app/hooks/forms/useWizard';\nimport { useEffect, useMemo } from 'app/hooks/react';\n\nexport interface IHookFormWizardProps<HookFormWizardSteps extends WizardFormStep[]>\n  extends IUseWizardReturnValue<HookFormWizardSteps>,\n    ReturnType<IUseWizardReturnValue<HookFormWizardSteps>['createHandlers']> {\n  dots?: boolean;\n  steps: typeof Step[];\n}\n\nexport type WizardRef = ICarouselInstance;\n\nfunction Wizard<WizardSteps extends WizardFormStep[]>(\n  props: IHookFormWizardProps<WizardSteps>,\n  ref: React.Ref<ICarouselInstance>\n) {\n  const { dots, steps, ...form } = props;\n  const { control, loading, setMaxIndex, setIndex, next, back } = form;\n  const { stepIndex: step, lastStepIndex } = useWatch({ control });\n  const currentIndex = useMemo(() => step || 0, [step]);\n\n  const [dimensions, setDimensions] = React.useState<LayoutRectangle>({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0\n  });\n  const carouselRef = React.useRef<ICarouselInstance>(null);\n  const screen = useWindowDimensions();\n\n  React.useImperativeHandle(ref, () => ({\n    next: () => carouselRef.current?.next(),\n    prev: () => carouselRef.current?.prev(),\n    getCurrentIndex: () => carouselRef.current?.getCurrentIndex() || 0,\n    scrollTo: (opts) => carouselRef.current?.scrollTo(opts)\n  }));\n\n  useEffect(() => {\n    if (currentIndex !== carouselRef?.current?.getCurrentIndex()) {\n      carouselRef?.current?.scrollTo({ animated: true, index: currentIndex });\n    }\n  }, [currentIndex]);\n\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const { width } = dimensions;\n\n  useEffect(() => {\n    if (lastStepIndex !== (steps?.length || 0)) {\n      setMaxIndex(steps?.length || 0);\n    }\n  }, [lastStepIndex, setMaxIndex, steps]);\n\n  return (\n    <FormProvider {...form}>\n      <KeyboardAvoidingView\n        style={StyleSheet.absoluteFill}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        {...{ onLayout }}\n      >\n        {!dots ? null : (\n          <View style={styles.dots}>\n            <Dots count={lastStepIndex || 0} index={currentIndex} />\n          </View>\n        )}\n        <Carousel\n          autoPlay={false}\n          loop={false}\n          modeConfig={{ parallaxScrollingScale: 1, parallaxScrollingOffset: 32 }}\n          pagingEnabled={false}\n          enabled={false}\n          panGestureHandlerProps={{\n            // Disable swiping\n            activeOffsetX: [-width, width]\n          }}\n          mode=\"parallax\"\n          style={StyleSheet.absoluteFill}\n          data={steps}\n          width={width || screen.width}\n          onSnapToItem={setIndex}\n          ref={carouselRef}\n          renderItem={({ item: WizardStep }) => {\n            if (!WizardStep) {\n              return <View />;\n            }\n            return (\n              <WizardStep\n                actions={\n                  <Buttons\n                    {...{ loading }}\n                    nextLabel={currentIndex === lastStepIndex ? 'Done' : 'Next'}\n                    backLabel=\"Back\"\n                    onNext={next}\n                    onBack={back}\n                  />\n                }\n              />\n            );\n          }}\n        />\n      </KeyboardAvoidingView>\n    </FormProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 48,\n    zIndex: 1100\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300\n  },\n  content: {\n    flexGrow: 1\n  }\n});\n\nexport default React.forwardRef(Wizard);\n","import * as React from 'react';\nimport Wizard from 'app/components/carousel_wizard/HookFormWizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { IWizardStepDefinition, WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\nimport AvatarStep from './steps/Avatar';\nimport { useUserWizardForm } from './useForm';\nimport { UserProfileProvider, useUserProfileContext } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers';\nimport { FormProvider, useWatch } from 'react-hook-form';\n\nconst steps = [\n  RealNameStep,\n  NicknameStep,\n  AvatarStep,\n  FederationStep,\n  FederationNumberStep,\n  LicenseStep,\n  AskForRigStep,\n  RigStep,\n  ReserveRepackStep,\n  WingloadingStep,\n  DoneStep\n];\nexport function UserWizard() {\n  const wizard = React.useRef<WizardRef>(null);\n  const navigation = useNavigation();\n  const { params } = useRoute<{ key: string; name: string; params: { index: number; dropzoneUserId: string } }>();\n  const notify = useNotifications();\n  const methods = useUserWizardForm({\n    startIndex: params.index || 0,\n    onSuccess: () => {\n      navigation.goBack();\n      notify.success('Profile updated');\n    },\n    onClose: () => {\n      navigation.goBack();\n    }\n  });\n\n  return <Wizard ref={wizard} dots {...{ steps }} {...methods} />;\n}\n\nexport function UserWizardScreen() {\n  const { params } = useRoute<{ key: string; name: string; params: { index: number; dropzoneUserId: string } }>();\n  const { dropzoneUserId } = params;\n\n  return (\n    <UserProfileProvider id={dropzoneUserId}>\n      <UserWizard />\n    </UserProfileProvider>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport startCase from 'lodash/startCase';\nimport { FieldError, Mutation } from './schema.d';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(variables: InputType, opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern:\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/\n  };\n}\n\nexport function validates<T extends object>(message: string, callback: (inputVariables: T) => boolean) {\n  return {\n    message,\n    callback\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  } | null\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: { [K in keyof Mutation]: Maybe<Payload> }) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(opts: IAppMutationProps<Payload>): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string | string[]) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap ? fieldErrorMap[field as keyof InputType] : field;\n\n        const [msg] = [message].flat();\n        onFieldError?.(`${fieldName}`, `${startCase(fieldName)} ${msg}`);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (variables: InputType, mopts?: Omit<MutationOptions, 'variables'> | undefined): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable as string}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          if (err instanceof Error) {\n            onError?.(err.message);\n          }\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate\n    };\n  };\n}\n","import { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzoneDocument } from '../reflection';\nimport { CreateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federation: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  Required<CreateDropzoneMutation>['createDropzone']\n>(CreateDropzoneDocument, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federation: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs } from '../schema.d';\nimport { UpdateDropzoneDocument } from '../reflection';\nimport { UpdateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  Required<UpdateDropzoneMutation>['updateDropzone']\n>(UpdateDropzoneDocument, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChange={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","import * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport Constants from 'app/constants/expo';\n\nimport * as Location from 'expo-location';\nimport { useIsFocused } from '@react-navigation/core';\n\n// Used if user location cant be used and we have no other fallback\n// This points to Brisbane:\nconst DEFAULT_COORDS = { lat: -27.4705, lng: 153.026 };\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function MapWebView(props: IMapProps) {\n  const { width, height, position, children, center, coords: _coords, shape, interactive, onDragEnd } = props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: Constants?.googleMapsWeb,\n    id: 'google-maps-script'\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n  const coords = _coords || DEFAULT_COORDS;\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        // const location = await Location.getCurrentPositionAsync({});\n        // const lat = coords?.lat || location.coords.latitude;\n        // const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        console.log({ error });\n      } finally {\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds(coords);\n\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n        map.current?.panTo?.(coords);\n      }\n    },\n    [coords]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  const isFocused = useIsFocused();\n\n  return !isLoaded || !isFocused ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        // @ts-ignore\n        onLoad={(component: GoogleMap) => {\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        ref={map}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // @ts-ignore\n            lat: map.current.center.lat(),\n\n            // @ts-ignore\n            lng: map.current.center.lng()\n          });\n        }}\n        onUnmount={onUnmount}\n        mapTypeId={google.maps.MapTypeId.HYBRID}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n\n          ...(mapStyle as object)\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          center: coords,\n          mapTypeControl: false,\n          mapTypeId: google.maps.MapTypeId.HYBRID,\n          zoomControl: false\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, List, Searchbar } from 'react-native-paper';\nimport debounce from 'lodash/debounce';\nimport { GeocodedLocation } from 'app/api/schema.d';\nimport { first } from 'lodash';\nimport { useAddressToLocationLazyQuery } from 'app/api/reflection';\n\ninterface IAddressSearchBarProps {\n  value: string;\n  autocomplete?: boolean;\n  selectedLocation?: GeocodedLocation;\n  onChange(value: string): void;\n  onSelect(value: GeocodedLocation): void;\n}\nexport default function AddressSearchBar(props: IAddressSearchBarProps) {\n  const { value, onChange: onChangeText, onSelect } = props;\n  const [suggestions, setSuggestions] = React.useState<GeocodedLocation[]>([]);\n  const [selected, setSelected] = React.useState<GeocodedLocation>();\n  const [fetchLocation, { data }] = useAddressToLocationLazyQuery();\n\n  const fetchSuggestions = React.useCallback(\n    (search: string) => {\n      fetchLocation({\n        variables: {\n          search,\n        },\n      });\n    },\n    [fetchLocation]\n  );\n\n  const fetchSuggestionsDebounced = React.useMemo(\n    () => debounce<typeof fetchSuggestions>(fetchSuggestions),\n    [fetchSuggestions]\n  );\n\n  React.useEffect(() => {\n    if (data?.geocode) {\n      setSuggestions([data.geocode]);\n    }\n  }, [data?.geocode]);\n\n  React.useEffect(() => {\n    if (value && value?.length > 4) {\n      fetchSuggestionsDebounced(value);\n    } else if (!value) {\n      setSuggestions([]);\n    }\n  }, [value, fetchSuggestionsDebounced]);\n\n  const onPickResult = React.useCallback(\n    (location: GeocodedLocation) => {\n      onSelect(location);\n      onChangeText(location.formattedString || '');\n      setSuggestions([]);\n      setSelected(location);\n    },\n    [onChangeText, onSelect]\n  );\n\n  return (\n    <View style={{ width: '100%', borderRadius: 3, backgroundColor: 'white' }}>\n      <Searchbar\n        {...{ value, onChangeText }}\n        allowFontScaling\n        numberOfLines={1}\n        onSubmitEditing={() => {\n          if (first(suggestions)) {\n            onPickResult(first(suggestions) as GeocodedLocation);\n          }\n        }}\n      />\n      {suggestions\n        ?.filter((suggestion) => suggestion.formattedString !== selected?.formattedString)\n        .map((item) => {\n          return (\n            <>\n              <Divider />\n              <List.Item\n                title={item.formattedString}\n                onPress={() => {\n                  onPickResult(item);\n                }}\n              />\n            </>\n          );\n        })}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport MapView from 'app/components/map/Map';\nimport AddressSearchBar from 'app/components/input/search/AddressSearchBar';\nimport { useIsFocused } from '@react-navigation/core';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const [searchText, setSearchText] = React.useState('');\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value)\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <Step {...props} title=\"Location\" hideContentUntilNavigatedTo>\n      <MapView\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject\n        }}\n        position={{\n          x: 0,\n          y: 0\n        }}\n        {...{ height, width }}\n        coords={region?.latitude && region?.longitude ? { lat: region?.latitude, lng: region?.longitude } : undefined}\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5\n                },\n                textShadowRadius: 10,\n                zIndex: 10\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </MapView>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <View style={{ width: 300, display: 'none', alignSelf: 'flex-start', marginLeft: 32 }}>\n          <AddressSearchBar\n            value={searchText}\n            onChange={setSearchText}\n            autocomplete\n            onSelect={(item) => {\n              dispatch(actions.forms.dropzone.setField(['lat', item.lat]));\n              dispatch(actions.forms.dropzone.setField(['lng', item.lng]));\n            }}\n          />\n        </View>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3\n            },\n            textShadowRadius: 10\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 32,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    }\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column'\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%'\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12\n  }\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\n// import SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // @ts-ignore\n            sliderComponent={() => null}\n            defaultColor={value}\n            hideSliders\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import { useUpdateRoleMutation } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RoleDetailedFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: RoleDetailedFragment;\n  permissionName: string;\n}\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useUpdateRoleMutation();\n  const notify = useNotifications();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) => notify.error(message));\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\nimport { useDropzonePermissionsLazyQuery } from 'app/api/reflection';\nimport { Paragraph } from 'react-native-paper';\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n  description?: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, description, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useDropzonePermissionsLazyQuery();\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          id: dropzoneForm.original.id,\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      {description && <Paragraph>{description}</Paragraph>}\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { View, StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\n\nfunction Logo(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      } else {\n        console.log({ base64 });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n  const theme = useTheme();\n\n  return (\n    <Step {...props} title=\"Banner\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.banner?.value ? (\n              <LottieView\n                style={{ height: 175, width: 175 }}\n                autoPlay\n                loop={false}\n                source={require('../../../../../assets/images/image-pick.json')}\n              />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.banner?.value }}\n                style={{\n                  borderWidth: StyleSheet.hairlineWidth,\n                  backgroundColor: theme.colors.primary\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={{ paddingHorizontal: 48, marginTop: 24 }}>\n            Your logo is displayed as an avatar for your dropzone throughout the app.\n          </Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 }\n});\nexport default Logo;\n","import * as React from 'react';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport type { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport LogoStep from './steps/Logo';\n\nfunction DropzoneSetupScreen() {\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      notify.error(error);\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) => notify.error(error),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const onComplete = React.useCallback(() => {\n    navigation.dispatch(\n      StackActions.replace('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: {\n            screen: 'ManifestScreen',\n          },\n        },\n      })\n    );\n  }, [navigation]);\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onLogoNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: dropzone.fields.banner.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: dropzone.fields.banner.value || '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.find(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            wizard.current?.scrollTo({ index: 3 });\n            return true;\n          case 'federation':\n            wizard.current?.scrollTo({ index: 1 });\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            return true;\n          case 'name':\n            wizard.current?.scrollTo({ index: 0 });\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            return true;\n          case 'lat':\n          case 'lng':\n            wizard.current?.scrollTo({ index: 2 });\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            return true;\n          default:\n            break;\n        }\n        return false;\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.banner.value,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n  ]);\n\n  const noop = React.useCallback(() => Promise.resolve(), []);\n  const wizard = React.useRef<WizardRef>();\n\n  return (\n    <Wizard\n      dots\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: noop },\n        {\n          onNext: onLogoNext,\n          component: LogoStep,\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateSlot}\n              title=\"Manifest\"\n              description=\"Who can manifest themselves on loads?\"\n            />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              description=\"Who can manifest other people on loads?\"\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            onComplete();\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>We've sent you a link to restore your password.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useRecoverPasswordMutation } from 'app/api/reflection';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport EmailStep from './steps/Email';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const [onRecover] = useRecoverPasswordMutation();\n\n  const onClickRecover = React.useCallback(async () => {\n    try {\n      await onRecover({\n        variables: {\n          email: state.fields.email.value,\n          redirectUrl: '',\n        },\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['email', e.message]));\n      }\n      throw e;\n    }\n  }, [dispatch, onRecover, state.fields.email.value]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[{ onNext: onClickRecover, component: EmailStep }, { component: DoneStep }]}\n    />\n  );\n}\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token\n        }\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials));\n            dispatch(actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User));\n            navigation.navigate('Limbo', { screen: 'DropzoneSelectScreen' });\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32\n          }}\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center'\n  }\n});\n\nexport default ConfirmUserScreen;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Password changed\">\n      <Fields>\n        <LottieView\n          loop={false}\n          autoPlay\n          speed={1.2}\n          style={{ height: 300, width: 300, alignSelf: 'center' }}\n          source={lottieDoneAnimation as unknown as string}\n        />\n        <Paragraph>Your password has been changed. You can now log in again.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUpdateLostPasswordMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { User } from 'app/api/schema.d';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport DoneStep from './steps/Done';\nimport PasswordStep from './steps/Password';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{\n    key: string;\n    name: string;\n\n    params?: { token?: string };\n  }>();\n\n  const [updatePassword] = useUpdateLostPasswordMutation();\n  const wizard = React.useRef<WizardRef>(null);\n\n  const onChangePassword = React.useCallback(async () => {\n    try {\n      if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n        throw new Error('Password mismatch. Did you type exactly the same password?');\n      }\n      if (!route.params?.token) {\n        throw new Error('Security token missing - try clicking the link in the email again');\n      }\n      const result = await updatePassword({\n        variables: {\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          token: route.params.token\n        }\n      });\n\n      if (result?.data?.userUpdatePasswordWithToken?.authenticatable) {\n        dispatch(actions.global.setUser(result.data.userUpdatePasswordWithToken.authenticatable as User));\n        return;\n      }\n      if (result.errors?.length) {\n        throw new Error(result.errors[0].message);\n      }\n      throw new Error('Password change failed');\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw e;\n    }\n  }, [\n    dispatch,\n    route.params?.token,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    updatePassword\n  ]);\n\n  const navigation = useNavigation();\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Password too weak');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onFinished = React.useCallback(async () => {\n    // @ts-ignore\n    navigation.replace('Unauthenticated', { screen: 'LoginScreen' });\n    throw new Error('Error thrown to prevent navigation.goBack');\n  }, [navigation]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[\n        { onBack: navigation.goBack, onNext: validatePassword, component: PasswordStep },\n        { onNext: onChangePassword, component: PasswordConfirmationStep },\n        { component: DoneStep, onNext: onFinished }\n      ]}\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { UserRoutes } from './routes';\n\nexport function useUserNavigation() {\n  return useNavigation<NavigationProp<UserRoutes>>();\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { RefreshControl, FlatList, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport SkeletonContent from 'app/components/Skeleton';\nimport NoResults from 'app/components/NoResults';\nimport { Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment, DropzoneUsersQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers';\nimport omitBy from 'lodash/omitBy';\nimport isEmpty from 'lodash/isEmpty';\nimport { useUserNavigation } from '../useUserNavigation';\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 48, width: 48, marginHorizontal: 12, borderRadius: 48 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\n\nconst loadingFragment: DropzoneUserEssentialsFragment = {\n  id: '__LOADING__',\n  hasCredits: false,\n  walletId: '__LOADING__',\n  hasExitWeight: false,\n  hasLicense: false,\n  hasMembership: false,\n  user: {\n    id: '__LOADING__',\n  },\n};\n\nexport type UserListRoute = {\n  UserListScreen: undefined;\n};\n\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n\n  const { data, loading, refetch } = useDropzoneUsersQuery({\n    variables: omitBy<DropzoneUsersQueryVariables>(\n      {\n        dropzoneId: dropzone?.id as string,\n        search: state.searchText,\n      },\n      isEmpty\n    ) as DropzoneUsersQueryVariables,\n    skip: !dropzone?.id,\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const navigation = useUserNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = React.useMemo(() => data?.dropzoneUsers?.edges || [], [data?.dropzoneUsers?.edges]);\n  console.debug({ users, numColumns });\n  const initialLoading = !users?.length && loading;\n  const theme = useTheme();\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.surface }}>\n      <ProgressBar indeterminate color={global.theme.colors.primary} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList<DropzoneUserEssentialsFragment>\n        data={initialLoading ? new Array(8).fill(loadingFragment) : users.map((edge) => edge?.node)}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: global.currentDropzoneId?.toString(),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={(item, idx) => `user-${item?.id || idx}-${idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%' }}\n        renderItem={({ item }) =>\n          item.id === '__LOADING__' ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${item?.id}`}\n              style={{\n                margin: 0,\n                marginVertical: 0,\n                borderRadius: 2,\n                width: `${100 / numColumns}%`,\n              }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 4, paddingRight: 0, paddingBottom: 4 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={item?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={item?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !item?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={48}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: item?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={48}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('ProfileScreen', {\n                      userId: item?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n          small\n          icon=\"plus\"\n          onPress={dialogs.createUser.open}\n          label=\"Add user\"\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from 'app/state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  onSearch,\n  options,\n  back,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search users...\"\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n      )}\n      {searchVisible ? (\n        <MaterialIcons\n          name=\"close\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      ) : (\n        <MaterialIcons\n          name=\"search\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      )}\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import NumberField from 'app/components/input/number_input/NumberField';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport TextInput from '../../input/text/TextField';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChange={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <NumberField\n          disabled={!canInspect}\n          value={value as number}\n          mode=\"outlined\"\n          helperText={config.description || 'No description'}\n          onChange={(text) => onChange({ ...config, value: text as number })}\n          label={config.label || ''}\n        />\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          value={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            key={`field-${index}`}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema.d';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Avatar, Card, Chip, Divider, ProgressBar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  RigInspectionEssentialsFragment,\n  RigEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n} from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport useMutationUpdateRig from 'app/api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, successColor } from 'app/constants/Colors';\n\nimport { Permission } from 'app/api/schema.d';\nimport { AvailableRigsDocument, DropzoneUsersDetailedDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport interface IRigCardProps {\n  rig: RigEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  rigInspection?: RigInspectionEssentialsFragment;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const pickImage = useImagePicker();\n\n  const updateRig = useMutationUpdateRig({\n    mutation: {\n      refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n    },\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      notify.success('Image uploaded');\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      notify.error('Upload failed');\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = pickImage();\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pickImage, rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useUserNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.owner?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16, maxWidth: 500 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          setOpen={setPackingCardMenuOpen}\n          open={isPackingCardMenuOpen}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              textStyle={{ marginTop: 0 }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <MenuItem\n            title=\"Upload new\"\n            icon=\"camera\"\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <MenuItem\n                title=\"View\"\n                icon=\"eye\"\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rigId: rig.id,\n              dropzoneUserId: dropzoneUser?.id as string,\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, Paragraph } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform, View } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport {\n  DropzoneDocument,\n  DropzoneUserProfileDocument,\n  useCreateRigInspectionMutation,\n  useRigInspectionTemplateQuery,\n} from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Query, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUserProfileQuery, DropzoneUserProfileQueryVariables } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\nimport RigCard from '../equipment/RigCard';\n\nexport type RigInspectionRoute = {\n  RigInspectionScreen: {\n    rigId: string;\n    dropzoneUserId: string;\n  };\n};\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  const notify = useNotifications();\n  const route = useRoute<RouteProp<RigInspectionRoute>>();\n  const { rigId, dropzoneUserId } = route.params;\n  const { dropzoneUser } = useUserProfile({\n    id: dropzoneUserId,\n  });\n  const { data: rigInspectionQuery } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n    skip: !currentDropzone?.dropzone?.id,\n  });\n\n  const rig = React.useMemo(\n    () => dropzoneUser?.user?.rigs?.find(({ id }) => id === rigId),\n    [dropzoneUser?.user?.rigs, rigId]\n  );\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useCreateRigInspectionMutation();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = dropzoneUser?.rigInspections?.some(\n      (inspection) =>\n        inspection.rig?.id?.toString() === rig?.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = dropzoneUser?.rigInspections?.find((record) => record.rig?.id === rig?.id);\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition,\n    dispatch,\n    rig?.id,\n    dropzoneUser?.rigInspections,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzone: currentDropzone?.dropzone?.id,\n          rig: rig?.id,\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<\n            DropzoneUserProfileQuery,\n            DropzoneUserProfileQueryVariables\n          >({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              id: currentDropzone?.dropzone?.id as string,\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: DropzoneDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              earliestTimestamp: startOfDay(new Date()).toISOString(),\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: DropzoneDocument,\n              variables: {\n                dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n                earliestTimestamp: startOfDay(new Date()).toISOString(),\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            dropzoneUser: {\n              rigInspections: [\n                ...(result?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      notify.success('Rig inspection saved');\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig?.id,\n    state.fields,\n    state.ok,\n    notify,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <Screen fullWidth={false}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          backgroundColor: 'transparent',\n        }}\n      >\n        {rig && <RigCard {...{ rig }} />}\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={rigInspectionQuery?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            {canInspect ? null : (\n              <Paragraph>\n                You need Rig Inspector permissions to update this form, but you can still view it.\n              </Paragraph>\n            )}\n            <View style={{ flex: 1, flexGrow: 1, opacity: canInspect ? 1.0 : 0.6 }}>\n              <RigInspectionForm />\n            </View>\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) ===\n                  rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </Screen>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    [Permission.ActAsDzso]: 'shield-cross',\n    [Permission.ActAsGca]: 'radio-handheld',\n    [Permission.ActAsLoadMaster]: 'shield-account',\n    [Permission.ActAsPilot]: 'account-tie-hat',\n    [Permission.ActAsRigInspector]: 'shield-search'\n  }[type];\n\n  const label = {\n    [Permission.ActAsDzso]: 'DZSO',\n    [Permission.ActAsGca]: 'GCA',\n    [Permission.ActAsLoadMaster]: 'Load Master',\n    [Permission.ActAsPilot]: 'Pilot',\n    [Permission.ActAsRigInspector]: 'Rig Inspector'\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[styles.chip, { borderColor: palette.primary.dark }, selected ? undefined : { opacity: 0.5 }].filter(\n        Boolean\n      )}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            // @ts-ignore\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto'\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30\n  }\n});\nexport default Badge;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\nimport { Permission } from 'app/api/schema.d';\n\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUserEssentialsFragment;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const { revokePermission, grantPermission } = useUserProfile();\n  const notify = useNotifications();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const badges = React.useMemo(() => permissions?.filter((name) => /^actAs/.test(name)) || [], [permissions]);\n\n  const shouldShowBadge = React.useCallback(\n    (permission: Permission) => canGrantPermission || badges.includes(permission),\n    [badges, canGrantPermission]\n  );\n\n  const grant = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await grantPermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [dropzoneUser?.id, grantPermission, notify]\n  );\n\n  const revoke = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await revokePermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [notify, dropzoneUser?.id, revokePermission]\n  );\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              !canGrantPermission ? null : badges.includes(permission) ? revoke(permission) : grant(permission)\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly'\n  }\n});\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onChange={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        value={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { useApolloClient } from '@apollo/client';\nimport PermissionBadges from 'app/screens/authenticated/user/profile/UserInfo/PermissionBadges';\nimport * as React from 'react';\nimport { Button, Dialog, List, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Permission } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment, DropzoneUserProfileFragment } from 'app/api/operations';\nimport { DropzoneUserProfileFragmentDoc, useUpdateDropzoneUserMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, onSuccess } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const client = useApolloClient();\n  const getCachedUser = React.useCallback(\n    () =>\n      !state.original\n        ? null\n        : client.readFragment<DropzoneUserProfileFragment>({\n            fragment: DropzoneUserProfileFragmentDoc,\n            fragmentName: 'dropzoneUserProfile',\n            id: client.cache.identify(state.original),\n          }),\n    [client, state.original]\n  );\n  const [mutationUpdateDropzoneUser, createData] = useUpdateDropzoneUserMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          dropzoneUserId: state.original?.id as string,\n          attributes: {\n            userRoleId: Number(state.fields.role.value?.id),\n            expiresAt: state.fields.expiresAt.value,\n          },\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        notify.error(result?.errors[0]);\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    notify,\n    onSuccess,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Dialog visible={!!open}>\n      <ProgressBar\n        indeterminate\n        visible={createData.loading}\n        color={globalState.theme.colors.primary}\n      />\n      <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n      <Dialog.Content>\n        <DropzoneUserForm />\n        {state.original && getCachedUser() ? (\n          <>\n            <List.Subheader style={{ paddingLeft: 0 }}>Acting permissions</List.Subheader>\n            <PermissionBadges\n              dropzoneUser={getCachedUser() as DropzoneUser}\n              permissions={\n                (getCachedUser() as DropzoneUser).permissions?.filter((name) =>\n                  /^actAs/.test(name)\n                ) as Permission[]\n              }\n            />\n          </>\n        ) : null}\n      </Dialog.Content>\n      <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n        <Button\n          onPress={() => {\n            dispatch(actions.forms.dropzoneUser.reset());\n            onClose();\n          }}\n        >\n          Cancel\n        </Button>\n\n        <Button onPress={onSave}>Save</Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema.d';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        owner {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('is required')],\n    model: [isRequired('is required')],\n    serial: [isRequired('number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"You can give your equipment a nickname\"\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Make\"\n        helperText=\"e.g Javelin, Mirage\"\n        error={state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Model\"\n        error={state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Serial\"\n        error={state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Current canopy size\"\n        error={state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Size of canopy in container\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          value={[state.fields.rigType?.value || 'sport']}\n          onChange={([rigType]) => dispatch(actions.forms.rig.setField(['rigType', rigType]))}\n        />\n      )}\n      <DatePicker\n        value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        console.log(payload);\n        onSuccess();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      const params = {\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      };\n      console.log(params);\n      const d = await updateRig.mutate(params);\n      console.log(d);\n    } else {\n      const x = await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n      console.log(x);\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField(['exitWeight', state.original.user?.exitWeight || '60'])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.user?.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Nickname\"\n        error={state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Phone\"\n        error={state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        error={state.fields.exitWeight.error}\n        onChange={(num) => dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))}\n        label=\"Exit weight (kg)\"\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onChange={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onChange={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { UpdateUserMutation, UpdateUserMutationVariables } from '../operations';\nimport { UpdateUserDocument } from '../reflection';\n\nexport default createMutation<\n  UpdateUserMutationVariables,\n  Required<UpdateUserMutation>['updateUser']\n>(UpdateUserDocument, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { useJoinFederationMutation, DropzoneUserProfileDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId?: string;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const [joinFederation] = useJoinFederationMutation();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      notify.success('Profile has been updated');\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) => dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) => notify.error(error),\n    mutation: {\n      refetchQueries: [\n        {\n          query: DropzoneUserProfileDocument,\n          variables: {\n            dropzoneUserId\n          }\n        }\n      ]\n    }\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      dropzoneUser: state.original?.id,\n      name: state.fields.name.value,\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    const selectedLicenseFederation = state.original?.user?.userFederations?.find(\n      ({ federation }) => federation.slug === state.fields.license.value?.federation?.slug\n    );\n    if (\n      (state.fields.license.value?.id && selectedLicenseFederation?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value && state.fields.apfNumber?.value !== selectedLicenseFederation?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federation: state.fields.license.value?.federation?.id?.toString() as string,\n          uid: state.fields?.apfNumber?.value,\n          license: state.fields.license.value?.id\n        }\n      });\n    }\n  }, [\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.federation?.slug,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.user?.userFederations\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function useProfileWizard() {\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser }\n  } = useDropzoneContext();\n\n  return React.useCallback(\n    (index?: number) => {\n      if (currentUser) {\n        navigation.navigate('Wizards', {\n          screen: 'UserWizardScreen',\n          params: {\n            dropzoneUserId: currentUser.id,\n            index\n          }\n        });\n      }\n    },\n    [currentUser, navigation]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Caption, Divider, Paragraph, Title, TouchableRipple } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport startCase from 'lodash/startCase';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\nimport UserAvatar from 'app/components/UserAvatar';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUserProfileFragment;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n}\n\nconst badgesInitials = {\n  [Permission.ActAsLoadMaster]: 'LM',\n  [Permission.ActAsPilot]: 'Pilot',\n  [Permission.ActAsRigInspector]: 'Rig.Insp',\n  [Permission.ActAsGca]: 'GCA',\n  [Permission.ActAsDzso]: 'DZSO',\n};\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  const actingPermissions = (\n    dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || []\n  ).map((str) => badgesInitials[str as keyof typeof badgesInitials]);\n\n  console.log('image', dropzoneUser?.user?.image);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            <UserAvatar\n              image={dropzoneUser?.user?.image}\n              name={dropzoneUser?.user?.name}\n              size={80}\n            />\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            setOpen={setContactOpen}\n            open={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n            {actingPermissions.length ? (\n              <Caption style={{ marginTop: 4 }}>\n                {` ${actingPermissions.map(startCase).join(', ')}`}\n              </Caption>\n            ) : null}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined\n                  }\n                ]}\n                style={{\n                  paddingTop: 15\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%'\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%'\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white'\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white'\n  }\n});\n","import * as React from 'react';\n\nimport { FAB, useTheme } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useNavigation } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Alert } from 'react-native';\nimport { DropzoneUsersDocument, useArchiveUserMutation } from 'app/api/reflection';\nimport { errorColor, infoColor, successColor, warningColor } from 'app/constants/Colors';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\ntype PropsOf<T> = T extends React.ComponentType<infer P> ? P : never;\ntype FABActions = PropsOf<typeof FAB.Group>['actions'];\ninterface IUserActionsButtonProps {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  visible?: boolean;\n}\nexport default function UserActionsButton(props: IUserActionsButtonProps) {\n  const { dropzoneUser, visible } = props;\n  const {\n    dropzone: { currentUser }\n  } = useDropzoneContext();\n  const [fabOpen, setFabOpen] = React.useState(false);\n  const { dialogs } = useManifestContext();\n  const notify = useNotifications();\n\n  const dispatch = useAppDispatch();\n  const navigation = useUserNavigation();\n  const rootNavigator = useNavigation();\n  const theme = useTheme();\n\n  const onClickSetupWizard = React.useCallback(() => {\n    if (dropzoneUser) {\n      rootNavigator.navigate('Wizards', {\n        screen: 'UserWizardScreen',\n        params: { index: undefined, dropzoneUserId: dropzoneUser.id }\n      });\n    }\n  }, [dropzoneUser, rootNavigator]);\n\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n\n  const onClickTransactions = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('OrdersScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickEquipment = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickAddFunds = React.useCallback(() => {\n    if (dropzoneUser) {\n      dialogs.credits.open({ dropzoneUser });\n    }\n  }, [dialogs.credits, dropzoneUser]);\n\n  const onClickEdit = React.useCallback(() => {\n    if (dropzoneUser?.user) {\n      dispatch(actions.forms.user.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const isSelf = React.useMemo(() => currentUser?.id === dropzoneUser?.id, [currentUser?.id, dropzoneUser?.id]);\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const canDeleteUsers = useRestriction(Permission.DeleteUser);\n\n  const [deleteUser] = useArchiveUserMutation();\n\n  const onDeleteUser = React.useCallback(() => {\n    Alert.alert(\n      isSelf ? 'Delete My Account' : `Delete ${dropzoneUser?.user?.name}`,\n      isSelf\n        ? 'Are you sure you want to delete your account? You will be logged out'\n        : 'Are you sure you want to delete this user ? ',\n      [\n        { style: 'cancel', text: 'Cancel', onPress: () => null },\n        {\n          style: 'destructive',\n          text: 'Yes, delete',\n          onPress: async () => {\n            try {\n              const { data } = await deleteUser({\n                variables: {\n                  id: Number(dropzoneUser?.id)\n                },\n                refetchQueries: [DropzoneUsersDocument]\n              });\n\n              data?.deleteUser?.errors?.forEach((message) => {\n                notify.success(message);\n              });\n              if (data?.deleteUser?.dropzoneUser?.id) {\n                notify.success(`${dropzoneUser?.user?.name} has been removed`);\n              }\n\n              navigation.goBack();\n            } catch (e) {\n              console.log(e);\n            }\n          }\n        }\n      ]\n    );\n  }, [deleteUser, dropzoneUser?.id, dropzoneUser?.user?.name, isSelf, navigation, notify]);\n\n  const fabActions = React.useMemo(\n    () =>\n      [\n        isSelf && canUpdateUsers\n          ? {\n              icon: 'pencil',\n              label: 'Edit',\n              onPress: onClickEdit\n            }\n          : null,\n        {\n          icon: 'account-convert',\n          label: 'Setup Wizard',\n          color: infoColor,\n          onPress: onClickSetupWizard\n        },\n        canUpdateUsers\n          ? {\n              icon: 'lock',\n              label: 'Access & Membership',\n              color: warningColor,\n              onPress: onClickAccessAndMembership\n            }\n          : null,\n        canAddTransaction\n          ? {\n              icon: 'cash-plus',\n              label: 'Add Funds',\n              color: successColor,\n              onPress: onClickAddFunds\n            }\n          : null,\n        isSelf || canViewOthersTransactions\n          ? {\n              icon: 'account-cash',\n              label: 'Manage Transactions',\n              onPress: onClickTransactions\n            }\n          : null,\n        {\n          icon: 'parachute',\n          label: 'Manage Equipment',\n          onPress: onClickEquipment\n        },\n        canDeleteUsers\n          ? {\n              icon: 'account-off',\n              label: 'Delete user',\n              onPress: onDeleteUser,\n              color: errorColor\n            }\n          : null\n      ].filter(Boolean) as FABActions,\n    [\n      canAddTransaction,\n      canDeleteUsers,\n      canUpdateUsers,\n      canViewOthersTransactions,\n      isSelf,\n      onClickAccessAndMembership,\n      onClickAddFunds,\n      onClickEdit,\n      onClickEquipment,\n      onClickSetupWizard,\n      onClickTransactions,\n      onDeleteUser\n    ]\n  );\n\n  return (\n    <FAB.Group\n      testID=\"user-profile-fab\"\n      open={fabOpen}\n      visible={(!!dropzoneUser?.id && visible) || false}\n      icon={fabOpen ? 'close' : 'account-edit'}\n      fabStyle={{\n        marginLeft: 16,\n        marginBottom: 16,\n        backgroundColor: theme.colors.primary\n      }}\n      onStateChange={({ open }) => setFabOpen(open)}\n      actions={fabActions}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { UserSlotDetailsFragment } from 'app/api/operations';\n\ninterface ISlot {\n  slot: UserSlotDetailsFragment;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <List.Item\n            description={`on Load #${slot.load.loadNumber}`}\n            title={slot.jumpType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text\n                  style={[\n                    styles.jumpType,\n                    {\n                      color: theme.colors.onSurface,\n                    },\n                  ]}\n                >\n                  -${slot.cost?.toFixed(2)}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  width: 100,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <Avatar.Icon\n                  icon=\"parachute-outline\"\n                  size={48}\n                  style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n    flexGrow: 1,\n  },\n  jumpType: {\n    fontSize: 16,\n    fontFamily: 'Roboto_400Regular',\n    fontWeight: '400',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n    flexGrow: 1,\n    minWidth: 150,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\nimport enAU from 'date-fns/locale/en-AU';\n\nimport { groupBy, map } from 'lodash';\nimport { differenceInDays, format, formatDistance, parseISO, startOfDay } from 'date-fns';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\n\nimport SlotCard from '../SlotCard';\n\nexport interface IJumpHistoryTab {\n  tabIndex: number;\n  currentTabIndex: number;\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n}\nexport default function JumpHistoryTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useNavigation();\n\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.slots?.edges, (e) =>\n          startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n        ),\n        (d, t) => {\n          const date = parseISO(t);\n          const title =\n            differenceInDays(new Date(), date) > 7\n              ? format(date, 'dd MMM, yyyy')\n              : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n          return {\n            title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.slots?.edges]\n  );\n\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n      style={{ padding: 8 }}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <SlotCard\n                slot={item.node}\n                onPress={() => {\n                  if (item?.node?.load?.id) {\n                    navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Manifest',\n                        params: {\n                          screen: 'LoadScreen',\n                          params: {\n                            loadId: item.node?.load?.id,\n                          },\n                        },\n                      },\n                    });\n                  }\n                }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment\n} from 'app/api/operations';\nimport { DropzoneUser } from 'app/api/schema.d';\nimport { successColor } from 'app/constants/Colors';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { DateTime } from 'luxon';\n\ninterface IOrder {\n  order: OrderEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const isSelfBuyer =\n    order.buyer?.__typename === 'DropzoneUser' && (order.buyer as DropzoneUser)?.id === dropzoneUser?.id;\n  const icon =\n    // @ts-ignore\n    isSelfBuyer === dropzoneUser?.id ? 'cash-minus' : 'cash-plus';\n\n  const right = React.useCallback(\n    () => (\n      <Text\n        style={{\n          fontSize: 16,\n          fontFamily: 'Roboto_400Regular',\n          fontWeight: '400',\n          textAlign: 'center',\n          alignSelf: 'center',\n          color: theme.colors.onSurface\n        }}\n      >\n        {`${isSelfBuyer ? '-$' : '$'}${order.amount.toFixed(2)}`}\n      </Text>\n    ),\n    [isSelfBuyer, order.amount, theme.colors.onSurface]\n  );\n\n  const left = React.useCallback(\n    () => (\n      <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n        {showAvatar ? (\n          <UserAvatar\n            style={{ alignSelf: 'center', marginHorizontal: 12 }}\n            size={60}\n            name={\n              (order?.buyer as DropzoneUserEssentialsFragment)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment).name ||\n              ''\n            }\n            image={\n              (order?.buyer as DropzoneUserEssentialsFragment).user?.image ||\n              (order?.buyer as DropzoneEssentialsFragment).banner ||\n              undefined\n            }\n          />\n        ) : (\n          <MaterialCommunityIcons\n            color={\n              order.buyer &&\n              '__typename' in order.buyer &&\n              // @ts-ignore\n              order.buyer.__typename === 'DropzoneUser' &&\n              (order.buyer as DropzoneUserEssentialsFragment)?.id === dropzoneUser?.id\n                ? '#FF1414'\n                : successColor\n            }\n            name={icon}\n            size={36}\n            style={{ marginHorizontal: 16 }}\n          />\n        )}\n      </View>\n    ),\n    [dropzoneUser?.id, icon, order.buyer, showAvatar]\n  );\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Caption\n          style={{\n            textAlign: 'right',\n            paddingRight: 4,\n            paddingTop: 2,\n            marginBottom: 0\n          }}\n        >\n          {DateTime.fromISO(order?.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n        </Caption>\n        <Card.Content style={styles.orderContent}>\n          <List.Item\n            title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as DropzoneEssentialsFragment)?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            description={order.title || null}\n            descriptionStyle={styles.orderDescription}\n            {...{ right, left }}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6\n  },\n  orderDescription: {\n    paddingLeft: 0\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    width: '100%'\n  }\n});","import * as React from 'react';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport JumpHistoryTab from './JumpHistory';\nimport FundTab from './Transactions';\nimport EquipmentTab from './Equipment';\n\n// const ProfileTabs = createMaterialTopTabNavigator();\n\ninterface IProfileTabsProps {\n  onChange(tab: ProfileTabs): void;\n}\n\nexport enum ProfileTabs {\n  Funds = 0,\n  Jumps = 1,\n  Equipment = 2\n}\n\nexport function ProfileTab(props: {\n  active: ProfileTabs;\n  dropzoneUser: DropzoneUserProfileFragment;\n}) {\n  const { active, dropzoneUser } = props;\n  if (active === ProfileTabs.Funds) {\n    return <FundTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Funds} currentTabIndex={active} />;\n  }\n  if (active === ProfileTabs.Equipment) {\n    return <EquipmentTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Equipment} currentTabIndex={active} />;\n  }\n  if (active === ProfileTabs.Jumps) {\n    return <JumpHistoryTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Jumps} currentTabIndex={active} />;\n  }\n  return null;\n}\nexport default function TabBar(props: IProfileTabsProps) {\n  const { onChange } = props;\n  const { colors, dark } = useAppSelector((state) => state.global.theme);\n\n  return (\n    <Tabs\n      defaultIndex={ProfileTabs.Jumps}\n      disableSwipe\n      style={{ backgroundColor: colors.surface }}\n      mode=\"fixed\"\n      dark={dark}\n    >\n      <TabScreen label=\"Funds\" icon=\"cash\" key=\"funds\" onPress={() => onChange(0)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Jumps\" icon=\"airplane-takeoff\" key=\"jumps\" onPress={() => onChange(1)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Equipment\" icon=\"parachute\" key=\"equipment\" onPress={() => onChange(2)}>\n        <View />\n      </TabScreen>\n    </Tabs>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\n\nimport { DropzoneUserProfileFragment, OrderEssentialsFragment } from 'app/api/operations';\n\nimport { groupBy, map } from 'lodash';\nimport { DateTime, Duration } from 'luxon';\nimport OrderCard from '../../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../../useUserNavigation';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function TransactionsTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useUserNavigation();\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.orders?.edges, (e) =>\n          DateTime.fromISO(e?.node?.createdAt).startOf('day').toISO()\n        ),\n        (d, t) => {\n          const date = DateTime.fromISO(t);\n          const title =\n            date.diffNow('days') > Duration.fromDurationLike({ days: 7 })\n              ? date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)\n              : date.toRelative({ locale: 'au', round: true, style: 'long' });\n          return {\n            title: date.startOf('day').hasSame(DateTime.local(), 'day') ? 'Today' : title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.orders?.edges]\n  );\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <OrderCard\n                showAvatar\n                onPress={() =>\n                  item?.node?.id &&\n                  dropzoneUser &&\n                  navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser?.id,\n                  })\n                }\n                order={item?.node as OrderEssentialsFragment}\n                {...{ dropzoneUser }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\n\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { actions, useAppDispatch } from 'app/state';\n\nimport RigCard from '../../equipment/RigCard';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function EquipmentTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const dispatch = useAppDispatch();\n  return (\n    <View\n      animation={currentTabIndex < tabIndex ? 'slideInRight' : 'slideInLeft'}\n      duration={200}\n      easing=\"ease-in-out\"\n      style={{ padding: 8 }}\n    >\n      {dropzoneUser?.user?.rigs?.map((item) => (\n        <RigCard\n          {...{ dropzoneUser }}\n          onSuccessfulImageUpload={() => null}\n          rig={item}\n          rigInspection={dropzoneUser?.rigInspections?.find(\n            (insp) => insp.rig?.id === item.id && insp.isOk\n          )}\n          onPress={() => {\n            dispatch(actions.forms.rig.setOpen(item));\n          }}\n        />\n      ))}\n    </View>\n  );\n}\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { FlatList, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Chip, Divider, ProgressBar } from 'react-native-paper';\nimport Skeleton from 'app/components/Skeleton';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { useUpdateUserMutation } from 'app/api/reflection';\n\nimport { errorColor, successColor } from 'app/constants/Colors';\nimport { format } from 'date-fns';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\nimport { useUserProfile } from 'app/api/crud';\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\n\nimport UserActionsButton from './UserActions';\nimport TabBar, { ProfileTab } from './tabs';\n\nexport type ProfileRoute = {\n  ProfileScreen: {\n    userId: string;\n  };\n};\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<ProfileRoute>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: route.params.userId || currentUser?.id,\n  });\n  const pickImage = useImagePicker();\n  const isFocused = useIsFocused();\n  const [defaultIndex, onChangeIndex] = React.useState(1);\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n  const headerRight = React.useCallback(\n    () =>\n      !currentUser?.expiresAt ? null : (\n        <Chip\n          onPress={onClickAccessAndMembership}\n          style={{\n            marginRight: 16,\n            height: 24,\n            backgroundColor:\n              currentUser.expiresAt * 1000 < new Date().getTime() ? errorColor : successColor,\n          }}\n          textStyle={{ color: 'white', marginTop: 0 }}\n        >\n          {format(currentUser.expiresAt * 1000, 'dd/MM/yy')}\n        </Chip>\n      ),\n    [currentUser?.expiresAt, onClickAccessAndMembership]\n  );\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({\n        headerRight,\n      });\n    }\n  }, [headerRight, isFocused, navigation]);\n\n  const [mutationUpdateUser] = useUpdateUserMutation();\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            dropzoneUser: dropzoneUser?.id,\n            image: `data:image/jpeg;base64,${base64}`,\n          },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.id, mutationUpdateUser, pickImage]);\n\n  const { dialogs } = useManifestContext();\n\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const openWizard = useProfileWizard();\n\n  const getContent = React.useCallback(\n    ({ index }: { index: number }) => {\n      if (index === 0) {\n        return <TabBar onChange={onChangeIndex} />;\n      }\n      if (dropzoneUser) {\n        return <ProfileTab active={defaultIndex} {...{ dropzoneUser }} />;\n      }\n      return null;\n    },\n    [defaultIndex, dropzoneUser]\n  );\n  return (\n    <>\n      <View style={StyleSheet.absoluteFill}>\n        {loading && (\n          <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n        )}\n        <FlatList\n          style={{ backgroundColor: state.theme.colors.background }}\n          contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n          refreshControl={<RefreshControl refreshing={loading} />}\n          keyExtractor={(_, idx) => `profile-${idx}`}\n          ListHeaderComponent={() => (\n            <View style={styles.wrappingHeader}>\n              <View style={{ width: '100%' }}>\n                {!dropzoneUser ? (\n                  <Skeleton\n                    key=\"profile-header\"\n                    containerStyle={{\n                      height: 256,\n                      width: '100%',\n                    }}\n                    isLoading\n                    layout={[{ key: 'header', width: '100%', height: 256, borderRadius: 8 }]}\n                  />\n                ) : (\n                  <Header dropzoneUser={dropzoneUser} onPressAvatar={onPickImage}>\n                    <InfoGrid\n                      style={{ height: 80 }}\n                      items={[\n                        {\n                          title: 'Funds',\n                          value: `$${dropzoneUser?.credits || 0}`,\n                          onPress: () => {\n                            dialogs.credits.open({ dropzoneUser });\n                          },\n                        },\n                        {\n                          title: 'License',\n                          value: `${dropzoneUser?.license?.name || '-'}`,\n                          onPress: () => {\n                            openWizard(5);\n                          },\n                        },\n                        {\n                          title: 'Exit weight',\n                          onPress: () => {\n                            openWizard(9);\n                          },\n                          value:\n                            Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                        },\n                      ]}\n                    />\n                    <Divider style={styles.divider} />\n                  </Header>\n                )}\n              </View>\n            </View>\n          )}\n          renderItem={getContent}\n          data={[null, null]}\n        />\n\n        <RigDialog\n          onClose={onCloseRigForm}\n          onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n          open={forms.rig.open}\n          userId={Number(dropzoneUser?.user?.id)}\n        />\n\n        <DropzoneUserDialog\n          onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n          onSuccess={(user) => {\n            dispatch(actions.forms.dropzoneUser.setOpen(false));\n            if (currentUser?.id === dropzoneUser?.id) {\n              dispatch(actions.global.setUser(user.user));\n            }\n          }}\n          open={forms.dropzoneUser.open}\n        />\n        <EditUserSheet\n          dropzoneUserId={dropzoneUser?.id}\n          onClose={onUserSheetClose}\n          onSuccess={() => {\n            dispatch(actions.forms.user.setOpen(false));\n          }}\n          open={forms.user.open}\n        />\n      </View>\n      <UserActionsButton {...{ dropzoneUser }} visible={isFocused} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    // flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { RouteProp, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { SectionList, StyleSheet, View } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\n\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { groupBy, map } from 'lodash';\nimport { formatDistance, parseISO, startOfDay, differenceInDays, format } from 'date-fns';\nimport enAU from 'date-fns/locale/en-AU';\nimport { OrderEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport type OrdersRoute = {\n  OrdersScreen: {\n    userId: string;\n  };\n};\nexport default function OrdersScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<OrdersRoute>>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  const navigation = useUserNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name?.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: state.theme.colors.surface }}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <SectionList\n        sections={map(\n          groupBy(dropzoneUser?.orders?.edges, (e) =>\n            startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n          ),\n          (d, t) => {\n            const date = parseISO(t);\n            const title =\n              differenceInDays(new Date(), date) > 7\n                ? format(date, 'dd MMM, yyyy')\n                : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n            return {\n              title,\n              data: d,\n            };\n          }\n        )}\n        renderSectionHeader={({ section: { title } }) => <List.Subheader>{title}</List.Subheader>}\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            showAvatar\n            onPress={() =>\n              !item?.node || !dropzoneUser\n                ? null\n                : navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser.id,\n                  })\n            }\n            order={item?.node as OrderEssentialsFragment}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport RigDialog from 'app/components/dialogs/Rig';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport RigCard from './RigCard';\n\nexport type EquipmentRoute = {\n  EquipmentScreen: {\n    userId: string;\n  };\n};\nexport default function EquipmentScreen() {\n  const globalState = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const navigation = useNavigation();\n\n  const route = useRoute<RouteProp<EquipmentRoute, 'EquipmentScreen'>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        keyExtractor={(item) => `rig-${item?.id}`}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            // onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={canUpdateUser}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from 'app/constants/Colors';\nimport { TransactionEssentialsFragment } from 'app/api/operations';\nimport { DateTime } from 'luxon';\n\ninterface ITransaction {\n  transaction: TransactionEssentialsFragment;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n              color: theme.colors.onSurface,\n            }}\n          >\n            {transaction?.createdAt &&\n              DateTime.fromISO(transaction.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Wallet } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n  ReceiptEssentialsFragment,\n} from 'app/api/operations';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: ReceiptEssentialsFragment;\n  index: number;\n  order: OrderEssentialsFragment;\n}\n\nexport default function ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | DropzoneEssentialsFragment | DropzoneUserEssentialsFragment) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        ?.filter((transaction) => isUser(transaction.receiver as DropzoneUserEssentialsFragment))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { RouteProp, useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from 'app/constants/Colors';\nimport LottieView from 'app/components/LottieView';\nimport { Dropzone, DropzoneUser } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport UserAvatar from 'app/components/UserAvatar';\nimport lottieTicketAnimation from 'app/../assets/images/ticket.json';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport ReceiptCard from './ReceiptCard';\n\nexport type OrderReceiptRoute = {\n  OrderReceiptScreen: {\n    orderId: string;\n    userId: string;\n  };\n};\nexport default function OrderScreen() {\n  const route = useRoute<RouteProp<OrderReceiptRoute, 'OrderReceiptScreen'>>();\n  const theme = useTheme();\n  const { orderId, userId } = route.params;\n  const { dropzoneUser } = useUserProfile({ id: userId });\n  const order = React.useMemo(\n    () =>\n      dropzoneUser?.orders?.edges?.map((edge) => edge?.node).find((node) => node?.id === orderId),\n    [dropzoneUser?.orders?.edges, orderId]\n  );\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                  color: theme.colors.onSurface,\n                }}\n              >{`Order #${order?.id || ''}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                  color: theme.colors.onSurface,\n                }}\n              >\n                {order?.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order?.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as DropzoneEssentialsFragment)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name ||\n                (order?.seller as DropzoneEssentialsFragment)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport UsersScreen, { UserListRoute } from './user_list/UsersScreen';\nimport SearchableAppBar from './user_list/AppBar';\nimport RigInspectionScreen, { RigInspectionRoute } from './rig_inspection/RigInspectionScreen';\nimport ProfileScreen, { ProfileRoute } from './profile/ProfileScreen';\nimport OrdersScreen, { OrdersRoute } from './orders/OrdersScreen';\nimport EquipmentScreen, { EquipmentRoute } from './equipment/EquipmentScreen';\nimport OrderReceiptScreen, { OrderReceiptRoute } from './order_receipt/OrderScreen';\n\nexport type UserRoutes = EquipmentRoute &\n  OrderReceiptRoute &\n  RigInspectionRoute &\n  ProfileRoute &\n  UserListRoute &\n  OrdersRoute;\n\nconst Users = createStackNavigator<UserRoutes>();\n\nexport default function Routes() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  return (\n    <AppSignalBoundary>\n      <Users.Navigator\n        screenOptions={{\n          cardStyle: {\n            flex: 1,\n          },\n          presentation: 'modal',\n        }}\n      >\n        <Users.Screen\n          name=\"UserListScreen\"\n          component={UsersScreen}\n          options={{\n            title: 'Dropzone users',\n            headerShown: true,\n            header: (props) => (\n              <SearchableAppBar\n                {...props}\n                searchText={searchText}\n                searchVisible={isSearchVisible}\n                setSearchVisible={(visible) =>\n                  dispatch(actions.screens.users.setSearchVisible(visible))\n                }\n                onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n              />\n            ),\n          }}\n        />\n        <Users.Screen\n          name=\"ProfileScreen\"\n          component={ProfileScreen}\n          options={{ title: 'User' }}\n          initialParams={{\n            userId: currentUser?.id,\n          }}\n        />\n        <Users.Screen\n          name=\"RigInspectionScreen\"\n          component={RigInspectionScreen}\n          options={{ title: 'Inspection' }}\n        />\n        <Users.Screen\n          name=\"OrdersScreen\"\n          component={OrdersScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Users.Screen\n          name=\"EquipmentScreen\"\n          component={EquipmentScreen}\n          options={{ title: 'Equipment' }}\n        />\n        <Users.Screen\n          name=\"OrderReceiptScreen\"\n          component={OrderReceiptScreen}\n          options={{ title: 'Order' }}\n        />\n      </Users.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { UserWizardScreen } from 'app/forms/user_wizard';\nimport { NavigationProp, NavigatorScreenParams, useNavigation } from '@react-navigation/core';\n\nimport DropzoneWizardScreen from './dropzone_wizard/DropzoneWizard';\nimport RecoverPasswordScreen from './recover_password/RecoverPasswordScreen';\nimport ConfirmUserScreen from './confirm_user/ConfirmUserScreen';\nimport ChangePasswordScreen from './change_password/ChangePasswordScreen';\nimport User, { UserRoutes } from '../authenticated/user/routes';\n\nexport type WizardRoutes = {\n  DropzoneWizardScreen: undefined;\n  UserWizardScreen: {\n    index?: number;\n    dropzoneUserId: string;\n  };\n  ConfirmUserScreen: undefined;\n  RecoverPasswordScreen: undefined;\n  ChangePasswordScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Wizards = createStackNavigator<WizardRoutes>();\n\nexport function useWizardRoutes() {\n  return useNavigation<NavigationProp<WizardRoutes>>();\n}\n\nexport default function Routes() {\n  return (\n    <Wizards.Navigator\n      screenOptions={{\n        headerShown: false,\n        presentation: 'modal',\n        cardStyle: { flex: 1 }\n      }}\n    >\n      <Wizards.Screen name=\"DropzoneWizardScreen\" component={DropzoneWizardScreen} />\n      <Wizards.Screen name=\"UserWizardScreen\" component={UserWizardScreen} />\n      <Wizards.Screen name=\"RecoverPasswordScreen\" component={RecoverPasswordScreen} />\n      <Wizards.Screen name=\"ConfirmUserScreen\" component={ConfirmUserScreen} />\n      <Wizards.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} />\n      <Wizards.Screen name=\"User\" component={User} />\n    </Wizards.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          <React.Fragment key={`info-grid-${i}`}>\n            <View style={{ flex }}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined\n                  }\n                ]}\n                style={{\n                  paddingVertical: 20\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />}\n          </React.Fragment>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%'\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%'\n  },\n  title: {\n    textAlign: 'center'\n  },\n  description: {\n    textAlign: 'center'\n  }\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport { DrawerActions, useNavigation } from '@react-navigation/core';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { DropzoneExtensiveFragment } from 'app/api/operations';\nimport InfoGrid from 'app/screens/authenticated/dropzone/load/InfoGrid';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { useLogout } from 'app/api/hooks/useLogout';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme, currentRouteName: routeName } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, dropzone, loading },\n  } = useDropzoneContext();\n  const { dropzones } = useDropzonesContext();\n\n  const navigation = useNavigation();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n  const logout = useLogout();\n  const onLogout = React.useCallback(() => {\n    navigation.dispatch(DrawerActions.closeDrawer());\n    logout();\n  }, [logout, navigation]);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'User',\n                  params: {\n                    screen: 'ProfileScreen',\n                    params: {\n                      userId: currentUser?.id as string,\n                    },\n                  },\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Dropzone\">\n          {dropzone?.currentUser?.user?.moderationRole !== ModerationRole.User ? (\n            <Drawer.Item\n              label=\"Admin\"\n              active={/Overview/.test(routeName || '')}\n              icon=\"view-dashboard\"\n              onPress={() => {\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Overview',\n                    params: {\n                      screen: 'OverviewScreen',\n                    },\n                  },\n                });\n              }}\n            />\n          ) : null}\n          <Drawer.Item\n            label=\"Overview\"\n            active={/Dashboard/.test(routeName || '')}\n            icon=\"view-dashboard-outline\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Overview',\n                  params: {\n                    screen: 'DashboardScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(routeName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={routeName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'Configuration',\n                    params: {\n                      screen: 'TransactionsScreen',\n                    },\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'SettingsMenuScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Profile\"\n            active={routeName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Wizards', {\n                screen: 'User',\n                params: {\n                  screen: 'ProfileScreen',\n                  params: {\n                    userId: currentUser?.id as string,\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={routeName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'EquipmentScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={routeName === 'NotificationsScreen'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Notifications',\n                  params: {\n                    screen: 'NotificationsScreen',\n                  },\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={routeName === 'OrdersScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'OrdersScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item label=\"Log out\" icon=\"logout\" onPress={onLogout} />\n        </Drawer.Section>\n\n        <Drawer.Section title=\"Switch dropzone\">\n          {dropzones?.map((item) => (\n            <Drawer.Item\n              key={`${item?.id}-dz`}\n              label={item?.name || ''}\n              icon={\n                item?.banner\n                  ? ({ size }) => (\n                      <Avatar.Image source={{ uri: item?.banner as string }} {...{ size }} />\n                    )\n                  : 'map-marker'\n              }\n              active={dropzone?.id === item?.id}\n              onPress={() => {\n                if (item) {\n                  dispatch(actions.global.setDropzone(item as DropzoneExtensiveFragment));\n                  navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'ManifestScreen',\n                      },\n                    },\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    marginLeft: 32,\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginLeft: 32,\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","import { useApolloClient } from '@apollo/client';\nimport { actions, useAppDispatch } from 'app/state';\nimport React from 'react';\nimport { abortController } from '../client/links';\n\nexport function useLogout() {\n  const dispatch = useAppDispatch();\n  const client = useApolloClient();\n  return React.useCallback(() => {\n    console.debug('[Hooks::useLogout]: Logging out...');\n    abortController.abort();\n    client.clearStore();\n    dispatch(actions.global.logout());\n  }, [client, dispatch]);\n}\n","import * as React from 'react';\nimport { Paragraph, useTheme, IconButton } from 'react-native-paper';\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\nimport Color from 'color';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  const { width } = useWindowDimensions();\n  const theme = useTheme();\n  const textColor =\n    Color(theme.colors.primary).contrast(Color(theme.colors.onSurface)) < 11\n      ? theme.colors.surface\n      : theme.colors.onSurface;\n  return (\n    <View style={[styles.warning, { backgroundColor: theme.colors.primary }]}>\n      <Paragraph\n        style={{ width: action ? width - 56 : width, color: textColor, flexGrow: 1 }}\n        adjustsFontSizeToFit\n        allowFontScaling\n      >\n        {title}\n      </Paragraph>\n      {!action ? null : (\n        <View style={{ width: 40 }}>\n          <IconButton icon=\"launch\" color={textColor} onPress={action} style={{ width: 24 }} />\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard\n  } = props;\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser }\n  } = useDropzoneContext();\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [!isExitWeightDefined ? 'exit weight' : null, !isRigSetUp ? 'equipment' : null].filter(Boolean);\n\n    return (\n      <Warning title={`You need to define ${missing.join(' and ')} in your profile`} action={() => onSetupWizard?.()} />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      <Warning\n        title=\"Your reserve repack is due. You can update the repack date on your profile\"\n        action={() =>\n          currentUser?.id &&\n          navigation.navigate('Authenticated', {\n            screen: 'LeftDrawer',\n            params: {\n              screen: 'Manifest',\n              params: {\n                screen: 'User',\n                params: { screen: 'EquipmentScreen', params: { userId: currentUser.id } }\n              }\n            }\n          })\n        }\n      />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16\n  }\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport SetupWarning from './SetupWarning';\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { hideWarnings, back, options } = props;\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, dropzone }\n  } = useDropzoneContext();\n\n  const navigation = useNavigation();\n  const { openDrawer } = useNavigation<DrawerNavigationProp<never>>();\n  return (\n    <>\n      <Appbar.Header style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}>\n        {back ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton icon=\"menu\" size={32} onPress={openDrawer} />\n        )}\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n\n        {options.headerRight ? (\n          options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{\n              backgroundColor: palette.background,\n              height: 36,\n              padding: 4,\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n            mode=\"flat\"\n            textStyle={{\n              color: palette.onSurface,\n              fontFamily: 'Roboto_700Bold'\n            }}\n          >{`$${currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!dropzone?.settings?.requireCredits}\n          isExitWeightDefined={!!currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !dropzone?.settings?.requireMembership ||\n            (!!currentUser?.expiresAt && currentUser?.expiresAt > new Date().getTime() / 1000)\n          }\n          isReserveInDate={\n            !dropzone?.settings?.requireEquipment ||\n            !!currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={\n            !dropzone?.settings?.requireEquipment ||\n            !dropzone?.settings?.requireRigInspection ||\n            !!currentUser?.rigInspections?.length\n          }\n          isRigSetUp={!dropzone?.settings?.requireEquipment || !!currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            console.log('opening setup wizard');\n            if (currentUser) {\n              navigation.navigate('Wizards', {\n                screen: 'UserWizardScreen',\n                params: {\n                  index: undefined,\n                  dropzoneUserId: currentUser.id\n                }\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Select, { ISelectOption } from 'app/components/input/select/Select';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport { View } from 'react-native';\nimport Chip from './Chip';\n\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsGca],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"radio-handheld\">\n        {truncate(item?.label || 'No GCA', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"radio-handheld\">\n          {value?.user?.name || 'No gca'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          onChange={onSelect}\n          renderAnchor={renderAnchor}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface ILoadMasterChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: SlotDetailsFragment[];\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      slots?.map((slot) => ({\n        label: slot?.dropzoneUser?.user?.name || '',\n        value: slot?.dropzoneUser as DropzoneUserEssentialsFragment,\n        avatar: slot?.dropzoneUser?.user?.image,\n      })) || [],\n    [slots]\n  );\n\n  const selected = React.useMemo(\n    () => slots?.map((slot) => slot?.dropzoneUser)?.find((node) => node?.id === value?.id),\n    [slots, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-account\">\n        {truncate(item?.label || 'No LM', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"shield-account\">\n          {value?.user?.name || 'No LM'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          renderAnchor={renderAnchor}\n          onChange={onSelect}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsPilot],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"account-tie-hat\"\n      >\n        {truncate(item?.label || 'No Pilot', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 146 }} icon=\"account-tie-hat\">\n      {value?.user?.name || 'No Pilot'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 146 }}>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { usePlanesQuery } from '../../api/reflection';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPlaneChipSelect {\n  value?: PlaneEssentialsFragment | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<PlaneEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"airplane\"\n      >\n        {truncate(item?.label || 'No Plane', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 100 }} icon=\"airplane\">\n      {value?.name || 'No Plane'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 100 }}>\n      <Select<PlaneEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { Autocomplete, InputAdornment, ListItemAvatar, ListItemText, MenuItem, styled } from '@mui/material';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useDropzoneUsersLazyQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport first from 'lodash/first';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Caption, useTheme } from 'react-native-paper';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IDropzoneUserAutocompleteProps {\n  value?: DropzoneUserEssentialsFragment | null;\n  label?: string;\n  disabled?: boolean;\n  placeholder?: string;\n  color?: string;\n  onChange(value: DropzoneUserEssentialsFragment): void;\n}\n\n// @ts-ignore This is supposed to be ok\nconst StyledTextField = styled(TextField, {\n  shouldForwardProp: (prop: keyof TextFieldProps) => prop !== 'color'\n})((p: TextFieldProps) => ({\n  // input label when focused\n  '& .MuiInput-input': {\n    color: p.color\n  },\n  '& label.Mui-focused': {\n    color: p.color\n  },\n  // focused color for input with variant='standard'\n  '& .MuiInput-root:before': {\n    borderBottomColor: p.color\n  },\n  '& .MuiInput-root:hover': {\n    borderBottomColor: p.color\n  },\n  // focused color for input with variant='filled'\n  '& .MuiFilledInput-underline': {\n    borderBottomColor: p.color\n  },\n  // focused color for input with variant='outlined'\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: p.color\n    }\n  }\n})) as React.ComponentType<Omit<TextFieldProps, 'color'> & { color?: string }>;\nexport default function DropzoneUserAutocomplete(props: IDropzoneUserAutocompleteProps) {\n  const { label, onChange, disabled, placeholder, color } = props;\n  const [searchUsers, { data, loading }] = useDropzoneUsersLazyQuery();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  React.useEffect(() => {\n    if (currentDropzoneId && searchText !== null) {\n      searchUsers({\n        variables: {\n          dropzoneId: currentDropzoneId?.toString() as string,\n          search: searchText,\n          licensed: false\n        }\n      });\n    }\n  }, [currentDropzoneId, searchText, searchUsers]);\n\n  const theme = useTheme();\n  const getOptionLabel = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) =>\n      option.user.nickname ? `${option.user.nickname} (${option.user.name})` : (option.user.name as string),\n    []\n  );\n\n  const groupBy = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) => first(getOptionLabel(option).split('')) as string,\n    [getOptionLabel]\n  );\n\n  const options = React.useMemo(\n    () =>\n      ((data?.dropzoneUsers?.edges?.map((edge) => edge?.node) as DropzoneUserEssentialsFragment[]) || []).sort(\n        (a, b) =>\n          -(first(getOptionLabel(b).split('')) as string).localeCompare(first(getOptionLabel(a).split('')) as string)\n      ),\n    [data?.dropzoneUsers?.edges, getOptionLabel]\n  );\n\n  const onSelect = React.useCallback(\n    (_: unknown, nextValue?: DropzoneUserEssentialsFragment | null) => {\n      setSearchText('');\n      if (nextValue) {\n        onChange(nextValue);\n      }\n    },\n    [onChange]\n  );\n  return (\n    <Autocomplete<DropzoneUserEssentialsFragment>\n      {...{ disabled, loading, options, groupBy, getOptionLabel, value: null }}\n      sx={{ width: '100%' }}\n      renderInput={(params) => (\n        <StyledTextField\n          variant=\"standard\"\n          {...params}\n          {...{ color, label, placeholder }}\n          fullWidth\n          value={searchText}\n          InputProps={{\n            ...params.InputProps,\n            value: searchText,\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MaterialCommunityIcons name=\"account-search-outline\" size={20} color={color || theme.colors.text} />\n              </InputAdornment>\n            )\n          }}\n        />\n      )}\n      onInputChange={(_, text) => setSearchText(text)}\n      onChange={onSelect}\n      inputValue={searchText}\n      popupIcon={<MaterialCommunityIcons name=\"chevron-down\" color={color} />}\n      clearIcon={<MaterialCommunityIcons name=\"close\" color={color} />}\n      renderOption={(menuItemProps, option) => (\n        <MenuItem {...menuItemProps} key={`autocomplete-user-${option.id}`} id={option.id}>\n          <ListItemAvatar>\n            <UserAvatar name={option.user.name} image={option?.user?.image} size={32} />\n          </ListItemAvatar>\n\n          <ListItemText>\n            {option.user.nickname ? (\n              <>\n                {option.user.nickname}&nbsp;\n                <Caption>({option.user.name})</Caption>\n              </>\n            ) : (\n              option.user.name\n            )}\n          </ListItemText>\n        </MenuItem>\n      )}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport { Card, ProgressBar, Divider, List, Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport calculateWingLoading from 'app/utils/calculateWingLoading';\nimport Chip from 'app/components/chips/Chip';\nimport TextInput from 'app/components/input/text/TextField';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: string;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: RigEssentialsFragment;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: RigEssentialsFragment): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: dropzoneUserId,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && dropzoneUser?.user?.exitWeight) {\n      onChangeExitWeight(Number(dropzoneUser.user.exitWeight));\n    }\n  }, [dropzoneUser?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={1}>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Card.Title\n        title={dropzoneUser?.user.name}\n        left={() => (\n          <UserAvatar name={dropzoneUser?.user?.name} image={dropzoneUser?.user?.image} size={36} />\n        )}\n        titleStyle={{ paddingRight: 0 }}\n        right={() => (\n          <View style={{ maxWidth: 100, marginRight: 16 }}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              mode=\"flat\"\n              variant={NumberFieldType.Weight}\n              onChange={(num) => onChangeExitWeight(num)}\n            />\n          </View>\n        )}\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={{ maxWidth: 128 }}>\n            <RigSelect\n              small\n              variant=\"chip\"\n              dropzoneUserId={dropzoneUserId ? Number(dropzoneUserId) : undefined}\n              onChange={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n            />\n          </View>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip small icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n          <Chip small icon=\"lock\" mode=\"outlined\" disabled>\n            {dropzoneUser?.role?.name}\n          </Chip>\n          <Chip small icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {dropzoneUser?.license?.name}\n          </Chip>\n        </ScrollView>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  mode=\"flat\"\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChange={(num) => onChangePassengerWeight?.(num)}\n                  variant={NumberFieldType.Weight}\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet, Text, View } from 'react-native';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport React from 'react';\nimport { Avatar, Caption, DataTable, Paragraph } from 'react-native-paper';\nimport { generateColor } from 'app/utils/generateColor';\nimport { isNumber } from 'lodash';\nimport SwipeActions from '../layout/SwipeActions';\nimport UserAvatar from '../UserAvatar';\nimport DraggableWrapper from './DragAndDrop/DraggableRow';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport enum SlotFields {\n  License = 'license',\n  Group = 'groupNumber',\n  WingLoading = 'wingloading',\n  Altitude = 'altitude',\n  Rig = 'rig',\n  TicketType = 'ticketType',\n  JumpType = 'jumpType',\n}\n\nexport interface ISlotUserRowProps {\n  load: LoadDetailsFragment;\n  fields?: SlotFields[];\n  slot: SlotDetailsFragment;\n  index: number;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n}\n\nexport const GROUP_COLORS = Array.from({ length: 20 }).map(() => generateColor());\n\nexport default function UserRow(props: ISlotUserRowProps) {\n  const { fields, load, slot, index, onDeletePress, onSlotGroupPress, onSlotPress } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const slotGroup: Required<(typeof load)['slots']> = load?.slots?.filter(\n    ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n  ) as Required<(typeof load)['slots']>;\n  const isCurrentUser = slot?.dropzoneUser?.id === currentUser?.id;\n\n  return (\n    <DroppableSlot loadId={load.id} slotId={slot?.id} rowIndex={index}>\n      <DraggableWrapper rowProps={props}>\n        {({ isDragging }) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              disabled={\n                isDragging ||\n                (isCurrentUser && !canRemoveSelf) ||\n                (!isCurrentUser && !canRemoveOthers)\n              }\n              key={`slot-${slot.id}`}\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: () => onDeletePress(slot),\n              }}\n            >\n              <DataTable.Row\n                testID=\"slot-row\"\n                style={\n                  isNumber(slot?.groupNumber)\n                    ? {\n                        borderLeftWidth: 5,\n                        borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                        paddingLeft: 4,\n                      }\n                    : undefined\n                }\n                disabled={!!load?.hasLanded}\n                onPress={() => {\n                  if (slot.dropzoneUser?.id === currentUser?.id) {\n                    if (canEditSelf) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  } else if (canEditOthers) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress(slotGroup);\n                    } else {\n                      onSlotPress(slot);\n                    }\n                  }\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell style={styles.avatarCell}>\n                  <UserAvatar\n                    size={20}\n                    name={\n                      slot?.dropzoneUser?.user?.nickname || slot?.dropzoneUser?.user?.name || ''\n                    }\n                    image={slot?.dropzoneUser?.user?.image}\n                    style={{ marginLeft: -12 }}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell style={styles.nameCell}>\n                  <Paragraph style={styles.slotText}>\n                    {slot?.dropzoneUser?.user?.nickname\n                      ? slot?.dropzoneUser?.user?.nickname\n                      : slot?.dropzoneUser?.user?.name}\n                  </Paragraph>\n\n                  {slot?.dropzoneUser?.user?.nickname ? (\n                    <Caption>{`(${slot?.dropzoneUser?.user?.name})`}</Caption>\n                  ) : null}\n                </DataTable.Cell>\n                {fields?.includes(SlotFields.License) ? (\n                  <DataTable.Cell numeric style={styles.licenseCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.dropzoneUser?.license?.name}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.Rig) ? (\n                  <DataTable.Cell numeric style={styles.rigCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.rig\n                        ? `${slot.rig.make} ${slot.rig.model} w/ ${slot.rig.canopySize}`\n                        : null}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.WingLoading) ? (\n                  <DataTable.Cell numeric style={styles.wingLoadingCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.wingLoading?.toFixed(2) || '-'}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.JumpType) ? (\n                  <DataTable.Cell numeric style={styles.jumpTypeCell}>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.TicketType) ? (\n                  <DataTable.Cell numeric style={styles.ticketCell}>\n                    <Paragraph style={styles.slotText}>{slot?.ticketType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.Altitude) ? (\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n              </DataTable.Row>\n\n              {slot?.ticketType?.isTandem && (\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  pointerEvents=\"none\"\n                  style={\n                    isNumber(slot?.groupNumber)\n                      ? {\n                          borderLeftWidth: 5,\n                          borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                          paddingLeft: 4,\n                        }\n                      : undefined\n                  }\n                >\n                  <DataTable.Cell style={styles.avatarCell}>\n                    <Avatar.Icon icon=\"parachute\" size={20} />\n                  </DataTable.Cell>\n                  <DataTable.Cell style={styles.tandemPassengerNameCell}>\n                    <Paragraph style={styles.slotText}>\n                      <Text style={{ fontWeight: 'bold' }}>Tandem Passenger:</Text>{' '}\n                      {slot?.passengerName}\n                    </Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n              )}\n            </SwipeActions>\n          </View>\n        )}\n      </DraggableWrapper>\n    </DroppableSlot>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  slotText: {\n    fontSize: 12,\n    alignSelf: 'center',\n    height: 24,\n    textAlignVertical: 'center',\n  },\n  avatarCell: {\n    flex: 1,\n  },\n  licenseCell: {\n    flex: 3,\n  },\n  rigCell: {\n    flex: 3,\n  },\n  wingLoadingCell: {\n    flex: 3,\n  },\n  jumpTypeCell: {\n    flex: 3,\n  },\n  altitudeCell: {\n    flex: 3,\n  },\n  nameCell: {\n    flex: 6,\n  },\n  tandemPassengerNameCell: {\n    flexGrow: 20,\n  },\n  tandemInfoCell: {\n    flex: 1,\n  },\n  ticketCell: {\n    flex: 3,\n  },\n});\n","import * as React from 'react';\nimport { useDraggable } from '@dnd-kit/core';\nimport { View } from 'react-native';\nimport { useManifestContext } from 'app/providers/manifest';\nimport type { ISlotUserRowProps } from '../UserRow';\n\ninterface IDraggableSlot {\n  rowProps: ISlotUserRowProps;\n  children(opts: { isDragging?: boolean }): JSX.Element;\n}\nexport default function DraggableRow(props: IDraggableSlot) {\n  const { children, rowProps } = props;\n  const {\n    manifest: { permissions },\n  } = useManifestContext();\n  const { setNodeRef, listeners, attributes, isDragging } = useDraggable({\n    id: rowProps.slot?.id,\n    disabled: !permissions.canUpdateSlot,\n    data: {\n      slotId: rowProps.slot?.id,\n      loadId: rowProps.load?.id,\n      props: rowProps,\n    },\n  });\n  return (\n    <div ref={setNodeRef} {...attributes} {...listeners} className=\"draggable-wrapper\">\n      <View pointerEvents=\"box-none\">{children?.({ isDragging })}</View>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nexport default function DroppableSlot(\n  props: React.PropsWithChildren<{ rowIndex: number; loadId: string; slotId?: string }>\n) {\n  const { rowIndex, loadId, slotId, children } = props;\n  const { setNodeRef, isOver, active } = useDroppable({\n    id: `load-${loadId}-row-${rowIndex}`,\n    data: {\n      slotId,\n      loadId,\n    },\n  });\n  const theme = useAppSelector((root) => root.global.theme);\n\n  const style: StyleProp<ViewStyle> = React.useMemo(\n    () => ({\n      backgroundColor:\n        isOver && active?.data?.current?.props?.load?.id !== loadId\n          ? theme.colors.primary\n          : undefined,\n      opacity: isOver ? 0.5 : undefined,\n    }),\n    [active?.data, isOver, loadId, theme.colors.primary]\n  );\n\n  return (\n    <div ref={setNodeRef} className=\"droppable-wrapper\">\n      <View {...{ style }}>{children}</View>\n    </div>\n  );\n}\n","import { hsl } from 'color';\n\nexport function generateColor() {\n  return hsl(360 * Math.random(), 25 + 70 * Math.random(), 85 + 10 * Math.random())\n    .rgb()\n    .toString();\n}\n","import * as React from 'react';\nimport { GROUP_COLORS } from 'app/components/slots_table/UserRow';\nimport { TouchableOpacity, View, StyleSheet } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { sortedUniq } from 'lodash';\n\ninterface IGroupPickerProps {\n  value?: number | null;\n  availableGroups: number[];\n  onChange(group: number | null): void;\n}\nexport default function GroupPicker(props: IGroupPickerProps) {\n  const { value, onChange, availableGroups } = props;\n  const createChangeHandler = React.useCallback(\n    (groupNumber: number | null) => () => onChange(groupNumber),\n    [onChange]\n  );\n  return (\n    <View style={styles.row}>\n      {sortedUniq(availableGroups)\n        .sort()\n        ?.map((groupNumber) => (\n          <TouchableOpacity onPress={createChangeHandler(groupNumber)}>\n            <Avatar.Text\n              label={`${groupNumber}`}\n              size={20}\n              style={[\n                value === groupNumber ? styles.selected : undefined,\n                { backgroundColor: GROUP_COLORS[groupNumber] },\n              ]}\n            />\n          </TouchableOpacity>\n        ))}\n      <TouchableOpacity onPress={createChangeHandler(null)}>\n        <Avatar.Icon\n          icon=\"plus\"\n          size={20}\n          style={[value === null ? styles.selected : undefined, { backgroundColor: '#FAFAFA' }]}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    padding: 16,\n    gap: 4,\n  },\n  selected: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { uniqBy } from 'lodash';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { JumpType, Permission, TicketType } from 'app/api/schema.d';\nimport { RigEssentialsFragment, TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\n\nimport UserRigCard from './UserRigCard';\nimport { SlotUserWithRig } from './slice';\nimport GroupPicker from './GroupPicker';\n\ninterface IUserCardProps {\n  slotUser: SlotUserWithRig;\n}\n\nfunction UserCard(props: IUserCardProps) {\n  const { slotUser } = props;\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const dispatch = useAppDispatch();\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  const onChangeExitWeight = React.useCallback(\n    (exitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onRemove = React.useCallback(\n    () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n        ])\n      ),\n    [dispatch, slotUser.id, state.fields.users.value]\n  );\n\n  const onChangeRig = React.useCallback(\n    (newRig: RigEssentialsFragment) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, rigId: Number(newRig.id), rig: newRig } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onChangePassengerName = React.useCallback(\n    (passengerName: string) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerName } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  const onChangePassengerWeight = React.useCallback(\n    (passengerExitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  return (\n    <UserRigCard\n      key={`user-rig-card-${slotUser.id}`}\n      dropzoneUserId={slotUser.id?.toString()}\n      selectedRig={slotUser.rig || undefined}\n      exitWeight={slotUser.exitWeight}\n      {...{\n        onChangeExitWeight,\n        onRemove,\n        onChangeRig,\n        onChangePassengerName,\n        onChangePassengerWeight,\n      }}\n      {...{ isTandem }}\n      passengerName={slotUser.passengerName}\n      passengerWeight={slotUser.passengerExitWeight}\n    />\n  );\n}\nexport default function ManifestGroupForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: state.fields.users?.value?.map(\n        (slotUser) => slotUser.id\n      ) as number[],\n      isPublic: canManifestOthers ? null : true,\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  const jumpTypes = React.useMemo(\n    () =>\n      uniqBy(\n        [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n        ({ id }) => id\n      ) || [],\n    [data]\n  );\n\n  const createToggleTicketAddonHandler = React.useCallback(\n    (extra: TicketTypeExtraEssentialsFragment) => () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'extras',\n          state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n            ? state?.fields?.extras.value?.filter(({ id }) => id !== extra.id)\n            : [...(state?.fields?.extras?.value || []), extra],\n        ])\n      ),\n    [dispatch, state?.fields?.extras.value]\n  );\n  return (\n    <>\n      <View style={{ paddingHorizontal: 8 }} key=\"manifest-group-config\">\n        <List.Subheader>Jump type</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={jumpTypes}\n          value={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n          renderItemLabel={(jumpType: JumpType) => jumpType.name}\n          isDisabled={(jumpType: JumpType) =>\n            !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n          }\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['jumpType', firstUser as JumpType]))\n          }\n        />\n\n        <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n          {state.fields.jumpType.error || ''}\n        </HelperText>\n\n        <List.Subheader>Ticket</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={data?.dropzone?.ticketTypes || []}\n          value={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n          renderItemLabel={(ticketType: TicketType) => ticketType.name}\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['ticketType', firstUser as TicketType]))\n          }\n        />\n        <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n          {state.fields.ticketType.error || ''}\n        </HelperText>\n        {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n          <List.Subheader>Ticket addons</List.Subheader>\n        )}\n        <ScrollView horizontal style={styles.ticketAddons}>\n          {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n            <Chip\n              key={`addon-${extra?.id}`}\n              selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n              onPress={createToggleTicketAddonHandler(extra as TicketTypeExtraEssentialsFragment)}\n            >\n              {`${extra.name} ($${extra.cost})`}\n            </Chip>\n          ))}\n        </ScrollView>\n        <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n          {state.fields.extras.error || ''}\n        </HelperText>\n      </View>\n\n      <Divider />\n\n      <View\n        style={{ paddingHorizontal: 0, paddingTop: 16, flexGrow: 1 }}\n        key=\"manifest-group-users\"\n      >\n        <List.Subheader style={styles.label}>\n          Group\n          <GroupPicker\n            value={state?.fields?.groupNumber?.value || null}\n            availableGroups={\n              state?.fields?.load?.value?.slots?.map(({ groupNumber }) => groupNumber) || []\n            }\n            onChange={(groupNumber) =>\n              dispatch(actions.forms.manifestGroup.setField(['groupNumber', groupNumber]))\n            }\n          />\n        </List.Subheader>\n        {state.fields?.users?.value?.map((slotUser) => (\n          <UserCard {...{ slotUser }} key={`manifest-${slotUser.id}`} />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  label: { justifyContent: 'space-between' },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { AppBar, Fade, LinearProgress, Toolbar } from '@mui/material';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useManifestGroupMutation, useDropzoneUserProfileLazyQuery } from 'app/api/reflection';\nimport DropzoneUserAutocomplete from 'app/components/autocomplete/DropzoneUserAutocomplete.web';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useManifestGroupMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump']));\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', 'You must select a ticket type to manifest']));\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate() || !state.fields.users.value?.length) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpType: state.fields.jumpType.value?.id,\n          ticketType: state.fields.ticketType.value?.id,\n          groupNumber: state.fields?.groupNumber?.value || null,\n          extras: state.fields.extras?.value?.map(({ id }) => id),\n          load: state.fields.load.value?.id,\n          userGroup: state.fields.users.value?.map(\n            ({ id, exitWeight, rigId, rig, passengerName, passengerExitWeight }) => ({\n              id,\n              rig: rigId?.toString() || rig?.id || undefined,\n              exitWeight,\n              passengerName,\n              passengerExitWeight\n            })\n          )\n        }\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n          case 'jump_type_id':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        notify.error(result?.data?.createSlots?.errors[0]);\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onClose();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    validate,\n    state.fields.users.value,\n    state.fields.jumpType.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields?.groupNumber?.value,\n    state.fields.extras?.value,\n    state.fields.load.value?.id,\n    mutationCreateSlots,\n    dispatch,\n    notify,\n    onClose\n  ]);\n\n  // dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n\n  const [fetchProfile, { loading }] = useDropzoneUserProfileLazyQuery();\n  const onSelectUser = React.useCallback(\n    (profile: DropzoneUserProfileFragment) => {\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([profile]));\n    },\n    [dispatch]\n  );\n  return (\n    <DialogOrSheet\n      loading={mutationData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Manifest\"\n      onClose={() => {\n        dispatch(actions.forms.manifestGroup.reset());\n        onClose();\n      }}\n      buttonAction={onManifest}\n      scrollable={false}\n    >\n      <View style={styles.wrapper} testID=\"manifest-group-sheet\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <DropzoneUserAutocomplete\n              color=\"white\"\n              placeholder=\"Search skydivers...\"\n              onChange={(user) => {\n                fetchProfile({\n                  variables: {\n                    id: user.id\n                  }\n                }).then((result) => {\n                  if (result.data?.dropzoneUser) {\n                    onSelectUser(result.data?.dropzoneUser);\n                  }\n                });\n              }}\n            />\n          </Toolbar>\n        </AppBar>\n        <Fade in={loading || mutationData.loading}>\n          <LinearProgress variant=\"indeterminate\" />\n        </Fade>\n        <ScrollView testID=\"scroll-area\">\n          <ManifestGroupForm />\n        </ScrollView>\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: { height: '100%' },\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n    paddingTop: 0\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white'\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32\n  },\n  userListContainer: {\n    height: 'calc(100% - 200px)',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22\n  }\n});\n","import * as React from 'react';\nimport { FAB, Portal, useTheme } from 'react-native-paper';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport { useDropzoneContext, useLoadContext, useManifestContext } from 'app/providers';\n\nimport { Permission, LoadState } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch } from 'app/state';\nimport isSameDay from 'date-fns/isSameDay';\nimport { parseISO } from 'date-fns';\n\ninterface ILoadActionButtonProps {\n  load: LoadDetailsFragment;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const { dialogs } = useManifestContext();\n  const {\n    dialogs: { timepicker },\n    load: { cancel, markAsLanded, updateLoadState, createAircraftDispatchAction }\n  } = useLoadContext();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const theme = useTheme();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen && !isFull && canManifestSelf && !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const callActions = [\n    {\n      label: 'Custom call',\n      onPress: timepicker.open,\n      icon: 'airplane-takeoff'\n    },\n    {\n      label: '20 minute call',\n      onPress: createAircraftDispatchAction(20),\n      icon: 'airplane-takeoff'\n    },\n    {\n      label: '15 minute call',\n      onPress: createAircraftDispatchAction(15),\n      icon: 'airplane-takeoff'\n    },\n    {\n      label: '10 minute call',\n      onPress: createAircraftDispatchAction(10),\n      icon: 'airplane-takeoff'\n    }\n  ];\n\n  const isToday = isSameDay(new Date(), parseISO(load.createdAt));\n\n  const manifestActions = [\n    !showManifestButton || !isToday\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } })\n        },\n    !showGroupIcon || !isToday\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          }\n        }\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createAircraftDispatchAction(null)\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: cancel\n        },\n    ![LoadState.Cancelled, LoadState.Landed].includes(load.state) || !isToday\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open)\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: markAsLanded\n        }\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) && isToday ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : [])\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n          backgroundColor: theme.colors.primary\n        }}\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nexport default CountdownCircleTimer;\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\nimport CountdownCircleTimer from './CountdownTimer';\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? ([\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes]\n            ] as never)\n          : ([[variant === 'light' ? '#FFFFFF' : '#A30000', 1]] as never)\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { LoadEssentialsFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { format } from 'date-fns/esm';\nimport parseISO from 'date-fns/parseISO';\nimport { DateTime } from 'luxon';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: LoadEssentialsFragment;\n  children?: React.ReactNode;\n  renderBadges?: React.ComponentType<object>;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, renderBadges: RenderBadges, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          {load?.dispatchAt &&\n          typeof load.dispatchAt === 'number' &&\n          DateTime.fromSeconds(load.dispatchAt) > DateTime.local() ? (\n            <Countdown\n              end={new Date(load.dispatchAt * 1000)}\n              variant={theme.dark ? 'light' : 'dark'}\n              size={80}\n            />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"account-tie-hat\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>\n            {load?.createdAt && format(parseISO(load.createdAt), 'dd LLLL, yyyy')}\n          </Paragraph>\n          {RenderBadges && width > 600 ? (\n            <RenderBadges />\n          ) : (\n            <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n          )}\n        </View>\n      </View>\n\n      {RenderBadges && width < 600 ? <RenderBadges /> : null}\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 8,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import React from 'react';\nimport { DataTable } from 'react-native-paper';\nimport { LoadState } from 'app/api/schema.d';\nimport { useLoadContext, useManifestContext } from 'app/providers';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DropzoneUserAutocomplete from '../autocomplete/DropzoneUserAutocomplete.web';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport interface IAvailableRowProps {\n  index: number;\n  onPress(): void;\n}\nexport default function AvailableRow(props: IAvailableRowProps) {\n  const { onPress, index } = props;\n  const {\n    load: { load }\n  } = useLoadContext();\n  const { dialogs } = useManifestContext();\n\n  const onSelectUser = React.useCallback(\n    (user: DropzoneUserEssentialsFragment) => {\n      if (load) {\n        dialogs.manifestUser.open({ load, slot: { dropzoneUser: user } });\n      }\n    },\n    [dialogs.manifestUser, load]\n  );\n\n  return (\n    <DroppableSlot loadId={load?.id?.toString() || '0'} rowIndex={index}>\n      <DataTable.Row testID=\"slot-row\" style={{ paddingTop: 8 }}>\n        <DropzoneUserAutocomplete\n          disabled={[LoadState.Cancelled, LoadState.InFlight, LoadState.Landed].includes(load?.state as LoadState)}\n          placeholder=\"- Available -\"\n          value={null}\n          onChange={onSelectUser}\n        />\n      </DataTable.Row>\n    </DroppableSlot>\n  );\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DataTable, Surface, Text } from 'react-native-paper';\nimport UserRow, { SlotFields, styles as rowStyles } from './UserRow';\nimport AvailableRow from './AvailableRow';\n\nexport interface ISlotsTableProps {\n  load?: LoadDetailsFragment | null;\n  loading?: boolean;\n  fields?: SlotFields[];\n  scrollable?: boolean;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onAvailableSlotPress(): void;\n}\nexport default function SlotsTable(props: ISlotsTableProps) {\n  const {\n    load,\n    fields,\n    onDeletePress,\n    scrollable = false,\n    onAvailableSlotPress,\n    onSlotGroupPress,\n    onSlotPress\n  } = props;\n\n  console.log(fields);\n\n  return (\n    <Surface style={scrollable ? { height: '100%' } : undefined}>\n      <DataTable style={scrollable ? { height: '100%', paddingBottom: 80 } : undefined}>\n        <DataTable.Header style={{ width: '100%' }}>\n          <DataTable.Title style={rowStyles.avatarCell}>{null}</DataTable.Title>\n          <DataTable.Title style={rowStyles.nameCell}>\n            <Text style={styles.th}>Name</Text>\n          </DataTable.Title>\n          {fields?.includes(SlotFields.License) && (\n            <DataTable.Title numeric style={rowStyles.licenseCell}>\n              <Text style={styles.th}>License</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.Rig) && (\n            <DataTable.Title numeric style={rowStyles.rigCell}>\n              <Text style={styles.th}>Equipment</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.WingLoading) && (\n            <DataTable.Title numeric style={rowStyles.wingLoadingCell}>\n              <Text style={styles.th}>Wing Loading</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.JumpType) && (\n              <DataTable.Title numeric style={rowStyles.jumpTypeCell}>\n                <Text style={styles.th}>Jump type</Text>\n              </DataTable.Title>\n            ))}\n          {fields?.includes(SlotFields.TicketType) && (\n            <DataTable.Title numeric style={rowStyles.ticketCell}>\n              <Text style={styles.th}>Ticket</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.Altitude) && (\n              <DataTable.Title numeric style={rowStyles.altitudeCell}>\n                <Text style={styles.th}>Altitude</Text>\n              </DataTable.Title>\n            ))}\n        </DataTable.Header>\n        <FlatList\n          data={Array.from({ length: load?.maxSlots || 0 })?.map((_, index) => load?.slots?.[index] || null)}\n          keyExtractor={(item, index) => item?.id || `available-${index}`}\n          renderItem={({ item: slot, index }) =>\n            !slot || !load ? (\n              <AvailableRow {...{ onPress: onAvailableSlotPress }} key={`slot-available-${index}`} index={index} />\n            ) : (\n              <UserRow\n                {...{ fields, slot, load, onDeletePress, onSlotGroupPress, onSlotPress, index }}\n                key={`slot-${slot.id}`}\n              />\n            )\n          }\n        />\n      </DataTable>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  th: {\n    fontWeight: 'bold'\n  }\n});\n","import * as React from 'react';\nimport { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport LoadSlotTable, { ISlotsTableProps } from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useWindowDimensions } from 'react-native';\n\ninterface ITableViewProps extends Omit<ISlotsTableProps, 'load'> {\n  load?: LoadDetailsFragment | null;\n  loading: boolean;\n  refetch(): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n}\n\nexport default function LoadTableView(props: ITableViewProps) {\n  const { load, loading, onAvailableSlotPress, onDeletePress, onSlotGroupPress, onSlotPress } =\n    props;\n  const { width } = useWindowDimensions();\n  const numFields = Math.floor(width / 200);\n\n  console.log({ width, numFields, load });\n\n  return (\n    <LoadSlotTable\n      fields={\n        [\n          SlotFields.Altitude,\n          SlotFields.JumpType,\n          numFields > 2 ? SlotFields.License : null,\n          numFields > 3 ? SlotFields.TicketType : null,\n          numFields > 4 ? SlotFields.WingLoading : null,\n          numFields > 5 ? SlotFields.Rig : null,\n        ].filter(Boolean) as SlotFields[]\n      }\n      {...{\n        load,\n        loading,\n        onAvailableSlotPress,\n        onDeletePress,\n        onSlotGroupPress,\n        onSlotPress,\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { FlatList, Platform } from 'react-native';\n\nimport { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  LoadContextProvider,\n  useLoadContext,\n  useManifestContext,\n  useDropzoneContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport ManifestGroupSheet from 'app/components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Divider } from 'react-native-paper';\nimport { useNotifications } from 'app/providers/notifications';\nimport { Screen } from 'app/components/layout';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\n// import CardView from './views/CardView';\nimport TableView from './views/TableView';\n\nexport type LoadScreenRoute = {\n  LoadScreen: {\n    loadId: string;\n  };\n};\n/**\n *\n *\n * @returns\n */\nfunction LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const {\n    load: { load, loading, refetch, updateGCA, updateLoadMaster, updatePilot, updatePlane },\n  } = useLoadContext();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n  const maxSlots = load?.maxSlots || 0;\n  const occupiedSlots = load?.occupiedSlots || 0;\n  const notify = useNotifications();\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      const response = await deleteSlot({\n        id: Number(slot.id),\n      });\n\n      if ('error' in response && response.error) {\n        notify.error(\n          response?.error ||\n            `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n        );\n      } else if ('slot' in response && slot?.id) {\n        notify.error(\n          `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`\n        );\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const onSlotPress = React.useCallback(\n    (slot: SlotDetailsFragment) => {\n      const slotGroup = load?.slots?.filter(\n        ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n      );\n      const onSlotGroupPress = () => {\n        if (slotGroup && load) {\n          dispatch(actions.forms.manifestGroup.reset());\n          dispatch(actions.forms.manifestGroup.setOpen(true));\n          dispatch(\n            actions.forms.manifestGroup.setFromSlots({\n              slots: slotGroup?.length ? slotGroup : [slot],\n              load,\n            })\n          );\n          dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n          // FIXME: Open ManifestGroup Drawer\n        }\n      };\n      const onSlotSinglePress = () => {\n        dispatch(actions.forms.manifest.setOpen(slot));\n        dispatch(actions.forms.manifest.setField(['load', load]));\n      };\n\n      if ((canEditSelf && slot.dropzoneUser?.id === currentUser?.id) || canEditOthers) {\n        if (canEditSelf) {\n          if (slotGroup?.length || Platform.OS === 'web') {\n            onSlotGroupPress();\n          } else {\n            onSlotSinglePress();\n          }\n        }\n      }\n    },\n    [canEditOthers, canEditSelf, currentUser?.id, dispatch, load]\n  );\n\n  const onSlotGroupPress = React.useCallback(\n    (slotGroup: SlotDetailsFragment[]) => {\n      if (load) {\n        dispatch(actions.forms.manifestGroup.reset());\n        dispatch(actions.forms.manifestGroup.setOpen(true));\n        dispatch(\n          actions.forms.manifestGroup.setFromSlots({\n            slots: slotGroup,\n            load,\n          })\n        );\n        dispatch(actions.forms.manifestGroup.setField(['load', load]));\n      }\n    },\n    [dispatch, load]\n  );\n\n  const onAvailableSlotPress = React.useCallback(() => {\n    dispatch(actions.forms.manifestGroup.reset());\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n    if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n      // Automatically add current user to selection\n      dispatch(actions.screens.manifest.setSelected([currentUser]));\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n    }\n\n    dispatch(actions.forms.manifestGroup.setOpen(true));\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n  }, [canManifestGroup, canManifestGroupWithSelfOnly, currentUser, dispatch, load]);\n\n  return (\n    <Screen fullWidth scrollable={Platform.OS !== 'web'}>\n      <Header\n        load={load || undefined}\n        renderBadges={() => (\n          <FlatList\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            style={{ marginVertical: 8 }}\n            data={['plane', 'pilot', 'gca', 'loadMaster']}\n            keyExtractor={(item) => item.toString()}\n            renderItem={({ item }) => {\n              switch (item) {\n                case 'plane':\n                  return (\n                    <PlaneChip\n                      value={load?.plane}\n                      onSelect={async (plane) => {\n                        if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                          const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                          notify.info(\n                            `You need to take ${diff} people off the load to fit on this plane`\n                          );\n                        } else {\n                          await updatePlane(plane);\n                          refetch();\n                        }\n                      }}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'gca':\n                  return (\n                    <GCAChip\n                      value={load?.gca}\n                      onSelect={updateGCA}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'pilot':\n                  return (\n                    <PilotChip\n                      value={load?.pilot}\n                      onSelect={updatePilot}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                default:\n                  return (\n                    <LoadMasterChip\n                      value={load?.loadMaster}\n                      slots={load?.slots || []}\n                      onSelect={updateLoadMaster}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n              }\n            }}\n          />\n        )}\n      >\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state || LoadState.Open],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      {/* <CardView {...{ load, loading, refetch, onSlotPress, onDeletePress: onDeleteSlot }} /> */}\n      <Divider />\n      <TableView\n        scrollable={Platform.OS === 'web'}\n        {...{\n          slots: load?.slots?.filter(Boolean) || [],\n          load,\n          loading,\n          refetch,\n          onSlotPress,\n          onDeletePress: onDeleteSlot,\n          onSlotGroupPress,\n          onAvailableSlotPress,\n        }}\n      />\n      {load && isFocused ? <ActionButton load={load} /> : null}\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </Screen>\n  );\n}\n\nexport default function LoadScreenWrapper() {\n  const route = useRoute<RouteProp<LoadScreenRoute>>();\n  const loadId = route?.params?.loadId;\n\n  return (\n    <LoadContextProvider id={loadId}>\n      <LoadScreen />\n    </LoadContextProvider>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          <React.Fragment key={`dot-${index}`}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center'\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white'\n  },\n  bridgeDone: {\n    backgroundColor: successColor\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1\n  }\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  const value = React.useMemo(\n    () => ({\n      index,\n      count,\n      setIndex: (idx: number) => {\n        // @ts-ignore\n        ref.current?.scrollToIndex({ index: idx, animated: true });\n      }\n    }),\n    [count, index]\n  );\n\n  return (\n    <WizardContext.Provider value={value}>\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0\n  }\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center'\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center'\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center'\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%'\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100\n  }\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema.d';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema.d';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(state.fields?.jumpRun?.value || 0);\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n  }, [setJumpRun, state.fields.jumpRun.value, jumpRun]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature, temperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"height\" style={styles.content}>\n      <View style={styles.row}>\n        <Text style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}>Temperature</Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>Jump run</Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]} elevation={3}>\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))}\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>Altitude</Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>Speed</Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>Direction</Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds as Required<typeof winds>}\n        keyExtractor={(item, index) => `wind.${item.altitude}.${index}`}\n        scrollEnabled={false}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }]\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent'\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between'\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 }\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent'\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center'\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center'\n  },\n  field: {\n    marginBottom: 8\n  },\n  slider: {\n    flexDirection: 'column'\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center'\n  },\n  wingLoadingCardLeft: {\n    width: '30%'\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%'\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\n\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0\n  }\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","import * as React from 'react';\nimport { Animated, Dimensions, LayoutChangeEvent, LayoutRectangle, StyleSheet, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { GestureEvent, PanGestureHandler, PanGestureHandlerEventPayload } from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport MapView from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<LayoutRectangle & { originX: number; originY: number }>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true\n      }),\n      {\n        resetBeforeIteration: true\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0]\n                })\n              }\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <MapView\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE\n              }\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2]\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1]\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg']\n                    })\n                  }\n                ]\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0]\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg']\n                      })\n                    },\n                    {\n                      translateY: planePosition.current\n                    }\n                  ]\n                }\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100\n              }\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </MapView>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0]\n              })\n            }\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    }\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute'\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    }\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone }\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) => dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))}\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center'\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center'\n  },\n  field: {\n    marginBottom: 8\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center'\n  },\n  wingLoadingCardLeft: {\n    width: '30%'\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%'\n  }\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from 'app/components/wizard/Wizard';\nimport WizardCompleteStep from 'app/components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useNotifications } from 'app/providers/notifications';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify\n  ]);\n\n  const {\n    dropzone: { dropzone }\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) => dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))}\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0\n  }\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport function useAuthenticatedNavigation() {\n  return useNavigation<NavigationProp<AuthenticatedRoutes>>();\n}\n","import * as React from 'react';\nimport { Button, HelperText } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\n\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useAuthenticatedNavigation } from '../../useAuthenticatedNavigation';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useAuthenticatedNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n    dispatch\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() =>\n          navigation.navigate('Manifest', {\n            screen: 'JumpRunScreen'\n          })\n        }\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20\n            }\n          ]}\n          labelStyle={{\n            color: 'white'\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"outlined\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20\n            }\n          ]}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload Conditions\n        </Button>\n        <HelperText type=\"info\">\n          Winds aloft and temperature are retrieved from MarkSchulze.net's amazing Winds Aloft service.\n        </HelperText>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%'\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 0\n  }\n});\n","import { DragOverlay } from '@dnd-kit/core';\nimport * as React from 'react';\nimport UserRow from '../UserRow';\nimport type { ISlotUserRowProps } from '../UserRow';\n\nexport default function DraggingRow(props: { item?: ISlotUserRowProps }) {\n  const { item } = props;\n  return <DragOverlay>{item ? <UserRow {...item} /> : null}</DragOverlay>;\n}\n","import * as React from 'react';\nimport { DndContext, DragEndEvent, DragStartEvent } from '@dnd-kit/core';\nimport UserRowDragOverlay from 'app/components/slots_table/DragAndDrop/DraggingRow';\nimport type { ISlotUserRowProps } from 'app/components/slots_table/UserRow';\nimport { useManifestContext } from 'app/providers/manifest';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DragDropWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [draggedItem, setDraggedItem] = React.useState<ISlotUserRowProps>();\n  const {\n    manifest: { moveSlot },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const onDragEnd = React.useCallback(\n    async (event: DragEndEvent) => {\n      const targetLoad = event.over?.data?.current?.loadId;\n      const sourceLoad = event.active.data.current?.loadId;\n      const sourceSlot = event?.active?.data?.current?.slotId;\n      const targetSlot = event?.over?.data?.current?.slotId;\n\n      console.debug(`Moving Slot ${sourceSlot} from Load ${sourceLoad} to Load ${targetLoad}`, {\n        targetLoad,\n        sourceLoad,\n        sourceSlot,\n      });\n\n      if (sourceLoad !== targetLoad) {\n        const response = await moveSlot(sourceLoad, {\n          targetLoad: Number(targetLoad),\n          sourceSlot: Number(sourceSlot),\n          targetSlot: targetSlot ? Number(targetSlot) : undefined,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        }\n      }\n    },\n    [moveSlot, notify]\n  );\n  return (\n    <DndContext\n      onDragStart={(event: DragStartEvent) => {\n        console.debug('Drag start', event, event?.active?.data?.current?.props);\n        setDraggedItem(event?.active?.data?.current?.props);\n      }}\n      onDragEnd={onDragEnd}\n    >\n      {children}\n      <UserRowDragOverlay item={draggedItem} />\n    </DndContext>\n  );\n}\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: 335, height: 160, borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport { useLoadContext, withLoadContext } from 'app/providers/load';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  onPress(): void;\n}\n\nfunction LoadCard(props: ILoadCardSmall) {\n  const { onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const {\n    load: { load, loading, updatePlane, updatePilot },\n  } = useLoadContext();\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 8,\n        minWidth: 300,\n        maxWidth: 450,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber || '?'}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <ScrollView\n          style={{\n            flexDirection: 'row',\n            flexWrap: 'nowrap',\n            backgroundColor: 'transparent',\n            width: '100%',\n          }}\n          horizontal\n        >\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              await updatePlane(plane);\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12, marginTop: 0 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    maxWidth: 450,\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Platform, ScrollView } from 'react-native';\nimport { Button, Card, IconButton, Paragraph, ProgressBar, Text } from 'react-native-paper';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  useDropzoneContext,\n  useLoadContext,\n  useManifestContext,\n  withLoadContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport LoadSlotTable from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useNotifications } from 'app/providers/notifications';\nimport LoadingCard from './Loading';\n\ninterface ILoadCardLarge {\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onManifest(): void;\n}\n\nfunction LoadCard(props: ILoadCardLarge) {\n  const { onManifest, onManifestGroup, controlsVisible, onSlotGroupPress, onSlotPress } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const [deletingSlot, setDeletingSlot] = React.useState(false);\n  const notify = useNotifications();\n\n  const {\n    load: {\n      load,\n      loading,\n      refetch,\n      updateGCA,\n      updatePlane,\n      updatePilot,\n      dispatchInMinutes,\n      updateLoadMaster,\n      markAsLanded,\n    },\n  } = useLoadContext();\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      try {\n        setDeletingSlot(true);\n\n        const response = await deleteSlot({\n          id: Number(slot.id),\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(\n            response?.error ||\n              `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n          );\n        } else if ('slot' in response && slot?.id) {\n          notify.error(\n            `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n              load?.loadNumber\n            }`\n          );\n        }\n      } finally {\n        setDeletingSlot(false);\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const navigation = useAuthenticatedNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text testID=\"title\">{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar visible={loading || deletingSlot} color={state.theme.colors.primary} />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          paddingHorizontal: 0,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View\n          style={{ flexDirection: 'row', paddingHorizontal: 8, backgroundColor: 'transparent' }}\n        >\n          <ScrollView\n            style={{ height: 32 }}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              small\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  notify.info(`You need to take ${diff} people off the load to fit on this plane`);\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip small value={load?.gca} onSelect={updateGCA} />\n            <PilotChip small value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              small\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <LoadSlotTable\n          scrollable={Platform.OS === 'web'}\n          {...{ load, loading, onSlotPress, onSlotGroupPress }}\n          onDeletePress={onDeleteSlot}\n          onAvailableSlotPress={() =>\n            load?.id &&\n            navigation.navigate('Manifest', {\n              screen: 'LoadScreen',\n              params: { loadId: load?.id },\n            })\n          }\n          onSlotPress={onSlotPress}\n          fields={[SlotFields.JumpType].filter(Boolean) as SlotFields[]}\n        />\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button\n              mode=\"outlined\"\n              onPress={() => dispatchInMinutes(null)}\n              testID=\"dispatch-cancel\"\n            >\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              setOpen={setDispatchOpen}\n              open={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <MenuItem\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return notify.info(\n                    'You must select a load master before this load can be finalized'\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return notify.info('You must select a pilot before this load can be finalized');\n                }\n                return markAsLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport { Animated, Dimensions, LayoutChangeEvent, LayoutRectangle, StyleSheet, View } from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from 'app/utils/calculateCoordinatesByAngle';\nimport MapView from 'app/components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<LayoutRectangle & { originX: number; originY: number }>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true\n      }),\n      {\n        resetBeforeIteration: true\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.x,\n    y: origin.y,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: rootLayout.height / 2\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)} style={{ width: '100%', height: '100%' }}>\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0\n        }}\n      >\n        <MapView\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`\n              }\n            ]\n          }\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1]\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1]\n                })\n              }\n            ]\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0]\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`\n                },\n                {\n                  translateY: planePosition.current\n                }\n              ]\n            }\n          ]}\n        >\n          <MaterialCommunityIcons name=\"airplane\" size={20} color=\"#ffffff\" style={styles.planeIcon} />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X\n          }\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  planeIcon: { transform: [{ rotate: '-45deg' }] },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute'\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport parseISO from 'date-fns/parseISO';\nimport nightBackground from '../../../../../../assets/images/night.png';\nimport weatherBackground from '../../../../../../assets/images/weather.png';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const {\n    dropzone: { dropzone, loading, called },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? parseISO(dropzone.currentConditions.createdAt)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  const onEditWindboard = React.useCallback(() => {\n    if (canUpdate && dropzone?.currentConditions) {\n      dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'WindScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const onEditJumprun = React.useCallback(() => {\n    if (dropzone?.currentConditions && canUpdate) {\n      dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'JumpRunScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const defaultBackground = theme.dark ? nightBackground : weatherBackground;\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        marginBottom: 8,\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={onEditWindboard}\n      >\n        <ImageBackground\n          source={defaultBackground}\n          style={{ ...StyleSheet.absoluteFillObject, opacity: 0.75 }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        height: height.current.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [100, 210],\n                        }),\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, 10],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'left' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onLongPress={onEditJumprun}\n                      onPress={onEditWindboard}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    height: 200,\n    width: '100%',\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    flexGrow: 3,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: 'rgba(50, 50,50, 0.5)',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  jumpRun: {\n    width: 94,\n    height: 94,\n    marginBottom: 24,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\nimport * as React from 'react';\nimport { Card, List } from 'react-native-paper';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\n\nexport default function SetupProfileCard() {\n  const openWizard = useProfileWizard();\n  const onPress = React.useCallback(() => openWizard(), [openWizard]);\n\n  return (\n    <Card style={styles.card} {...{ onPress }}>\n      <Card.Content style={styles.content}>\n        <List.Item\n          title=\"Complete your profile\"\n          description=\"Let this dropzone know who you are\"\n          titleStyle={{ marginBottom: 4 }}\n          left={() => (\n            <LottieView\n              style={{ height: 80, width: 80 }}\n              autoPlay\n              loop={false}\n              source={require('../../../../../assets/images/profile2.json')}\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"chevron-right\" style={styles.icon} />}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' }\n});\n","import { StyleSheet } from 'react-native';\nimport * as React from 'react';\nimport { Avatar, Card, List } from 'react-native-paper';\n\ninterface ISetupStepCard {\n  completed?: boolean;\n  index?: number;\n  title: string;\n  description?: string;\n  onPress(): void;\n}\n\nexport function SetupStepCard(props: ISetupStepCard) {\n  const { completed, index, title, description, onPress } = props;\n  return (\n    <Card\n      style={StyleSheet.flatten([styles.card, { opacity: completed ? 0.7 : 1 }])}\n      {...{ onPress }}\n      pointerEvents={completed ? 'none' : undefined}\n    >\n      <Card.Content style={styles.content}>\n        <List.Item\n          {...{ title, description }}\n          titleStyle={{ marginBottom: 4 }}\n          left={() =>\n            completed ? <Avatar.Icon icon=\"check\" /> : <Avatar.Text label={`${index}`} />\n          }\n          right={(rightProps) => (\n            <List.Icon {...rightProps} icon=\"chevron-right\" style={styles.icon} />\n          )}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8, marginVertical: 16 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  RefreshControl,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, ProgressBar, useTheme } from 'react-native-paper';\n\nimport NoResults from 'app/components/NoResults';\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { useAircrafts, useTickets } from 'app/api/crud';\nimport useRestriction from 'app/hooks/useRestriction';\nimport DragDropWrapper from '../../../../components/slots_table/DragAndDrop/DragDropSlotProvider';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\nimport SetupProfileCard from './SetupProfileCard';\nimport { SetupStepCard } from './FinishSetupSteps';\n\nconst loadingFragment: LoadDetailsFragment = {\n  id: '__LOADING__',\n  availableSlots: 0,\n  createdAt: '',\n  isFull: false,\n  isOpen: false,\n  loadNumber: 0,\n  maxSlots: 0,\n  occupiedSlots: 0,\n  plane: {\n    id: '__LOADING__',\n    maxSlots: 0,\n  },\n  state: LoadState.Open,\n  weight: 0,\n};\n\nconst setupProfileCardFragment = { ...loadingFragment, id: '__SETUP_PROFILE_CARD__' };\nconst setupAircraftsCardFragment = { ...loadingFragment, id: '__SETUP_AIRCRAFT_CARD__' };\nconst setupTicketsCardFragment = { ...loadingFragment, id: '__SETUP_TICKETS_CARD__' };\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const {\n    dropzone: { dropzone, currentUser, loading, refetch, fetchMore },\n    dialogs: sheets,\n  } = useDropzoneContext();\n  const { manifest, dialogs } = useManifestContext();\n  const { aircrafts, loading: loadingAircrafts } = useAircrafts({ dropzoneId: dropzone?.id });\n  const { ticketTypes, loading: loadingTickets } = useTickets({ dropzone: dropzone?.id });\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      // dispatch(actions.global.setAccentColor(dropzone.secondaryColor));\n      console.log('Accent color disabled');\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const initialLoading = !dropzone || (!manifest?.loads?.length && manifest?.loading);\n\n  const theme = useTheme();\n\n  const data = React.useMemo(\n    () =>\n      [\n        !loadingAircrafts &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupAircraftsCardFragment,\n        !loadingTickets &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupTicketsCardFragment,\n        !initialLoading &&\n        (!currentUser?.hasExitWeight || !currentUser?.hasLicense || !currentUser.user?.name)\n          ? setupProfileCardFragment\n          : null,\n        ...(initialLoading ? new Array(5).fill(loadingFragment) : manifest.loads),\n      ].filter(Boolean),\n    [\n      loadingAircrafts,\n      ticketTypes?.length,\n      aircrafts?.length,\n      canUpdateDropzone,\n      loadingTickets,\n      initialLoading,\n      currentUser?.hasExitWeight,\n      currentUser?.hasLicense,\n      currentUser?.user?.name,\n      manifest.loads,\n    ]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: load, index }: { item: LoadDetailsFragment; index: number }) => {\n      // 1 means loading, because null and undefined\n      // get filtered out\n      if (load.id === '__LOADING__') {\n        return manifestScreen.display === 'list' ? (\n          <LoadingCardLarge key={`loading-card-${index}`} />\n        ) : (\n          <LoadingCardSmall key={`loading-card-${index}`} />\n        );\n      }\n\n      if (load.id === '__SETUP_PROFILE_CARD__') {\n        return <SetupProfileCard />;\n      }\n\n      if (load.id === '__SETUP_AIRCRAFT_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Add an aircraft\"\n            completed={!!aircrafts?.length}\n            onPress={sheets.aircraft.open}\n            index={1}\n          />\n        );\n      }\n\n      if (load.id === '__SETUP_TICKETS_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Create a ticket\"\n            completed={!!ticketTypes?.length}\n            onPress={sheets.ticketType.open}\n            index={2}\n          />\n        );\n      }\n      return manifestScreen.display === 'list' ? (\n        <LoadCardLarge\n          controlsVisible={false}\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onSlotPress={(slot) => {\n            if (load) {\n              dialogs.manifestUser.open({\n                load,\n                slot: { ...(slot || {}), dropzoneUser: slot ? slot?.dropzoneUser : currentUser },\n              });\n            }\n          }}\n          onSlotGroupPress={(slots) => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setFromSlots({ load, slots }));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n            // FIXME: Open manifest group drawer\n          }}\n          onManifest={() => {\n            dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } });\n          }}\n          onManifestGroup={() => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          }}\n        />\n      ) : (\n        <LoadCardSmall\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'LoadScreen',\n                  params: { loadId: load?.id },\n                },\n              },\n            })\n          }\n        />\n      );\n    },\n    [\n      manifestScreen.display,\n      aircrafts?.length,\n      sheets.aircraft.open,\n      sheets.ticketType.open,\n      ticketTypes?.length,\n      dialogs.manifestUser,\n      currentUser,\n      dispatch,\n      navigation,\n    ]\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <ProgressBar\n        visible={loading || manifest.loading}\n        indeterminate\n        color={state.theme.colors.primary}\n      />\n\n      <View style={styles.container}>\n        <View\n          style={{\n            width: '100%',\n            flex: 1,\n            height: Dimensions.get('window').height,\n            backgroundColor: theme.colors.background,\n          }}\n        >\n          {dropzone?.banner && (\n            <ImageBackground\n              source={{ uri: dropzone.banner }}\n              style={{ position: 'absolute', top: -8, left: 0, width: '100%', height: 340 }}\n              resizeMode=\"cover\"\n            />\n          )}\n          <DragDropWrapper>\n            <FlatList<LoadDetailsFragment>\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults\n                  style={{ marginTop: 156 }}\n                  title=\"No loads so far today\"\n                  subtitle=\"How's the weather?\"\n                />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n              }}\n              testID=\"loads\"\n              keyExtractor={(item, idx) => `load-small-${item?.id || idx}-${idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n              }}\n              numColumns={numColumns}\n              {...{ data, renderItem }}\n              refreshControl={<RefreshControl refreshing={loading} onRefresh={() => fetchMore()} />}\n            />\n          </DragDropWrapper>\n        </View>\n        {manifest.permissions.canCreateLoad && (\n          <FAB\n            style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n            small\n            icon=\"plus\"\n            onPress={() => dialogs.load.open({})}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          open={isDisplayOptionsOpen}\n          setOpen={setDisplayOptionsOpen}\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n        >\n          <MenuItem\n            title=\"Show expanded cards\"\n            bold={manifestScreen.display !== 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <MenuItem\n            title=\"Show compact cards\"\n            bold={manifestScreen.display === 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import * as React from 'react';\nimport { Divider, List, Switch, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneState, DropzoneStateEvent, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { useDropzonesContext } from 'app/api/crud/useDropzones';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone }\n  } = useDropzoneContext();\n\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const { updateVisibility } = useDropzonesContext();\n  const onChangeVisibility = React.useCallback(\n    async (event: DropzoneStateEvent) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, event);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [dropzone?.id, notify, updateVisibility]\n  );\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.surface }}>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n            onPress={() =>\n              !dropzone\n                ? null\n                : navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'Configuration',\n                        params: {\n                          screen: 'DropzoneSettingsScreen'\n                        }\n                      }\n                    }\n                  })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n\n        <Divider />\n        <List.Item\n          title=\"Permissions\"\n          description=\"Grant or revoke access to define who can do what at this dropzone\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'PermissionScreen'\n                  }\n                }\n              }\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Aircrafts\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'AircraftsScreen'\n                  }\n                }\n              }\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'DropzoneRigsScreen'\n                  }\n                }\n              }\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'RigInspectionTemplateScreen'\n                  }\n                }\n              }\n            })\n          }\n        />\n        {!canUpdateDropzone ? null : (\n          <>\n            <Divider />\n            <List.Item\n              title=\"Master Log\"\n              left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n              right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n              description=\"View historic data for daily operations. Temporarily disabled\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'MasterLogScreen'\n                      }\n                    }\n                  }\n                })\n              }\n            />\n          </>\n        )}\n        <Divider />\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title={\n              {\n                [DropzoneState.Archived]: 'Re-open dropzone',\n                [DropzoneState.Public]: 'Go offline',\n                [DropzoneState.Private]: 'Go live',\n                [DropzoneState.InReview]: 'Awaiting review'\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            left={() => (\n              <List.Icon\n                color={theme.colors.text}\n                icon={\n                  {\n                    [DropzoneState.Archived]: 'archive',\n                    [DropzoneState.Public]: 'check',\n                    [DropzoneState.Private]: 'upload',\n                    [DropzoneState.InReview]: 'progress-upload'\n                  }[dropzone?.status || DropzoneState.Private] as IconSource\n                }\n              />\n            )}\n            right={() => (\n              <Switch\n                value={[DropzoneState.Public, DropzoneState.InReview].includes(\n                  dropzone?.status || DropzoneState.Private\n                )}\n                disabled={dropzone?.status === DropzoneState.InReview}\n                onValueChange={(value) => {\n                  onChangeVisibility(value ? DropzoneStateEvent.RequestPublication : DropzoneStateEvent.Unpublish);\n                }}\n              />\n            )}\n            onPress={() => {\n              switch (dropzone?.status) {\n                case DropzoneState.Archived:\n                  return onChangeVisibility(DropzoneStateEvent.Publish);\n                case DropzoneState.Private:\n                  return onChangeVisibility(DropzoneStateEvent.RequestPublication);\n                case DropzoneState.Public:\n                case DropzoneState.InReview:\n                  return onChangeVisibility(DropzoneStateEvent.Unpublish);\n                default:\n                  return null;\n              }\n            }}\n            description={\n              {\n                [DropzoneState.Archived]: 'Your dropzone has been archived and is not visible to users',\n                [DropzoneState.Public]: 'Your dropzone is available to the public',\n                [DropzoneState.Private]: 'Request a review to make your dropzone available to all users',\n                [DropzoneState.InReview]: 'You may be contacted to verify the legitimacy of your dropzone.'\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            descriptionNumberOfLines={4}\n          />\n        )}\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          title=\"Ticket types\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'TicketTypesScreen'\n                  }\n                }\n              }\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <Divider />\n        <List.Item\n          title=\"Ticket add-ons\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'ExtrasScreen'\n                  }\n                }\n              }\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useTickets } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n  const { ticketTypes, loading, refetch, archiveTicketType, updateTicketType } = useTickets({\n    dropzone: dropzone?.id,\n  });\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n\n  const createArchiveTicketHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ArchiveTicketType() {\n        const response = await archiveTicketType(ticket);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived ${ticket.name}`);\n        }\n      };\n    },\n    [archiveTicketType, notify]\n  );\n\n  const createToggleManifestSelfHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ToggleManifestSelf() {\n        const response = await updateTicketType(Number(ticket.id), {\n          allowManifestingSelf: !ticket.allowManifestingSelf,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`${ticket.name} can ${ticket.allowManifestingSelf ? 'no longer' : 'now'}`);\n        }\n      };\n    },\n    [notify, updateTicketType]\n  );\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {ticketTypes?.map((ticketType) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: createArchiveTicketHandler(ticketType),\n              }}\n            >\n              <DataTable.Row\n                onPress={() => {\n                  dialogs.ticketType.open({ original: ticketType });\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n                <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n                <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n                <DataTable.Cell numeric>\n                  <View pointerEvents=\"box-none\">\n                    <Switch\n                      onValueChange={createToggleManifestSelfHandler(ticketType)}\n                      value={!!ticketType.allowManifestingSelf}\n                    />\n                  </View>\n                </DataTable.Cell>\n              </DataTable.Row>\n            </SwipeActions>\n          </View>\n        ))}\n      </DataTable>\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: state.theme.colors.primary }]}\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dialogs.ticketType.open()}\n        label=\"New ticket type\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport * as Location from 'expo-location';\nimport MapView from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value = { lat: -27.550908, lng: 153.111635 }, onChange } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value?.lng === null || value?.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value?.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <MapView\n      position={{\n        x: 0,\n        y: 0\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        onChange({\n          longitude: r.lng,\n          latitude: r.lat\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5\n              },\n              textShadowRadius: 10,\n              zIndex: 10\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3\n              },\n              textShadowRadius: 10\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </MapView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    }\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column'\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%'\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8\n  }\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, Card, List, useTheme, TouchableRipple, Avatar, Title } from 'react-native-paper';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { actions, useAppDispatch } from 'app/state';\nimport LottieView from 'app/components/LottieView';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport ColorPicker from 'app/components/input/colorpicker';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport LocationPicker from 'app/components/input/LocationPicker';\nimport imagePickDark from 'assets/images/image-pick.json';\nimport imagePickLight from 'assets/images/image-pick-light.json';\nimport { FederationSelectField } from 'app/components/input/dropdown_select';\nimport { Control, Controller, useWatch } from 'react-hook-form';\nimport { DropzoneFields } from './useForm';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { SwitchField } from 'app/components/input/switch/Switch';\n\ninterface IDropzoneForm {\n  loading: boolean;\n  control?: Control<DropzoneFields>;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading, control } = props;\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n  const { lat, lng, name, banner, primaryColor } = useWatch({ control });\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading}\n        containerStyle={[styles.skeletonCard, { marginTop: 0, paddingHorizontal: 0 }]}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card\n          style={[\n            styles.card,\n            {\n              paddingLeft: 0,\n              paddingRight: 0,\n              paddingHorizontal: 0,\n              marginLeft: 0,\n              width: '100%',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }\n          ]}\n        >\n          <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n            <Controller\n              {...{ control }}\n              name=\"banner\"\n              render={({ field: { onChange } }) => (\n                <TouchableRipple\n                  onPress={async () => {\n                    try {\n                      const base64 = await pickImage();\n                      if (base64) {\n                        onChange(`data:image/jpeg;base64,${base64}`);\n                      }\n                    } catch (e) {\n                      console.log(e);\n                    }\n                  }}\n                  style={{ width: 185 }}\n                >\n                  {!banner ? (\n                    <LottieView\n                      style={{ height: 175, width: 175 }}\n                      autoPlay\n                      loop={false}\n                      source={theme.dark ? imagePickLight : imagePickDark}\n                    />\n                  ) : (\n                    <Avatar.Image\n                      size={175}\n                      source={{ uri: banner }}\n                      style={{\n                        borderWidth: StyleSheet.hairlineWidth,\n                        backgroundColor: theme.colors.primary\n                      }}\n                    />\n                  )}\n                </TouchableRipple>\n              )}\n            />\n            <Title>{name}</Title>\n            <HelperText type=\"info\" style={{ marginTop: 16 }}>\n              Your banner is displayed on the weather board and on the dropzone selection screen\n            </HelperText>\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <FormTextField {...{ control }} name=\"name\" mode=\"outlined\" />\n          <FederationSelectField {...{ control }} name=\"federation\" />\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1\n            }}\n          >\n            <Controller\n              {...{ control }}\n              name=\"lat\"\n              render={({ field: latField }) => (\n                <Controller\n                  {...{ control }}\n                  name=\"lng\"\n                  render={({ field: lngField }) => (\n                    <LocationPicker\n                      value={\n                        latField.value && lngField.value ? { lat: latField.value, lng: lngField.value } : undefined\n                      }\n                      onChange={(region) => {\n                        lngField.onChange(region.latitude);\n                        latField.onChange(region.longitude);\n                      }}\n                    />\n                  )}\n                />\n              )}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%'\n            }}\n          >\n            <PhonePreview primaryColor={primaryColor || '#000000'} />\n\n            <WebPreview primaryColor={primaryColor || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <Controller\n          {...{ control }}\n          name=\"primaryColor\"\n          render={({ field: { onChange, value }, fieldState }) => (\n            <ColorPicker\n              title=\"Primary color\"\n              helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n              error={fieldState?.error?.message}\n              onChange={(color) => {\n                onChange(color);\n                dispatch(actions.global.setPrimaryColor(color));\n              }}\n              value={value || '#000000'}\n            />\n          )}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <SwitchField\n            {...{ control }}\n            label=\"Require Credits\"\n            name=\"requireCredits\"\n            helperText=\"Users cannot manifest without credits on their account\"\n          />\n          <SwitchField\n            {...{ control }}\n            label=\"Manifest can ignore rules\"\n            name=\"allowManifestBypass\"\n            helperText=\"Manifest can bypass all rules\"\n          />\n          <SwitchField\n            {...{ control }}\n            label=\"Allow Negative Credits\"\n            name=\"allowNegativeCredits\"\n            helperText=\"Allow users to go into negative credits\"\n          />\n          <SwitchField\n            {...{ control }}\n            label=\"Require License\"\n            name=\"requireLicense\"\n            helperText=\"Require users to have a valid license to manifest\"\n          />\n          <SwitchField\n            {...{ control }}\n            label=\"Require in-date membership\"\n            name=\"requireMembership\"\n            helperText=\"Require membership to be in-date\"\n          />\n          <SwitchField\n            {...{ control }}\n            label=\"Require Equipment\"\n            name=\"requireEquipment\"\n            helperText=\"Users cannot manifest without selecting a rig\"\n          />\n          <SwitchField\n            {...{ control }}\n            label=\"Require Rig Inspection\"\n            name=\"requireRigInspection\"\n            helperText=\"Users cannot manifest before their rig is inspected\"\n          />\n          <SwitchField\n            {...{ control }}\n            label=\"Allow double manifesting\"\n            name=\"allowDoubleManifesting\"\n            helperText=\"Users are allowed to manifest on multiple loads\"\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%'\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n    paddingHorizontal: 24\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%'\n  },\n  card: {\n    padding: 16,\n    width: '100%'\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%'\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%'\n  },\n  subheader: {\n    paddingLeft: 0\n  }\n});\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport camelCase from 'lodash/camelCase';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { DropzoneInput, Permission } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\nimport { DropzoneEssentialsFragment, FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport useRestriction from 'app/hooks/useRestriction';\n\nexport type DropzoneFields = Required<Omit<DropzoneInput, 'settings' | 'federation' | 'id'> & DropzoneInput['settings'] & { id: number; federation: FederationEssentialsFragment | null }>;\n\nexport const dropzoneValidation = yup.object({\n  name: yup.string().nullable().default(null),\n  federation: yup.object().required('Your dropzone must be part of a federation'),\n  lat: yup.number().nullable(),\n  lng: yup.number().nullable(),\n  primaryColor: yup.string(),\n  requireRigInspection: yup.boolean(),\n  requireLicense: yup.boolean(),\n  requireCredits: yup.boolean(),\n  requireMembership: yup.boolean(),\n  allowNegativeCredits: yup.boolean(),\n  allowManifestBypass: yup.boolean(),\n  allowDoubleManifesting: yup.boolean()\n});\n\nexport const EMPTY_FORM_VALUES: Partial<DropzoneFields> = {\n  id: undefined,\n  federation: null,\n  lat: null,\n  lng: null,\n  primaryColor: null,\n  requireRigInspection: true,\n  requireMembership: true,\n  allowNegativeCredits: false,\n  allowManifestBypass: false,\n  requireCredits: true,\n  requireLicense: true,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<DropzoneFields>;\n  onSuccess?(dropzone: DropzoneEssentialsFragment): void;\n}\n\nexport default function useDropzoneForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const { data } = useFederationsQuery();\n  const { dropzone: { dropzone } } = useDropzoneContext();\n  const initialValues = React.useMemo(() => ({\n    ...EMPTY_FORM_VALUES,\n    id: dropzone?.id ? Number(dropzone?.id) : undefined,\n    lat: dropzone?.lat || undefined,\n    lng: dropzone?.lng || undefined,\n    federation: dropzone?.federation || data?.federations?.[0] || undefined,\n    name: dropzone?.name || undefined,\n    primaryColor: dropzone?.primaryColor || undefined,\n    secondaryColor: dropzone?.secondaryColor || undefined,\n    allowManifestBypass: dropzone?.settings?.allowManifestBypass,\n    allowNegativeCredits: dropzone?.settings?.allowNegativeCredits,\n    allowDoubleManifesting: dropzone?.settings?.allowDoubleManifesting,\n    requireCredits: dropzone?.settings?.requireCredits,\n    requireLicense: dropzone?.settings?.requireLicense,\n    requireMembership: dropzone?.settings?.requireMembership,\n    requireRigInspection: dropzone?.settings?.requireRigInspection,\n    isCreditSystemEnabled: dropzone?.isCreditSystemEnabled,\n    requireEquipment: dropzone?.settings?.requireEquipment,\n    ...initial\n  }), [initial, dropzone?.name, data?.federations, dropzone?.primaryColor, dropzone?.secondaryColor, dropzone?.settings?.allowManifestBypass, dropzone?.settings?.allowNegativeCredits, dropzone?.settings?.allowDoubleManifesting, dropzone?.settings?.requireCredits, dropzone?.settings?.requireLicense, dropzone?.settings?.requireMembership, dropzone?.settings?.requireRigInspection, dropzone?.isCreditSystemEnabled, dropzone?.id, dropzone?.lat, dropzone?.lng, dropzone?.federation, dropzone?.settings?.requireEquipment]);\n\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<DropzoneFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(dropzoneValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { update }\n  } = useDropzoneContext();\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const [{ loading }, onUpdate] = useAsyncFn(\n    async (fields: DropzoneFields) => {\n      try {\n        if (!canUpdateDropzone) {\n          return { error: 'You don\\'t have permission to update this dropzone' }\n        }\n        const validatedFields = dropzoneValidation.validateSync(fields);\n        console.debug({ validatedFields });\n        const { id, banner, isCreditSystemEnabled, federation, primaryColor, lat, lng, name, requestPublication, secondaryColor, isPublic, ...settings } = fields;\n\n        const response = await update({\n          banner,\n          federation: federation?.id ? Number(federation?.id) : undefined,\n          primaryColor,\n          lat,\n          lng,\n          name,\n          requestPublication,\n          isCreditSystemEnabled,\n          isPublic,\n          settings\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(camelCase(field) as keyof DropzoneFields, { type: 'custom', message });\n          });\n        }\n        if ('dropzone' in response) {\n          notify.success('Your changes have been saved');\n          onSuccess?.(response.dropzone);\n        }\n      } catch (error) {\n        console.error(error);\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [update, setError, canUpdateDropzone, notify, onSuccess]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onUpdate, console.error), [handleSubmit, onUpdate]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, ProgressBar } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\nimport { Permission } from 'app/api/schema.d';\nimport DropzoneForm from 'app/forms/dropzone/DropzoneForm';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\nimport useDropzoneForm from 'app/forms/dropzone/useForm';\n\nexport default function UpdateDropzoneScreen() {\n  const globalState = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n\n  const { control, formState, onSubmit, loading } = useDropzoneForm({\n    onSuccess: () => {\n      notify.success('Your changes have been saved');\n    }\n  });\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Screen fullWidth={false}>\n        <DropzoneForm {...{ loading, control }} />\n      </Screen>\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={Boolean(canUpdateDropzone && formState.isDirty)}\n        disabled={!formState.isDirty || loading}\n        small\n        icon=\"check\"\n        onPress={onSubmit}\n        label=\"Save\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    marginTop: 0,\n    width: '100%'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16\n  },\n  field: {\n    marginBottom: 8\n  }\n});\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport { useAircrafts } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const { dialogs } = useDropzoneContext();\n  const { aircrafts, archive, loading, refetch } = useAircrafts({\n    dropzoneId: global.currentDropzoneId?.toString() as string,\n  });\n\n  const notify = useNotifications();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n  const theme = useTheme();\n\n  const createArchiveAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return async function ArchiveAircraftHandler() {\n        const response = await archive(aircraft);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived aircraft ${aircraft.name}`);\n        }\n      };\n    },\n    [archive, notify]\n  );\n\n  const createEditAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return function ArchiveAircraftHandler() {\n        dialogs.aircraft.open({ original: aircraft });\n      };\n    },\n    [dialogs.aircraft]\n  );\n  return (\n    <ScrollableScreen\n      contentContainerStyle={{ backgroundColor: theme.colors.surface }}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={global.theme.colors.primary} />\n\n      {aircrafts?.length ? null : (\n        <NoResults\n          title=\"No planes?\"\n          subtitle=\"You need to have at least one plane to manifest loads\"\n        />\n      )}\n\n      {!aircrafts?.length ? null : (\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Registration</DataTable.Title>\n            <DataTable.Title numeric>Slots</DataTable.Title>\n          </DataTable.Header>\n          {aircrafts?.map((plane) => (\n            <View style={{ height: 46 }}>\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: createArchiveAircraftHandler(plane),\n                }}\n              >\n                <DataTable.Row pointerEvents=\"none\" onPress={createEditAircraftHandler(plane)}>\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            </View>\n          ))}\n        </DataTable>\n      )}\n\n      <FAB\n        style={[styles.fab, { backgroundColor: global.theme.colors.primary }]}\n        visible={canCreatePlane}\n        small\n        icon=\"plus\"\n        onPress={dialogs.aircraft.open}\n        label=\"New plane\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport { Button, Checkbox, Dialog, Divider, FAB, IconButton, Portal, TextInput, useTheme } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(null);\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"minus-circle\"\n                onPress={() =>\n                  dispatch(actions.forms.rigInspectionTemplate.setFields(state.fields.filter((_, i) => i !== index)))\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) => (idx === newItem.index ? newItem : field)) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(actions.forms.rigInspectionTemplate.setFields([...state.fields, newItem as FieldItem]));\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n            backgroundColor: theme.colors.primary\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' })\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' })\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' })\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' })\n            }\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n\nimport { useRigInspectionTemplateQuery, useUpdateRigInspectionTemplateMutation } from 'app/api/reflection';\n\nimport RigInspectionTemplateForm from 'app/components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { FormTemplate, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useWindowDimensions, View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const { data } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string\n    }\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useUpdateRigInspectionTemplateMutation();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(actions.forms.rigInspectionTemplate.setOpen(data.dropzone.rigInspectionTemplate as FormTemplate));\n    }\n  }, [data?.dropzone?.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone?.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields)\n        }\n      });\n      notify.success('Template saved');\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [mutationUpdateForm, data?.dropzone?.rigInspectionTemplate?.id, data?.dropzone?.id, state.fields, notify]);\n\n  const { width } = useWindowDimensions();\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <ScrollableScreen style={{ marginTop: 16, width: width > 550 ? 550 : '100%' }}>\n        <Card style={{ width: '100%' }}>\n          <Card.Title title=\"Rig Inspection Form Template\" />\n\n          <Card.Content>\n            <RigInspectionTemplateForm />\n          </Card.Content>\n        </Card>\n        <Button\n          disabled={!canEdit}\n          mode=\"contained\"\n          loading={mutation.loading}\n          onPress={() => updateForm()}\n          style={{ width: '100%', marginTop: 16, borderRadius: 20 }}\n        >\n          Save template\n        </Button>\n      </ScrollableScreen>\n    </View>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport {\n  AvailableRigsDocument,\n  DropzoneUsersDetailedDocument,\n  useDropzoneRigsQuery,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n  const { data, loading, refetch } = useDropzoneRigsQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useUpdateRigMutation();\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                    refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    notify.error(result?.updateRig.errors[0]);\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, List, useTheme } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useRolesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const theme = useTheme();\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useRolesQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const isFocused = useIsFocused();\n\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({ title: 'Permissions' });\n      refetch();\n    }\n  }, [isFocused, navigation, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <View style={{ height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ maxWidth: 550 }}>\n        <SkeletonContent\n          isLoading\n          containerStyle={{\n            width: '100%',\n            flex: 1,\n            flexGrow: 1,\n            paddingHorizontal: 16,\n          }}\n          layout={[\n            {\n              key: 'first',\n              height: 175,\n              marginTop: 70,\n              marginBottom: 35,\n              width: '100%',\n            },\n            { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n          ]}\n        />\n      </View>\n    </View>\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Manifesting\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDoubleSlot\"\n                    description=\"Manifest on more than one load at a time\"\n                    title=\"Double Manifest\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket types\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket addons\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { MasterLogInput } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUpdateMasterLogMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers';\nimport { MasterLogEntryFragment, MasterLogUserFragment } from 'app/api/operations';\nimport { camelCase, isEqual } from 'lodash';\n\nexport type MasterLogFields = Omit<MasterLogInput, 'dzso'> & {\n  date: string | null;\n  dzso: MasterLogUserFragment | null;\n};\n\nexport const masterLogValidation = yup.object({\n  date: yup.string(),\n  notes: yup.string().nullable().default(null),\n  dzso: yup.object().required('You must select a DZSO'),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<MasterLogFields> = {\n  dzso: null,\n  date: null,\n  notes: '',\n};\n\nexport interface IUseMasterLogFormOpts {\n  initial?: Partial<MasterLogFields>;\n  onSuccess?(entry: MasterLogEntryFragment): void;\n}\n\nexport default function useMasterLogForm(opts: IUseMasterLogFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(\n    () => ({ ...EMPTY_FORM_VALUES, ...initial, notes: initial?.notes || '' }),\n    [initial]\n  );\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n  const notify = useNotifications();\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const methods = useForm<MasterLogFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(masterLogValidation),\n  });\n\n  const { handleSubmit, reset, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [updateMasterLog] = useUpdateMasterLogMutation();\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [reset, defaultValues]);\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: MasterLogFields) => {\n      try {\n        const validatedFields = masterLogValidation.validateSync(fields);\n        console.debug({ validatedFields, dropzone });\n        if (!dropzone?.id) {\n          return;\n        }\n\n        const { data: response } = await updateMasterLog({\n          variables: {\n            date: validatedFields.date,\n            dropzone: dropzone?.id,\n            attributes: {\n              dzso: validatedFields.dzso?.id,\n              notes: validatedFields.notes,\n            },\n          },\n        });\n\n        if (response?.updateMasterLog?.fieldErrors) {\n          response?.updateMasterLog?.fieldErrors?.forEach(({ field, message }) => {\n            setError(camelCase(field) as keyof MasterLogFields, { type: 'custom', message });\n          });\n        }\n        if (response?.updateMasterLog?.masterLog?.date) {\n          notify.success('Master Log entry updated');\n          onSuccess?.(response?.updateMasterLog?.masterLog);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(error);\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone, updateMasterLog]\n  );\n\n  const { notes, dzso } = useWatch<MasterLogFields>({ control: methods.control });\n  const isDirty = React.useMemo(\n    () => !isEqual({ notes: initial?.notes, dzso: initial?.dzso?.id }, { notes, dzso: dzso?.id }),\n    [dzso, initial, notes]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(\n    () => ({ ...methods, isDirty, onSubmit, loading }),\n    [methods, isDirty, onSubmit, loading]\n  );\n}\n","import * as React from 'react';\nimport { Button, Card, DataTable, IconButton, List, Paragraph } from 'react-native-paper';\nimport { Linking, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport { Screen } from 'app/components/layout';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useMasterLogQuery } from 'app/api/reflection';\nimport { MasterLogQueryVariables } from 'app/api/operations';\nimport { DateTime } from 'luxon';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { DropzoneUserSelectField } from 'app/components/input/dropdown_select';\nimport { Permission } from 'app/api/schema.d';\nimport usePalette from 'app/hooks/usePalette';\nimport NoResults from 'app/components/NoResults';\nimport useMasterLogForm from './useForm';\n\nexport default function DropzoneMasterLogScreen() {\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const [date, setDate] = React.useState(DateTime.local().toISODate());\n  const navigation = useNavigation();\n  const [isEditing, setIsEditing] = React.useState(false);\n  const toggleEditing = React.useCallback(() => setIsEditing(!isEditing), [isEditing]);\n  const theme = usePalette();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          validRange={{ endDate: new Date() }}\n          onChange={(time) => setDate(DateTime.fromSeconds(time).toISODate())}\n          value={date ? DateTime.fromISO(date).toSeconds() : DateTime.local().toSeconds()}\n          color={theme.text}\n        />\n      )\n    });\n  }, [date, navigation, theme.text]);\n\n  const variables: MasterLogQueryVariables = React.useMemo(\n    () => ({\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n      date\n    }),\n    [currentDropzone?.dropzone?.id, date]\n  );\n\n  const { data } = useMasterLogQuery({ variables, skip: !currentDropzone?.dropzone?.id });\n  const entry = React.useMemo(() => data?.masterLog, [data?.masterLog]);\n\n  const onDownload = React.useCallback(() => {\n    if (data?.masterLog?.downloadUrl) {\n      Linking.openURL(data?.masterLog?.downloadUrl);\n    }\n  }, [data?.masterLog?.downloadUrl]);\n\n  const { control, onSubmit, isDirty } = useMasterLogForm({\n    initial: {\n      date,\n      notes: entry?.notes,\n      dzso: entry?.dzso\n    },\n    onSuccess: () => setIsEditing(false)\n  });\n\n  return (\n    <Screen scrollable fullWidth={false}>\n      <View style={{ width: '100%', paddingTop: 48 }}>\n        <Card>\n          <Card.Title\n            right={() => <IconButton icon=\"download\" onPress={onDownload} style={{ marginRight: 8 }} />}\n            title={`${DateTime.fromISO(date || new Date().toISOString()).toLocaleString(\n              DateTime.DATE_MED_WITH_WEEKDAY\n            )}`}\n          />\n          <Card.Content>\n            {isEditing ? (\n              <>\n                <DropzoneUserSelectField\n                  name=\"dzso\"\n                  label=\"DZSO\"\n                  requiredPermissions={[Permission.ActAsDzso]}\n                  {...{ control }}\n                />\n                <FormTextField\n                  mode=\"flat\"\n                  numberOfLines={5}\n                  placeholder=\"Any notes for the day? e.g hours of CI attendance\"\n                  name=\"notes\"\n                  label=\"Notes\"\n                  {...{ control }}\n                />\n              </>\n            ) : (\n              <>\n                <List.Item title={entry?.dzso?.name} description=\"DZSO\" />\n                <List.Subheader>Notes</List.Subheader>\n                <Paragraph style={{ padding: 16 }}>{entry?.notes || 'No notes for this day'}</Paragraph>\n              </>\n            )}\n          </Card.Content>\n          <Card.Actions style={{ justifyContent: 'space-between' }}>\n            {isEditing && <Button onPress={toggleEditing}>Cancel</Button>}\n            {isEditing && (\n              <Button mode=\"contained\" onPress={onSubmit} disabled={!isDirty}>\n                Save\n              </Button>\n            )}\n            {!isEditing && <Button onPress={toggleEditing}>Edit</Button>}\n          </Card.Actions>\n        </Card>\n        {!data?.masterLog?.loads?.length ? (\n          <Card style={{ width: '100%', marginVertical: 16 }}>\n            <Card.Content>\n              <NoResults title=\"No loads for this day\" subtitle=\"\" />\n            </Card.Content>\n          </Card>\n        ) : null}\n        {data?.masterLog?.loads?.map((load) => (\n          <Card style={{ width: '100%', marginVertical: 16 }}>\n            <Card.Title title={`Load ${load.loadNumber}`} />\n            <Card.Content>\n              <List.Item title=\"Pilot\" description={load?.pilot?.name} />\n              <List.Item title=\"GCA\" description={load?.gca?.name} />\n              <List.Item\n                title=\"Plane\"\n                description={\n                  load?.aircraft?.registration\n                    ? `${load?.aircraft?.name} ${load?.aircraft?.registration}`\n                    : 'No plane selected'\n                }\n              />\n              <DataTable>\n                <DataTable.Header>\n                  <DataTable.Title>Name</DataTable.Title>\n                  <DataTable.Title>Jump type</DataTable.Title>\n                  <DataTable.Title numeric>Altitude</DataTable.Title>\n                </DataTable.Header>\n\n                {load.slots?.map((slot) => (\n                  <DataTable.Row>\n                    <DataTable.Cell>{slot?.name}</DataTable.Cell>\n                    <DataTable.Cell>{slot.jumpType}</DataTable.Cell>\n                    <DataTable.Cell numeric>{slot?.altitude}</DataTable.Cell>\n                  </DataTable.Row>\n                ))}\n              </DataTable>\n            </Card.Content>\n          </Card>\n        ))}\n      </View>\n    </Screen>\n  );\n}\n","import { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzoneTransactionsLazyQuery } from 'app/api/reflection';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: route?.params?.userId || currentUser?.id,\n  });\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({\n        variables: { dropzoneId: state.currentDropzoneId?.toString() as string },\n      });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        keyExtractor={(item) => `transaction-${item?.node?.id}`}\n        renderItem={({ item }) =>\n          !item?.node ? null : (\n            <OrderCard\n              onPress={() =>\n                !item?.node?.id\n                  ? null\n                  : navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Manifest',\n                        params: {\n                          screen: 'User',\n                          params: {\n                            screen: 'OrderReceiptScreen',\n                            params: {\n                              orderId: item?.node?.id as string,\n                              userId: item?.node?.buyer?.id as string,\n                            },\n                          },\n                        },\n                      },\n                    })\n              }\n              order={item?.node}\n              showAvatar\n              {...{ dropzoneUser }}\n            />\n          )\n        }\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\n\nexport default function ExtrasScreen() {\n  const { dropzone: currentDropzone, dialogs } = useDropzoneContext();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string\n    }\n  });\n  const createEditHandler = React.useCallback(\n    (ticketTypeAddon: TicketTypeAddonDetailsFragment) => () =>\n      dialogs.ticketTypeAddon.open({ original: ticketTypeAddon }),\n    [dialogs.ticketTypeAddon]\n  );\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.primary} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.extras?.map((extra) => (\n            <DataTable.Row onPress={createEditHandler(extra)} pointerEvents=\"none\">\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={dialogs.ticketTypeAddon.open}\n          label=\"New ticket addon\"\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%'\n  }\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport SettingsMenuScreen from './settings_menu/SettingsMenuScreen';\nimport TicketTypeSettingsScreen from './ticket_types/TicketTypesScreen';\nimport DropzoneSettingsScreen from './dropzone_settings/DropzoneSettingsScreen';\nimport PlanesScreen from './aircrafts/AircraftsScreen';\nimport RigInspectionTemplateScreen from './rig_inspection_template/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from './rigs/DropzoneRigsScreen';\nimport DropzonePermissionScreen from './permissions/PermissionsScreen';\nimport DropzoneMasterLogScreen from './master_log/MasterLogScreen';\nimport DropzoneTransactionsScreen from './transactions/DropzoneTransactionsScreen';\nimport ExtrasScreen from './extras/ExtrasScreen';\n\nexport type ConfigurationRoutes = {\n  DropzoneSettingsScreen: undefined;\n  SettingsMenuScreen: undefined;\n  TicketTypesScreen: undefined;\n  AircraftsScreen: undefined;\n  AircraftScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  TransactionsScreen: undefined;\n  PermissionScreen: undefined;\n  MasterLogScreen: undefined;\n};\n\nconst Configuration = createStackNavigator<ConfigurationRoutes>();\n\nexport function useConfigurationNavigation() {\n  return useNavigation<NavigationProp<ConfigurationRoutes>>();\n}\nexport default function SettingsTab() {\n  return (\n    <AppSignalBoundary>\n      <Configuration.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} />,\n          cardStyle: {\n            flex: 1\n          }\n        }}\n      >\n        <Configuration.Screen\n          name=\"SettingsMenuScreen\"\n          component={SettingsMenuScreen}\n          options={{ title: 'Settings' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneSettingsScreen\"\n          component={DropzoneSettingsScreen}\n          options={{ title: 'Basic settings' }}\n        />\n        <Configuration.Screen name=\"AircraftsScreen\" component={PlanesScreen} options={{ title: 'Planes' }} />\n        <Configuration.Screen\n          name=\"TicketTypesScreen\"\n          component={TicketTypeSettingsScreen}\n          options={{ title: 'Ticket types' }}\n        />\n        <Configuration.Screen name=\"ExtrasScreen\" component={ExtrasScreen} options={{ title: 'Ticket add-ons' }} />\n        <Configuration.Screen\n          name=\"RigInspectionTemplateScreen\"\n          component={RigInspectionTemplateScreen}\n          options={{ title: 'Rig Inspection Form' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneRigsScreen\"\n          component={DropzoneRigsScreen}\n          options={{ title: 'Dropzone rigs' }}\n        />\n        <Configuration.Screen\n          name=\"TransactionsScreen\"\n          component={DropzoneTransactionsScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Configuration.Screen\n          name=\"PermissionScreen\"\n          component={DropzonePermissionScreen}\n          options={{ title: 'Permissions' }}\n        />\n        <Configuration.Screen\n          name=\"MasterLogScreen\"\n          component={DropzoneMasterLogScreen}\n          options={{ title: 'Master log' }}\n        />\n      </Configuration.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport LoadScreen, { LoadScreenRoute } from './load/LoadScreen';\n\nimport WeatherConditionsScreen from './weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from './weather_conditions/JumpRunScreen';\nimport WindScreen from './weather_conditions/WindScreen';\n\nimport ManifestScreen from './manifest/ManifestScreen';\n\nimport User, { UserRoutes } from '../user/routes';\nimport Configuration, { ConfigurationRoutes } from '../configuration/routes';\n\nexport type DropzoneRoutes = {\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  ManifestScreen: undefined;\n  JumpRunScreen: undefined;\n  DashboardScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n  Configuration: NavigatorScreenParams<ConfigurationRoutes>;\n} & LoadScreenRoute;\n\nconst Manifest = createStackNavigator<DropzoneRoutes>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <AppSignalBoundary>\n      <Manifest.Navigator\n        screenOptions={{\n          headerShown: !!(globalState.credentials && globalState.currentDropzone),\n          header: (props) => <AppBar {...props} />,\n          headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n          cardStyle: {\n            flex: 1\n          }\n        }}\n      >\n        <Manifest.Screen name=\"ManifestScreen\" component={ManifestScreen} options={{ title: 'Manifest' }} />\n\n        <Manifest.Screen\n          name=\"WeatherConditionsScreen\"\n          component={WeatherConditionsScreen}\n          options={{ headerShown: false }}\n        />\n        <Manifest.Screen name=\"WindScreen\" component={WindScreen} options={{ title: 'Winds Aloft' }} />\n        <Manifest.Screen name=\"JumpRunScreen\" component={JumpRunScreen} options={{ title: 'Jump Run' }} />\n        <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n\n        <Manifest.Screen name=\"User\" component={User} options={{ headerShown: false, presentation: 'modal' }} />\n\n        <Manifest.Screen name=\"Configuration\" component={Configuration} options={{ headerShown: false }} />\n      </Manifest.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: string;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(parseISO(timestamp), { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification?.resource?.id },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport { Load, Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification.resource.id },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport NotificationCard from './NotificationCard';\nimport { useNotificationNavigation } from '../../useNotificationNavigation';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNotificationNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('User', {\n              screen: 'RigInspectionScreen',\n              params: {\n                rigId: (notification.resource as unknown as RigEssentialsFragment).id,\n                dropzoneUserId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n          : navigation.navigate('User', {\n              screen: 'ProfileScreen',\n              params: {\n                userId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n      }\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { NotificationRoutes } from './routes';\n\nexport function useNotificationNavigation() {\n  return useNavigation<NavigationProp<NotificationRoutes>>();\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { NotificationType } from 'app/api/schema.d';\nimport { useNotificationsLazyQuery } from 'app/api/reflection';\nimport { NotificationsQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from '../../../../state';\nimport NoResults from '../../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\nexport default function NotificationScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [getNotifications, query] = useNotificationsLazyQuery();\n  const { data, loading } = query;\n  const variables: NotificationsQueryVariables | undefined = React.useMemo(\n    () => (!dropzone?.id ? undefined : { dropzoneId: dropzone?.id }),\n    [dropzone?.id]\n  );\n\n  const fetchNotifications = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      getNotifications({ variables, fetchPolicy: 'cache-and-network' });\n    }\n  }, [getNotifications, variables]);\n\n  React.useEffect(() => {\n    if (!loading && query?.variables?.dropzoneId !== variables?.dropzoneId) {\n      getNotifications({ variables });\n    }\n  }, [getNotifications, loading, query?.variables?.dropzoneId, variables]);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && fetchNotifications) {\n      fetchNotifications();\n    }\n  }, [isFocused, fetchNotifications]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n  console.debug('Notifications', data?.dropzone?.currentUser?.notifications?.edges);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n      <FlatList\n        ListEmptyComponent={() => (\n          <View style={styles.empty}>\n            <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n          </View>\n        )}\n        contentContainerStyle={styles.content}\n        onRefresh={fetchNotifications}\n        data={data?.dropzone?.currentUser?.notifications?.edges}\n        refreshing={loading}\n        numColumns={1}\n        keyExtractor={(edge) => `notification-${edge?.node?.id}`}\n        style={StyleSheet.absoluteFill}\n        renderItem={({ item: edge }) => {\n          console.debug('Rendering notification ', edge?.node?.notificationType);\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return (\n                <BoardingCallNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.UserManifested:\n              console.debug('Renderign manifest card');\n              return <ManifestedCard key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return (\n                <RigInspectionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return (\n                <PermissionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PublicationRequested:\n              return (\n                <PublicationRequestNotification\n                  key={edge.node.id}\n                  notification={edge.node as never}\n                />\n              );\n            default:\n              return null;\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    height: '100%',\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from 'app/components/appbar/AppBar';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport NotificationsScreen from './notifications/NotificationsScreen';\nimport Users, { UserRoutes } from '../user/routes';\n\nexport type NotificationRoutes = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Notification = createStackNavigator<NotificationRoutes>();\n\nexport default function Notifications() {\n  return (\n    <AppSignalBoundary>\n      <Notification.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} hideWarnings />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n        initialRouteName=\"NotificationsScreen\"\n      >\n        <Notification.Screen\n          name=\"NotificationsScreen\"\n          component={NotificationsScreen}\n          options={{ title: 'Notifications' }}\n        />\n\n        <Notification.Screen name=\"User\" component={Users} />\n      </Notification.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\nexport interface IStatsProps {\n  title?: string;\n  columns?: number;\n  data: { label: string; value: number | string; color?: string }[];\n}\nexport default function Stats(props: IStatsProps) {\n  const { title, data, columns: cols } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const columns = React.useMemo(() => cols || data?.length || 1, [cols, data?.length]);\n\n  const itemWidth = React.useMemo(() => {\n    if (columns) {\n      return Math.floor((dimensions.width - 32) / columns);\n    }\n    return 50;\n  }, [columns, dimensions.width]);\n\n  const cardHeight = React.useMemo(\n    () => Math.ceil((data?.length || 1) / columns) * 120,\n    [columns, data?.length]\n  );\n  return (\n    <Card style={[styles.card, { height: cardHeight }]} {...{ onLayout }}>\n      <Card.Title title={title} />\n      <Card.Content style={styles.row}>\n        {data?.map(({ label, color, value }, index) => (\n          <View style={{ flexDirection: 'row', width: itemWidth, height: 70 }}>\n            <View style={styles.statistic}>\n              <View style={styles.value}>\n                <Text style={[styles.valueText, { color }]}>{value}</Text>\n              </View>\n              <View style={styles.label}>\n                <Text\n                  style={[styles.labelText, { color }]}\n                  lineBreakMode=\"middle\"\n                  numberOfLines={2}\n                >\n                  {label}\n                </Text>\n              </View>\n            </View>\n            {index === (data?.length || 0) - 1 ? null : <View style={styles.divider} />}\n          </View>\n        ))}\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { flex: 1, marginVertical: 4, maxWidth: '100%', justifyContent: 'center' },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    // width: 50,\n    // padding: 8,\n    // marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  label: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 4,\n    justifyContent: 'flex-start',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { subDays } from 'date-fns';\nimport * as React from 'react';\nimport ContributionGraph from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { Card } from 'react-native-paper';\n\nimport './LoadsByDay.css';\n\ninterface ILoadsByDayProps extends Pick<ViewProps, 'style'> {\n  data: { date: string; count: number }[];\n  startTime: Date;\n}\n\nexport default function LoadsByDay(props: ILoadsByDayProps) {\n  const { data, startTime, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Dispatched Loads\" />\n      <Card.Content style={{ height: dimensions.height - 75, width: dimensions.width - 32 }}>\n        <ContributionGraph\n          values={data}\n          showMonthLabels\n          classForValue={(value) => {\n            if (!value?.count) {\n              return 'none';\n            }\n            if (value.count > 3) {\n              return 'many';\n            }\n            if (value.count < 3 && value.count > 0) {\n              return 'few';\n            }\n            return 'none';\n          }}\n          horizontal\n          titleForValue={(value) =>\n            value?.date ? `${value?.date}: ${value?.count} loads` : 'No loads'\n          }\n          startDate={startTime || subDays(new Date(), 365)}\n          endDate={new Date()}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, FlatList, ScrollView } from 'react-native';\nimport { Card, DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { DropzoneState, DropzoneStateEvent } from 'app/api/schema.d';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport ChipSelect from 'app/components/input/chip_select/ChipSelect';\nimport Select from 'app/components/input/select/Select';\nimport { useDropzonesContext } from 'app/api/crud/useDropzones';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IDropzonesTableProps {\n  dropzones: DropzoneStatisticsFragment[];\n  selected: DropzoneStatisticsFragment[];\n  onChangeSelected(dropzones: DropzoneStatisticsFragment[]): void;\n}\n\nconst stateEvent = {\n  [DropzoneState.Archived]: DropzoneStateEvent.Archive,\n  [DropzoneState.InReview]: DropzoneStateEvent.RequestPublication,\n  [DropzoneState.Private]: DropzoneStateEvent.Unpublish,\n  [DropzoneState.Public]: DropzoneStateEvent.Publish,\n};\n\nfunction DropzoneTableRow(props: { dropzone?: DropzoneStatisticsFragment | null }) {\n  const { dropzone } = props;\n\n  const { updateVisibility } = useDropzonesContext();\n  const notify = useNotifications();\n\n  const onChangeVisibility = React.useCallback(\n    async (state: DropzoneState) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, stateEvent[state]);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [notify, dropzone?.id, updateVisibility]\n  );\n\n  if (!dropzone) {\n    return null;\n  }\n  return (\n    <DataTable.Row\n      style={{\n        borderLeftColor: dropzone.primaryColor || undefined,\n        borderLeftWidth: 5,\n      }}\n    >\n      <DataTable.Cell style={styles.avatarCell}>\n        <UserAvatar size={20} name={dropzone?.name} image={dropzone.banner} />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.nameCell}>{dropzone.name}</DataTable.Cell>\n      <DataTable.Cell style={styles.createdCell}>\n        <HelperText type=\"info\">{format(parseISO(dropzone.createdAt), 'dd MMM, HH:mm')}</HelperText>\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.statusCell}>\n        <Select<DropzoneState>\n          value={dropzone.status}\n          options={[\n            { label: 'Archived', value: DropzoneState.Archived },\n            { label: 'Private', value: DropzoneState.Private },\n            { label: 'In Review', value: DropzoneState.InReview },\n            { label: 'Public', value: DropzoneState.Public },\n          ]}\n          onChange={onChangeVisibility}\n        />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.loadsCell}>\n        {dropzone?.statistics?.loadsCount || 0}\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.usersCell}>\n        {dropzone?.statistics?.activeUserCount || 0}\n      </DataTable.Cell>\n    </DataTable.Row>\n  );\n}\nexport default function DropzonesTable(props: IDropzonesTableProps) {\n  const { dropzones, onChangeSelected, selected } = props;\n\n  return (\n    <Card style={{ flexGrow: 1, width: '100%' }}>\n      <Card.Title title=\"Dropzones\" />\n      <Card.Content style={{ width: '100%' }}>\n        <ChipSelect\n          allowEmpty\n          items={dropzones}\n          onChange={onChangeSelected}\n          value={selected}\n          renderItemLabel={(value) => value.name}\n        />\n        <ScrollView\n          horizontal\n          alwaysBounceVertical={false}\n          showsVerticalScrollIndicator={false}\n          style={{ width: '100%', height: '100%', flexGrow: 1 }}\n          contentContainerStyle={{ flexGrow: 1 }}\n        >\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title style={styles.avatarCell}>{null}</DataTable.Title>\n              <DataTable.Title style={styles.nameCell}>Name</DataTable.Title>\n              <DataTable.Title style={styles.createdCell}>Created</DataTable.Title>\n              <DataTable.Title style={styles.statusCell}>Status</DataTable.Title>\n              <DataTable.Title style={styles.loadsCell}>Loads</DataTable.Title>\n              <DataTable.Title style={styles.usersCell}>Active Users</DataTable.Title>\n            </DataTable.Header>\n            <FlatList\n              data={dropzones}\n              renderItem={({ item }) =>\n                !item ? null : <DropzoneTableRow key={`dropzone-row=${item?.id}`} dropzone={item} />\n              }\n            />\n          </DataTable>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n  },\n  avatarCell: {\n    flex: 5,\n  },\n  statusCell: {\n    flex: 20,\n  },\n  nameCell: {\n    flex: 40,\n  },\n  loadsCell: {\n    flex: 5,\n  },\n  usersCell: {\n    flex: 5,\n  },\n  createdCell: {\n    flex: 10,\n  },\n});\n","import { AbstractChartConfig } from 'react-native-chart-kit/dist/AbstractChart';\n\nexport const chartConfig: AbstractChartConfig = {\n  backgroundColor: '#e26a00',\n  backgroundGradientFrom: '#fb8c00',\n  backgroundGradientTo: '#ffa726',\n  decimalPlaces: 2, // optional, defaults to 2dp\n  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  style: {\n    borderRadius: 16,\n  },\n  propsForDots: {\n    r: '6',\n    strokeWidth: '2',\n    stroke: '#ffa726',\n  },\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientToOpacity: 0.5,\n  strokeWidth: 2, // optional, default 3\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false,\n};\n","import { chartConfig } from 'app/constants/ChartConfig';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { PieChart } from 'react-native-chart-kit';\nimport { Card } from 'react-native-paper';\n\ninterface IJumpTypePieChart extends Pick<ViewProps, 'style'> {\n  data: { name: string; count: number }[];\n}\n\nconst JUMP_TYPE_COLORS = {\n  angle: '#AA0000',\n  cam: '#FFAA00',\n  ws: '#AAFF00',\n  hnp: '#ABABFF',\n  hp: '#BAFFBA',\n  fs: '#DD00FF',\n  freefly: '#00ABFF',\n};\n\nexport default function LoadsByDay(props: IJumpTypePieChart) {\n  const { data: values, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const data = React.useMemo(\n    () =>\n      sortBy(values, 'count').map<{\n        name: string;\n        count: number;\n        legendFontColor: string;\n        legendFontSize: number;\n        color: string;\n      }>((stat) => ({\n        ...stat,\n        color:\n          stat?.name && stat?.name in JUMP_TYPE_COLORS\n            ? JUMP_TYPE_COLORS[stat.name as keyof typeof JUMP_TYPE_COLORS]\n            : '#AAA',\n        legendFontColor: '#333',\n        legendFontSize: 15,\n      })),\n    [values]\n  );\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Jump types\" />\n      <Card.Content style={{ height: 300 }}>\n        <PieChart\n          {...{ data, chartConfig }}\n          width={(dimensions.width || 400) - 32}\n          height={(dimensions.height || 200) - 75}\n          accessor=\"count\"\n          backgroundColor=\"transparent\"\n          paddingLeft=\"15\"\n          center={[0, 0]}\n          absolute={false}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import { useDropzonesStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { parseISO, subMonths } from 'date-fns';\nimport Chip from 'app/components/chips/Chip';\nimport { sumBy } from 'lodash';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport { Card } from 'react-native-paper';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { DropzoneState } from 'app/api/schema.d';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport DropzonesTable from './DropzonesTable';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nfunction AdminOverviewPage() {\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange).toISOString(),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return {\n      startTime: new Date(2020, 0, 1).toISOString(),\n      endTime: new Date().toISOString(),\n    };\n  }, [selectedTimeRange]);\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n\n  const [selectedDropzones, setSelectedDropzones] = React.useState<DropzoneStatisticsFragment[]>();\n\n  const { data } = useDropzonesStatisticsQuery({\n    variables: {\n      timeRange,\n    },\n  });\n  React.useEffect(() => {\n    if (data?.dropzones?.edges?.length && selectedDropzones === undefined) {\n      setSelectedDropzones(\n        data.dropzones.edges.map((edge) => edge?.node as DropzoneStatisticsFragment).filter(Boolean)\n      );\n    }\n  }, [data?.dropzones.edges, selectedDropzones]);\n\n  const summedStatistics = React.useMemo(\n    () => ({\n      revenueCents: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.revenueCentsCount || 0\n      ),\n      loadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.loadsCount || 0\n      ),\n      cancelledLoadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.cancelledLoadsCount || 0\n      ),\n      slotsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.slotsCount || 0\n      ),\n      pilotCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.pilotCount || 0\n      ),\n      dzsoCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.dzsoCount || 0),\n      gcaCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.gcaCount || 0),\n      totalUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.totalUserCount || 0\n      ),\n      activeUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.activeUserCount || 0\n      ),\n      inactiveUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.inactiveUserCount || 0\n      ),\n      loadCountByDay: (selectedDropzones || [])\n        .flatMap((dropzone) => dropzone?.statistics?.loadCountByDay || []),\n      slotsByJumpType: (selectedDropzones || [])\n        .flatMap((dropzone) => dropzone?.statistics?.slotsByJumpType || []),\n    }),\n    [selectedDropzones]\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        <Stats\n          title=\"Turn-around\"\n          columns={Platform.OS === 'web' ? undefined : 2}\n          data={\n            [\n              {\n                label: 'Total',\n                color: successColor,\n                value: `$${summedStatistics?.revenueCents || 0}`,\n              },\n              {\n                label: 'Dispatched',\n                value: summedStatistics?.loadsCount || 0,\n              },\n              {\n                label: 'Cancelled',\n                value: summedStatistics?.cancelledLoadsCount || 0,\n              },\n              {\n                label: 'Slots',\n                value: summedStatistics?.slotsCount || 0,\n              },\n            ].filter(Boolean) as IStatsProps['data']\n          }\n        />\n\n        <Stats\n          title=\"Accounts\"\n          columns={Platform.OS === 'web' ? undefined : 3}\n          data={[\n            { label: 'Dropzones', value: data?.dropzones.edges?.length || 0 },\n            { label: 'Users', value: summedStatistics?.totalUserCount || 0 },\n            {\n              label: 'Active',\n              value: summedStatistics?.activeUserCount || 0,\n              color: successColor,\n            },\n            {\n              label: 'Inactive',\n              value: summedStatistics?.inactiveUserCount || 0,\n              color: warningColor,\n            },\n            { label: 'Pilots', value: summedStatistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: summedStatistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: summedStatistics.dzsoCount || 0,\n            },\n          ]}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n        <LoadsByDay\n          style={styles.dispatchedLoadsCard}\n          data={summedStatistics?.loadCountByDay || []}\n          startTime={\n            timeRange?.startTime ? parseISO(timeRange?.startTime) : subMonths(new Date(), 6)\n          }\n        />\n\n        <JumpTypePieChart\n          style={styles.jumpTypesCard}\n          data={summedStatistics?.slotsByJumpType || []}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <DropzonesTable\n          selected={selectedDropzones || []}\n          onChangeSelected={setSelectedDropzones}\n          dropzones={\n            data?.dropzones?.edges?.map((edge) => edge?.node as DropzoneStatisticsFragment) || []\n          }\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nexport default function AdminOverviewPageWrapper() {\n  return (\n    <DropzonesProvider\n      state={[\n        DropzoneState.Archived,\n        DropzoneState.InReview,\n        DropzoneState.Private,\n        DropzoneState.Public,\n      ]}\n    >\n      <AdminOverviewPage />\n    </DropzonesProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n    marginVertical: 4,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList } from 'react-native';\nimport { DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { EventLevel } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\n\nconst LEVEL_COLORS = {\n  [EventLevel.Debug]: '#AF00FF',\n  [EventLevel.Error]: '#FF1515',\n  [EventLevel.Info]: '#15A0FF',\n};\n\ninterface IActivityFeedProps extends ActivityQueryVariables {\n  data: ActivityEssentialsFragment[];\n  onFetchMore(): void;\n}\n\nfunction FeedItem(props: { event?: ActivityEssentialsFragment | null }) {\n  const { event } = props;\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onPress = React.useCallback(() => {\n    if (event?.details) {\n      setExpanded(!expanded);\n    }\n  }, [event?.details, expanded]);\n\n  if (!event) {\n    return null;\n  }\n\n  return (\n    <>\n      <DataTable.Row\n        style={{\n          borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n          borderLeftWidth: 5,\n        }}\n        {...{ onPress }}\n      >\n        <DataTable.Cell style={styles.avatarCell}>\n          <UserAvatar\n            size={20}\n            name={event?.createdBy?.user?.name || 'System'}\n            image={event?.createdBy?.user?.image || undefined}\n          />\n          <HelperText type=\"info\">{format(parseISO(event.createdAt), 'dd MMM, HH:mm')}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.levelCell}>\n          <HelperText type=\"info\">{event?.level}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.messageCell}>{event?.message}</DataTable.Cell>\n      </DataTable.Row>\n      {!expanded ? null : (\n        <DataTable.Row\n          style={{\n            borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n            borderLeftWidth: 5,\n          }}\n        >\n          <DataTable.Cell style={styles.avatarCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.levelCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.messageCell}>{event?.details}</DataTable.Cell>\n        </DataTable.Row>\n      )}\n    </>\n  );\n}\nexport default function Feed(props: IActivityFeedProps) {\n  const { data, onFetchMore } = props;\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title style={styles.avatarCell}>Time</DataTable.Title>\n        <DataTable.Title style={styles.levelCell}>Level</DataTable.Title>\n        <DataTable.Title style={styles.messageCell}>Message</DataTable.Title>\n      </DataTable.Header>\n      <FlatList\n        {...{ data }}\n        renderItem={({ item }) =>\n          !item ? null : <FeedItem key={`event-log-row=${item?.id}`} event={item} />\n        }\n        onEndReached={onFetchMore}\n        onEndReachedThreshold={1}\n      />\n    </DataTable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarCell: {\n    flex: 1,\n  },\n  levelCell: {\n    flex: 1,\n  },\n  messageCell: {\n    flex: 4,\n  },\n});\n","import { useActivityDetailsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { EventLevel, EventAccessLevel, Permission } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { isEqual, uniqBy } from 'lodash';\nimport ChipSelect from '../input/chip_select/ChipSelect';\nimport Feed from './Feed';\n\ninterface IActivityFeedContainerProps extends ActivityQueryVariables {\n  onChange(variables: Partial<ActivityQueryVariables>): void;\n}\n\nexport default function ActivityFeedContainer(props: IActivityFeedContainerProps) {\n  const { dropzone, accessLevels, levels, timeRange, onChange } = props;\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewUserActivity = useRestriction(Permission.ViewUserActivity);\n\n  const variables: ActivityQueryVariables = React.useMemo(\n    () => ({\n      dropzone,\n      levels,\n      accessLevels,\n      timeRange\n    }),\n    [accessLevels, dropzone, levels, timeRange]\n  );\n\n  const [getActivity, query] = useActivityDetailsLazyQuery();\n\n  React.useEffect(() => {\n    if (!isEqual(query?.variables, variables)) {\n      getActivity({ variables });\n    }\n  }, [getActivity, query?.variables, variables]);\n\n  const onFetchMore = React.useCallback(() => {\n    if (\n      query?.data?.activity?.pageInfo?.hasNextPage &&\n      !query?.loading &&\n      query?.data?.activity?.pageInfo?.endCursor !== query?.variables?.after\n    ) {\n      query?.fetchMore({ variables: { after: query?.data?.activity?.pageInfo?.endCursor } }).then((result) => {\n        query?.updateQuery((prev) => ({\n          ...prev,\n          activity: {\n            ...prev?.activity,\n            ...result?.data?.activity,\n            pageInfo: result?.data?.activity?.pageInfo,\n            edges: uniqBy(\n              [...(prev.activity.edges || []), ...(result?.data?.activity?.edges || [])],\n              (edge) => edge?.node?.id\n            )\n          }\n        }));\n      });\n    }\n  }, [query]);\n\n  const onChangeEventLevel = React.useCallback(\n    (newLevels: EventLevel[]) =>\n      onChange({\n        levels: newLevels\n      }),\n    [onChange]\n  );\n\n  const onChangeAccessLevel = React.useCallback(\n    (newAccessLevels: EventAccessLevel[]) => {\n      onChange({\n        accessLevels: newAccessLevels\n      });\n    },\n    [onChange]\n  );\n\n  console.debug({ accessLevels, timeRange, levels });\n\n  return (\n    <Card style={{ width: '100%' }}>\n      <Card.Title title=\"Events\" />\n      <Card.Content style={{ paddingHorizontal: 0 }}>\n        {(canViewAdminActivity || canViewSystemActivity) && (\n          <View style={styles.controls}>\n            <View>\n              <List.Subheader>Event Type</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewAdminActivity && EventAccessLevel.Admin,\n                    canViewUserActivity && EventAccessLevel.User,\n                    canViewSystemActivity && EventAccessLevel.System\n                  ].filter(Boolean) as EventAccessLevel[]\n                }\n                onChange={onChangeAccessLevel}\n                value={(accessLevels || []) as EventAccessLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventAccessLevel).find(\n                    (key) => EventAccessLevel[key as keyof typeof EventAccessLevel] === value\n                  )\n                }\n              />\n            </View>\n\n            <View>\n              <List.Subheader>Event Level</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewUserActivity && EventLevel.Info,\n                    canViewSystemActivity && EventLevel.Debug,\n                    canViewAdminActivity && EventLevel.Error\n                  ].filter(Boolean) as EventLevel[]\n                }\n                onChange={onChangeEventLevel}\n                value={(levels || []) as EventLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventLevel).find((key) => EventLevel[key as keyof typeof EventLevel] === value)\n                }\n              />\n            </View>\n          </View>\n        )}\n\n        <Feed\n          data={\n            query?.data?.activity?.edges?.map((edge) => edge?.node as ActivityEssentialsFragment) ||\n            ([] as ActivityEssentialsFragment[])\n          }\n          {...{ onFetchMore }}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginHorizontal: 8,\n    marginBottom: 16\n  }\n});\n","import { useDropzoneStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { subMonths } from 'date-fns';\nimport { EventAccessLevel, EventLevel, Permission } from 'app/api/schema.d';\nimport Chip from 'app/components/chips/Chip';\nimport ActivityFeed from 'app/components/activity/Container';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Card } from 'react-native-paper';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nexport default function DashboardPage() {\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewRevenue = useRestriction(Permission.ViewStatistics);\n  const canViewStatistics = useRestriction(Permission.ViewRevenue);\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return undefined;\n  }, [selectedTimeRange]);\n\n  const [activityVariables, setActivityVariables] = React.useState<ActivityQueryVariables>({\n    levels: [\n      canViewSystemActivity && EventLevel.Debug,\n      canViewSystemActivity && EventLevel.Error,\n      EventLevel.Info,\n    ].filter(Boolean) as EventLevel[],\n    accessLevels: [\n      canViewSystemActivity && EventAccessLevel.System,\n      EventAccessLevel.User,\n      canViewAdminActivity && EventAccessLevel.Admin,\n    ].filter(Boolean) as EventAccessLevel[],\n    timeRange,\n  });\n\n  const onChangeActivityVariables = React.useCallback(\n    (vars: ActivityQueryVariables) => setActivityVariables({ ...activityVariables, ...vars }),\n    [activityVariables]\n  );\n\n  const { data } = useDropzoneStatisticsQuery({\n    variables: {\n      dropzoneId: dropzone?.id?.toString() as string,\n      timeRange,\n    },\n    skip: !dropzone?.id,\n  });\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        {canViewStatistics && (\n          <Stats\n            title=\"Turn-around\"\n            columns={Platform.OS === 'web' ? undefined : 4}\n            data={\n              [\n                canViewRevenue\n                  ? {\n                      label: 'Total',\n                      color: successColor,\n                      value: `$${data?.dropzone?.statistics?.revenueCentsCount || 0}`,\n                    }\n                  : undefined,\n                {\n                  label: 'Dispatched',\n                  value: data?.dropzone?.statistics?.loadsCount || 0,\n                },\n                {\n                  label: 'Cancelled',\n                  value: data?.dropzone?.statistics?.cancelledLoadsCount || 0,\n                },\n                {\n                  label: 'Slots',\n                  value: data?.dropzone?.statistics?.slotsCount || 0,\n                },\n              ].filter(Boolean) as IStatsProps['data']\n            }\n          />\n        )}\n\n        <Stats\n          title=\"Roles\"\n          data={[\n            { label: 'Pilots', value: data?.dropzone?.statistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: data?.dropzone?.statistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: data?.dropzone?.statistics.dzsoCount || 0,\n            },\n          ]}\n        />\n        {canViewStatistics && (\n          <Stats\n            title=\"Users\"\n            data={[\n              { label: 'Total', value: data?.dropzone?.statistics?.totalUserCount || 0 },\n              {\n                label: 'Active',\n                value: data?.dropzone?.statistics?.activeUserCount || 0,\n                color: successColor,\n              },\n              {\n                label: 'Inactive',\n                value: data?.dropzone?.statistics?.inactiveUserCount || 0,\n                color: warningColor,\n              },\n            ]}\n          />\n        )}\n      </View>\n      {canViewStatistics && (\n        <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n          <LoadsByDay\n            style={styles.dispatchedLoadsCard}\n            data={data?.dropzone?.statistics?.loadCountByDay || []}\n            startTime={timeRange?.startTime || subMonths(new Date(), 6)}\n          />\n          <JumpTypePieChart\n            style={styles.jumpTypesCard}\n            data={data?.dropzone?.statistics?.slotsByJumpType || []}\n          />\n        </View>\n      )}\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <ActivityFeed\n          {...activityVariables}\n          {...{ timeRange }}\n          onChange={onChangeActivityVariables}\n          dropzone={dropzone?.id}\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport OverviewScreen from './AdminOverview';\nimport DashboardScreen from './DropzoneOverview';\n\nexport type OverviewRoutes = {\n  OverviewScreen: undefined;\n  DashboardScreen: undefined;\n};\n\nconst Overview = createStackNavigator<OverviewRoutes>();\n\nexport default function OverviewTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Overview.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Overview.Screen\n        name=\"DashboardScreen\"\n        component={DashboardScreen}\n        options={{ title: 'Dashboard' }}\n      />\n      <Overview.Screen\n        name=\"OverviewScreen\"\n        component={OverviewScreen}\n        options={{ title: 'Overview' }}\n      />\n    </Overview.Navigator>\n  );\n}\n","import { AnimatedTabBarNavigator } from 'react-native-animated-nav-tab-bar';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport default (AnimatedTabBarNavigator as typeof createBottomTabNavigator)<AuthenticatedRoutes>();\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\n\nimport { useTheme } from 'react-native-paper';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport ManifestTab, { DropzoneRoutes } from './dropzone/routes';\nimport UsersTab, { UserRoutes } from './user/routes';\nimport NotificationsTab, { NotificationRoutes } from './notifications/routes';\nimport OverviewTab, { OverviewRoutes } from './overview/routes';\n\nimport BottomTab from './TabBar';\n\nexport type AuthenticatedRoutes = {\n  Manifest: NavigatorScreenParams<DropzoneRoutes>;\n  Overview: NavigatorScreenParams<OverviewRoutes>;\n  Users: NavigatorScreenParams<UserRoutes>;\n  Notifications: NavigatorScreenParams<NotificationRoutes>;\n};\n\nexport default function AuthenticatedTabBar() {\n  const { palette } = useAppSelector((root) => root.global);\n\n  const {\n    dropzone: { currentUser }\n  } = useDropzoneContext();\n  const isAdmin = currentUser?.user?.moderationRole !== ModerationRole.User;\n  const canViewUsers = useRestriction(Permission.ReadUser);\n  const canViewDashboard = useRestriction(Permission.ViewStatistics);\n\n  const theme = useTheme();\n\n  const screenOptions = React.useMemo(\n    () => ({\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n      tabBarActiveBackgroundColor: theme.colors.surface,\n      tabBarInactiveTintColor: '#CCCCCC',\n      tabBarShowLabel: Platform.OS !== 'web',\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderTopColor: '#CCCCCC'\n      }\n    }),\n    [theme.colors.backdrop, theme.colors.background, theme.colors.primary, theme.colors.surface, theme.dark]\n  );\n\n  return (\n    <AppSignalBoundary>\n      <BottomTab.Navigator\n        // @ts-ignore\n        appearance={{\n          tabBarBackground: theme.colors.surface,\n          topPadding: 16,\n          shadow: true,\n          bottomPadding: 16\n        }}\n        tabBarOptions={{\n          activeTintColor: '#FFFFFF',\n          inactiveTintColor: palette.primary.main,\n          activeBackgroundColor: palette.primary.main\n        }}\n        initialRouteName=\"Manifest\"\n        {...{ screenOptions }}\n      >\n        {(canViewDashboard || isAdmin) && (\n          <BottomTab.Screen\n            name=\"Overview\"\n            component={OverviewTab}\n            options={{\n              tabBarIcon: ({ focused, color, size }) => (\n                <MaterialCommunityIcons\n                  name=\"view-dashboard-outline\"\n                  {...{ size, color }}\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: false\n            }}\n          />\n        )}\n        <BottomTab.Screen\n          name=\"Manifest\"\n          component={ManifestTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"airplane\"\n                {...{ size, color }}\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n              />\n            ),\n            unmountOnBlur: false\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={NotificationsTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"bell-outline\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size, color }}\n              />\n            ),\n            unmountOnBlur: true\n          }}\n        />\n        {canViewUsers && (\n          <BottomTab.Screen\n            name=\"Users\"\n            component={UsersTab}\n            options={{\n              tabBarIcon: ({ size, color, focused }) => (\n                <MaterialCommunityIcons\n                  {...{ size, color }}\n                  name=\"account-group-outline\"\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: true\n            }}\n          />\n        )}\n      </BottomTab.Navigator>\n    </AppSignalBoundary>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75\n  },\n  iconActive: {\n    opacity: 1.0\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12\n  }\n});\n","import { NavigatorScreenParams } from '@react-navigation/native';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport DrawerMenu from 'app/components/drawer/Drawer';\nimport Authenticated, { AuthenticatedRoutes } from '../authenticated/routes';\n\nexport type LeftDrawerRoutes = {\n  LeftDrawer: NavigatorScreenParams<AuthenticatedRoutes>;\n};\n\nconst Drawer = createDrawerNavigator<LeftDrawerRoutes>();\n\nexport default function DrawerNavigator() {\n  const drawerContent = React.useCallback(() => <DrawerMenu />, []);\n  return (\n    <Drawer.Navigator\n      {...{ drawerContent }}\n      screenOptions={{ drawerType: 'back', headerShown: false }}\n    >\n      <Drawer.Screen name=\"LeftDrawer\" component={Authenticated} />\n    </Drawer.Navigator>\n  );\n}\n","import { LinkingOptions, NavigatorScreenParams } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport NotFoundScreen from './NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport Limbo, { LimboRoutes } from './limbo/routes';\nimport Unauthenticated, { UnauthenticatedRoutes } from './unauthenticated/routes';\nimport Wizards, { WizardRoutes } from './wizards/routes';\nimport LeftDrawer, { LeftDrawerRoutes } from './drawers/UserDrawer';\n\nexport const options: LinkingOptions<ReactNavigation.RootParamList> = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://www.openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006'\n  ],\n  config: {\n    screens: {\n      Authenticated: {\n        screens: {\n          LeftDrawer: {\n            screens: {\n              Overview: {\n                screens: {\n                  DashboardScreen: '/dropzone/dashboard',\n                  OverviewScreen: '/overview'\n                }\n              },\n              Manifest: {\n                screens: {\n                  ManifestScreen: '/dropzone/manifest',\n                  DashboardScreen: '/dropzone/overview',\n                  User: {\n                    screens: {\n                      EquipmentScreen: '/dropzone/manifest/users/:userId/equipment/',\n                      OrderReceiptScreen: '/dropzone/manifest/users/:userId/orders/:orderId/receipts',\n                      ProfileScreen: '/dropzone/manifest/users/:userId',\n                      OrdersScreen: '/dropzone/manifest/users/:userId/orders',\n                      RigInspectionScreen: '/dropzone/manifest/users/:dropzoneUserId/rig/:rigId/inspection',\n                      UserListScreen: '/dropzone/manifest/users'\n                    }\n                  },\n                  Configuration: {\n                    screens: {\n                      AircraftScreen: '/dropzone/configuration/aircraft/:planeId',\n                      TicketTypesScreen: '/dropzone/configuration/ticket-types',\n                      DropzoneRigsScreen: '/dropzone/configuration/rigs',\n                      ExtrasScreen: '/dropzone/ticket-types/extra',\n                      MasterLogScreen: '/dropzone/master-log',\n                      SettingsMenuScreen: '/dropzone/configuration',\n                      AircraftsScreen: '/dropzone/configuration/aircrafts',\n                      DropzoneSettingsScreen: '/dropzone/configuration/basic',\n                      PermissionScreen: '/dropzone/configuration/permissions',\n                      RigInspectionTemplateScreen: '/dropzone/configuration/rig-inspection',\n                      TransactionsScreen: '/dropzone/transactions'\n                    }\n                  },\n                  JumpRunScreen: '/dropzone/weather/jumprun',\n                  WeatherConditionsScreen: '/dropzone/weather',\n                  LoadScreen: '/dropzone/load/:loadId',\n                  WindScreen: '/dropzone/weather/winds'\n                }\n              },\n              Users: {\n                screens: {\n                  UserListScreen: '/users',\n                  ProfileScreen: '/user/:userId',\n                  EquipmentScreen: '/user/:userId/equipment',\n                  OrdersScreen: '/user/:userId/transactions',\n                  OrderReceiptScreen: '/user/:userId/transactions/:orderId/receipt',\n                  RigInspectionScreen: '/user/:dropzoneUserId/rig-inspection/:rig'\n                }\n              },\n              Notifications: {\n                screens: {\n                  NotificationsScreen: '/notifications'\n                }\n              }\n            }\n          }\n        }\n      },\n      Limbo: {\n        screens: {\n          DropzoneSelectScreen: '/select-dropzone'\n        }\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n          SignUpWizard: '/user-setup'\n        }\n      },\n      Wizards: {\n        screens: {\n          ConfirmUserScreen: '/confirm',\n          RecoverPasswordScreen: '/recover-password',\n          ChangePasswordScreen: '/change-password',\n          DropzoneWizardScreen: '/setup',\n          User: {\n            screens: {\n              UserListScreen: '/modal/users',\n              ProfileScreen: '/modal/user/:userId',\n              EquipmentScreen: '/modal/user/:userId/equipment',\n              OrdersScreen: '/modal/user/:userId/transactions',\n              OrderReceiptScreen: '/modal/user/:userId/transactions/:orderId/receipt',\n              RigInspectionScreen: '/modal/user/:dropzoneUserId/rig-inspection/:rig'\n            }\n          }\n        }\n      }\n      // FIXME: Remove in release\n      // NotFound: '*',\n    }\n  }\n};\n\nexport type Routes = {\n  Authenticated: NavigatorScreenParams<LeftDrawerRoutes>;\n  Unauthenticated: NavigatorScreenParams<UnauthenticatedRoutes>;\n  Limbo: NavigatorScreenParams<LimboRoutes>;\n  Wizards: NavigatorScreenParams<WizardRoutes>;\n  NotFound: undefined;\n};\n\nconst Stack = createStackNavigator<Routes>();\ndeclare global {\n  namespace ReactNavigation {\n    // rome-ignore lint/suspicious/noEmptyInterface: Required\n    interface RootParamList extends Routes {}\n  }\n}\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1\n        }\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\" component={LeftDrawer} />\n        ) : (\n          <Stack.Screen name=\"Limbo\" component={Limbo} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={Unauthenticated} />\n      )}\n      <Stack.Screen name=\"Wizards\" component={Wizards} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PortalProvider } from '@gorhom/portal';\n\nimport './bootstrap';\nimport Apollo from 'app/api/Apollo';\nimport { NotificationsProvider } from 'app/providers/notifications';\nimport Wrapper from './EntrypointWrapper';\n\nimport {\n  ExpoUpdatesProvider,\n  DropzonesProvider,\n  PushNotificationsProvider,\n  ThemeProvider,\n} from './providers';\n\nimport { useRouteChange, useAppearanceListener, useCachedResources } from './hooks';\n\nimport { store, persistor, useAppSelector } from '../state/store';\nimport ImageViewer from '../components/dialogs/ImageViewer/ImageViewer';\n\nimport RootNavigator, { options as LinkingConfiguration } from '../screens/routes';\nimport {\n  AppSignalBoundary,\n  AppSignalProvider,\n  AppSignalSessionTagger,\n} from '../components/app_signal';\n\nfunction Content() {\n  useAppearanceListener();\n  const state = useAppSelector((root) => root.global);\n  const onRouteChange = useRouteChange();\n\n  return (\n    <AppSignalProvider>\n      <AppSignalBoundary>\n        <ExpoUpdatesProvider>\n          <React.Suspense\n            fallback={\n              <View style={{ flex: 1, flexGrow: 1 }}>\n                <ProgressBar indeterminate color={state?.theme?.colors?.primary} visible />\n              </View>\n            }\n          >\n            <Apollo>\n              <ThemeProvider>\n                <GestureHandlerRootView style={{ flex: 1 }}>\n                  <PortalProvider>\n                    <SafeAreaProvider>\n                      <ImageViewer />\n                      <NotificationsProvider>\n                        <NavigationContainer\n                          documentTitle={{\n                            formatter: () => 'OpenManifest',\n                          }}\n                          onStateChange={onRouteChange}\n                          linking={LinkingConfiguration}\n                          theme={state.theme as unknown as never}\n                        >\n                          <Wrapper>\n                            <DropzonesProvider>\n                              <AppSignalSessionTagger>\n                                <PushNotificationsProvider>\n                                  <RootNavigator />\n                                </PushNotificationsProvider>\n                              </AppSignalSessionTagger>\n                            </DropzonesProvider>\n                          </Wrapper>\n                        </NavigationContainer>\n\n                        <StatusBar />\n                      </NotificationsProvider>\n                    </SafeAreaProvider>\n                  </PortalProvider>\n                </GestureHandlerRootView>\n              </ThemeProvider>\n            </Apollo>\n          </React.Suspense>\n        </ExpoUpdatesProvider>\n      </AppSignalBoundary>\n    </AppSignalProvider>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    console.debug('[App] Loading resources and rendering nothing');\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { Appearance } from 'react-native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\nimport { actions } from 'app/state';\n\nexport default function useAppearance() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const listener = React.useRef<ReturnType<typeof Appearance.addChangeListener>>(\n    Appearance.addChangeListener(({ colorScheme }) => {\n      if (colorScheme) {\n        dispatch(actions.global.setAppearance(colorScheme));\n      }\n    })\n  );\n\n  /// Listen to changes in Appearance and set dark mode theme in state\n  React.useEffect(() => {\n    const handler = listener?.current;\n    return () => handler?.remove?.();\n  }, [dispatch, state.isDarkMode, state.theme.colors.background]);\n}\n","import * as React from 'react';\nimport { NavigationState, getPathFromState } from '@react-navigation/native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\n\nimport { actions } from 'app/state';\n\nexport default function useRouteChange() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (s?: NavigationState) => {\n      if (s) {\n        const [path] = getPathFromState(s).split(/\\?/);\n        const [screenName] = path.split(/\\//).reverse();\n        if (state.currentRouteName !== screenName) {\n          dispatch(actions.global.setCurrentRouteName(screenName));\n        }\n      }\n    },\n    [dispatch, state.currentRouteName]\n  );\n}\n","import Entrypoint from './Entrypoint';\n\nexport default Entrypoint;\n","import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\nimport * as roboto from '@expo-google-fonts/roboto';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n    Roboto_400Regular: roboto.Roboto_400Regular,\n    Roboto_500Medium: roboto.Roboto_500Medium,\n    Roboto_700Bold: roboto.Roboto_700Bold,\n    ...Ionicons.font,\n    ...MaterialCommunityIcons.font,\n    ...MaterialIcons.font,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          ...MaterialCommunityIcons.font,\n          ...MaterialIcons.font,\n\n          'space-mono': require('../../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n        setLoadingComplete(true);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n","import { registerRootComponent } from 'expo';\nimport Entrypoint from './app/entrypoint';\n\nregisterRootComponent(Entrypoint);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [208], () => (__webpack_require__(38925)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [208], () => (__webpack_require__(23817)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Platform","require","Intl","DateTimeFormat","__setDefaultTimeZone","expo","_Constants$manifest","Constants","extra","_Constants$manifest2","_Constants$manifest2$","_Constants$manifest2$2","expoClient","googleMapsApiKey","ios","config","android","web","Geocoder","setGoogleApiKey","Notifications","handleNotification","_handleNotification","_asyncToGenerator","shouldShowAlert","shouldPlaySound","shouldSetBadge","apply","arguments","DropzoneState","DropzoneStateEvent","EventAccessLevel","EventAction","EventLevel","LoadState","ModerationRole","NotificationType","OrderState","Permission","TransactionStatus","TransactionType","initialState","original","open","fields","federation","value","error","lat","lng","name","secondaryColor","primaryColor","banner","isCreditSystemEnabled","status","Public","createSlice","reducers","setField","state","action","_action$payload","_slicedToArray","payload","field","setFieldError","_action$payload2","setOpen","Object","keys","forEach","key","payloadKey","typedKey","setOriginal","reset","role","expiresAt","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","map","idx","setFields","JSON","parse","console","log","Error","message","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","exitWeight","passengerName","passengerExitWeight","groupNumber","users","setFromSlots","_action$payload$slots","_action$payload$slots2","_action$payload$slots3","slots","slot","_slot$dropzoneUser","_slot$rig","id","Number","rigId","find","i","setDropzoneUsers","_action$payload3","xorBy","dzUser","_dzUser$user","_dzUser$user$rigs","_dzUser$user2","autoSelectedRig","user","rigs","length","first","availableRigs","avatar","image","apfNumber","email","phone","nickname","license","setFederation","_action$payload$licen","_action$payload3$user","_action$payload3$user2","_action$payload3$user3","_action$payload$user","_action$payload$user$","_action$payload$user$2","userFederations","_ref","_state$federation$val","uid","_action$payload$user2","_action$payload$user3","_state$original","userFederation","_ref2","_state$federation$val2","debug","_action$payload$licen2","jumpRun","temperature","exitSpotMiles","offsetDirection","winds","dropzone","rigInspection","rigInspectionTemplate","manifest","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","DropzoneWizardStep","currentIndex","completed","_completed","_defineProperty","Name","Federation","Location","Aircraft","Tickets","Branding","setIndex","complete","_objectSpread","login","signup","dropzoneWizard","close","tintColorLight","tintColorDark","successColor","errorColor","warningColor","infoColor","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","fonts","fontFamily","fontWeight","thin","medium","regular","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","authenticated","expoPushToken","currentRouteName","theme","palette","main","accent","isDarkMode","setCredentials","setAuthenticated","setUser","setExpoPushToken","setCurrentRouteName","setPermissions","setPrimaryColor","color","darken","hex","lighten","setAccentColor","setDropzone","_state$currentDropzon","_state$currentDropzon3","_state$currentDropzon2","_state$currentDropzon4","setAppearance","_state$currentDropzon5","_state$currentDropzon6","current","merge","logout","persistConfig","storage","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","getServerUrl","URL","ActionCableLink","_ApolloLink","_inherits","_super","_createSuper","options","_this","_classCallCheck","call","cable","channelName","actionName","connectionParams","_createClass","operation","_next","_this2","Observable","observer","channelId","Math","round","Date","now","random","toString","channel","subscriptions","create","connected","perform","query","print","variables","operationId","operationName","received","_payload$result","_payload$result2","result","data","errors","next","more","assign","closed","ApolloLink","hasSubscriptionOperation","definitions","some","kind","abortController","AbortController","httpLink","BatchHttpLink","batchDebounce","batchMax","uri","fetchOptions","mode","method","signal","createHttpLink","ActionCable","URI","scheme","host","join","a","getContext","authHeaders","createWebsocketsLink","NotificationContext","React","noop","useNotifications","AnimationState","NotificationsProvider","props","children","_React$useState","_React$useState2","queue","setQueue","successAnimation","_React$useState3","_React$useState4","animationState","setAnimationState","notification","variant","opening","notify","newNotification","isEqual","last","concat","_toConsumableArray","onHide","newQueue","_toArray","slice","onAnimationFinish","waiting","setTimeout","Toast","text1","type","context","_jsxs","Provider","_jsx","View","style","StyleSheet","alignItems","justifyContent","pointerEvents","LottieView","loop","autoPlay","speed","ref","styles","animation","source","lottieDoneAnimation","autoHide","visibilityTime","position","height","width","defaultErrorLink","onError","graphQLErrors","networkError","_err$extensions","extensions","code","process","EXPO_ENV","locations","path","nodes","stringify","Appsignal","ExpoManifest","_ExpoManifest$extra","appSignalApiKey","namespace","revision","_Constants$expoConfig","version","ignoreErrors","INITIAL_TAGS","platform","currentUserId","INITIAL_CONTEXT","appSignal","AppSignalClient","tags","setTags","AppSignalContext","useAppSignalContext","ErrorBoundary","_React$Component","undefined","errorInfo","_this$props","this","Fallback","fallback","ErrorScreen","isDetailsVisible","setDetailsVisible","reloading","setReloading","onToggleDetails","onReloadApp","window","location","reload","reloadAsync","_useWindowDimensions","useWindowDimensions","SafeAreaView","top","left","Card","minHeight","maxWidth","marginHorizontal","title","subtitle","titleStyle","textAlign","subtitleStyle","twigBreakAnimation","_Fragment","HelperText","ScrollView","maxHeight","stack","Button","compact","onPress","disabled","loading","_useAppSignalContext","instance","errorBoundaryRef","_errorBoundaryRef$cur","_errorBoundaryRef$cur2","DefaultErrorBoundary","AppSignalProvider","AppSignalWindowEvents","AppSignalCurrentPath","onUpdateTags","newTags","onTagsChanged","span","AppSignalBoundary","uninitializedHandler","args","_x","createCRUDContext","useHook","INITIAL_STATE","Context","rest","_objectWithoutProperties","_excluded","useContext","update","called","refetch","fetchMore","dialogs","aircraft","visible","createUser","ticketTypeAddon","DropzoneContext","useDropzoneContext","_useDropzoneContext$d","currentDropzoneUser","_useAppSelector","sessionTags","currentSessionTags","pick","DEFAULT_OPTIONS","breadcrumbs","includeQuery","includeResponse","includeVariables","excludeOperation","excludeError","isServerError","getDefinition","q","createBreadCrumb","_definition$name","category","timestamp","floor","getTime","metadata","createAppSignalErrorLink","client","createErrorLink","response","ignore","filteredErrors","filter","_definition$loc$sourc","_definition$loc","_definition$loc$sourc2","breadcrumb","loc","body","_response$response","statusCode","addBreadcrumb","sendError","e","AppSignalBreadcrumbLink","forward","_options$excludeOpera","originalObserver","subscription","subscribe","_options$breadcrumbs","_options$breadcrumbs2","_options$breadcrumbs3","_definition$loc$sourc3","_definition$loc2","_definition$loc2$sour","omit","_this2$client","_error","_definition$loc$sourc4","_definition$loc3","_definition$loc3$sour","_this2$client2","unsubscribe","ERROR_CODE_WHITELIST","useAppSignalLink","useAppSignal","createAppSignalLink","_err$extensions2","includes","defaultLink","useLink","authLink","root","accessToken","Authorization","tokenType","isEmpty","setContext","_","headers","useAuthenticationLink","errorLink","dispatch","useErrorLink","appSignalLink","httpWebsocketsLink","links","Boolean","cache","InMemoryCache","typePolicies","Event","relayStylePagination","DropzoneUsers","Loads","ApolloClient","link","useApolloClient","isAuthenticated","authStateChanged","setLink","Apollo","ApolloProvider","EntrypointWrapper","defaultOptions","RoleEssentialsFragmentDoc","gql","_templateObject","_taggedTemplateLiteralLoose","LicenseEssentialsFragmentDoc","_templateObject2","UserEssentialsFragmentDoc","_templateObject3","DropzoneUserEssentialsFragmentDoc","_templateObject4","ActivityEssentialsFragmentDoc","_templateObject5","DropzoneEssentialsFragmentDoc","_templateObject6","LoadEssentialsFragmentDoc","_templateObject7","TicketTypeEssentialsFragmentDoc","_templateObject8","TicketTypeAddonEssentialsFragmentDoc","_templateObject9","TicketTypeDetailsFragmentDoc","_templateObject10","JumpTypeEssentialsFragmentDoc","_templateObject11","SlotEssentialsFragmentDoc","_templateObject12","RigEssentialsFragmentDoc","_templateObject13","PlaneEssentialsFragmentDoc","_templateObject14","ActivityDetailsFragmentDoc","_templateObject15","FederationEssentialsFragmentDoc","_templateObject16","LicenseDetailsFragmentDoc","_templateObject17","UserFederationEssentialsFragmentDoc","_templateObject18","UserRigDetailedFragmentDoc","_templateObject19","UserDetailedFragmentDoc","_templateObject20","DropzoneUserDetailsFragmentDoc","_templateObject21","RigInspectionEssentialsFragmentDoc","_templateObject22","TransactionEssentialsFragmentDoc","_templateObject23","ReceiptEssentialsFragmentDoc","_templateObject24","OrderEssentialsFragmentDoc","_templateObject25","SlotDetailsFragmentDoc","_templateObject26","UserSlotDetailsFragmentDoc","_templateObject27","DropzoneUserProfileFragmentDoc","_templateObject28","DropzoneStatisticsEssentialsFragmentDoc","_templateObject29","DropzoneStatisticsFragmentDoc","_templateObject30","WeatherConditionEssentialsFragmentDoc","_templateObject31","DropzoneDetailedFragmentDoc","_templateObject32","CurrentUserEssentialsFragmentDoc","_templateObject33","CurrentUserFragmentDoc","_templateObject34","CurrentUserDetailedFragmentDoc","_templateObject35","DropzoneExtensiveFragmentDoc","_templateObject36","TicketTypeExtraEssentialsFragmentDoc","_templateObject37","TicketTypeExtraDetailedFragmentDoc","_templateObject38","MasterLogUserFragmentDoc","_templateObject39","MasterLogAircraftFragmentDoc","_templateObject40","MasterLogSlotFragmentDoc","_templateObject41","MasterLogLoadFragmentDoc","_templateObject42","LocationFragmentDoc","_templateObject43","MasterLogEntryFragmentDoc","_templateObject44","RigInspectionDetailedFragmentDoc","_templateObject45","RigInspectionMutationEssentialsFragmentDoc","_templateObject46","RoleDetailedFragmentDoc","_templateObject47","LoadDetailsFragmentDoc","_templateObject48","SlotExhaustiveFragmentDoc","_templateObject49","TicketTypeAddonDetailsFragmentDoc","_templateObject50","ArchivePlaneDocument","_templateObject51","_templateObject52","ArchiveTicketTypeDocument","_templateObject53","ArchiveUserDocument","_templateObject54","ConfirmUserDocument","_templateObject55","CreateAircraftDocument","_templateObject56","CreateDropzoneDocument","_templateObject57","CreateLoadDocument","_templateObject58","CreateOrderDocument","_templateObject59","CreateRigDocument","_templateObject60","CreateRigInspectionDocument","_templateObject61","useCreateRigInspectionMutation","baseOptions","CreateTicketAddonDocument","_templateObject62","CreateTicketTypeDocument","_templateObject63","CreateGhostDocument","_templateObject64","DeleteSlotDocument","_templateObject65","FinalizeLoadDocument","_templateObject66","GrantPermissionDocument","_templateObject67","JoinFederationDocument","_templateObject68","useJoinFederationMutation","LoginDocument","_templateObject69","_templateObject70","LoginWithFacebookDocument","_templateObject71","ManifestGroupDocument","_templateObject72","useManifestGroupMutation","ManifestUserDocument","_templateObject73","useManifestUserMutation","MoveSlotDocument","_templateObject74","RecoverPasswordDocument","_templateObject75","_templateObject76","RevokePermissionDocument","_templateObject77","UpdateAircraftDocument","_templateObject78","UpdateDropzoneDocument","_templateObject79","UpdateDropzoneUserDocument","_templateObject80","UpdateLoadDocument","_templateObject81","UpdateLostPasswordDocument","_templateObject82","UpdateMasterLogDocument","_templateObject83","UpdateRigDocument","_templateObject84","useUpdateRigMutation","UpdateRigInspectionTemplateDocument","_templateObject85","UpdateRoleDocument","_templateObject86","UpdateTicketAddonDocument","_templateObject87","UpdateTicketTypeDocument","_templateObject88","UpdateUserDocument","_templateObject89","useUpdateUserMutation","UpdateVisibilityDocument","_templateObject90","UserSignUpDocument","_templateObject91","_templateObject92","ActivityDetailsDocument","_templateObject93","_templateObject94","DropzoneDocument","_templateObject95","DropzoneStatisticsDocument","_templateObject96","DropzonesStatisticsDocument","_templateObject97","DropzoneRigsDocument","_templateObject98","DropzonePermissionsDocument","_templateObject99","DropzoneTransactionsDocument","_templateObject100","DropzoneUsersDocument","_templateObject101","useDropzoneUsersQuery","DropzoneUsersDetailedDocument","_templateObject102","_templateObject103","_templateObject104","DropzoneUserProfileDocument","_templateObject105","useDropzoneUserProfileLazyQuery","DropzonesDocument","_templateObject106","TicketTypeExtrasDocument","_templateObject107","FederationsDocument","_templateObject108","useFederationsQuery","AddressToLocationDocument","_templateObject109","_templateObject110","AllowedJumpTypesDocument","_templateObject111","useAllowedJumpTypesQuery","LicensesDocument","_templateObject112","useLicensesQuery","LoadDocument","_templateObject113","LoadsDocument","_templateObject114","MasterLogDocument","_templateObject115","NotificationsDocument","_templateObject116","PlanesDocument","_templateObject117","usePlanesQuery","CurrentUserPermissionsDocument","_templateObject118","RigInspectionTemplateDocument","_templateObject119","useRigInspectionTemplateQuery","AvailableRigsDocument","_templateObject120","RolesDocument","_templateObject121","useRolesQuery","AllowedTicketTypesDocument","_templateObject122","TicketTypesDocument","_templateObject123","LoadCreatedDocument","_templateObject124","LoadUpdatedDocument","_templateObject125","UserUpdatedDocument","_templateObject126","useDropzone","vars","_query$data3","_query$data3$dropzone","_permissions$data2","_permissions$data2$dr","_permissions$data2$dr2","dropzoneId","_useDropzoneLazyQuery","useDropzoneLazyQuery","_useDropzoneLazyQuery2","getDropzone","_useUpdateDropzoneMut","useUpdateDropzoneMutation","updateDropzone","permissionsVariables","_useCurrentUserPermis","useCurrentUserPermissionsLazyQuery","_useCurrentUserPermis2","getPermissions","attributes","_query$data","_query$data$dropzone","_query$data2","_query$data2$dropzone","_response$updateDropz","_response$updateDropz3","_response$updateDropz4","_response$updateDropz5","_response$updateDropz2","fieldErrors","queryVariables","_permissions$data","_permissions$data$dro","_permissions$data$dro2","_data$dropzone","_createCRUDContext","_data$dropzones2","_useDropzonesLazyQuer","useDropzonesLazyQuery","_useDropzonesLazyQuer2","getDropzones","_useUpdateVisibilityM","useUpdateVisibilityMutation","updateVisibilityMutation","updateVisibility","_UpdateVisibility","event","_response$data","_response$data$update","_response$data$update2","_response$data2","_response$data2$updat","_response$data2$updat2","_response$data3","_response$data3$updat","_response$data$update3","_x2","_data$dropzones","_data$dropzones$edges","dropzones","edges","edge","node","DropzonesProvider","useDropzonesContext","useRestriction","permission","useLoadUpdated","loadId","onData","_result$loadUpdated","_result$loadUpdated$l","loadUpdated","updateFragment","fragment","fragmentName","broadcast","identify","updateQuery","previous","__typename","useLoadUpdatedSubscription","skip","useLoad","_useLoadLazyQuery","useLoadLazyQuery","_useLoadLazyQuery2","getLoad","_useManifestUserMutat","mutationManifestUser","_useFinalizeLoadMutat","useFinalizeLoadMutation","mutationFinalizeLoad","_useUpdateLoadMutatio","useUpdateLoadMutation","updateLoadMutation","_UpdateLoad","_response$updateLoad","_response$updateLoad$","_response$updateLoad3","_response$updateLoad4","_response$updateLoad7","_response$updateLoad8","_response$updateLoad9","_response$updateLoad2","_response$updateLoad5","_response$updateLoad6","optimisticResponse","updateLoad","dispatchAt","loadNumber","manifestUser","_response$data$create","_response$data$create2","_response$data3$creat","_response$data2$creat","_response$data2$creat2","validatedPayload","yup","shape","required","nullable","validateSync","createSlot","ValidationError","dispatchInMinutes","_ref3","minutes","dispatchTime","DateTime","plus","toISO","BoardingCall","Open","_x3","updateLoadState","_ref4","_x4","updatePilot","_ref5","pilot","_x5","updateGCA","_ref6","gca","_x6","updatePlane","_ref7","plane","_x7","updateLoadMaster","_ref8","lm","loadMaster","_x8","markAsLanded","Landed","cancel","Cancelled","canDispatchAircraft","UpdateLoad","createAircraftDispatchAction","dispatchAtTime","_ref11","time","_x9","useUserUpdated","dropzoneUserId","_result$userUpdated","userUpdated","useUserUpdatedSubscription","useUserProfile","_query$variables2","_query$data4","_query$data4$dropzone","_query$data6","_useUpdateUserMutatio","updateMutation","_useDropzoneUserProfi","_useDropzoneUserProfi2","getProfile","_useCreateOrderMutati","useCreateOrderMutation","mutationCreateOrder","_useCreateGhostMutati","useCreateGhostMutation","mutationCreateGhost","_useJoinFederationMut","updateFederation","canGrantPermission","GrantPermission","canRevokePermission","RevokePermission","profile","_query$variables","_CreateGhost","_response$data3$creat2","_response$data4","_response$data4$creat","refetchQueries","createGhost","_UpdateUser","_data$updateUser","_data$updateUser$drop","_data$updateUser3","_data$updateUser3$err","_data$updateUser4","_data$updateUser2","updateUser","joinFederation","_JoinFederation","_data$joinFederation","_data$joinFederation$","_data$joinFederation3","_data$joinFederation4","_data$joinFederation5","_data$joinFederation2","createOrder","_CreateOrder","_data$createOrder","_data$createOrder$ord","_data$createOrder3","_data$createOrder3$er","_data$createOrder4","_data$createOrder2","_yield$mutationCreate","_mutationResult$creat","_mutationResult$creat2","mutationResult","order","_order$buyer","_order$seller","buyer","writeFragment","seller","addCredits","_AddCredits","amount","walletId","withdrawCredits","_DeductCredits","_useRevokePermissionM","useRevokePermissionMutation","revoke","_useGrantPermissionMu","useGrantPermissionMutation","grant","grantPermission","_GrantPermission","permissionName","_data$grantPermission","_data$grantPermission2","_data$grantPermission4","_data$grantPermission5","_data$grantPermission6","_data$grantPermission3","_x10","revokePermission","_RevokePermission","_data$revokePermissio","_data$revokePermissio2","_data$revokePermissio4","_data$revokePermissio5","_data$revokePermissio6","_data$revokePermissio3","_x11","_x12","_query$data5","UserProfileProvider","useUserProfileContext","useLoadCreated","_result$loadCreated","_result$loadCreated$l","loadCreated","date","createdAt","toISODate","_previous$loads","_previous$loads$edges","_previous$loads2","_previous$loads3","loads","uniqBy","existing","_existing$node","_edge$node","useLoadCreatedSubscription","shouldResubscribe","useManifest","_state$credentials","_data$loads2","canCreateLoad","CreateLoad","canDeleteOwnSlot","DeleteSlot","canDeleteSlot","DeleteUserSlot","canManifestSelf","CreateSlot","canManifestOthers","CreateUserSlot","canUpdateSlot","UpdateSlot","canUpdateOwnSlot","UpdateUserSlot","canAddTransaction","CreateUserTransaction","useLoadsQuery","initialFetchPolicy","_useMoveSlotMutation","useMoveSlotMutation","moveSlotMutation","_useDeleteSlotMutatio","useDeleteSlotMutation","deleteSlotMutation","_useManifestGroupMuta","manifestGroupMutation","manifestUserMutation","_useCreateLoadMutatio","useCreateLoadMutation","createLoadMutation","moveSlot","_MoveSlot","sourceLoad","mutationVariables","_mutationVariables$ta","_result$data","_result$data$moveSlot","_result$data$moveSlot2","_result$data2","_result$data2$moveSlo","_result$data2$moveSlo2","_result$data5","_result$data5$moveSlo","_result$errors","_result$errors$","_result$data3","_result$data3$moveSlo","_result$data3$moveSlo2","_result$data4","_result$data4$moveSlo","targetLoad","_ManifestUser","_result$data6","_result$data6$createS","_result$data6$createS2","_result$data7","_result$data7$createS","_result$data7$createS2","_result$data10","_result$data10$create","_result$errors2","_result$errors2$","_result$data8","_result$data8$createS","_result$data8$createS2","_result$data9","_result$data9$createS","_ManifestGroup","_result$data11","_result$data11$create","_result$data11$create2","_result$data12","_result$data12$create","_result$data12$create2","_result$data15","_result$data15$create","_result$data15$create2","_result$errors3","_result$errors3$","_result$data13","_result$data13$create","_result$data13$create2","_result$data14","_result$data14$create","createSlots","deleteSlot","_DeleteSlot","_result$data16","_result$data16$delete","_result$data16$delete2","_result$data17","_result$data17$delete","_result$data17$delete2","_result$data20","_result$data20$delete","_result$data20$delete2","_result$errors4","_result$errors4$","_result$data18","_result$data18$delete","_result$data18$delete2","_result$data19","_result$data19$delete","_result$data$deleteSl","createLoad","_CreateLoad","_result$data21","_result$data21$create","_result$data21$create2","_result$data22","_result$data22$create","_result$data22$create2","_result$data25","_result$data25$create","_result$data25$create2","_result$errors5","_result$errors5$","_result$data23","_result$data23$create","_result$data23$create2","_result$data24","_result$data24$create","_data$loads","_data$loads$edges","useTickets","_useTicketTypesLazyQu","useTicketTypesLazyQuery","_useTicketTypesLazyQu2","getTickets","ticketTypes","_useCreateTicketTypeM","useCreateTicketTypeMutation","createTicket","_useUpdateTicketTypeM","useUpdateTicketTypeMutation","updateTicket","_useArchiveTicketType","useArchiveTicketTypeMutation","archiveTicket","_useCreateTicketAddon","useCreateTicketAddonMutation","createAddon","_useUpdateTicketAddon","useUpdateTicketAddonMutation","updateAddon","createTicketType","_CreateTicketType","updateTicketType","_UpdateTicketType","_response$data5","_response$data5$updat","_response$data5$updat2","_response$data7","_response$data7$updat","_response$data7$updat2","_response$data8","_response$data8$updat","_response$data6","_response$data6$updat","createTicketTypeAddon","_CreateTicketTypeAddon","_response$data9","_response$data9$creat","_response$data9$creat2","_response$data11","_response$data11$crea","_response$data11$crea2","_response$data12","_response$data12$crea","_response$data10","_response$data10$crea","fetchPolicy","createExtra","updateTicketTypeAddon","_UpdateTicketTypeAddon","_response$data13","_response$data13$upda","_response$data13$upda2","_response$data15","_response$data15$upda","_response$data15$upda2","_response$data16","_response$data16$upda","_response$data14","_response$data14$upda","updateExtra","archiveTicketType","_ArchiveTicket","_response$data17","_response$data17$arch","_response$data17$arch2","_response$data19","_response$data19$arch","_response$data19$arch2","_response$data20","_response$data20$arch","_response$data18","_response$data18$arch","_mutationData$archive","_mutationData$archive2","mutationData","evict","useAircrafts","_usePlanesLazyQuery","usePlanesLazyQuery","_usePlanesLazyQuery2","getAircrafts","_useCreateAircraftMut","useCreateAircraftMutation","createAircraft","_useUpdateAircraftMut","useUpdateAircraftMutation","updateAircraft","_useArchivePlaneMutat","useArchivePlaneMutation","archiveAircraft","_CreateAircraft","prev","_mutationData$createP","createPlane","planes","_UpdateAircraft","archive","_ArchiveAircraft","_response$data9$delet","_response$data9$delet2","_response$data11$dele","_response$data11$dele2","_response$data12$dele","_response$data10$dele","deletePlane","_mutationData$deleteP","_mutationData$deleteP2","aircrafts","noPadding","borderBottomWidth","paddingLeft","paddingRight","defaultPadding","button","padding","alignSelf","borderRadius","marginTop","right","_theme$colors","buttonLabel","disablePadding","buttonAction","onClose","useTheme","Drawer","anchor","PaperProps","ProgressBar","indeterminate","Typography","marginBottom","IconButton","icon","size","paddingBottom","Dialog","backgroundColor","withHookForm","Component","control","rules","defaultValue","Controller","render","_fieldState$error","_ref$field","onChange","onBlur","fieldState","_onChange","val","TextField","helperText","setText","onChangeText","TextInput","surface","FormTextField","NumberFieldType","flex","adornments","_adornments","Cash","CanopySize","Weight","muiVariants","flat","outlined","NumberField","label","onChangeValue","parseInt","target","FormControl","fullWidth","InputProps","endAdornment","InputAdornment","startAdornment","FormHelperText","Chip","small","assignedColor","onSurface","chipStyle","borderColor","iconStyles","MaterialChip","selectedColor","iconProps","MaterialCommunityIcons","textStyle","ChipSelect","items","allowEmpty","_props$variant","isSelected","isDisabled","renderItemLabel","autoSelectFirst","Wrapper","horizontal","flexDirection","flexWrap","isItemSelected","selected","margin","ChipSelectComponent","ChipSelectField","defaultColors","boneColor","highlightColor","ThemedSkeleton","Color","negate","rgb","SkeletonContent","ChipSelectSkeleton","rows","isLoading","containerStyle","layout","marginVertical","marginRight","DropzoneUserChipSelect","_data$dropzoneUsers","_data$dropzoneUsers$e","requiredPermissions","onLoadingStateChanged","_useDropzoneUsersQuer","onChangeSelected","getItemLabel","List","dropzoneUsers","DropzoneUserChipSelectField","JumpTypeChipSelect","userId","_useAllowedJumpTypesQ","allowedForDropzoneUserIds","allowedJumpTypes","jumpTypes","_data$dropzone2","_data$dropzone2$allow","JumpTypeChipSelectField","LicenseChipSelect","federationId","licenses","LicenseChipSelectField","PlaneChipSelect","_usePlanesQuery","PlaneChipSelectField","TicketTypeChipSelect","onlyPublicTickets","_useAllowedTicketType","useAllowedTicketTypesQuery","cost","TicketTypeChipSelectField","FormNumberField","UserAvatar","initals","split","n","Avatar","stringToColor","string","hash","charCodeAt","substr","initials","sx","bgcolor","src","MenuItem","bold","testID","MuiMenuItem","onClick","ListItemIcon","ListItemAvatar","ListItemText","Menu","anchorEl","setAnchorEl","currentTarget","TouchableOpacity","MuiMenu","anchorOrigin","vertical","transformOrigin","Select","_props$compare","compare","renderAnchor","onOpen","onDismiss","selectedOption","option","createSelectHandler","showAvatars","openMenu","m","minWidth","InputLabel","MuiSelect","labelId","paddingTop","native","SelectDisplayProps","opt","b","RigSelect","tandem","_useAvailableRigsLazy","useAvailableRigsLazyQuery","_useAvailableRigsLazy2","fetchRigs","isTandem","_data$availableRigs","_data$availableRigs2","_data$availableRigs3","RigSelectField","ManifestForm","_ticketType$extras","_useWatch","useWatch","allowedToManifestOthers","selectedAddons","addon","Divider","credits","ManifestContext","useManifestContext","schema","hasLicense","isTrue","hasMembership","hasRigInspection","hasReserveInDate","hasExitWeight","useManifestValidator","_dropzone$settings5","_dropzone$settings6","_dropzone$settings7","_dropzone$settings8","canManifest","_CheckManifestRequirements","_dropzone$settings","_dropzone$settings2","_dropzone$settings3","_dropzone$settings4","validate","settings","requireLicense","requireMembership","requireRigInspection","requireReserveInDate","abortEarly","EMPTY_FORM_VALUES","ManifestUserDialog","_slot$dropzoneUser$us","_slot$dropzoneUser2","_slot$dropzoneUser2$u","onSuccess","_useForm","opts","initial","initialValues","defaultValues","setDefaultValues","manifestUserValidation","min","max","when","is","requireEquipment","then","otherwise","of","methods","useForm","resolver","yupResolver","handleSubmit","setError","_useAsyncFn","useAsyncFn","_fields$jumpType","_fields$extras","_fields$load","_fields$rig","_fields$rig2","_fields$ticketType","_fields$dropzoneUser","_fields$ticketType2","_response$fieldErrors","_fields$dropzoneUser2","_fields$dropzoneUser3","camelCase","_useAsyncFn2","onManifest","onSubmit","portal","usePortal","removePortal","DialogOrSheet","SlotForm","LoadForm","placeholder","ActAsGca","ActAsPilot","loadValidation","default","maxSlots","isOpen","LoadDialog","setValue","_validatedFields$gca","_validatedFields$pilo","_validatedFields$plan","_response$load","validatedFields","camelizedField","snapPoints","scrollable","CreditsForm","_useWatch$amount","subtotal","Deposit","Withdrawal","DataTable","numeric","Text","orderValidation","integer","oneOf","values","DropzoneUserDialog","_useCreditsForm","_useUserProfile","shouldUnregister","onCreateOrder","useCreditsForm","Tabs","defaultIndex","onChangeIndex","newIndex","TabScreen","form","paddingHorizontal","createUseDialog","defaults","setState","newState","ManifestUserDialogWrapper","LoadDialogWrapper","CreditsDialogWrapper","CreditSheet","useManifestUserDialog","useLoadDialog","useCreditsDialog","ManifestContextProvider","_props$date","manifestUserDialog","loadDialog","creditsDialog","TimePicker","onDismissSingle","onConfirm","timestampLabel","format","description","Modal","TimePickerModal","hours","toSeconds","hour","minute","locale","set","toJSDate","TimePickerDialog","setTime","setLoading","dismissable","timepicker","LoadContext","useLoadContext","useTimePickerDialog","LoadContextProvider","onChangeDispatchTime","withLoadContext","_excluded2","AircraftForm","aircraftValidation","registration","minSlots","basicEmptyWeight","maxTakeOffWeight","fuelType","AircraftDialog","_useAircraftForm","register","_useAircrafts","validated","useAircraftForm","PlaneForm","AltitudeSelect","AltitudeSelectField","DropzoneUserSelect","_globalState$currentD","_data$dropzoneUsers2","_data$dropzoneUsers4","_edge$node$user","_edge$node2","_edge$node2$user","_data$dropzoneUsers3","_data$dropzoneUsers3$","Title","DropzoneUserSelectField","FederationSelect","_data$federations","federations","_data$federations2","FederationSelectField","JumpTypeSelect","_data$jumpTypes","LicenseSelect","PlaneSelect","_currentDropzone$drop","_currentDropzone$drop2","onCHange","_data$planes","_data$planes2","RoleSelect","_data$dropzone$roles","roles","startCase","RoleSelectField","TicketTypeSelect","allowManifestingSelf","_useTicketTypesQuery","useTicketTypesQuery","_data$ticketTypes","GhostForm","_license$federation","ghostValidation","optional","federationUid","CreateGhostDialog","_original$user","_original$user2","_original$user3","_original$user4","_validated$role","_validated$license","federationNumber","Switch","SwitchComponent","onValueChange","SwitchField","TicketTypeForm","altitude","_useTicketTypeExtrasL","useTicketTypeExtrasLazyQuery","_useTicketTypeExtrasL2","getTicketAddons","ticketTypeValidation","TicketTypeDialog","_useTickets","_validated$extras","extraIds","selectedTicketTypes","ticketAddonValidation","_validated$ticketType","_validated$ticketType2","ticketTypeIds","onSave","useAircraftDialog","useCreateUserDialog","useTicketTypeDialog","useTicketTypeAddonDialog","DropzoneContextProvider","AircraftSheet","TicketTypeSheet","CreateUserSheet","TicketTypeAddonSheet","_registerForPushNotificationsAsync","token","Device","isDevice","existingStatus","finalStatus","warn","importance","vibrationPattern","lightColor","PushNotifications","_currentUser$user2","pushToken","notificationListener","responseListener","onOutsideLink","intendedRoute","url","registerForPushNotificationsAsync","request","content","Linking","remove","_currentUser$user","remoteToken","muiTheme","createTheme","secondary","paper","common","white","black","matchMedia","addListener","matches","MaterialProvider","ThemeProvider","AppUpdate","_fonts$useFonts","fontsLoaded","overlay","setOverlay","onUpdate","_animation$current","play","Update","isNew","isUpdateAvailable","isAvailable","BlurView","blur","intensity","fontSize","bottom","ImageViewer","Lightbox","mainSrc","onCloseRequest","NotFoundScreen","navigation","container","replace","linkText","paddingVertical","useThemeColor","colorName","colorFromProps","Colors","darkColor","otherProps","DefaultView","NoResults","empty","Paragraph","fab","DropzonesScreen","_dropzone$name","globalState","useNavigation","nameLines","lines","desaturate","textColor","shouldPushRoute","StackActions","screen","params","cardContainer","ImageBackground","numberOfLines","svgContainer","adjustsFontSizeToFit","allowFontScaling","overflow","fontStyle","_useDropzonesContext","FlatList","numColumns","refreshing","keyExtractor","onRefresh","flatlist","contentContainerStyle","ListEmptyComponent","renderItem","DropzoneCard","FAB","navigate","flexGrow","dzIcon","Stack","createStackNavigator","Limbo","Navigator","screenOptions","headerShown","cardStyle","initialRouteName","Screen","component","ScreenOrientation","MaterialDivider","divider","useLoginWithFacebook","_useLoginWithFacebook","useLoginWithFacebookMutation","_useLoginWithFacebook2","onLoginWithFacebook","mutation","onLogin","_data$loginWithFacebo","_data$loginWithFacebo2","loginWithFacebook","authenticatable","FacebookButton","appId","reAuthenticate","autoLoad","buttonStyle","onFailure","callback","textButton","AppleButton","useLoginForm","_useLoginMutation","useLoginMutation","_useLoginMutation2","mutationLogin","loginWithFacebookMutation","_useLoginWithApple","_useLoginWithApple2","loginWithApple","loginWithAppleMutation","_Login","_result$data$userLogi","_result$data2$userLog","userLogin","LoginForm","_useLoginForm","animationContainer","loadingAnimation","secureTextEntry","onSubmitEditing","forgotPasswordDark","forgotPassword","labelStyle","textButtonLabel","logo","card","cardLandscape","fieldsLandscape","borderWidth","LoginScreen","_useDevice","orientation","useMemo","Landscape","Portrait","useDevice","backgroundDark","backgroundLight","resizeMode","Image","logoLight","logoDark","KeyboardAvoidingView","behavior","elevation","_props$fullWidth","_props$scrollable","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","centerAlignedContent","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","interpolate","inputRange","outputRange","translateX","_ref$current","Animated","transform","childrenContainerStyle","useNativeAnimations","opacity","Fields","fieldContent","Step","hideContentUntilNavigatedTo","useIsFocused","GradientText","Dots","count","Array","from","activeDot","inactiveDot","marginLeft","Buttons","_props$backLabel","backLabel","controlledLoading","_props$nextLabel","nextLabel","onNext","onBack","onNextPress","_unused","back","dots","zIndex","steps","outerIndex","x","y","dimensions","setDimensions","carouselRef","_carouselRef$current","_carouselRef$current2","getCurrentIndex","_carouselRef$current3","scrollTo","_carouselRef$current4","_WizardNextStep","_steps$currentIndex","_steps$currentIndex2","_carouselRef$current5","goBack","_WizardBackStep","_steps$currentIndex3","_carouselRef$current6","onLayout","nativeEvent","Carousel","modeConfig","parallaxScrollingScale","parallaxScrollingOffset","pagingEnabled","panGestureHandlerProps","activeOffsetX","onSnapToItem","PasswordStrength","checkPasswordComplexity","passwordStrength","TooWeak","minDiversity","minLength","Weak","Acceptable","Strong","indicator","indicatorInactive","indicatorWeak","indicatorOk","indicatorStrong","strength","indicatorStyle","useFormContext","textContentType","passwordRules","PasswordComplexityIndicator","SignUpSteps","signUpValidation","step","test","useSignupForm","_useUserSignUpMutatio","useUserSignUpMutation","onSignUp","_data$userRegister","_data$userRegister3","_data$userRegister3$a","PasswordConfirmation","_data$userRegister2","_data$userRegister2$f","userRegister","Promise","reject","SignupWizard","_useSignupForm","FormProvider","Wizard","EmailStep","PasswordStep","PasswordConfirmationStep","DoneStep","SignupScreen","Unauthenticated","presentation","SignUpScreen","active","itemSelected","useCustomEqualityCheck","_isEqual","useRef","checkEqualityWithFallback","valueFn","dependencies","deps","fastDeepEqual","useEffect","effect","validation","hasRig","CardSelect","useImagePicker","ImagePicker","requestMediaLibraryPermissionsAsync","launchImageLibraryAsync","mediaTypes","allowsEditing","aspect","quality","base64","avatarContainer","paragraph","pickImage","TouchableRipple","FederationCardSelect","onSelect","_federation$name","toUpperCase","LicenseCardSelect","DatePicker","DayPicker","selectedDays","onDayClick","DatePickerField","isOtherMake","setIsOtherMake","Surface","cardTitle","cardValue","slider","sliderControl","wingLoading","wingLoadingCardLeft","wingLoadingCardRight","ceil","useEquipment","_useCreateRigMutation","useCreateRigMutation","createRig","_useUpdateRigMutation","updateRig","_useCreateRigInspecti","_CreateRig","_UpdateRig","add","INITIAL_WIZARD_VALUES","stepIndex","lastStepIndex","wizardSchema","useUserWizardForm","startIndex","step1","_dropzoneUser$user2","_dropzoneUser$user","useRealNameStep","step2","useNicknameStep","step3","useAvatarStep","step4","_dropzoneUser$license2","_dropzoneUser$license","useFederationStep","step5","_dropzoneUser$license3","_dropzoneUser$license4","_dropzoneUser$user$us","_dropzoneUser$user$us2","f","_f$federation","useFederationNumberStep","step6","useLicenseStep","step7","_dropzoneUser$user2$r","_dropzoneUser$user$ri","useAskForRigStep","step8","_dropzoneUser$user5","_dropzoneUser$user$ri2","_dropzoneUser$user2$r2","_dropzoneUser$user3","_dropzoneUser$user3$r","_dropzoneUser$user3$r2","_dropzoneUser$user4","_dropzoneUser$user4$r","_dropzoneUser$user4$r2","useRigStep","step9","useReserveRepackStep","step10","_dropzoneUser$user6","parseFloat","useWingloadingStep","_useUserProfileContex","equipment","_useState","useState","_useState2","validators","useHookForm","acc","validator","formState","restore","useCallback","getStepIndexByFieldName","fieldName","fieldIndex","findIndex","shouldValidate","setMaxIndex","createHandlers","_back","successful","useWizardForm","handlers","_onSubmit","_fields$stepIndex","_fields$lastStepIndex","_initial$federation","_initial$license","federationResponse","_rigResponse$fieldErr","rigResponse","_result$fieldErrors","_result$fieldErrors2","firstError","animated","WizardStep","RealNameStep","NicknameStep","AvatarStep","FederationStep","FederationNumberStep","LicenseStep","AskForRigStep","RigStep","ReserveRepackStep","WingloadingStep","UserWizard","wizard","useRoute","UserWizardScreen","isRequired","pattern","isNumeric","createMutation","getPayload","fieldErrorMap","validates","onFieldError","_useMutation","useMutation","_useMutation2","mutate","raiseFieldError","_flat","msg","onMutate","mopts","hasErrors","_validators$variable","variable","_payload$fieldErrors","_payload$errors","_payload$fieldErrors2","_payload$errors2","requestAnimationFrame","createDropzone","newValue","calculateLatLngDelta","latitude","cos","PI","DEFAULT_COORDS","MapWebView","_coords","center","coords","interactive","onDragEnd","isLoaded","useJsApiLoader","mapStyle","onLoad","requestForegroundPermissionsAsync","_map$current","_map$current2","bounds","google","maps","LatLngBounds","fitBounds","panTo","onUnmount","rootLayout","setRootLayout","isFocused","GoogleMap","_onDragEnd","mapTypeId","MapTypeId","HYBRID","mapContainerStyle","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","AddressSearchBar","suggestions","setSuggestions","_useAddressToLocation","useAddressToLocationLazyQuery","_useAddressToLocation2","fetchLocation","fetchSuggestions","search","fetchSuggestionsDebounced","debounce","geocode","onPickResult","formattedString","Searchbar","suggestion","titleContainer","textShadowColor","textShadowRadius","textShadowOffset","markerFixed","myLocation","_region$latitude","_region$longitude","setCenter","setUsersLocation","getCurrentPositionAsync","longitude","region","latitudeDelta","longitudeDelta","fadeOut","duration","toValue","useNativeDriver","fadeIn","setCoordinateFade","start","_React$useState5","_React$useState6","isDragging","setDragging","MapView","onDragStart","r","_fadeOut$current","_fadeIn$current","stop","MaterialIcons","autocomplete","toFixed","previewContainer","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","borderTopRightRadius","borderTopLeftRadius","previewTabBar","borderBottomRightRadius","borderBottomLeftRadius","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","colorBox","ColorPickerDialog","Portal","TriangleColorPicker","sliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","isCustomColor","isDialogOpen","setDialogOpen","manipulate","PhonePreview","WebPreview","ColorPicker","PermissionListItem","canChangePermissions","_useUpdateRoleMutatio","useUpdateRoleMutation","mutationUpdatePermission","_result$data$updateRo","_result$data$updateRo2","_result$data2$updateR","_result$data2$updateR2","roleId","updateRole","dropzoneForm","_useDropzonePermissio","useDropzonePermissionsLazyQuery","_useDropzonePermissio2","queryRoles","_useDropzonePermissio3","_dropzoneForm$origina","_role$name","capitalize","_state$fields","_state$fields$banner","_state$fields2","_state$fields2$banner","onPickImage","_dropzone$fields$fede3","_dropzone$original2","mutationCreateDropzone","useMutationCreateDropzone","mutationUpdateDropzone","useMutationUpdateDropzone","onComplete","onNameNext","onFederationNext","onLogoNext","_dropzone$original","_dropzone$fields$fede","_dropzone$fields$fede2","_result$dropzone","_wizard$current","_wizard$current2","_wizard$current3","_wizard$current4","camelize","_result$dropzone2","_result$dropzone3","resolve","NameStep","LocationStep","ThemingStep","LogoStep","stepProps","PermissionStep","_onNext","newText","_useRecoverPasswordMu","useRecoverPasswordMutation","onRecover","onClickRecover","redirectUrl","errorIcon","_route$params2","route","_useConfirmUserMutati","useConfirmUserMutation","_useConfirmUserMutati2","confirmUser","_route$params","_data$userConfirmRegi","_data$userConfirmRegi2","userConfirmRegistrationWithToken","catch","_useUpdateLostPasswor","useUpdateLostPasswordMutation","updatePassword","onChangePassword","_result$data$userUpda","userUpdatePasswordWithToken","validatePassword","onFinished","useUserNavigation","UserCardSkeleton","loadingFragment","hasCredits","UsersScreen","_useDropzoneContext","omitBy","canCreateUser","CreateUser","initialLoading","fill","_global$currentDropzo","refreshControl","RefreshControl","_item$role","_item$role$name","descriptionStyle","_item$user","separator","inputContainer","input","onSearch","searchVisible","Appbar","autoFocus","RigInspectionItem","canInspect","ActAsRigInspector","valueType","Checkbox","_onChange2","_onChange3","RigInspectionForm","RigCard","_rig$owner","_rig$dropzone","_rigInspection$inspec","_rigInspection$inspec2","_rigInspection$inspec3","_rigInspection$inspec4","onSuccessfulImageUpload","isUploading","setUploading","useMutationUpdateRig","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","owner","textRow","chip","inspectedBy","innerChip","RigInspectionScreen","_rigInspectionQuery$d3","_rigInspectionQuery$d4","_currentDropzone$drop11","_rigInspectionQuery$d5","_rigInspectionQuery$d6","_rigInspectionQuery$d7","_rigInspectionQuery$d8","rigInspectionQuery","_useCreateRigInspecti2","mutationCreateRigInspection","_dropzoneUser$rigInsp","hasExistingRigInspection","rigInspections","inspection","_inspection$rig","_inspection$rig$id","_rig$id","_dropzoneUser$rigInsp2","record","_record$rig","isOk","_rigInspectionQuery$d","_rigInspectionQuery$d2","createRigInspection","_currentDropzone$drop3","_update","_mutationResult$data","_mutationResult$data$","_currentDropzone$drop4","_currentDropzone$drop5","_currentDropzone$drop6","_currentDz$dropzone","_currentDz$dropzone$c","_rigInspection$dropzo","_result$dropzoneUser","_currentDropzone$drop9","_currentDropzone$drop10","_rigInspection$dropzo2","_currentDropzone$drop7","_currentDropzone$drop8","_currentDz$dropzone2","_currentDz$dropzone3","_currentDz$dropzone3$","readQuery","currentDz","earliestTimestamp","startOfDay","toISOString","writeQuery","ins","newData","_Permission$ActAsDzso","_Permission$ActAsDzso2","iconName","ActAsDzso","ActAsLoadMaster","_onPress","PermissionBadges","badges","shouldShowBadge","_GrantPermission2","showsHorizontalScrollIndicator","Badge","DropzoneUserForm","canUpdateRole","newRole","_state$fields$role$va2","_state$original2","_state$original3","_permissions","getCachedUser","readFragment","_useUpdateDropzoneUse","useUpdateDropzoneUserMutation","_useUpdateDropzoneUse2","mutationUpdateDropzoneUser","createData","_state$fields$role$va","userRoleId","updateDropzoneUser","RigForm","_state$fields$canopyS","_state$fields$rigType","showTypeSelect","canCreateRigs","CreateRig","keyboardType","RigDialog","_state$original4","_onSuccess","useMutationCreateRig","_onSuccess2","d","onDialogClose","_state$fields$name","_state$fields$name$va","_state$fields$nicknam","_state$fields$nicknam2","_state$fields$email","_state$fields$email$v","_state$fields$phone","_state$fields$phone$v","_state$fields$license","_state$fields$license2","_state$fields2$licens","_state$fields2$licens2","_state$fields2$licens3","_state$federation","_state$fields3","_state$fields3$licens","_state$fields3$licens2","_state$fields3$licens3","_state$federation2","_state$federation2$va","_state$original$user","_state$original$user2","num","ticketAddons","UpdateUserDialog","_state$fields$apfNumb4","_state$fields$exitWei2","_state$fields$license11","_state$fields$license12","_state$fields$license13","_state$fields$license14","_state$fields$license15","_state$original4$user","mutationUpdateUser","useMutationUpdateUser","_state$fields$exitWei","_state$original2$user","_state$original2$user2","_state$fields$license5","_selectedLicenseFeder","_state$fields$license6","_state$fields$apfNumb","_state$fields$apfNumb2","_state$fields$license7","_state$fields$license8","_state$fields$license9","_state$fields$apfNumb3","_state$fields$license10","selectedLicenseFederation","_state$fields$license3","_state$fields$license4","slug","UserForm","useProfileWizard","badgesInitials","_badgesInitials","UserHeader","_dropzoneUser$permiss","_dropzoneUser$role","_dropzoneUser$role$na","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","primaryDark","actingPermissions","str","openURL","Caption","InfoGrid","verticalDivider","UserActionsButton","fabOpen","setFabOpen","rootNavigator","onClickSetupWizard","onClickAccessAndMembership","onClickTransactions","onClickEquipment","onClickAddFunds","onClickEdit","isSelf","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","canDeleteUsers","DeleteUser","_useArchiveUserMutati","useArchiveUserMutation","deleteUser","onDeleteUser","Alert","_data$deleteUser","_data$deleteUser$erro","_data$deleteUser2","_data$deleteUser2$dro","fabActions","fabStyle","onStateChange","SlotCard","_slot$jumpType","transaction","transactionContent","transactionTitle","transactionDescription","_slot$cost","avatarIcon","JumpHistoryTab","_dropzoneUser$slots2","tabIndex","currentTabIndex","sections","_dropzoneUser$slots","groupBy","_e$node","parseISO","t","differenceInDays","formatDistance","addSuffix","enAU","easing","_item$node","_item$node$load","_item$node2","_item$node2$load","OrderCard","_order$buyer2","_order$buyer5","_order$buyer5$user","_order$buyer6","showAvatar","isSelfBuyer","_order$buyer3","_order$buyer3$user","_user","_order$buyer4","toLocaleString","orderContent","orderTitle","orderDescription","ProfileTabs","TransactionsTab","_dropzoneUser$orders2","_dropzoneUser$orders","orders","startOf","diffNow","Duration","days","toRelative","hasSame","orderId","EquipmentTab","insp","_insp$rig","ProfileTab","Funds","FundTab","Equipment","Jumps","TabBar","disableSwipe","ProfileScreen","headerRight","setOptions","onCloseRigForm","onUserSheetClose","openWizard","getContent","ListHeaderComponent","wrappingHeader","Header","Skeleton","EditUserSheet","wrappingHeaderItem","chipTitle","lineHeight","textAlignVertical","OrdersScreen","_dropzoneUser$user2$n","firstName","SectionList","renderSectionHeader","section","flatList","EquipmentScreen","getIcon","TransactionCard","transactionType","ReceiptCard","_receipt$transactions","receipt","isUser","entity","transactions","receiver","OrderScreen","_order$buyer$user","_order$receipts","_dropzoneUser$orders$","lottieTicketAnimation","red","green","blue","ScrollableScreen","rightStyle","_order$seller3","_order$seller3$user","_order$seller4","_order$seller$user","_order$seller2","_order$buyer7","_order$buyer7$user","_order$buyer8","receipts","Users","Routes","header","SearchableAppBar","initialParams","OrderReceiptScreen","Wizards","DropzoneWizardScreen","RecoverPasswordScreen","ConfirmUserScreen","ChangePasswordScreen","User","DrawerMenu","_currentUser$role","_dropzone$currentUser","_dropzone$currentUser2","routeName","canUpdateDropzone","UpdateDropzone","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","canUpdateRigInspectionTemplate","UpdateFormTemplate","abort","clearStore","useLogout","onLogout","DrawerActions","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","moderationRole","profileHeader","Warning","contrast","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","_currentUser$user2$ri","_currentUser$rigInspe","_currentUser$user3","_currentUser$user3$ri","hideWarnings","openDrawer","tintColor","requireCredits","isRigInspected","isRepackInDate","GCAChip","_value$user","allowed","truncate","LoadMasterChip","_slots$map","PilotChip","PlaneChip","StyledTextField","styled","shouldForwardProp","prop","p","borderBottomColor","DropzoneUserAutocomplete","_useDropzoneUsersLazy","useDropzoneUsersLazyQuery","_useDropzoneUsersLazy2","searchUsers","_useDropzoneUsersLazy3","licensed","getOptionLabel","sort","localeCompare","nextValue","Autocomplete","renderInput","disableUnderline","onInputChange","inputValue","popupIcon","clearIcon","renderOption","menuItemProps","_option$user","_createElement","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","row","rowFirst","rowLast","SlotFields","DraggableRow","_rowProps$slot","_rowProps$slot2","_rowProps$load","rowProps","_useDraggable","useDraggable","slotId","setNodeRef","listeners","className","DroppableSlot","rowIndex","_useDroppable","useDroppable","isOver","_active$data","_active$data$current","_active$data$current$","_active$data$current$2","GROUP_COLORS","hsl","UserRow","_load$slots","onDeletePress","onSlotGroupPress","onSlotPress","canEditSelf","canEditOthers","canRemoveSelf","canRemoveOthers","slotGroup","isCurrentUser","DraggableWrapper","_slot$dropzoneUser3","_slot$dropzoneUser3$u","_slot$dropzoneUser4","_slot$dropzoneUser4$u","_slot$dropzoneUser5","_slot$dropzoneUser5$u","_slot$dropzoneUser6","_slot$dropzoneUser6$u","_slot$dropzoneUser7","_slot$dropzoneUser7$u","_slot$dropzoneUser8","_slot$dropzoneUser8$u","_slot$dropzoneUser9","_slot$dropzoneUser9$u","_slot$dropzoneUser10","_slot$dropzoneUser10$","_slot$dropzoneUser11","_slot$dropzoneUser11$","_slot$wingLoading","_slot$ticketType","_slot$ticketType2","_slot$ticketType3","_slot$ticketType4","isNumber","borderLeftWidth","borderLeftColor","hasLanded","avatarCell","nameCell","slotText","License","licenseCell","Rig","rigCell","WingLoading","wingLoadingCell","JumpType","jumpTypeCell","TicketType","ticketCell","Altitude","altitudeCell","tandemPassengerNameCell","tandemInfoCell","GroupPicker","_sortedUniq$sort","availableGroups","createChangeHandler","sortedUniq","gap","UserCard","_state$fields$ticketT","_slotUser$id","slotUser","_state$fields$users$v","_state$fields$users$v2","newRig","_state$fields$users$v3","_state$fields$users$v4","_state$fields$users$v5","ManifestGroupForm","_state$fields$users","_state$fields$users$v6","_state$fields4","_data$dropzone3","_state$fields5","_state$fields5$ticket","_state$fields5$ticket2","_state$fields5$ticket3","_state$fields6","_state$fields6$ticket","_state$fields6$ticket2","_state$fields6$ticket3","_state$fields8","_state$fields8$groupN","_state$fields9","_state$fields9$load","_state$fields9$load$v","_state$fields9$load$v2","_state$fields10","_state$fields10$users","_state$fields10$users2","isPublic","createToggleTicketAddonHandler","_state$fields$extras$","_state$fields2$extras","_state$fields3$extras","firstUser","_state$fields7","_state$fields7$extras","_ref9","_ref10","_state$fields$jumpTyp2","_state$fields$ticketT2","_state$fields$jumpTyp4","_state$fields$ticketT4","_state$fields2$groupN","_state$fields$extras2","_state$fields$load$va2","_useManifestGroupMuta2","mutationCreateSlots","_state$fields$jumpTyp","_state$fields$jumpTyp3","_state$fields$ticketT3","_state$fields$groupNu","_state$fields$extras","_state$fields$load$va","_result$data$createSl","_result$data$createSl2","_result$data2$createS","_result$data2$createS2","_result$data4$createS","_result$data4$createS2","_result$data3$createS","userGroup","fetchProfile","onSelectUser","_onClose","wrapper","AppBar","Toolbar","Fade","in","LinearProgress","buttonContainer","contentContainer","userListContainer","sheet","sheetHeader","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ActionButton","_load$plane","_load$slots2","_useLoadContext","_useLoadContext$load","isExpanded","setExpanded","canUpdateLoad","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","isFull","showManifestButton","showGroupIcon","callActions","isToday","isSameDay","manifestActions","workflowActions","InFlight","buttonActions","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","CountdownCircleTimer","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","RenderBadges","renderBadges","LinearGradient","AvailableRow","_load$id","SlotsTable","_Array$from","onAvailableSlotPress","rowStyles","th","LoadTableView","numFields","LoadSlotTable","LoadScreen","_LoadState$Open$LoadS","_load$slots4","occupiedSlots","onDeleteSlot","_response$slot","_response$slot$dropzo","_response$slot$dropzo2","_load$slots3","weight","TableView","ManifestGroupSheet","LoadScreenWrapper","WizardPagination","paginationIndex","icons","Dimensions","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","scrollToIndex","SwiperFlatList","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","wizardScreen","buttonBack","buttons","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","_Dimensions$get","_React$useContext","scrollRef","WizardScreen","createWeatherCondition","WindRow","direction","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","altitudeOption","alt","strengthCard","newSpeed","match","numbers","textField","directionCard","newDir","CARD_STYLE","WeatherConditionForm","_state$fields$tempera","_state$fields2$jumpRu","onPressJumpRun","setTemperature","setJumpRun","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","getPointOnCircle","degrees","radius","offsetX","offsetY","sin","MAP_SIZE_PERCENTAGE","JumpRunSelector","MAP_SIZE","_React$useState7","originX","originY","_React$useState8","origin","setOrigin","rotation","planePosition","planeAnimation","resetBeforeIteration","onGestureEvent","currentCoordinates","angle","onMountRotatableView","planeStartPosition","PanGestureHandler","onBegan","onEnded","iconContainer","rotate","translateY","degreeLabel","bottomDegreeLabel","borderStyle","textInput","setLocation","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","WindsStep","JumpRunStep","WizardCompleteStep","JumpRunScreen","useAuthenticatedNavigation","WindScreen","DraggingRow","DragOverlay","DragDropWrapper","draggedItem","setDraggedItem","_event$over","_event$over$data","_event$over$data$curr","_event$active$data$cu","_event$active","_event$active$data","_event$active$data$cu2","_event$over2","_event$over2$data","_event$over2$data$cur","over","sourceSlot","targetSlot","DndContext","_event$active2","_event$active2$data","_event$active2$data$c","_event$active3","_event$active3$data","_event$active3$data$c","UserRowDragOverlay","LoadingCard","smallChip","smallChipText","_loadStates","LOAD_BADGE_COLOR","cancelled","boarding_call","Loading","loadStates","isBefore","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","deletingSlot","setDeletingSlot","differenceInMinutes","_load$loadMaster","_load$pilot","planeIcon","CENTER_Y","CENTER_X","_f","_closure","asString","__workletHash","__location","animate","scaleX","WeatherBoard","_dropzone$currentCond","_dropzone$currentCond2","_dropzone$currentCond3","_conditions$winds","_dropzone$currentCond4","conditions","currentConditions","canUpdate","UpdateWeatherConditions","hasWeatherConditions","Easing","onEditWindboard","onEditJumprun","defaultBackground","nightBackground","weatherBackground","onLongPress","cell","FontAwesome","windboard","orderBy","JumpRunMap","noData","noDataLabel","SetupProfileCard","SetupStepCard","rightProps","availableSlots","setupProfileCardFragment","setupAircraftsCardFragment","setupTicketsCardFragment","ManifestScreen","_state$theme3","_state$theme3$colors","_state$theme4","_state$theme4$colors","_manifest$loads","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","sheets","_useManifestContext","loadingAircrafts","loadingTickets","_state$theme","_state$theme$colors","_state$theme2","_state$theme2$colors","cardWidth","contentWidth","LoadingCardLarge","LoadingCardSmall","LoadCardLarge","LoadCardSmall","WeatherConditions","SettingsScreen","_DropzoneState$Archiv","_DropzoneState$Archiv3","onChangeVisibility","Archived","Private","InReview","_DropzoneState$Archiv2","RequestPublication","Unpublish","Publish","descriptionNumberOfLines","TicketTypesScreen","canCreateTicketTypes","CreateTicketType","createArchiveTicketHandler","ticket","_ArchiveTicketType","createToggleManifestSelfHandler","_ToggleManifestSelf","markerSize","labelSize","_props$value","isAnimating","setAnimating","DropzoneForm","skeletonCard","imagePickLight","imagePickDark","latField","lngField","LocationPicker","skeletonCardColorPicker","_ref5$field","skeletonCardCheckbox","subheader","dropzoneValidation","allowNegativeCredits","allowManifestBypass","allowDoubleManifesting","UpdateDropzoneScreen","_useDropzoneForm","_dropzone$settings9","_dropzone$settings10","_dropzone$settings11","_dropzone$settings12","_dropzone$settings13","_dropzone$settings14","_dropzone$settings15","_dropzone$settings16","requestPublication","useDropzoneForm","isDirty","PlanesScreen","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","createArchiveAircraftHandler","_ArchiveAircraftHandler","createEditAircraftHandler","RigInspectionTemplateForm","newItem","setNewItem","onTouchEnd","RigInspectionTemplateScreen","_data$dropzone5","_data$dropzone5$rigIn","_data$dropzone6","canEdit","_useUpdateRigInspecti","useUpdateRigInspectionTemplateMutation","_useUpdateRigInspecti2","mutationUpdateForm","updateForm","_data$dropzone3$rigIn","_data$dropzone4","formId","DropzoneRigsScreen","_data$dropzone$rigs","rigForm","_useDropzoneRigsQuery","useDropzoneRigsQuery","_useUpdateRigMutation2","mutationUpdateRig","updateData","canCreateRig","CreateDropzoneRig","_result$updateRig","_result$updateRig$err","DropzonePermissionScreen","_data$dropzone2$roles","_useRolesQuery","masterLogValidation","notes","dzso","useMasterLogForm","_useUpdateMasterLogMu","useUpdateMasterLogMutation","updateMasterLog","_validatedFields$dzso","_response$updateMaste","_response$updateMaste4","_response$updateMaste5","_response$updateMaste2","_response$updateMaste3","_response$updateMaste6","masterLog","_initial$dzso","DropzoneMasterLogScreen","_data$masterLog3","_entry$dzso","_data$masterLog4","_data$masterLog4$load","_data$masterLog5","_data$masterLog5$load","setDate","isEditing","setIsEditing","toggleEditing","usePalette","validRange","endDate","_useMasterLogQuery","useMasterLogQuery","entry","onDownload","_data$masterLog","_data$masterLog2","downloadUrl","_useMasterLogForm","_load$gca","_load$aircraft","_load$aircraft2","_load$aircraft3","TransactionsScreen","_useDropzoneTransacti","useDropzoneTransactionsLazyQuery","fetchTransactions","_item$node3","_item$node4","_item$node4$buyer","ExtrasScreen","_data$extras","_data$extras2","_useTicketTypeExtrasQ","useTicketTypeExtrasQuery","createEditHandler","canCreateExtras","CreateExtra","Configuration","SettingsTab","SettingsMenuScreen","DropzoneSettingsScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","Manifest","ManifestTab","headerStyleInterpolator","HeaderStyleInterpolators","forUIKit","WeatherConditionsScreen","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","ManifestedNotification","_notification$resourc","_notification$resourc2","resource","BoardingCallNotification","FundsNotification","RigInspectionNotification","notificationType","_owner","_owner2","PermissionNotification","PublicationRequestNotification","NotificationScreen","_data$dropzone$curren","_data$dropzone$curren2","_data$dropzone2$curre","_data$dropzone2$curre2","_useNotificationsLazy","useNotificationsLazyQuery","_useNotificationsLazy2","getNotifications","fetchNotifications","notifications","_edge$node3","UserManifested","ManifestedCard","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","Notification","NotificationsScreen","Stats","cols","columns","itemWidth","cardHeight","statistic","valueText","labelText","lineBreakMode","LoadsByDay","startTime","ContributionGraph","showMonthLabels","classForValue","titleForValue","startDate","subDays","stateEvent","_stateEvent","Archive","DropzoneTableRow","_dropzone$statistics","_dropzone$statistics2","createdCell","statusCell","loadsCell","statistics","loadsCount","usersCell","activeUserCount","DropzonesTable","alwaysBounceVertical","controls","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","backgroundGradientFromOpacity","backgroundGradientToOpacity","barPercentage","useShadowColorFromDataset","TimeRange","JUMP_TYPE_COLORS","cam","ws","hnp","hp","fs","freefly","sortBy","stat","legendFontColor","legendFontSize","PieChart","accessor","absolute","AdminOverviewPage","_data$dropzones$edges2","_data$dropzones2$edge","selectedTimeRange","setTimeRange","timeRange","subMonths","endTime","createTimeRangeHandler","range","selectedDropzones","setSelectedDropzones","_useDropzonesStatisti","useDropzonesStatisticsQuery","summedStatistics","revenueCents","sumBy","revenueCentsCount","cancelledLoadsCount","_dropzone$statistics3","slotsCount","_dropzone$statistics4","pilotCount","_dropzone$statistics5","dzsoCount","_dropzone$statistics6","gcaCount","_dropzone$statistics7","totalUserCount","_dropzone$statistics8","_dropzone$statistics9","inactiveUserCount","_dropzone$statistics10","loadCountByDay","flatMap","_dropzone$statistics11","slotsByJumpType","_dropzone$statistics12","stickyHeaderIndices","ThreeMonths","SixMonths","Year","turnaround","dispatchedLoadsCard","JumpTypePieChart","jumpTypesCard","table","AdminOverviewPageWrapper","LEVEL_COLORS","_LEVEL_COLORS","Debug","Info","FeedItem","_event$createdBy","_event$createdBy$user","_event$createdBy2","_event$createdBy2$use","expanded","details","level","createdBy","levelCell","messageCell","Feed","onFetchMore","onEndReached","onEndReachedThreshold","ActivityFeedContainer","_query$data4$activity","_query$data4$activity2","accessLevels","levels","canViewAdminActivity","ViewAdminActivity","canViewSystemActivity","ViewSystemActivity","canViewUserActivity","ViewUserActivity","_useActivityDetailsLa","useActivityDetailsLazyQuery","_useActivityDetailsLa2","getActivity","_query$data$activity","_query$data$activity$","_query$data2$activity","_query$data2$activity2","_query$data3$activity","_query$data3$activity2","activity","pageInfo","hasNextPage","endCursor","after","_result$data2$activit","_result$data3$activit","onChangeEventLevel","newLevels","onChangeAccessLevel","newAccessLevels","Admin","System","DashboardPage","_dropzone$id","_data$dropzone$statis","_data$dropzone2$stati","_data$dropzone3$stati","_data$dropzone4$stati","_data$dropzone5$stati","_data$dropzone6$stati","_data$dropzone7","_data$dropzone8","_data$dropzone8$stati","_data$dropzone9","_data$dropzone9$stati","_data$dropzone10","_data$dropzone10$stat","_data$dropzone11","_data$dropzone11$stat","_data$dropzone12","_data$dropzone12$stat","canViewRevenue","ViewStatistics","canViewStatistics","ViewRevenue","activityVariables","setActivityVariables","onChangeActivityVariables","_useDropzoneStatistic","useDropzoneStatisticsQuery","ActivityFeed","Overview","OverviewTab","DashboardScreen","OverviewScreen","AnimatedTabBarNavigator","AuthenticatedTabBar","isAdmin","canViewUsers","ReadUser","canViewDashboard","tabBarActiveTintColor","tabBarInactiveBackgroundColor","backdrop","tabBarActiveBackgroundColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","borderTopWidth","borderTopColor","BottomTab","appearance","tabBarBackground","topPadding","shadow","bottomPadding","tabBarOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","tabBarIcon","focused","iconActive","unmountOnBlur","NotificationsTab","UsersTab","createDrawerNavigator","DrawerNavigator","drawerContent","drawerType","Authenticated","prefixes","LeftDrawer","UserListScreen","AircraftScreen","MasterLogScreen","AircraftsScreen","PermissionScreen","DropzoneSelectScreen","SignUpWizard","RootNavigator","Content","listener","Appearance","colorScheme","handler","useAppearanceListener","onRouteChange","s","_getPathFromState$spl","getPathFromState","_path$split$reverse","reverse","screenName","useRouteChange","ExpoUpdatesProvider","GestureHandlerRootView","PortalProvider","SafeAreaProvider","NavigationContainer","documentTitle","formatter","linking","LinkingConfiguration","AppSignalSessionTagger","PushNotificationsProvider","StatusBar","isLoadingComplete","setLoadingComplete","_Font$useFonts","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","Roboto_400Regular","roboto","Roboto_500Medium","Roboto_700Bold","Ionicons","_loadResourcesAndDataAsync","SplashScreen","loadAsync","loadResourcesAndDataAsync","useCachedResources","PersistGate","ActivityIndicator","registerRootComponent","Entrypoint","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","ns","def","indexOf","getOwnPropertyNames","o","defineProperty","enumerable","get","g","globalThis","Function","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","push","nc","__webpack_exports__"],"sourceRoot":""}