{"version":3,"sources":["app/PaperDatesPolyfill.ts","app/EntrypointWrapper.web.tsx","app/api/schema.d.ts","app/components/LottieView.web.tsx","app/components/forms/credits/slice.tsx","app/screens/wizards/dropzone_wizard/slice.tsx","app/components/forms/dropzone/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/extra/slice.tsx","app/components/forms/load/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/plane/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/ticket_type/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/user/user_list/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/dropzone/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/wizards/user_wizard/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/components/notifications/slice.ts","app/state/store.ts","app/components/app_update/AppUpdate.tsx","app/api/Apollo.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/components/notifications/Notifications.tsx","app/screens/NotFoundScreen.tsx","app/api/reflection.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/screens/limbo/dropzone_select/DropzoneCard.tsx","app/screens/limbo/dropzone_select/DropzonesScreen.tsx","app/screens/limbo/routes.tsx","app/components/GradientText.web.tsx","app/components/navigation_wizard/Step.tsx","app/components/navigation_wizard/Dots.tsx","app/components/navigation_wizard/Wizard.tsx","app/utils/checkPasswordComplexity.ts","app/components/input/text/TextField.tsx","app/components/input/PasswordComplexityIndicator.tsx","app/screens/unauthenticated/signup/wizard/steps/Password.tsx","app/screens/unauthenticated/signup/wizard/steps/Email.tsx","app/screens/unauthenticated/signup/wizard/steps/PasswordConfirmation.tsx","app/screens/unauthenticated/signup/wizard/steps/Done.tsx","app/screens/unauthenticated/signup/wizard/SignupWizard.tsx","app/components/Divider.tsx","app/screens/unauthenticated/login/FacebookButton.web.tsx","app/screens/unauthenticated/login/AppleButton.web.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/createMutation.tsx","app/api/hooks/useMutationSignUp.tsx","app/components/layout/ScrollableScreen.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/screens/unauthenticated/routes.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationUpdateDropzone.ts","app/api/hooks/useMutationCreatePlane.tsx","app/api/hooks/useMutationUpdatePlane.tsx","app/api/hooks/useMutationCreateTicketType.ts","app/api/hooks/useMutationUpdateTicketType.ts","app/screens/wizards/dropzone_wizard/steps/Name.tsx","app/components/input/card_select/CardSelect.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/screens/wizards/dropzone_wizard/steps/Federation.tsx","app/utils/calculateLatLngDelta.ts","app/components/input/search/AddressSearchBar.tsx","app/screens/wizards/dropzone_wizard/steps/Location.web.tsx","app/components/input/number_input/NumberField.web.tsx","app/screens/wizards/dropzone_wizard/steps/Aircraft.tsx","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/screens/wizards/dropzone_wizard/steps/Theming.tsx","app/screens/wizards/dropzone_wizard/steps/Done.tsx","app/hooks/useRestriction.ts","app/components/permissions/PermissionListItem.tsx","app/screens/wizards/dropzone_wizard/steps/Permissions.tsx","app/components/UserAvatar.tsx","app/components/UserAvatar.web.old.tsx","app/components/popover/Menu.web.tsx","app/components/input/select/Select.web.tsx","app/components/input/dropdown_select/AltitudeSelect.tsx","app/screens/wizards/dropzone_wizard/steps/TicketType.tsx","app/hooks/useImagePicker.ts","app/screens/wizards/dropzone_wizard/steps/Logo.tsx","app/screens/wizards/dropzone_wizard/DropzoneWizard.tsx","app/api/hooks/useMutationUpdateUser.ts","app/screens/wizards/user_wizard/steps/Federation.tsx","app/screens/wizards/user_wizard/steps/FederationNumber.tsx","app/screens/wizards/user_wizard/steps/RealName.tsx","app/screens/wizards/user_wizard/steps/Nickname.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/screens/wizards/user_wizard/steps/License.tsx","app/screens/wizards/user_wizard/steps/Rig.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/screens/wizards/user_wizard/steps/ReserveRepack.tsx","app/screens/wizards/user_wizard/steps/AskForRig.tsx","app/screens/wizards/user_wizard/steps/Wingloading.tsx","app/screens/wizards/user_wizard/steps/Done.tsx","app/screens/wizards/user_wizard/steps/Avatar.tsx","app/screens/wizards/user_wizard/UserWizardScreen.tsx","app/screens/wizards/recover_password/steps/Email.tsx","app/screens/wizards/recover_password/steps/Done.tsx","app/screens/wizards/recover_password/RecoverPasswordScreen.tsx","app/screens/wizards/confirm_user/ConfirmUserScreen.tsx","app/screens/wizards/change_password/steps/Done.tsx","app/screens/wizards/change_password/steps/Password.tsx","app/screens/wizards/change_password/steps/PasswordConfirmation.tsx","app/screens/wizards/change_password/ChangePasswordScreen.tsx","app/api/hooks/useCurrentDropzone.ts","app/components/Skeleton.tsx","app/components/chips/Chip.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/forms/ghost/GhostForm.tsx","app/components/layout/DialogOrSheet.web.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/user/useUserNavigation.ts","app/screens/authenticated/user/user_list/UsersScreen.tsx","app/screens/authenticated/user/user_list/AppBar.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/api/hooks/useMutationUpdateRig.tsx","app/screens/authenticated/user/equipment/RigCard.tsx","app/screens/authenticated/user/rig_inspection/RigInspectionScreen.tsx","app/components/Badge.tsx","app/api/utils/createErrorHandler.ts","app/screens/authenticated/user/profile/UserInfo/PermissionBadges.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/components/forms/credits/CreditsForm.tsx","app/components/dialogs/CreditsDialog/Credits.web.tsx","app/api/hooks/useMutationCreateRig.ts","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/forms/user/UserForm.tsx","app/components/dialogs/User.tsx","app/api/hooks/useDropzoneUserProfile.ts","app/screens/authenticated/user/profile/UserInfo/Header.tsx","app/screens/authenticated/user/profile/UserInfo/InfoGrid.tsx","app/screens/authenticated/user/profile/UserActions.tsx","app/screens/authenticated/user/profile/SlotCard.tsx","app/screens/authenticated/user/profile/tabs/JumpHistory.tsx","app/components/orders/OrderCard.tsx","app/screens/authenticated/user/profile/tabs/index.tsx","app/screens/authenticated/user/profile/tabs/Transactions.tsx","app/screens/authenticated/user/profile/tabs/Equipment.tsx","app/screens/authenticated/user/profile/ProfileScreen.tsx","app/screens/authenticated/user/orders/OrdersScreen.tsx","app/screens/authenticated/user/equipment/EquipmentScreen.tsx","app/screens/authenticated/user/order_receipt/TransactionCard.tsx","app/screens/authenticated/user/order_receipt/ReceiptCard.tsx","app/screens/authenticated/user/order_receipt/OrderScreen.tsx","app/screens/authenticated/user/routes.tsx","app/screens/wizards/routes.tsx","app/screens/authenticated/dropzone/load/InfoGrid.tsx","app/components/drawer/Drawer.tsx","app/components/bottom_tabs/AnimatedTabBar.web.tsx","app/components/appbar/SetupWarning.tsx","app/components/appbar/AppBar.tsx","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/components/forms/manifest/ManifestForm.tsx","app/components/dialogs/ManifestUser/ManifestUser.web.tsx","app/components/autocomplete/DropzoneUserAutocomplete.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/api/hooks/useMutationDeleteSlot.ts","app/screens/authenticated/dropzone/load/ActionButton.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/dropzone/load/Header.tsx","app/__fixtures__/slots.fixtures.ts","app/components/slots_table/UserRow.tsx","app/components/layout/SwipeActions.tsx","app/utils/generateColor.ts","app/components/slots_table/AvailableRow.tsx","app/components/slots_table/Table.tsx","app/screens/authenticated/dropzone/load/views/TableView.tsx","app/screens/authenticated/dropzone/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/dropzone/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/dropzone/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/useAuthenticatedNavigation.ts","app/screens/authenticated/dropzone/weather_conditions/WindScreen.tsx","app/api/hooks/useMutationCreateLoad.ts","app/components/notifications/index.ts","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/forms/load/LoadForm.tsx","app/components/dialogs/Load.tsx","app/hooks/usePalette.ts","app/components/GetStarted.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Card.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Card.tsx","app/screens/authenticated/dropzone/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/dropzone/manifest/SetupProfileCard.tsx","app/screens/authenticated/dropzone/manifest/ManifestScreen.tsx","app/utils/checkDropzoneSetupComplete.ts","app/screens/authenticated/configuration/settings_menu/SettingsMenuScreen.tsx","app/components/forms/ticket_type/TicketTypeForm.tsx","app/components/dialogs/TicketType.tsx","app/screens/authenticated/configuration/ticket_types/TicketTypesScreen.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/configuration/dropzone_settings/DropzoneSettingsScreen.tsx","app/components/forms/plane/PlaneForm.tsx","app/components/dialogs/Plane.tsx","app/screens/authenticated/configuration/aircrafts/AircraftsScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/configuration/rig_inspection_template/RigInspectionTemplateScreen.tsx","app/screens/authenticated/configuration/rigs/DropzoneRigsScreen.tsx","app/screens/authenticated/configuration/permissions/PermissionsScreen.tsx","app/screens/authenticated/configuration/master_log/MasterLogScreen.tsx","app/screens/authenticated/configuration/transactions/DropzoneTransactionsScreen.tsx","app/api/hooks/useMutationCreateExtra.ts","app/api/hooks/useMutationUpdateExtra.ts","app/components/forms/extra/ExtraForm.tsx","app/components/dialogs/TicketTypeExtra.tsx","app/screens/authenticated/configuration/extras/ExtrasScreen.tsx","app/screens/authenticated/configuration/routes.tsx","app/screens/authenticated/dropzone/routes.tsx","app/api/hooks/useNotifications.ts","app/screens/authenticated/notifications/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/useNotificationNavigation.ts","app/screens/authenticated/notifications/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/notifications/NotificationsScreen.tsx","app/screens/authenticated/notifications/routes.tsx","app/screens/authenticated/routes.tsx","app/screens/drawers/UserDrawer.tsx","app/screens/routes.tsx","app/ThemeProvider.web.tsx","app/Entrypoint.tsx","app/hooks/useCachedResources.ts","app/components/map/Map.web.tsx","app/utils/calculateCoordinatesByAngle.ts","assets/images/logo-black.png","assets/images/logo-white.png","assets/images/webb-dark.png","assets/images/pattern.png","assets/images/logo.png","assets/images/night.png","assets/images/weather.png","app/screens/authenticated/dropzone/manifest/Weather/JumpRun.tsx","assets/fonts/SpaceMono-Regular.ttf"],"names":["Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","Wrapper","children","View","style","StyleSheet","absoluteFill","EventAction","EventLevel","LoadState","ModerationRole","NotificationType","OrderState","Permission","SellableItemTypes","TransactionStatus","TransactionType","WalletableTypes","LottieView","DropzoneWizardStep","initialState","original","open","fields","amount","value","error","transactionType","Deposit","message","createSlice","name","reducers","setField","state","action","payload","field","setFieldError","setOpen","reset","federation","lat","lng","secondaryColor","primaryColor","banner","isCreditSystemEnabled","isPublic","requestPublication","Object","keys","forEach","key","payloadKey","typedKey","setOriginal","role","expiresAt","cost","ticketTypes","gca","dispatchAt","isOpen","loadMaster","pilot","plane","maxSlots","exitWeight","email","phone","license","setFederation","console","user","registration","minSlots","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","map","idx","setFields","JSON","parse","log","Error","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","passengerName","passengerExitWeight","users","setFromSlots","slots","slot","id","Number","rigId","find","i","setDropzoneUsers","xorBy","dzUser","autoSelectedRig","rigs","length","first","availableRigs","avatar","image","altitude","allowManifestingSelf","isTandem","apfNumber","nickname","userFederations","uid","jumpRun","temperature","exitSpotMiles","offsetDirection","winds","credits","dropzone","extra","ghost","rigInspection","rigInspectionTemplate","manifest","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","currentIndex","completed","Name","Federation","Location","Aircraft","Tickets","Branding","setIndex","complete","skipRigSetup","login","signup","dropzoneWizard","userWizard","close","infoColor","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","fonts","fontFamily","fontWeight","thin","medium","regular","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","expoPushToken","currentRouteName","theme","palette","main","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setCurrentRouteName","setPermissions","setPrimaryColor","color","darken","hex","lighten","setAccentColor","setDropzone","setAppearance","current","merge","logout","queue","hideSnackbar","newQueue","showSnackbar","isEqual","last","push","persistConfig","storage","default","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","notifications","notificationSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppUpdate","props","rest","fontsLoaded","React","overlay","setOverlay","loading","setLoading","animation","dispatch","onUpdate","a","async","play","Update","isNew","isUpdateAvailable","isAvailable","flex","styles","blur","intensity","Text","title","ref","width","height","source","Button","disabled","button","mode","onPress","create","absoluteFillObject","alignItems","justifyContent","fontSize","position","top","bottom","borderColor","borderRadius","Apollo","httpBatchLink","environment","Constants","BatchHttpLink","batchDebounce","batchMax","uri","urls","url","root","errorLink","onError","graphQLErrors","networkError","operation","response","some","extensions","code","variant","process","EXPO_ENV","locations","path","nodes","stringify","authLink","setContext","_","headers","accessToken","Authorization","tokenType","client","ApolloClient","link","concat","RetryLink","cache","InMemoryCache","ApolloProvider","ImageViewer","mainSrc","onCloseRequest","AnimationState","slice","Notifications","successAnimation","closed","animationState","setAnimationState","notification","opening","Toast","show","onHide","text1","type","pointerEvents","loop","autoPlay","speed","onAnimationFinish","waiting","setTimeout","lottieDoneAnimation","autoHide","visibilityTime","NotFoundScreen","navigation","container","TouchableOpacity","replace","linkText","backgroundColor","padding","marginTop","paddingVertical","defaultOptions","RoleEssentialsFragmentDoc","gql","LicenseEssentialsFragmentDoc","UserEssentialsFragmentDoc","DropzoneUserEssentialsFragmentDoc","FederationEssentialsFragmentDoc","LicenseDetailsFragmentDoc","UserFederationEssentialsFragmentDoc","RigEssentialsFragmentDoc","UserRigDetailedFragmentDoc","UserDetailedFragmentDoc","DropzoneUserDetailsFragmentDoc","RigInspectionEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","TransactionEssentialsFragmentDoc","ReceiptEssentialsFragmentDoc","OrderEssentialsFragmentDoc","TicketTypeEssentialsFragmentDoc","JumpTypeEssentialsFragmentDoc","SlotEssentialsFragmentDoc","SlotDetailsFragmentDoc","LoadEssentialsFragmentDoc","UserSlotDetailsFragmentDoc","DropzoneUserProfileFragmentDoc","PlaneEssentialsFragmentDoc","WeatherConditionEssentialsFragmentDoc","DropzoneDetailedFragmentDoc","CurrentUserEssentialsFragmentDoc","CurrentUserFragmentDoc","CurrentUserDetailedFragmentDoc","DropzoneExtensiveFragmentDoc","TicketTypeExtraEssentialsFragmentDoc","TicketTypeExtraDetailedFragmentDoc","RigInspectionDetailedFragmentDoc","RigInspectionMutationEssentialsFragmentDoc","RoleDetailedFragmentDoc","LoadDetailsFragmentDoc","SlotExhaustiveFragmentDoc","ArchivePlaneDocument","ArchiveTicketTypeDocument","ArchiveUserDocument","ConfirmUserDocument","CreateDropzoneDocument","CreateOrderDocument","CreatePlaneDocument","CreateRigDocument","CreateRigInspectionDocument","CreateGhostDocument","FinalizeLoadDocument","GrantPermissionDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","options","LoginDocument","LoginWithFacebookDocument","ManifestGroupDocument","ManifestUserDocument","RecoverPasswordDocument","RevokePermissionDocument","UpdateDropzoneDocument","UpdateDropzoneUserDocument","UpdateLostPasswordDocument","UpdatePlaneDocument","UpdateRigDocument","useUpdateRigMutation","UpdateRigInspectionTemplateDocument","UpdateRoleDocument","UpdateTicketTypeDocument","UpdateUserDocument","UserSignUpDocument","QueryDropzoneDocument","DropzoneRigsDocument","DropzoneTransactionsDocument","DropzoneUsersDocument","useDropzoneUsersQuery","DropzoneUsersDetailedDocument","QueryDropzoneUserProfileDocument","useQueryDropzoneUserProfile","QueryDropzonesDocument","useQueryDropzones","TicketTypeExtrasDocument","useTicketTypeExtrasQuery","FederationsDocument","useFederationsQuery","AddressToLocationDocument","AllowedJumpTypesDocument","useAllowedJumpTypesQuery","LicensesDocument","useLicensesQuery","LoadDocument","useLoadQuery","PlanesDocument","usePlanesQuery","CurrentUserPermissionsDocument","RigInspectionTemplateDocument","AvailableRigsDocument","RolesDocument","useRolesQuery","AllowedTicketTypesDocument","TicketTypesDocument","useTicketTypesQuery","useThemeColor","colorName","colorFromProps","Colors","lightColor","darkColor","otherProps","NoResults","subtitle","useTheme","flatten","empty","Title","onSurface","Paragraph","textAlign","fab","margin","right","alignSelf","DropzonesScreen","globalState","useNavigation","nameLines","split","lines","Color","desaturate","textColor","shouldPushRoute","screen","cardContainer","ImageBackground","numberOfLines","toString","Icon","icon","size","svgContainer","substr","adjustsFontSizeToFit","allowFontScaling","overflow","fontStyle","left","data","refetch","SafeAreaView","FlatList","dropzones","edges","numColumns","undefined","horizontal","refreshing","keyExtractor","node","onRefresh","flatlist","contentContainerStyle","content","ListEmptyComponent","renderItem","FAB","small","navigate","label","flexGrow","paddingBottom","dzIcon","Stack","createStackNavigator","Limbo","Navigator","screenOptions","headerShown","cardStyle","initialRouteName","Screen","component","GradientText","opacity","Fields","KeyboardAvoidingView","behavior","fieldContent","Step","hideContentUntilNavigatedTo","useIsFocused","flexDirection","dots","minWidth","maxWidth","paddingLeft","Dots","count","Array","from","activeDot","inactiveDot","marginLeft","marginRight","WizardRoot","WizardModal","Content","steps","transitionSpec","TransitionSpecs","TransitionIOSSpec","headerStyleInterpolator","HeaderStyleInterpolators","forFade","cardStyleInterpolator","next","layouts","transform","translateX","progress","interpolate","inputRange","outputRange","scale","overlayStyle","screenProps","nextIndex","nextIndexFactor","onNext","goBack","placeholder","backIndexFactor","onBack","Wizard","presentation","PasswordStrength","checkPasswordComplexity","passwordStrength","TooWeak","minDiversity","minLength","Weak","Acceptable","Strong","TextField","helperText","setText","onChangeText","onChange","TextInput","surface","HelperText","marginBottom","indicator","indicatorInactive","indicatorWeak","indicatorOk","indicatorStrong","PasswordStep","strength","indicatorStyle","includes","textContentType","secureTextEntry","passwordRules","newValue","PasswordComplexityIndicator","EmailStep","newText","PasswordConfirmationStep","DoneStep","SignupWizard","useUserSignUpMutation","onSignUp","validateEmail","RegExp","test","validatePassword","onClickSignUp","variables","pushToken","licenseId","result","userSignUp","fieldErrors","Divider","divider","marginVertical","useLoginWithFacebook","opts","useLoginWithFacebookMutation","onLoginWithFacebook","mutation","token","loginWithFacebook","authenticatable","FacebookButton","appId","reAuthenticate","autoLoad","buttonStyle","onFailure","callback","AppleButton","LoginScreen","useLoginMutation","mutationLogin","loginWithFacebookMutation","loginWithApple","loginWithAppleMutation","onLogin","emailRegex","hasError","userLogin","backgroundDark","backgroundLight","resizeMode","Image","logoLight","logoDark","logo","Card","card","elevation","animationContainer","loadingAnimation","onSubmitEditing","labelStyle","forgotPasswordDark","forgotPassword","textButtonLabel","textButton","paddingTop","paddingHorizontal","borderWidth","isRequired","pattern","isEmail","isNumeric","validates","createMutation","getPayload","fieldErrorMap","validators","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","flat","msg","startCase","mopts","hasErrors","x","variable","validator","validate","errors","requestAnimationFrame","useWindowDimensions","ScrollView","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","SignupScreen","useMutationSignUp","ScrollableScreen","buttonLabel","separator","Unauthenticated","SignUpScreen","createDropzone","federationId","updateDropzone","createPlane","dropzoneId","updatePlane","createTicketType","extraIds","updateTicketType","active","items","selected","isSelected","renderItemLabel","onChangeSelected","autoSelectFirst","itemSelected","previous","pick","FederationCardSelect","onSelect","federations","filter","Boolean","degreesToRadians","degrees","Math","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","AddressSearchBar","suggestions","setSuggestions","useAddressToLocationLazyQuery","fetchLocation","fetchSuggestions","search","fetchSuggestionsDebounced","debounce","geocode","onPickResult","location","formattedString","Searchbar","suggestion","Item","NumberFieldType","titleContainer","textShadowColor","textShadowRadius","textShadowOffset","markerFixed","zIndex","myLocation","LocationWizardStep","center","setCenter","setUsersLocation","status","coords","longitude","Animated","Value","region","latitudeDelta","longitudeDelta","fadeOut","timing","duration","toValue","useNativeDriver","fadeIn","setCoordinateFade","visible","start","isDragging","setDragging","mapStyle","y","onDragStart","onDragEnd","r","stop","interactive","MaterialCommunityIcons","MaterialIcons","autocomplete","toFixed","adornments","Cash","CanopySize","Weight","muiVariants","outlined","NumberField","onChangeValue","e","target","FormControl","sx","m","fullWidth","InputProps","endAdornment","InputAdornment","startAdornment","FormHelperText","cardTitle","cardValue","slider","sliderControl","wingLoading","wingLoadingCardLeft","wingLoadingCardRight","AircraftWizardScreen","Subheader","previewContainer","hairlineWidth","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","borderTopRightRadius","borderTopLeftRadius","previewTabBar","borderBottomRightRadius","borderBottomLeftRadius","previewLoadCard","marginHorizontal","previewLoadCard2","previewLoadCard3","previewButton","colorBox","PhonePreview","Surface","WebPreview","ColorPickerDialog","onClose","Portal","Dialog","onDismiss","sliderComponent","SliderComponent","defaultColor","hideSliders","Actions","getColor","COLOR_PRESETS","ColorPicker","isCustomColor","isDialogOpen","setDialogOpen","flexWrap","TouchableRipple","manipulate","ThemingStep","Phone","Web","Done","useRestriction","permission","useCurrentUserPermissionsLazyQuery","execute","PermissionListItem","description","permissionName","canChangePermissions","GrantPermission","useUpdateRoleMutation","mutationUpdatePermission","Switch","onValueChange","roleId","enabled","optimisticResponse","updateRole","QUERY_DROPZONE_PERMISSIONS","PermissionWizardScreen","dropzoneForm","useLazyQuery","queryRoles","called","roles","capitalize","UserAvatar","initals","n","join","stringToColor","string","hash","charCodeAt","initials","Avatar","bgcolor","src","MenuItem","bold","testID","onClick","data-testid","ListItemIcon","ListItemAvatar","ListItemText","Menu","anchor","anchorEl","setAnchorEl","event","currentTarget","anchorOrigin","vertical","transformOrigin","Select","renderAnchor","onOpen","selectedOption","option","createSelectHandler","showAvatars","openMenu","InputLabel","labelId","SelectDisplayProps","val","AltitudeSelect","altitudeSelect","paragraph","TicketTypeWizardScreen","useImagePicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","base64","avatarContainer","Logo","pickImage","onPickImage","DropzoneSetupScreen","aircraft","ticket","mutationCreateDropzone","useMutationCreateDropzone","mutationUpdateDropzone","useMutationUpdateDropzone","mutationCreatePlane","useMutationCreatePlane","mutationUpdatePlane","useMutationUpdatePlane","mutationCreateTicketType","useMutationCreateTicketType","mutationUpdateTicketType","useMutationUpdateTicketType","onNameNext","onFederationNext","onLogoNext","camelize","onAircraftNext","onTicketTypeNext","noop","Promise","resolve","NameStep","FederationStep","LocationStep","LogoStep","AircraftStep","TicketTypeStep","stepProps","CreateSlot","CreateUserSlot","updateUser","FederationWizardSceen","toUpperCase","RealName","UserInfoScreen","LicenseCardSelect","licenses","RigWizardScreen","isOtherMake","setIsOtherMake","DatePicker","timestamp","format","selectedDays","Date","onDayClick","date","getTime","ReserveRepackStep","time","AskForRigStep","paddingRight","WingloadingWizardScreen","rigForm","userForm","ceil","AvatarStep","UserWizardScreen","joinFederation","mutationUpdateUser","useMutationUpdateUser","mutationUpdateRig","useCreateRigMutation","mutationCreateRig","onNicknameNext","toLowerCase","mutationResult","userFederation","onFederationNumberNext","onLicenseNext","onRigNext","userId","createRig","updateRig","onReserveRepackNext","onWingloadingNext","onImageNext","RealNameStep","NicknameStep","FederationNumberStep","LicenseStep","RigStep","WingloadingStep","useRecoverPasswordMutation","onRecover","onClickRecover","redirectUrl","errorIcon","ConfirmUserScreen","route","useRoute","useConfirmUserMutation","confirmUser","setError","params","then","userConfirmRegistrationWithToken","catch","useUpdateLostPasswordMutation","updatePassword","onChangePassword","userUpdatePasswordWithToken","onFinished","useCurrentDropzone","useQueryDropzone","earliestTimestamp","startOfDay","fetchPolicy","remoteToken","localToken","defaultColors","ThemedSkeleton","boneColor","negate","rgb","highlightColor","Chip","assignedColor","chipStyle","iconStyles","selectedColor","iconProps","textStyle","isDisabled","isItemSelected","LicenseChipSelect","FederationSelect","RoleSelect","selectable","GhostForm","ticketAddons","noPadding","borderBottomWidth","defaultPadding","DialogOrSheet","disablePadding","scrollable","buttonAction","Drawer","PaperProps","overflowY","ProgressBar","indeterminate","IconButton","ScrollArea","createGhost","CreateGhostDialog","mutationCreateGhost","useMutationCreateGhost","onSave","snapPoints","useUserNavigation","UserCardSkeleton","isLoading","containerStyle","layout","loadingFragment","hasCredits","hasExitWeight","hasLicense","hasMembership","UsersScreen","ghostForm","isFocused","canCreateUser","CreateUser","floor","dropzoneUsers","initialLoading","fill","edge","refreshControl","RefreshControl","titleStyle","descriptionStyle","inputContainer","input","AppBar","onSearch","back","searchVisible","Appbar","Header","BackAction","autoFocus","RigInspectionItem","canInspect","ActAsRigInspector","config","valueType","Checkbox","Android","RigInspectionForm","RigCard","onSuccessfulImageUpload","isUploading","setUploading","useMutationUpdateRig","refetchQueries","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","textRow","chip","inspectedBy","dropzoneUserId","innerChip","RigInspectionScreen","useCreateRigInspectionMutation","mutationCreateRigInspection","rigInspections","inspection","record","isOk","createRigInspection","update","readQuery","query","currentDz","writeQuery","ins","newData","Badge","iconName","ActAsDzso","ActAsGca","ActAsLoadMaster","ActAsPilot","mutationHandlers","onCompleted","values","entry","PermissionBadges","canGrantPermission","useRevokePermissionMutation","c","updatedList","revoke","useGrantPermissionMutation","shouldUpdate","updatedGcaList","grantPermission","grant","badges","showsHorizontalScrollIndicator","shouldShowBadge","DropzoneUserForm","canUpdateRole","newRole","DropzoneUserDialog","useApolloClient","getCachedUser","readFragment","fragment","fragmentName","identify","useUpdateDropzoneUserMutation","mutationUpdateDropzoneUser","createData","userRoleId","updateDropzoneUser","CreditsForm","currentCredits","subtotal","DataTable","Row","Cell","numeric","useCreateOrderMutation","mutationCreateOrder","seller","Dropzone","DropzoneUser","buyer","createOrder","defaultIndex","onChangeIndex","newIndex","RigForm","showTypeSelect","canCreateRigs","CreateRig","keyboardType","RigDialog","useMutationCreateRig","d","onDialogClose","SlotForm","num","UpdateUserDialog","parseFloat","selectedLicenseFederation","slug","debug","useDropzoneUser","badgesInitials","UserHeader","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","primaryDark","actingPermissions","str","openURL","Caption","InfoGrid","verticalDivider","UserActionsButton","fabOpen","setFabOpen","rootNavigator","onClickSetupWizard","onClickAccessAndMembership","onClickTransactions","onClickEquipment","onClickAddFunds","onClickEdit","isSelf","canAddTransaction","CreateUserTransaction","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","canDeleteUsers","DeleteUser","useArchiveUserMutation","deleteUser","onDeleteUser","Alert","alert","fabActions","Group","fabStyle","onStateChange","SlotCard","transaction","transactionContent","loadNumber","transactionTitle","transactionDescription","avatarIcon","JumpHistoryTab","tabIndex","currentTabIndex","sections","groupBy","createdAt","toISOString","t","parseISO","differenceInDays","formatDistance","addSuffix","locale","enAU","easing","loadId","OrderCard","order","showAvatar","isSelfBuyer","__typename","orderContent","orderTitle","orderDescription","ProfileTabs","TransactionsTab","orders","orderId","EquipmentTab","insp","ProfileTab","Funds","Equipment","Jumps","TabBar","disableSwipe","ProfileScreen","useDropzoneUserProfile","headerRight","setOptions","useUpdateUserMutation","onCloseRigForm","onUserSheetClose","getContent","ListHeaderComponent","wrappingHeader","round","wrappingHeaderItem","minHeight","chipTitle","lineHeight","textAlignVertical","OrdersScreen","firstName","SectionList","renderSectionHeader","section","flatList","EquipmentScreen","getIcon","TransactionCard","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","rightStyle","receipts","Users","Routes","header","initialParams","OrderReceiptScreen","Wizards","DropzoneWizardScreen","RecoverPasswordScreen","ChangePasswordScreen","User","DrawerMenu","routeName","canUpdateDropzone","UpdateDropzone","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","canUpdateRigInspectionTemplate","UpdateFormTemplate","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","Section","DrawerActions","closeDrawer","profileHeader","AnimatedTabBar","Warning","contrast","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","hideWarnings","openDrawer","tintColor","isRigInspected","isRepackInDate","GCAChip","allowed","UpdateLoad","LoadMasterChip","PilotChip","PlaneChip","planes","ChipSelectSkeleton","rows","JumpTypeChipSelect","onLoadingStateChanged","allowedForDropzoneUserIds","uniqBy","allowedJumpTypes","jumpTypes","TicketTypeChipSelect","onlyPublicTickets","useAllowedTicketTypesQuery","RigSelect","tandem","useAvailableRigsLazyQuery","fetchRigs","ManifestForm","allowedToManifestOthers","UpdateUserSlot","ManifestUserDialog","_onClose","useManifestUserMutation","mutationCreateSlot","mutationData","portal","usePortal","removePortal","onManifest","createSlot","StyledTextField","styled","shouldForwardProp","prop","p","borderBottomColor","DropzoneUserAutocomplete","useDropzoneUsersLazyQuery","searchUsers","licensed","getOptionLabel","sort","b","localeCompare","nextValue","Autocomplete","renderInput","disableUnderline","onInputChange","inputValue","popupIcon","clearIcon","renderOption","menuItemProps","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","row","rowFirst","rowLast","UserCard","slotUser","newRig","ManifestGroupForm","canManifestOthers","createToggleTicketAddonHandler","firstUser","useManifestGroupMutation","mutationCreateSlots","userGroup","createSlots","useQueryDropzoneUserProfileLazyQuery","fetchProfile","onSelectUser","profile","wrapper","Toolbar","Fade","in","LinearProgress","buttonContainer","contentContainer","userListContainer","sheet","sheetHeader","shadowColor","shadowOffset","shadowOpacity","shadowRadius","updateLoad","deleteSlot","ActionButton","isExpanded","setExpanded","useFinalizeLoadMutation","mutationFinalizeLoad","mutationUpdateLoad","useMutationUpdateLoad","updateCall","minutes","dispatchTime","addMinutes","BoardingCall","Open","updateLoadState","onLanded","Landed","canUpdateLoad","canManifestSelf","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","isFull","showManifestButton","showGroupIcon","createCallAction","callActions","isToday","isSameDay","manifestActions","workflowActions","Cancelled","InFlight","buttonActions","CountdownCircleTimer","select","ios","android","web","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","RenderBadges","renderBadges","LinearGradient","isAfter","slotLoadingFragment","groupNumber","slotAvailableFragment","SlotFields","SwipeActions","rightAction","Swipeable","renderRightActions","dragX","childrenContainerStyle","useNativeAnimations","GROUP_COLORS","hsl","random","UserRow","onDeletePress","onSlotGroupPress","onSlotPress","canEditSelf","UpdateSlot","canEditOthers","canRemoveSelf","DeleteSlot","canRemoveOthers","DeleteUserSlot","slotGroup","isCurrentUser","isNumber","borderLeftWidth","borderLeftColor","hasLanded","slotText","License","Rig","WingLoading","JumpType","TicketType","Altitude","AvailableRow","SlotsTable","onAvailableSlotPress","useMemo","th","LoadScreen","numFields","availableSlots","pollInterval","updatePilot","updateGCA","updateLoadMaster","lm","occupiedSlots","mutationDeleteSlot","useMutationDeleteSlot","onDeleteSlot","weight","WizardPagination","paginationIndex","icons","Dimensions","get","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","scrollToIndex","animated","Provider","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","wizardScreen","buttonBack","buttons","WizardScreen","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","scrollTo","WizardCompleteStep","createWeatherCondition","WindRow","direction","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","altitudeOption","alt","strengthCard","onBlur","newSpeed","match","numbers","textField","directionCard","newDir","CARD_STYLE","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","set","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","JumpRunSelector","rootLayout","setRootLayout","MAP_SIZE","originX","originY","origin","setOrigin","rotation","planePosition","planeAnimation","resetBeforeIteration","onGestureEvent","setValue","nativeEvent","currentCoordinates","angle","onMountRotatableView","planeStartPosition","getPointOnCircle","offsetX","offsetY","radius","onBegan","onEnded","onLayout","maxHeight","shape","iconContainer","rotate","translateY","degreeLabel","bottomDegreeLabel","borderStyle","textInput","setLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","Winds","JumpRun","JumpRunScreen","useAuthenticatedNavigation","WindScreen","createLoad","DropzoneUserChipSelect","requiredPermissions","getItemLabel","PlaneChipSelect","LoadForm","LoadDialog","useMutationCreateLoad","snackbar","usePalette","GetStarted","hasPlanes","hasTicketTypes","LoadingCard","LoadCard","initialRecord","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","smallChip","smallChipText","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","v","differenceInMinutes","WeatherBoard","conditions","currentConditions","canUpdate","UpdateWeatherConditions","hasWeatherConditions","Easing","inOut","ease","onEditWindboard","onEditJumprun","defaultBackground","nightBackground","weatherBackground","onLongPress","cell","FontAwesome","windboard","orderBy","noData","noDataLabel","SetupProfileCard","setupProfileCardFragment","ManifestScreen","manifestScreen","setup","isDisplayOptionsOpen","setDisplayOptionsOpen","isSetupCheckComplete","fetchMore","dropzoneWizardIndex","isComplete","checkDropzoneSetupComplete","isSetupComplete","canCreateLoad","CreateLoad","hasRigInspection","hasReserveInDate","cardWidth","contentWidth","loads","SettingsScreen","TicketTypeForm","TicketTypeDialog","TicketTypesScreen","form","useUpdateTicketTypeMutation","useArchiveTicketTypeMutation","mutationDeleteTicketType","canCreateTicketTypes","CreateTicketType","archiveTicketType","markerSize","labelSize","isAnimating","setAnimating","DropzoneForm","outsideLoading","skeletonCard","imagePickLight","imagePickDark","skeletonCardColorPicker","skeletonCardCheckbox","descriptionNumberOfLines","extraProps","moderationRole","subheader","UpdateDropzoneScreen","isDirty","CreatePlaneScreen","useCreatePlaneMutation","useUpdatePlaneMutation","onUpdatePlane","onCreate","PlanesScreen","useArchivePlaneMutation","deletePlane","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","RigInspectionTemplateForm","newItem","setNewItem","onTouchEnd","RigInspectionTemplateScreen","useRigInspectionTemplateQuery","canEdit","useUpdateRigInspectionTemplateMutation","mutationUpdateForm","updateForm","formId","DropzoneRigsScreen","useDropzoneRigsQuery","updateData","canCreateRig","CreateDropzoneRig","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","useQuery","masterLog","TransactionsScreen","useDropzoneTransactionsLazyQuery","fetchTransactions","createExtra","ticketTypeIds","updateExtra","ExtraForm","TicketTypeExtraDialog","useMutationCreateExtra","useMutationUpdateExtra","ExtrasScreen","formState","canCreateExtras","CreateExtra","Configuration","SettingsTab","SettingsMenuScreen","DropzoneSettingsScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","Manifest","ManifestTab","forUIKit","QUERY_DROPZONE_USER_NOTIFICATIONS","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","ManifestedNotification","resource","initial","BoardingCallNotification","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","useNotifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","Notification","NotificationsScreen","BottomTab","createBottomTabNavigator","AnimatedIcon","createAnimatedComponent","AuthenticatedTabBar","Appearance","getColorScheme","canViewUsers","ReadUser","tabConfig","activeColor","inactiveColor","tabs","animatedFocus","iconActive","tabBarProps","tabBar","preset","borderTopColor","borderTopWidth","inactiveOpacity","inactiveScale","tabBarActiveTintColor","tabBarInactiveBackgroundColor","backdrop","tabBarActiveBackgroundColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","tabBarLabel","focused","tabBarIcon","unmountOnBlur","NotificationsTab","UsersTab","createDrawerNavigator","DrawerNavigator","drawerContent","drawerType","Authenticated","prefixes","Linking","LeftDrawer","AircraftScreen","MasterLogScreen","AircraftsScreen","PermissionScreen","UserListScreen","DropzoneSelectScreen","SignUpWizard","RootNavigator","muiTheme","createTheme","secondary","paper","common","white","black","window","matchMedia","addListener","matches","ThemeProvider","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","Sentry","dsn","SENTRY_DSN","enableInExpoDevelopment","googleMapsApiKey","googleMapsIos","googleMapsAndroid","googleMapsWeb","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","listener","addChangeListener","colorScheme","handler","remove","isDevice","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","registerForPushNotificationsAsync","request","body","addEventListener","removeEventListener","onRouteChange","s","getPathFromState","reverse","screenName","fallback","NavigationContainer","linking","LinkingConfiguration","StatusBar","Geocoder","init","setGoogleApiKey","registerRootComponent","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","SplashScreen","Ionicons","font","useCachedResources","ActivityIndicator","DEFAULT_COORDS","Map","_coords","isLoaded","useJsApiLoader","onLoad","bounds","google","maps","LatLngBounds","fitBounds","panTo","onUnmount","mapTypeId","MapTypeId","HYBRID","mapContainerStyle","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","sin","module","exports","CENTER_Y","CENTER_X","animate","scaleX"],"mappings":"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","file":"static/js/app.6e3c0fc8.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function Wrapper({ children }: { children: React.ReactNode }) {\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type AnyResource = {\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of Apple */\nexport type ApplePayload = {\n  __typename?: 'ApplePayload';\n  authenticatable?: Maybe<User>;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateExtra */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateRigInspection */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteDropzone */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteLoad */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeletePlane */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteRig */\nexport type DeleteRigInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteRig */\nexport type DeleteRigPayload = {\n  __typename?: 'DeleteRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteSlot */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteTicket */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of DeleteUser */\nexport type DeleteUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the dropzone user to delete */\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteUser */\nexport type DeleteUserPayload = {\n  __typename?: 'DeleteUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  dropzoneUsers: DropzoneUserConnection;\n  extras: Array<Extra>;\n  federation: Federation;\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  isPublic: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  loads: LoadConnection;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  requestPublication: Scalars['Boolean'];\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  statistics: Statistics;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['Int'];\n  userRoles: Array<UserRole>;\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: InputMaybe<Scalars['Int']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  licensed?: InputMaybe<Scalars['Boolean']>;\n  permissions?: InputMaybe<Array<Permission>>;\n  search?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type DropzoneLoadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  earliestTimestamp?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  banner?: InputMaybe<Scalars['String']>;\n  federationId: Scalars['Int'];\n  isCreditSystemEnabled?: InputMaybe<Scalars['Boolean']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  lat?: InputMaybe<Scalars['Float']>;\n  lng?: InputMaybe<Scalars['Float']>;\n  name: Scalars['String'];\n  primaryColor?: InputMaybe<Scalars['String']>;\n  requestPublication?: InputMaybe<Scalars['Boolean']>;\n  secondaryColor?: InputMaybe<Scalars['String']>;\n};\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['Int'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['Int'];\n  user: User;\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  credits?: InputMaybe<Scalars['Float']>;\n  expiresAt?: InputMaybe<Scalars['Int']>;\n  userRoleId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Event = {\n  __typename?: 'Event';\n  action?: Maybe<EventAction>;\n  createdBy?: Maybe<DropzoneUser>;\n  id: Scalars['ID'];\n  level?: Maybe<EventLevel>;\n  message?: Maybe<Scalars['String']>;\n  resource?: Maybe<AnyResource>;\n};\n\nexport enum EventAction {\n  /** assigned */\n  Assigned = 'assigned',\n  /** confirmed */\n  Confirmed = 'confirmed',\n  /** created */\n  Created = 'created',\n  /** deleted */\n  Deleted = 'deleted',\n  /** updated */\n  Updated = 'updated'\n}\n\n/** The connection type for Event. */\nexport type EventConnection = {\n  __typename?: 'EventConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EventEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Event>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type EventEdge = {\n  __typename?: 'EventEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Event>;\n};\n\nexport enum EventLevel {\n  /** debug */\n  Debug = 'debug',\n  /** error */\n  Error = 'error',\n  /** info */\n  Info = 'info'\n}\n\nexport type Extra = SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type ExtraInput = {\n  cost?: InputMaybe<Scalars['Float']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  ticketTypeIds?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Autogenerated return type of Facebook */\nexport type FacebookPayload = {\n  __typename?: 'FacebookPayload';\n  authenticatable?: Maybe<User>;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  licenses?: Maybe<Array<License>>;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  state: LoadState;\n};\n\n/** Autogenerated return type of FinalizeLoad */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['Int'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FormTemplateInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type GeocodedLocation = {\n  __typename?: 'GeocodedLocation';\n  formattedString?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  lat?: Maybe<Scalars['Float']>;\n  lng: Scalars['Float'];\n};\n\nexport type GhostInput = {\n  dropzoneId: Scalars['Int'];\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  federationNumber?: InputMaybe<Scalars['String']>;\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  phone?: InputMaybe<Scalars['String']>;\n  roleId: Scalars['Int'];\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of GrantPermission */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['Int'];\n  federation?: Maybe<Federation>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['Int'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['Int'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: InputMaybe<Scalars['Int']>;\n  gca?: InputMaybe<Scalars['Int']>;\n  hasLanded?: InputMaybe<Scalars['Boolean']>;\n  isOpen?: InputMaybe<Scalars['Boolean']>;\n  loadMaster?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  pilot?: InputMaybe<Scalars['Int']>;\n  plane?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** open */\n  Open = 'open'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum ModerationRole {\n  /** administrator */\n  Administrator = 'administrator',\n  /** moderator */\n  Moderator = 'moderator',\n  /** support */\n  Support = 'support',\n  /** user */\n  User = 'user'\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  archiveRig?: Maybe<DeleteRigPayload>;\n  archiveTicketType?: Maybe<DeleteTicketPayload>;\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteUser?: Maybe<DeleteUserPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  loginWithApple?: Maybe<ApplePayload>;\n  loginWithFacebook?: Maybe<FacebookPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<UserRegisterPayload>;\n  userResendConfirmation?: Maybe<UserResendConfirmationPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordReset?: Maybe<UserSendPasswordResetPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userSignUp?: Maybe<UserSignUpPayload>;\n  userUpdatePassword?: Maybe<UserUpdatePasswordPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationArchiveRigArgs = {\n  input: DeleteRigInput;\n};\n\n\nexport type MutationArchiveTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input: DeleteUserInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationLoginWithAppleArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n  userIdentity: Scalars['String'];\n};\n\n\nexport type MutationLoginWithFacebookArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n};\n\n\nexport type MutationUserResendConfirmationArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  confirmUrl: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSignUpArgs = {\n  confirmSuccessUrl?: InputMaybe<Scalars['String']>;\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  phone: Scalars['String'];\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordArgs = {\n  currentPassword?: InputMaybe<Scalars['String']>;\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** system */\n  System = 'system',\n  /** user_manifested */\n  UserManifested = 'user_manifested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  /** Total amount of the order */\n  amount: Scalars['Int'];\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: WalletInput;\n  dropzoneId: Scalars['Int'];\n  sellableItem?: InputMaybe<SellableItemInput>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: WalletInput;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport enum OrderState {\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** completed */\n  Completed = 'completed',\n  /** pending */\n  Pending = 'pending',\n  /** refunded */\n  Refunded = 'refunded'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  /** actAsDZSO */\n  ActAsDzso = 'actAsDZSO',\n  /** actAsGCA */\n  ActAsGca = 'actAsGCA',\n  /** actAsLoadMaster */\n  ActAsLoadMaster = 'actAsLoadMaster',\n  /** actAsPilot */\n  ActAsPilot = 'actAsPilot',\n  /** actAsRigInspector */\n  ActAsRigInspector = 'actAsRigInspector',\n  /** createDoubleSlot */\n  CreateDoubleSlot = 'createDoubleSlot',\n  /** createDropzoneRig */\n  CreateDropzoneRig = 'createDropzoneRig',\n  /** createExtra */\n  CreateExtra = 'createExtra',\n  /** createFormTemplate */\n  CreateFormTemplate = 'createFormTemplate',\n  /** createLoad */\n  CreateLoad = 'createLoad',\n  /** createPackjob */\n  CreatePackjob = 'createPackjob',\n  /** createPlane */\n  CreatePlane = 'createPlane',\n  /** createRig */\n  CreateRig = 'createRig',\n  /** createSlot */\n  CreateSlot = 'createSlot',\n  /** createStudentSlot */\n  CreateStudentSlot = 'createStudentSlot',\n  /** createTicketType */\n  CreateTicketType = 'createTicketType',\n  /** createUser */\n  CreateUser = 'createUser',\n  /** createUserDoubleSlot */\n  CreateUserDoubleSlot = 'createUserDoubleSlot',\n  /** createUserSlot */\n  CreateUserSlot = 'createUserSlot',\n  /** createUserSlotWithSelf */\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  /** createUserTransaction */\n  CreateUserTransaction = 'createUserTransaction',\n  /** deleteDropzone */\n  DeleteDropzone = 'deleteDropzone',\n  /** deleteDropzoneRig */\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  /** deleteExtra */\n  DeleteExtra = 'deleteExtra',\n  /** deleteFormTemplate */\n  DeleteFormTemplate = 'deleteFormTemplate',\n  /** deleteLoad */\n  DeleteLoad = 'deleteLoad',\n  /** deletePackjob */\n  DeletePackjob = 'deletePackjob',\n  /** deletePlane */\n  DeletePlane = 'deletePlane',\n  /** deleteRig */\n  DeleteRig = 'deleteRig',\n  /** deleteSlot */\n  DeleteSlot = 'deleteSlot',\n  /** deleteStudentSlot */\n  DeleteStudentSlot = 'deleteStudentSlot',\n  /** deleteTicketType */\n  DeleteTicketType = 'deleteTicketType',\n  /** deleteUser */\n  DeleteUser = 'deleteUser',\n  /** deleteUserSlot */\n  DeleteUserSlot = 'deleteUserSlot',\n  /** grantPermission */\n  GrantPermission = 'grantPermission',\n  /** readDropzoneRig */\n  ReadDropzoneRig = 'readDropzoneRig',\n  /** readExtra */\n  ReadExtra = 'readExtra',\n  /** readFormTemplate */\n  ReadFormTemplate = 'readFormTemplate',\n  /** readLoad */\n  ReadLoad = 'readLoad',\n  /** readPackjob */\n  ReadPackjob = 'readPackjob',\n  /** readPermissions */\n  ReadPermissions = 'readPermissions',\n  /** readRig */\n  ReadRig = 'readRig',\n  /** readUser */\n  ReadUser = 'readUser',\n  /** readUserTransactions */\n  ReadUserTransactions = 'readUserTransactions',\n  /** revokePermission */\n  RevokePermission = 'revokePermission',\n  /** undeleteDropzone */\n  UndeleteDropzone = 'undeleteDropzone',\n  /** undeleteDropzoneRig */\n  UndeleteDropzoneRig = 'undeleteDropzoneRig',\n  /** undeleteExtra */\n  UndeleteExtra = 'undeleteExtra',\n  /** undeletePlane */\n  UndeletePlane = 'undeletePlane',\n  /** undeleteRig */\n  UndeleteRig = 'undeleteRig',\n  /** undeleteStudentSlot */\n  UndeleteStudentSlot = 'undeleteStudentSlot',\n  /** undeleteTicketType */\n  UndeleteTicketType = 'undeleteTicketType',\n  /** undeleteUser */\n  UndeleteUser = 'undeleteUser',\n  /** undeleteUserSlot */\n  UndeleteUserSlot = 'undeleteUserSlot',\n  /** updateDropzone */\n  UpdateDropzone = 'updateDropzone',\n  /** updateDropzoneRig */\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  /** updateExtra */\n  UpdateExtra = 'updateExtra',\n  /** updateFormTemplate */\n  UpdateFormTemplate = 'updateFormTemplate',\n  /** updateLoad */\n  UpdateLoad = 'updateLoad',\n  /** updatePackjob */\n  UpdatePackjob = 'updatePackjob',\n  /** updatePermissions */\n  UpdatePermissions = 'updatePermissions',\n  /** updatePlane */\n  UpdatePlane = 'updatePlane',\n  /** updateRig */\n  UpdateRig = 'updateRig',\n  /** updateSlot */\n  UpdateSlot = 'updateSlot',\n  /** updateStudentSlot */\n  UpdateStudentSlot = 'updateStudentSlot',\n  /** updateTicketType */\n  UpdateTicketType = 'updateTicketType',\n  /** updateUser */\n  UpdateUser = 'updateUser',\n  /** updateUserSlot */\n  UpdateUserSlot = 'updateUserSlot',\n  /** updateWeatherConditions */\n  UpdateWeatherConditions = 'updateWeatherConditions'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots?: Maybe<Scalars['Int']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type PlaneInput = {\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  hours?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  minSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nextMaintenanceHours?: InputMaybe<Scalars['Int']>;\n  registration?: InputMaybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get all Activity Events for a dropzone (or all dropzones) */\n  activity: EventConnection;\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  /** Get dropzone details */\n  dropzone?: Maybe<Dropzone>;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get all ticket type extras */\n  extras: Array<Extra>;\n  /** Get all available federations */\n  federations: Array<Federation>;\n  /** Find location by searching */\n  geocode?: Maybe<GeocodedLocation>;\n  /** Get Base64 images via GraphQL */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load?: Maybe<Load>;\n  /** Get all loads */\n  loads: LoadConnection;\n  /** Get Aircrafts for a dropzone */\n  planes?: Maybe<Array<Plane>>;\n  /** Get ticket types for a dropzone */\n  ticketTypes?: Maybe<Array<TicketType>>;\n  userCheckPasswordToken: User;\n  userConfirmAccount: User;\n};\n\n\nexport type QueryActivityArgs = {\n  actions?: InputMaybe<Array<EventAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  createdBy?: InputMaybe<Scalars['Int']>;\n  dropzone: Scalars['Int'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  levels?: InputMaybe<Array<EventLevel>>;\n};\n\n\nexport type QueryAvailableRigsArgs = {\n  dropzoneUser: Scalars['Int'];\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  last?: InputMaybe<Scalars['Int']>;\n  requestedPublication?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzone: Scalars['Int'];\n};\n\n\nexport type QueryGeocodeArgs = {\n  search: Scalars['String'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  dropzoneUsers?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['Int'];\n  earliestTimestamp?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  dropzone: Scalars['Int'];\n};\n\n\nexport type QueryUserCheckPasswordTokenArgs = {\n  redirectUrl?: InputMaybe<Scalars['String']>;\n  resetPasswordToken: Scalars['String'];\n};\n\n\nexport type QueryUserConfirmAccountArgs = {\n  confirmationToken: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of RevokePermission */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n  user?: Maybe<User>;\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\nexport type RigInput = {\n  canopySize?: InputMaybe<Scalars['Int']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  maintainedAt?: InputMaybe<Scalars['Int']>;\n  make?: InputMaybe<Scalars['String']>;\n  model?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  packValue?: InputMaybe<Scalars['Int']>;\n  packingCard?: InputMaybe<Scalars['String']>;\n  repackExpiresAt?: InputMaybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: InputMaybe<Scalars['String']>;\n  serial?: InputMaybe<Scalars['String']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['Int'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type RigInspectionInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzone?: InputMaybe<Scalars['Int']>;\n  isOk?: InputMaybe<Scalars['Boolean']>;\n  rig?: InputMaybe<Scalars['Int']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type SellableItemInput = {\n  /** ID of the record */\n  id: Scalars['ID'];\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  type: SellableItemTypes;\n};\n\nexport enum SellableItemTypes {\n  Extra = 'extra',\n  Pack = 'pack',\n  Slot = 'slot',\n  TicketType = 'ticketType'\n}\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  user?: Maybe<User>;\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUser?: InputMaybe<Scalars['Int']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  extras?: InputMaybe<Array<Scalars['Int']>>;\n  jumpType?: InputMaybe<Scalars['Int']>;\n  load?: InputMaybe<Scalars['Int']>;\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['Int']>;\n  ticketType?: InputMaybe<Scalars['Int']>;\n  userGroup?: InputMaybe<Array<SlotUser>>;\n};\n\nexport type SlotUser = {\n  exitWeight: Scalars['Float'];\n  id: Scalars['Int'];\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Statistics = {\n  __typename?: 'Statistics';\n  activeUserCount: Scalars['Int'];\n  cancelledLoadsCount: Scalars['Int'];\n  dzsoCount: Scalars['Int'];\n  finalizedLoadsCount: Scalars['Int'];\n  gcaCount: Scalars['Int'];\n  inactiveUserCount: Scalars['Int'];\n  loadsCount: Scalars['Int'];\n  pilotCount: Scalars['Int'];\n  revenueCentsCount: Scalars['Int'];\n  rigInspectorCount: Scalars['Int'];\n  totalUserCount: Scalars['Int'];\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type TicketTypeInput = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  altitude?: InputMaybe<Scalars['Int']>;\n  cost?: InputMaybe<Scalars['Float']>;\n  currency?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  extraIds?: InputMaybe<Array<Scalars['Int']>>;\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser: DropzoneUser;\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum TransactionStatus {\n  Cancelled = 'cancelled',\n  Completed = 'completed',\n  Reserved = 'reserved'\n}\n\nexport enum TransactionType {\n  Deposit = 'deposit',\n  Purchase = 'purchase',\n  Refund = 'refund',\n  Sale = 'sale',\n  Withdrawal = 'withdrawal'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateDropzone */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateExtra */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateLoad */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateNotification */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdatePlane */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  enabled: Scalars['Boolean'];\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Scalars['String'];\n};\n\n/** Autogenerated return type of UpdateRole */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateSlot */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateTicket */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateUser */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  licenses?: Maybe<Array<License>>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['Int'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federationId: Scalars['Int'];\n  licenseId?: InputMaybe<Scalars['Int']>;\n  /** User Federation ID, e.g APF number */\n  uid?: InputMaybe<Scalars['String']>;\n};\n\nexport type UserInput = {\n  apfNumber?: InputMaybe<Scalars['String']>;\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  image?: InputMaybe<Scalars['String']>;\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserLogin */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserRegister */\nexport type UserRegisterPayload = {\n  __typename?: 'UserRegisterPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n};\n\n/** Autogenerated return type of UserResendConfirmation */\nexport type UserResendConfirmationPayload = {\n  __typename?: 'UserResendConfirmationPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated return type of UserSendPasswordReset */\nexport type UserSendPasswordResetPayload = {\n  __typename?: 'UserSendPasswordResetPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSignUp */\nexport type UserSignUpPayload = {\n  __typename?: 'UserSignUpPayload';\n  authenticatable?: Maybe<User>;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated return type of UserUpdatePassword */\nexport type UserUpdatePasswordPayload = {\n  __typename?: 'UserUpdatePasswordPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\nexport type WalletInput = {\n  /** ID of the record */\n  id: Scalars['ID'];\n  /** Any model with an account, e.g DropzoneUser or Dropzone */\n  type: WalletableTypes;\n};\n\nexport enum WalletableTypes {\n  Dropzone = 'dropzone',\n  DropzoneUser = 'dropzoneUser'\n}\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['Int'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['Int'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  dropzoneId: Scalars['Int'];\n  exitSpotMiles?: InputMaybe<Scalars['Int']>;\n  jumpRun?: InputMaybe<Scalars['Int']>;\n  offsetDirection?: InputMaybe<Scalars['String']>;\n  offsetMiles?: InputMaybe<Scalars['Int']>;\n  temperature?: InputMaybe<Scalars['Int']>;\n  winds?: InputMaybe<Scalars['String']>;\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserDetailsFragment } from 'app/api/operations';\nimport { Transaction, TransactionType } from '../../../api/schema.d';\n\ntype Fields = Pick<Transaction, 'amount' | 'transactionType' | 'message'>;\n\ninterface IDropzoneEditState {\n  original: DropzoneUserDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Transaction[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    amount: {\n      value: null,\n      error: null,\n    },\n    transactionType: {\n      value: TransactionType.Deposit,\n      error: null,\n    },\n    message: {\n      value: '',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/credits',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<DropzoneUserDetailsFragment | boolean>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneDetailedFragment, DropzoneExtensiveFragment } from 'app/api/operations';\n\nexport type DropzoneFields = Pick<\n  DropzoneDetailedFragment,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'isPublic'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n  | 'requestPublication'\n>;\n\ninterface IDropzoneEditState {\n  original: DropzoneExtensiveFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: DropzoneDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    isPublic: {\n      value: false,\n      error: null,\n    },\n    requestPublication: {\n      value: false,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<boolean | DropzoneExtensiveFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<DropzoneExtensiveFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<DropzoneUserEssentialsFragment, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUserEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUserEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IDropzoneUserEditState,\n      action: PayloadAction<boolean | DropzoneUserEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.role.value = action.payload.role;\n        state.fields.expiresAt.value = action.payload.expiresAt;\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketTypeExtraDetailedFragment } from 'app/api/operations';\n\nexport type ExtraFields = Pick<TicketTypeExtraDetailedFragment, 'name' | 'cost' | 'ticketTypes'>;\ninterface IExtraEditState {\n  original: TicketTypeExtraDetailedFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ExtraFields]-?: {\n      value: TicketTypeExtraDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IExtraEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    ticketTypes: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/extra',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IExtraEditState,\n      action: PayloadAction<boolean | TicketTypeExtraDetailedFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.ticketTypes.value = action.payload.ticketTypes;\n        state.fields.cost.value = action.payload.cost;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: IExtraEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nexport type LoadFields = Pick<\n  LoadDetailsFragment,\n  'name' | 'gca' | 'dispatchAt' | 'isOpen' | 'loadMaster' | 'pilot' | 'maxSlots' | 'plane'\n>;\n\ninterface ILoadEditState {\n  original: LoadDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof LoadFields]-?: {\n      value: LoadDetailsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ILoadEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    gca: {\n      value: null,\n      error: null,\n    },\n    dispatchAt: {\n      value: null,\n      error: null,\n    },\n    isOpen: {\n      value: true,\n      error: null,\n    },\n    loadMaster: {\n      value: null,\n      error: null,\n    },\n    pilot: {\n      value: null,\n      error: null,\n    },\n    plane: {\n      value: null,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/load',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ILoadEditState, action: PayloadAction<boolean | LoadDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.dispatchAt.value = action.payload.dispatchAt;\n        state.fields.gca.value = action.payload.gca;\n        state.fields.isOpen.value = action.payload.isOpen;\n        state.fields.loadMaster.value = action.payload.loadMaster;\n        state.fields.maxSlots.value = action.payload.maxSlots;\n        state.fields.name.value = action.payload.name;\n        state.fields.pilot.value = action.payload.pilot;\n        state.fields.plane.value = action.payload.plane;\n      }\n    },\n\n    reset: (state: ILoadEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\nimport { User } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email'> &\n  Pick<DropzoneUserDetailsFragment, 'role' | 'license'>;\n\ninterface IGhostEditState {\n  original: UserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (\n      state: IGhostEditState,\n      action: PayloadAction<FederationEssentialsFragment>\n    ) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IGhostEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload.user;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license' || typedKey === 'role') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\n\nexport type PlaneFields = Omit<PlaneEssentialsFragment, 'id' | '__typename'>;\n\ninterface IPlaneEditState {\n  original: PlaneEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof PlaneFields]-?: {\n      value: PlaneEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IPlaneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    registration: {\n      value: '',\n      error: null,\n    },\n    minSlots: {\n      value: 0,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'Plane',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IPlaneEditState, action: PayloadAction<boolean | PlaneEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.minSlots.value = action.payload.minSlots || 0;\n        state.fields.maxSlots.value = action.payload.maxSlots || 3;\n        state.fields.name.value = action.payload.name || '';\n        state.fields.registration.value = action.payload.registration || '';\n      }\n    },\n\n    setOriginal: (state: IPlaneEditState, action: PayloadAction<PlaneEssentialsFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      state.fields.minSlots.value = action.payload.minSlots || 0;\n      state.fields.maxSlots.value = action.payload.maxSlots || 3;\n      state.fields.name.value = action.payload.name || '';\n      state.fields.registration.value = action.payload.registration || '';\n    },\n\n    reset: (state: IPlaneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RigEssentialsFragment } from 'app/api/operations';\n\nexport type RigFields = Pick<\n  RigEssentialsFragment,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: RigEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: RigEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | RigEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.make.value = action.payload.make;\n        state.fields.name.value = action.payload.name;\n        state.fields.model.value = action.payload.model;\n        state.fields.serial.value = action.payload.serial;\n        state.fields.repackExpiresAt.value = action.payload.repackExpiresAt;\n        state.fields.canopySize.value = action.payload.canopySize;\n        state.fields.rigType.value = action.payload.rigType;\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<RigEssentialsFragment>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        if (error instanceof Error) {\n          console.error('Failed to read rig inspection template', error.message, action.payload);\n        }\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotDetailsFragment, SlotExhaustiveFragment } from 'app/api/operations';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: SlotDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | SlotDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.rig.value = action.payload.rig;\n        state.fields.ticketType.value = action.payload.ticketType;\n        state.fields.dropzoneUser.value = action.payload.dropzoneUser;\n        state.fields.exitWeight.value = action.payload.exitWeight;\n        state.fields.passengerName.value = action.payload.passengerName;\n        state.fields.passengerExitWeight.value = action.payload.passengerExitWeight;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserProfileFragment,\n  LoadEssentialsFragment,\n  RigEssentialsFragment,\n  SlotDetailsFragment,\n} from 'app/api/operations';\nimport { first, xorBy } from 'lodash';\nimport { SlotUser } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = Omit<SlotUser, 'rig'> & {\n  rigId?: number;\n  rig?: RigEssentialsFragment;\n  avatar?: string;\n  name?: string;\n};\n\ninterface IFields\n  extends Pick<\n    SlotDetailsFragment & { load: LoadEssentialsFragment },\n    'jumpType' | 'load' | 'ticketType' | 'extras'\n  > {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (\n      state: ISlotEditState,\n      action: PayloadAction<{ load: LoadEssentialsFragment; slots: SlotDetailsFragment[] }>\n    ) => {\n      console.log('Setting from ', action.payload.slots);\n      state.fields.users.value = action.payload.slots.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        rig: slot.rig,\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUserWithRig[];\n\n      state.fields.jumpType.value = action.payload.slots.find((i) => i)?.jumpType;\n      state.fields.load.value = action.payload.load;\n      state.fields.extras.value = action.payload.slots.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (\n      state: ISlotEditState,\n      action: PayloadAction<DropzoneUserProfileFragment[]>\n    ) => {\n      state.fields.users.value = xorBy(\n        state.fields.users.value,\n        action.payload?.map((dzUser) => {\n          const autoSelectedRig = dzUser?.user?.rigs?.length\n            ? first(dzUser.user.rigs)\n            : first(dzUser.availableRigs);\n          return {\n            id: Number(dzUser.id),\n            rigId: autoSelectedRig?.id ? Number(autoSelectedRig.id) : null,\n            rig: autoSelectedRig,\n            name: dzUser.user.name,\n            avatar: dzUser.user.image,\n            exitWeight: Number(dzUser?.user?.exitWeight),\n          };\n        }) as SlotUserWithRig[],\n        'id'\n      );\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.load.value = action.payload.load;\n        state.fields.users.value = action.payload.users;\n        state.fields.ticketType.value = action.payload.ticketType;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\n\nexport type TicketTypeFields = Pick<\n  TicketTypeEssentialsFragment,\n  'name' | 'cost' | 'isTandem' | 'allowManifestingSelf' | 'altitude' | 'extras'\n>;\n\ninterface ITicketTypeEditState {\n  original: TicketTypeEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof TicketTypeFields]-?: {\n      value: TicketTypeEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ITicketTypeEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    altitude: {\n      value: 14000,\n      error: null,\n    },\n    allowManifestingSelf: {\n      value: false,\n      error: null,\n    },\n    isTandem: {\n      value: false,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ticketType',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (\n      state: ITicketTypeEditState,\n      action: PayloadAction<TicketTypeEssentialsFragment>\n    ) => {\n      state.original = action.payload;\n      state.open = true;\n      state.fields.altitude.value = action.payload.altitude || 0;\n      state.fields.cost.value = action.payload.cost || 0;\n      state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n      state.fields.name.value = action.payload.name || '';\n    },\n\n    setOpen: (\n      state: ITicketTypeEditState,\n      action: PayloadAction<boolean | TicketTypeEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.altitude.value = action.payload.altitude || 0;\n        state.fields.cost.value = action.payload.cost || 0;\n        state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: ITicketTypeEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\n\nexport type UserFields = Pick<\n  UserDetailedFragment & { license?: LicenseDetailsFragment },\n  | 'exitWeight'\n  | 'rigs'\n  | 'name'\n  | 'phone'\n  | 'email'\n  | 'apfNumber'\n  | 'nickname'\n  | 'license'\n  | 'image'\n>;\n\ninterface IUserEditState {\n  original: UserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: UserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    image: {\n      value: null,\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<FederationEssentialsFragment>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (state: IUserEditState, action: PayloadAction<DropzoneUserDetailsFragment>) => {\n      state.original = action.payload.user;\n      state.federation.value =\n        action.payload.license?.federation ||\n        action.payload?.user?.userFederations?.find((i) => i)?.federation ||\n        null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        state.fields.apfNumber.value = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid;\n      }\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          if (typedKey === 'license') {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n              typedKey\n            ];\n          } else {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n              typedKey\n            ];\n          }\n        }\n      });\n    },\n\n    setOpen: (\n      state: IUserEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload.user;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherConditionEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<\n  WeatherConditionEssentialsFragment,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherConditionEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherConditionEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherConditionEssentialsFragment)[\n                typedKey\n              ];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as credits from './credits/slice';\nimport * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as extra from './extra/slice';\nimport * as load from './load/slice';\nimport * as ghost from './ghost/slice';\nimport * as plane from './plane/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as ticketType from './ticket_type/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  credits: credits.initialState,\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  extra: extra.initialState,\n  ghost: ghost.initialState,\n  load: load.initialState,\n  plane: plane.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  ticketType: ticketType.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  credits: credits.default,\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  extra: extra.default,\n  ghost: ghost.default,\n  load: load.default,\n  plane: plane.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  ticketType: ticketType.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUserEssentialsFragment[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (\n      state: IManifestScreenState,\n      action: PayloadAction<DropzoneUserEssentialsFragment[]>\n    ) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserWizardState {\n  skipRigSetup: boolean;\n}\n\nexport const initialState: IUserWizardState = {\n  skipRigSetup: false,\n};\n\nexport default createSlice({\n  name: 'screens/userWizard',\n  initialState,\n  reducers: {\n    skipRigSetup: (state: IUserWizardState, action: PayloadAction<boolean>) => {\n      state.skipRigSetup = action.payload;\n    },\n  },\n});\n","import * as users from './authenticated/user/user_list/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/dropzone/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './wizards/dropzone_wizard/slice';\nimport * as userWizard from './wizards/user_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  userWizard: userWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n  userWizard: userWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport merge from 'lodash/merge';\nimport { DropzoneExtensiveFragment, UserDetailedFragment } from '../api/operations';\nimport { Credential } from '../api/schema.d';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' },\n  },\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme: Theme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' as const },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' as const },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' as const },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' as const },\n  },\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: UserDetailedFragment | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: DropzoneExtensiveFragment | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  currentRouteName: string;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  currentRouteName: '',\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<UserDetailedFragment>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setCurrentRouteName: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.currentRouteName = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<DropzoneExtensiveFragment | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAppearance: (state: IGlobalState, action: PayloadAction<'light' | 'dark'>): IGlobalState => {\n      const current = state.isDarkMode ? 'dark' : 'light';\n      state.isDarkMode = action.payload === 'dark';\n\n      console.log('Setting appearance to', action.payload);\n      if (current === action.payload) {\n        return state;\n      }\n      state.theme = merge(\n        {},\n        action.payload === 'dark' ? CombinedDarkTheme : CombinedDefaultTheme,\n        {\n          colors: {\n            primary: state.currentDropzone?.primaryColor || CombinedDarkTheme.colors.primary,\n            accent: state.currentDropzone?.secondaryColor || CombinedDarkTheme.colors.accent,\n          },\n        }\n      );\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n      return state;\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport isEqual from 'lodash/isEqual';\nimport last from 'lodash/last';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationState {\n  queue: INotification[];\n}\n\nexport const initialState = { queue: [] } as INotificationState;\nexport default createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    hideSnackbar: (state: INotificationState) => {\n      const [, ...newQueue] = state.queue;\n      state.queue = newQueue;\n    },\n    showSnackbar: (state: INotificationState, action: PayloadAction<INotification>) => {\n      if (!isEqual(last(state.queue), action.payload)) {\n        state.queue.push(action.payload);\n      }\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\nimport notificationSlice, {\n  initialState as initialStateNotification,\n} from '../components/notifications/slice';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  notifications: initialStateNotification,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  notifications: notificationSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  notifications: notificationSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\n// eslint-disable-next-line camelcase\nimport * as fonts from '@expo-google-fonts/roboto';\nimport LottieView from '../LottieView';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const { useFonts, __metadata__, ...rest } = fonts;\n  const [fontsLoaded] = fonts.useFonts({\n    ...rest,\n  });\n\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const dispatch = useAppDispatch();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'New version installed' }));\n    }\n  }, [dispatch]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport { RetryLink } from '@apollo/client/link/retry';\nimport * as React from 'react';\nimport * as Update from 'expo-updates';\nimport Constants from 'expo-constants';\nimport { Platform } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const httpBatchLink = React.useMemo(() => {\n    console.log('Release channel', Update.releaseChannel);\n    const environment =\n      Platform.OS === 'web' ? Constants.manifest?.extra?.environment : Update.releaseChannel;\n    return new BatchHttpLink({\n      batchDebounce: true,\n      batchMax: 10,\n      uri:\n        environment in (Constants?.manifest?.extra?.urls || {})\n          ? Constants.manifest?.extra?.urls[environment]\n          : Constants.manifest?.extra?.url,\n    });\n  }, []);\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Session expired`,\n              variant: 'error',\n            })\n          );\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`,\n                variant: 'error',\n              })\n            );\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            // console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `[Network error]: ${networkError}`,\n              variant: 'error',\n            })\n          );\n        }\n      }),\n    [dispatch]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link: errorLink.concat(authLink).concat(new RetryLink()).concat(httpBatchLink),\n        cache: new InMemoryCache(),\n      }),\n    [authLink, errorLink, httpBatchLink]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport { useAppSelector, useAppDispatch } from 'app/state';\nimport LottieView from '../LottieView';\nimport slice from './slice';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\n\nconst { actions } = slice;\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\nfunction Notifications() {\n  const state = useAppSelector((root) => root.notifications);\n  const dispatch = useAppDispatch();\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(\n    () => (state.queue.length ? state.queue[0] : null),\n    [state.queue]\n  );\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide: () => dispatch(actions.hideSnackbar()),\n        text1: notification.message,\n        type: notification.variant || 'success',\n      });\n      if (notification.variant === 'error') {\n        console.error(notification.message);\n      }\n    }\n  }, [dispatch, notification]);\n\n  return (\n    <>\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            onAnimationFinish={() => {\n              setAnimationState(AnimationState.waiting);\n              setTimeout(() => {\n                dispatch(actions.hideSnackbar());\n                setAnimationState(AnimationState.closed);\n              }, 200);\n            }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast autoHide visibilityTime={4000} position=\"bottom\" type=\"success\" />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300,\n  },\n});\nexport default Notifications;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport const RoleEssentialsFragmentDoc = gql`\n    fragment roleEssentials on UserRole {\n  id\n  name\n  dropzoneId\n}\n    `;\nexport const LicenseEssentialsFragmentDoc = gql`\n    fragment licenseEssentials on License {\n  id\n  name\n}\n    `;\nexport const UserEssentialsFragmentDoc = gql`\n    fragment userEssentials on User {\n  id\n  name\n  nickname\n  phone\n  email\n  exitWeight\n  moderationRole\n  image\n  apfNumber\n}\n    `;\nexport const DropzoneUserEssentialsFragmentDoc = gql`\n    fragment dropzoneUserEssentials on DropzoneUser {\n  id\n  expiresAt\n  hasCredits\n  hasMembership\n  hasLicense\n  hasExitWeight\n  role {\n    ...roleEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n  user {\n    ...userEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}\n${UserEssentialsFragmentDoc}`;\nexport const FederationEssentialsFragmentDoc = gql`\n    fragment federationEssentials on Federation {\n  id\n  name\n  slug\n}\n    `;\nexport const LicenseDetailsFragmentDoc = gql`\n    fragment licenseDetails on License {\n  ...licenseEssentials\n  federation {\n    ...federationEssentials\n  }\n}\n    ${LicenseEssentialsFragmentDoc}\n${FederationEssentialsFragmentDoc}`;\nexport const UserFederationEssentialsFragmentDoc = gql`\n    fragment userFederationEssentials on UserFederation {\n  id\n  uid\n  federation {\n    ...federationEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n  isPublic\n  user {\n    id\n    name\n  }\n  dropzone {\n    id\n  }\n}\n    `;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  user {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const UserDetailedFragmentDoc = gql`\n    fragment userDetailed on User {\n  ...userEssentials\n  userFederations {\n    ...userFederationEssentials\n  }\n  rigs {\n    ...userRigDetailed\n  }\n}\n    ${UserEssentialsFragmentDoc}\n${UserFederationEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const DropzoneUserDetailsFragmentDoc = gql`\n    fragment dropzoneUserDetails on DropzoneUser {\n  ...dropzoneUserEssentials\n  credits\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...userDetailed\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${UserDetailedFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const RigInspectionEssentialsFragmentDoc = gql`\n    fragment rigInspectionEssentials on RigInspection {\n  id\n  isOk\n  definition\n  inspectedBy {\n    ...dropzoneUserEssentials\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  lat\n  lng\n  name\n  primaryColor\n  secondaryColor\n  isPublic\n  requestPublication\n  banner\n  isCreditSystemEnabled\n}\n    `;\nexport const TransactionEssentialsFragmentDoc = gql`\n    fragment transactionEssentials on Transaction {\n  id\n  transactionType\n  amount\n  status\n  createdAt\n  message\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const ReceiptEssentialsFragmentDoc = gql`\n    fragment receiptEssentials on Receipt {\n  id\n  amountCents\n  createdAt\n  updatedAt\n  transactions {\n    ...transactionEssentials\n  }\n}\n    ${TransactionEssentialsFragmentDoc}`;\nexport const OrderEssentialsFragmentDoc = gql`\n    fragment orderEssentials on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  createdAt\n  buyer {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      id\n      name\n      banner\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    ...receiptEssentials\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${ReceiptEssentialsFragmentDoc}`;\nexport const TicketTypeEssentialsFragmentDoc = gql`\n    fragment ticketTypeEssentials on TicketType {\n  id\n  name\n  altitude\n  cost\n  isTandem\n  allowManifestingSelf\n  extras {\n    id\n    name\n    cost\n  }\n}\n    `;\nexport const JumpTypeEssentialsFragmentDoc = gql`\n    fragment jumpTypeEssentials on JumpType {\n  id\n  name\n}\n    `;\nexport const SlotEssentialsFragmentDoc = gql`\n    fragment slotEssentials on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  groupNumber\n  cost\n  ticketType {\n    ...ticketTypeEssentials\n  }\n  jumpType {\n    ...jumpTypeEssentials\n  }\n  extras {\n    id\n    name\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${JumpTypeEssentialsFragmentDoc}`;\nexport const SlotDetailsFragmentDoc = gql`\n    fragment slotDetails on Slot {\n  ...slotEssentials\n  rig {\n    ...rigEssentials\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n  }\n}\n    ${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}`;\nexport const LoadEssentialsFragmentDoc = gql`\n    fragment loadEssentials on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n}\n    `;\nexport const UserSlotDetailsFragmentDoc = gql`\n    fragment userSlotDetails on Slot {\n  ...slotDetails\n  load {\n    ...loadEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${LoadEssentialsFragmentDoc}`;\nexport const DropzoneUserProfileFragmentDoc = gql`\n    fragment dropzoneUserProfile on DropzoneUser {\n  ...dropzoneUserDetails\n  permissions\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  slots {\n    edges {\n      node {\n        ...userSlotDetails\n      }\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${UserSlotDetailsFragmentDoc}`;\nexport const PlaneEssentialsFragmentDoc = gql`\n    fragment planeEssentials on Plane {\n  id\n  minSlots\n  maxSlots\n  name\n  registration\n}\n    `;\nexport const WeatherConditionEssentialsFragmentDoc = gql`\n    fragment weatherConditionEssentials on WeatherCondition {\n  id\n  jumpRun\n  temperature\n  offsetDirection\n  offsetMiles\n  createdAt\n  exitSpotMiles\n  winds {\n    temperature\n    altitude\n    speed\n    direction\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  planes {\n    ...planeEssentials\n  }\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n  currentConditions {\n    ...weatherConditionEssentials\n  }\n  loads(earliestTimestamp: $earliestTimestamp) {\n    edges {\n      node {\n        id\n        name\n        loadNumber\n        isOpen\n        maxSlots\n        state\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}\n${WeatherConditionEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    ...roleEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const CurrentUserFragmentDoc = gql`\n    fragment currentUser on User {\n  ...userDetailed\n  pushToken\n}\n    ${UserDetailedFragmentDoc}`;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n  license {\n    id\n    name\n  }\n  user {\n    ...currentUser\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${CurrentUserFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const TicketTypeExtraEssentialsFragmentDoc = gql`\n    fragment ticketTypeExtraEssentials on Extra {\n  id\n  name\n  createdAt\n  cost\n}\n    `;\nexport const TicketTypeExtraDetailedFragmentDoc = gql`\n    fragment ticketTypeExtraDetailed on Extra {\n  ...ticketTypeExtraEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeExtraEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const RigInspectionDetailedFragmentDoc = gql`\n    fragment rigInspectionDetailed on RigInspection {\n  ...rigInspectionEssentials\n  rig {\n    ...userRigDetailed\n  }\n}\n    ${RigInspectionEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const RigInspectionMutationEssentialsFragmentDoc = gql`\n    fragment rigInspectionMutationEssentials on RigInspection {\n  ...rigInspectionDetailed\n  formTemplate {\n    id\n    definition\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n    rigInspections {\n      ...rigInspectionEssentials\n    }\n  }\n}\n    ${RigInspectionDetailedFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\nexport const RoleDetailedFragmentDoc = gql`\n    fragment roleDetailed on UserRole {\n  ...roleEssentials\n  permissions\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const LoadDetailsFragmentDoc = gql`\n    fragment loadDetails on Load {\n  ...loadEssentials\n  plane {\n    ...planeEssentials\n  }\n  gca {\n    ...dropzoneUserEssentials\n  }\n  pilot {\n    ...dropzoneUserEssentials\n  }\n  loadMaster {\n    ...dropzoneUserEssentials\n  }\n  slots {\n    ...slotDetails\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${SlotDetailsFragmentDoc}`;\nexport const SlotExhaustiveFragmentDoc = gql`\n    fragment slotExhaustive on Slot {\n  ...slotDetails\n  dropzoneUser {\n    ...dropzoneUserDetails\n  }\n  load {\n    ...loadDetails\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}\n${LoadDetailsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const ArchivePlaneDocument = gql`\n    mutation ArchivePlane($id: Int!) {\n  deletePlane(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type ArchivePlaneMutationFn = Apollo.MutationFunction<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\n\n/**\n * __useArchivePlaneMutation__\n *\n * To run a mutation, you first call `useArchivePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchivePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archivePlaneMutation, { data, loading, error }] = useArchivePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchivePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>(ArchivePlaneDocument, options);\n      }\nexport type ArchivePlaneMutationHookResult = ReturnType<typeof useArchivePlaneMutation>;\nexport type ArchivePlaneMutationResult = Apollo.MutationResult<Operation.ArchivePlaneMutation>;\nexport type ArchivePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\nexport const ArchiveRigDocument = gql`\n    mutation ArchiveRig($id: Int!) {\n  archiveRig(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    rig {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport type ArchiveRigMutationFn = Apollo.MutationFunction<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\n\n/**\n * __useArchiveRigMutation__\n *\n * To run a mutation, you first call `useArchiveRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveRigMutation, { data, loading, error }] = useArchiveRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>(ArchiveRigDocument, options);\n      }\nexport type ArchiveRigMutationHookResult = ReturnType<typeof useArchiveRigMutation>;\nexport type ArchiveRigMutationResult = Apollo.MutationResult<Operation.ArchiveRigMutation>;\nexport type ArchiveRigMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\nexport const ArchiveTicketTypeDocument = gql`\n    mutation ArchiveTicketType($id: Int!) {\n  archiveTicketType(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    ticketType {\n      ...ticketTypeEssentials\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\nexport type ArchiveTicketTypeMutationFn = Apollo.MutationFunction<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\n\n/**\n * __useArchiveTicketTypeMutation__\n *\n * To run a mutation, you first call `useArchiveTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveTicketTypeMutation, { data, loading, error }] = useArchiveTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>(ArchiveTicketTypeDocument, options);\n      }\nexport type ArchiveTicketTypeMutationHookResult = ReturnType<typeof useArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationResult = Apollo.MutationResult<Operation.ArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\nexport const ArchiveUserDocument = gql`\n    mutation ArchiveUser($id: Int!) {\n  deleteUser(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserEssentials\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type ArchiveUserMutationFn = Apollo.MutationFunction<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\n\n/**\n * __useArchiveUserMutation__\n *\n * To run a mutation, you first call `useArchiveUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserMutation, { data, loading, error }] = useArchiveUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>(ArchiveUserDocument, options);\n      }\nexport type ArchiveUserMutationHookResult = ReturnType<typeof useArchiveUserMutation>;\nexport type ArchiveUserMutationResult = Apollo.MutationResult<Operation.ArchiveUserMutation>;\nexport type ArchiveUserMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateDropzoneDocument = gql`\n    mutation CreateDropzone($name: String!, $banner: String, $federationId: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String, $earliestTimestamp: Int) {\n  createDropzone(\n    input: {attributes: {name: $name, banner: $banner, federationId: $federationId, primaryColor: $primaryColor, secondaryColor: $secondaryColor, lat: $lat, lng: $lng}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type CreateDropzoneMutationFn = Apollo.MutationFunction<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\n\n/**\n * __useCreateDropzoneMutation__\n *\n * To run a mutation, you first call `useCreateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createDropzoneMutation, { data, loading, error }] = useCreateDropzoneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      banner: // value for 'banner'\n *      federationId: // value for 'federationId'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *      earliestTimestamp: // value for 'earliestTimestamp'\n *   },\n * });\n */\nexport function useCreateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>(CreateDropzoneDocument, options);\n      }\nexport type CreateDropzoneMutationHookResult = ReturnType<typeof useCreateDropzoneMutation>;\nexport type CreateDropzoneMutationResult = Apollo.MutationResult<Operation.CreateDropzoneMutation>;\nexport type CreateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: WalletInput!, $seller: WalletInput!, $dropzoneId: Int!, $title: String, $amount: Int!) {\n  createOrder(\n    input: {attributes: {dropzoneId: $dropzoneId, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...orderEssentials\n    }\n  }\n}\n    ${OrderEssentialsFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzoneId: // value for 'dropzoneId'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreatePlaneDocument = gql`\n    mutation CreatePlane($name: String!, $registration: String!, $dropzoneId: Int!, $minSlots: Int!, $maxSlots: Int!, $hours: Int, $nextMaintenanceHours: Int) {\n  createPlane(\n    input: {attributes: {name: $name, registration: $registration, dropzoneId: $dropzoneId, minSlots: $minSlots, maxSlots: $maxSlots, hours: $hours, nextMaintenanceHours: $nextMaintenanceHours}}\n  ) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        planes {\n          ...planeEssentials\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type CreatePlaneMutationFn = Apollo.MutationFunction<Operation.CreatePlaneMutation, Operation.CreatePlaneMutationVariables>;\n\n/**\n * __useCreatePlaneMutation__\n *\n * To run a mutation, you first call `useCreatePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreatePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createPlaneMutation, { data, loading, error }] = useCreatePlaneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      registration: // value for 'registration'\n *      dropzoneId: // value for 'dropzoneId'\n *      minSlots: // value for 'minSlots'\n *      maxSlots: // value for 'maxSlots'\n *      hours: // value for 'hours'\n *      nextMaintenanceHours: // value for 'nextMaintenanceHours'\n *   },\n * });\n */\nexport function useCreatePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreatePlaneMutation, Operation.CreatePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreatePlaneMutation, Operation.CreatePlaneMutationVariables>(CreatePlaneDocument, options);\n      }\nexport type CreatePlaneMutationHookResult = ReturnType<typeof useCreatePlaneMutation>;\nexport type CreatePlaneMutationResult = Apollo.MutationResult<Operation.CreatePlaneMutation>;\nexport type CreatePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.CreatePlaneMutation, Operation.CreatePlaneMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const CreateRigInspectionDocument = gql`\n    mutation CreateRigInspection($dropzone: Int, $rig: Int, $isOk: Boolean, $definition: String) {\n  createRigInspection(\n    input: {attributes: {dropzone: $dropzone, rig: $rig, isOk: $isOk, definition: $definition}}\n  ) {\n    rigInspection {\n      ...rigInspectionMutationEssentials\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${RigInspectionMutationEssentialsFragmentDoc}`;\nexport type CreateRigInspectionMutationFn = Apollo.MutationFunction<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\n\n/**\n * __useCreateRigInspectionMutation__\n *\n * To run a mutation, you first call `useCreateRigInspectionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigInspectionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigInspectionMutation, { data, loading, error }] = useCreateRigInspectionMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      rig: // value for 'rig'\n *      isOk: // value for 'isOk'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useCreateRigInspectionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>(CreateRigInspectionDocument, options);\n      }\nexport type CreateRigInspectionMutationHookResult = ReturnType<typeof useCreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationResult = Apollo.MutationResult<Operation.CreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\nexport const CreateGhostDocument = gql`\n    mutation CreateGhost($name: String!, $phone: String, $email: String!, $federationNumber: String, $roleId: Int!, $licenseId: Int, $dropzoneId: Int!, $exitWeight: Float!) {\n  createGhost(\n    input: {attributes: {roleId: $roleId, federationNumber: $federationNumber, name: $name, phone: $phone, email: $email, dropzoneId: $dropzoneId, licenseId: $licenseId, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    user {\n      ...userDetailed\n    }\n  }\n}\n    ${UserDetailedFragmentDoc}`;\nexport type CreateGhostMutationFn = Apollo.MutationFunction<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\n\n/**\n * __useCreateGhostMutation__\n *\n * To run a mutation, you first call `useCreateGhostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateGhostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createGhostMutation, { data, loading, error }] = useCreateGhostMutation({\n *   variables: {\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      federationNumber: // value for 'federationNumber'\n *      roleId: // value for 'roleId'\n *      licenseId: // value for 'licenseId'\n *      dropzoneId: // value for 'dropzoneId'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useCreateGhostMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>(CreateGhostDocument, options);\n      }\nexport type CreateGhostMutationHookResult = ReturnType<typeof useCreateGhostMutation>;\nexport type CreateGhostMutationResult = Apollo.MutationResult<Operation.CreateGhostMutation>;\nexport type CreateGhostMutationOptions = Apollo.BaseMutationOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const GrantPermissionDocument = gql`\n    mutation GrantPermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n  grantPermission(input: {id: $dropzoneUserId, permission: $permissionName}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type GrantPermissionMutationFn = Apollo.MutationFunction<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\n\n/**\n * __useGrantPermissionMutation__\n *\n * To run a mutation, you first call `useGrantPermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useGrantPermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [grantPermissionMutation, { data, loading, error }] = useGrantPermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useGrantPermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>(GrantPermissionDocument, options);\n      }\nexport type GrantPermissionMutationHookResult = ReturnType<typeof useGrantPermissionMutation>;\nexport type GrantPermissionMutationResult = Apollo.MutationResult<Operation.GrantPermissionMutation>;\nexport type GrantPermissionMutationOptions = Apollo.BaseMutationOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federationId: Int!, $uid: String, $licenseId: Int) {\n  joinFederation(\n    input: {attributes: {federationId: $federationId, uid: $uid, licenseId: $licenseId}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federationId: // value for 'federationId'\n *      uid: // value for 'uid'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  userLogin(email: $email, password: $password) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<Operation.LoginMutation, Operation.LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginMutation, Operation.LoginMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginMutation, Operation.LoginMutationVariables>(LoginDocument, options);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<Operation.LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<Operation.LoginMutation, Operation.LoginMutationVariables>;\nexport const LoginWithAppleDocument = gql`\n    mutation LoginWithApple($token: String!, $userIdentity: String!, $pushToken: String) {\n  loginWithApple(\n    token: $token\n    userIdentity: $userIdentity\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithAppleMutationFn = Apollo.MutationFunction<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\n\n/**\n * __useLoginWithAppleMutation__\n *\n * To run a mutation, you first call `useLoginWithAppleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithAppleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithAppleMutation, { data, loading, error }] = useLoginWithAppleMutation({\n *   variables: {\n *      token: // value for 'token'\n *      userIdentity: // value for 'userIdentity'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithAppleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>(LoginWithAppleDocument, options);\n      }\nexport type LoginWithAppleMutationHookResult = ReturnType<typeof useLoginWithAppleMutation>;\nexport type LoginWithAppleMutationResult = Apollo.MutationResult<Operation.LoginWithAppleMutation>;\nexport type LoginWithAppleMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\nexport const LoginWithFacebookDocument = gql`\n    mutation LoginWithFacebook($token: String!, $pushToken: String) {\n  loginWithFacebook(\n    token: $token\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithFacebookMutationFn = Apollo.MutationFunction<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\n\n/**\n * __useLoginWithFacebookMutation__\n *\n * To run a mutation, you first call `useLoginWithFacebookMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithFacebookMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithFacebookMutation, { data, loading, error }] = useLoginWithFacebookMutation({\n *   variables: {\n *      token: // value for 'token'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithFacebookMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>(LoginWithFacebookDocument, options);\n      }\nexport type LoginWithFacebookMutationHookResult = ReturnType<typeof useLoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationResult = Apollo.MutationResult<Operation.LoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\nexport const ManifestGroupDocument = gql`\n    mutation ManifestGroup($jumpType: Int, $extras: [Int!], $load: Int, $ticketType: Int, $userGroup: [SlotUser!]!) {\n  createSlots(\n    input: {attributes: {jumpType: $jumpType, extras: $extras, load: $load, ticketType: $ticketType, userGroup: $userGroup}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type ManifestGroupMutationFn = Apollo.MutationFunction<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\n\n/**\n * __useManifestGroupMutation__\n *\n * To run a mutation, you first call `useManifestGroupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestGroupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestGroupMutation, { data, loading, error }] = useManifestGroupMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      ticketType: // value for 'ticketType'\n *      userGroup: // value for 'userGroup'\n *   },\n * });\n */\nexport function useManifestGroupMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>(ManifestGroupDocument, options);\n      }\nexport type ManifestGroupMutationHookResult = ReturnType<typeof useManifestGroupMutation>;\nexport type ManifestGroupMutationResult = Apollo.MutationResult<Operation.ManifestGroupMutation>;\nexport type ManifestGroupMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\nexport const ManifestUserDocument = gql`\n    mutation ManifestUser($jumpType: Int, $extras: [Int!], $load: Int, $rig: Int, $ticketType: Int, $dropzoneUser: Int, $exitWeight: Float, $passengerName: String, $passengerExitWeight: Float) {\n  createSlot(\n    input: {attributes: {jumpType: $jumpType, extras: $extras, load: $load, rig: $rig, ticketType: $ticketType, dropzoneUser: $dropzoneUser, exitWeight: $exitWeight, passengerExitWeight: $passengerExitWeight, passengerName: $passengerName}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    slot {\n      ...slotExhaustive\n    }\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type ManifestUserMutationFn = Apollo.MutationFunction<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\n\n/**\n * __useManifestUserMutation__\n *\n * To run a mutation, you first call `useManifestUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestUserMutation, { data, loading, error }] = useManifestUserMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      rig: // value for 'rig'\n *      ticketType: // value for 'ticketType'\n *      dropzoneUser: // value for 'dropzoneUser'\n *      exitWeight: // value for 'exitWeight'\n *      passengerName: // value for 'passengerName'\n *      passengerExitWeight: // value for 'passengerExitWeight'\n *   },\n * });\n */\nexport function useManifestUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>(ManifestUserDocument, options);\n      }\nexport type ManifestUserMutationHookResult = ReturnType<typeof useManifestUserMutation>;\nexport type ManifestUserMutationResult = Apollo.MutationResult<Operation.ManifestUserMutation>;\nexport type ManifestUserMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\nexport const RecoverPasswordDocument = gql`\n    mutation RecoverPassword($email: String!, $redirectUrl: String!) {\n  userSendPasswordReset(email: $email, redirectUrl: $redirectUrl) {\n    message\n  }\n}\n    `;\nexport type RecoverPasswordMutationFn = Apollo.MutationFunction<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\n\n/**\n * __useRecoverPasswordMutation__\n *\n * To run a mutation, you first call `useRecoverPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRecoverPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [recoverPasswordMutation, { data, loading, error }] = useRecoverPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      redirectUrl: // value for 'redirectUrl'\n *   },\n * });\n */\nexport function useRecoverPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>(RecoverPasswordDocument, options);\n      }\nexport type RecoverPasswordMutationHookResult = ReturnType<typeof useRecoverPasswordMutation>;\nexport type RecoverPasswordMutationResult = Apollo.MutationResult<Operation.RecoverPasswordMutation>;\nexport type RecoverPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const RevokePermissionDocument = gql`\n    mutation RevokePermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n  revokePermission(input: {id: $dropzoneUserId, permission: $permissionName}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type RevokePermissionMutationFn = Apollo.MutationFunction<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\n\n/**\n * __useRevokePermissionMutation__\n *\n * To run a mutation, you first call `useRevokePermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRevokePermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [revokePermissionMutation, { data, loading, error }] = useRevokePermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useRevokePermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>(RevokePermissionDocument, options);\n      }\nexport type RevokePermissionMutationHookResult = ReturnType<typeof useRevokePermissionMutation>;\nexport type RevokePermissionMutationResult = Apollo.MutationResult<Operation.RevokePermissionMutation>;\nexport type RevokePermissionMutationOptions = Apollo.BaseMutationOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\nexport const UpdateDropzoneDocument = gql`\n    mutation UpdateDropzone($id: Int!, $name: String!, $requestPublication: Boolean, $banner: String, $federationId: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String, $isCreditSystemEnabled: Boolean, $isPublic: Boolean, $earliestTimestamp: Int) {\n  updateDropzone(\n    input: {id: $id, attributes: {name: $name, banner: $banner, lat: $lat, lng: $lng, requestPublication: $requestPublication, federationId: $federationId, primaryColor: $primaryColor, secondaryColor: $secondaryColor, isCreditSystemEnabled: $isCreditSystemEnabled, isPublic: $isPublic}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type UpdateDropzoneMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\n\n/**\n * __useUpdateDropzoneMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneMutation, { data, loading, error }] = useUpdateDropzoneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      requestPublication: // value for 'requestPublication'\n *      banner: // value for 'banner'\n *      federationId: // value for 'federationId'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *      isCreditSystemEnabled: // value for 'isCreditSystemEnabled'\n *      isPublic: // value for 'isPublic'\n *      earliestTimestamp: // value for 'earliestTimestamp'\n *   },\n * });\n */\nexport function useUpdateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>(UpdateDropzoneDocument, options);\n      }\nexport type UpdateDropzoneMutationHookResult = ReturnType<typeof useUpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\nexport const UpdateDropzoneUserDocument = gql`\n    mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n  updateDropzoneUser(\n    input: {id: $dropzoneUserId, attributes: {userRoleId: $userRoleId, expiresAt: $expiresAt}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateDropzoneUserMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\n\n/**\n * __useUpdateDropzoneUserMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneUserMutation, { data, loading, error }] = useUpdateDropzoneUserMutation({\n *   variables: {\n *      userRoleId: // value for 'userRoleId'\n *      expiresAt: // value for 'expiresAt'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useUpdateDropzoneUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>(UpdateDropzoneUserDocument, options);\n      }\nexport type UpdateDropzoneUserMutationHookResult = ReturnType<typeof useUpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\nexport const UpdateExtraDocument = gql`\n    mutation UpdateExtra($id: Int!, $name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n  updateExtra(\n    input: {id: $id, attributes: {name: $name, ticketTypeIds: $ticketTypeIds, cost: $cost, dropzoneId: $dropzoneId}}\n  ) {\n    extra {\n      ...ticketTypeExtraDetailed\n    }\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\nexport type UpdateExtraMutationFn = Apollo.MutationFunction<Operation.UpdateExtraMutation, Operation.UpdateExtraMutationVariables>;\n\n/**\n * __useUpdateExtraMutation__\n *\n * To run a mutation, you first call `useUpdateExtraMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateExtraMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateExtraMutation, { data, loading, error }] = useUpdateExtraMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      ticketTypeIds: // value for 'ticketTypeIds'\n *      cost: // value for 'cost'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateExtraMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateExtraMutation, Operation.UpdateExtraMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateExtraMutation, Operation.UpdateExtraMutationVariables>(UpdateExtraDocument, options);\n      }\nexport type UpdateExtraMutationHookResult = ReturnType<typeof useUpdateExtraMutation>;\nexport type UpdateExtraMutationResult = Apollo.MutationResult<Operation.UpdateExtraMutation>;\nexport type UpdateExtraMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateExtraMutation, Operation.UpdateExtraMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation UpdateLostPassword($password: String!, $passwordConfirmation: String!, $token: String!) {\n  userUpdatePasswordWithToken(\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    resetPasswordToken: $token\n  ) {\n    authenticatable {\n      ...userEssentials\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    ${UserEssentialsFragmentDoc}`;\nexport type UpdateLostPasswordMutationFn = Apollo.MutationFunction<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, options);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = Apollo.MutationResult<Operation.UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\nexport const UpdatePlaneDocument = gql`\n    mutation UpdatePlane($id: Int!, $name: String!, $registration: String!, $minSlots: Int!, $maxSlots: Int!, $hours: Int, $nextMaintenanceHours: Int) {\n  updatePlane(\n    input: {id: $id, attributes: {name: $name, registration: $registration, minSlots: $minSlots, maxSlots: $maxSlots, hours: $hours, nextMaintenanceHours: $nextMaintenanceHours}}\n  ) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        name\n        planes {\n          id\n          name\n          registration\n          minSlots\n          maxSlots\n          hours\n          nextMaintenanceHours\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type UpdatePlaneMutationFn = Apollo.MutationFunction<Operation.UpdatePlaneMutation, Operation.UpdatePlaneMutationVariables>;\n\n/**\n * __useUpdatePlaneMutation__\n *\n * To run a mutation, you first call `useUpdatePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdatePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updatePlaneMutation, { data, loading, error }] = useUpdatePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      registration: // value for 'registration'\n *      minSlots: // value for 'minSlots'\n *      maxSlots: // value for 'maxSlots'\n *      hours: // value for 'hours'\n *      nextMaintenanceHours: // value for 'nextMaintenanceHours'\n *   },\n * });\n */\nexport function useUpdatePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdatePlaneMutation, Operation.UpdatePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdatePlaneMutation, Operation.UpdatePlaneMutationVariables>(UpdatePlaneDocument, options);\n      }\nexport type UpdatePlaneMutationHookResult = ReturnType<typeof useUpdatePlaneMutation>;\nexport type UpdatePlaneMutationResult = Apollo.MutationResult<Operation.UpdatePlaneMutation>;\nexport type UpdatePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdatePlaneMutation, Operation.UpdatePlaneMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $isPublic: Boolean, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, isPublic: $isPublic, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      isPublic: // value for 'isPublic'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UpdateRigInspectionTemplateDocument = gql`\n    mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n  updateFormTemplate(\n    input: {id: $formId, attributes: {dropzoneId: $dropzoneId, definition: $definition}}\n  ) {\n    formTemplate {\n      id\n      name\n      definition\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRigInspectionTemplateMutationFn = Apollo.MutationFunction<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\n\n/**\n * __useUpdateRigInspectionTemplateMutation__\n *\n * To run a mutation, you first call `useUpdateRigInspectionTemplateMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigInspectionTemplateMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigInspectionTemplateMutation, { data, loading, error }] = useUpdateRigInspectionTemplateMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      formId: // value for 'formId'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useUpdateRigInspectionTemplateMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>(UpdateRigInspectionTemplateDocument, options);\n      }\nexport type UpdateRigInspectionTemplateMutationHookResult = ReturnType<typeof useUpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationResult = Apollo.MutationResult<Operation.UpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\nexport const UpdateRoleDocument = gql`\n    mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n  updateRole(input: {id: $roleId, permission: $permissionName, enabled: $enabled}) {\n    role {\n      id\n      name\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRoleMutationFn = Apollo.MutationFunction<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\n\n/**\n * __useUpdateRoleMutation__\n *\n * To run a mutation, you first call `useUpdateRoleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRoleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRoleMutation, { data, loading, error }] = useUpdateRoleMutation({\n *   variables: {\n *      roleId: // value for 'roleId'\n *      permissionName: // value for 'permissionName'\n *      enabled: // value for 'enabled'\n *   },\n * });\n */\nexport function useUpdateRoleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>(UpdateRoleDocument, options);\n      }\nexport type UpdateRoleMutationHookResult = ReturnType<typeof useUpdateRoleMutation>;\nexport type UpdateRoleMutationResult = Apollo.MutationResult<Operation.UpdateRoleMutation>;\nexport type UpdateRoleMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\nexport const UpdateTicketTypeDocument = gql`\n    mutation UpdateTicketType($id: Int!, $name: String, $cost: Float, $altitude: Int, $allowManifestingSelf: Boolean, $isTandem: Boolean, $extraIds: [Int!]) {\n  updateTicketType(\n    input: {id: $id, attributes: {name: $name, cost: $cost, altitude: $altitude, allowManifestingSelf: $allowManifestingSelf, isTandem: $isTandem, extraIds: $extraIds}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      ...ticketTypeEssentials\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        ...dropzoneEssentials\n        ticketTypes {\n          ...ticketTypeEssentials\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}`;\nexport type UpdateTicketTypeMutationFn = Apollo.MutationFunction<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\n\n/**\n * __useUpdateTicketTypeMutation__\n *\n * To run a mutation, you first call `useUpdateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketTypeMutation, { data, loading, error }] = useUpdateTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      cost: // value for 'cost'\n *      altitude: // value for 'altitude'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *      isTandem: // value for 'isTandem'\n *      extraIds: // value for 'extraIds'\n *   },\n * });\n */\nexport function useUpdateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>(UpdateTicketTypeDocument, options);\n      }\nexport type UpdateTicketTypeMutationHookResult = ReturnType<typeof useUpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationResult = Apollo.MutationResult<Operation.UpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\nexport const UpdateUserDocument = gql`\n    mutation UpdateUser($id: Int, $name: String, $phone: String, $email: String, $image: String, $pushToken: String, $nickname: String, $licenseId: Int, $exitWeight: Float) {\n  updateUser(\n    input: {id: $id, attributes: {pushToken: $pushToken, name: $name, phone: $phone, email: $email, image: $image, nickname: $nickname, licenseId: $licenseId, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    user {\n      ...userDetailed\n    }\n  }\n}\n    ${UserDetailedFragmentDoc}`;\nexport type UpdateUserMutationFn = Apollo.MutationFunction<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      image: // value for 'image'\n *      pushToken: // value for 'pushToken'\n *      nickname: // value for 'nickname'\n *      licenseId: // value for 'licenseId'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useUpdateUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>(UpdateUserDocument, options);\n      }\nexport type UpdateUserMutationHookResult = ReturnType<typeof useUpdateUserMutation>;\nexport type UpdateUserMutationResult = Apollo.MutationResult<Operation.UpdateUserMutation>;\nexport type UpdateUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userSignUp(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const QueryDropzoneDocument = gql`\n    query QueryDropzone($dropzoneId: Int!, $earliestTimestamp: Int) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useQueryDropzone__\n *\n * To run a query within a React component, call `useQueryDropzone` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzone` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzone({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      earliestTimestamp: // value for 'earliestTimestamp'\n *   },\n * });\n */\nexport function useQueryDropzone(baseOptions: Apollo.QueryHookOptions<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>(QueryDropzoneDocument, options);\n      }\nexport function useQueryDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>(QueryDropzoneDocument, options);\n        }\nexport type QueryDropzoneHookResult = ReturnType<typeof useQueryDropzone>;\nexport type QueryDropzoneLazyQueryHookResult = ReturnType<typeof useQueryDropzoneLazyQuery>;\nexport type QueryDropzoneQueryResult = Apollo.QueryResult<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>;\nexport const DropzoneRigsDocument = gql`\n    query DropzoneRigs($dropzoneId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneRigsQuery__\n *\n * To run a query within a React component, call `useDropzoneRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneRigsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n      }\nexport function useDropzoneRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n        }\nexport type DropzoneRigsQueryHookResult = ReturnType<typeof useDropzoneRigsQuery>;\nexport type DropzoneRigsLazyQueryHookResult = ReturnType<typeof useDropzoneRigsLazyQuery>;\nexport type DropzoneRigsQueryResult = Apollo.QueryResult<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: Int!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const DropzoneUsersDocument = gql`\n    query DropzoneUsers($dropzoneId: Int!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    dropzoneUsers(\n      licensed: $licensed\n      search: $search\n      permissions: $permissions\n      first: $first\n      after: $after\n    ) {\n      edges {\n        cursor\n        node {\n          ...dropzoneUserEssentials\n        }\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n      }\nexport function useDropzoneUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n        }\nexport type DropzoneUsersQueryHookResult = ReturnType<typeof useDropzoneUsersQuery>;\nexport type DropzoneUsersLazyQueryHookResult = ReturnType<typeof useDropzoneUsersLazyQuery>;\nexport type DropzoneUsersQueryResult = Apollo.QueryResult<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>;\nexport const DropzoneUsersDetailedDocument = gql`\n    query DropzoneUsersDetailed($dropzoneId: Int!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    dropzoneUsers(\n      licensed: $licensed\n      search: $search\n      permissions: $permissions\n      first: $first\n      after: $after\n    ) {\n      edges {\n        cursor\n        node {\n          ...dropzoneUserDetails\n        }\n      }\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersDetailedQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n      }\nexport function useDropzoneUsersDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n        }\nexport type DropzoneUsersDetailedQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedQuery>;\nexport type DropzoneUsersDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedLazyQuery>;\nexport type DropzoneUsersDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>;\nexport const QueryDropzoneUserProfileDocument = gql`\n    query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    rigInspectionTemplate {\n      id\n      name\n      definition\n    }\n    dropzoneUser(id: $dropzoneUserId) {\n      ...dropzoneUserProfile\n    }\n  }\n}\n    ${DropzoneUserProfileFragmentDoc}`;\n\n/**\n * __useQueryDropzoneUserProfile__\n *\n * To run a query within a React component, call `useQueryDropzoneUserProfile` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzoneUserProfile` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzoneUserProfile({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useQueryDropzoneUserProfile(baseOptions: Apollo.QueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n      }\nexport function useQueryDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n        }\nexport type QueryDropzoneUserProfileHookResult = ReturnType<typeof useQueryDropzoneUserProfile>;\nexport type QueryDropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useQueryDropzoneUserProfileLazyQuery>;\nexport type QueryDropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>;\nexport const QueryDropzonesDocument = gql`\n    query QueryDropzones($isPublic: Boolean, $requestedPublication: Boolean) {\n  dropzones(isPublic: $isPublic, requestedPublication: $requestedPublication) {\n    edges {\n      node {\n        ...dropzoneEssentials\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useQueryDropzones__\n *\n * To run a query within a React component, call `useQueryDropzones` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzones` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzones({\n *   variables: {\n *      isPublic: // value for 'isPublic'\n *      requestedPublication: // value for 'requestedPublication'\n *   },\n * });\n */\nexport function useQueryDropzones(baseOptions?: Apollo.QueryHookOptions<Operation.QueryDropzonesQuery, Operation.QueryDropzonesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzonesQuery, Operation.QueryDropzonesQueryVariables>(QueryDropzonesDocument, options);\n      }\nexport function useQueryDropzonesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzonesQuery, Operation.QueryDropzonesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzonesQuery, Operation.QueryDropzonesQueryVariables>(QueryDropzonesDocument, options);\n        }\nexport type QueryDropzonesHookResult = ReturnType<typeof useQueryDropzones>;\nexport type QueryDropzonesLazyQueryHookResult = ReturnType<typeof useQueryDropzonesLazyQuery>;\nexport type QueryDropzonesQueryResult = Apollo.QueryResult<Operation.QueryDropzonesQuery, Operation.QueryDropzonesQueryVariables>;\nexport const TicketTypeExtrasDocument = gql`\n    query TicketTypeExtras($dropzoneId: Int!) {\n  extras(dropzone: $dropzoneId) {\n    ...ticketTypeExtraDetailed\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\n\n/**\n * __useTicketTypeExtrasQuery__\n *\n * To run a query within a React component, call `useTicketTypeExtrasQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypeExtrasQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypeExtrasQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useTicketTypeExtrasQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n      }\nexport function useTicketTypeExtrasLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n        }\nexport type TicketTypeExtrasQueryHookResult = ReturnType<typeof useTicketTypeExtrasQuery>;\nexport type TicketTypeExtrasLazyQueryHookResult = ReturnType<typeof useTicketTypeExtrasLazyQuery>;\nexport type TicketTypeExtrasQueryResult = Apollo.QueryResult<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>;\nexport const FederationsDocument = gql`\n    query Federations {\n  federations {\n    ...federationEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}`;\n\n/**\n * __useFederationsQuery__\n *\n * To run a query within a React component, call `useFederationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useFederationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFederationsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useFederationsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n      }\nexport function useFederationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n        }\nexport type FederationsQueryHookResult = ReturnType<typeof useFederationsQuery>;\nexport type FederationsLazyQueryHookResult = ReturnType<typeof useFederationsLazyQuery>;\nexport type FederationsQueryResult = Apollo.QueryResult<Operation.FederationsQuery, Operation.FederationsQueryVariables>;\nexport const AddressToLocationDocument = gql`\n    query AddressToLocation($search: String!) {\n  geocode(search: $search) {\n    formattedString\n    id\n    lat\n    lng\n  }\n}\n    `;\n\n/**\n * __useAddressToLocationQuery__\n *\n * To run a query within a React component, call `useAddressToLocationQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressToLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressToLocationQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useAddressToLocationQuery(baseOptions: Apollo.QueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n      }\nexport function useAddressToLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n        }\nexport type AddressToLocationQueryHookResult = ReturnType<typeof useAddressToLocationQuery>;\nexport type AddressToLocationLazyQueryHookResult = ReturnType<typeof useAddressToLocationLazyQuery>;\nexport type AddressToLocationQueryResult = Apollo.QueryResult<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>;\nexport const JumpTypesDocument = gql`\n    query JumpTypes($allowedForDropzoneUserIds: [Int!]) {\n  jumpTypes(dropzoneUsers: $allowedForDropzoneUserIds) {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}`;\n\n/**\n * __useJumpTypesQuery__\n *\n * To run a query within a React component, call `useJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useJumpTypesQuery({\n *   variables: {\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *   },\n * });\n */\nexport function useJumpTypesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n      }\nexport function useJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n        }\nexport type JumpTypesQueryHookResult = ReturnType<typeof useJumpTypesQuery>;\nexport type JumpTypesLazyQueryHookResult = ReturnType<typeof useJumpTypesLazyQuery>;\nexport type JumpTypesQueryResult = Apollo.QueryResult<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>;\nexport const AllowedJumpTypesDocument = gql`\n    query AllowedJumpTypes($dropzoneId: Int!, $allowedForDropzoneUserIds: [Int!]!, $isPublic: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    allowedJumpTypes(userId: $allowedForDropzoneUserIds) {\n      ...jumpTypeEssentials\n    }\n    ticketTypes(isPublic: $isPublic) {\n      ...ticketTypeEssentials\n    }\n  }\n  jumpTypes {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedJumpTypesQuery__\n *\n * To run a query within a React component, call `useAllowedJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedJumpTypesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useAllowedJumpTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n      }\nexport function useAllowedJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n        }\nexport type AllowedJumpTypesQueryHookResult = ReturnType<typeof useAllowedJumpTypesQuery>;\nexport type AllowedJumpTypesLazyQueryHookResult = ReturnType<typeof useAllowedJumpTypesLazyQuery>;\nexport type AllowedJumpTypesQueryResult = Apollo.QueryResult<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>;\nexport const LicensesDocument = gql`\n    query Licenses($federationId: Int) {\n  licenses(federationId: $federationId) {\n    ...licenseDetails\n  }\n}\n    ${LicenseDetailsFragmentDoc}`;\n\n/**\n * __useLicensesQuery__\n *\n * To run a query within a React component, call `useLicensesQuery` and pass it any options that fit your needs.\n * When your component renders, `useLicensesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLicensesQuery({\n *   variables: {\n *      federationId: // value for 'federationId'\n *   },\n * });\n */\nexport function useLicensesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n      }\nexport function useLicensesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n        }\nexport type LicensesQueryHookResult = ReturnType<typeof useLicensesQuery>;\nexport type LicensesLazyQueryHookResult = ReturnType<typeof useLicensesLazyQuery>;\nexport type LicensesQueryResult = Apollo.QueryResult<Operation.LicensesQuery, Operation.LicensesQueryVariables>;\nexport const LoadDocument = gql`\n    query Load($id: Int!) {\n  load(id: $id) {\n    ...loadDetails\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadQuery__\n *\n * To run a query within a React component, call `useLoadQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n      }\nexport function useLoadLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n        }\nexport type LoadQueryHookResult = ReturnType<typeof useLoadQuery>;\nexport type LoadLazyQueryHookResult = ReturnType<typeof useLoadLazyQuery>;\nexport type LoadQueryResult = Apollo.QueryResult<Operation.LoadQuery, Operation.LoadQueryVariables>;\nexport const PlanesDocument = gql`\n    query Planes($dropzoneId: Int!) {\n  planes(dropzoneId: $dropzoneId) {\n    ...planeEssentials\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\n\n/**\n * __usePlanesQuery__\n *\n * To run a query within a React component, call `usePlanesQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlanesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlanesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function usePlanesQuery(baseOptions: Apollo.QueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n      }\nexport function usePlanesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n        }\nexport type PlanesQueryHookResult = ReturnType<typeof usePlanesQuery>;\nexport type PlanesLazyQueryHookResult = ReturnType<typeof usePlanesLazyQuery>;\nexport type PlanesQueryResult = Apollo.QueryResult<Operation.PlanesQuery, Operation.PlanesQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        ...roleEssentials\n      }\n      permissions\n    }\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;\nexport const RigInspectionTemplateDocument = gql`\n    query RigInspectionTemplate($dropzoneId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigInspectionTemplate {\n      id\n      name\n      definition\n    }\n  }\n}\n    `;\n\n/**\n * __useRigInspectionTemplateQuery__\n *\n * To run a query within a React component, call `useRigInspectionTemplateQuery` and pass it any options that fit your needs.\n * When your component renders, `useRigInspectionTemplateQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRigInspectionTemplateQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useRigInspectionTemplateQuery(baseOptions: Apollo.QueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n      }\nexport function useRigInspectionTemplateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n        }\nexport type RigInspectionTemplateQueryHookResult = ReturnType<typeof useRigInspectionTemplateQuery>;\nexport type RigInspectionTemplateLazyQueryHookResult = ReturnType<typeof useRigInspectionTemplateLazyQuery>;\nexport type RigInspectionTemplateQueryResult = Apollo.QueryResult<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>;\nexport const AvailableRigsDocument = gql`\n    query AvailableRigs($dropzoneUserId: Int!, $isTandem: Boolean, $loadId: Int) {\n  availableRigs(\n    dropzoneUser: $dropzoneUserId\n    isTandem: $isTandem\n    loadId: $loadId\n  ) {\n    ...userRigDetailed\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\n\n/**\n * __useAvailableRigsQuery__\n *\n * To run a query within a React component, call `useAvailableRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAvailableRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAvailableRigsQuery({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      isTandem: // value for 'isTandem'\n *      loadId: // value for 'loadId'\n *   },\n * });\n */\nexport function useAvailableRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n      }\nexport function useAvailableRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n        }\nexport type AvailableRigsQueryHookResult = ReturnType<typeof useAvailableRigsQuery>;\nexport type AvailableRigsLazyQueryHookResult = ReturnType<typeof useAvailableRigsLazyQuery>;\nexport type AvailableRigsQueryResult = Apollo.QueryResult<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>;\nexport const RolesDocument = gql`\n    query Roles($dropzoneId: Int!, $selectable: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    roles(selectable: $selectable) {\n      ...roleDetailed\n    }\n  }\n}\n    ${RoleDetailedFragmentDoc}`;\n\n/**\n * __useRolesQuery__\n *\n * To run a query within a React component, call `useRolesQuery` and pass it any options that fit your needs.\n * When your component renders, `useRolesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRolesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      selectable: // value for 'selectable'\n *   },\n * });\n */\nexport function useRolesQuery(baseOptions: Apollo.QueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n      }\nexport function useRolesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n        }\nexport type RolesQueryHookResult = ReturnType<typeof useRolesQuery>;\nexport type RolesLazyQueryHookResult = ReturnType<typeof useRolesLazyQuery>;\nexport type RolesQueryResult = Apollo.QueryResult<Operation.RolesQuery, Operation.RolesQueryVariables>;\nexport const AllowedTicketTypesDocument = gql`\n    query AllowedTicketTypes($dropzone: Int!, $onlyPublicTickets: Boolean) {\n  dropzone(id: $dropzone) {\n    id\n    ticketTypes(isPublic: $onlyPublicTickets) {\n      ...ticketTypeEssentials\n      extras {\n        id\n        cost\n        name\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedTicketTypesQuery__\n *\n * To run a query within a React component, call `useAllowedTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      onlyPublicTickets: // value for 'onlyPublicTickets'\n *   },\n * });\n */\nexport function useAllowedTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n      }\nexport function useAllowedTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n        }\nexport type AllowedTicketTypesQueryHookResult = ReturnType<typeof useAllowedTicketTypesQuery>;\nexport type AllowedTicketTypesLazyQueryHookResult = ReturnType<typeof useAllowedTicketTypesLazyQuery>;\nexport type AllowedTicketTypesQueryResult = Apollo.QueryResult<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>;\nexport const TicketTypesDocument = gql`\n    query TicketTypes($dropzone: Int!, $allowManifestingSelf: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $allowManifestingSelf) {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useTicketTypesQuery__\n *\n * To run a query within a React component, call `useTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *   },\n * });\n */\nexport function useTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n      }\nexport function useTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n        }\nexport type TicketTypesQueryHookResult = ReturnType<typeof useTicketTypesQuery>;\nexport type TicketTypesLazyQueryHookResult = ReturnType<typeof useTicketTypesLazyQuery>;\nexport type TicketTypesQueryResult = Apollo.QueryResult<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>;","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport { Paragraph, Title, useTheme } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults extends ViewProps {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle, ...rest }: INoResults) {\n  const theme = useTheme();\n  return (\n    <View {...rest} style={StyleSheet.flatten([styles.empty, rest?.style])}>\n      <Title style={{ color: color || theme.colors.onSurface }}>{title}</Title>\n      <Paragraph style={{ color: color || theme.colors.onSurface, textAlign: 'center' }}>\n        {subtitle}\n      </Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ImageBackground } from 'react-native';\nimport { Avatar, Text } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { DropzoneEssentialsFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Color from 'color';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\ninterface DropzoneCardProps {\n  dropzone: DropzoneEssentialsFragment;\n}\nexport default function DropzonesScreen(props: DropzoneCardProps) {\n  const { dropzone } = props;\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const navigation = useNavigation();\n\n  const nameLines = dropzone?.name?.split(/\\s/) || [];\n  const lines = [\n    nameLines.length > 2 ? nameLines[0] : null,\n    nameLines.length > 2 ? nameLines[1] : nameLines[0],\n    nameLines.length > 2 ? nameLines[2] : null,\n    nameLines.length === 2 ? nameLines[1] : null,\n  ];\n\n  const backgroundColor = Color(dropzone?.primaryColor || '#ffffff')\n    .desaturate(0.2)\n    .lighten(0.1);\n  const textColor = backgroundColor.lighten(0.35);\n\n  return (\n    <TouchableOpacity\n      style={{ alignSelf: 'center' }}\n      onPress={async () => {\n        if (dropzone) {\n          const shouldPushRoute = !!globalState.currentDropzoneId;\n          dispatch(actions.global.setDropzone(dropzone as DropzoneExtensiveFragment));\n\n          if (shouldPushRoute) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            navigation.replace('Authenticated', {\n              screen: 'HomeScreen',\n            });\n          }\n        }\n      }}\n    >\n      {dropzone?.banner ? (\n        <View style={styles.cardContainer}>\n          <ImageBackground source={{ uri: dropzone?.banner as string }} style={styles.banner}>\n            <Text style={styles.title} numberOfLines={1}>\n              {dropzone.name}\n            </Text>\n          </ImageBackground>\n        </View>\n      ) : (\n        <View\n          style={[\n            styles.cardContainer,\n            {\n              backgroundColor: backgroundColor.toString(),\n            },\n          ]}\n        >\n          <Avatar.Icon\n            style={styles.icon}\n            icon=\"airplane-takeoff\"\n            size={160}\n            color={textColor.toString()}\n          />\n          <View style={styles.svgContainer}>\n            {lines.map((substr) => (\n              <Text style={styles.title} numberOfLines={1} adjustsFontSizeToFit allowFontScaling>\n                {substr}\n              </Text>\n            ))}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    margin: 16,\n    width: 160,\n    height: 160,\n    borderRadius: 80,\n    overflow: 'hidden',\n  },\n  title: {\n    fontStyle: 'italic',\n    fontFamily: 'Roboto_700Bold_Italic',\n    textAlign: 'center',\n    fontSize: 26,\n    color: 'white',\n    overflow: 'visible',\n    width: 160,\n  },\n  icon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  svgContainer: {\n    position: 'absolute',\n    left: 0,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    top: 0,\n    height: 180,\n    width: '100%',\n  },\n  banner: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList, Platform } from 'react-native';\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useQueryDropzones } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nimport NoResults from '../../../components/NoResults';\nimport DropzoneCard from './DropzoneCard';\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQueryDropzones();\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={data?.dropzones?.edges || []}\n        numColumns={Platform.OS === 'web' ? undefined : 2}\n        horizontal={Platform.OS === 'web'}\n        refreshing={loading}\n        keyExtractor={(item) => `dropzone-${item?.node?.id}`}\n        onRefresh={() => refetch()}\n        style={styles.flatlist}\n        contentContainerStyle={styles.content}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item }) => (!item?.node ? null : <DropzoneCard dropzone={item?.node} />)}\n      />\n\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  flatlist: { flex: 1, width: '100%', flexGrow: 1 },\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    paddingBottom: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from './dropzone_select/DropzonesScreen';\n\nexport type LimboRoutes = {\n  DropzoneSelectScreen: undefined;\n};\nconst Stack = createStackNavigator<LimboRoutes>();\n\nexport function useLimboNavigation() {\n  return useNavigation<NavigationProp<LimboRoutes>>();\n}\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"DropzoneSelectScreen\"\n    >\n      <Stack.Screen name=\"DropzoneSelectScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore This is ok in web\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n  index: number;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, hideContentUntilNavigatedTo } = props;\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <View style={styles.container}>\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <ScrollView style={{ flex: 1 }} contentContainerStyle={styles.content}>\n        {children}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dots: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\nimport {\n  createStackNavigator,\n  HeaderStyleInterpolators,\n  TransitionSpecs,\n} from '@react-navigation/stack';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\n\nconst WizardRoot = createStackNavigator();\nconst WizardModal = createStackNavigator();\n\nexport interface IWizardProps {\n  name: string;\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  // How many screens ahead to jump onNext, default: 1\n  nextIndexFactor?: number;\n  backIndexFactor?: number;\n  onNext?(): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\nexport function Content(props: IWizardProps) {\n  const { name, steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigation();\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View style={{ ...StyleSheet.absoluteFillObject }}>\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <KeyboardAvoidingView\n        style={styles.content}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <WizardRoot.Navigator\n          screenOptions={{\n            headerShown: false,\n            transitionSpec: {\n              open: TransitionSpecs.TransitionIOSSpec,\n              close: TransitionSpecs.TransitionIOSSpec,\n            },\n            headerStyleInterpolator: HeaderStyleInterpolators.forFade,\n            cardStyleInterpolator: ({ current, next, layouts }) => {\n              return {\n                cardStyle: {\n                  backgroundColor: 'transparent',\n                  transform: [\n                    {\n                      translateX: current.progress.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layouts.screen.width, 0],\n                      }),\n                    },\n                    {\n                      scale: next\n                        ? next.progress.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [1, 0.9],\n                          })\n                        : 1,\n                    },\n                  ],\n                },\n                overlayStyle: {\n                  opacity: current.progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 0.5],\n                  }),\n                },\n              };\n            },\n          }}\n        >\n          {steps.map((definition, index) => {\n            if (!definition) {\n              return null;\n            }\n            const { component: Step } = definition;\n            return (\n              <WizardRoot.Screen name={`${name}${index}`}>\n                {(screenProps) => <Step {...screenProps} {...{ index }} />}\n              </WizardRoot.Screen>\n            );\n          })}\n        </WizardRoot.Navigator>\n        <View style={styles.actions}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            onPress={async () => {\n              try {\n                const nextIndex = steps[currentIndex]?.nextIndexFactor || 1;\n                if (steps[currentIndex]?.onNext) {\n                  setLoading(true);\n                  await steps[currentIndex]?.onNext?.();\n                }\n                if (currentIndex === steps.length - 1) {\n                  navigation.goBack();\n                } else {\n                  // @ts-ignore These are dynamically created screens\n                  navigation.navigate(`${name}${currentIndex + nextIndex}`);\n                  setIndex(currentIndex + nextIndex);\n                }\n              } catch {\n                return undefined;\n              } finally {\n                setLoading(false);\n              }\n\n              return undefined;\n            }}\n            style={[styles.next, { backgroundColor: palette.placeholder }]}\n            mode=\"contained\"\n          >\n            {currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n          </Button>\n          <Button\n            disabled={loading}\n            mode=\"text\"\n            onPress={async () => {\n              const backIndexFactor = steps[currentIndex]?.backIndexFactor || 1;\n              steps[currentIndex]?.onBack?.();\n              if (currentIndex === 0) {\n                navigation.goBack();\n              } else {\n                // @ts-ignore These are dynamically created screens\n                navigation.navigate(`${name}${currentIndex - backIndexFactor}`);\n                setIndex(currentIndex - backIndexFactor || 0);\n              }\n              return undefined;\n            }}\n          >\n            Back\n          </Button>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nexport function Wizard(props: IWizardProps) {\n  const { name } = props;\n  return (\n    <WizardModal.Navigator screenOptions={{ headerShown: false, presentation: 'modal' }}>\n      <WizardModal.Screen {...{ name }}>{() => <Content {...props} />}</WizardModal.Screen>\n    </WizardModal.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default Wizard;\n","import { passwordStrength } from 'check-password-strength';\n\nexport enum PasswordStrength {\n  TooWeak,\n  Weak,\n  Acceptable,\n  Strong,\n}\nexport default function checkPasswordComplexity(password: string) {\n  const score = passwordStrength<PasswordStrength>(\n    password,\n    [\n      { value: PasswordStrength.TooWeak, id: 0, minDiversity: 0, minLength: 0 },\n      { value: PasswordStrength.Weak, id: 1, minDiversity: 2, minLength: 8 },\n      { value: PasswordStrength.Acceptable, id: 2, minDiversity: 3, minLength: 10 },\n      { value: PasswordStrength.Strong, id: 3, minDiversity: 4, minLength: 16 },\n    ],\n    '!@#$%^&*()_+{}:\"<>?[]\\\\|;\\',./'\n  );\n\n  return score.value;\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput, useTheme } from 'react-native-paper';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ITextFieldProps\n  extends Omit<Extract<typeof TextInput>, 'onChange' | 'onChangeText' | 'error'> {\n  error?: string | null;\n  helperText?: string | null;\n  onChangeText?(newValue: string): void;\n  onChange?(newValue: string): void;\n}\nexport default function TextField(props: ITextFieldProps) {\n  const { error, helperText, onChangeText: setText, onChange, style, ...rest } = props;\n  const onChangeText = onChange || setText;\n  const theme = useTheme();\n  return (\n    <>\n      <TextInput\n        mode=\"outlined\"\n        style={StyleSheet.flatten([styles.field, { backgroundColor: theme.colors.surface }, style])}\n        {...rest}\n        {...{ onChangeText }}\n        error={!!error}\n      />\n      <HelperText type={error ? 'error' : 'info'}>{error || helperText || ''}</HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { errorColor, successColor, warningColor } from 'app/constants/Colors';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { PasswordStrength } from '../../utils/checkPasswordComplexity';\n\ninterface IPasswordComplexityIndicatorProps {\n  strength: PasswordStrength;\n}\nfunction PasswordStep(props: IPasswordComplexityIndicatorProps) {\n  const { strength } = props;\n\n  const indicatorStyle = [styles.indicatorWeak, styles.indicatorOk, styles.indicatorStrong];\n\n  return (\n    <>\n      <Text style={styles.title}>{['Too weak', 'Weak', 'Acceptable', 'Strong'][strength]}</Text>\n      <View style={styles.indicator}>\n        <View style={indicatorStyle[strength]} />\n        {strength < PasswordStrength.Acceptable ? (\n          <View style={[styles.indicatorInactive, { flex: 1 / 3 }]} />\n        ) : null}\n        {[PasswordStrength.Weak, PasswordStrength.Acceptable].includes(strength) ? (\n          <View\n            style={[\n              styles.indicatorInactive,\n              { flex: strength < PasswordStrength.Acceptable ? 1 / 3 : 1 / 2 },\n            ]}\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n    marginTop: 8,\n  },\n  indicator: {\n    flexDirection: 'row',\n    height: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginTop: 8,\n  },\n  indicatorInactive: {\n    backgroundColor: '#AAA',\n  },\n  indicatorWeak: {\n    flex: 1 / 3,\n    backgroundColor: errorColor,\n  },\n  indicatorOk: {\n    flex: 2 / 3,\n    backgroundColor: warningColor,\n  },\n  indicatorStrong: {\n    backgroundColor: successColor,\n    flex: 1,\n  },\n});\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['password', newValue]))}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n        <HelperText type=\"error\">{fields.password.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const validateEmail = React.useCallback(async () => {\n    const pattern =\n      // eslint-disable-next-line max-len\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      dispatch(actions.screens.signup.setFieldError(['email', 'Please enter a valid email']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.email.value]);\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onClickSignUp = React.useCallback(async () => {\n    if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n      dispatch(\n        actions.screens.signup.setFieldError(['passwordConfirmation', 'Password doesnt match'])\n      );\n      throw new Error('Password mismatch');\n    }\n    try {\n      const result = await onSignUp({\n        variables: {\n          pushToken: globalState.expoPushToken,\n          email: state.fields.email.value,\n          name: state.fields.name.value,\n          exitWeight: state.fields.exitWeight.value,\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          licenseId: Number(state.fields.license?.value?.id) || null,\n          phone: state.fields.phone.value,\n        },\n      });\n\n      if (result?.data?.userSignUp?.fieldErrors?.length) {\n        result?.data?.userSignUp?.fieldErrors?.forEach(({ field, message }) => {\n          switch (field) {\n            case 'email':\n              dispatch(actions.screens.signup.setFieldError(['email', message]));\n              throw new Error('Email error');\n            case 'password':\n              dispatch(actions.screens.signup.setFieldError(['password', message]));\n              throw new Error('Password error');\n            case 'passwordConfirmation':\n              dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', message]));\n              throw new Error('Email error');\n            default:\n              return undefined;\n          }\n        });\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    globalState.expoPushToken,\n    onSignUp,\n    state.fields.email.value,\n    state.fields.exitWeight.value,\n    state.fields.license?.value?.id,\n    state.fields.name.value,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    state.fields.phone.value,\n  ]);\n\n  return (\n    <Wizard\n      dots\n      name=\"SignupWizard\"\n      steps={[\n        { onNext: validateEmail, component: EmailStep },\n        { onNext: validatePassword, component: PasswordStep },\n        { onNext: onClickSignUp, component: PasswordConfirmationStep },\n        { component: DoneStep },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Divider as MaterialDivider, Text, useTheme } from 'react-native-paper';\n\nexport default function Divider(props: { children: React.ReactText }) {\n  const { children } = props;\n  const theme = useTheme();\n  return (\n    <View style={styles.container}>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n      <Text style={styles.text}>{children}</Text>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  divider: { flex: 2 / 5, backgroundColor: 'white' },\n  text: { flex: 1 / 5, textAlign: 'center' },\n});\n","import * as React from 'react';\nimport { useLoginWithFacebookMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport { LoginWithFacebookMutation, LoginWithFacebookMutationVariables } from 'app/api/operations';\nimport Button, { ReactFacebookFailureResponse, ReactFacebookLoginInfo } from 'react-facebook-login';\nimport { View } from 'react-native';\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : never;\n\nexport function useLoginWithFacebook(\n  opts?: MutationFunctionOptions<LoginWithFacebookMutation, LoginWithFacebookMutationVariables>\n) {\n  const { expoPushToken } = useAppSelector((root) => root.global);\n  const [onLoginWithFacebook, mutation] = useLoginWithFacebookMutation(opts);\n  const dispatch = useAppDispatch();\n\n  const onLogin = React.useCallback(\n    async (response: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n      try {\n        if ('accessToken' in response) {\n          const { data } = await onLoginWithFacebook({\n            variables: {\n              pushToken: expoPushToken || null,\n              token: response.accessToken,\n            },\n          });\n          if (data?.loginWithFacebook?.authenticatable && data?.loginWithFacebook?.credentials) {\n            dispatch(actions.global.setCredentials(data.loginWithFacebook.credentials));\n            dispatch(actions.global.setUser(data.loginWithFacebook.authenticatable));\n          }\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: e.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    },\n    [dispatch, expoPushToken, onLoginWithFacebook]\n  );\n  return [onLogin, mutation] as [() => Promise<void>, MutationResult<LoginWithFacebookMutation>];\n}\nexport default function FacebookButton(\n  props: Omit<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields' | 'children'> &\n    Partial<Pick<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields'>> & {\n      onPress: Extract<typeof Button>['callback'];\n    }\n) {\n  const dispatch = useAppDispatch();\n  const { onPress } = props;\n  return (\n    <View style={{ height: 100 }}>\n      <Button\n        appId=\"686479516065674\"\n        reAuthenticate\n        autoLoad\n        fields=\"email,name,picture\"\n        buttonStyle={{\n          height: 25,\n          fontSize: 14,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: 4,\n          marginTop: 16,\n        }}\n        onFailure={() => {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: 'Facebook authentication failed',\n              variant: 'error',\n            })\n          );\n        }}\n        {...props}\n        callback={onPress}\n      >\n        Login with Facebook\n      </Button>\n    </View>\n  );\n}\n","import { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport {\n  LoginWithAppleMutation,\n  LoginWithAppleMutationVariables,\n  LoginWithFacebookMutation,\n} from 'app/api/operations';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nexport function useLoginWithApple(\n  opts?: MutationFunctionOptions<LoginWithAppleMutation, LoginWithAppleMutationVariables>\n) {\n  return [() => null, null] as unknown as [\n    () => Promise<void>,\n    MutationResult<LoginWithFacebookMutation>\n  ];\n}\n\nexport default function AppleButton() {\n  return <View />;\n}\n","import * as React from 'react';\nimport {\n  Image,\n  ImageBackground,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport { Card, Button, HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useLoginMutation } from 'app/api/reflection';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { primaryColor } from 'app/constants/Colors';\nimport Divider from 'app/components/Divider';\n\nimport LottieView from 'app/components/LottieView';\nimport FacebookButton, { useLoginWithFacebook } from './FacebookButton';\nimport AppleButton, { useLoginWithApple } from './AppleButton';\nimport logoDark from '../../../../assets/images/logo-black.png';\nimport logoLight from '../../../../assets/images/logo-white.png';\nimport backgroundDark from '../../../../assets/images/webb-dark.png';\nimport backgroundLight from '../../../../assets/images/pattern.png';\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useLoginMutation();\n  const [loginWithFacebook, loginWithFacebookMutation] = useLoginWithFacebook();\n  const [loginWithApple, loginWithAppleMutation] = useLoginWithApple();\n  const theme = useTheme();\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: e.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    }\n  }, [dispatch, mutationLogin, state.fields.email.value, state.fields.password.value]);\n\n  const loading =\n    loginWithFacebookMutation?.loading || data?.loading || loginWithAppleMutation?.loading;\n  return (\n    <ImageBackground\n      source={theme.dark ? backgroundDark : backgroundLight}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      <Image source={theme.dark ? logoLight : logoDark} style={styles.logo} resizeMode=\"contain\" />\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Card style={styles.card} elevation={3}>\n          <Card.Content>\n            {loading ? (\n              <View style={styles.animationContainer}>\n                <LottieView\n                  autoPlay\n                  loop\n                  style={styles.loadingAnimation}\n                  // eslint-disable-next-line global-require\n                  source={require('../../../../assets/images/loading.json')}\n                />\n              </View>\n            ) : (\n              <>\n                <TextInput\n                  label=\"Email\"\n                  mode=\"outlined\"\n                  value={state.fields.email.value}\n                  disabled={loading}\n                  onChangeText={(newValue) => {\n                    dispatch(actions.screens.login.setEmail(newValue));\n                  }}\n                />\n                <HelperText type=\"error\">{state.fields.email.error}</HelperText>\n\n                <TextInput\n                  label=\"Password\"\n                  mode=\"outlined\"\n                  disabled={loading}\n                  value={state.fields.password.value}\n                  secureTextEntry\n                  onChangeText={(newValue) => {\n                    dispatch(actions.screens.login.setPassword(newValue));\n                  }}\n                  onSubmitEditing={onLogin}\n                  error={!!state.fields.password.error}\n                />\n\n                <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n              </>\n            )}\n            <Button\n              mode=\"contained\"\n              disabled={loading}\n              labelStyle={{ color: theme.colors.onSurface }}\n              style={[\n                styles.button,\n                { backgroundColor: theme.colors.surface, borderColor: theme.colors.surface },\n              ]}\n              onPress={onLogin}\n            >\n              {loading ? 'Authenticating...' : 'Log in'}\n            </Button>\n            {loading ? null : (\n              <TouchableOpacity\n                onPress={() => navigation.navigate('Wizards', { screen: 'RecoverPasswordScreen' })}\n              >\n                <Text style={theme.dark ? styles.forgotPasswordDark : styles.forgotPassword}>\n                  Forgot your password?\n                </Text>\n              </TouchableOpacity>\n            )}\n\n            <Divider>or</Divider>\n            <FacebookButton\n              disabled={loading}\n              style={{ marginTop: 8 }}\n              onPress={loginWithFacebook}\n            />\n\n            <AppleButton onPress={loginWithApple} style={{ width: '100%', flex: 1 }} />\n\n            <Button\n              labelStyle={styles.textButtonLabel}\n              style={styles.textButton}\n              onPress={() => navigation.navigate('Unauthenticated', { screen: 'SignUpWizard' })}\n            >\n              Sign up\n            </Button>\n          </Card.Content>\n        </Card>\n      </KeyboardAvoidingView>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  animationContainer: {\n    width: '100%',\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loadingAnimation: {\n    alignSelf: 'center',\n    marginTop: 24,\n    marginBottom: 32,\n    height: 156,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  forgotPassword: {\n    marginTop: 8,\n    color: 'rgb(50, 50, 50)',\n  },\n  forgotPasswordDark: {\n    marginTop: 8,\n    color: 'rgb(180, 180, 180)',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginVertical: 4,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%',\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  },\n});\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport startCase from 'lodash/startCase';\nimport { FieldError, Mutation } from './schema';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern:\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  } | null\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: { [K in keyof Mutation]: Maybe<Payload> }) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string | string[]) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        const [msg] = [message].flat();\n        onFieldError?.(`${fieldName}`, `${startCase(fieldName)} ${msg}`);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          if (err instanceof Error) {\n            onError?.(err.message);\n          }\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserSignUpArgs, UserSignUpPayload } from '../schema';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserSignUpArgs, UserSignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userSignUp,\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'A confirmation link has been sent to your email',\n          variant: 'success',\n        })\n      );\n\n      navigation.navigate('Unauthenticated', { screen: 'LoginScreen' });\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Email\"\n          error={state.fields.email.error}\n          value={state.fields.email.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['email', newValue]))}\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Password\"\n          error={state.fields.password.error || state.fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['password', newValue]))}\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Repeat password\"\n          error={state.fields.password.error || state.fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChange={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport SignupWizard from 'app/screens/unauthenticated/signup/wizard/SignupWizard';\nimport LoginScreen from './login/LoginScreen';\nimport SignUpScreen from './signup/SignUpScreen';\n\nexport type UnauthenticatedRoutes = {\n  LoginScreen: undefined;\n  SignUpScreen: undefined;\n  SignUpWizard: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<UnauthenticatedRoutes>();\nexport function useUnauthenticatedNavigation() {\n  return useNavigation<NavigationProp<UnauthenticatedRoutes>>();\n}\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n        presentation: 'modal',\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n      <Stack.Screen name=\"SignUpWizard\" component={SignupWizard} />\n    </Stack.Navigator>\n  );\n}\n","import { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzoneDocument } from '../reflection';\nimport { CreateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federationId: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  Required<CreateDropzoneMutation>['createDropzone']\n>(CreateDropzoneDocument, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federationId: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs } from '../schema';\nimport { UpdateDropzoneDocument } from '../reflection';\nimport { UpdateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  Required<UpdateDropzoneMutation>['updateDropzone']\n>(UpdateDropzoneDocument, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreatePlanePayload } from '../schema';\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    registration: string;\n    dropzoneId: number;\n    minSlots: number;\n    maxSlots: number;\n    hours?: number;\n    nextMaintenanceHours?: number;\n  },\n  CreatePlanePayload\n>(MUTATION_CREATE_PLANE, {\n  getPayload: (result) => result.createPlane,\n  fieldErrorMap: {\n    dropzoneId: 'dropzone',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    registration: [isRequired('Registration is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdatePlaneArgs, UpdatePlanePayload } from '../schema';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdatePlaneArgs['input']['attributes'],\n  UpdatePlanePayload\n>(MUTATION_UPDATE_PLANE, {\n  getPayload: (result) => result.updatePlane,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { MutationCreateTicketTypeArgs, CreateTicketPayload } from '../schema';\n\nconst MUTATION_CREATE_TICKET_TYPE = gql`\n  mutation CreateTicketType(\n    $name: String\n    $cost: Float\n    $dropzoneId: Int!\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    createTicketType(\n      input: {\n        attributes: {\n          name: $name\n          cost: $cost\n          dropzoneId: $dropzoneId\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extraIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  MutationCreateTicketTypeArgs['input']['attributes'],\n  CreateTicketPayload\n>(MUTATION_CREATE_TICKET_TYPE, {\n  getPayload: (result) => result.createTicketType,\n  fieldErrorMap: {\n    extraIds: 'extras',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price')],\n    altitude: [isRequired('Altitude must be specified'), isNumeric('Altitude must be a number')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { UpdateTicketTypeDocument } from '../reflection';\nimport { UpdateTicketTypeMutation, UpdateTicketTypeMutationVariables } from '../operations';\n\nexport default createMutation<\n  UpdateTicketTypeMutationVariables,\n  Required<UpdateTicketTypeMutation>['updateTicketType']\n>(UpdateTicketTypeDocument, {\n  getPayload: (result) => result.updateTicketType,\n  fieldErrorMap: {\n    id: 'original',\n    extraIds: 'extras',\n  },\n});\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChange={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      keyExtractor={(item) => item.toString()}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useFederationsQuery();\n\n  return (\n    <CardSelect<FederationEssentialsFragment>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as FederationEssentialsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, List, Searchbar } from 'react-native-paper';\nimport debounce from 'lodash/debounce';\nimport { GeocodedLocation } from 'app/api/schema.d';\nimport { first } from 'lodash';\nimport { useAddressToLocationLazyQuery } from 'app/api/reflection';\n\ninterface IAddressSearchBarProps {\n  value: string;\n  autocomplete?: boolean;\n  selectedLocation?: GeocodedLocation;\n  onChange(value: string): void;\n  onSelect(value: GeocodedLocation): void;\n}\nexport default function AddressSearchBar(props: IAddressSearchBarProps) {\n  const { value, onChange: onChangeText, onSelect } = props;\n  const [suggestions, setSuggestions] = React.useState<GeocodedLocation[]>([]);\n  const [selected, setSelected] = React.useState<GeocodedLocation>();\n  const [fetchLocation, { data }] = useAddressToLocationLazyQuery();\n\n  const fetchSuggestions = React.useCallback(\n    (search: string) => {\n      fetchLocation({\n        variables: {\n          search,\n        },\n      });\n    },\n    [fetchLocation]\n  );\n\n  const fetchSuggestionsDebounced = React.useMemo(\n    () => debounce<typeof fetchSuggestions>(fetchSuggestions),\n    [fetchSuggestions]\n  );\n\n  React.useEffect(() => {\n    if (data?.geocode) {\n      setSuggestions([data.geocode]);\n    }\n  }, [data?.geocode]);\n\n  React.useEffect(() => {\n    if (value && value?.length > 4) {\n      fetchSuggestionsDebounced(value);\n    } else if (!value) {\n      setSuggestions([]);\n    }\n  }, [value, fetchSuggestionsDebounced]);\n\n  const onPickResult = React.useCallback(\n    (location: GeocodedLocation) => {\n      onSelect(location);\n      onChangeText(location.formattedString || '');\n      setSuggestions([]);\n      setSelected(location);\n    },\n    [onChangeText, onSelect]\n  );\n\n  return (\n    <View style={{ width: '100%', borderRadius: 3, backgroundColor: 'white' }}>\n      <Searchbar\n        {...{ value, onChangeText }}\n        allowFontScaling\n        numberOfLines={1}\n        onSubmitEditing={() => {\n          if (first(suggestions)) {\n            onPickResult(first(suggestions) as GeocodedLocation);\n          }\n        }}\n      />\n      {suggestions\n        ?.filter((suggestion) => suggestion.formattedString !== selected?.formattedString)\n        .map((item) => {\n          return (\n            <>\n              <Divider />\n              <List.Item\n                title={item.formattedString}\n                onPress={() => {\n                  onPickResult(item);\n                }}\n              />\n            </>\n          );\n        })}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport Map from 'app/components/map/Map';\nimport AddressSearchBar from 'app/components/input/search/AddressSearchBar';\nimport { useIsFocused } from '@react-navigation/core';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const [searchText, setSearchText] = React.useState('');\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <Step {...props} title=\"Location\" hideContentUntilNavigatedTo>\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <View style={{ width: 300, display: 'none', alignSelf: 'flex-start', marginLeft: 32 }}>\n          <AddressSearchBar\n            value={searchText}\n            onChange={setSearchText}\n            autocomplete\n            onSelect={(item) => {\n              dispatch(actions.forms.dropzone.setField(['lat', item.lat]));\n              dispatch(actions.forms.dropzone.setField(['lng', item.lng]));\n            }}\n          />\n        </View>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 32,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nexport enum NumberFieldType {\n  Cash = 'cash',\n  Weight = 'weight',\n  CanopySize = 'canopySize',\n}\ninterface INumberFieldProps {\n  error?: string | null;\n  label?: string;\n  helperText?: string;\n  disabled?: boolean;\n  value?: number | null;\n  mode?: 'outlined' | 'flat';\n  variant?: NumberFieldType | null;\n  onChange(newValue: number): void;\n}\n\nconst adornments = {\n  [NumberFieldType.Cash]: '$',\n  [NumberFieldType.CanopySize]: 'ft',\n  [NumberFieldType.Weight]: 'kg',\n};\nconst muiVariants = {\n  flat: 'standard',\n  outlined: 'outlined',\n};\nexport default function NumberField(props: INumberFieldProps) {\n  const {\n    label,\n    mode,\n    disabled,\n    onChange: onChangeValue,\n    helperText,\n    error,\n    variant,\n    ...rest\n  } = props;\n  const { value } = rest;\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeValue(Number(e.target.value));\n    },\n    [onChangeValue]\n  );\n\n  return (\n    <FormControl\n      sx={{ m: 1 }}\n      variant={\n        mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n      }\n      fullWidth\n    >\n      <TextField\n        type=\"number\"\n        fullWidth\n        variant={\n          mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n        }\n        {...{ label, disabled, value, onChange }}\n        InputProps={{\n          ...(variant && variant !== NumberFieldType.Cash\n            ? {\n                endAdornment: <InputAdornment position=\"end\">{adornments[variant]}</InputAdornment>,\n              }\n            : {}),\n          ...(variant !== NumberFieldType.Cash\n            ? {}\n            : {\n                startAdornment: (\n                  <InputAdornment position=\"start\">{adornments[variant]}</InputAdornment>\n                ),\n              }),\n        }}\n      />\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NumberField from 'app/components/input/number_input/NumberField';\n\nfunction AircraftWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Aircraft\">\n      <Fields>\n        <List.Subheader>Information</List.Subheader>\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n        />\n\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Registration\"\n          error={state.fields.registration.error}\n          value={state.fields.registration.value || ''}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.plane.setField(['registration', newValue]))\n          }\n        />\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            mode=\"flat\"\n            onChange={(slots) => dispatch(actions.forms.plane.setField(['maxSlots', slots]))}\n            label=\"Max slots\"\n            helperText=\"Max available slots on this aircraft\"\n            value={state.fields.maxSlots.value}\n            error={state.fields.maxSlots.error}\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 4 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default AircraftWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\nimport SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={SliderComponent}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { Permission } from '../api/schema.d';\nimport { useCurrentUserPermissionsLazyQuery } from '../api/reflection';\nimport { useAppSelector } from '../state';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [execute, { data }] = useCurrentUserPermissionsLazyQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      execute({\n        variables: {\n          dropzoneId: Number(currentDropzoneId),\n        },\n      });\n    }\n  }, [currentDropzoneId, execute]);\n\n  const permissions = data?.dropzone?.currentUser?.permissions || [];\n  return permissions?.includes(permission as Permission) || false;\n}\n","import { useUpdateRoleMutation } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RoleDetailedFragment } from 'app/api/operations';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: RoleDetailedFragment;\n  permissionName: string;\n}\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useUpdateRoleMutation();\n  const dispatch = useAppDispatch();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) =>\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'error',\n                  })\n                )\n              );\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission, Query } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzonePermissions($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useLazyQuery<Query>(QUERY_DROPZONE_PERMISSIONS);\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          dropzoneId: Number(dropzoneForm.original.id),\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string | null;\n  name?: string | null;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, size, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text\n      label={initals || ''}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\nimport first from 'lodash/first';\n\ninterface IUserAvatarProps {\n  image?: string | null;\n  name?: string | null;\n  size?: number;\n}\n\nfunction stringToColor(string: string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, size } = props;\n  const initials = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return (\n    <Avatar\n      sx={{\n        bgcolor: stringToColor(name || 'Dropzone User'),\n      }}\n      style={{ height: size, width: size, alignSelf: 'center', marginRight: 12 }}\n      src={image || undefined}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n","import * as React from 'react';\nimport MuiMenu from '@mui/material/Menu';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport { View, TouchableOpacity } from 'react-native';\nimport { ListItemAvatar, ListItemIcon, ListItemText } from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IPopoverMenuProps {\n  open: boolean;\n  anchor: React.ReactNode;\n  children: React.ReactNode;\n  setOpen(open: boolean): void;\n}\n\ninterface IMenuItemProps {\n  title?: string | null;\n  testID?: string;\n  bold?: boolean;\n  icon?: IconSource;\n  avatar?: { name: string; image?: string } | null;\n  onPress(): void;\n}\n\nexport function MenuItem(props: IMenuItemProps) {\n  const { title, bold, onPress, avatar, icon, testID } = props;\n  return (\n    <MuiMenuItem\n      style={{ fontWeight: bold ? 'bold' : undefined }}\n      onClick={onPress}\n      data-testid={testID}\n    >\n      {!icon || avatar ? null : (\n        <ListItemIcon>\n          {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon} /> : icon}\n        </ListItemIcon>\n      )}\n      {!avatar ? null : (\n        <ListItemAvatar>\n          <UserAvatar name={avatar.name} image={avatar?.image} size={32} />\n        </ListItemAvatar>\n      )}\n      <ListItemText>{title}</ListItemText>\n    </MuiMenuItem>\n  );\n}\n\nexport default function Menu(props: IPopoverMenuProps) {\n  const { open, setOpen, anchor, children } = props;\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const onClick = React.useCallback(\n    (event) => {\n      setOpen(true);\n      console.log({ event });\n      setAnchorEl(event.currentTarget);\n    },\n    [setOpen]\n  );\n  const onClose = React.useCallback(() => {\n    setAnchorEl(null);\n    setOpen(false);\n  }, [setOpen]);\n\n  return (\n    <>\n      <TouchableOpacity onPress={onClick}>\n        <View pointerEvents=\"none\">{anchor}</View>\n      </TouchableOpacity>\n      <MuiMenu\n        {...{ anchorEl, onClose, open }}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {children}\n      </MuiMenu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport MuiSelect from '@mui/material/Select';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport {\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  ListItemIcon,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport UserAvatar from 'app/components/UserAvatar';\nimport Menu from 'app/components/popover/Menu';\n\nexport interface ISelectOption<T> {\n  label: string;\n  value: T;\n  icon?: IconSource;\n  avatar?: string | null;\n}\ninterface ISelectProps<T> {\n  label?: string;\n  error?: string | null;\n  helperText?: string;\n  options: ISelectOption<T>[];\n  value?: T | null;\n  onChange(item: T): void;\n  renderAnchor?: React.FC<IAnchorProps<T>>;\n}\n\ninterface IAnchorProps<T> {\n  item?: ISelectOption<T>;\n  openMenu(): void;\n}\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : unknown;\ntype AllowedIcons = Extract<typeof MaterialCommunityIcons>['name'];\n\nexport default function Select<T>(props: ISelectProps<T>) {\n  const { label, error, options, renderAnchor, onChange, value, helperText } = props;\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const onOpen = React.useCallback(() => {\n    if (!options?.length) {\n      return;\n    }\n    setOpen(true);\n  }, [options?.length]);\n  const onDismiss = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const selectedOption = React.useMemo(\n    () => options.find((option) => option.value === value),\n    [options, value]\n  );\n\n  const createSelectHandler = React.useCallback(\n    (option: ISelectOption<T>) => () => {\n      onDismiss();\n      onChange(option.value);\n    },\n    [onChange, onDismiss]\n  );\n  const showAvatars = React.useMemo(() => options?.some((option) => option.avatar), [options]);\n\n  const anchor = React.useMemo(\n    () =>\n      typeof renderAnchor === 'function'\n        ? (renderAnchor as Function)({ item: selectedOption, openMenu: onOpen })\n        : null,\n    [onOpen, renderAnchor, selectedOption]\n  );\n\n  if (renderAnchor) {\n    return (\n      <Menu {...{ anchor, open, setOpen }}>\n        {options?.map((option) => {\n          const { icon, avatar, label: title } = option;\n\n          return (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            <MuiMenuItem onClick={createSelectHandler(option)}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? (\n                    <MaterialCommunityIcons name={icon as AllowedIcons} />\n                  ) : (\n                    icon\n                  )}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n\n              <ListItemText>{title}</ListItemText>\n            </MuiMenuItem>\n          );\n        })}\n      </Menu>\n    );\n  }\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\n      <MuiSelect\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={selectedOption?.value}\n        {...{ label }}\n        variant=\"standard\"\n        error={!!error}\n        style={{ paddingTop: 0 }}\n        SelectDisplayProps={{\n          style: { display: 'inline-flex', alignItems: 'center' },\n        }}\n        onChange={({ target }) => onChange(target.value as T)}\n      >\n        {options?.map(({ value: val, icon, avatar, label: title }) => (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <MuiMenuItem value={val as T}>\n            {!icon || avatar ? null : (\n              <ListItemIcon>\n                {typeof icon === 'string' ? (\n                  <MaterialCommunityIcons name={icon as AllowedIcons} size={24} />\n                ) : (\n                  icon\n                )}\n              </ListItemIcon>\n            )}\n            {!avatar || !showAvatars ? null : (\n              <ListItemAvatar>\n                <UserAvatar name={label} image={avatar} size={32} />\n              </ListItemAvatar>\n            )}\n            <ListItemText primary={title} />\n          </MuiMenuItem>\n        ))}\n      </MuiSelect>\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import * as React from 'react';\nimport Select from '../select/Select';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  onChange(value: number): void;\n}\nexport default function AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange } = props;\n\n  return (\n    <Select\n      label=\"Altitude\"\n      {...{ value, onChange }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, Paragraph } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport AltitudeSelect from 'app/components/input/dropdown_select/AltitudeSelect';\nimport TextInput from 'app/components/input/text/TextField';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\n\nfunction TicketTypeWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Tickets\">\n      <Fields>\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.ticketType.setField(['name', newValue]))\n          }\n        />\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            mode=\"flat\"\n            onChange={(cost) => dispatch(actions.forms.ticketType.setField(['cost', cost]))}\n            label=\"Price\"\n            variant={NumberFieldType.Cash}\n            value={state.fields.cost.value}\n            error={state.fields.cost.error}\n          />\n        </Card>\n\n        <Card style={styles.altitudeSelect} elevation={3}>\n          <AltitudeSelect\n            onChange={(value) => dispatch(actions.forms.ticketType.setField(['altitude', value]))}\n            value={state.fields.altitude.value || 14000}\n          />\n          {(!state.fields.altitude.value ||\n            ![4000, 14000].includes(state.fields.altitude.value)) && (\n            <TextInput\n              style={styles.field}\n              label=\"Custom altitude\"\n              error={state.fields.altitude.error}\n              value={state.fields.altitude?.value?.toString()}\n              onChange={(newValue) =>\n                dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n              }\n            />\n          )}\n        </Card>\n        <Paragraph style={styles.paragraph}>\n          You can add more tickets later under Settings\n        </Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  altitudeSelect: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  paragraph: {\n    marginBottom: 8,\n    fontWeight: 'bold',\n    // fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    // marginHorizontal: 16,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default TicketTypeWizardScreen;\n","import * as React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Platform } from 'react-native';\n\nexport default function useImagePicker() {\n  const onPickImage = React.useCallback(async () => {\n    if (Platform.OS !== 'web') {\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n    const result = (await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.1,\n      base64: true,\n    })) as { base64: string };\n\n    return result?.base64;\n  }, []);\n\n  return onPickImage;\n}\n","import * as React from 'react';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { View, StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\n\nfunction Logo(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      } else {\n        console.log({ base64 });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n  const theme = useTheme();\n\n  return (\n    <Step {...props} title=\"Banner\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.banner?.value ? (\n              <LottieView\n                style={{ height: 175, width: 175 }}\n                autoPlay\n                loop={false}\n                // eslint-disable-next-line global-require\n                source={require('../../../../../assets/images/image-pick.json')}\n              />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.banner?.value }}\n                style={{\n                  borderWidth: StyleSheet.hairlineWidth,\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={{ paddingHorizontal: 48, marginTop: 24 }}>\n            Your logo is displayed as an avatar for your dropzone throughout the app.\n          </Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\nexport default Logo;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { PlaneFields } from 'app/components/forms/plane/slice';\nimport { TicketTypeFields } from 'app/components/forms/ticket_type/slice';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport useMutationCreatePlane from 'app/api/hooks/useMutationCreatePlane';\nimport useMutationUpdatePlane from 'app/api/hooks/useMutationUpdatePlane';\nimport useMutationCreateTicketType from 'app/api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from 'app/api/hooks/useMutationUpdateTicketType';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport AircraftStep from './steps/Aircraft';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport TicketTypeStep from './steps/TicketType';\nimport LogoStep from './steps/Logo';\n\nfunction DropzoneSetupScreen() {\n  const aircraft = useAppSelector((root) => root.forms.plane);\n  const ticket = useAppSelector((root) => root.forms.ticketType);\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const mutationCreatePlane = useMutationCreatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationUpdatePlane = useMutationUpdatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationCreateTicketType = useMutationCreateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n  const mutationUpdateTicketType = useMutationUpdateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onLogoNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federationId: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: dropzone.fields.banner.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federationId: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: dropzone.fields.banner.value || '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            break;\n          case 'federationId':\n            navigation.goBack();\n            navigation.goBack();\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            break;\n          case 'name':\n            navigation.goBack();\n            navigation.goBack();\n            navigation.goBack();\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            break;\n          case 'lat':\n          case 'lng':\n            navigation.goBack();\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.banner.value,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n    navigation,\n  ]);\n\n  const onAircraftNext = React.useCallback(async () => {\n    if (!aircraft.fields.name.value) {\n      dispatch(actions.forms.plane.setFieldError(['name', 'You must name your aircraft']));\n      throw new Error();\n    }\n    if (!aircraft.fields.registration.value) {\n      dispatch(\n        actions.forms.plane.setFieldError(['registration', 'Please provide aircraft registration'])\n      );\n      throw new Error();\n    }\n\n    // Create or update dropzone\n    const result = !aircraft.original?.id\n      ? await mutationCreatePlane.mutate({\n          dropzoneId: Number(dropzone?.original?.id),\n          name: aircraft.fields.name.value,\n          registration: aircraft.fields.registration.value,\n          minSlots: Number(aircraft.fields.minSlots.value),\n          maxSlots: Number(aircraft.fields.maxSlots.value),\n        })\n      : await mutationUpdatePlane.mutate({\n          id: Number(aircraft.original.id),\n          name: aircraft.fields.name.value,\n          registration: aircraft.fields.registration.value,\n          minSlots: aircraft.fields.minSlots.value,\n          maxSlots: aircraft.fields.maxSlots.value,\n        });\n\n    if (!result?.errors?.length && result?.plane?.id) {\n      dispatch(actions.forms.plane.setOpen(result?.plane));\n    } else {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (field) {\n          case 'registration':\n            dispatch(actions.forms.plane.setFieldError(['registration', message]));\n            break;\n          case 'name':\n            dispatch(actions.forms.plane.setFieldError(['name', message]));\n            break;\n          case 'maxSlots':\n            dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    aircraft.fields.maxSlots.value,\n    aircraft.fields.minSlots.value,\n    aircraft.fields.name.value,\n    aircraft.fields.registration.value,\n    aircraft.original?.id,\n    dispatch,\n    dropzone?.original?.id,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n  ]);\n\n  const onTicketTypeNext = React.useCallback(async () => {\n    if (!ticket.fields.name.value) {\n      dispatch(actions.forms.ticketType.setFieldError(['name', 'You must name your ticket']));\n      throw new Error();\n    }\n\n    if (!ticket.fields.cost.value) {\n      dispatch(actions.forms.ticketType.setFieldError(['cost', 'Tickets must have a price']));\n      throw new Error();\n    }\n\n    // Create or update dropzone\n    const result = !ticket.original?.id\n      ? await mutationCreateTicketType.mutate({\n          dropzoneId: Number(dropzone.original?.id),\n          name: ticket.fields.name.value,\n          cost: ticket.fields.cost.value,\n          altitude: ticket.fields.altitude.value,\n          isTandem: false,\n          allowManifestingSelf: true,\n        })\n      : await mutationUpdateTicketType.mutate({\n          id: Number(ticket.original.id),\n          name: ticket.fields.name.value,\n          cost: ticket.fields.cost.value,\n          altitude: ticket.fields.altitude.value,\n          isTandem: false,\n          allowManifestingSelf: true,\n        });\n\n    if (!result?.errors?.length && result?.ticketType?.id) {\n      dispatch(actions.forms.ticketType.setOpen(result.ticketType));\n    } else {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (field) {\n          case 'cost':\n            dispatch(actions.forms.ticketType.setFieldError(['cost', message]));\n            break;\n          case 'name':\n            dispatch(actions.forms.ticketType.setFieldError(['name', message]));\n            break;\n          case 'altitude':\n            dispatch(actions.forms.ticketType.setFieldError(['altitude', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    ticket.fields.name.value,\n    ticket.fields.cost.value,\n    ticket.fields.altitude.value,\n    ticket.original?.id,\n    mutationCreateTicketType,\n    dropzone.original?.id,\n    mutationUpdateTicketType,\n    dispatch,\n  ]);\n\n  const noop = React.useCallback(() => Promise.resolve(), []);\n\n  return (\n    <Wizard\n      dots\n      name=\"DropzoneWizard\"\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.ticketType.setOpen(false));\n            dispatch(actions.forms.plane.setOpen(false));\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.ticketType.reset());\n            dispatch(actions.forms.plane.reset());\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: noop },\n        {\n          onNext: onLogoNext,\n          component: LogoStep,\n        },\n        { component: AircraftStep, onNext: onAircraftNext },\n        { component: TicketTypeStep, onNext: onTicketTypeNext },\n        {\n          component: (stepProps) => (\n            <PermissionStep {...stepProps} permission={Permission.CreateSlot} title=\"Manifest\" />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.ticketType.setOpen(false));\n            dispatch(actions.forms.plane.setOpen(false));\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.ticketType.reset());\n            dispatch(actions.forms.plane.reset());\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            navigation.replace('Authenticated', { screen: 'HomeScreen' });\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { UpdateUserMutation, UpdateUserMutationVariables } from '../operations';\nimport { UpdateUserDocument } from '../reflection';\n\nexport default createMutation<\n  UpdateUserMutationVariables,\n  Required<UpdateUserMutation>['updateUser']\n>(UpdateUserDocument, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n});\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title={`${state.federation?.value?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <TextInput\n          value={state.fields?.apfNumber?.value || ''}\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n          }\n          label={`${state.federation.value?.name} ID`}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RealName(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <TextInput\n          value={state.fields?.name?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction UserInfoScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <TextInput\n          value={state.fields?.nickname?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n          {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default UserInfoScreen;\n","import { LicenseDetailsFragment, LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseDetailsFragment): void;\n}\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<LicenseDetailsFragment>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as LicenseDetailsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseCardSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default FederationStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, Surface, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport Select from 'app/components/input/select/Select';\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Select<string>\n          label=\"Manufacturer\"\n          onChange={(value) => {\n            setIsOtherMake(value === 'other');\n            dispatch(actions.forms.rig.setField(['make', value]));\n          }}\n          value={state.fields.make.value}\n          options={[\n            'Icon',\n            'Javelin',\n            'Mirage',\n            'Vector',\n            'PA (Talon)',\n            'Infinity',\n            'Parachutes de France',\n            'Parachute Systems',\n            'Racer',\n          ]\n            .map((label) => ({ label, value: label }))\n            .concat([{ label: 'Other', value: 'other' }])}\n        />\n        {!isOtherMake ? null : (\n          <Surface style={styles.card}>\n            <TextInput\n              style={{ backgroundColor: 'transparent' }}\n              mode=\"flat\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          </Surface>\n        )}\n        {state.fields.make.error && (\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n        )}\n\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Model\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Surface>\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Serial number\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          {state.fields.serial.error && (\n            <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n              {state.fields.serial.error}\n            </HelperText>\n          )}\n        </Surface>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { marginVertical: 8 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport Menu from 'app/components/popover/Menu';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\nimport { View } from 'react-native';\n\ninterface IDatepicker {\n  label: string;\n  timestamp: number;\n  disabled?: boolean;\n  onChange(timestamp: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, timestamp, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const left = React.useCallback(() => <List.Icon icon=\"calendar\" />, []);\n  return (\n    <Menu\n      {...{ open, setOpen }}\n      anchor={\n        <List.Item\n          onPress={() => setOpen(true)}\n          disabled={!!disabled}\n          title={label}\n          description={timestamp ? format(timestamp * 1000, 'yyyy/MM/dd') : 'No date selected'}\n          left={left}\n        />\n      }\n    >\n      <View style={{ zIndex: 1500 }}>\n        <DayPicker\n          selectedDays={timestamp ? [new Date(timestamp * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </View>\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            label=\"Reserve repack due date\"\n            timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <CardSelect\n          items={[\n            { value: false, label: 'I have my own rig' },\n            { value: true, label: 'I dont have my own rig' },\n          ]}\n          renderItemLabel={({ label }) => label}\n          onChangeSelected={(options) =>\n            dispatch(actions.screens.userWizard.skipRigSetup(options[0].value))\n          }\n          isSelected={({ value }) => value === state.skipRigSetup}\n          selected={[\n            state.skipRigSetup\n              ? { value: true, label: 'I dont have my own rig' }\n              : { value: false, label: 'I have my own rig' },\n          ]}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Card, Paragraph } from 'react-native-paper';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil(\n                (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                  (rigForm.fields.canopySize.value || 150),\n                2\n              ).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>\n              Your wingloading is an indicator of your descent rate under canopy\n            </Paragraph>\n          </View>\n        </View>\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            label=\"Your exit weight\"\n            variant={NumberFieldType.Weight}\n            value={Number(userForm?.fields?.exitWeight?.value) || 50}\n            onChange={(value) =>\n              dispatch(actions.forms.user.setField(['exitWeight', value.toString()]))\n            }\n            error={userForm.fields.exitWeight?.error}\n            helperText=\"Your weight in kg's with all equipment on\"\n          />\n          <NumberField\n            label=\"Canopy Size\"\n            variant={NumberFieldType.CanopySize}\n            value={Number(rigForm?.fields?.canopySize?.value) || 120}\n            onChange={(value) => dispatch(actions.forms.rig.setField(['canopySize', value]))}\n            helperText=\"Size of your main canopy in square feet\"\n            error={userForm.fields.exitWeight?.error}\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, paddingRight: 16, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginVertical: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\n\nfunction AvatarStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.user.setField(['image', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  return (\n    <Step {...props} title=\"Avatar\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.image?.value ? (\n              <Avatar.Icon size={175} icon=\"camera\" />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.image?.value }}\n                style={{\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={styles.paragraph}>Press to upload a photo</Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\n\nexport default AvatarStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  useJoinFederationMutation,\n  useCreateRigMutation,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport useMutationUpdateUser from 'app/api/hooks/useMutationUpdateUser';\nimport { UserFields } from 'app/components/forms/user/slice';\nimport { License, Rig } from 'app/api/schema.d';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\nimport AvatarStep from './steps/Avatar';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  const [joinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const [mutationUpdateRig] = useUpdateRigMutation();\n  const [mutationCreateRig] = useCreateRigMutation();\n\n  const onNameNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n      dispatch(\n        actions.forms.user.setFieldError(['name', 'Please enter your full name, including surname'])\n      );\n      throw new Error();\n    }\n  }, [dispatch, userForm.fields.name.value]);\n\n  const onNicknameNext = React.useCallback(async () => {\n    // Update user license\n    const result = await mutationUpdateUser.mutate({\n      id: Number(userForm.original?.id),\n      nickname: userForm.fields.nickname.value,\n      name: userForm.fields.name.value,\n    });\n\n    if (result?.errors) {\n      throw new Error();\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.name.value,\n    userForm.fields.nickname.value,\n    userForm.original?.id,\n  ]);\n\n  const onFederationNext = React.useCallback(async () => {\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          federationId: Number(userForm.federation?.value?.id),\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [dispatch, joinFederation, userForm.federation.value?.id, userForm.federation.value?.name]);\n\n  const onFederationNumberNext = React.useCallback(async () => {\n    // Validate\n    if (\n      userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n      !userForm.fields.apfNumber.value\n    ) {\n      dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n      throw new Error();\n    }\n\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          uid: userForm.fields.apfNumber.value,\n          federationId: Number(userForm.federation?.value?.id),\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation.value?.id,\n    userForm.federation.value?.name,\n    userForm.fields.apfNumber.value,\n  ]);\n\n  const onLicenseNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.license?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n      throw new Error();\n    }\n\n    try {\n      const response = await joinFederation({\n        variables: {\n          federationId: Number(userForm.federation?.value?.id),\n          licenseId: Number(userForm.fields.license?.value?.id),\n        },\n      });\n      if (response.data?.joinFederation?.errors) {\n        response.data?.joinFederation?.errors?.map((message) =>\n          dispatch(actions.forms.user.setFieldError(['license', message]))\n        );\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation?.value?.id,\n    userForm.fields.license?.value?.id,\n  ]);\n\n  const onRigNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.make?.value) {\n      dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n      throw new Error();\n    }\n\n    if (!rigForm.fields.model?.value) {\n      dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n      throw new Error();\n    }\n\n    // Create user rig\n    try {\n      if (!rigForm.original?.id) {\n        const response = await mutationCreateRig({\n          variables: {\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.id),\n          },\n        });\n        if (response?.data?.createRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.createRig?.rig as Rig));\n        }\n      } else {\n        const response = await mutationUpdateRig({\n          variables: {\n            id: Number(rigForm.original?.id),\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.id),\n          },\n        });\n        if (response?.data?.updateRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.updateRig?.rig as Rig));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    rigForm.fields.make.value,\n    rigForm.fields.model.value,\n    rigForm.fields.serial.value,\n    rigForm.original?.id,\n    dispatch,\n    mutationCreateRig,\n    userForm.original?.id,\n    mutationUpdateRig,\n  ]);\n\n  const onReserveRepackNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.repackExpiresAt?.value) {\n      dispatch(\n        actions.forms.rig.setFieldError([\n          'repackExpiresAt',\n          \"Select repack date, even if it's in the past\",\n        ])\n      );\n      throw new Error();\n    }\n\n    // Update repack expiry date\n    const { data } = await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n      },\n    });\n    if (data?.updateRig?.rig) {\n      dispatch(actions.forms.rig.setOriginal(data?.updateRig?.rig as Rig));\n    }\n  }, [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]);\n\n  const onWingloadingNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.canopySize?.value) {\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n      throw new Error();\n    }\n\n    if (!userForm.fields.exitWeight?.value) {\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight']));\n      throw new Error();\n    }\n\n    await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        canopySize: rigForm.fields.canopySize.value,\n      },\n    });\n    await mutationUpdateUser.mutate({\n      id: Number(userForm.original?.id),\n      exitWeight: Number(userForm.fields.exitWeight?.value),\n    });\n  }, [\n    rigForm.fields.canopySize.value,\n    rigForm.original?.id,\n    userForm.fields.exitWeight?.value,\n    userForm.original?.id,\n    dispatch,\n    mutationUpdateRig,\n    mutationUpdateUser,\n  ]);\n\n  const onImageNext = React.useCallback(async () => {\n    try {\n      if (\n        userForm.fields.image?.value &&\n        userForm.fields.image?.value !== userForm.original?.image\n      ) {\n        // Upload image\n        await mutationUpdateUser.mutate({\n          id: Number(userForm?.original?.id),\n          image: userForm.fields.image.value,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.image.value,\n    userForm.original?.id,\n    userForm.original?.image,\n  ]);\n\n  return (\n    <Wizard\n      name=\"UserWizard\"\n      dots\n      steps={[\n        {\n          component: RealNameStep,\n          onNext: onNameNext,\n          onBack: () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n        { component: NicknameStep, onNext: onNicknameNext },\n        { component: AvatarStep, onNext: onImageNext },\n        { component: FederationStep, onNext: onFederationNext },\n        userForm.federation?.value?.id && userForm?.federation?.value?.name?.toLowerCase() === 'apf'\n          ? { component: FederationNumberStep, onNext: onFederationNumberNext }\n          : null,\n        { component: LicenseStep, onNext: onLicenseNext },\n        { component: AskForRigStep },\n        state?.skipRigSetup ? null : { component: RigStep, onNext: onRigNext },\n        state?.skipRigSetup ? null : { component: ReserveRepackStep, onNext: onReserveRepackNext },\n        state?.skipRigSetup ? null : { component: WingloadingStep, onNext: onWingloadingNext },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n      ].filter(Boolean)}\n    />\n  );\n}\n\nexport default UserWizardScreen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>We've sent you a link to restore your password.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useRecoverPasswordMutation } from 'app/api/reflection';\nimport EmailStep from './steps/Email';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n\n  const [onRecover] = useRecoverPasswordMutation();\n\n  const onClickRecover = React.useCallback(async () => {\n    try {\n      await onRecover({\n        variables: {\n          email: state.fields.email.value,\n          redirectUrl: '',\n        },\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['email', e.message]));\n      }\n      throw e;\n    }\n  }, [dispatch, onRecover, state.fields.email.value]);\n\n  return (\n    <Wizard\n      dots\n      name=\"RecoverPasswordWizard\"\n      steps={[{ onNext: onClickRecover, component: EmailStep }, { component: DoneStep }]}\n    />\n  );\n}\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('Limbo', { screen: 'DropzoneSelectScreen' });\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Password changed\">\n      <Fields>\n        <LottieView\n          loop={false}\n          autoPlay\n          speed={1.2}\n          style={{ height: 300, width: 300, alignSelf: 'center' }}\n          source={lottieDoneAnimation as unknown as string}\n        />\n        <Paragraph>Your password has been changed. You can now log in again.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUpdateLostPasswordMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { User } from 'app/api/schema.d';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport DoneStep from './steps/Done';\nimport PasswordStep from './steps/Password';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n\n  const [updatePassword] = useUpdateLostPasswordMutation();\n\n  const onChangePassword = React.useCallback(async () => {\n    try {\n      if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n        throw new Error('Password mismatch. Did you type exactly the same password?');\n      }\n      if (!route.params?.token) {\n        throw new Error('Security token missing - try clicking the link in the email again');\n      }\n      const result = await updatePassword({\n        variables: {\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          token: route.params.token,\n        },\n      });\n\n      if (result?.data?.userUpdatePasswordWithToken?.authenticatable) {\n        dispatch(\n          actions.global.setUser(result.data.userUpdatePasswordWithToken.authenticatable as User)\n        );\n        return;\n      }\n      if (result.errors?.length) {\n        throw new Error(result.errors[0].message);\n      }\n      throw new Error('Password change failed');\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw e;\n    }\n  }, [\n    dispatch,\n    route.params?.token,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    updatePassword,\n  ]);\n\n  const navigation = useNavigation();\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Password too weak');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onFinished = React.useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    navigation.replace('Unauthenticated', { screen: 'LoginScreen' });\n    throw new Error('Error thrown to prevent navigation.goBack');\n  }, [navigation]);\n\n  return (\n    <Wizard\n      dots\n      name=\"ChangePasswordWizard\"\n      steps={[\n        { onBack: navigation.goBack, onNext: validatePassword, component: PasswordStep },\n        { onNext: onChangePassword, component: PasswordConfirmationStep },\n        { component: DoneStep, onNext: onFinished },\n      ]}\n    />\n  );\n}\n","import { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { useAppSelector } from '../../state';\nimport { useQueryDropzone } from '../reflection';\nimport useMutationUpdateUser from './useMutationUpdateUser';\n\nexport default function useCurrentDropzone() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n\n  const currentDropzone = useQueryDropzone({\n    variables: {\n      dropzoneId: Number(dropzoneId),\n      earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: () => null,\n  });\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const userId = currentDropzone?.data?.dropzone?.currentUser?.user?.id;\n    const remoteToken = currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken;\n    const localToken = pushToken;\n\n    if (!currentDropzone.loading && currentDropzone.called) {\n      if (localToken && localToken !== remoteToken && userId) {\n        mutationUpdateUser.mutate({\n          id: Number(userId),\n          pushToken: localToken,\n        });\n      }\n    }\n  }, [\n    pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.id,\n    currentDropzone.loading,\n    currentDropzone.called,\n    mutationUpdateUser,\n  ]);\n\n  return {\n    ...currentDropzone,\n    dropzone: currentDropzone?.data?.dropzone,\n    currentUser: currentDropzone?.data?.dropzone?.currentUser,\n  };\n}\n","import * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport Color from 'color';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nconst defaultColors = {\n  boneColor: '#E1E9EE',\n  highlightColor: '#F2F8FC',\n};\n\nexport default function ThemedSkeleton(props: ExtractProps<typeof SkeletonContent>) {\n  const theme = useTheme();\n  const boneColor = theme.dark\n    ? Color(defaultColors.boneColor).negate().rgb().toString()\n    : defaultColors.boneColor;\n  const highlightColor = theme.dark\n    ? Color(defaultColors.highlightColor).negate().rgb().toString()\n    : defaultColors.highlightColor;\n\n  return <SkeletonContent {...{ boneColor, highlightColor }} {...props} />;\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Chip as MaterialChip, useTheme } from 'react-native-paper';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nexport type ChipProps = Omit<ExtractProps<typeof MaterialChip>, 'icon'> & {\n  icon?: ExtractProps<typeof MaterialCommunityIcons>['name'];\n} & {\n  small?: boolean;\n  color?: string;\n  backgroundColor?: string;\n};\nexport default function Chip(props: ChipProps) {\n  const { small, icon, color: assignedColor, mode, style, backgroundColor, ...rest } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n\n  const chipStyle: ChipProps['style'] = React.useMemo(\n    () => ({\n      marginHorizontal: 4,\n      backgroundColor: mode !== 'flat' ? backgroundColor : undefined,\n      height: small ? 25 : undefined,\n      alignItems: 'center' as const,\n      borderColor: mode !== 'flat' ? color || undefined : undefined,\n    }),\n    [backgroundColor, color, mode, small]\n  );\n  const iconStyles: ChipProps['style'] = React.useMemo(\n    () => (Platform.OS === 'web' ? {} : { marginTop: 0, marginBottom: 3 }),\n    []\n  );\n\n  return (\n    <MaterialChip\n      mode={mode || 'outlined'}\n      selectedColor={color}\n      style={[chipStyle, style]}\n      icon={\n        icon\n          ? (iconProps) => <MaterialCommunityIcons name={icon} {...iconProps} style={iconStyles} />\n          : undefined\n      }\n      textStyle={iconStyles}\n      {...rest}\n    />\n  );\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport Chip, { ChipProps } from 'app/components/chips/Chip';\n\ninterface IChipSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  icon?: ChipProps['icon'];\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction ChipSelect<T extends Record<string, unknown> | string>(props: IChipSelect<T>) {\n  const {\n    items,\n    selected,\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChangeSelected,\n    autoSelectFirst,\n  } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n      {items.map((item) => {\n        const isItemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n        return (\n          <Chip\n            key={JSON.stringify(item)}\n            small\n            mode={!isItemSelected ? 'flat' : 'outlined'}\n            icon={!selected.some((value) => isEqual(item, value)) && icon ? icon : undefined}\n            style={{ margin: Platform.OS === 'web' ? 4 : 1 }}\n            disabled={isDisabled?.(item) || false}\n            selected={isItemSelected}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            {renderItemLabel(item)}\n          </Chip>\n        );\n      })}\n    </View>\n  );\n}\n\nexport default React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof ChipSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseEssentialsFragment): void;\n}\n\nexport default function LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<LicenseEssentialsFragment>\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        selected={[value].filter(Boolean) as LicenseEssentialsFragment[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport Select from '../select/Select';\n\ninterface IFederationSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationSelect(props: IFederationSelect) {\n  const { value, onSelect } = props;\n\n  const { data } = useFederationsQuery();\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onSelect(data.federations[0]);\n    }\n  }, [data?.federations, onSelect, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.federations?.map((node) => ({\n        label: node?.name || '',\n        value: node as FederationEssentialsFragment,\n      })) || [],\n    [data?.federations]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Select<FederationEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onSelect}\n      />\n    </>\n  );\n}\n","import { RoleEssentialsFragment } from 'app/api/operations';\nimport { useRolesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\n\ninterface IRoleSelect {\n  value?: RoleEssentialsFragment | null;\n  disabled?: boolean;\n  onSelect(jt: RoleEssentialsFragment): void;\n}\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const { onSelect, value } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useRolesQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      selectable: true,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.roles?.map((node) => ({\n        label: node?.name || '',\n        value: node as RoleEssentialsFragment,\n      })) || [],\n    [data?.dropzone?.roles]\n  );\n\n  return (\n    <Select<RoleEssentialsFragment>\n      label=\"Access level\"\n      {...{ options, value }}\n      onChange={onSelect}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport NumberField from '../../input/number_input/NumberField';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function GhostForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={state.fields.exitWeight.error}\n        value={Number(state.fields.exitWeight?.value)}\n        onChange={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue?.toString()]))\n        }\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onSelect={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport { StyleSheet } from 'react-native';\nimport { Drawer } from '@mui/material';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n  disablePadding?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  scrollable?: boolean;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nfunction DialogOrSheet(props: IBottomSheetProps) {\n  const {\n    buttonLabel,\n    disablePadding,\n    scrollable,\n    buttonAction,\n    title,\n    loading,\n    open,\n    children,\n    onClose,\n  } = props;\n  const theme = useTheme();\n\n  return (\n    <Drawer\n      {...{ open, onClose }}\n      anchor=\"right\"\n      PaperProps={{ style: { width: 400, overflowY: 'hidden' } }}\n    >\n      <ProgressBar\n        indeterminate\n        color={theme?.colors?.primary}\n        visible={loading}\n        style={{ width: '100%' }}\n      />\n      {!title ? null : (\n        <Dialog.Title numberOfLines={1}>\n          {title}\n          <IconButton icon=\"close\" style={styles.close} size={24} onPress={onClose} />\n        </Dialog.Title>\n      )}\n      <Dialog.Content\n        pointerEvents=\"box-none\"\n        style={[\n          styles.noPadding,\n          scrollable !== false ? {} : { height: 'calc(100% - 80px)', paddingBottom: 0 },\n        ]}\n      >\n        {scrollable !== false ? (\n          <Dialog.ScrollArea\n            style={StyleSheet.flatten([\n              disablePadding ? styles.noPadding : styles.defaultPadding,\n              { paddingTop: title ? 24 : 0 },\n            ])}\n          >\n            <ScrollView>{children}</ScrollView>\n          </Dialog.ScrollArea>\n        ) : (\n          children\n        )}\n      </Dialog.Content>\n      <Dialog.Actions style={{ justifyContent: 'flex-end', backgroundColor: 'transparent' }}>\n        <Button mode=\"contained\" onPress={buttonAction} style={styles.button}>\n          {buttonLabel}\n        </Button>\n      </Dialog.Actions>\n    </Drawer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  noPadding: { borderBottomWidth: 0, paddingLeft: 0, paddingRight: 0 },\n  defaultPadding: { borderBottomWidth: 0, paddingLeft: 24, paddingRight: 24 },\n  button: {\n    width: '100%',\n    padding: 5,\n    alignSelf: 'flex-end',\n    borderRadius: 20,\n    height: 42,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  close: { position: 'absolute', top: 4, right: 4 },\n});\n\nexport default DialogOrSheet;\n","import { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostDocument } from '../reflection';\nimport { CreateGhostMutation, CreateGhostMutationVariables } from '../operations';\n\nexport default createMutation<\n  CreateGhostMutationVariables,\n  Required<CreateGhostMutation>['createGhost']\n>(CreateGhostDocument, {\n  getPayload: (result) => result.createGhost,\n  validates: {\n    exitWeight: [\n      isRequired('Exit weight must be provided'),\n      isNumeric('Please enter a valid number'),\n    ],\n    email: [\n      isRequired('Please provide a valid email address'),\n      isEmail('Please provide a valid email address'),\n    ],\n    name: [isRequired('Name is required')],\n\n    roleId: [isRequired('You must select a role')],\n  },\n  fieldErrorMap: {\n    licenseId: 'license',\n    exitWeight: 'exit_weight',\n    roleId: 'role',\n  },\n});\n","import * as React from 'react';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => {\n      requestAnimationFrame(() => {\n        onSuccess();\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `${payload?.user?.name} has been added to your dropzone`,\n            variant: 'success',\n          })\n        );\n      });\n    },\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n    },\n\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    mutationCreateGhost.mutate({\n      dropzoneId: globalState.currentDropzoneId as number,\n      name: state.fields.name.value || '',\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: Number(state.fields.exitWeight.value),\n      email: state.fields.email.value || '',\n      roleId: Number(state.fields.role.value?.id),\n    });\n  }, [\n    mutationCreateGhost,\n    globalState.currentDropzoneId,\n    state.fields.name.value,\n    state.fields.license.value?.id,\n    state.fields.phone.value,\n    state.fields.exitWeight.value,\n    state.fields.email.value,\n    state.fields.role.value?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { UserRoutes } from './routes';\n\nexport function useUserNavigation() {\n  return useNavigation<NavigationProp<UserRoutes>>();\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport SkeletonContent from 'app/components/Skeleton';\nimport NoResults from 'app/components/NoResults';\nimport { Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport CreateGhostDialog from 'app/components/dialogs/Ghost';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useUserNavigation } from '../useUserNavigation';\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 48, width: 48, marginHorizontal: 12, borderRadius: 48 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\n\nconst loadingFragment: DropzoneUserEssentialsFragment = {\n  id: '__LOADING__',\n  hasCredits: false,\n  hasExitWeight: false,\n  hasLicense: false,\n  hasMembership: false,\n  user: {\n    id: '__LOADING__',\n  },\n};\n\nexport type UserListRoute = {\n  UserListScreen: undefined;\n};\n\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  const { data, loading, refetch } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: state.searchText,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const navigation = useUserNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = data?.dropzone?.dropzoneUsers?.edges || [];\n  const initialLoading = !users?.length && loading;\n  const theme = useTheme();\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.surface }}>\n      <ProgressBar indeterminate color={global.theme.colors.primary} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList<DropzoneUserEssentialsFragment>\n        data={initialLoading ? new Array(8).fill(loadingFragment) : users.map((edge) => edge?.node)}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: Number(global.currentDropzoneId),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={(item, idx) => `user-${item?.id || idx}-${idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%', alignSelf: 'center' }}\n        renderItem={({ item }) =>\n          item.id === '__LOADING__' ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${item?.id}`}\n              style={{ margin: 0, marginVertical: 0, borderRadius: 2, width: '100%' }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 4, paddingRight: 0, paddingBottom: 4 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={item?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={item?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !item?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={48}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: item?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={48}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('ProfileScreen', {\n                      userId: item?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.ghost.setOpen(true))}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from 'app/state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  onSearch,\n  options,\n  back,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search users...\"\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n      )}\n      {searchVisible ? (\n        <MaterialIcons\n          name=\"close\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      ) : (\n        <MaterialIcons\n          name=\"search\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      )}\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import NumberField from 'app/components/input/number_input/NumberField';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport TextInput from '../../input/text/TextField';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChange={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <NumberField\n          disabled={!canInspect}\n          value={value as number}\n          mode=\"outlined\"\n          helperText={config.description || 'No description'}\n          onChange={(text) => onChange({ ...config, value: text as number })}\n          label={config.label || ''}\n        />\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          timestamp={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Avatar, Card, Chip, Divider, ProgressBar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  RigInspectionEssentialsFragment,\n  RigEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n} from 'app/api/operations';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport useMutationUpdateRig from 'app/api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, successColor } from 'app/constants/Colors';\n\nimport { Permission } from 'app/api/schema.d';\nimport { AvailableRigsDocument, DropzoneUsersDetailedDocument } from 'app/api/reflection';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport interface IRigCardProps {\n  rig: RigEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  rigInspection?: RigInspectionEssentialsFragment;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const pickImage = useImagePicker();\n\n  const updateRig = useMutationUpdateRig({\n    mutation: {\n      refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n    },\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      dispatch(\n        actions.notifications.showSnackbar({ message: 'Image uploaded', variant: 'success' })\n      );\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'Upload failed', variant: 'error' }));\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = pickImage();\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pickImage, rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useUserNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.user?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          setOpen={setPackingCardMenuOpen}\n          open={isPackingCardMenuOpen}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              textStyle={{ marginTop: 0 }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <MenuItem\n            title=\"Upload new\"\n            icon=\"camera\"\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <MenuItem\n                title=\"View\"\n                icon=\"eye\"\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rigId: rig.id,\n              dropzoneUserId: dropzoneUser?.id as string,\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, Paragraph } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform, View } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport {\n  QueryDropzoneDocument,\n  QueryDropzoneUserProfileDocument,\n  useCreateRigInspectionMutation,\n  useQueryDropzoneUserProfile,\n} from 'app/api/reflection';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { Query, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  QueryDropzoneUserProfileQuery,\n  QueryDropzoneUserProfileQueryVariables,\n} from 'app/api/operations';\nimport RigCard from '../equipment/RigCard';\n\nexport type RigInspectionRoute = {\n  RigInspectionScreen: {\n    rigId: string;\n    dropzoneUserId: string;\n  };\n};\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<RouteProp<RigInspectionRoute>>();\n  const { rigId, dropzoneUserId } = route.params;\n  const { data, refetch } = useQueryDropzoneUserProfile({\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      dropzoneUserId: Number(dropzoneUserId),\n    },\n  });\n\n  const rig = React.useMemo(\n    () => data?.dropzone?.dropzoneUser?.user?.rigs?.find(({ id }) => id === rigId),\n    [data?.dropzone?.dropzoneUser?.user?.rigs, rigId]\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    refetch();\n  }, [isFocused, refetch]);\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useCreateRigInspectionMutation();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = data?.dropzone?.dropzoneUser?.rigInspections?.some(\n      (inspection) =>\n        inspection.rig?.id?.toString() === rig?.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = data?.dropzone?.dropzoneUser?.rigInspections?.find(\n        (record) => record.rig?.id === rig?.id\n      );\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          data?.dropzone?.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    data?.dropzone?.dropzoneUser?.rigInspections,\n    data?.dropzone?.rigInspectionTemplate?.definition,\n    dispatch,\n    rig?.id,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzone: Number(currentDropzone?.dropzone?.id),\n          rig: Number(rig?.id),\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<\n            QueryDropzoneUserProfileQuery,\n            QueryDropzoneUserProfileQueryVariables\n          >({\n            query: QueryDropzoneUserProfileDocument,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: QueryDropzoneDocument,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: QueryDropzoneDocument,\n              variables: {\n                dropzoneId: Number(currentDropzone?.dropzone?.id),\n                earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            ...result?.dropzone,\n            dropzoneUser: {\n              ...result?.dropzone?.dropzoneUser,\n              rigInspections: [\n                ...(result?.dropzone?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: QueryDropzoneUserProfileDocument,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Rig inspection saved',\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig?.id,\n    state.fields,\n    state.ok,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          maxWidth: 400,\n          backgroundColor: 'transparent',\n        }}\n      >\n        {rig && <RigCard {...{ rig }} />}\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={data?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            {canInspect ? null : (\n              <Paragraph>\n                You need Rig Inspector permissions to update this form, but you can still view it.\n              </Paragraph>\n            )}\n            <View style={{ flex: 1, flexGrow: 1, opacity: canInspect ? 1.0 : 0.6 }}>\n              <RigInspectionForm />\n            </View>\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) === data?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    [Permission.ActAsDzso]: 'shield-cross',\n    [Permission.ActAsGca]: 'radio-handheld',\n    [Permission.ActAsLoadMaster]: 'shield-account',\n    [Permission.ActAsPilot]: 'shield-airplane',\n    [Permission.ActAsRigInspector]: 'shield-search',\n  }[type];\n\n  const label = {\n    [Permission.ActAsDzso]: 'DZSO',\n    [Permission.ActAsGca]: 'GCA',\n    [Permission.ActAsLoadMaster]: 'Load Master',\n    [Permission.ActAsPilot]: 'Pilot',\n    [Permission.ActAsRigInspector]: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import { Mutation } from '../schema.d';\n\ninterface ErrorHandlerOpts<T extends Partial<IGenericFieldErrorResponse>> {\n  onSuccess?(payload: T): void;\n  onFieldError?(field: string, message: string): void;\n  onError?(message: string): void;\n}\n\ntype MutationsWithoutDevise = Omit<\n  Mutation,\n  | '__typename'\n  | 'userConfirmRegistrationWithToken'\n  | 'userLogin'\n  | 'userLogout'\n  | 'userRegister'\n  | 'userResendConfirmation'\n  | 'userResendConfirmationWithToken'\n  | 'userSendPasswordReset'\n  | 'userSendPasswordResetWithToken'\n  | 'userSignUp'\n  | 'userUpdatePassword'\n  | 'userUpdatePasswordWithToken'\n>;\n\ntype RecursivePartial<T> = {\n  [P in keyof T]?: RecursivePartial<T[P]>;\n};\ntype IGenericFieldErrorResponse = {\n  [K in keyof MutationsWithoutDevise]: RecursivePartial<MutationsWithoutDevise[K]>;\n};\n\nexport default function mutationHandlers<T extends Partial<IGenericFieldErrorResponse>>(\n  opts: ErrorHandlerOpts<T>\n) {\n  const { onError, onFieldError, onSuccess } = opts;\n  return {\n    onCompleted: (payload: T) => {\n      const [entry] = Object.values(payload);\n      if (entry?.errors?.length) {\n        entry?.errors?.filter(Boolean).forEach((message) => onError?.(message as string));\n      }\n      if (entry?.fieldErrors?.length) {\n        entry?.fieldErrors?.forEach((err) =>\n          onFieldError?.(err?.field as string, err?.message as string)\n        );\n      }\n\n      if (!entry?.fieldErrors?.length && !entry?.errors?.length) {\n        onSuccess?.(payload);\n      }\n    },\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport startOfDay from 'date-fns/startOfDay';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport {\n  DropzoneUserEssentialsFragment,\n  DropzoneUsersQuery,\n  DropzoneUsersQueryVariables,\n} from 'app/api/operations';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\n\nimport {\n  QueryDropzoneDocument,\n  CurrentUserPermissionsDocument,\n  DropzoneUsersDocument,\n  QueryDropzoneUserProfileDocument,\n  useGrantPermissionMutation,\n  useRevokePermissionMutation,\n  DropzoneUsersDetailedDocument,\n} from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport mutationHandlers from 'app/api/utils/createErrorHandler';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUserEssentialsFragment;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const [revoke] = useRevokePermissionMutation({\n    ...mutationHandlers({\n      onSuccess: (payload) => {\n        dispatch(actions.notifications.showSnackbar({ message: 'Permission revoked' }));\n      },\n      onError: (error) => {\n        dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n      },\n    }),\n    refetchQueries: [\n      {\n        query: QueryDropzoneDocument,\n        variables: {\n          dropzoneId: state.currentDropzoneId,\n          earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n        },\n      },\n      { query: DropzoneUsersDocument },\n      { query: DropzoneUsersDetailedDocument },\n      {\n        query: QueryDropzoneUserProfileDocument,\n        variables: {\n          dropzoneId: state.currentDropzoneId,\n          dropzoneUserId: Number(dropzoneUser.id),\n        },\n      },\n    ],\n    update: async (client, { data }, { variables }) => {\n      const c = client.readQuery<DropzoneUsersQuery, DropzoneUsersQueryVariables>({\n        query: DropzoneUsersDocument,\n        variables: {\n          permissions: [variables?.permissionName].filter(Boolean) as Permission[],\n          dropzoneId: Number(state.currentDropzoneId),\n        },\n      });\n\n      const updatedList = (c?.dropzone?.dropzoneUsers?.edges || []).filter(\n        (edge) => edge?.node?.id !== dropzoneUser?.id\n      );\n\n      client.writeQuery<DropzoneUsersQuery, DropzoneUsersQueryVariables>({\n        query: DropzoneUsersDocument,\n        variables: {\n          permissions: [variables?.permissionName].filter(Boolean) as Permission[],\n          dropzoneId: Number(state.currentDropzoneId),\n        },\n        data: {\n          ...c,\n          dropzone: {\n            ...c?.dropzone,\n            id: `${state.currentDropzoneId}`,\n            dropzoneUsers: {\n              edges: updatedList,\n            },\n          },\n        },\n      });\n\n      return {\n        data: {\n          ...c,\n          dropzone: {\n            ...c?.dropzone,\n            dropzoneUsers: {\n              edges: updatedList,\n            },\n          },\n        },\n      };\n    },\n  });\n  const [grant] = useGrantPermissionMutation({\n    ...mutationHandlers({\n      onSuccess: (payload) => {\n        dispatch(actions.notifications.showSnackbar({ message: 'Permission granted' }));\n      },\n      onError: (error) => {\n        dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n      },\n    }),\n    refetchQueries: [\n      {\n        query: QueryDropzoneDocument,\n        variables: {\n          dropzoneId: state.currentDropzoneId,\n          earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n        },\n      },\n      {\n        query: QueryDropzoneUserProfileDocument,\n        variables: {\n          dropzoneId: state.currentDropzoneId,\n          dropzoneUserId: Number(dropzoneUser.id),\n        },\n      },\n    ],\n    update: async (client, { data }, { variables }) => {\n      const c = client.readQuery<DropzoneUsersQuery, DropzoneUsersQueryVariables>({\n        query: DropzoneUsersDocument,\n        variables: {\n          permissions: [variables?.permissionName].filter(Boolean) as Permission[],\n          dropzoneId: Number(state.currentDropzoneId),\n        },\n      });\n\n      const current = c?.dropzone?.dropzoneUsers?.edges || [];\n      const shouldUpdate = !!current.find((edge) => edge?.node?.id === dropzoneUser?.id);\n\n      const updatedGcaList = shouldUpdate\n        ? [\n            ...(c?.dropzone?.dropzoneUsers?.edges || []).map((edge) =>\n              edge?.node?.id !== dropzoneUser?.id\n                ? edge\n                : {\n                    ...edge,\n                    node: {\n                      ...edge?.node,\n                      ...data?.grantPermission?.dropzoneUser,\n                    },\n                  }\n            ),\n          ]\n        : [\n            ...(c?.dropzone?.dropzoneUsers?.edges || []),\n            {\n              node: data?.grantPermission?.dropzoneUser,\n            },\n          ];\n      const newData = {\n        ...c,\n        dropzone: {\n          ...c?.dropzone,\n          dropzoneUsers: {\n            edges: updatedGcaList,\n          },\n        },\n      };\n      client.writeQuery({\n        query: CurrentUserPermissionsDocument,\n        variables: {\n          dropzoneId: Number(state.currentDropzoneId),\n          permissions: [variables?.permissionName],\n        },\n        data: newData,\n      });\n\n      return {\n        data: newData,\n      };\n    },\n  });\n\n  const badges = permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const shouldShowBadge = (permission: Permission) =>\n    canGrantPermission || badges.includes(permission);\n\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revoke({\n                    variables: {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                  })\n                : grant({\n                    variables: {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                  })\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { useApolloClient } from '@apollo/client';\nimport PermissionBadges from 'app/screens/authenticated/user/profile/UserInfo/PermissionBadges';\nimport * as React from 'react';\nimport { Button, Dialog, List, Portal, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Permission } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment, DropzoneUserProfileFragment } from 'app/api/operations';\nimport { DropzoneUserProfileFragmentDoc, useUpdateDropzoneUserMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const client = useApolloClient();\n  const getCachedUser = React.useCallback(\n    () =>\n      !state.original\n        ? null\n        : client.readFragment<DropzoneUserProfileFragment>({\n            fragment: DropzoneUserProfileFragmentDoc,\n            fragmentName: 'dropzoneUserProfile',\n            id: client.cache.identify(state.original),\n          }),\n    [client, state.original]\n  );\n  const [mutationUpdateDropzoneUser, createData] = useUpdateDropzoneUserMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    onSuccess,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.primary}\n        />\n        <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n        <Dialog.Content>\n          <DropzoneUserForm />\n          {state.original && getCachedUser() ? (\n            <>\n              <List.Subheader style={{ paddingLeft: 0 }}>Acting permissions</List.Subheader>\n              <PermissionBadges\n                dropzoneUser={getCachedUser() as DropzoneUser}\n                permissions={\n                  (getCachedUser() as DropzoneUser).permissions?.filter((name) =>\n                    /^actAs/.test(name)\n                  ) as Permission[]\n                }\n              />\n            </>\n          ) : null}\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.dropzoneUser.reset());\n              onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider, DataTable } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport { TransactionType } from 'app/api/schema.d';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\nexport default function CreditsForm() {\n  const state = useAppSelector((root) => root.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = state.original?.credits || 0;\n  const amount = state.fields.amount.value || 0;\n\n  const subtotal =\n    state.fields.transactionType.value === TransactionType.Deposit\n      ? amount + currentCredits\n      : amount - currentCredits;\n  return (\n    <>\n      <TextInput\n        label=\"Message\"\n        value={state.fields.message.value?.toString() || ''}\n        style={{ marginHorizontal: 8 }}\n        onChange={(newValue: string) =>\n          dispatch(actions.forms.credits.setField(['message', newValue]))\n        }\n      />\n      {state.fields.transactionType.value === 'deposit' ? (\n        <View>\n          <NumberField\n            variant={NumberFieldType.Cash}\n            label=\"Add amount\"\n            error={state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChange={(newValue) => dispatch(actions.forms.credits.setField(['amount', newValue]))}\n          />\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Deposit</DataTable.Title>\n              <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      ) : (\n        <View>\n          <NumberField\n            label=\"Withdraw amount\"\n            variant={NumberFieldType.Cash}\n            error={state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChange={(newValue) => dispatch(actions.forms.credits.setField(['amount', newValue]))}\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Withdraw</DataTable.Title>\n              <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      )}\n    </>\n  );\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { useCreateOrderMutation } from 'app/api/reflection';\nimport { DropzoneUser, TransactionType, WalletableTypes } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CreditsForm from '../../forms/credits/CreditsForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUser;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser, onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.credits);\n  const [mutationCreateOrder, createData] = useCreateOrderMutation();\n  const global = useAppSelector((root) => root.global);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(actions.forms.credits.setFieldError(['amount', 'You must specify an amount']));\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.amount.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n\n    if (!dropzoneUser?.id || state.fields.amount.value === null || !global.currentDropzoneId) {\n      return;\n    }\n\n    try {\n      const response = await mutationCreateOrder({\n        variables: {\n          amount: state.fields.amount.value,\n          title:\n            state.fields.message.value ||\n            `${\n              state.fields.transactionType.value === TransactionType.Deposit\n                ? 'Added funds'\n                : 'Withdrew funds'\n            }`,\n          seller:\n            state.fields.transactionType.value !== TransactionType.Deposit\n              ? {\n                  type: WalletableTypes.Dropzone,\n                  id: `${global.currentDropzoneId}`,\n                }\n              : {\n                  type: WalletableTypes.DropzoneUser,\n                  id: dropzoneUser.id,\n                },\n          buyer:\n            state.fields.transactionType.value === TransactionType.Deposit\n              ? {\n                  type: WalletableTypes.Dropzone,\n                  id: `${global.currentDropzoneId}`,\n                }\n              : {\n                  type: WalletableTypes.DropzoneUser,\n                  id: dropzoneUser.id,\n                },\n          dropzoneId: Number(global.currentDropzoneId),\n        },\n      });\n      const { data: result } = response;\n\n      result?.createOrder?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'amount':\n            return dispatch(actions.forms.credits.setFieldError(['amount', message]));\n          case 'message':\n            return dispatch(actions.forms.credits.setFieldError(['message', message]));\n          case 'status':\n            return dispatch(actions.forms.credits.setFieldError(['status', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.createOrder?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.createOrder?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.createOrder?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        onSuccess();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    validate,\n    dropzoneUser?.id,\n    state.fields.amount.value,\n    state.fields.message.value,\n    state.fields.transactionType.value,\n    global.currentDropzoneId,\n    mutationCreateOrder,\n    dispatch,\n    onSuccess,\n  ]);\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      loading={createData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Save\"\n      onClose={() => {\n        dispatch(actions.forms.credits.reset());\n        onClose();\n      }}\n      buttonAction={onSave}\n      scrollable={false}\n    >\n      <View style={{ marginBottom: 24 }}>\n        <Tabs\n          defaultIndex={0} // default = 0\n          onChangeIndex={(newIndex) => {\n            dispatch(\n              actions.forms.credits.setField([\n                'transactionType',\n                newIndex === 1 ? 'withdrawal' : 'deposit',\n              ])\n            );\n          }}\n          mode=\"fixed\"\n        >\n          <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n            <View />\n          </TabScreen>\n          <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n            <View />\n          </TabScreen>\n        </Tabs>\n      </View>\n      <CreditsForm />\n    </DialogOrSheet>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('Manufacturer is required')],\n    model: [isRequired('Model is required')],\n    serial: [isRequired('Serial number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"You can give your equipment a nickname\"\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Make\"\n        helperText=\"e.g Javelin, Mirage\"\n        error={state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Model\"\n        error={state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Serial\"\n        error={state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Current canopy size\"\n        error={state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Size of canopy in container\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          selected={[state.fields.rigType?.value || 'sport']}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField(['rigType', rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        console.log(payload);\n        onSuccess();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      const params = {\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      };\n      console.log(params);\n      const d = await updateRig.mutate(params);\n      console.log(d);\n    } else {\n      const x = await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n      console.log(x);\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(actions.forms.user.setField(['exitWeight', state.original.exitWeight || '60']));\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Nickname\"\n        error={state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Phone\"\n        error={state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        error={state.fields.exitWeight.error}\n        onChange={(num) => dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))}\n        label=\"Exit weight (kg)\"\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { startOfDay } from 'date-fns';\nimport {\n  useJoinFederationMutation,\n  QueryDropzoneDocument,\n  QueryDropzoneUserProfileDocument,\n} from 'app/api/reflection';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId: number;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const currentDropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [joinFederation] = useJoinFederationMutation();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Profile has been updated`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    mutation: {\n      refetchQueries: [\n        {\n          query: QueryDropzoneDocument,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QueryDropzoneUserProfileDocument,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      id: Number(state.original?.id),\n      name: state.fields.name.value,\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    const selectedLicenseFederation = state.original?.userFederations?.find(\n      ({ federation }) => federation.slug === state.fields.license.value?.federation?.slug\n    );\n    console.debug({ selectedLicenseFederation });\n    if (\n      (state.fields.license.value?.id &&\n        selectedLicenseFederation?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !== selectedLicenseFederation?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federationId: Number(state.fields.license.value?.federation?.id),\n          uid: state.fields?.apfNumber?.value,\n          licenseId: state.fields.license.value?.id ? Number(state.fields.license.value?.id) : null,\n        },\n      });\n    }\n  }, [\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.federation?.slug,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import { useAppSelector } from '../../state';\nimport { useQueryDropzoneUserProfile } from '../reflection';\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const dropzoneUser = useQueryDropzoneUserProfile({\n    variables: {\n      dropzoneId: Number(dropzoneId),\n      dropzoneUserId: id,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser: dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Caption, Divider, Paragraph, Title, TouchableRipple } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport startCase from 'lodash/startCase';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUserProfileFragment;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n}\n\nconst badgesInitials = {\n  [Permission.ActAsLoadMaster]: 'LM',\n  [Permission.ActAsPilot]: 'Pilot',\n  [Permission.ActAsRigInspector]: 'Rig.Insp',\n  [Permission.ActAsGca]: 'GCA',\n  [Permission.ActAsDzso]: 'DZSO',\n};\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  const actingPermissions = (\n    dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || []\n  ).map((str) => badgesInitials[str as keyof typeof badgesInitials]);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            {!dropzoneUser?.user?.image ? (\n              <Avatar.Icon size={80} icon=\"account\" />\n            ) : (\n              <Avatar.Image\n                size={80}\n                source={{ uri: dropzoneUser?.user.image }}\n                style={{ backgroundColor: palette.primary.light }}\n              />\n            )}\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            setOpen={setContactOpen}\n            open={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n            {actingPermissions.length ? (\n              <Caption style={{ marginTop: 4 }}>\n                {` ${actingPermissions.map(startCase).join(', ')}`}\n              </Caption>\n            ) : null}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\n\nimport { FAB, useTheme } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useNavigation } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Alert } from 'react-native';\nimport { DropzoneUsersDocument, useArchiveUserMutation } from 'app/api/reflection';\nimport { errorColor, infoColor, successColor, warningColor } from 'app/constants/Colors';\nimport { useUserNavigation } from '../useUserNavigation';\n\ntype PropsOf<T> = T extends React.ComponentType<infer P> ? P : never;\ntype FABActions = PropsOf<typeof FAB.Group>['actions'];\ninterface IUserActionsButtonProps {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  visible?: boolean;\n}\nexport default function UserActionsButton(props: IUserActionsButtonProps) {\n  const { dropzoneUser, visible } = props;\n  const { currentUser } = useCurrentDropzone();\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const navigation = useUserNavigation();\n  const rootNavigator = useNavigation();\n  const theme = useTheme();\n\n  const onClickSetupWizard = React.useCallback(() => {\n    if (dropzoneUser) {\n      dispatch(actions.forms.user.setOriginal(dropzoneUser));\n      if (dropzoneUser?.user?.rigs?.length) {\n        dispatch(actions.forms.rig.setOriginal(dropzoneUser.user.rigs[0]));\n      }\n      rootNavigator.navigate('Wizards', { screen: 'UserWizardScreen' });\n    }\n  }, [dispatch, dropzoneUser, rootNavigator]);\n\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n\n  const onClickTransactions = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('OrdersScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickEquipment = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickAddFunds = React.useCallback(() => {\n    if (dropzoneUser) {\n      dispatch(actions.forms.credits.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const onClickEdit = React.useCallback(() => {\n    if (dropzoneUser?.user) {\n      dispatch(actions.forms.user.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const isSelf = React.useMemo(\n    () => currentUser?.id === dropzoneUser?.id,\n    [currentUser?.id, dropzoneUser?.id]\n  );\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const canDeleteUsers = useRestriction(Permission.DeleteUser);\n\n  const [deleteUser] = useArchiveUserMutation();\n\n  const onDeleteUser = React.useCallback(() => {\n    Alert.alert(\n      isSelf ? 'Delete My Account' : `Delete ${dropzoneUser?.user?.name}`,\n      isSelf\n        ? 'Are you sure you want to delete your account? You will be logged out'\n        : 'Are you sure you want to delete this user ? ',\n      [\n        { style: 'cancel', text: 'Cancel', onPress: () => null },\n        {\n          style: 'destructive',\n          text: 'Yes, delete',\n          onPress: async () => {\n            try {\n              const { data } = await deleteUser({\n                variables: {\n                  id: Number(dropzoneUser?.id),\n                },\n                refetchQueries: [DropzoneUsersDocument],\n              });\n\n              data?.deleteUser?.errors?.forEach((message) => {\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'success',\n                  })\n                );\n              });\n              if (data?.deleteUser?.dropzoneUser?.id) {\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `${dropzoneUser?.user?.name} has been removed`,\n                    variant: 'success',\n                  })\n                );\n              }\n\n              navigation.goBack();\n            } catch (e) {\n              console.log(e);\n            }\n          },\n        },\n      ]\n    );\n  }, [deleteUser, dispatch, dropzoneUser?.id, dropzoneUser?.user?.name, isSelf, navigation]);\n\n  const fabActions = React.useMemo(\n    () =>\n      [\n        isSelf && canUpdateUsers\n          ? {\n              icon: 'pencil',\n              label: 'Edit',\n              onPress: onClickEdit,\n            }\n          : null,\n        {\n          icon: 'account-convert',\n          label: 'Setup Wizard',\n          color: infoColor,\n          onPress: onClickSetupWizard,\n        },\n        canUpdateUsers\n          ? {\n              icon: 'lock',\n              label: 'Access & Membership',\n              color: warningColor,\n              onPress: onClickAccessAndMembership,\n            }\n          : null,\n        canAddTransaction\n          ? {\n              icon: 'cash-plus',\n              label: 'Add Funds',\n              color: successColor,\n              onPress: onClickAddFunds,\n            }\n          : null,\n        isSelf || canViewOthersTransactions\n          ? {\n              icon: 'account-cash',\n              label: 'Manage Transactions',\n              onPress: onClickTransactions,\n            }\n          : null,\n        {\n          icon: 'parachute',\n          label: 'Manage Equipment',\n          onPress: onClickEquipment,\n        },\n        canDeleteUsers\n          ? {\n              icon: 'account-off',\n              label: 'Delete user',\n              onPress: onDeleteUser,\n              color: errorColor,\n            }\n          : null,\n      ].filter(Boolean) as FABActions,\n    [\n      canAddTransaction,\n      canDeleteUsers,\n      canUpdateUsers,\n      canViewOthersTransactions,\n      isSelf,\n      onClickAccessAndMembership,\n      onClickAddFunds,\n      onClickEdit,\n      onClickEquipment,\n      onClickSetupWizard,\n      onClickTransactions,\n      onDeleteUser,\n    ]\n  );\n\n  return (\n    <FAB.Group\n      testID=\"user-profile-fab\"\n      open={fabOpen}\n      visible={(!!dropzoneUser?.id && visible) || false}\n      icon={fabOpen ? 'close' : 'account-edit'}\n      fabStyle={{\n        marginLeft: 16,\n        marginBottom: 16,\n        backgroundColor: theme.colors.primary,\n      }}\n      onStateChange={({ open }) => setFabOpen(open)}\n      actions={fabActions}\n    >\n      Manage\n    </FAB.Group>\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { UserSlotDetailsFragment } from 'app/api/operations';\n\ninterface ISlot {\n  slot: UserSlotDetailsFragment;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <List.Item\n            description={`on Load #${slot.load.loadNumber}`}\n            title={slot.jumpType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text\n                  style={[\n                    styles.jumpType,\n                    {\n                      color: theme.colors.onSurface,\n                    },\n                  ]}\n                >\n                  -${slot.cost?.toFixed(2)}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  width: 100,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <Avatar.Icon\n                  icon=\"parachute-outline\"\n                  size={48}\n                  style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n    flexGrow: 1,\n  },\n  jumpType: {\n    fontSize: 16,\n    fontFamily: 'Roboto_400Regular',\n    fontWeight: '400',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n    flexGrow: 1,\n    minWidth: 150,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\nimport enAU from 'date-fns/locale/en-AU';\n\nimport { groupBy, map } from 'lodash';\nimport { differenceInDays, format, formatDistance, parseISO, startOfDay } from 'date-fns';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\n\nimport SlotCard from '../SlotCard';\n\nexport interface IJumpHistoryTab {\n  tabIndex: number;\n  currentTabIndex: number;\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n}\nexport default function JumpHistoryTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useNavigation();\n\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.slots?.edges, (e) =>\n          startOfDay((e?.node?.createdAt || 0) * 1000).toISOString()\n        ),\n        (d, t) => {\n          const date = parseISO(t);\n          const title =\n            differenceInDays(new Date(), date) > 7\n              ? format(date, 'dd MMM, yyyy')\n              : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n          return {\n            title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.slots?.edges]\n  );\n\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n      style={{ padding: 8 }}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <SlotCard\n                slot={item.node}\n                onPress={() => {\n                  if (item?.node?.load?.id) {\n                    navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Manifest',\n                        params: {\n                          screen: 'LoadScreen',\n                          params: {\n                            loadId: item.node?.load?.id,\n                          },\n                        },\n                      },\n                    });\n                  }\n                }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n} from 'app/api/operations';\nimport { Dropzone, DropzoneUser } from 'app/api/schema.d';\nimport { successColor } from 'app/constants/Colors';\nimport UserAvatar from 'app/components/UserAvatar';\n\ninterface IOrder {\n  order: OrderEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const isSelfBuyer =\n    order.buyer?.__typename === 'DropzoneUser' &&\n    (order.buyer as DropzoneUser)?.id === dropzoneUser?.id;\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    isSelfBuyer === dropzoneUser?.id ? 'cash-minus' : 'cash-plus';\n\n  const right = React.useCallback(\n    () => (\n      <Text\n        style={{\n          fontSize: 16,\n          fontFamily: 'Roboto_400Regular',\n          fontWeight: '400',\n          textAlign: 'center',\n          alignSelf: 'center',\n          color: theme.colors.onSurface,\n        }}\n      >\n        {`${isSelfBuyer ? '-$' : '$'}${order.amount.toFixed(2)}`}\n      </Text>\n    ),\n    [isSelfBuyer, order.amount, theme.colors.onSurface]\n  );\n\n  const left = React.useCallback(\n    () => (\n      <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n        {showAvatar ? (\n          <UserAvatar\n            style={{ alignSelf: 'center', marginHorizontal: 12 }}\n            size={60}\n            name={\n              (order?.seller as DropzoneUserEssentialsFragment)?.user?.name ||\n              (order?.seller as DropzoneEssentialsFragment).name ||\n              ''\n            }\n            image={\n              (order?.seller as DropzoneUserEssentialsFragment).user?.image ||\n              (order?.seller as DropzoneEssentialsFragment).banner ||\n              undefined\n            }\n          />\n        ) : (\n          <MaterialCommunityIcons\n            color={\n              // eslint-disable-next-line no-underscore-dangle\n              '__typename' in order.buyer &&\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              order.buyer.__typename === 'DropzoneUser' &&\n              (order.buyer as DropzoneUserEssentialsFragment)?.id === dropzoneUser?.id\n                ? '#FF1414'\n                : successColor\n            }\n            name={icon}\n            size={36}\n            style={{ marginHorizontal: 16 }}\n          />\n        )}\n      </View>\n    ),\n    [dropzoneUser?.id, icon, order.buyer, order?.seller, showAvatar]\n  );\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Card.Content style={styles.orderContent}>\n          <List.Item\n            title={(order?.seller as DropzoneUser)?.user?.name || (order?.seller as Dropzone)?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            description={order.title || null}\n            descriptionStyle={styles.orderDescription}\n            {...{ right, left }}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport JumpHistoryTab from './JumpHistory';\nimport FundTab from './Transactions';\nimport EquipmentTab from './Equipment';\n\n// const ProfileTabs = createMaterialTopTabNavigator();\n\ninterface IProfileTabsProps {\n  onChange(tab: ProfileTabs): void;\n}\n\nexport enum ProfileTabs {\n  Funds,\n  Jumps,\n  Equipment,\n}\n\nexport function ProfileTab(props: {\n  active: ProfileTabs;\n  dropzoneUser: DropzoneUserProfileFragment;\n}) {\n  const { active, dropzoneUser } = props;\n  if (active === ProfileTabs.Funds) {\n    return <FundTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Funds} currentTabIndex={active} />;\n  }\n  if (active === ProfileTabs.Equipment) {\n    return (\n      <EquipmentTab\n        {...{ dropzoneUser }}\n        tabIndex={ProfileTabs.Equipment}\n        currentTabIndex={active}\n      />\n    );\n  }\n  if (active === ProfileTabs.Jumps) {\n    return (\n      <JumpHistoryTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Jumps} currentTabIndex={active} />\n    );\n  }\n  return null;\n}\nexport default function TabBar(props: IProfileTabsProps) {\n  const { onChange } = props;\n  const { colors, dark } = useAppSelector((state) => state.global.theme);\n\n  return (\n    <Tabs\n      defaultIndex={ProfileTabs.Jumps}\n      disableSwipe\n      style={{ backgroundColor: colors.surface }}\n      mode=\"fixed\"\n      dark={dark}\n    >\n      <TabScreen label=\"Funds\" icon=\"cash\" key=\"funds\" onPress={() => onChange(0)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Jumps\" icon=\"airplane-takeoff\" key=\"jumps\" onPress={() => onChange(1)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Equipment\" icon=\"parachute\" key=\"equipment\" onPress={() => onChange(2)}>\n        <View />\n      </TabScreen>\n    </Tabs>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\n\nimport { DropzoneUserProfileFragment, OrderEssentialsFragment } from 'app/api/operations';\n\nimport { groupBy, map } from 'lodash';\nimport startOfDay from 'date-fns/startOfDay';\nimport parseISO from 'date-fns/parseISO';\nimport differenceInDays from 'date-fns/differenceInDays';\nimport format from 'date-fns/format';\nimport { enAU } from 'date-fns/locale';\nimport formatDistance from 'date-fns/formatDistance';\nimport OrderCard from '../../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../../useUserNavigation';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function TransactionsTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useUserNavigation();\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.orders?.edges, (e) =>\n          startOfDay((e?.node?.createdAt || 0) * 1000).toISOString()\n        ),\n        (d, t) => {\n          const date = parseISO(t);\n          const title =\n            differenceInDays(new Date(), date) > 7\n              ? format(date, 'dd MMM, yyyy')\n              : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n          return {\n            title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.orders?.edges]\n  );\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <OrderCard\n                showAvatar\n                onPress={() =>\n                  item?.node?.id &&\n                  dropzoneUser &&\n                  navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser?.id,\n                  })\n                }\n                order={item?.node as OrderEssentialsFragment}\n                {...{ dropzoneUser }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\n\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { actions, useAppDispatch } from 'app/state';\n\nimport RigCard from '../../equipment/RigCard';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function EquipmentTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const dispatch = useAppDispatch();\n  return (\n    <View\n      animation={currentTabIndex < tabIndex ? 'slideInRight' : 'slideInLeft'}\n      duration={200}\n      easing=\"ease-in-out\"\n      style={{ padding: 8 }}\n    >\n      {dropzoneUser?.user?.rigs?.map((item) => (\n        <RigCard\n          {...{ dropzoneUser }}\n          onSuccessfulImageUpload={() => null}\n          rig={item}\n          rigInspection={dropzoneUser?.rigInspections?.find(\n            (insp) => insp.rig?.id === item.id && insp.isOk\n          )}\n          onPress={() => {\n            dispatch(actions.forms.rig.setOpen(item));\n          }}\n        />\n      ))}\n    </View>\n  );\n}\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { FlatList, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Chip, Divider, ProgressBar } from 'react-native-paper';\nimport Skeleton from 'app/components/Skeleton';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from 'app/components/dialogs/CreditsDialog/Credits';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\n// eslint-disable-next-line max-len\nimport useDropzoneUserProfile from 'app/api/hooks/useDropzoneUserProfile';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUpdateUserMutation } from 'app/api/reflection';\n\nimport { errorColor, successColor } from 'app/constants/Colors';\nimport { format } from 'date-fns';\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\n\nimport UserActionsButton from './UserActions';\nimport TabBar, { ProfileTab } from './tabs';\n\nexport type ProfileRoute = {\n  ProfileScreen: {\n    userId: string;\n  };\n};\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<RouteProp<ProfileRoute>>();\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUserProfile(\n    Number(route.params.userId) || Number(currentUser?.id)\n  );\n  const pickImage = useImagePicker();\n  const isFocused = useIsFocused();\n  const [defaultIndex, onChangeIndex] = React.useState(1);\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n  const headerRight = React.useCallback(\n    () =>\n      !currentUser?.expiresAt ? null : (\n        <Chip\n          onPress={onClickAccessAndMembership}\n          style={{\n            marginRight: 16,\n            height: 24,\n            backgroundColor:\n              currentUser.expiresAt * 1000 < new Date().getTime() ? errorColor : successColor,\n          }}\n          textStyle={{ color: 'white', marginTop: 0 }}\n        >\n          {format(currentUser.expiresAt * 1000, 'dd/MM/yy')}\n        </Chip>\n      ),\n    [currentUser?.expiresAt, onClickAccessAndMembership]\n  );\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({\n        headerRight,\n      });\n      refetch();\n    }\n  }, [headerRight, isFocused, navigation, refetch]);\n\n  const [mutationUpdateUser] = useUpdateUserMutation();\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            id: Number(dropzoneUser?.user?.id),\n            image: `data:image/jpeg;base64,${base64}`,\n          },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.user?.id, mutationUpdateUser, pickImage]);\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const getContent = React.useCallback(\n    ({ index }: { index: number }) => {\n      if (index === 0) {\n        return <TabBar onChange={onChangeIndex} />;\n      }\n      if (dropzoneUser) {\n        return <ProfileTab active={defaultIndex} {...{ dropzoneUser }} />;\n      }\n      return null;\n    },\n    [defaultIndex, dropzoneUser]\n  );\n  return (\n    <>\n      <View style={StyleSheet.absoluteFill}>\n        {loading && (\n          <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n        )}\n        <FlatList\n          style={{ backgroundColor: state.theme.colors.background }}\n          contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n          refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n          keyExtractor={(_, idx) => `profile-${idx}`}\n          ListHeaderComponent={() => (\n            <View style={styles.wrappingHeader}>\n              <View style={{ width: '100%' }}>\n                {!dropzoneUser ? (\n                  <Skeleton\n                    key=\"profile-header\"\n                    containerStyle={{\n                      height: 256,\n                      width: '100%',\n                    }}\n                    isLoading\n                    layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n                  />\n                ) : (\n                  <Header dropzoneUser={dropzoneUser} onPressAvatar={onPickImage}>\n                    <InfoGrid\n                      style={{ height: 80 }}\n                      items={[\n                        {\n                          title: 'Funds',\n                          value: `$${dropzoneUser?.credits || 0}`,\n                          onPress: () => {\n                            if (dropzoneUser && canAddTransaction) {\n                              dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                            }\n                          },\n                        },\n                        {\n                          title: 'License',\n                          value: `${dropzoneUser?.license?.name || '-'}`,\n                        },\n                        {\n                          title: 'Exit weight',\n                          value:\n                            Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                        },\n                      ]}\n                    />\n                    <Divider style={styles.divider} />\n                  </Header>\n                )}\n              </View>\n            </View>\n          )}\n          renderItem={getContent}\n          data={[null, null]}\n        />\n\n        <RigDialog\n          onClose={onCloseRigForm}\n          onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n          open={forms.rig.open}\n          userId={Number(dropzoneUser?.user?.id)}\n        />\n\n        <DropzoneUserDialog\n          onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n          onSuccess={(user) => {\n            dispatch(actions.forms.dropzoneUser.setOpen(false));\n            if (currentUser?.id === dropzoneUser?.id) {\n              dispatch(actions.global.setUser(user.user));\n              refetch();\n            }\n          }}\n          open={forms.dropzoneUser.open}\n        />\n\n        <CreditsSheet\n          onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n          onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n          open={forms.credits.open}\n          dropzoneUser={dropzoneUser || undefined}\n        />\n\n        <EditUserSheet\n          dropzoneUserId={Number(dropzoneUser?.id)}\n          onClose={onUserSheetClose}\n          onSuccess={() => {\n            dispatch(actions.forms.user.setOpen(false));\n          }}\n          open={forms.user.open}\n        />\n      </View>\n      <UserActionsButton {...{ dropzoneUser }} visible={isFocused} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    // flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { SectionList, StyleSheet, View } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CreditsSheet from 'app/components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { groupBy, map } from 'lodash';\nimport { formatDistance, parseISO, startOfDay, differenceInDays, format } from 'date-fns';\nimport enAU from 'date-fns/locale/en-AU';\nimport { OrderEssentialsFragment } from 'app/api/operations';\nimport { useQueryDropzoneUserProfile } from 'app/api/reflection';\nimport OrderCard from '../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport type OrdersRoute = {\n  OrdersScreen: {\n    userId: string;\n  };\n};\nexport default function OrdersScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<RouteProp<OrdersRoute>>();\n  const { data, loading, refetch } = useQueryDropzoneUserProfile({\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n      dropzoneUserId: Number(route?.params?.userId) || Number(currentUser?.id),\n    },\n  });\n  const dropzoneUser = React.useMemo(\n    () => data?.dropzone?.dropzoneUser,\n    [data?.dropzone?.dropzoneUser]\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useUserNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name?.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: state.theme.colors.surface }}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <SectionList\n        sections={map(\n          groupBy(dropzoneUser?.orders?.edges, (e) =>\n            startOfDay((e?.node?.createdAt || 0) * 1000).toISOString()\n          ),\n          (d, t) => {\n            const date = parseISO(t);\n            const title =\n              differenceInDays(new Date(), date) > 7\n                ? format(date, 'dd MMM, yyyy')\n                : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n            return {\n              title,\n              data: d,\n            };\n          }\n        )}\n        renderSectionHeader={({ section: { title } }) => <List.Subheader>{title}</List.Subheader>}\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            showAvatar\n            onPress={() =>\n              !item?.node || !dropzoneUser\n                ? null\n                : navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser.id,\n                  })\n            }\n            order={item?.node as OrderEssentialsFragment}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useQueryDropzoneUserProfile } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport RigDialog from 'app/components/dialogs/Rig';\n\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport useRestriction from 'app/hooks/useRestriction';\nimport RigCard from './RigCard';\n\nexport type EquipmentRoute = {\n  EquipmentScreen: {\n    userId: string;\n  };\n};\nexport default function EquipmentScreen() {\n  const globalState = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const navigation = useNavigation();\n\n  const route = useRoute<RouteProp<EquipmentRoute, 'EquipmentScreen'>>();\n\n  const { data, loading, refetch } = useQueryDropzoneUserProfile({\n    variables: {\n      dropzoneId: Number(globalState.currentDropzoneId),\n      dropzoneUserId: Number(route?.params?.userId) || Number(currentUser?.id),\n    },\n  });\n\n  const dropzoneUser = React.useMemo(\n    () => data?.dropzone?.dropzoneUser,\n    [data?.dropzone?.dropzoneUser]\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        keyExtractor={(item) => `rig-${item?.id}`}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={canUpdateUser}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from 'app/constants/Colors';\nimport { TransactionEssentialsFragment } from 'app/api/operations';\n\ninterface ITransaction {\n  transaction: TransactionEssentialsFragment;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n              color: theme.colors.onSurface,\n            }}\n          >\n            {transaction?.createdAt && format(transaction.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Wallet } from 'app/api/schema.d';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n  ReceiptEssentialsFragment,\n} from 'app/api/operations';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: ReceiptEssentialsFragment;\n  index: number;\n  order: OrderEssentialsFragment;\n}\n\nexport default function ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const { currentUser } = useCurrentDropzone();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | DropzoneEssentialsFragment | DropzoneUserEssentialsFragment) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        ?.filter((transaction) => isUser(transaction.receiver as DropzoneUserEssentialsFragment))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { RouteProp, useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from 'app/constants/Colors';\nimport LottieView from 'app/components/LottieView';\nimport { Dropzone, DropzoneUser } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport UserAvatar from 'app/components/UserAvatar';\nimport lottieTicketAnimation from 'app/../assets/images/ticket.json';\nimport useDropzoneUserProfile from 'app/api/hooks/useDropzoneUserProfile';\nimport ReceiptCard from './ReceiptCard';\n\nexport type OrderReceiptRoute = {\n  OrderReceiptScreen: {\n    orderId: string;\n    userId: string;\n  };\n};\nexport default function OrderScreen() {\n  const route = useRoute<RouteProp<OrderReceiptRoute, 'OrderReceiptScreen'>>();\n  const theme = useTheme();\n  const { orderId, userId } = route.params;\n  const { dropzoneUser } = useDropzoneUserProfile(Number(userId));\n  const order = React.useMemo(\n    () =>\n      dropzoneUser?.orders?.edges?.map((edge) => edge?.node).find((node) => node?.id === orderId),\n    [dropzoneUser?.orders?.edges, orderId]\n  );\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                  color: theme.colors.onSurface,\n                }}\n              >{`Order #${order?.id || ''}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                  color: theme.colors.onSurface,\n                }}\n              >\n                {order?.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order?.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name || (order?.seller as Dropzone)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\n\nimport UsersScreen, { UserListRoute } from './user_list/UsersScreen';\nimport SearchableAppBar from './user_list/AppBar';\nimport RigInspectionScreen, { RigInspectionRoute } from './rig_inspection/RigInspectionScreen';\nimport ProfileScreen, { ProfileRoute } from './profile/ProfileScreen';\nimport OrdersScreen, { OrdersRoute } from './orders/OrdersScreen';\nimport EquipmentScreen, { EquipmentRoute } from './equipment/EquipmentScreen';\nimport OrderReceiptScreen, { OrderReceiptRoute } from './order_receipt/OrderScreen';\n\nexport type UserRoutes = EquipmentRoute &\n  OrderReceiptRoute &\n  RigInspectionRoute &\n  ProfileRoute &\n  UserListRoute &\n  OrdersRoute;\n\nconst Users = createStackNavigator<UserRoutes>();\n\nexport default function Routes() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n\n  return (\n    <Users.Navigator\n      screenOptions={{\n        cardStyle: {\n          flex: 1,\n        },\n        presentation: 'modal',\n      }}\n    >\n      <Users.Screen\n        name=\"UserListScreen\"\n        component={UsersScreen}\n        options={{\n          title: 'Dropzone users',\n          headerShown: true,\n          header: (props) => (\n            <SearchableAppBar\n              {...props}\n              searchText={searchText}\n              searchVisible={isSearchVisible}\n              setSearchVisible={(visible) =>\n                dispatch(actions.screens.users.setSearchVisible(visible))\n              }\n              onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n            />\n          ),\n        }}\n      />\n      <Users.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'User' }}\n        initialParams={{\n          userId: currentUser?.id,\n        }}\n      />\n      <Users.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Inspection' }}\n      />\n      <Users.Screen\n        name=\"OrdersScreen\"\n        component={OrdersScreen}\n        options={{ title: 'Transactions' }}\n      />\n      <Users.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n      <Users.Screen\n        name=\"OrderReceiptScreen\"\n        component={OrderReceiptScreen}\n        options={{ title: 'Order' }}\n      />\n    </Users.Navigator>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { NavigationProp, NavigatorScreenParams, useNavigation } from '@react-navigation/core';\n\nimport DropzoneWizardScreen from './dropzone_wizard/DropzoneWizard';\nimport UserWizardScreen from './user_wizard/UserWizardScreen';\nimport RecoverPasswordScreen from './recover_password/RecoverPasswordScreen';\nimport ConfirmUserScreen from './confirm_user/ConfirmUserScreen';\nimport ChangePasswordScreen from './change_password/ChangePasswordScreen';\nimport User, { UserRoutes } from '../authenticated/user/routes';\n\nexport type WizardRoutes = {\n  DropzoneWizardScreen: undefined;\n  UserWizardScreen: undefined;\n  ConfirmUserScreen: undefined;\n  RecoverPasswordScreen: undefined;\n  ChangePasswordScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Wizards = createStackNavigator<WizardRoutes>();\n\nexport function useWizardRoutes() {\n  return useNavigation<NavigationProp<WizardRoutes>>();\n}\n\nexport default function Routes() {\n  return (\n    <Wizards.Navigator\n      screenOptions={{\n        headerShown: false,\n        presentation: 'modal',\n        cardStyle: { flex: 1 },\n      }}\n    >\n      <Wizards.Screen name=\"DropzoneWizardScreen\" component={DropzoneWizardScreen} />\n      <Wizards.Screen name=\"UserWizardScreen\" component={UserWizardScreen} />\n      <Wizards.Screen name=\"RecoverPasswordScreen\" component={RecoverPasswordScreen} />\n      <Wizards.Screen name=\"ConfirmUserScreen\" component={ConfirmUserScreen} />\n      <Wizards.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} />\n      <Wizards.Screen name=\"User\" component={User} />\n    </Wizards.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`info-grid-${i}`}>\n            <View style={{ flex }}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </React.Fragment>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useQueryDropzones } from 'app/api/reflection';\nimport { DropzoneExtensiveFragment } from 'app/api/operations';\nimport InfoGrid from 'app/screens/authenticated/dropzone/load/InfoGrid';\nimport useRestriction from '../../hooks/useRestriction';\nimport { Permission } from '../../api/schema.d';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme, currentRouteName: routeName } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { currentUser, dropzone, loading } = useCurrentDropzone();\n  const { data } = useQueryDropzones({\n    variables: {\n      isPublic: true,\n    },\n    onError: (err) => console.error(err),\n  });\n\n  const navigation = useNavigation();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'User',\n                  params: {\n                    screen: 'ProfileScreen',\n                    params: {\n                      userId: currentUser?.id as string,\n                    },\n                  },\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(routeName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Profile\"\n            active={routeName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Wizards', {\n                screen: 'User',\n                params: {\n                  screen: 'ProfileScreen',\n                  params: {\n                    userId: currentUser?.id as string,\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={routeName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'EquipmentScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={routeName === 'NotificationsScreen'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Notifications',\n                  params: {\n                    screen: 'NotificationsScreen',\n                  },\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={routeName === 'OrdersScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'OrdersScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n        <Drawer.Section title=\"Dropzone\">\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={routeName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'Configuration',\n                    params: {\n                      screen: 'TransactionsScreen',\n                    },\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'SettingsMenuScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Switch dropzone\">\n          {data?.dropzones?.edges?.map((edge) => (\n            <Drawer.Item\n              key={`${edge?.node?.id}-dz`}\n              label={edge?.node?.name || ''}\n              icon={\n                edge?.node?.banner\n                  ? ({ size }) => (\n                      <Avatar.Image source={{ uri: edge?.node?.banner as string }} {...{ size }} />\n                    )\n                  : 'map-marker'\n              }\n              active={dropzone?.id === edge?.node?.id}\n              onPress={() => {\n                if (edge?.node) {\n                  dispatch(actions.global.setDropzone(edge.node as DropzoneExtensiveFragment));\n                  navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'ManifestScreen',\n                      },\n                    },\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    marginLeft: 32,\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginLeft: 32,\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","import * as React from 'react';\n\nexport default function AnimatedTabBar() {\n  // eslint-disable-next-line react/jsx-no-useless-fragment\n  return <></>;\n}\n","import * as React from 'react';\nimport { Paragraph, useTheme, IconButton } from 'react-native-paper';\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\nimport Color from 'color';\nimport { useNavigation } from '@react-navigation/core';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  const { width } = useWindowDimensions();\n  const theme = useTheme();\n  const textColor =\n    Color(theme.colors.primary).contrast(Color(theme.colors.onSurface)) < 11\n      ? theme.colors.surface\n      : theme.colors.onSurface;\n  return (\n    <View style={[styles.warning, { backgroundColor: theme.colors.primary }]}>\n      <Paragraph\n        style={{ width: action ? width - 56 : width, color: textColor, flexGrow: 1 }}\n        adjustsFontSizeToFit\n        allowFontScaling\n      >\n        {title}\n      </Paragraph>\n      {!action ? null : (\n        <View style={{ width: 40 }}>\n          <IconButton icon=\"launch\" color={textColor} onPress={action} style={{ width: 24 }} />\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning\n        title=\"Your reserve repack is due. You can update the repack date on your profile\"\n        action={() =>\n          currentUser?.id &&\n          navigation.navigate('Authenticated', {\n            screen: 'LeftDrawer',\n            params: {\n              screen: 'Manifest',\n              params: {\n                screen: 'User',\n                params: { screen: 'EquipmentScreen', params: { userId: currentUser.id } },\n              },\n            },\n          })\n        }\n      />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/core';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport SetupWarning from './SetupWarning';\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { hideWarnings, back, options } = props;\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { currentUser, loading, dropzone } = useCurrentDropzone();\n\n  const navigation = useNavigation();\n  const { openDrawer } = useNavigation<DrawerNavigationProp<never>>();\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {back ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton icon=\"menu\" size={32} onPress={openDrawer} />\n        )}\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n\n        {options.headerRight ? (\n          options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{\n              backgroundColor: palette.background,\n              height: 36,\n              padding: 4,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            mode=\"flat\"\n            textStyle={{\n              color: palette.onSurface,\n              fontFamily: 'Roboto_700Bold',\n            }}\n          >{`$${currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!currentUser?.expiresAt && currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!currentUser?.rigInspections?.length}\n          isRigSetUp={!!currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            console.log('opening setup wizard');\n            if (currentUser) {\n              dispatch(actions.forms.user.setOriginal(currentUser));\n              console.log(currentUser);\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n              }\n\n              navigation.navigate('Wizards', {\n                screen: 'UserWizardScreen',\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Select, { ISelectOption } from 'app/components/input/select/Select';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport Chip from './Chip';\n\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: [Permission.ActAsGca],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzone?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzone?.dropzoneUsers?.edges\n        ?.map((edge) => edge?.node)\n        .find((node) => node?.id === value?.id),\n    [data?.dropzone?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"radio-handheld\">\n        {item?.label || 'No GCA'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"radio-handheld\">\n      {value?.user?.name || 'No gca'}\n    </Chip>\n  ) : (\n    <Select<DropzoneUserEssentialsFragment>\n      value={selected}\n      options={options}\n      onChange={onSelect}\n      renderAnchor={renderAnchor}\n    />\n  );\n}\n","import { DropzoneUserEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface ILoadMasterChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: SlotDetailsFragment[];\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      slots?.map((slot) => ({\n        label: slot?.dropzoneUser?.user?.name || '',\n        value: slot?.dropzoneUser as DropzoneUserEssentialsFragment,\n        avatar: slot?.dropzoneUser?.user?.image,\n      })) || [],\n    [slots]\n  );\n\n  const selected = React.useMemo(\n    () => slots?.map((slot) => slot?.dropzoneUser)?.find((node) => node?.id === value?.id),\n    [slots, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-account\">\n        {item?.label || 'No LM'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"shield-account\">\n      {value?.user?.name || 'No LM'}\n    </Chip>\n  ) : (\n    <Select<DropzoneUserEssentialsFragment>\n      value={selected}\n      options={options}\n      renderAnchor={renderAnchor}\n      onChange={onSelect}\n    />\n  );\n}\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: [Permission.ActAsPilot],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzone?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzone?.dropzoneUsers?.edges\n        ?.map((edge) => edge?.node)\n        .find((node) => node?.id === value?.id),\n    [data?.dropzone?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-airplane\">\n        {item?.label || 'No Pilot'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"shield-airplane\">\n      {value?.user?.name || 'No Pilot'}\n    </Chip>\n  ) : (\n    <Select<DropzoneUserEssentialsFragment>\n      value={selected}\n      options={options}\n      renderAnchor={renderAnchor}\n      onChange={onSelect}\n    />\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { usePlanesQuery } from '../../api/reflection';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPlaneChipSelect {\n  value?: PlaneEssentialsFragment | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<PlaneEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"airplane\">\n        {item?.label || 'No Plane'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"airplane\">\n      {value?.name || 'No Plane'}\n    </Chip>\n  ) : (\n    <Select<PlaneEssentialsFragment>\n      value={selected}\n      options={options}\n      renderAnchor={renderAnchor}\n      onChange={onSelect}\n    />\n  );\n}\n","import * as React from 'react';\nimport SkeletonContent from 'app/components/Skeleton';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  userId?: number | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: JumpTypeEssentialsFragment): void;\n}\n\nexport default function JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: Number(currentDropzoneId),\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={\n          uniqBy(\n            [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n            ({ id }) => id\n          ) || []\n        }\n        selected={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedTicketTypesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  onlyPublicTickets?: boolean;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: TicketTypeEssentialsFragment): void;\n}\n\nexport default function TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onSelect, onlyPublicTickets } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useAllowedTicketTypesQuery({\n    variables: {\n      dropzone: Number(currentDropzoneId),\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect<TicketTypeEssentialsFragment>\n        autoSelectFirst\n        items={data?.dropzone?.ticketTypes || []}\n        selected={[value].filter(Boolean) as TicketTypeEssentialsFragment[]}\n        renderItemLabel={(ticketType) => ticketType?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { UserRigDetailedFragment } from 'app/api/operations';\nimport { useAvailableRigsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport Chip from 'app/components/chips/Chip';\nimport Select, { ISelectOption } from '../select/Select';\n\ninterface IRigSelect {\n  dropzoneUserId?: number;\n  value?: UserRigDetailedFragment | null;\n  tandem?: boolean;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  autoSelectFirst?: boolean;\n  variant?: 'chip' | 'select';\n  label?: string;\n  onSelect(rig: UserRigDetailedFragment): void;\n}\n\nexport default function RigSelect(props: IRigSelect) {\n  const {\n    dropzoneUserId,\n    label,\n    variant,\n    value,\n    small,\n    color: assignedColor,\n    backgroundColor,\n    autoSelectFirst,\n    onSelect,\n    tandem,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [fetchRigs, { data }] = useAvailableRigsLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUserId) {\n      fetchRigs({\n        variables: {\n          dropzoneUserId,\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [fetchRigs, currentDropzoneId, tandem, dropzoneUserId]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.availableRigs?.length) {\n      onSelect(data.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.availableRigs, onSelect, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.availableRigs?.map((rig) => ({\n        label: rig?.name || [rig?.make, rig?.model].join(' '),\n        value: rig as UserRigDetailedFragment,\n      })) || [],\n    [data?.availableRigs]\n  );\n\n  const selected = React.useMemo(\n    () => data?.availableRigs?.find((node) => node?.id === value?.id),\n    [data?.availableRigs, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<UserRigDetailedFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"parachute\">\n        {item?.label || 'No Rig'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <Select<UserRigDetailedFragment>\n      {...{ options, renderAnchor: variant === 'chip' ? renderAnchor : undefined, label }}\n      value={selected}\n      onChange={onSelect}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Permission } from '../../../api/schema.d';\nimport JumpTypeChipSelect from '../../input/chip_select/JumpTypeChipSelect';\nimport TicketTypeChipSelect from '../../input/chip_select/TicketTypeChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\n\nexport default function ManifestForm() {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  React.useEffect(() => {\n    if (state.fields.dropzoneUser?.value) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.manifest.setField([\n            'exitWeight',\n            Number(state.fields.dropzoneUser?.value?.user?.exitWeight || 60),\n          ])\n        );\n      }\n\n      if (!state.fields.rig.value && state.fields.dropzoneUser.value?.user?.rigs?.length) {\n        dispatch(\n          actions.forms.manifest.setField(['rig', state.fields.dropzoneUser?.value?.user.rigs[0]])\n        );\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.dropzoneUser.value,\n    state.fields.dropzoneUser.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.rig.value,\n  ]);\n\n  const isEdit = state?.original?.id;\n\n  const allowedToManifestOthers = useRestriction(\n    isEdit ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n\n  return (\n    <>\n      <JumpTypeChipSelect\n        value={state.fields.jumpType.value}\n        userId={Number(state?.fields?.dropzoneUser?.value?.id) || null}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['jumpType', value]))}\n      />\n      <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n        {state.fields.jumpType.error || ''}\n      </HelperText>\n\n      <TicketTypeChipSelect\n        value={state.fields.ticketType.value}\n        onlyPublicTickets={!allowedToManifestOthers}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['ticketType', value]))}\n      />\n      <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n        {state.fields.ticketType.error || ''}\n      </HelperText>\n\n      {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n        <List.Subheader>Ticket addons</List.Subheader>\n      )}\n      <ScrollView horizontal style={styles.ticketAddons}>\n        {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n          <Chip\n            selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n            onPress={\n              state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                ? () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                      ])\n                    )\n                : () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        [...(state?.fields?.extras?.value || []), extra],\n                      ])\n                    )\n            }\n          >\n            {`${extra.name} ($${extra.cost})`}\n          </Chip>\n        ))}\n      </ScrollView>\n      <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n        {state.fields.extras.error || ''}\n      </HelperText>\n      <Divider />\n      {!state.fields.dropzoneUser ? null : (\n        <RigSelect\n          label=\"Equipment\"\n          value={state.fields.rig.value}\n          dropzoneUserId={Number(state.fields.dropzoneUser?.value?.id)}\n          onSelect={(value) => dispatch(actions.forms.manifest.setField(['rig', value]))}\n        />\n      )}\n      <HelperText type={state.fields.rig.error ? 'error' : 'info'}>\n        {state.fields.rig.error || ''}\n      </HelperText>\n      <NumberField\n        label=\"Exit weight\"\n        variant={NumberFieldType.Weight}\n        error={state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value}\n        onChange={(newValue) =>\n          dispatch(actions.forms.manifest.setField(['exitWeight', Number(newValue)]))\n        }\n      />\n\n      {!state.fields.ticketType.value?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <TextInput\n            style={styles.field}\n            label=\"Passenger name\"\n            error={state.fields.passengerName.error}\n            value={state.fields.passengerName?.value?.toString() || ''}\n            onChange={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerName', newValue]))\n            }\n          />\n\n          <TextInput\n            style={styles.field}\n            label=\"Passenger exit weight\"\n            error={state.fields.passengerExitWeight.error}\n            value={state.fields.passengerExitWeight.value?.toString() || ''}\n            onChange={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerExitWeight', Number(newValue)]))\n            }\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { useManifestUserMutation } from 'app/api/reflection';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { usePortal } from '@gorhom/portal';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotForm from '../../forms/manifest/ManifestForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { onSuccess, open, onClose: _onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  const [mutationCreateSlot, mutationData] = useManifestUserMutation();\n  const portal = usePortal('drawer');\n\n  React.useEffect(() => {\n    if (!open) {\n      portal.removePortal('drawer');\n    }\n  }, [open, portal]);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlot({\n        variables: {\n          jumpType: Number(state.fields.jumpType.value?.id),\n          extras: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          load: Number(state.fields.load.value?.id),\n          rig: !state.fields.rig.value?.id ? null : Number(state.fields.rig.value?.id),\n          ticketType: Number(state.fields.ticketType?.value?.id),\n          dropzoneUser: Number(state.fields.dropzoneUser?.value?.id),\n          exitWeight: state.fields.exitWeight.value,\n          ...(!state.fields.ticketType.value?.isTandem\n            ? {}\n            : {\n                passengerName: state.fields.passengerName?.value,\n                passengerExitWeight: state.fields.passengerExitWeight?.value,\n              }),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifest.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifest.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifest.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifest.setFieldError(['ticketType', message]));\n          case 'rig':\n            return dispatch(actions.forms.manifest.setFieldError(['rig', message]));\n          case 'dropzone_user':\n            return dispatch(actions.forms.manifest.setFieldError(['dropzoneUser', message]));\n          case 'exit_weight':\n            return dispatch(actions.forms.manifest.setFieldError(['exitWeight', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlot?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlot?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlot?.fieldErrors?.length) {\n        onSuccess();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    dispatch,\n    mutationCreateSlot,\n    onSuccess,\n    state.fields.dropzoneUser?.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.passengerExitWeight?.value,\n    state.fields.passengerName?.value,\n    state.fields.rig.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.ticketType.value?.isTandem,\n    validate,\n  ]);\n\n  const onClose = React.useCallback(() => {\n    dispatch(actions.forms.manifest.reset());\n    dispatch(actions.forms.manifest.setOpen(false));\n    _onClose();\n  }, [dispatch, _onClose]);\n\n  console.log(state.fields);\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      title={`Manifest ${state?.fields?.dropzoneUser?.value?.user?.name} on ${state.fields.load?.value?.name}`}\n      loading={mutationData.loading}\n      {...{ open, onClose }}\n      buttonLabel=\"Manifest\"\n      buttonAction={onManifest}\n    >\n      <SlotForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport {\n  Autocomplete,\n  InputAdornment,\n  ListItemAvatar,\n  ListItemText,\n  MenuItem,\n  styled,\n} from '@mui/material';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useDropzoneUsersLazyQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport first from 'lodash/first';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Caption, useTheme } from 'react-native-paper';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IDropzoneUserAutocompleteProps {\n  value?: DropzoneUserEssentialsFragment | null;\n  label?: string;\n  placeholder?: string;\n  color?: string;\n  onChange(value: DropzoneUserEssentialsFragment): void;\n}\n\nconst StyledTextField = styled(TextField, {\n  shouldForwardProp: (prop: keyof TextFieldProps) => prop !== 'color',\n})((p: TextFieldProps) => ({\n  // input label when focused\n  '& .MuiInput-input': {\n    color: p.color,\n  },\n  '& label.Mui-focused': {\n    color: p.color,\n  },\n  // focused color for input with variant='standard'\n  '& .MuiInput-root:before': {\n    borderBottomColor: p.color,\n  },\n  '& .MuiInput-root:hover': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='filled'\n  '& .MuiFilledInput-underline': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='outlined'\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: p.color,\n    },\n  },\n})) as React.ComponentType<Omit<TextFieldProps, 'color'> & { color?: string }>;\nexport default function DropzoneUserAutocomplete(props: IDropzoneUserAutocompleteProps) {\n  const { label, onChange, placeholder, color } = props;\n  const [searchUsers, { data, loading }] = useDropzoneUsersLazyQuery();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  React.useEffect(() => {\n    if (currentDropzoneId && searchText !== null) {\n      searchUsers({\n        variables: { dropzoneId: currentDropzoneId, search: searchText, licensed: false },\n      });\n    }\n  }, [currentDropzoneId, searchText, searchUsers]);\n\n  const theme = useTheme();\n  const getOptionLabel = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) =>\n      option.user.nickname\n        ? `${option.user.nickname} (${option.user.name})`\n        : (option.user.name as string),\n    []\n  );\n\n  const groupBy = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) => first(getOptionLabel(option).split('')) as string,\n    [getOptionLabel]\n  );\n\n  const options = React.useMemo(\n    () =>\n      (\n        (data?.dropzone?.dropzoneUsers?.edges?.map(\n          (edge) => edge?.node\n        ) as DropzoneUserEssentialsFragment[]) || []\n      ).sort(\n        (a, b) =>\n          -(first(getOptionLabel(b).split('')) as string).localeCompare(\n            first(getOptionLabel(a).split('')) as string\n          )\n      ),\n    [data?.dropzone?.dropzoneUsers?.edges, getOptionLabel]\n  );\n\n  const onSelect = React.useCallback(\n    (_: unknown, nextValue?: DropzoneUserEssentialsFragment | null) => {\n      setSearchText('');\n      if (nextValue) {\n        onChange(nextValue);\n      }\n    },\n    [onChange]\n  );\n  return (\n    <Autocomplete<DropzoneUserEssentialsFragment>\n      {...{ loading, options, groupBy, getOptionLabel, value: null }}\n      sx={{ width: '100%' }}\n      renderInput={(params) => (\n        <StyledTextField\n          variant=\"standard\"\n          {...params}\n          {...{ color, label, placeholder }}\n          fullWidth\n          value={searchText}\n          InputProps={{\n            ...params.InputProps,\n            value: searchText,\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MaterialCommunityIcons\n                  name=\"account-search-outline\"\n                  size={20}\n                  color={color || theme.colors.text}\n                />\n              </InputAdornment>\n            ),\n          }}\n        />\n      )}\n      onInputChange={(_, text) => setSearchText(text)}\n      onChange={onSelect}\n      inputValue={searchText}\n      popupIcon={<MaterialCommunityIcons name=\"chevron-down\" color={color} />}\n      clearIcon={<MaterialCommunityIcons name=\"close\" color={color} />}\n      renderOption={(menuItemProps, option) => (\n        <MenuItem {...menuItemProps} key={`autocomplete-user-${option.id}`} id={option.id}>\n          <ListItemAvatar>\n            <UserAvatar name={option.user.name} image={option?.user?.image} size={32} />\n          </ListItemAvatar>\n\n          <ListItemText>\n            {option.user.nickname ? (\n              <>\n                {option.user.nickname}&nbsp;\n                <Caption>({option.user.name})</Caption>\n              </>\n            ) : (\n              option.user.name\n            )}\n          </ListItemText>\n        </MenuItem>\n      )}\n    />\n  );\n}\n","import { useQueryDropzoneUserProfile } from 'app/api/reflection';\nimport * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport { Card, ProgressBar, Divider, List, Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport calculateWingLoading from 'app/utils/calculateWingLoading';\nimport Chip from 'app/components/chips/Chip';\nimport TextInput from 'app/components/input/text/TextField';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: number;\n  dropzoneId: number;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: RigEssentialsFragment;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: RigEssentialsFragment): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneId,\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { data, loading } = useQueryDropzoneUserProfile({\n    variables: {\n      dropzoneUserId,\n      dropzoneId,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && data?.dropzone?.dropzoneUser?.user?.exitWeight) {\n      onChangeExitWeight(Number(data.dropzone.dropzoneUser.user.exitWeight));\n    }\n  }, [data?.dropzone?.dropzoneUser?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={1}>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Card.Title\n        title={data?.dropzone?.dropzoneUser?.user.name}\n        left={() => (\n          <UserAvatar\n            name={data?.dropzone?.dropzoneUser?.user?.name}\n            image={data?.dropzone?.dropzoneUser?.user?.image}\n            size={36}\n          />\n        )}\n        titleStyle={{ paddingRight: 0 }}\n        right={() => (\n          <View style={{ maxWidth: 100, marginRight: 16 }}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              mode=\"flat\"\n              variant={NumberFieldType.Weight}\n              onChange={(num) => onChangeExitWeight(num)}\n            />\n          </View>\n        )}\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <RigSelect\n            small\n            variant=\"chip\"\n            dropzoneUserId={dropzoneUserId}\n            onSelect={onChangeRig}\n            value={selectedRig}\n            tandem={isTandem}\n            autoSelectFirst\n          />\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip small icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n          <Chip small icon=\"lock\" mode=\"outlined\" disabled>\n            {data?.dropzone?.dropzoneUser?.role?.name}\n          </Chip>\n          <Chip small icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {data?.dropzone?.dropzoneUser?.license?.name}\n          </Chip>\n        </ScrollView>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  mode=\"flat\"\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChange={(num) => onChangePassengerWeight?.(num)}\n                  variant={NumberFieldType.Weight}\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { uniqBy } from 'lodash';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { JumpType, Permission, TicketType } from 'app/api/schema.d';\nimport { RigEssentialsFragment, TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\n\nimport UserRigCard from './UserRigCard';\nimport { SlotUserWithRig } from './slice';\n\ninterface IUserCardProps {\n  slotUser: SlotUserWithRig;\n}\n\nfunction UserCard(props: IUserCardProps) {\n  const { slotUser } = props;\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  const onChangeExitWeight = React.useCallback(\n    (exitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onRemove = React.useCallback(\n    () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n        ])\n      ),\n    [dispatch, slotUser.id, state.fields.users.value]\n  );\n\n  const onChangeRig = React.useCallback(\n    (newRig: RigEssentialsFragment) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, rigId: Number(newRig.id), rig: newRig } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onChangePassengerName = React.useCallback(\n    (passengerName: string) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerName } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  const onChangePassengerWeight = React.useCallback(\n    (passengerExitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  return (\n    <UserRigCard\n      key={`user-rig-card-${slotUser.id}`}\n      dropzoneId={globalState.currentDropzoneId as number}\n      dropzoneUserId={Number(slotUser.id)}\n      selectedRig={slotUser.rig || undefined}\n      exitWeight={slotUser.exitWeight}\n      {...{\n        onChangeExitWeight,\n        onRemove,\n        onChangeRig,\n        onChangePassengerName,\n        onChangePassengerWeight,\n      }}\n      {...{ isTandem }}\n      passengerName={slotUser.passengerName}\n      passengerWeight={slotUser.passengerExitWeight}\n    />\n  );\n}\nexport default function ManifestGroupForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: state.fields.users?.value?.map(\n        (slotUser) => slotUser.id\n      ) as number[],\n      isPublic: canManifestOthers ? null : true,\n      dropzoneId: Number(globalState.currentDropzoneId),\n    },\n    onError: console.error,\n  });\n\n  const jumpTypes = React.useMemo(\n    () =>\n      uniqBy(\n        [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n        ({ id }) => id\n      ) || [],\n    [data]\n  );\n\n  const createToggleTicketAddonHandler = React.useCallback(\n    (extra: TicketTypeExtraEssentialsFragment) => () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'extras',\n          state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n            ? state?.fields?.extras.value?.filter(({ id }) => id !== extra.id)\n            : [...(state?.fields?.extras?.value || []), extra],\n        ])\n      ),\n    [dispatch, state?.fields?.extras.value]\n  );\n  return (\n    <>\n      <View style={{ paddingHorizontal: 8 }} key=\"manifest-group-config\">\n        <List.Subheader>Jump type</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={jumpTypes}\n          selected={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n          renderItemLabel={(jumpType: JumpType) => jumpType.name}\n          isDisabled={(jumpType: JumpType) =>\n            !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n          }\n          onChangeSelected={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['jumpType', firstUser as JumpType]))\n          }\n        />\n\n        <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n          {state.fields.jumpType.error || ''}\n        </HelperText>\n\n        <List.Subheader>Ticket</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={data?.dropzone?.ticketTypes || []}\n          selected={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n          renderItemLabel={(ticketType: TicketType) => ticketType.name}\n          onChangeSelected={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['ticketType', firstUser as TicketType]))\n          }\n        />\n        <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n          {state.fields.ticketType.error || ''}\n        </HelperText>\n        {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n          <List.Subheader>Ticket addons</List.Subheader>\n        )}\n        <ScrollView horizontal style={styles.ticketAddons}>\n          {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n            <Chip\n              key={`addon-${extra?.id}`}\n              selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n              onPress={createToggleTicketAddonHandler(extra as TicketTypeExtraEssentialsFragment)}\n            >\n              {`${extra.name} ($${extra.cost})`}\n            </Chip>\n          ))}\n        </ScrollView>\n        <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n          {state.fields.extras.error || ''}\n        </HelperText>\n      </View>\n\n      <Divider />\n\n      <View\n        style={{ paddingHorizontal: 0, paddingTop: 16, flexGrow: 1 }}\n        key=\"manifest-group-users\"\n      >\n        <List.Subheader>Group</List.Subheader>\n        {state.fields?.users?.value?.map((slotUser) => (\n          <UserCard {...{ slotUser }} key={`manifest-${slotUser.id}`} />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { AppBar, Fade, LinearProgress, Toolbar } from '@mui/material';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useManifestGroupMutation, useQueryDropzoneUserProfileLazyQuery } from 'app/api/reflection';\nimport DropzoneUserAutocomplete from 'app/components/autocomplete/DropzoneUserAutocomplete.web';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useManifestGroupMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate() || !state.fields.users.value?.length) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpType: Number(state.fields.jumpType.value?.id),\n          ticketType: Number(state.fields.ticketType.value?.id),\n          extras: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          load: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map(\n            ({ id, exitWeight, rigId, rig, passengerName, passengerExitWeight }) => ({\n              id,\n              rig: Number(rigId || rig?.id) || undefined,\n              exitWeight,\n              passengerName,\n              passengerExitWeight,\n            })\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n          case 'jump_type_id':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onClose();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    onClose,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  // dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n\n  const [fetchProfile, { loading }] = useQueryDropzoneUserProfileLazyQuery();\n  const onSelectUser = React.useCallback(\n    (profile: DropzoneUserProfileFragment) => {\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([profile]));\n    },\n    [dispatch]\n  );\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      loading={mutationData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Manifest\"\n      onClose={() => {\n        dispatch(actions.forms.manifestGroup.reset());\n        onClose();\n      }}\n      buttonAction={onManifest}\n      scrollable={false}\n    >\n      <View style={styles.wrapper} testID=\"manifest-group-sheet\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <DropzoneUserAutocomplete\n              color=\"white\"\n              placeholder=\"Search skydivers...\"\n              onChange={(user) => {\n                fetchProfile({\n                  variables: {\n                    dropzoneId: Number(globalState.currentDropzoneId),\n                    dropzoneUserId: Number(user.id),\n                  },\n                }).then((result) => {\n                  if (result.data?.dropzone?.dropzoneUser) {\n                    onSelectUser(result.data?.dropzone.dropzoneUser);\n                  }\n                });\n              }}\n            />\n          </Toolbar>\n        </AppBar>\n        <Fade in={loading || mutationData.loading}>\n          <LinearProgress variant=\"indeterminate\" />\n        </Fade>\n        <ScrollView testID=\"scroll-area\">\n          <ManifestGroupForm />\n        </ScrollView>\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: { height: '100%' },\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n    paddingTop: 0,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: 'calc(100% - 200px)',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema';\n\nconst MUTATION_UPDATE_LOAD = gql`\n  mutation UpdateLoad(\n    $id: Int!\n    $pilot: Int\n    $gca: Int\n    $plane: Int\n    $isOpen: Boolean\n    $loadMaster: Int\n    $dispatchAt: Int\n    $hasLanded: Boolean\n  ) {\n    updateLoad(\n      input: {\n        id: $id\n        attributes: {\n          pilot: $pilot\n          gca: $gca\n          plane: $plane\n          isOpen: $isOpen\n          loadMaster: $loadMaster\n          dispatchAt: $dispatchAt\n          hasLanded: $hasLanded\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        createdAt\n        loadNumber\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          exitWeight\n\n          passengerName\n          passengerExitWeight\n\n          user {\n            id\n            name\n          }\n          ticketType {\n            id\n            name\n            altitude\n            isTandem\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(MUTATION_UPDATE_LOAD, {\n  getPayload: (result) => result.updateLoad,\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { DeleteSlotInput, DeleteSlotPayload } from '../schema';\n\nconst MUTATION_DELETE_SLOT = gql`\n  mutation DeleteSlot($id: Int!) {\n    deleteSlot(input: { id: $id }) {\n      slot {\n        id\n\n        dropzoneUser {\n          id\n          user {\n            id\n            name\n          }\n        }\n        load {\n          id\n          availableSlots\n          isOpen\n          weight\n          slots {\n            id\n            createdAt\n            exitWeight\n\n            passengerName\n            passengerExitWeight\n\n            user {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n              altitude\n              isTandem\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<DeleteSlotInput, DeleteSlotPayload>(MUTATION_DELETE_SLOT, {\n  getPayload: (result) => result.deleteSlot,\n});\n","import * as React from 'react';\nimport { FAB, Portal, useTheme } from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport useMutationUpdateLoad from 'app/api/hooks/useMutationUpdateLoad';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\n\nimport { Permission, LoadState } from 'app/api/schema.d';\nimport { useFinalizeLoadMutation } from 'app/api/reflection';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch } from 'app/state';\nimport isSameDay from 'date-fns/isSameDay';\n\ninterface ILoadActionButtonProps {\n  load: LoadDetailsFragment;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () => null,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const onManifest = React.useCallback(() => {\n    if (!currentUser?.hasLicense) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You need to select a license on your user profile',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasMembership) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your membership is out of date',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasExitWeight) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Update your exit weight on your profile before manifesting',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasCredits) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You have no credits on your account',\n          variant: 'info',\n        })\n      );\n    }\n\n    dispatch(actions.forms.manifest.setOpen(true));\n    dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n    dispatch(actions.forms.manifest.setField(['load', load]));\n    return null;\n  }, [currentUser, dispatch, load]);\n\n  const theme = useTheme();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const createCallAction = React.useCallback(\n    (minutes: number | null) => () => {\n      setExpanded(false);\n      updateCall(minutes);\n    },\n    [updateCall]\n  );\n\n  const callActions = [\n    {\n      label: '20 minute call',\n      onPress: createCallAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createCallAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createCallAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const isToday = isSameDay(new Date(), load.createdAt * 1000);\n\n  const manifestActions = [\n    !showManifestButton || !isToday\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => onManifest(),\n        },\n    !showGroupIcon || !isToday\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createCallAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: () =>\n            mutationFinalizeLoad({\n              variables: { id: Number(load.id), state: LoadState.Cancelled },\n            }),\n        },\n    ![LoadState.Cancelled, LoadState.Landed].includes(load.state) || !isToday\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: () => onLanded(),\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) && isToday ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n          backgroundColor: theme.colors.primary,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n}) as React.ComponentType<any>;\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { LoadEssentialsFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { format } from 'date-fns/esm';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: LoadEssentialsFragment;\n  children?: React.ReactNode;\n  renderBadges?: React.ComponentType<object>;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, renderBadges: RenderBadges, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          {load?.dispatchAt && isAfter(load.dispatchAt * 1000, new Date()) ? (\n            <Countdown\n              end={new Date(load.dispatchAt * 1000)}\n              variant={theme.dark ? 'light' : 'dark'}\n              size={80}\n            />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"shield-airplane\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>\n            {load?.createdAt && format(load.createdAt * 1000, 'dd LLLL, yyyy')}\n          </Paragraph>\n          {RenderBadges && width > 600 ? (\n            <RenderBadges />\n          ) : (\n            <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n          )}\n        </View>\n      </View>\n\n      {RenderBadges && width < 600 ? <RenderBadges /> : null}\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 8,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import { SlotDetailsFragment } from 'app/api/operations';\n\nexport const slotLoadingFragment: SlotDetailsFragment = {\n  id: '__LOADING__',\n  cost: 0,\n  createdAt: 0,\n  exitWeight: 0,\n  groupNumber: 0,\n  extras: null,\n  jumpType: null,\n  passengerExitWeight: null,\n  __typename: 'Slot',\n  passengerName: null,\n  ticketType: null,\n  wingLoading: null,\n};\n\nexport const slotAvailableFragment: SlotDetailsFragment = {\n  ...slotLoadingFragment,\n  id: '__AVAILABLE__',\n};\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet } from 'react-native';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport React from 'react';\nimport { Caption, DataTable, Paragraph } from 'react-native-paper';\nimport { generateColor } from 'app/utils/generateColor';\nimport { isNumber } from 'lodash';\nimport SwipeActions from '../layout/SwipeActions';\nimport UserAvatar from '../UserAvatar';\n\nexport enum SlotFields {\n  License = 'license',\n  Group = 'groupNumber',\n  WingLoading = 'wingloading',\n  Altitude = 'altitude',\n  Rig = 'rig',\n  TicketType = 'ticketType',\n  JumpType = 'ticketType',\n}\n\nexport interface ISlotsTableProps {\n  load: LoadDetailsFragment;\n  fields?: SlotFields[];\n  slot: SlotDetailsFragment;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n}\n\nconst GROUP_COLORS = Array.from({ length: 20 }).map(() => generateColor());\n\nexport default function UserRow(props: ISlotsTableProps) {\n  const { fields, load, slot, onDeletePress, onSlotGroupPress, onSlotPress } = props;\n\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const slotGroup: Required<typeof load['slots']> = load?.slots?.filter(\n    ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n  ) as Required<typeof load['slots']>;\n  const isCurrentUser = slot?.dropzoneUser?.id === currentUser?.id;\n\n  return (\n    <SwipeActions\n      disabled={(isCurrentUser && !canRemoveSelf) || (!isCurrentUser && !canRemoveOthers)}\n      key={`slot-${slot.id}`}\n      rightAction={{\n        label: 'Delete',\n        backgroundColor: 'red',\n        onPress: () => onDeletePress(slot),\n      }}\n    >\n      <DataTable.Row\n        testID=\"slot-row\"\n        style={\n          isNumber(slot?.groupNumber)\n            ? {\n                borderLeftWidth: 5,\n                borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                paddingLeft: 4,\n              }\n            : undefined\n        }\n        disabled={!!load?.hasLanded}\n        onPress={() => {\n          if (slot.dropzoneUser?.id === currentUser?.id) {\n            if (canEditSelf) {\n              if (slotGroup?.length) {\n                onSlotGroupPress(slotGroup);\n              } else {\n                onSlotPress(slot);\n              }\n            }\n          } else if (canEditOthers) {\n            if (slotGroup?.length) {\n              onSlotGroupPress(slotGroup);\n            } else {\n              onSlotPress(slot);\n            }\n          }\n        }}\n        pointerEvents=\"none\"\n      >\n        <DataTable.Cell\n          style={{\n            paddingLeft: 0,\n            paddingRight: 0,\n            marginLeft: 0,\n            flexWrap: 'nowrap',\n            alignItems: 'center',\n            flexDirection: 'row',\n          }}\n        >\n          <UserAvatar\n            size={20}\n            name={slot?.dropzoneUser?.user?.nickname || slot?.dropzoneUser?.user?.name || ''}\n            source={\n              slot?.dropzoneUser?.user?.image ? { uri: slot?.dropzoneUser?.user?.image } : undefined\n            }\n            style={{ marginLeft: -12 }}\n          />\n          <Paragraph style={styles.slotText}>\n            {slot?.dropzoneUser?.user?.nickname\n              ? slot?.dropzoneUser?.user?.nickname\n              : slot?.dropzoneUser?.user?.name}\n          </Paragraph>\n\n          {slot?.dropzoneUser?.user?.nickname ? (\n            <Caption>{`(${slot?.dropzoneUser?.user?.name})`}</Caption>\n          ) : null}\n        </DataTable.Cell>\n        {fields?.includes(SlotFields.License) ? (\n          <DataTable.Cell numeric>\n            <Paragraph style={styles.slotText}>{slot?.dropzoneUser?.license?.name}</Paragraph>\n          </DataTable.Cell>\n        ) : null}\n        {fields?.includes(SlotFields.Rig) ? (\n          <DataTable.Cell numeric>\n            <Paragraph style={styles.slotText}>\n              {slot?.rig ? `${slot.rig.make} ${slot.rig.model} w/ ${slot.rig.canopySize}` : null}\n            </Paragraph>\n          </DataTable.Cell>\n        ) : null}\n        {fields?.includes(SlotFields.WingLoading) ? (\n          <DataTable.Cell numeric>\n            <Paragraph style={styles.slotText}>{slot?.wingLoading?.toFixed(2) || '-'}</Paragraph>\n          </DataTable.Cell>\n        ) : null}\n        {!fields || fields.includes(SlotFields.JumpType) ? (\n          <DataTable.Cell numeric>\n            <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n          </DataTable.Cell>\n        ) : null}\n        {fields?.includes(SlotFields.TicketType) ? (\n          <DataTable.Cell numeric>\n            <Paragraph style={styles.slotText}>{slot?.ticketType?.name}</Paragraph>\n          </DataTable.Cell>\n        ) : null}\n        {!fields || fields.includes(SlotFields.Altitude) ? (\n          <DataTable.Cell numeric>\n            <Paragraph style={styles.slotText}>\n              {(slot?.ticketType?.altitude || 14000) / 1000}k\n            </Paragraph>\n          </DataTable.Cell>\n        ) : null}\n      </DataTable.Row>\n\n      {slot?.ticketType?.isTandem && (\n        <DataTable.Row testID=\"slot-row\" disabled={!!load?.hasLanded} pointerEvents=\"none\">\n          <DataTable.Cell>\n            <Paragraph style={styles.slotText}>{slot?.passengerName}</Paragraph>\n          </DataTable.Cell>\n          <DataTable.Cell numeric>\n            <Paragraph style={styles.slotText}>Passenger</Paragraph>\n          </DataTable.Cell>\n          <DataTable.Cell numeric>\n            <Paragraph style={styles.slotText}>\n              {(slot?.ticketType?.altitude || 14000) / 1000}k\n            </Paragraph>\n          </DataTable.Cell>\n        </DataTable.Row>\n      )}\n    </SwipeActions>\n  );\n}\n\nconst styles = StyleSheet.create({\n  slotText: {\n    fontSize: 12,\n    alignSelf: 'center',\n    height: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n        style={{ height: '100%' }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      childrenContainerStyle={{ height: '100%' }}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import { hsl } from 'color';\n\nexport function generateColor() {\n  return hsl(360 * Math.random(), 25 + 70 * Math.random(), 85 + 10 * Math.random())\n    .rgb()\n    .toString();\n}\n","import { StyleSheet } from 'react-native';\nimport React from 'react';\nimport { DataTable, Paragraph } from 'react-native-paper';\n\nexport interface IAvailableRowProps {\n  onPress(): void;\n}\nexport default function AvailableRow(props: IAvailableRowProps) {\n  const { onPress } = props;\n\n  return (\n    <DataTable.Row testID=\"slot-row\" {...{ onPress }}>\n      <DataTable.Cell>\n        <Paragraph style={styles.slotText}>- Available -</Paragraph>\n      </DataTable.Cell>\n      <DataTable.Cell numeric>-</DataTable.Cell>\n      <DataTable.Cell numeric>-</DataTable.Cell>\n    </DataTable.Row>\n  );\n}\n\nconst styles = StyleSheet.create({\n  slotText: {\n    fontSize: 12,\n  },\n});\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { DataTable, Surface, Text } from 'react-native-paper';\nimport { slotAvailableFragment } from 'app/__fixtures__/slots.fixtures';\nimport UserRow, { SlotFields } from './UserRow';\nimport AvailableRow from './AvailableRow';\n\nexport interface ISlotsTableProps {\n  load?: LoadDetailsFragment | null;\n  loading?: boolean;\n  slots: SlotDetailsFragment[];\n  fields?: SlotFields[];\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onAvailableSlotPress(): void;\n}\nexport default function SlotsTable(props: ISlotsTableProps) {\n  const {\n    load,\n    slots,\n    fields,\n    onDeletePress,\n    onAvailableSlotPress,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n\n  console.log(fields);\n  const items = React.useMemo(\n    () =>\n      Array.from({ length: load?.maxSlots || 0 }).map((_, index) =>\n        slots && slots.length > index ? slots[index] : slotAvailableFragment\n      ),\n    [load?.maxSlots, slots]\n  );\n\n  return (\n    <Surface style={{ flexGrow: 1 }}>\n      <DataTable>\n        <DataTable.Header style={{ width: '100%' }}>\n          <DataTable.Title>\n            <Text style={styles.th}>Name</Text>\n          </DataTable.Title>\n          {fields?.includes(SlotFields.License) && (\n            <DataTable.Title numeric>\n              <Text style={styles.th}>License</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.Rig) && (\n            <DataTable.Title numeric>\n              <Text style={styles.th}>Equipment</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.WingLoading) && (\n            <DataTable.Title numeric>\n              <Text style={styles.th}>Wing Loading</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.JumpType) && (\n              <DataTable.Title numeric>\n                <Text style={styles.th}>Jump type</Text>\n              </DataTable.Title>\n            ))}\n          {fields?.includes(SlotFields.TicketType) && (\n            <DataTable.Title numeric>\n              <Text style={styles.th}>Ticket</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.Altitude) && (\n              <DataTable.Title numeric>\n                <Text style={styles.th}>Altitude</Text>\n              </DataTable.Title>\n            ))}\n        </DataTable.Header>\n        {load &&\n          items?.map((slot, idx) =>\n            slot.id === '__AVAILABLE__' ? (\n              // eslint-disable-next-line react/no-array-index-key\n              <AvailableRow {...{ onPress: onAvailableSlotPress }} key={`slot-available-${idx}`} />\n            ) : (\n              <UserRow\n                {...{ fields, slot, load, onDeletePress, onSlotGroupPress, onSlotPress }}\n                key={`slot-${slot.id}`}\n              />\n            )\n          )}\n      </DataTable>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  th: {\n    fontWeight: 'bold',\n  },\n});\n","import * as React from 'react';\nimport { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport SlotsTable, { ISlotsTableProps } from 'app/components/slots_table/Table';\nimport { slotLoadingFragment } from 'app/__fixtures__/slots.fixtures';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useWindowDimensions } from 'react-native';\n\ninterface ITableViewProps extends Omit<ISlotsTableProps, 'load'> {\n  load?: LoadDetailsFragment | null;\n  loading: boolean;\n  refetch(): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n}\n\nexport default function LoadScreen(props: ITableViewProps) {\n  const { load, loading, onAvailableSlotPress, onDeletePress, onSlotGroupPress, onSlotPress } =\n    props;\n  const { width } = useWindowDimensions();\n  const numFields = Math.floor(width / 200);\n\n  const slots: SlotDetailsFragment[] = Array.from({\n    length: (load?.slots?.length || 0) + (load?.availableSlots || 0),\n  }).map((_, index) =>\n    (load?.slots?.length || 0) > index\n      ? (load?.slots as SlotDetailsFragment[])[index]\n      : { ...slotLoadingFragment, id: '__AVAILABLE__' }\n  );\n\n  console.log({ width, numFields, slots, load });\n\n  return (\n    <SlotsTable\n      fields={\n        [\n          SlotFields.Altitude,\n          SlotFields.JumpType,\n          numFields > 2 ? SlotFields.License : null,\n          numFields > 3 ? SlotFields.TicketType : null,\n          numFields > 4 ? SlotFields.WingLoading : null,\n          numFields > 5 ? SlotFields.Rig : null,\n        ].filter(Boolean) as SlotFields[]\n      }\n      {...{\n        load,\n        loading,\n        slots,\n        onAvailableSlotPress,\n        onDeletePress,\n        onSlotGroupPress,\n        onSlotPress,\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { FlatList, Platform } from 'react-native';\n\nimport { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport {\n  PlaneEssentialsFragment,\n  SlotDetailsFragment,\n  SlotEssentialsFragment,\n} from 'app/api/operations';\nimport { useLoadQuery } from 'app/api/reflection';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport ManifestUserSheet from 'app/components/dialogs/ManifestUser/ManifestUser';\nimport ManifestGroupSheet from 'app/components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from 'app/components/Themed';\nimport { DropzoneUser, LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationUpdateLoad from 'app/api/hooks/useMutationUpdateLoad';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport useMutationDeleteSlot from 'app/api/hooks/useMutationDeleteSlot';\nimport { Divider } from 'react-native-paper';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\n// import CardView from './views/CardView';\nimport TableView from './views/TableView';\n\nexport type LoadScreenRoute = {\n  LoadScreen: {\n    loadId: string;\n  };\n};\n\nexport default function LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const route = useRoute<RouteProp<LoadScreenRoute>>();\n  const loadId = route?.params?.loadId;\n\n  const { data, loading, refetch } = useLoadQuery({\n    variables: {\n      id: Number(route.params.loadId),\n    },\n    pollInterval: 30000,\n  });\n\n  const load = React.useMemo(() => data?.load, [data?.load]);\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(loadId),\n        pilot: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, loadId]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(loadId),\n        gca: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, loadId]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: PlaneEssentialsFragment) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(loadId),\n        plane: Number(plane.id),\n      });\n    },\n    [mutationUpdateLoad, loadId]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(loadId),\n        loadMaster: Number(lm.id),\n      });\n    },\n    [mutationUpdateLoad, loadId]\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n  const maxSlots = load?.maxSlots || 0;\n  const occupiedSlots = load?.occupiedSlots || 0;\n\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotEssentialsFragment) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const onSlotPress = React.useCallback(\n    (slot: SlotDetailsFragment) => {\n      const slotGroup = load?.slots?.filter(\n        ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n      );\n      const onSlotGroupPress = () => {\n        if (slotGroup && load) {\n          dispatch(actions.forms.manifestGroup.reset());\n          dispatch(actions.forms.manifestGroup.setOpen(true));\n          dispatch(\n            actions.forms.manifestGroup.setFromSlots({\n              slots: slotGroup?.length ? slotGroup : [slot],\n              load,\n            })\n          );\n          dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n          // FIXME: Open ManifestGroup Drawer\n        }\n      };\n      const onSlotSinglePress = () => {\n        dispatch(actions.forms.manifest.setOpen(slot));\n        dispatch(actions.forms.manifest.setField(['load', load]));\n      };\n\n      if ((canEditSelf && slot.dropzoneUser?.id === currentUser?.id) || canEditOthers) {\n        if (canEditSelf) {\n          if (slotGroup?.length || Platform.OS === 'web') {\n            onSlotGroupPress();\n          } else {\n            onSlotSinglePress();\n          }\n        }\n      }\n    },\n    [canEditOthers, canEditSelf, currentUser?.id, dispatch, load]\n  );\n\n  const onSlotGroupPress = React.useCallback(\n    (slotGroup: SlotDetailsFragment[]) => {\n      if (load) {\n        dispatch(actions.forms.manifestGroup.reset());\n        dispatch(actions.forms.manifestGroup.setFromSlots({ slots: slotGroup, load }));\n        dispatch(actions.forms.manifestGroup.setField(['load', load]));\n      }\n    },\n    [dispatch, load]\n  );\n\n  const onAvailableSlotPress = React.useCallback(() => {\n    dispatch(actions.forms.manifestGroup.reset());\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n    if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n      // Automatically add current user to selection\n      dispatch(actions.screens.manifest.setSelected([currentUser]));\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n    }\n\n    dispatch(actions.forms.manifestGroup.setOpen(true));\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n  }, [canManifestGroup, canManifestGroupWithSelfOnly, currentUser, dispatch, load]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.background }}>\n      <Header\n        load={load || undefined}\n        renderBadges={() => (\n          <FlatList\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            style={{ marginVertical: 8 }}\n            data={['plane', 'pilot', 'gca', 'loadMaster']}\n            keyExtractor={(item) => item.toString()}\n            renderItem={({ item }) => {\n              switch (item) {\n                case 'plane':\n                  return (\n                    <PlaneChip\n                      value={load?.plane}\n                      onSelect={async (plane) => {\n                        if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                          const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                          dispatch(\n                            actions.notifications.showSnackbar({\n                              // eslint-disable-next-line max-len\n                              message: `You need to take ${diff} people off the load to fit on this plane`,\n                              variant: 'info',\n                            })\n                          );\n                        } else {\n                          await updatePlane(plane);\n                          refetch();\n                        }\n                      }}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'gca':\n                  return (\n                    <GCAChip\n                      value={load?.gca}\n                      onSelect={updateGCA}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'pilot':\n                  return (\n                    <PilotChip\n                      value={load?.pilot}\n                      onSelect={updatePilot}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                default:\n                  return (\n                    <LoadMasterChip\n                      value={load?.loadMaster}\n                      slots={load?.slots || []}\n                      onSelect={updateLoadMaster}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n              }\n            }}\n          />\n        )}\n      >\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state || LoadState.Open],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      {/* <CardView {...{ load, loading, refetch, onSlotPress, onDeletePress: onDeleteSlot }} /> */}\n      <Divider />\n      <TableView\n        {...{\n          slots: load?.slots?.filter(Boolean) || [],\n          load,\n          loading,\n          refetch,\n          onSlotPress,\n          onDeletePress: onDeleteSlot,\n          onSlotGroupPress,\n          onAvailableSlotPress,\n        }}\n      />\n      {load && isFocused ? <ActionButton load={load} /> : null}\n      <ManifestUserSheet\n        open={forms.manifest.open}\n        onClose={() => dispatch(actions.forms.manifest.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.manifest.setOpen(false));\n        }}\n      />\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  const value = React.useMemo(\n    () => ({\n      index,\n      count,\n      setIndex: (idx: number) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref.current?.scrollToIndex({ index: idx, animated: true });\n      },\n    }),\n    [count, index]\n  );\n\n  return (\n    <WizardContext.Provider value={value}>\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema.d';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"height\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds as Required<typeof winds>}\n        keyExtractor={(item, index) => `wind.${item.altitude}.${index}`}\n        scrollEnabled={false}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from 'app/components/wizard/Wizard';\nimport WizardCompleteStep from 'app/components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    dispatch,\n  ]);\n\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport function useAuthenticatedNavigation() {\n  return useNavigation<NavigationProp<AuthenticatedRoutes>>();\n}\n","import * as React from 'react';\nimport { Button, HelperText } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\nimport { useAuthenticatedNavigation } from '../../useAuthenticatedNavigation';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useAuthenticatedNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [mutationCreateWeatherConditions, state, dropzoneId, navigation, dispatch]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() =>\n          navigation.navigate('Manifest', {\n            screen: 'JumpRunScreen',\n          })\n        }\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"outlined\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload Conditions\n        </Button>\n        <HelperText type=\"info\">\n          Winds aloft and temperature are retrieved from MarkSchulze.net's amazing Winds Aloft\n          service.\n        </HelperText>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 0,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateLoadPayload, LoadInput } from '../schema';\n\nconst MUTATION_CREATE_LOAD = gql`\n  mutation CreateLoad(\n    $name: String\n    $pilot: Int\n    $gca: Int\n    $maxSlots: Int!\n    $plane: Int\n    $isOpen: Boolean\n  ) {\n    createLoad(\n      input: {\n        attributes: {\n          name: $name\n          pilot: $pilot\n          gca: $gca\n          maxSlots: $maxSlots\n          plane: $plane\n          isOpen: $isOpen\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        loadNumber\n        occupiedSlots\n        availableSlots\n        maxSlots\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        maxSlots\n        isOpen\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<LoadInput, CreateLoadPayload>(MUTATION_CREATE_LOAD, {\n  getPayload: (result) => result.createLoad,\n  validates: {\n    maxSlots: [\n      isRequired('Please specify amount of allowed jumpers'),\n      isNumeric('Please enter a valid number'),\n    ],\n    plane: [isRequired('What plane is flying this load?')],\n    gca: [isRequired('You must have a GCA for this load')],\n  },\n});\n","import slice from './slice';\nimport Notifications from './Notifications';\n\nconst { actions } = slice;\n\nexport { actions };\nexport default Notifications;\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { ChipProps } from 'app/components/chips/Chip';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IDropzoneUserChipSelect {\n  value?: DropzoneUserEssentialsFragment | null;\n  label: string;\n  icon?: ChipProps['icon'];\n  requiredPermissions: Permission[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(dzuser: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const { label, requiredPermissions, icon, value, onLoadingStateChanged, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: requiredPermissions,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]) => (first ? onSelect(first) : null),\n    [onSelect]\n  );\n  const getItemLabel = React.useCallback((dzUser) => dzUser?.user.name, []);\n  const isSelected = React.useCallback((item) => item.id === value?.id, [value?.id]);\n  const selected = React.useMemo(\n    () => [value].filter(Boolean) as DropzoneUserEssentialsFragment[],\n    [value]\n  );\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUserEssentialsFragment>\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={\n          uniqBy(\n            data?.dropzone?.dropzoneUsers?.edges?.map((edge) => edge?.node) || [],\n            'id'\n          ) as DropzoneUserEssentialsFragment[]\n        }\n        selected={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChangeSelected={onChangeSelected}\n      />\n    </>\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onSelect, onLoadingStateChanged } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = usePlanesQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<PlaneEssentialsFragment>\n        autoSelectFirst\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        selected={[value].filter(Boolean) as PlaneEssentialsFragment[]}\n        renderItemLabel={(plane: PlaneEssentialsFragment) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChangeSelected={([first]) => (first ? onSelect(first as PlaneEssentialsFragment) : null)}\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Checkbox, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DropzoneUserChipSelect from '../../input/chip_select/DropzoneUserChipSelect';\nimport PlaneChipSelect from '../../input/chip_select/PlaneChipSelect';\n\nexport default function LoadForm() {\n  const state = useAppSelector((root) => root.forms.load);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        placeholder=\"Optional\"\n        value={state.fields.name.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.load.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Slots\"\n        error={state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString()}\n        onChange={(newValue) =>\n          dispatch(actions.forms.load.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelect\n          value={state.fields.plane.value}\n          onSelect={(value) => {\n            dispatch(actions.forms.load.setField(['plane', value]));\n            dispatch(actions.forms.load.setField(['maxSlots', value.maxSlots]));\n          }}\n        />\n        <HelperText type={state.fields.plane.error ? 'error' : 'info'}>\n          {state.fields.plane.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"GCA\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['gca', dzUser]))}\n          value={state.fields.gca.value || null}\n          requiredPermissions={[Permission.ActAsGca]}\n        />\n        <HelperText type={state.fields.gca.error ? 'error' : 'info'}>\n          {state.fields.gca.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"Pilot\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['pilot', dzUser]))}\n          value={state.fields.pilot.value || null}\n          requiredPermissions={[Permission.ActAsPilot]}\n        />\n        <HelperText type={state.fields.pilot.error ? 'error' : 'info'}>\n          {state.fields.pilot.error || ''}\n        </HelperText>\n\n        <Divider style={{ marginVertical: 8 }} />\n\n        <Checkbox.Item\n          label=\"Allow public manifesting\"\n          status={state.fields.isOpen.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.load.setField(['isOpen', !state.fields.isOpen.value]))\n          }\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n    backgroundColor: 'white',\n  },\n});\n","import * as React from 'react';\n\nimport useMutationCreateLoad from '../../api/hooks/useMutationCreateLoad';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { actions as snackbar } from '../notifications';\n\nimport { Load } from '../../api/schema.d';\nimport LoadForm from '../forms/load/LoadForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport { LoadFields } from '../forms/load/slice';\n\ninterface ILoadDialog {\n  open: boolean;\n  onClose(): void;\n  onSuccess(load: Load): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, onClose, onSuccess } = props;\n  const state = useAppSelector((root) => root.forms.load);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const dispatch = useAppDispatch();\n  const createLoad = useMutationCreateLoad({\n    onSuccess: (payload) => {\n      dispatch(\n        snackbar.showSnackbar({\n          message: `Load ${payload?.load?.name} created`,\n          variant: 'success',\n        })\n      );\n\n      if (payload?.load) {\n        onSuccess(payload?.load);\n      }\n      dispatch(actions.forms.load.reset());\n      requestAnimationFrame(() => dispatch(actions.forms.load.setOpen(false)));\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.load.setFieldError([field as keyof LoadFields, message])),\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  const onSave = React.useCallback(() => {\n    const variables = {\n      isOpen: !!state.fields.isOpen.value,\n      name: state.fields.name.value,\n      dropzone: currentDropzoneId,\n      maxSlots: state.fields.maxSlots.value || null,\n      plane: Number(state.fields.plane.value?.id) || null,\n      gca: Number(state.fields.gca.value?.id) || null,\n      pilot: Number(state.fields.pilot.value?.id) || null,\n    };\n    createLoad.mutate(variables);\n  }, [\n    createLoad,\n    currentDropzoneId,\n    state.fields.gca.value?.id,\n    state.fields.isOpen.value,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.pilot.value?.id,\n    state.fields.plane.value?.id,\n  ]);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSave}\n      scrollable\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={createLoad.loading}\n      title=\"New Load\"\n    >\n      <LoadForm />\n    </DialogOrSheet>\n  );\n}\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List } from 'react-native-paper';\n\nimport { Text, View } from 'app/components/Themed';\nimport usePalette from 'app/hooks/usePalette';\n\ninterface IGetStartedProps {\n  hasPlanes: boolean;\n  hasTicketTypes: boolean;\n  isPublic: boolean;\n}\nexport default function GetStarted({ hasPlanes, hasTicketTypes, isPublic }: IGetStartedProps) {\n  const palette = usePalette();\n\n  return (\n    <View style={{ width: '70%' }}>\n      <Text style={styles.title}>Set up dropzone</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <List.Item\n        title=\"Create dropzone\"\n        left={() => <List.Icon color={palette.success} icon=\"check\" />}\n      />\n      <List.Item\n        title=\"Add a plane\"\n        left={() =>\n          !hasPlanes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n      <List.Item\n        title=\"Configure jump tickets\"\n        left={() =>\n          !hasTicketTypes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport useMutationUpdateLoad from 'app/api/hooks/useMutationUpdateLoad';\nimport {\n  DropzoneUserEssentialsFragment,\n  LoadDetailsFragment,\n  PlaneEssentialsFragment,\n} from 'app/api/operations';\nimport { useLoadQuery } from 'app/api/reflection';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  load: LoadDetailsFragment;\n  onPress(): void;\n}\n\nexport default function LoadCard(props: ILoadCardSmall) {\n  const { load: initialRecord, onPress } = props;\n  const dispatch = useAppDispatch();\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n  const { data, loading, refetch } = useLoadQuery({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    pollInterval: 30000,\n  });\n\n  const load = React.useMemo(() => data?.load, [data?.load]);\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUserEssentialsFragment) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilot: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: PlaneEssentialsFragment) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        plane: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 8,\n        minWidth: 300,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <View style={{ flexDirection: 'row', flexWrap: 'nowrap', backgroundColor: 'transparent' }}>\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              if ((load?.occupiedSlots || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.occupiedSlots || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'info',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12, marginTop: 0 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport {\n  Button,\n  Card,\n  DataTable,\n  IconButton,\n  Paragraph,\n  ProgressBar,\n  Text,\n} from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { useLoadQuery } from 'app/api/reflection';\nimport {\n  DropzoneUserEssentialsFragment,\n  LoadDetailsFragment,\n  PlaneEssentialsFragment,\n  SlotDetailsFragment,\n  SlotEssentialsFragment,\n} from 'app/api/operations';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport useMutationUpdateLoad from 'app/api/hooks/useMutationUpdateLoad';\nimport useMutationDeleteSlot from 'app/api/hooks/useMutationDeleteSlot';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport LoadingCard from './Loading';\n\ninterface ILoadCardLarge {\n  load: LoadDetailsFragment;\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: SlotEssentialsFragment[]): void;\n  onSlotPress(slot: SlotEssentialsFragment): void;\n  onManifest(): void;\n}\n\nexport default function LoadCard(props: ILoadCardLarge) {\n  const {\n    load: initialRecord,\n    onManifest,\n    onManifestGroup,\n    controlsVisible,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n\n  const { data, loading, refetch } = useLoadQuery({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    onError: console.error,\n  });\n  const load = React.useMemo(() => data?.load, [data?.load]);\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUserEssentialsFragment) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilot: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUserEssentialsFragment) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gca: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: PlaneEssentialsFragment) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        plane: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUserEssentialsFragment) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMaster: Number(lm.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load?.id) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    if (!load?.id) {\n      return;\n    }\n    await mutationUpdateLoad.mutate({\n      id: Number(load.id),\n      hasLanded: true,\n    });\n  }, [load?.id, mutationUpdateLoad]);\n\n  const navigation = useAuthenticatedNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text testID=\"title\">{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || mutationUpdateLoad.loading || mutationDeleteSlot.loading}\n        color={state.theme.colors.primary}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n          <ScrollView\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: `You need to take ${diff} people off the load to fit on this plane`,\n                      variant: 'info',\n                    })\n                  );\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip value={load?.gca} onSelect={updateGCA} />\n            <PilotChip value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <DataTable>\n          <DataTable.Header style={{ width: '100%' }}>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Jump type</DataTable.Title>\n            <DataTable.Title numeric>Altitude</DataTable.Title>\n          </DataTable.Header>\n          {load?.slots?.map((slot) => {\n            const slotGroup = load?.slots?.filter(\n              ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n            );\n            const isCurrentUser = slot?.dropzoneUser?.id === currentUser?.id;\n\n            return (\n              <SwipeActions\n                disabled={(isCurrentUser && !canRemoveSelf) || (!isCurrentUser && !canRemoveOthers)}\n                key={`slot-${slot.id}`}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: () => onDeleteSlot(slot),\n                }}\n              >\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  onPress={() => {\n                    if (slot.dropzoneUser?.id === currentUser?.id) {\n                      if (canEditSelf) {\n                        if (slotGroup?.length) {\n                          onSlotGroupPress(slotGroup);\n                        } else {\n                          onSlotPress(slot);\n                        }\n                      }\n                    } else if (canEditOthers) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  }}\n                  pointerEvents=\"none\"\n                >\n                  <DataTable.Cell>\n                    <Paragraph style={styles.slotText}>{slot?.dropzoneUser?.user?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n\n                {slot?.ticketType?.isTandem && (\n                  <DataTable.Row\n                    testID=\"slot-row\"\n                    disabled={!!load?.hasLanded}\n                    pointerEvents=\"none\"\n                  >\n                    <DataTable.Cell>\n                      <Paragraph style={styles.slotText}>{slot?.passengerName}</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>Passenger</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>\n                        {(slot?.ticketType?.altitude || 14000) / 1000}k\n                      </Paragraph>\n                    </DataTable.Cell>\n                  </DataTable.Row>\n                )}\n              </SwipeActions>\n            );\n          })}\n          {Array.from({ length: load?.availableSlots || 0 }, (v, i) => i).map((i) => (\n            <DataTable.Row\n              key={`${load?.id}-empty-slot-${i}`}\n              testID=\"slot-row\"\n              onPress={() =>\n                load?.id &&\n                navigation.navigate('Manifest', {\n                  screen: 'LoadScreen',\n                  params: { loadId: load?.id },\n                })\n              }\n            >\n              <DataTable.Cell>\n                <Paragraph style={styles.slotText}>- Available -</Paragraph>\n              </DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button mode=\"outlined\" onPress={() => updateCall(null)} testID=\"dispatch-cancel\">\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              setOpen={setDispatchOpen}\n              open={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <MenuItem\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a load master before this load can be finalized',\n                      variant: 'info',\n                    })\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a pilot before this load can be finalized',\n                      variant: 'info',\n                    })\n                  );\n                }\n                return onLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  slotText: {\n    fontSize: 12,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { actions, useAppDispatch } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport nightBackground from '../../../../../../assets/images/night.png';\nimport weatherBackground from '../../../../../../assets/images/weather.png';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const { dropzone, loading, called } = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? new Date(dropzone.currentConditions.createdAt * 1000)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  const onEditWindboard = React.useCallback(() => {\n    if (canUpdate && dropzone?.currentConditions) {\n      dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'WindScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const onEditJumprun = React.useCallback(() => {\n    if (dropzone?.currentConditions && canUpdate) {\n      dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'JumpRunScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const defaultBackground = theme.dark ? nightBackground : weatherBackground;\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={onEditWindboard}\n      >\n        <ImageBackground\n          source={defaultBackground}\n          style={{ ...StyleSheet.absoluteFillObject, opacity: 0.75 }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, -80],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'center' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onLongPress={onEditJumprun}\n                      onPress={onEditWindboard}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    marginHorizontal: 16,\n    // height: 200,\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    flexDirection: 'column',\n  },\n  jumpRun: {\n    width: 94,\n    height: 94,\n    marginBottom: 8,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import { useNavigation } from '@react-navigation/core';\nimport { StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\nimport * as React from 'react';\nimport { Card, List } from 'react-native-paper';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function SetupProfileCard() {\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n\n  const onPress = React.useCallback(() => {\n    if (currentUser) {\n      dispatch(actions.forms.user.setOriginal(currentUser));\n      if (currentUser?.user?.rigs?.length) {\n        dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n      }\n      navigation.navigate('Wizards', {\n        screen: 'UserWizardScreen',\n      });\n    }\n  }, [currentUser, dispatch, navigation]);\n\n  return (\n    <Card style={styles.card} {...{ onPress }}>\n      <Card.Content style={styles.content}>\n        <List.Item\n          title=\"Complete your profile\"\n          description=\"Let this dropzone know who you are\"\n          titleStyle={{ marginBottom: 4 }}\n          left={() => (\n            <LottieView\n              style={{ height: 80, width: 80 }}\n              autoPlay\n              loop={false}\n              // eslint-disable-next-line global-require\n              source={require('../../../../../assets/images/profile2.json')}\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"chevron-right\" style={styles.icon} />}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  RefreshControl,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport checkDropzoneSetupComplete from 'app/utils/checkDropzoneSetupComplete';\n\nimport NoResults from 'app/components/NoResults';\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport LoadDialog from 'app/components/dialogs/Load';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport GetStarted from '../../../../components/GetStarted';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\nimport SetupProfileCard from './SetupProfileCard';\n\nconst loadingFragment: LoadDetailsFragment = {\n  id: '__LOADING__',\n  availableSlots: 0,\n  createdAt: 0,\n  isFull: false,\n  isOpen: false,\n  loadNumber: 0,\n  maxSlots: 0,\n  occupiedSlots: 0,\n  plane: {\n    id: '__LOADING__',\n  },\n  state: LoadState.Open,\n  weight: 0,\n};\n\nconst setupProfileCardFragment = { ...loadingFragment, id: '__SETUP_PROFILE_CARD__' };\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const setup = useAppSelector((root) => root.screens.dropzoneWizard);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const [isSetupCheckComplete] = React.useState(false);\n  const { dropzone, currentUser, loading, refetch, fetchMore } = useCurrentDropzone();\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  React.useEffect(() => {\n    if (dropzone && isFocused && canUpdateDropzone) {\n      const dropzoneWizardIndex = checkDropzoneSetupComplete(dropzone);\n\n      if (dropzoneWizardIndex) {\n        dispatch(actions.screens.dropzoneWizard.setIndex(dropzoneWizardIndex));\n        dispatch(actions.forms.dropzone.setOriginal(dropzone));\n        if (dropzone?.planes?.length) {\n          dispatch(actions.forms.plane.setOriginal(dropzone.planes[0]));\n        }\n        if (dropzone?.ticketTypes?.length) {\n          dispatch(actions.forms.ticketType.setOriginal(dropzone.ticketTypes[0]));\n        }\n        navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n      }\n    }\n  }, [\n    dispatch,\n    dropzone,\n    isFocused,\n    navigation,\n    setup.completed,\n    isSetupCheckComplete,\n    canUpdateDropzone,\n  ]);\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const hasPlanes = !!dropzone?.planes?.length;\n  const hasTicketTypes = !!dropzone?.ticketTypes?.length;\n  const isPublic = !!dropzone?.isPublic;\n  const isSetupComplete = hasPlanes && hasTicketTypes;\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      // dispatch(actions.global.setAccentColor(dropzone.secondaryColor));\n      console.log('Accent color disabled');\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n\n  const onManifest = React.useCallback(\n    (load: LoadDetailsFragment) => {\n      if (!currentUser?.hasLicense) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You need to select a license on your user profile',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasMembership) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your membership is out of date',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasRigInspection) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs to be inspected before manifesting',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasReserveInDate) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs a reserve repack',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasExitWeight) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Update your exit weight on your profile before manifesting',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasCredits) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You have no credits on your account',\n            variant: 'info',\n          })\n        );\n      }\n\n      dispatch(actions.forms.manifest.setOpen(true));\n      dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n      dispatch(actions.forms.manifest.setField(['load', load]));\n      return null;\n    },\n    [currentUser, dispatch]\n  );\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const loads: LoadDetailsFragment[] = React.useMemo(\n    () => (dropzone?.loads?.edges?.map((edge) => edge?.node) as LoadDetailsFragment[]) || [],\n    [dropzone?.loads?.edges]\n  );\n  const initialLoading = !loads?.length && loading;\n\n  const theme = useTheme();\n\n  const data = React.useMemo(\n    () =>\n      [\n        !initialLoading &&\n        (!currentUser?.hasExitWeight || !currentUser?.hasLicense || !currentUser.user?.name)\n          ? setupProfileCardFragment\n          : null,\n        ...(initialLoading ? new Array(5).fill(loadingFragment) : loads),\n      ].filter(Boolean),\n    [\n      currentUser?.hasExitWeight,\n      currentUser?.hasLicense,\n      currentUser?.user?.name,\n      initialLoading,\n      loads,\n    ]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: load, index }: { item: LoadDetailsFragment; index: number }) => {\n      // 1 means loading, because null and undefined\n      // get filtered out\n      if (load.id === '__LOADING__') {\n        return manifestScreen.display === 'list' ? (\n          <LoadingCardLarge key={`loading-card-${index}`} />\n        ) : (\n          <LoadingCardSmall key={`loading-card-${index}`} />\n        );\n      }\n\n      if (load.id === '__SETUP_PROFILE_CARD__') {\n        return <SetupProfileCard />;\n      }\n      return manifestScreen.display === 'list' ? (\n        <LoadCardLarge\n          controlsVisible={false}\n          key={`load-${load?.id}`}\n          load={load}\n          onSlotPress={(slot) => {\n            if (load) {\n              dispatch(actions.forms.manifest.setOpen(slot));\n              dispatch(actions.forms.manifest.setField(['load', load]));\n            }\n          }}\n          onSlotGroupPress={(slots) => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setFromSlots({ load, slots }));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n            // FIXME: Open manifest group drawer\n          }}\n          onManifest={() => {\n            onManifest(load);\n          }}\n          onManifestGroup={() => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          }}\n        />\n      ) : (\n        <LoadCardSmall\n          key={`load-${load?.id}`}\n          load={load}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'LoadScreen',\n                  params: { loadId: load?.id },\n                },\n              },\n            })\n          }\n        />\n      );\n    },\n    [dispatch, manifestScreen.display, navigation, onManifest]\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <ProgressBar visible={loading} indeterminate color={state.theme.colors.primary} />\n\n      <View style={styles.container}>\n        {!initialLoading && !isSetupComplete ? (\n          <GetStarted {...{ hasPlanes, hasTicketTypes, isPublic }} />\n        ) : (\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              height: Dimensions.get('window').height,\n              backgroundColor: theme.colors.background,\n            }}\n          >\n            {dropzone?.banner && (\n              <ImageBackground\n                source={{ uri: dropzone.banner }}\n                style={{ position: 'absolute', top: -8, left: 0, width: '100%', height: 340 }}\n                resizeMode=\"cover\"\n              />\n            )}\n            <FlatList<LoadDetailsFragment>\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults\n                  style={{ marginTop: 156 }}\n                  title=\"No loads so far today\"\n                  subtitle=\"How's the weather?\"\n                />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n              }}\n              testID=\"loads\"\n              keyExtractor={(item, idx) => `load-small-${item?.id || idx}-${idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n              }}\n              numColumns={numColumns}\n              {...{ data, renderItem }}\n              refreshControl={\n                <RefreshControl refreshing={loading} onRefresh={() => fetchMore({})} />\n              }\n            />\n          </View>\n        )}\n        {canCreateLoad && isSetupComplete && (\n          <FAB\n            style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n            small\n            icon=\"plus\"\n            onPress={() => dispatch(actions.forms.load.setOpen(true))}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          open={isDisplayOptionsOpen}\n          setOpen={setDisplayOptionsOpen}\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n        >\n          <MenuItem\n            title=\"Show expanded cards\"\n            bold={manifestScreen.display !== 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <MenuItem\n            title=\"Show compact cards\"\n            bold={manifestScreen.display === 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n\n      <LoadDialog\n        onSuccess={() => {\n          dispatch(actions.forms.load.setOpen(false));\n          refetch();\n        }}\n        open={forms.load.open}\n        onClose={() => dispatch(actions.forms.load.setOpen(false))}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import { DropzoneDetailedFragment } from 'app/api/operations';\nimport { DropzoneWizardStep } from 'app/screens/wizards/dropzone_wizard/slice';\n\nexport default function checkDropzoneSetupComplete(dropzone: DropzoneDetailedFragment) {\n  const completed = {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  };\n\n  let currentIndex;\n  if (dropzone?.ticketTypes?.length) {\n    completed[DropzoneWizardStep.Tickets] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Tickets;\n  }\n\n  if (dropzone.planes?.length) {\n    completed[DropzoneWizardStep.Aircraft] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Aircraft;\n  }\n\n  if (dropzone?.primaryColor) {\n    completed[DropzoneWizardStep.Branding] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Branding;\n  }\n  if (dropzone.lat && dropzone.lng) {\n    completed[DropzoneWizardStep.Location] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Location;\n  }\n\n  if (dropzone.federation?.id) {\n    completed[DropzoneWizardStep.Federation] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Federation;\n  }\n\n  if (dropzone.name) {\n    completed[DropzoneWizardStep.Name] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Name;\n  }\n\n  if (Object.values(completed).some((isComplete) => !isComplete)) {\n    return currentIndex;\n  }\n  return false;\n}\n","import * as React from 'react';\nimport { Divider, List, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const { data } = useCurrentDropzone();\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.surface }}>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            onPress={() =>\n              !data?.dropzone\n                ? null\n                : navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'Configuration',\n                        params: {\n                          screen: 'DropzoneSettingsScreen',\n                          params: {\n                            dropzone: data?.dropzone as DropzoneEssentialsFragment,\n                          },\n                        },\n                      },\n                    },\n                  })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n        <Divider />\n        <List.Item\n          title=\"Permissions\"\n          description=\"Grant or revoke access to define who can do what at this dropzone\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'PermissionScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Aircrafts\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'AircraftsScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'DropzoneRigsScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'RigInspectionTemplateScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Master Log\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"View historic data for daily operations\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'MasterLogScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          title=\"Ticket types\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'TicketTypesScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <Divider />\n        <List.Item\n          title=\"Ticket add-ons\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'ExtrasScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Checkbox, List, Divider } from 'react-native-paper';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport Select from 'app/components/input/select/Select';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  onChange(value: number): void;\n}\n\nfunction AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange } = props;\n\n  return (\n    <Select\n      {...{ value, onChange }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\nexport default function TicketTypeForm() {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const { data } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"Name of the ticket users will see\"\n        onChange={(newValue) => dispatch(actions.forms.ticketType.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Price\"\n        error={state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChange={(newValue) =>\n          dispatch(actions.forms.ticketType.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || 'Base cost without extra ticket addons'}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <AltitudeSelect\n          value={state.fields.altitude.value ?? 14000}\n          onChange={(newValue) =>\n            dispatch(actions.forms.ticketType.setField(['altitude', newValue]))\n          }\n        />\n\n        {(!state.fields.altitude.value || ![4000, 14000].includes(state.fields.altitude.value)) && (\n          <TextInput\n            style={styles.field}\n            label=\"Custom altitude\"\n            error={state.fields.altitude.error}\n            value={state.fields.altitude?.value?.toString()}\n            onChange={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n            }\n          />\n        )}\n\n        <Checkbox.Item\n          label=\"Tandem\"\n          style={{ width: '100%' }}\n          status={state.fields.isTandem.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.ticketType.setField(['isTandem', !state.fields.isTandem.value]))\n          }\n        />\n        <HelperText type={state.fields.isTandem.error ? 'error' : 'info'}>\n          {state.fields.isTandem.error ||\n            'Allow also manifesting a passenger when using this ticket type'}\n        </HelperText>\n\n        <Checkbox.Item\n          label=\"Public manifesting\"\n          style={{ width: '100%' }}\n          status={state.fields.allowManifestingSelf.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(\n              actions.forms.ticketType.setField([\n                'allowManifestingSelf',\n                !state.fields.allowManifestingSelf.value,\n              ])\n            )\n          }\n        />\n\n        <HelperText type={state.fields.allowManifestingSelf.error ? 'error' : 'info'}>\n          {state.fields.allowManifestingSelf.error ||\n            'Allow users to manifest themselves with this ticket'}\n        </HelperText>\n\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        {data?.extras.map((extra) => (\n          <Checkbox.Item\n            key={`extra-${extra.id}`}\n            label={extra.name || ''}\n            status={\n              state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.ticketType.setField([\n                  'extras',\n                  state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                    ? state.fields.extras.value?.filter(({ id }) => id !== extra.id)\n                    : [\n                        ...(state.fields.extras?.value as Required<\n                          TicketTypeExtraEssentialsFragment[]\n                        >),\n                        extra,\n                      ],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useIsFocused } from '@react-navigation/core';\nimport useMutationCreateTicketType from '../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../api/hooks/useMutationUpdateTicketType';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport TicketTypeForm from '../forms/ticket_type/TicketTypeForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { TicketTypeFields } from '../forms/ticket_type/slice';\n\ninterface ITicketTypeDialog {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const createTicketType = useMutationCreateTicketType({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Saved`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.ticketType.reset());\n      onClose();\n    },\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateTicketType = useMutationUpdateTicketType({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved`,\n            variant: 'success',\n          })\n        );\n        dispatch(actions.forms.ticketType.reset());\n        onClose();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (isFocused) {\n      dispatch(actions.forms.ticketType.reset());\n    }\n  }, [dispatch, isFocused]);\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateTicketType.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    } else {\n      await createTicketType.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    }\n  }, [\n    createTicketType,\n    currentDropzone?.dropzone?.id,\n    state.fields.allowManifestingSelf.value,\n    state.fields.altitude.value,\n    state.fields.cost.value,\n    state.fields.extras?.value,\n    state.fields.isTandem.value,\n    state.fields.name.value,\n    state.original?.id,\n    updateTicketType,\n  ]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket' : 'New ticket'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={() => {\n        onClose();\n      }}\n      loading={createTicketType.loading || updateTicketType.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm />\n    </DialogOrSheet>\n  );\n}\n","import { useIsFocused, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport {\n  useArchiveTicketTypeMutation,\n  useTicketTypesQuery,\n  useUpdateTicketTypeMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport TicketTypesDialog from 'app/components/dialogs/TicketType';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport useRestriction from 'app/hooks/useRestriction';\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const form = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const { data, loading, refetch } = useTicketTypesQuery({\n    variables: {\n      dropzone: Number(state.currentDropzoneId),\n    },\n  });\n  const route = useRoute();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n  const [mutationUpdateTicketType] = useUpdateTicketTypeMutation();\n  const [mutationDeleteTicketType] = useArchiveTicketTypeMutation();\n\n  React.useEffect(() => {\n    if (route.name === 'TicketTypesScreen') {\n      refetch();\n    }\n  }, [refetch, route.name]);\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.ticketTypes?.map((ticketType) => (\n          <SwipeActions\n            rightAction={{\n              label: 'Delete',\n              backgroundColor: 'red',\n              onPress: async () => {\n                const { data: result } = await mutationDeleteTicketType({\n                  variables: { id: Number(ticketType.id) },\n                });\n\n                if (result?.archiveTicketType?.errors?.length) {\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: result?.archiveTicketType?.errors[0],\n                      variant: 'error',\n                    })\n                  );\n                }\n              },\n            }}\n          >\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setOpen(ticketType));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n              <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n              <DataTable.Cell numeric>\n                <Switch\n                  onValueChange={() => {\n                    mutationUpdateTicketType({\n                      variables: {\n                        id: Number(ticketType.id),\n                        allowManifestingSelf: !ticketType.allowManifestingSelf,\n                      },\n                    });\n                  }}\n                  value={!!ticketType.allowManifestingSelf}\n                />\n              </DataTable.Cell>\n            </DataTable.Row>\n          </SwipeActions>\n        ))}\n      </DataTable>\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: state.theme.colors.primary }]}\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.ticketType.setOpen(true))}\n        label=\"New ticket type\"\n      />\n      <TicketTypesDialog\n        open={form.open}\n        onClose={() => dispatch(actions.forms.ticketType.setOpen(false))}\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value, onChange } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value.lng === null || value.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","/* eslint-disable max-len */\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Button,\n  TextInput,\n  HelperText,\n  Card,\n  List,\n  Checkbox,\n  useTheme,\n  TouchableRipple,\n  Avatar,\n  Title,\n} from 'react-native-paper';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport LottieView from 'app/components/LottieView';\nimport { warningColor } from 'app/constants/Colors';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useNavigation } from '@react-navigation/core';\nimport ColorPicker from '../../input/colorpicker';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport imagePickDark from '../../../../assets/images/image-pick.json';\nimport imagePickLight from '../../../../assets/images/image-pick-light.json';\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useFederationsQuery();\n  const { currentUser } = useCurrentDropzone();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n      if (base64) {\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    navigation.setOptions({ title: state.fields.name.value });\n  }, [navigation, state.fields.name.value]);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={[styles.skeletonCard, { marginTop: 0, paddingHorizontal: 0 }]}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card\n          style={[\n            styles.card,\n            {\n              paddingLeft: 0,\n              paddingRight: 0,\n              paddingHorizontal: 0,\n              marginLeft: 0,\n              width: '100%',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          ]}\n        >\n          <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n            <TouchableRipple onPress={onPickImage} style={{ width: 185 }}>\n              {!state?.fields?.banner?.value ? (\n                <LottieView\n                  style={{ height: 175, width: 175 }}\n                  autoPlay\n                  loop={false}\n                  // eslint-disable-next-line global-require\n                  source={theme.dark ? imagePickLight : imagePickDark}\n                />\n              ) : (\n                <Avatar.Image\n                  size={175}\n                  source={{ uri: state?.fields?.banner?.value }}\n                  style={{\n                    borderWidth: StyleSheet.hairlineWidth,\n                    backgroundColor: theme.colors.primary,\n                  }}\n                />\n              )}\n            </TouchableRipple>\n            <Title>{state.fields.name.value}</Title>\n            <HelperText type=\"info\" style={{ marginTop: 16 }}>\n              Your banner is displayed on the weather board and on the dropzone selection screen\n            </HelperText>\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n            <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title={\n              state?.original?.requestPublication && !state.original?.isPublic\n                ? 'Awaiting review'\n                : 'Request Publication'\n            }\n            description={\n              state?.original?.requestPublication && !state.original?.isPublic\n                ? 'You will be contacted to verify the legitimacy of your dropzone before your dropzone is publicly available. This is to prevent illegitimate actors on the platform. Thank you for your patience and understanding.'\n                : 'Your dropzone will not be visible to other users until it is published. You can request a review to publish your dropzone, and may be contacted for verification on the email or phone number on your profile.'\n            }\n            descriptionNumberOfLines={10}\n            onPress={() => {\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'requestPublication',\n                  !state.fields.requestPublication?.value,\n                ])\n              );\n              if (state.fields.isPublic) {\n                dispatch(\n                  actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic?.value])\n                );\n              }\n            }}\n            left={(iconProps) => {\n              const extraProps = {\n                icon: undefined as IconSource | undefined,\n                color: undefined as string | undefined,\n              };\n\n              if (state.fields.requestPublication?.value) {\n                extraProps.icon = 'upload';\n              }\n\n              if (state.original?.requestPublication && state.fields.requestPublication?.value) {\n                extraProps.color = warningColor;\n                extraProps.icon = 'progress-upload';\n              }\n\n              if (state.original?.isPublic && state.fields?.isPublic.value) {\n                extraProps.icon = 'check';\n              }\n\n              if (extraProps.icon) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore This is ok\n                return <List.Icon {...iconProps} {...extraProps} />;\n              }\n              return <View style={{ width: 56, height: 56 }} />;\n            }}\n          />\n          {currentUser?.user?.moderationRole === 'administrator' &&\n          state?.original?.requestPublication ? (\n            <Card.Actions>\n              <Button\n                onPress={() => dispatch(actions.forms.dropzone.setField(['isPublic', false]))}\n              >\n                Decline\n              </Button>\n              <Button onPress={() => dispatch(actions.forms.dropzone.setField(['isPublic', true]))}>\n                Accept\n              </Button>\n            </Card.Actions>\n          ) : null}\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n    paddingHorizontal: 24,\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, ProgressBar } from 'react-native-paper';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { Dropzone, Permission } from 'app/api/schema.d';\nimport DropzoneForm from 'app/components/forms/dropzone/DropzoneForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{ key: string; name: string; params: { dropzone: Dropzone } }>();\n  const { dropzone } = route.params;\n  const navigation = useNavigation();\n\n  const { data, currentUser, loading } = useCurrentDropzone();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(data.dropzone));\n    }\n  }, [data?.dropzone, data?.dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n    onSuccess: (payload) => {\n      if (payload?.dropzone?.id) {\n        dispatch(\n          actions.global.setDropzone({\n            ...(globalState.currentDropzone || {}),\n            ...payload?.dropzone,\n          })\n        );\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Your settings have been saved`,\n            variant: 'success',\n          })\n        );\n        navigation.goBack();\n      }\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n      requestPublication,\n      isPublic,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federationId: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n          isPublic:\n            isPublic?.value !== undefined &&\n            currentUser?.user.moderationRole &&\n            currentUser?.user.moderationRole !== 'user'\n              ? !!isPublic?.value\n              : null,\n          requestPublication: !!requestPublication?.value,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        if (error instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    }\n    return null;\n  }, [\n    state.fields,\n    dispatch,\n    mutationUpdateDropzone,\n    dropzone?.id,\n    currentUser?.user.moderationRole,\n  ]);\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const isDirty: boolean = React.useMemo(() => {\n    return ['banner', 'isCreditSystemEnabled', 'name', 'primaryColor', 'lat', 'lng'].some(\n      (field) =>\n        state.original &&\n        field in state.original &&\n        state.original[field as keyof DropzoneEssentialsFragment] !==\n          state.fields[field as keyof typeof state.fields].value\n    );\n  }, [state]);\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <ScrollableScreen\n        style={{\n          width: '100%',\n          paddingTop: 0,\n          marginTop: 0,\n          backgroundColor: globalState.theme.colors.background,\n        }}\n        contentContainerStyle={styles.content}\n      >\n        <DropzoneForm loading={loading} />\n      </ScrollableScreen>\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={Boolean(canUpdateDropzone && isDirty)}\n        disabled={!isDirty || mutationUpdateDropzone.loading}\n        small\n        icon=\"check\"\n        onPress={onSave}\n        label=\"Save\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    marginTop: 0,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function DropzoneForm() {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Registration\"\n        error={state.fields.registration.error}\n        value={state.fields.registration?.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.plane.setField(['registration', newValue]))}\n      />\n      <TextInput\n        style={styles.field}\n        label=\"Min slots\"\n        error={state.fields.minSlots.error}\n        value={state.fields.minSlots.value?.toString()}\n        keyboardType=\"number-pad\"\n        onChange={(newValue) =>\n          dispatch(actions.forms.plane.setField(['minSlots', Number(newValue)]))\n        }\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Max slots\"\n        error={state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Maximum amount of jumpers who can be manifested on one load\"\n        onChange={(newValue) =>\n          dispatch(actions.forms.plane.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    width: '100%',\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { useCreatePlaneMutation, useUpdatePlaneMutation } from 'app/api/reflection';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\n\nimport PlaneForm from '../forms/plane/PlaneForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\ninterface IPlaneDialogProps {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function CreatePlaneScreen(props: IPlaneDialogProps) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  const [mutationCreatePlane, create] = useCreatePlaneMutation();\n  const [mutationUpdatePlane, update] = useUpdatePlaneMutation();\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.registration.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['registration', 'Registration is too short']));\n    }\n\n    if (!state.fields.maxSlots.value) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['maxSlots', 'Max slots must be specified']));\n    }\n\n    return !hasError;\n  }, [\n    dispatch,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.registration.value,\n  ]);\n\n  const onUpdatePlane = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationUpdatePlane({\n          variables: {\n            id: Number(state.original?.id),\n            name: name.value || '',\n            registration: registration.value || '',\n            minSlots: minSlots.value || 0,\n            maxSlots: maxSlots.value || 0,\n          },\n        });\n\n        const payload = result?.data?.updatePlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    }\n  }, [dispatch, mutationUpdatePlane, onClose, state.fields, state.original?.id, validate]);\n\n  const onCreate = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationCreatePlane({\n          variables: {\n            dropzoneId: Number(currentDropzone?.dropzone?.id),\n            name: name.value || '',\n            registration: registration.value || '',\n            minSlots: minSlots.value || 0,\n            maxSlots: maxSlots.value || 0,\n          },\n        });\n\n        const payload = result?.data?.createPlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    }\n  }, [\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    mutationCreatePlane,\n    onClose,\n    state.fields,\n    validate,\n  ]);\n\n  const onSave = React.useMemo(() => {\n    if (state.original?.id) {\n      return onUpdatePlane;\n    }\n    return onCreate;\n  }, [onCreate, onUpdatePlane, state.original?.id]);\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n  const onDialogClose = React.useCallback(() => {\n    onClose();\n    dispatch(actions.forms.plane.reset());\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSave}\n      loading={create.loading || update.loading}\n      onClose={onDialogClose}\n    >\n      <PlaneForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { useArchivePlaneMutation, usePlanesQuery } from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PlaneDialog from 'app/components/dialogs/Plane';\nimport useRestriction from 'app/hooks/useRestriction';\nimport SwipeActions from 'app/components/layout/SwipeActions';\n\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.forms.plane);\n  const { data, loading, refetch } = usePlanesQuery({\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n    },\n  });\n\n  const [deletePlane] = useArchivePlaneMutation();\n  const dispatch = useAppDispatch();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n  const theme = useTheme();\n  return (\n    <>\n      <ScrollableScreen\n        contentContainerStyle={{ backgroundColor: theme.colors.surface }}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n      >\n        <ProgressBar visible={loading} color={global.theme.colors.primary} />\n\n        {data?.planes?.length ? null : (\n          <NoResults\n            title=\"No planes?\"\n            subtitle=\"You need to have at least one plane to manifest loads\"\n          />\n        )}\n\n        {!data?.planes?.length ? null : (\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Name</DataTable.Title>\n              <DataTable.Title numeric>Registration</DataTable.Title>\n              <DataTable.Title numeric>Slots</DataTable.Title>\n            </DataTable.Header>\n            {data?.planes?.map((plane) => (\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: async () => {\n                    const { data: result } = await deletePlane({\n                      variables: { id: Number(plane.id) },\n                    });\n\n                    if (result?.deletePlane?.errors?.length) {\n                      dispatch(\n                        actions.notifications.showSnackbar({\n                          message: result.deletePlane.errors[0],\n                          variant: 'error',\n                        })\n                      );\n                    }\n                  },\n                }}\n              >\n                <DataTable.Row\n                  pointerEvents=\"none\"\n                  onPress={() => {\n                    dispatch(actions.forms.plane.setOpen(plane));\n                  }}\n                >\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            ))}\n          </DataTable>\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: global.theme.colors.primary }]}\n          visible={canCreatePlane}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.plane.setOpen(true))}\n          label=\"New plane\"\n        />\n      </ScrollableScreen>\n      <PlaneDialog open={state.open} onClose={() => dispatch(actions.forms.plane.setOpen(false))} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n  useTheme,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"minus-circle\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n            backgroundColor: theme.colors.primary,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport {\n  useRigInspectionTemplateQuery,\n  useUpdateRigInspectionTemplateMutation,\n} from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from 'app/components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { FormTemplate, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useWindowDimensions, View } from 'react-native';\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const { data } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useUpdateRigInspectionTemplateMutation();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(\n        actions.forms.rigInspectionTemplate.setOpen(\n          data.dropzone.rigInspectionTemplate as FormTemplate\n        )\n      );\n    }\n  }, [data?.dropzone?.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone?.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Template saved',\n          variant: 'success',\n        })\n      );\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone?.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    dispatch,\n  ]);\n\n  const { width } = useWindowDimensions();\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <ScrollableScreen style={{ marginTop: 16, width: width > 550 ? 550 : '100%' }}>\n        <Card style={{ width: '100%' }}>\n          <Card.Title title=\"Rig Inspection Form Template\" />\n\n          <Card.Content>\n            <RigInspectionTemplateForm />\n          </Card.Content>\n        </Card>\n        <Button\n          disabled={!canEdit}\n          mode=\"contained\"\n          loading={mutation.loading}\n          onPress={() => updateForm()}\n          style={{ width: '100%', marginTop: 16, borderRadius: 20 }}\n        >\n          Save template\n        </Button>\n      </ScrollableScreen>\n    </View>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport {\n  AvailableRigsDocument,\n  DropzoneUsersDetailedDocument,\n  useDropzoneRigsQuery,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport useRestriction from 'app/hooks/useRestriction';\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const { data, loading, refetch } = useDropzoneRigsQuery({\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useUpdateRigMutation();\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                    refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    dispatch(\n                      actions.notifications.showSnackbar({\n                        message: result?.updateRig.errors[0],\n                        variant: 'error',\n                      })\n                    );\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, List, useTheme } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useRolesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const theme = useTheme();\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useRolesQuery({\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const isFocused = useIsFocused();\n\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({ title: 'Permissions' });\n      refetch();\n    }\n  }, [isFocused, navigation, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <View style={{ height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ maxWidth: 550 }}>\n        <SkeletonContent\n          isLoading\n          containerStyle={{\n            width: '100%',\n            flex: 1,\n            flexGrow: 1,\n            paddingHorizontal: 16,\n          }}\n          layout={[\n            {\n              key: 'first',\n              height: 175,\n              marginTop: 70,\n              marginBottom: 35,\n              width: '100%',\n            },\n            { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n          ]}\n        />\n      </View>\n    </View>\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Manifesting\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDoubleSlot\"\n                    description=\"Manifest on more than one load at a time\"\n                    title=\"Double Manifest\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket types\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket addons\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { Query } from 'app/api/schema.d';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: Int!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            dropzoneUser {\n              id\n              license {\n                id\n                name\n              }\n            }\n            user {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          timestamp={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CreditsSheet from 'app/components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { useDropzoneTransactionsLazyQuery, useQueryDropzoneUserProfile } from 'app/api/reflection';\nimport OrderCard from '../../../../components/orders/OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { data, loading, refetch } = useQueryDropzoneUserProfile({\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n      dropzoneUserId: Number(route?.params?.userId) || Number(currentUser?.id),\n    },\n  });\n\n  const dropzoneUser = React.useMemo(\n    () => data?.dropzone?.dropzoneUser,\n    [data?.dropzone?.dropzoneUser]\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({ variables: { dropzoneId: state.currentDropzoneId } });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        keyExtractor={(item) => `transaction-${item?.node?.id}`}\n        renderItem={({ item }) =>\n          !item?.node ? null : (\n            <OrderCard\n              onPress={() =>\n                !item?.node\n                  ? null\n                  : navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Users',\n                        params: {\n                          screen: 'OrderReceiptScreen',\n                          params: {\n                            orderId: item?.node?.id,\n                            userId: item?.node?.buyer?.id,\n                          },\n                        },\n                      },\n                    })\n              }\n              order={item?.node}\n              showAvatar\n              {...{ dropzoneUser }}\n            />\n          )\n        }\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { ExtraInput, CreateExtraPayload } from '../schema';\n\nconst MUTATION_CREATE_EXTRA = gql`\n  mutation CreateExtra($name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n    createExtra(\n      input: {\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<ExtraInput, CreateExtraPayload>(MUTATION_CREATE_EXTRA, {\n  getPayload: (result) => result.createExtra,\n  fieldErrorMap: {\n    ticketTypeIds: 'ticketTypes',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price'), isNumeric('Price must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { ExtraInput, UpdateExtraPayload } from '../schema';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & ExtraInput, UpdateExtraPayload>(\n  MUTATION_UPDATE_EXTRA,\n  {\n    getPayload: (result) => result.updateExtra,\n    fieldErrorMap: {\n      id: 'original',\n      ticketTypeIds: 'ticketTypes',\n    },\n  }\n);\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Checkbox, List } from 'react-native-paper';\nimport { useTicketTypesQuery } from 'app/api/reflection';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function ExtraForm() {\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const { data } = useTicketTypesQuery({\n    variables: {\n      dropzone: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.extra.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Price\"\n        error={state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChange={(newValue) => dispatch(actions.forms.extra.setField(['cost', Number(newValue)]))}\n      />\n\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        {data?.ticketTypes?.map((ticket) => (\n          <Checkbox.Item\n            label={ticket.name || ''}\n            status={\n              state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.extra.setField([\n                  'ticketTypes',\n                  state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                    ? state.fields.ticketTypes.value?.filter(({ id }) => id !== ticket.id)\n                    : [...(state.fields.ticketTypes.value || []), ticket],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport useMutationCreateExtra from '../../api/hooks/useMutationCreateExtra';\nimport useMutationUpdateExtra from '../../api/hooks/useMutationUpdateExtra';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport ExtraForm from '../forms/extra/ExtraForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { ExtraFields } from '../forms/extra/slice';\n\ninterface ITicketTypeExtraDialog {\n  open: boolean;\n  onClose(): void;\n}\nexport default function TicketTypeExtraDialog(props: ITicketTypeExtraDialog) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const createExtra = useMutationCreateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateExtra = useMutationUpdateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    if (state?.original?.id) {\n      updateExtra.mutate({\n        id: Number(state.original.id),\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    } else {\n      createExtra.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    }\n  }, [\n    createExtra,\n    currentDropzone?.dropzone?.id,\n    state.fields.cost.value,\n    state.fields.name.value,\n    state.fields.ticketTypes.value,\n    state.original?.id,\n    updateExtra,\n  ]);\n\n  const snapPoints = React.useMemo(() => [300, 500], []);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket addon' : 'New ticket addon'}\n      open={open}\n      onClose={onClose}\n      loading={createExtra.loading || updateExtra.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      snapPoints={snapPoints}\n    >\n      <ExtraForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport TicketTypeExtraDialog from 'app/components/dialogs/TicketTypeExtra';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport useRestriction from 'app/hooks/useRestriction';\n\nexport default function ExtrasScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const globalState = useAppSelector((root) => root.global);\n  const formState = useAppSelector((root) => root.forms.extra);\n  const { data, loading } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.primary} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.extras?.map((extra) => (\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.extra.setOpen(extra));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.extra.setOpen(true))}\n          label=\"New ticket addon\"\n        />\n      </View>\n      <TicketTypeExtraDialog\n        open={formState.open}\n        onClose={() => dispatch(actions.forms.extra.setOpen(false))}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","/* eslint-disable max-len */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport AppBar from 'app/components/appbar/AppBar';\nimport SettingsMenuScreen from './settings_menu/SettingsMenuScreen';\nimport TicketTypeSettingsScreen from './ticket_types/TicketTypesScreen';\nimport DropzoneSettingsScreen from './dropzone_settings/DropzoneSettingsScreen';\nimport PlanesScreen from './aircrafts/AircraftsScreen';\nimport RigInspectionTemplateScreen from './rig_inspection_template/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from './rigs/DropzoneRigsScreen';\nimport DropzonePermissionScreen from './permissions/PermissionsScreen';\nimport DropzoneMasterLogScreen from './master_log/MasterLogScreen';\nimport DropzoneTransactionsScreen from './transactions/DropzoneTransactionsScreen';\nimport ExtrasScreen from './extras/ExtrasScreen';\n\nexport type ConfigurationRoutes = {\n  DropzoneSettingsScreen: { dropzone: DropzoneEssentialsFragment };\n  SettingsMenuScreen: undefined;\n  TicketTypesScreen: undefined;\n  AircraftsScreen: undefined;\n  AircraftScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  TransactionsScreen: undefined;\n  PermissionScreen: undefined;\n  MasterLogScreen: undefined;\n};\n\nconst Configuration = createStackNavigator<ConfigurationRoutes>();\n\nexport function useConfigurationNavigation() {\n  return useNavigation<NavigationProp<ConfigurationRoutes>>();\n}\nexport default function SettingsTab() {\n  return (\n    <Configuration.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Configuration.Screen\n        name=\"SettingsMenuScreen\"\n        component={SettingsMenuScreen}\n        options={{ title: 'Settings' }}\n      />\n      <Configuration.Screen\n        name=\"DropzoneSettingsScreen\"\n        component={DropzoneSettingsScreen}\n        options={{ title: 'Basic settings' }}\n      />\n      <Configuration.Screen\n        name=\"AircraftsScreen\"\n        component={PlanesScreen}\n        options={{ title: 'Planes' }}\n      />\n      <Configuration.Screen\n        name=\"TicketTypesScreen\"\n        component={TicketTypeSettingsScreen}\n        options={{ title: 'Ticket types' }}\n      />\n      <Configuration.Screen\n        name=\"ExtrasScreen\"\n        component={ExtrasScreen}\n        options={{ title: 'Ticket add-ons' }}\n      />\n      <Configuration.Screen\n        name=\"RigInspectionTemplateScreen\"\n        component={RigInspectionTemplateScreen}\n        options={{ title: 'Rig Inspection Form' }}\n      />\n      <Configuration.Screen\n        name=\"DropzoneRigsScreen\"\n        component={DropzoneRigsScreen}\n        options={{ title: 'Dropzone rigs' }}\n      />\n      <Configuration.Screen\n        name=\"TransactionsScreen\"\n        component={DropzoneTransactionsScreen}\n        options={{ title: 'Transactions' }}\n      />\n      <Configuration.Screen\n        name=\"PermissionScreen\"\n        component={DropzonePermissionScreen}\n        options={{ title: 'Permissions' }}\n      />\n      <Configuration.Screen\n        name=\"MasterLogScreen\"\n        component={DropzoneMasterLogScreen}\n        options={{ title: 'Master log' }}\n      />\n    </Configuration.Navigator>\n  );\n}\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport LoadScreen, { LoadScreenRoute } from './load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from './weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from './weather_conditions/JumpRunScreen';\nimport WindScreen from './weather_conditions/WindScreen';\n\nimport ManifestScreen from './manifest/ManifestScreen';\n\nimport User, { UserRoutes } from '../user/routes';\nimport Configuration, { ConfigurationRoutes } from '../configuration/routes';\n\nexport type DropzoneRoutes = {\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  ManifestScreen: undefined;\n  JumpRunScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n  Configuration: NavigatorScreenParams<ConfigurationRoutes>;\n} & LoadScreenRoute;\n\nconst Manifest = createStackNavigator<DropzoneRoutes>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Manifest.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Manifest.Screen\n        name=\"ManifestScreen\"\n        component={ManifestScreen}\n        options={{ title: 'Manifest' }}\n      />\n      <Manifest.Screen\n        name=\"WeatherConditionsScreen\"\n        component={WeatherConditionsScreen}\n        options={{ headerShown: false }}\n      />\n      <Manifest.Screen\n        name=\"WindScreen\"\n        component={WindScreen}\n        options={{ title: 'Winds Aloft' }}\n      />\n      <Manifest.Screen\n        name=\"JumpRunScreen\"\n        component={JumpRunScreen}\n        options={{ title: 'Jump Run' }}\n      />\n      <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n\n      <Manifest.Screen\n        name=\"User\"\n        component={User}\n        options={{ headerShown: false, presentation: 'modal' }}\n      />\n\n      <Manifest.Screen\n        name=\"Configuration\"\n        component={Configuration}\n        options={{ headerShown: false }}\n      />\n    </Manifest.Navigator>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONE_USER_NOTIFICATIONS = gql`\n  query QueryNotifications($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      currentUser {\n        id\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n              sentBy {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n\n              resource {\n                ... on Load {\n                  id\n                  loadNumber\n                  dispatchAt\n                  state\n                }\n                ... on Transaction {\n                  id\n                  amount\n                  message\n                  status\n                }\n\n                ... on Slot {\n                  id\n                  load {\n                    id\n                    loadNumber\n                    dispatchAt\n                    state\n                  }\n                }\n\n                ... on Rig {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                  rigInspections(dropzoneId: $dropzoneId) {\n                    id\n                    createdAt\n                    inspectedBy {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                  }\n                }\n\n                ... on RigInspection {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useNotifications() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const query = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_NOTIFICATIONS, {\n    variables: {\n      dropzoneId,\n    },\n    pollInterval: 30000,\n  });\n\n  return {\n    ...query,\n    notifications: query?.data?.dropzone?.currentUser.notifications,\n  };\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: number;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(timestamp * 1000, { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification?.resource?.id },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport { Load, Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification.resource.id },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport NotificationCard from './NotificationCard';\nimport { useNotificationNavigation } from '../../useNotificationNavigation';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNotificationNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('User', {\n              screen: 'RigInspectionScreen',\n              params: {\n                rigId: (notification.resource as RigEssentialsFragment).id,\n                dropzoneUserId: (notification.resource as RigEssentialsFragment).user?.id as string,\n              },\n            })\n          : navigation.navigate('User', {\n              screen: 'ProfileScreen',\n              params: {\n                userId: (notification.resource as RigEssentialsFragment).user?.id as string,\n              },\n            })\n      }\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { NotificationRoutes } from './routes';\n\nexport function useNotificationNavigation() {\n  return useNavigation<NavigationProp<NotificationRoutes>>();\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { NotificationType } from 'app/api/schema.d';\nimport { useAppSelector } from '../../../../state';\nimport useNotifications from '../../../../api/hooks/useNotifications';\nimport NoResults from '../../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\n/* const MUTATION_MARK_AS_SEEN = gql`\n  mutation MarkAsSeen($id: Int) {\n    updateNotification(input: { id: $id, attributes: { isSeen: true } }) {\n      notification {\n        id\n        isSeen\n        message\n        notificationType\n        receivedBy {\n          notifications {\n            edges {\n              node {\n                id\n                message\n                isSeen\n                notificationType\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n*/\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { notifications, loading, refetch } = useNotifications();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n      {notifications?.edges?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n        </View>\n      )}\n      <FlatList\n        data={notifications?.edges}\n        numColumns={1}\n        keyExtractor={(edge) => `notification-${edge?.node?.id}`}\n        style={{\n          flex: 1,\n        }}\n        renderItem={({ item: edge }) => {\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return <BoardingCallNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.UserManifested:\n              return <ManifestedCard key={edge.node.id} notification={edge.node} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return <RigInspectionNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return <PermissionNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.PublicationRequested:\n              return <PublicationRequestNotification key={edge.node.id} notification={edge.node} />;\n            default:\n              return null;\n          }\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from 'app/components/appbar/AppBar';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport NotificationsScreen from './notifications/NotificationsScreen';\nimport Users, { UserRoutes } from '../user/routes';\n\nexport type NotificationRoutes = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Notification = createStackNavigator<NotificationRoutes>();\n\nexport default function Notifications() {\n  return (\n    <Notification.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} hideWarnings />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"NotificationsScreen\"\n    >\n      <Notification.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n\n      <Notification.Screen name=\"User\" component={Users} />\n    </Notification.Navigator>\n  );\n}\n","import { BottomTabBarProps, createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Appearance, Platform, StyleSheet, Text } from 'react-native';\nimport type { TabsConfig, BubbleTabBarItemConfig } from '@gorhom/animated-tabbar';\nimport Animated from 'react-native-reanimated';\n\nimport { useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport AnimatedTabBar from 'app/components/bottom_tabs/AnimatedTabBar';\nimport { useTheme } from 'react-native-paper';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport ManifestTab, { DropzoneRoutes } from './dropzone/routes';\nimport UsersTab, { UserRoutes } from './user/routes';\nimport NotificationsTab, { NotificationRoutes } from './notifications/routes';\n\nexport type AuthenticatedRoutes = {\n  Manifest: NavigatorScreenParams<DropzoneRoutes>;\n  Users: NavigatorScreenParams<UserRoutes>;\n  Notifications: NavigatorScreenParams<NotificationRoutes>;\n};\n\nconst BottomTab = createBottomTabNavigator<AuthenticatedRoutes>();\nconst AnimatedIcon = Animated.createAnimatedComponent(MaterialCommunityIcons);\n\nexport default function AuthenticatedTabBar() {\n  const { palette } = useAppSelector((root) => root.global);\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  const canViewUsers = useRestriction(Permission.ReadUser);\n  const theme = useTheme();\n\n  const tabConfig = React.useMemo(\n    () => ({\n      labelStyle: {\n        color: theme.dark ? theme.colors.onSurface : palette.surface,\n      },\n      icon: {\n        activeColor: palette.surface,\n        inactiveColor: palette.primary.dark,\n      },\n      background: {\n        // activeColor: palette.primary.main,\n        activeColor: palette.placeholder,\n        inactiveColor: theme.colors.surface,\n      },\n    }),\n    [\n      palette.placeholder,\n      palette.primary.dark,\n      palette.surface,\n      theme.colors.onSurface,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n  const tabs: TabsConfig<BubbleTabBarItemConfig> = React.useMemo(\n    () => ({\n      Manifest: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"airplane\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Notifications: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"bell-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Users: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"account-group-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n    }),\n    [tabConfig]\n  );\n\n  const tabBarProps = React.useMemo(\n    () =>\n      Platform.select({\n        web: {},\n        ios: {\n          tabBar: (props: BottomTabBarProps) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              style={{\n                borderTopColor: 'gray',\n                borderTopWidth: StyleSheet.hairlineWidth,\n                backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface,\n              }}\n              {...props}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n        android: {\n          tabBar: (props: BottomTabBarProps) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n      }),\n    [tabs, theme.colors.background, theme.colors.surface, theme.dark]\n  );\n\n  const screenOptions = React.useMemo(\n    () => ({\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n      tabBarActiveBackgroundColor: theme.colors.surface,\n      tabBarInactiveTintColor: '#CCCCCC',\n      tabBarShowLabel: Platform.OS !== 'web',\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderTopColor: '#CCCCCC',\n      },\n    }),\n    [\n      theme.colors.backdrop,\n      theme.colors.background,\n      theme.colors.primary,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n\n  return (\n    <BottomTab.Navigator initialRouteName=\"Manifest\" {...tabBarProps} {...{ screenOptions }}>\n      <BottomTab.Screen\n        name=\"Manifest\"\n        component={ManifestTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Manifest\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"airplane\"\n              {...{ size }}\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: false,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Notifications\"\n        component={NotificationsTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Notifications\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"bell\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: true,\n        }}\n      />\n      {canViewUsers && (\n        <BottomTab.Screen\n          name=\"Users\"\n          component={UsersTab}\n          options={{\n            tabBarLabel: ({ focused, color }) =>\n              !focused ? null : (\n                <Text\n                  style={[\n                    styles.label,\n                    { color: isDarkMode && focused ? theme.colors.primary : color },\n                  ]}\n                >\n                  Users\n                </Text>\n              ),\n            tabBarIcon: ({ size, color, focused }) => (\n              <MaterialCommunityIcons\n                {...{ size, color }}\n                name=\"account-group\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                color={isDarkMode && focused ? theme.colors.primary : color}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n      )}\n    </BottomTab.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { NavigatorScreenParams } from '@react-navigation/native';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport DrawerMenu from 'app/components/drawer/Drawer';\nimport Authenticated, { AuthenticatedRoutes } from '../authenticated/routes';\n\nexport type LeftDrawerRoutes = {\n  LeftDrawer: NavigatorScreenParams<AuthenticatedRoutes>;\n};\n\nconst Drawer = createDrawerNavigator<LeftDrawerRoutes>();\n\nexport default function DrawerNavigator() {\n  const drawerContent = React.useCallback(() => <DrawerMenu />, []);\n  return (\n    <Drawer.Navigator\n      {...{ drawerContent }}\n      screenOptions={{ drawerType: 'back', headerShown: false }}\n    >\n      <Drawer.Screen name=\"LeftDrawer\" component={Authenticated} />\n    </Drawer.Navigator>\n  );\n}\n","import { LinkingOptions, NavigatorScreenParams } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport NotFoundScreen from './NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport Limbo, { LimboRoutes } from './limbo/routes';\nimport Unauthenticated, { UnauthenticatedRoutes } from './unauthenticated/routes';\nimport Wizards, { WizardRoutes } from './wizards/routes';\nimport LeftDrawer, { LeftDrawerRoutes } from './drawers/UserDrawer';\n\nexport const options: LinkingOptions<ReactNavigation.RootParamList> = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      Authenticated: {\n        screens: {\n          LeftDrawer: {\n            screens: {\n              Manifest: {\n                screens: {\n                  ManifestScreen: '/dropzone/manifest',\n                  Configuration: {\n                    screens: {\n                      AircraftScreen: '/dropzone/configuration/aircraft/:planeId',\n                      TicketTypesScreen: '/dropzone/configuration/ticket-types',\n                      DropzoneRigsScreen: '/dropzone/configuration/rigs',\n                      ExtrasScreen: '/dropzone/ticket-types/extra',\n                      MasterLogScreen: '/dropzone/master-log',\n                      SettingsMenuScreen: '/dropzone/configuration',\n                      AircraftsScreen: '/dropzone/configuration/aircrafts',\n                      DropzoneSettingsScreen: '/dropzone/configuration/basic',\n                      PermissionScreen: '/dropzone/configuration/permissions',\n                      RigInspectionTemplateScreen: '/dropzone/configuration/rig-inspection',\n                      TransactionsScreen: '/dropzone/transactions',\n                    },\n                  },\n                  JumpRunScreen: '/dropzone/weather/jumprun',\n                  WeatherConditionsScreen: '/dropzone/weather',\n                  LoadScreen: '/dropzone/load/:loadId',\n                  WindScreen: '/dropzone/weather/winds',\n                },\n              },\n              Users: {\n                screens: {\n                  UserListScreen: '/users',\n                  ProfileScreen: '/user/:userId',\n                  EquipmentScreen: '/user/:userId/equipment',\n                  OrdersScreen: '/user/:userId/transactions',\n                  OrderReceiptScreen: '/user/:userId/transactions/:orderId/receipt',\n                  RigInspectionScreen: '/user/:dropzoneUserId/rig-inspection/:rig',\n                },\n              },\n              Notifications: {\n                screens: {\n                  NotificationsScreen: '/notifications',\n                },\n              },\n            },\n          },\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzoneSelectScreen: '/select-dropzone',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n          SignUpWizard: '/user-setup',\n        },\n      },\n      Wizards: {\n        screens: {\n          ConfirmUserScreen: '/confirm',\n          RecoverPasswordScreen: '/recover-password',\n          ChangePasswordScreen: '/change-password',\n          DropzoneWizardScreen: '/setup',\n          User: {\n            screens: {\n              UserListScreen: '/modal/users',\n              ProfileScreen: '/modal/user/:userId',\n              EquipmentScreen: '/modal/user/:userId/equipment',\n              OrdersScreen: '/modal/user/:userId/transactions',\n              OrderReceiptScreen: '/modal/user/:userId/transactions/:orderId/receipt',\n              RigInspectionScreen: '/modal/user/:dropzoneUserId/rig-inspection/:rig',\n            },\n          },\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport type Routes = {\n  Authenticated: NavigatorScreenParams<LeftDrawerRoutes>;\n  Unauthenticated: NavigatorScreenParams<UnauthenticatedRoutes>;\n  Limbo: NavigatorScreenParams<LimboRoutes>;\n  Wizards: NavigatorScreenParams<WizardRoutes>;\n  NotFound: undefined;\n};\n\nconst Stack = createStackNavigator<Routes>();\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface RootParamList extends Routes {}\n  }\n}\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\" component={LeftDrawer} />\n        ) : (\n          <Stack.Screen name=\"Limbo\" component={Limbo} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={Unauthenticated} />\n      )}\n      <Stack.Screen name=\"Wizards\" component={Wizards} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { ThemeProvider } from '@mui/material';\nimport { Theme, createTheme } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Provider as MaterialProvider } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from './state/store';\n\nfunction Content(props: { children: React.ReactNode }) {\n  const { children } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const muiTheme: Theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: state.palette.primary,\n          secondary: state.palette.accent,\n          background: {\n            default: state.palette.background,\n            paper: state.palette.surface,\n          },\n          mode: state.theme.dark ? 'dark' : 'light',\n          common: {\n            white: state.palette.background,\n            black: state.palette.onSurface,\n          },\n        },\n      }),\n    [\n      state.palette.accent,\n      state.palette.background,\n      state.palette.onSurface,\n      state.palette.primary,\n      state.palette.surface,\n      state.theme.dark,\n    ]\n  );\n\n  window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {\n    dispatch(actions.global.setAppearance(e.matches ? 'dark' : 'light'));\n  });\n  return (\n    <MaterialProvider theme={state.theme as ReactNativePaper.Theme}>\n      <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\n    </MaterialProvider>\n  );\n}\nexport default Content;\n","import { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { Appearance, Linking, Platform, View } from 'react-native';\nimport { NavigationContainer, NavigationState, getPathFromState } from '@react-navigation/native';\nimport { registerRootComponent } from 'expo';\nimport * as Sentry from 'sentry-expo';\nimport URI from 'urijs';\nimport { PortalProvider } from '@gorhom/portal';\n\nimport Geocoder from 'react-native-geocoding';\nimport { setGoogleApiKey } from 'expo-location';\n/* eslint-disable import/no-unresolved */\nimport './PaperDatesPolyfill';\nimport Wrapper from './EntrypointWrapper';\n\nimport AppUpdate from './components/app_update/AppUpdate';\n\nimport Apollo from './api/Apollo';\nimport { store, persistor, useAppSelector, useAppDispatch } from './state/store';\nimport ImageViewer from './components/dialogs/ImageViewer/ImageViewer';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport NotificationArea from './components/notifications/Notifications';\nimport RootNavigator, { options as LinkingConfiguration } from './screens/routes';\nimport { actions } from './state';\nimport ThemeProvider from './ThemeProvider';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  enableInExpoDevelopment: true,\n  debug: true,\n});\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nconst googleMapsApiKey = Platform.select({\n  ios: Constants.manifest?.extra?.googleMapsIos,\n  android: Constants.manifest?.extra?.googleMapsAndroid,\n  web: Constants.manifest?.extra?.googleMapsWeb,\n});\n\nGeocoder.init(googleMapsApiKey);\nsetGoogleApiKey(googleMapsApiKey);\n\nfunction Content() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = (link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  };\n\n  const listener = React.useRef<ReturnType<typeof Appearance.addChangeListener>>(\n    Appearance.addChangeListener(({ colorScheme }) => {\n      if (colorScheme) {\n        dispatch(actions.global.setAppearance(colorScheme));\n      }\n    })\n  );\n\n  /// Listen to changes in Appearance and set dark mode theme in state\n  React.useEffect(() => {\n    const handler = listener?.current;\n    return () => handler?.remove?.();\n  }, [dispatch, state.isDarkMode, state.theme.colors.background]);\n\n  React.useEffect(() => {\n    if (Platform.OS === 'web') {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: notification.request.content.body,\n            variant: 'info',\n          })\n        );\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      // console.log({ notification: response });\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch]);\n\n  const onRouteChange = React.useCallback(\n    (s?: NavigationState) => {\n      if (s) {\n        const [path] = getPathFromState(s).split(/\\?/);\n        const [screenName] = path.split(/\\//).reverse();\n        if (state.currentRouteName !== screenName) {\n          dispatch(actions.global.setCurrentRouteName(screenName));\n        }\n      }\n    },\n    [dispatch, state.currentRouteName]\n  );\n\n  return (\n    <AppUpdate>\n      <React.Suspense\n        fallback={\n          <View style={{ flex: 1, flexGrow: 1 }}>\n            <ProgressBar indeterminate color={state?.theme?.colors?.primary} visible />\n          </View>\n        }\n      >\n        <Apollo>\n          <ThemeProvider>\n            <GestureHandlerRootView style={{ flex: 1 }}>\n              <PortalProvider>\n                <SafeAreaProvider>\n                  <ImageViewer />\n                  <NavigationContainer\n                    onStateChange={onRouteChange}\n                    linking={LinkingConfiguration}\n                    theme={state.theme as unknown as never}\n                  >\n                    <Wrapper>\n                      <RootNavigator />\n                    </Wrapper>\n                  </NavigationContainer>\n\n                  <StatusBar />\n                  <NotificationArea />\n                </SafeAreaProvider>\n              </PortalProvider>\n            </GestureHandlerRootView>\n          </ThemeProvider>\n        </Apollo>\n      </React.Suspense>\n    </AppUpdate>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default registerRootComponent(App);\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        // console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport Constants from 'expo-constants';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { useIsFocused } from '@react-navigation/core';\n\n// Used if user location cant be used and we have no other fallback\n// This points to Brisbane:\nconst DEFAULT_COORDS = { lat: -27.4705, lng: 153.026 };\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const {\n    width,\n    height,\n    position,\n    children,\n    center,\n    coords: _coords,\n    shape,\n    interactive,\n    onDragEnd,\n  } = props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: Constants.manifest?.extra?.googleMapsWeb,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n  const coords = _coords || DEFAULT_COORDS;\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        // const location = await Location.getCurrentPositionAsync({});\n        // const lat = coords?.lat || location.coords.latitude;\n        // const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        console.log({ error });\n      } finally {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds(coords);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n        map.current?.panTo?.(coords);\n      }\n    },\n    [coords]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  const isFocused = useIsFocused();\n\n  return !isLoaded || !isFocused ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        ref={map}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        mapTypeId={google.maps.MapTypeId.HYBRID}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          center: coords,\n          mapTypeControl: false,\n          mapTypeId: google.maps.MapTypeId.HYBRID,\n          zoomControl: false,\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo-black.36bb8461.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.97bdff33.png\";","module.exports = __webpack_public_path__ + \"static/media/webb-dark.cc0e3dfa.png\";","module.exports = __webpack_public_path__ + \"static/media/pattern.9f57eead.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from 'app/utils/calculateCoordinatesByAngle';\nimport Map from 'app/components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.x,\n    y: origin.y,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: rootLayout.height / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons name=\"airplane\" size={20} color=\"#ffffff\" />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}