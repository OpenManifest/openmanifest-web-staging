{"version":3,"sources":["app/components/map/Map.web.tsx","app/utils/calculateLatLngDelta.ts","app/utils/calculateCoordinatesByAngle.ts","assets/images/logo.png","assets/images/weather.png","assets/images/night.png","app/screens/authenticated/manifest/Weather/JumpRun.tsx","assets/fonts/SpaceMono-Regular.ttf","app/PaperDatesPolyfill.ts","app/EntrypointWrapper.web.tsx","app/api/schema.d.ts","app/components/LottieView.web.tsx","app/components/forms/credits/slice.tsx","app/components/forms/dropzone/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/extra/slice.tsx","app/components/forms/load/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/plane/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/ticket_type/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/dialogs/UserWizard/slice.tsx","app/screens/authenticated/dropzone_setup/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/users/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/state/global.ts","app/components/notifications/slice.ts","app/state/store.ts","app/components/app_update/AppUpdate.tsx","app/api/Apollo.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/constants/Colors.ts","app/hooks/usePalette.ts","app/components/notifications/Notifications.tsx","app/navigation/Routes.ts","app/screens/NotFoundScreen.tsx","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateUser.ts","app/api/hooks/useCurrentDropzone.ts","app/api/reflection.tsx","app/hooks/useRestriction.ts","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/input/number_input/NumberField.tsx","app/api/createQuery.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/components/forms/manifest/ManifestForm.tsx","app/components/dialogs/ManifestUser/ManifestUser.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/components/dialogs/ManifestGroup/UserListSelect.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/load/SlotCard.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/screens/authenticated/load/ActionButton.tsx","app/screens/authenticated/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/load/Header.tsx","app/screens/authenticated/load/InfoGrid.tsx","app/api/hooks/useQueryLoad.ts","app/api/hooks/useMutationDeleteSlot.ts","app/screens/authenticated/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/layout/ScrollableScreen.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/weather_conditions/WindScreen.tsx","app/navigation/SetupWarning.tsx","app/navigation/AppBar.tsx","app/screens/authenticated/manifest/GetStarted.tsx","app/screens/authenticated/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/manifest/LoadCard/Small/Card.tsx","app/components/layout/SwipeActions.tsx","app/screens/authenticated/manifest/LoadCard/Large/Card.tsx","app/api/hooks/useMutationCreateLoad.ts","app/components/notifications/index.ts","app/api/hooks/useQueryDropzoneUsers.ts","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/forms/load/LoadForm.tsx","app/components/layout/DialogOrSheet.web.tsx","app/components/dialogs/Load.tsx","app/screens/authenticated/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/manifest/ManifestScreen.tsx","app/screens/authenticated/manifest/ManifestGroupScreen.tsx","app/screens/authenticated/manifest/ManifestGroupUserSelectScreen.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/components/forms/credits/CreditsForm.tsx","app/components/dialogs/CreditsDialog/Credits.web.tsx","app/api/hooks/useMutationCreateRig.ts","app/api/hooks/useMutationUpdateRig.tsx","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/forms/user/UserForm.tsx","app/api/hooks/useDropzoneUser.ts","app/components/dialogs/User.tsx","app/screens/authenticated/profile/UserInfo/Header.tsx","app/screens/authenticated/profile/UserInfo/InfoGrid.tsx","app/api/hooks/useDropzoneUserProfile.ts","app/components/Badge.tsx","app/api/hooks/useMutationRevokePermission.ts","app/api/hooks/useMutationGrantPermission.ts","app/screens/authenticated/profile/UserInfo/PermissionBadges.tsx","app/screens/authenticated/profile/SlotCard.tsx","app/screens/authenticated/profile/ProfileScreen.tsx","app/api/hooks/useNotifications.ts","app/screens/authenticated/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/NotificationsScreen.tsx","app/components/UserAvatar.tsx","app/screens/authenticated/transactions/OrderCard.tsx","app/screens/authenticated/transactions/TransactionsScreen.tsx","app/screens/authenticated/equipment/RigCard.tsx","app/screens/authenticated/equipment/EquipmentScreen.tsx","app/screens/authenticated/settings/SettingsScreen.tsx","app/api/hooks/useMutationCreateTicketType.ts","app/api/hooks/useMutationUpdateTicketType.ts","app/components/forms/ticket_type/TicketTypeForm.tsx","app/components/dialogs/TicketType.tsx","app/screens/authenticated/ticket_types/TicketTypesScreen.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/dropzones/UpdateDropzoneScreen.tsx","app/components/forms/plane/PlaneForm.tsx","app/components/dialogs/Plane.tsx","app/screens/authenticated/planes/PlanesScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/settings/RigInspectionTemplateScreen.tsx","app/screens/authenticated/settings/DropzoneRigsScreen.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/authenticated/settings/DropzonePermissionScreen.tsx","app/screens/authenticated/settings/DropzoneMasterLogScreen.tsx","app/components/forms/extra/ExtraForm.tsx","app/screens/authenticated/extras/UpdateExtraScreen.tsx","app/api/hooks/useMutationCreateExtra.ts","app/api/hooks/useMutationUpdateExtra.ts","app/components/dialogs/TicketTypeExtra.tsx","app/screens/authenticated/extras/ExtrasScreen.tsx","app/screens/authenticated/transactions/TransactionCard.tsx","app/screens/authenticated/transactions/OrderScreen.tsx","app/screens/authenticated/transactions/DropzoneTransactionsScreen.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/screens/authenticated/rig/RigInspectionScreen.tsx","app/navigation/tabs/manifest.tsx","app/components/forms/ghost/GhostForm.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/users/UsersScreen.tsx","app/screens/authenticated/users/AppBar.tsx","app/navigation/tabs/users.tsx","app/navigation/tabs/notifications.tsx","app/navigation/AnimatedTabBar.web.tsx","app/navigation/Authenticated.tsx","app/screens/authenticated/dropzones/DropzonesScreen.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/screens/authenticated/dropzones/CreateDropzoneScreen.tsx","app/navigation/LimboRoutes.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/hooks/useMutationSignUp.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/navigation/Unauthenticated.tsx","app/screens/authenticated/dropzone_setup/steps/Name.tsx","app/screens/authenticated/dropzone_setup/steps/Location.web.tsx","app/screens/authenticated/dropzone_setup/steps/Aircraft.tsx","app/screens/authenticated/dropzone_setup/steps/Theming.tsx","app/screens/authenticated/dropzone_setup/steps/Permissions.tsx","app/screens/authenticated/dropzone_setup/steps/TicketType.tsx","app/api/hooks/useMutationUpdateDropzone.ts","app/api/hooks/useMutationCreatePlane.tsx","app/api/hooks/useMutationUpdatePlane.tsx","app/screens/authenticated/dropzone_setup/DropzoneSetupScreen.tsx","app/screens/unauthenticated/signup/ConfirmUserScreen.tsx","app/api/hooks/useQueryDropzones.ts","app/navigation/drawer/Drawer.tsx","app/navigation/RootNavigator.tsx","app/components/dialogs/UserWizard/steps/Federation.tsx","app/components/dialogs/UserWizard/steps/Rig.tsx","app/components/dialogs/UserWizard/steps/ReserveRepack.tsx","app/components/dialogs/UserWizard/steps/AskForRig.tsx","app/components/dialogs/UserWizard/steps/Wingloading.tsx","app/components/dialogs/UserWizard/UserWizardScreen.tsx","app/Entrypoint.tsx","app/hooks/useCachedResources.ts"],"names":["Map","props","width","height","position","children","center","coords","shape","interactive","onDragEnd","isLoaded","useJsApiLoader","googleMapsApiKey","id","containerStyle","mapStyle","map","React","onLoad","component","a","async","current","Location","status","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","panDelayed","lat","lng","console","log","rootLayout","setRootLayout","onLayout","nativeEvent","layout","style","borderRadius","undefined","overflow","top","y","left","x","pointerEvents","mapContainerStyle","options","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","mapTypeId","degreesToRadians","degrees","Math","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","getPointOnCircle","opts","radius","offsetX","offsetY","sin","module","exports","Dimensions","get","styles","StyleSheet","create","container","paddingHorizontal","alignItems","paddingLeft","paddingRight","degreeLabel","textAlign","textShadowColor","textShadowRadius","textShadowOffset","fontSize","color","content","flexDirection","iconContainer","borderWidth","borderStyle","borderColor","alignSelf","justifyContent","MAP_SIZE","CENTER_Y","CENTER_X","jumpRun","originX","originY","origin","setOrigin","opacity","Animated","Value","planePosition","planeAnimation","loop","timing","duration","toValue","useNativeDriver","resetBeforeIteration","onMountRotatableView","event","start","animate","stop","reset","planeStartPosition","View","transform","rotate","backgroundColor","interpolate","inputRange","outputRange","scaleX","translateY","name","size","Text","round","b","isEqual","Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","Wrapper","absoluteFill","LoadState","OrderState","Permission","SellableItemTypes","TransactionStatus","TransactionType","WalletableTypes","LottieView","initialState","original","open","fields","amount","value","error","transactionType","Deposit","message","createSlice","reducers","setField","state","action","payload","field","setFieldError","setOpen","federation","secondaryColor","primaryColor","banner","isCreditSystemEnabled","isPublic","Object","keys","forEach","key","payloadKey","typedKey","role","expiresAt","cost","ticketTypes","gca","dispatchAt","isOpen","loadMaster","pilot","plane","maxSlots","exitWeight","email","phone","license","setFederation","registration","minSlots","hours","nextMaintenanceHours","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","idx","setFields","JSON","parse","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","passengerName","passengerExitWeight","users","setFromSlots","slot","Number","rigId","find","i","setDropzoneUsers","dzUser","availableRigs","user","altitude","allowManifestingSelf","isTandem","rigs","temperature","exitSpotMiles","offsetDirection","winds","skipRigSetup","complete","dropzone","credits","extra","ghost","rigInspection","rigInspectionTemplate","manifest","manifestGroup","userWizard","dropzoneWizard","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","login","signup","image","close","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","expoPushToken","theme","palette","main","dark","light","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setPermissions","setPrimaryColor","darken","hex","lighten","setAccentColor","setDropzone","toggleDarkMode","logout","queue","hideSnackbar","newQueue","showSnackbar","push","persistConfig","storage","default","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","notifications","notificationSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppUpdate","overlay","setOverlay","loading","setLoading","animation","dispatch","isUpdateAvailable","Update","isAvailable","onUpdate","play","isNew","flex","tint","blur","intensity","title","ref","source","Button","disabled","button","mode","onPress","absoluteFillObject","fontWeight","bottom","Apollo","httpBatchLink","BatchHttpLink","batchDebounce","batchMax","uri","Constants","urls","url","root","errorLink","onError","graphQLErrors","networkError","operation","response","some","extensions","code","variant","process","EXPO_ENV","locations","path","nodes","stringify","authLink","setContext","_","headers","accessToken","Authorization","tokenType","client","ApolloClient","link","concat","RetryLink","cache","InMemoryCache","ApolloProvider","ImageViewer","mainSrc","onCloseRequest","text","background","tabIconDefault","tabIconSelected","success","warning","info","usePalette","AnimationState","slice","Notifications","successAnimation","closed","animationState","setAnimationState","notification","length","opening","variantStyle","autoPlay","onAnimationFinish","waiting","setTimeout","lottieDoneAnimation","Snackbar","testID","visible","onDismiss","prefixes","Linking","config","confirm","Authenticated","HomeScreen","LoadScreen","PackingScreen","ProfileScreen","SetupScreen","Limbo","DropzonesScreen","CreateDropzoneScreen","Unauthenticated","LoginScreen","SignUpScreen","NotFoundScreen","navigation","TouchableOpacity","replace","linkText","padding","marginTop","paddingVertical","isRequired","pattern","isEmail","RegExp","isNumeric","validates","callback","createMutation","mutation","getPayload","fieldErrorMap","validators","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","variables","mopts","hasErrors","variable","validator","test","validate","result","data","fieldErrors","errors","requestAnimationFrame","gql","updateUser","licenseId","QUERY_DROPZONE","useCurrentDropzone","dropzoneId","pushToken","useQuery","earliestTimestamp","startOfDay","Date","getTime","fetchPolicy","mutationUpdateUser","useMutationUpdateUser","userId","remoteToken","localToken","called","defaultOptions","CurrentUserEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","SlotFragmentDoc","LoadFragmentDoc","TransactionFragmentDoc","OrderFragmentDoc","ConfirmUserDocument","CreateOrderDocument","FinalizeLoadDocument","DropzoneTransactionsDocument","CurrentUserPermissionsDocument","useRestriction","permission","baseOptions","useCurrentUserPermissionsLazyQuery","execute","includes","QUERY_PERMISSION_USER","GCAChip","small","assignedColor","onSelect","useTheme","onSurface","isMenuOpen","setMenuOpen","UpdateLoad","Menu","anchor","Chip","icon","selectedColor","marginHorizontal","textStyle","dropzoneUsers","edges","edge","Item","node","LoadMasterChip","slots","allowed","QUERY_DROPZONE_USERS","PilotChip","QUERY_PLANES","PlaneChip","planes","NumberField","onChangeValue","onChangeText","rest","match","numbers","TextInput","keyboardType","right","Affix","chevrons","affixTopChevron","surface","MaterialCommunityIcons","affixBottomChevron","caretHidden","borderLeftWidth","hairlineWidth","borderBottomWidth","paddingTop","marginRight","createQuery","query","pollInterval","refetch","transformedData","showSnackbarErrors","items","selected","isSelected","isDisabled","renderItemLabel","onChangeSelected","autoSelectFirst","flexWrap","margin","xorBy","previous","next","pick","ChipSelectSkeleton","rows","isLoading","marginBottom","marginVertical","useAllowedJumpTypes","allowedJumpTypes","jumpTypes","JumpTypeChipSelect","onLoadingStateChanged","userIds","filter","Boolean","Subheader","uniqBy","first","useTicketTypes","TicketTypeChipSelect","onlyPublicTickets","RigTitle","QUERY_RIGS","RigSelect","tandem","useLazyQuery","fetchRigs","onTouchEnd","label","Icon","editable","ManifestForm","allowedToManifestOthers","UpdateUserSlot","CreateUserSlot","HelperText","type","ScrollView","horizontal","ticketAddons","Divider","required","newValue","toString","MUTATION_CREATE_SLOT","ManifestUserDialog","globalState","mutationCreateSlot","mutationData","onManifest","jumpTypeId","extraIds","loadId","ticketTypeId","dropzoneUserId","createSlot","Portal","Dialog","maxHeight","ProgressBar","indeterminate","Title","ScrollArea","Actions","onClose","useQueryDropzoneUsersDetails","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","Card","elevation","Image","Content","toFixed","row","rowFirst","rowLast","num","SlotForm","canManifestOthers","slotUser","flexShrink","newRig","useThemeColor","colorName","colorFromProps","Colors","lightColor","darkColor","otherProps","NoResults","subtitle","empty","Paragraph","fab","UserListSelect","search","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","Searchbar","placeholder","contentContainerStyle","description","Checkbox","onNext","scrollView","MUTATION_CREATE_SLOTS","mutationCreateSlots","tabIndex","setTabIndex","userGroup","slotUserWithRig","omit","createSlots","defaultIndex","onChangeIndex","userListContainer","paddingBottom","flexGrow","buttonContainer","contentContainer","sheet","sheetHeader","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","SlotCard","onDelete","hasPassenger","flatten","card","Badge","e","preventDefault","infoChip","chipText","wingLoading","chip","passengerTitle","passengerChip","updateLoad","pilotId","gcaId","planeId","loadMasterId","ActionButton","isExpanded","setExpanded","useFinalizeLoadMutation","mutationFinalizeLoad","mutationUpdateLoad","useMutationUpdateLoad","updateCall","minutes","dispatchTime","addMinutes","ceil","BoardingCall","Open","updateLoadState","onLanded","Landed","hasLicense","hasMembership","hasExitWeight","hasCredits","canUpdateLoad","canManifestSelf","CreateSlot","isFull","showManifestButton","showGroupIcon","createCallAction","callActions","manifestActions","workflowActions","Cancelled","InFlight","buttonActions","FAB","Group","fabStyle","marginLeft","onStateChange","CountdownCircleTimer","select","ios","then","android","web","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","UserHeader","onEdit","canEdit","LinearGradient","IconButton","avatarContainer","isAfter","titleContainer","loadNumber","paragraph","InfoGrid","divider","titleStyle","bold","descriptionStyle","verticalDivider","deleteSlot","AvailableSlotCard","SlotSkeleton","route","useRoute","useQueryLoad","params","detailedLoad","mutationDeleteSlot","useMutationDeleteSlot","onDeleteSlot","updatePilot","updateGCA","updatePlane","updateLoadMaster","lm","canEditSelf","UpdateSlot","canEditOthers","canRemoveSelf","DeleteSlot","canRemoveOthers","DeleteUserSlot","useNavigation","Array","from","availableSlots","occupiedSlots","useWindowDimensions","numColumns","floor","contentWidth","initialLoading","showsHorizontalScrollIndicator","weight","keyExtractor","refreshing","onRefresh","refreshControl","RefreshControl","renderItem","slotGroup","groupNumber","onSlotGroupPress","navigate","onSlotPress","WizardPagination","paginationIndex","icons","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","count","setIndex","Wizard","Provider","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","wizardScreen","buttonBack","buttons","maxWidth","WizardScreen","onBack","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","scrollTo","ScrollableScreen","minHeight","WizardCompleteStep","createWeatherCondition","WindRow","speed","direction","onChange","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","minWidth","altitudeOption","alt","strengthCard","onBlur","newSpeed","textField","directionCard","newDir","CARD_STYLE","textAlignVertical","lineHeight","borderBottomLeftRadius","borderBottomRightRadius","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","KeyboardAvoidingView","behavior","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","set","cardTitle","cardValue","slider","sliderControl","wingLoadingCardLeft","wingLoadingCardRight","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","JumpRunSelector","longitude","isDragging","setDragging","rotation","onGestureEvent","setValue","currentCoordinates","angle","onBegan","onEnded","zIndex","bottomDegreeLabel","textInput","location","setLocation","setUsersLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","currentIndex","Winds","goBack","JumpRun","JumpRunScreen","WindScreen","labelStyle","Warning","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","join","QUERY_CURRENT_USER","AppBar","scene","hideWarnings","loadData","Appbar","Header","BackAction","DrawerActions","toggleDrawer","descriptor","headerRight","tintColor","isRigInspected","rigInspections","inspection","isRepackInDate","GetStarted","hasPlanes","hasTicketTypes","separator","LoadingCard","LoadCard","initialRecord","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","smallChip","smallChipText","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","translateX","useNativeAnimations","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","hasLanded","DataTable","numeric","isCurrentUser","Row","Cell","slotText","v","differenceInMinutes","createLoad","DropzoneUserChipSelect","requiredPermissions","useQueryDropzoneUsers","getItemLabel","PlaneChipSelect","LoadForm","DialogOrSheet","buttonLabel","buttonAction","dismissable","LoadDialog","useMutationCreateLoad","snackbar","snapPoints","onSave","WeatherBoard","conditions","currentConditions","date","createdAt","canUpdate","UpdateWeatherConditions","hasWeatherConditions","ImageBackground","nightBackground","weatherBackground","resizeMode","cell","FontAwesome","format","windboard","header","orderBy","noData","noDataLabel","ManifestScreen","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","fetchMore","isFocused","useIsFocused","setOptions","isSetupComplete","canCreateLoad","CreateLoad","hasRigInspection","hasReserveInDate","cardWidth","loads","ListHeaderComponent","ListEmptyComponent","ManifestGroupScreen","screen","ManifestGroupUserSelectScreen","Android","setParams","DatePicker","timestamp","selectedDays","onDayClick","QUERY_ROLES","RoleSelect","toUpperCase","roles","DropzoneUserForm","canUpdateRole","GrantPermission","newRole","time","MUTATION_EDIT_DROPZONE_USER","DropzoneUserDialog","mutationUpdateDropzoneUser","createData","userRoleId","updateDropzoneUser","CreditsForm","currentCredits","subtotal","useCreateOrderMutation","mutationCreateOrder","seller","Dropzone","DropzoneUser","buyer","createOrder","createRig","updateRig","RigForm","showTypeSelect","canCreateRigs","CreateRig","RigDialog","useMutationUpdateRig","useMutationCreateRig","onDialogClose","QUERY_LICENSES","LicenseChipSelect","federationId","licenses","QUERY_FEDERATIONS","FederationSelect","federations","QUERY_DROPZONE_USER","useDropzoneUser","UpdateUserDialog","refetchQueries","parseFloat","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","textColor","primaryDark","TouchableRipple","openURL","QUERY_DROPZONE_USER_PROFILE","innerChip","iconName","actAsDZSO","actAsGCA","actAsLoadMaster","actAsPilot","actAsRigInspector","revokePermission","permissionName","grantPermission","PermissionBadges","canGrantPermission","useMutationRevokePermission","useMutationGrantPermission","badges","ActAsPilot","ActAsDzso","ActAsGca","ActAsRigInspector","ActAsLoadMaster","shouldShowBadge","update","c","readQuery","updatedList","writeQuery","shouldUpdate","updatedGcaList","newData","transaction","transactionContent","Caption","transactionTitle","transactionDescription","avatarIcon","MUTATION_UPDATE_IMAGE","isSelf","useDropzoneUserProfile","ImagePicker","onPickImage","mediaTypes","Images","allowsEditing","aspect","quality","base64","canAddTransaction","CreateUserTransaction","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","chipTitle","QUERY_DROPZONE_USER_NOTIFICATIONS","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","addSuffix","ManifestedNotification","initial","resource","BoardingCallNotification","getIcon","FundsNotification","capitalize","RigInspectionNotification","notificationType","PermissionNotification","useNotifications","UserAvatar","initals","split","n","OrderCard","order","showAvatar","__typename","orderContent","orderTitle","orderDescription","TransactionsScreen","firstName","flatList","orders","RigCard","onSuccessfulImageUpload","isUploading","setUploading","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","textRow","inspectedBy","insp","isOk","SettingsScreen","canUpdateDropzone","UpdateDropzone","canUpdateRigInspectionTemplate","UpdateFormTemplate","Section","createTicketType","updateTicketType","QUERY_EXTRAS","ALTITUDE_LABEL_MAP","TicketTypeForm","TicketTypeDialog","useMutationCreateTicketType","useMutationUpdateTicketType","QUERY_TICKET_TYPE","MUTATION_UPDATE_TICKET_TYPE","MUTATION_DELETE_TICKET_TYPE","TicketTypesScreen","form","mutationUpdateTicketType","mutationDeleteTicketType","canCreateTicketTypes","CreateTicketType","deleteTicketType","Switch","onValueChange","ColorPickerDialog","sliderComponent","SliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","colorBox","ColorPicker","helperText","isCustomColor","isDialogOpen","setDialogOpen","Surface","manipulate","MaterialIcons","previewContainer","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","previewTabBar","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","PhonePreview","primaryLight","WebPreview","markerFixed","myLocation","LocationWizardStep","markerSize","labelSize","setCenter","region","isAnimating","setAnimating","fadeOut","fadeIn","setCoordinateFade","defaultZoom","onDragStart","r","DropzoneForm","outsideLoading","getDocumentAsync","multiple","skeletonCard","Cover","Phone","Web","skeletonCardColorPicker","skeletonCardCheckbox","subheader","QUERY_DROPZONE_DETAILS","MUTATION_UPDATE_DROPZONE","UpdateDropzoneScreen","mutationUpdateDropzone","hasError","updateDropzone","MUTATION_UPDATE_PLANE","MUTATION_CREATE_PLANE","CreatePlaneScreen","mutationCreatePlane","mutationUpdatePlane","createPlane","MUTATION_DELETE_PLANE","PlanesScreen","deletePlane","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","RigInspectionItem","canInspect","valueType","RigInspectionTemplateForm","newItem","setNewItem","fabOpen","setFabOpen","QUERY_RIG_INSPECTION","MUTATION_UPDATE_FORM","RigInspectionTemplateScreen","mutationUpdateForm","updateForm","formId","QUERY_DROPZONE_RIGS","MUTATION_UPDATE_RIG","DropzoneRigsScreen","rigForm","mutationUpdateRig","updateData","canCreateRig","CreateDropzoneRig","MUTATION_UPDATE_ROLE","PermissionListItem","canChangePermissions","mutationUpdatePermission","roleId","optimisticResponse","updateRole","QUERY_DROPZONE_PERMISSIONS","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","masterLog","QUERY_TICKET_TYPES","ExtraForm","ticket","MUTATION_UPDATE_EXTRA","UpdateExtraScreen","mutationUpdateExtra","ticketTypeIds","updateExtra","createExtra","TicketTypeExtraDialog","useMutationCreateExtra","useMutationUpdateExtra","ExtrasScreen","formState","canCreateExtras","CreateExtra","TransactionCard","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","rightStyle","receipts","useDropzoneTransactionsLazyQuery","fetchTransactions","RigInspectionForm","QUERY_RIG_INSPECTIONS","MUTATION_CREATE_RIG_INSPECTION","RigInspectionScreen","mutationCreateRigInspection","record","createRigInspection","mutationResult","currentDz","ins","Manifest","createStackNavigator","ManifestTab","Navigator","screenOptions","headerShown","cardStyle","Screen","initialParams","NotificationsScreen","EquipmentScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","createGhost","exit_weight","CreateGhostDialog","mutationCreateGhost","useMutationCreateGhost","UserCardSkeleton","UsersScreen","ghostForm","canCreateUser","CreateUser","inputContainer","input","onSearch","searchVisible","autoFocus","Settings","SettingsTab","Profile","initialRouteName","BottomTab","createBottomTabNavigator","AnimatedIcon","createAnimatedComponent","AuthenticatedTabBar","Appearance","getColorScheme","canViewUsers","ReadUser","tabConfig","activeColor","inactiveColor","tabs","animatedFocus","iconActive","Users","tabBar","preset","inactiveOpacity","inactiveScale","tabBarOptions","activeTintColor","inactiveBackgroundColor","backdrop","activeBackgroundColor","inactiveTintColor","showLabel","adaptive","borderTopWidth","borderTopColor","tabBarLabel","focused","tabBarIcon","unmountOnBlur","NotificationsTab","UsersTab","QUERY_DROPZONES","SafeAreaView","FlatList","dropzones","shouldPushRoute","dzIcon","createDropzone","useMutationCreateDropzone","Stack","MUTATION_LOG_IN","mutationLogin","onLogin","emailRegex","userLogin","authenticatable","logo","secureTextEntry","onSubmitEditing","textButtonLabel","textButton","userSignUp","SignupScreen","useMutationSignUp","onSignUp","textContentType","passwordRules","NameAndFederationWizardSceen","latitudeDelta","longitudeDelta","AircraftWizardScreen","setMinSlots","setMaxSlots","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","onSlidingComplete","ReserveRepackWizardScreen","PermissionWizardScreen","dropzoneForm","queryRoles","TicketTypeWizardScreen","price","setPrice","DropzoneSetupScreen","aircraft","mutationCreateDropzone","useMutationUpdateDropzone","useMutationCreatePlane","useMutationUpdatePlane","mutationCreateTicketType","onBasicInfoNext","onThemingNext","onAircraftNext","onTicketTypeNext","Name","Theming","Aircraft","TicketType","errorIcon","ConfirmUserScreen","useConfirmUserMutation","confirmUser","setError","token","userConfirmRegistrationWithToken","catch","DrawerMenu","useQueryDropzones","routeName","getFocusedRouteNameFromRoute","navState","dangerouslyGetState","subNavState","routes","subNavRoutes","subNavSubState","subRouteName","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","active","closeDrawer","profileHeader","Drawer","createDrawerNavigator","RootNavigator","drawerContent","AuthenticatedRoutes","LimboRoutes","UnauthenticatedRoutes","FederationWizardSceen","RigWizardScreen","isOtherMake","setIsOtherMake","WingloadingWizardScreen","userForm","setCanopySize","setWeight","w","modal","UserWizardScreen","mutationCreateRig","onFederationNext","onRigNext","onReserveRepackNext","onWingloadingNext","Modal","Federation","AskForRig","Rig","ReserveRepack","Wingloading","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","isDevice","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","registerForPushNotificationsAsync","request","body","addEventListener","removeEventListener","fallback","NavigationContainer","linking","LinkingConfiguration","StatusBar","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","Sentry","dsn","SENTRY_DSN","enableInExpoDevelopment","debug","registerRootComponent","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","fontsLoaded","SplashScreen","Ionicons","font","useCachedResources","ActivityIndicator"],"mappings":"oxBA8Be,SAASA,EAAIC,GAC1B,IAAQC,EACND,EADMC,MAAOC,EACbF,EADaE,OAAQC,EACrBH,EADqBG,SAAUC,EAC/BJ,EAD+BI,SAAUC,EACzCL,EADyCK,OAAQC,EACjDN,EADiDM,OAAQC,EACzDP,EADyDO,MAAOC,EAChER,EADgEQ,YAAaC,EAC7ET,EAD6ES,UAEvEC,EAAaC,YAAe,CAClCC,iBAAiB,0CACjBC,GAAI,uBAFEH,SAKAI,EAA6Bd,EAA7Bc,eAAgBC,EAAaf,EAAbe,SAClBC,EAAMC,SAAwB,MAE9BC,EAASD,eAAkB,SAAOE,GAAP,mBAAAC,EAAAC,OAAA,uDAG/BL,EAAIM,QAAUH,EAHiB,oBAAAC,EAAA,MAKJG,OALI,mBAMd,YANc,EAKrBC,OALqB,mGAevBC,EAAS,IAAIC,OAAOC,OAAOC,KAAKC,aAGtC,SAAAb,EAAIM,UAAJ,EAAaQ,UAAUL,GAlBM,mEAoB9B,IAEGM,EAAYd,eAAkB,WAGlCD,EAAIM,QAAU,OACb,IAIGU,GAFsBf,WAETA,eAAkB,SAACgB,EAAaC,MAwBhD,KAEHjB,aAAgB,WACVZ,IACF8B,QAAQC,IAAI,CAAE/B,SAAQC,WACtB0B,EAAW3B,EAAO4B,IAAK5B,EAAO6B,QAE/B,CAAC7B,EAAQC,EAAQ0B,IAEpB,MAAoCf,aAApC,WAAOoB,EAAP,KAAmBC,EAAnB,KACA,OAAQ5B,EACN,gBAAC,UAAD,CACE6B,SAAU,gBAAGC,EAAH,EAAGA,YAAH,OAAqBF,EAAcE,EAAYC,SACzDC,MAAK,GACHzC,QACAC,SACAyC,aAAwB,UAAVpC,GAAA,MAAqB8B,KAAYpC,MAAQoC,EAAWpC,MAAQ,OAAI2C,EAC9EC,SAAU,SACV1C,SAAU,WACV2C,IAAK3C,EAAS4C,EACdC,KAAM7C,EAAS8C,GACZnC,GAELoC,cAAe1C,OAAcoC,EAAY,QAEzC,gBAAC,IAAD,CACE1B,OAAQ,SAACC,GAGPH,EAAIM,QAAUH,EACdD,EAAOC,IAETd,OAAQC,EACRG,UAAS,8GAAE,WACA,MAATA,KAAY,CAGVwB,IAAKjB,EAAIM,QAAQjB,OAAO4B,MAGxBC,IAAKlB,EAAIM,QAAQjB,OAAO6B,WAG5BH,UAAWA,EAEXoB,kBAAiB,GACflD,MAAO,OACPC,OAAQ,QAIJa,GAENqC,QAAS,CACPC,KAAM,GACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,EAChBC,aAAa,EACbC,UAAW,cAGZtD,IApDY,O,iCCzGrB,SAASuD,EAAiBC,GACxB,OAAOA,GAAWC,KAAKC,GAAK,KAEvB,SAASC,EAAqBC,GAAmC,IAAjBC,EAAgB,uDAAH,EAC5DC,EAAyB,OACzBC,EAA0BN,KAAKO,IAAIT,EAAiBK,IAAaE,EAGvE,OAAOD,EAAaE,EARtB,mC,iCCAO,SAASE,EAAiBC,GAQ/B,IAAQrB,EAA4CqB,EAA5CrB,EAAGF,EAAyCuB,EAAzCvB,EAAGa,EAAsCU,EAAtCV,QAASW,EAA6BD,EAA7BC,OAAQC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,QACxC,MAAO,CACLxB,EAAGA,EAAIsB,EAASC,EAAUD,EAASV,KAAKa,KAAMd,EAAW,KAAcC,KAAKC,GAAM,KAClFf,EAAGA,EAAIwB,EAASE,EAAUF,GAAUV,KAAKO,KAAMR,EAAW,KAAcC,KAAKC,GAAM,MAXvF,mC,oBCAAa,EAAOC,QAAU,IAA0B,kC,u8wBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,ouBCc3C,IAAQ3E,EAAU4E,IAAWC,IAAI,UAAzB7E,MAwMR,IAAM8E,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACbC,aAAc,GAGhBC,YAAa,CACXtF,MAAO,IACPC,OAAQ,IACRsF,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEV0F,SAAU,IACVC,MAAO,QACP1F,SAAU,YAGZ2F,QAAS,CACP7F,MAAO,OACP8F,cAAe,UAEjBC,cAAe,CACbC,YAAa,EACbtD,aAAc1C,EAAQ,EACtBiG,YAAa,QACbC,YAAa,QACbC,UAAW,SACXhB,WAAY,SACZiB,eAAgB,YAILpF,YArOf,SAAoBjB,GAClB,IAAQiC,EAAajC,EAAbiC,IAAKC,EAAQlC,EAARkC,IACb,EAAoCjB,WAAgC,CAClEgC,EAAG,EACHF,EAAG,EACH7C,OAAQ,EACRD,MAAO,IAJT,WAAOoC,EAAP,KAAmBC,EAAnB,KAMMgE,EAToB,EASTjE,EAAWpC,MACtBsG,EAAWlE,EAAWnC,OAAS,EAC/BsG,EAAWnE,EAAWpC,MAAQ,EAE5BwG,EAAYzG,EAAZyG,QACR,EAA4BxF,WAE1B,CACAgC,EAAG,EACHF,EAAG,EACH7C,OAAQ,EACRD,MAAO,EACPyG,QAAS,EACTC,QAAS,IARX,WAAOC,EAAP,KAAeC,EAAf,KAWMC,EAAU7F,SAAa,IAAI8F,IAASC,MAAM,IAG1CC,EAAgBhG,SAAa,IAAI8F,IAASC,MAAM,IAChDE,EAAiBjG,SACrB8F,IAASI,KACPJ,IAASK,OAAOH,EAAc3F,QAAS,CACrC+F,SAAU,IACVC,SAAU,IACVC,iBAAiB,IAEnB,CACEC,sBAAsB,KAKtBC,EAAuBxG,eAC3B,SAACyG,GACC,IAAQjF,EAAWiF,EAAMlF,YAAjBC,OACRoE,EAAU,EAAD,KACJpE,GADI,IAGPiE,QAASjE,EAAOQ,EAAIZ,EAAWpC,MAAQ,EACvC0G,QAASlE,EAAOM,EAAIV,EAAWnC,OAAS,OAG5C,CAACmC,EAAWnC,OAAQmC,EAAWpC,QAGjCgB,YAAA,4BAGEiG,EAAe5F,QAAQqG,SAHzB,kDAzEAT,EAAe5F,QAAQqG,SAyEvB,4SAIG,IAEH,IAAMC,EAAO,4BAGXV,EAAe5F,QAAQuG,OACvBX,EAAe5F,QAAQwG,QACvBZ,EAAe5F,QAAQqG,SALZ,iDA/EbT,EAAe5F,QAAQuG,KA+EV,MA9EbX,EAAe5F,QAAQwG,MA8EV,MA7EbZ,EAAe5F,QAAQqG,SA6EV,yWAQb1G,aAAgB,WACd2G,MACC,CAACnB,IAEJ,IAAMsB,EAAqB1D,YAAiB,CAC1CpB,EAAG2D,EAAOF,QACV3D,EAAG6D,EAAOD,QACV/C,QAAS6C,EACTjC,QAAS,EACTC,QAAS,EACTF,OAAQ+B,EAAW,IAGfnG,EAAWc,WAAc,iBAAO,CAAEgC,EAAG,EAAGF,EAAG,KAAM,IACjDzC,EAASW,WAAc,kBAAOgB,GAAOC,EAAM,CAAED,MAAKC,YAAQU,IAAY,CAACX,EAAKC,IAElF,OACE,gBAAC,UAAD,CACEK,SAAU,gBAAGC,EAAH,EAAGA,YAAH,OAAqBF,EAAcE,EAAYC,SACzDC,MAAO,CAAEzC,MAAO,OAAQC,OAAQ,SAEhC,gBAAC,UAAD,CACEwC,MAAO,CACLzC,MAAOqG,EACPpG,OAAQoG,EACR3D,aAAc2D,EAAW,EACzBzD,SAAU,SACV1C,SAAU,WACV2C,IAAK,EACLE,KAAM,IAGR,gBAAC,IAAD,CACE1C,OAAQA,EACRD,OAAQC,EACRJ,OAAQoG,EACRrG,MAAOqG,EACPnG,SAAUA,EACVK,aAAa,KAIjB,gBAAC,IAASwH,KAAV,CACEzF,SAAUkF,EACV/E,MAAO,CACLqC,EAAOiB,cACP,CACE/F,MAAOqG,EACPpG,OAAQoG,EACRnG,SAAU,WACV2C,IAAK,EACLE,KAAM,EACNiF,UAAW,CACT,CACEC,OAAWzB,EAAL,WAMd,gBAAC,IAASuB,KAAV,CACEtF,MAAO,CACLxC,OAAQoG,EAAW,EACnBrG,MAAO,EACPkI,gBAAiB,UACjBrB,QAASA,EAAQxF,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,GAAK,KAErBL,UAAW,CACT,CACEM,OAAQzB,EAAQxF,QAAQ8G,YAAY,CAClCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,EAAG,WAO5B,MAACjG,KAAYpC,MACZ,gBAAC,IAAS+H,KAAV,CACEtF,MAAO,CACL,CACEvC,SAAU,WACVF,MAAO,GACPC,OAAQ,GACR4C,IAAKiF,EAAmBhF,EACxBC,KAAM+E,EAAmB9E,EACzB6D,QAASG,EAAc3F,QAAQ8G,YAAY,CACzCC,WAAY,EAAE/B,GAAWA,EAAW,EAAGA,GACvCgC,YAAa,CAAC,EAAK,EAAK,KAE1BL,UAAW,CACT,CACEC,OAAWzB,EAAL,OAER,CACE+B,WAAYvB,EAAc3F,aAMlC,gBAAC,IAAD,CAAwBmH,KAAK,WAAWC,KAAM,GAAI7C,MAAM,aAxBtC,KA2BtB,gBAAC,IAAS8C,KAAV,CACEjG,MAAO,CACLqC,EAAOQ,YACP,CACEuB,QAASA,EAAQxF,QACjBwB,IAAKyD,EACLvD,KAAMwD,KAIT3C,KAAK+E,MAAMnC,QA4CkB,SAACrF,EAAGyH,GAAJ,OAAUC,IAAQ1H,EAAGyH,Q,kgqBC5P3DlE,EAAOC,QAAU,IAA0B,iC,ySCIT,YAAhBmE,IAASC,KAKzBC,EAAQ,KACRA,EAAQ,KAERA,EAAQ,KACRA,EAAQ,KAERA,EAAQ,KACRA,EAAQ,KAERA,EAAQ,KACRA,EAAQ,KAERA,EAAQ,KACRA,EAAQ,KAERA,EAAQ,KACRA,EAAQ,KAERA,EAAQ,KACRA,EAAQ,KAERA,EAAQ,KAIJ,yBAA0BC,KAAKC,gBAIjCD,KAAKC,eAAeC,qBAAqBH,EAAQ,KAAqBI,W,WCnC3D,SAASC,EAAT,GAA+D,IAA5ClJ,EAA2C,EAA3CA,SAChC,OAAO,gBAAC4H,EAAA,QAAD,CAAMtF,MAAOsC,IAAWuE,cAAenJ,G,IC6sBpCoJ,EA8YAC,EAwBAC,EA2WAC,EA+GAC,EAMAC,EA+YAC,E,4ECp+DGC,E,OAAf,E,6CD+sBYP,K,YAAAA,E,6BAAAA,E,qBAAAA,E,gBAAAA,E,uBAAAA,M,cA8YAC,K,kBAAAA,E,sBAAAA,E,oBAAAA,E,uBAAAA,M,cAwBAC,K,gCAAAA,E,gCAAAA,E,kDAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,oBAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,gCAAAA,E,gDAAAA,E,gCAAAA,E,gCAAAA,E,sCAAAA,E,sCAAAA,E,sCAAAA,E,oCAAAA,E,oCAAAA,E,oCAAAA,E,0BAAAA,E,0BAAAA,E,0BAAAA,E,sBAAAA,E,0BAAAA,E,0BAAAA,E,0BAAAA,E,sBAAAA,E,sBAAAA,E,sBAAAA,E,kBAAAA,E,sCAAAA,E,sCAAAA,E,sCAAAA,E,kCAAAA,E,kCAAAA,E,sCAAAA,E,8BAAAA,E,8BAAAA,E,8BAAAA,E,0BAAAA,E,wCAAAA,E,wCAAAA,E,wCAAAA,E,oCAAAA,E,oBAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,kCAAAA,E,oBAAAA,E,sBAAAA,E,sCAAAA,E,8CAAAA,E,4CAAAA,E,kCAAAA,E,qCAAAA,M,cA2WAC,K,YAAAA,E,wBAAAA,E,cAAAA,E,aAAAA,M,cA+GAC,K,oBAAAA,E,sBAAAA,E,uBAAAA,M,cAMAC,K,oBAAAA,E,YAAAA,E,kBAAAA,E,wBAAAA,E,iBAAAA,M,cA+YAC,K,4BAAAA,E,qBAAAA,M,KEt9DL,IAAME,EAAmC,CAC9CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNC,OAAQ,CACNC,MAAO,KACPC,MAAO,MAETC,gBAAiB,CACfF,MAAOR,EAAgBW,QACvBF,MAAO,MAETG,QAAS,CACPJ,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,gBACNuB,eACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAlI,QAAQC,IAAI,CAAE4I,UACdH,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,EAAMV,QAAU,UAAWU,EAAMV,OAAOa,KACnDH,EAAMV,OAAOa,GAAYV,MAAQA,IAGrCY,QAAS,SAACL,EAA2BC,GACL,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,EAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,IAIjBpC,MAAO,SAAC+C,GACNA,EAAMV,OAASH,EAAaG,OAC5BU,EAAMZ,SAAW,SC7CVD,GAAmC,CAC9CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNgB,WAAY,CACVd,MAAO,KACPC,MAAO,MAETrI,IAAK,CACHoI,MAAO,KACPC,MAAO,MAETpI,IAAK,CACHmI,MAAO,KACPC,MAAO,MAET7B,KAAM,CACJ4B,MAAO,GACPC,MAAO,MAETc,eAAgB,CACdf,MAAO,GACPC,MAAO,MAETe,aAAc,CACZhB,MAAO,GACPC,MAAO,MAETgB,OAAQ,CACNjB,MAAO,GACPC,MAAO,MAETiB,sBAAuB,CACrBlB,OAAO,EACPC,MAAO,MAETkB,SAAU,CACRnB,OAAO,EACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,iBACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,EAAMV,QAAU,UAAWU,EAAMV,OAAOa,KACnDH,EAAMV,OAAOa,GAAYV,MAAQA,IAIrCY,QAAS,SAACL,EAA2BC,GACL,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDhE,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SClGVD,GAAuC,CAClDC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACN4B,KAAM,CACJ1B,MAAO,KACPC,MAAO,MAET0B,UAAW,CACT3B,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,qBACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAA+BC,GACT,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDhE,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC1DVD,GAAgC,CAC3CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACN1B,KAAM,CACJ4B,MAAO,GACPC,MAAO,MAET2B,KAAM,CACJ5B,MAAO,KACPC,MAAO,MAET4B,YAAa,CACX7B,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,cACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAO1B,KAAK6B,MAAQ,MAE5BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAwBC,GACF,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMV,OAAO+B,YAAY7B,MAAQS,EAAOC,QAAQmB,YAChDrB,EAAMV,OAAO8B,KAAK5B,MAAQS,EAAOC,QAAQkB,KACzCpB,EAAMV,OAAO1B,KAAK4B,MAAQS,EAAOC,QAAQtC,MAAQ,KAIrDX,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCrDVD,GAA+B,CAC1CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACN1B,KAAM,CACJ4B,MAAO,GACPC,MAAO,MAET6B,IAAK,CACH9B,MAAO,KACPC,MAAO,MAET8B,WAAY,CACV/B,MAAO,KACPC,MAAO,MAET+B,OAAQ,CACNhC,OAAO,EACPC,MAAO,MAETgC,WAAY,CACVjC,MAAO,KACPC,MAAO,MAETiC,MAAO,CACLlC,MAAO,KACPC,MAAO,MAETkC,MAAO,CACLnC,MAAO,KACPC,MAAO,MAETmC,SAAU,CACRpC,MAAO,EACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,aACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAuBC,GACD,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDhE,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC/EVD,GAAgC,CAC3CC,SAAU,KACVC,MAAM,EACNiB,WAAY,CACVd,MAAO,KACPC,MAAO,MAETH,OAAQ,CACNuC,WAAY,CACVrC,MAAO,KACPC,MAAO,MAETqC,MAAO,CACLtC,MAAO,GACPC,MAAO,MAETsC,MAAO,CACLvC,MAAO,GACPC,MAAO,MAET7B,KAAM,CACJ4B,MAAO,KACPC,MAAO,MAETyB,KAAM,CACJ1B,MAAO,KACPC,MAAO,MAETuC,QAAS,CACPxC,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,cACNuB,gBACAW,SAAU,CACRmC,cAAe,SAACjC,EAAwBC,GACtCD,EAAMM,WAAWd,MAAQS,EAAOC,SAElCH,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KACIW,KAASH,EAAMV,SACjBU,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,OAGhCW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,EACXA,EAAMV,OAAOa,GAAOV,MAAQA,EAE5BnI,QAAQmI,MAAM,uBAAwBU,IAI1CE,QAAS,SAACL,EAAwBC,GAOxB,IAAD,GANP3I,QAAQC,IAAI,gBACZD,QAAQC,IAAI0I,EAAOC,SACW,mBAAnBD,EAAOC,UAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMM,WAAWd,OAAQ,SAAAS,EAAOC,QAAQ8B,cAAf,IAAwB1B,aAAc,KAC/DM,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDhE,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC1FVD,GAAgC,CAC3CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACN1B,KAAM,CACJ4B,MAAO,GACPC,MAAO,MAETyC,aAAc,CACZ1C,MAAO,GACPC,MAAO,MAET0C,SAAU,CACR3C,MAAO,EACPC,MAAO,MAETmC,SAAU,CACRpC,MAAO,EACPC,MAAO,MAET2C,MAAO,CACL5C,MAAO,KACPC,MAAO,MAET4C,qBAAsB,CACpB7C,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,QACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAO1B,KAAK6B,MAAQ,MAE5BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAwBC,GACF,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMV,OAAO8C,MAAM5C,MAAQS,EAAOC,QAAQkC,OAAS,EACnDpC,EAAMV,OAAO6C,SAAS3C,MAAQS,EAAOC,QAAQiC,UAAY,EACzDnC,EAAMV,OAAOsC,SAASpC,MAAQS,EAAOC,QAAQ0B,UAAY,EACzD5B,EAAMV,OAAO1B,KAAK4B,MAAQS,EAAOC,QAAQtC,MAAQ,GACjDoC,EAAMV,OAAO4C,aAAa1C,MAAQS,EAAOC,QAAQgC,cAAgB,GACjElC,EAAMV,OAAO+C,qBAAqB7C,MAAQS,EAAOC,QAAQmC,sBAAwB,IAIrFpF,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCxEVD,GAA8B,CACzCC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNgD,KAAM,CACJ9C,MAAO,GACPC,MAAO,MAET7B,KAAM,CACJ4B,MAAO,GACPC,MAAO,MAET8C,MAAO,CACL/C,MAAO,GACPC,MAAO,MAET+C,OAAQ,CACNhD,MAAO,GACPC,MAAO,MAETgD,gBAAiB,CACfjD,MAAO,KACPC,MAAO,MAETiD,WAAY,CACVlD,MAAO,KACPC,MAAO,MAETkD,QAAS,CACPnD,MAAO,QACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,YACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAsBC,GACA,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDhE,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCvFVD,GAAwC,CACnDG,OAAQ,GACRD,MAAM,EACNuD,IAAI,GAGS/C,eAAY,CACzBjC,KAAM,sBACNuB,gBACAW,SAAU,CACR+C,MAAO,SAAC7C,EAAgCC,GACtCD,EAAM4C,GAAK3C,EAAOC,SAEpBH,SAAU,SAACC,EAAgCC,GACzC,UAAsBA,EAAOC,QAA7B,GAAO4C,EAAP,KAAcC,EAAd,KACA/C,EAAMV,OAASU,EAAMV,OAAOnJ,KAAI,SAACgK,EAAO6C,GAAR,OAAiBA,IAAQF,EAAQC,EAAO5C,MAG1E8C,UAAW,SAACjD,EAAgCC,GAC1C,IACED,EAAMV,OAAS4D,KAAKC,MAAMlD,EAAOC,SACjC,MAAOT,GACPnI,QAAQC,IAAI0I,EAAOC,SACnB5I,QAAQmI,MAAM,yCAA0CA,EAAMG,QAASK,EAAOC,WAIlFjD,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAM4C,GAAKzD,GAAayD,OCtBjBzD,GAAwC,CACnDC,SAAU,KACVE,OAAQ,IAGKO,eAAY,CACzBjC,KAAM,8BACNuB,gBACAW,SAAU,CACRmD,UAAW,SAACjD,EAAgCC,GAC1CD,EAAMV,OAASW,EAAOC,SAGxBG,QAAS,SAACL,EAAgCC,GACxCD,EAAMZ,SAAWa,EAAOC,QAExB,IACEF,EAAMV,OAAS4D,KAAKC,MAAMlD,EAAOC,QAAQkD,YAAc,MACvD,MAAOC,GACP/L,QAAQC,IAAI,iBAAkB0I,EAAOC,QAAQkD,cAIjDnG,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCdVD,GAA+B,CAC1CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNgE,SAAU,CACR9D,MAAO,KACPC,MAAO,MAET8D,OAAQ,CACN/D,MAAO,GACPC,MAAO,MAET+D,KAAM,CACJhE,MAAO,KACPC,MAAO,MAETgE,IAAK,CACHjE,MAAO,KACPC,MAAO,MAETiE,WAAY,CACVlE,MAAO,KACPC,MAAO,MAETkE,aAAc,CACZnE,MAAO,KACPC,MAAO,MAEToC,WAAY,CACVrC,MAAO,KACPC,MAAO,MAETmE,cAAe,CACbpE,MAAO,KACPC,MAAO,MAEToE,oBAAqB,CACnBrE,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,iBACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEIW,KAASH,EAAMV,SACjBU,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,OAGhCW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,EAAMV,SACjBU,EAAMV,OAAOa,GAAOV,MAAQA,IAIhCY,QAAS,SAACL,EAAuBC,GACD,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDhE,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SChGVD,GAA+B,CAC1CC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACNgE,SAAU,CACR9D,MAAO,KACPC,MAAO,MAET8D,OAAQ,CACN/D,MAAO,GACPC,MAAO,MAET+D,KAAM,CACJhE,MAAO,KACPC,MAAO,MAETiE,WAAY,CACVlE,MAAO,KACPC,MAAO,MAETqE,MAAO,CACLtE,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,sBACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BsE,aAAc,SAAC/D,EAAuBC,GAAmC,IAAD,MACtED,EAAMV,OAAOwE,MAAMtE,MAAQS,EAAOC,QAAQ/J,KAAI,SAAC6N,GAAD,cAAW,CACvDhO,GAAIiO,OAAM,SAACD,EAAKL,mBAAN,EAAC,EAAmB3N,IAC9BkO,MAAOD,OAAM,SAACD,EAAKP,UAAN,EAAC,EAAUzN,IACxB6L,WAAYoC,OAAOD,EAAKnC,gBAG1B7B,EAAMV,OAAOgE,SAAS9D,MAAtB,SAA8BS,EAAOC,QAAQiE,MAAK,SAACC,GAAD,OAAOA,WAAzD,EAA8B,EAA+Bd,SAC7DtD,EAAMV,OAAOkE,KAAKhE,OAAQ,SAAAS,EAAOC,QAAQiE,MAAK,SAACC,GAAD,OAAOA,WAA3B,IAA+BZ,OAAQ,KACjExD,EAAMV,OAAOiE,OAAO/D,MAApB,SAA4BS,EAAOC,QAAQiE,MAAK,SAACC,GAAD,OAAOA,WAAvD,EAA4B,EAA+Bb,QAG7Dc,iBAAkB,SAACrE,EAAuBC,GACxCD,EAAMV,OAAOwE,MAAMtE,MAAQS,EAAOC,QAAQ/J,KAAc,SAACmO,GAAD,gBAAa,CACnEtO,GAAIiO,OAAOK,EAAOtO,IAClBkO,MAAOD,OAAM,MAACK,GAAD,SAACA,EAAQC,gBAAT,SAAC,EAAuBJ,MAAK,qBAAGnO,YAAhC,EAAC,EAA6CA,IAC3D6L,WAAYoC,OAAM,MAACK,GAAD,SAACA,EAAQE,WAAT,EAAC,EAAc3C,iBAIrCxB,QAAS,SAACL,EAAuBC,GACD,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDhE,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC1FVD,GAAqC,CAChDC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACN1B,KAAM,CACJ4B,MAAO,GACPC,MAAO,MAET2B,KAAM,CACJ5B,MAAO,KACPC,MAAO,MAETgF,SAAU,CACRjF,MAAO,KACPC,MAAO,MAETiF,qBAAsB,CACpBlF,OAAO,EACPC,MAAO,MAETkF,SAAU,CACRnF,OAAO,EACPC,MAAO,MAET8D,OAAQ,CACN/D,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,mBACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAA6BC,GACP,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMV,OAAOmF,SAASjF,MAAQS,EAAOC,QAAQuE,UAAY,EACzDzE,EAAMV,OAAO8B,KAAK5B,MAAQS,EAAOC,QAAQkB,MAAQ,EACjDpB,EAAMV,OAAOoF,qBAAqBlF,MAAQS,EAAOC,QAAQwE,uBAAwB,EACjF1E,EAAMV,OAAO1B,KAAK4B,MAAQS,EAAOC,QAAQtC,MAAQ,KAIrDX,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SCrEVD,GAA+B,CAC1CC,SAAU,KACVC,MAAM,EACNiB,WAAY,CACVd,MAAO,KACPC,MAAO,MAETH,OAAQ,CACNuC,WAAY,CACVrC,MAAO,GACPC,MAAO,MAETqC,MAAO,CACLtC,MAAO,GACPC,MAAO,MAETsC,MAAO,CACLvC,MAAO,GACPC,MAAO,MAET7B,KAAM,CACJ4B,MAAO,KACPC,MAAO,MAETmF,KAAM,CACJpF,MAAO,GACPC,MAAO,MAETuC,QAAS,CACPxC,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,aACNuB,gBACAW,SAAU,CACRmC,cAAe,SAACjC,EAAuBC,GACrCD,EAAMM,WAAWd,MAAQS,EAAOC,SAElCH,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAuBC,GAKvB,IAAD,EAJuB,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbW,EAAMM,WAAWd,OAAQ,SAAAS,EAAOC,QAAQ8B,cAAf,IAAwB1B,aAAc,KAC/DM,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDhE,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SClFVD,GAA2C,CACtDC,SAAU,KACVC,MAAM,EACNC,OAAQ,CACN1D,QAAS,CACP4D,MAAO,KACPC,MAAO,MAEToF,YAAa,CACXrF,MAAO,KACPC,MAAO,MAETqF,cAAe,CACbtF,MAAO,KACPC,MAAO,MAETsF,gBAAiB,CACfvF,MAAO,KACPC,MAAO,MAETuF,MAAO,CACLxF,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,gBACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KACIW,KAASH,EAAMV,SACjBU,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,OAGhCW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEIU,KAASH,GAAS,UAAWA,EAAMV,OAAOa,GAC5CH,EAAMV,OAAOa,GAAOV,MAAQA,EAE5BnI,QAAQmI,MAAM,uBAAwBU,IAI1CE,QAAS,SACPL,EACAC,GAE8B,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMZ,SAAW,KACjBY,EAAMV,OAASH,GAAaG,SAE5BU,EAAMZ,SAAWa,EAAOC,QACxBF,EAAMX,MAAO,EACbuB,OAAOC,KAAKZ,EAAOC,SAASY,SAAQ,SAACC,GACnC,IAAMC,EAAaD,EACnB,GAAIC,KAAchB,EAAMV,OAAQ,CAC9B,IAAM2B,EAAWD,EACjBhB,EAAMV,OAAO2B,GAAUzB,MAAQS,EAAOC,QAAQe,SAMtDhE,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,OAC5BU,EAAMZ,SAAW,SC3EVD,GAAiC,CAC5CE,MAAM,EACNC,OAAQ,CACNkF,KAAM,CACJhF,MAAO,KACPC,MAAO,MAETwF,aAAc,CACZzF,OAAO,EACPC,MAAO,MAETgE,IAAK,CACHjE,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,mBACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,GAE9BY,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAAyBC,GACH,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMV,OAASH,GAAaG,SAE5BU,EAAMV,OAAOkF,KAAKhF,MAAQS,EAAOC,QACjCF,EAAMX,MAAO,IAIjBpC,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,WCzDrBH,GAAqC,CAChDE,MAAM,EACN6F,UAAU,EACV5F,OAAQ,CACN6F,SAAU,CACR3F,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,uBACNuB,gBACAW,SAAU,CACRC,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,GAE9BY,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BY,QAAS,SAACL,EAA6BC,GACP,mBAAnBA,EAAOC,SAChBF,EAAMX,KAAOY,EAAOC,QACpBF,EAAMV,OAASH,GAAaG,SAE5BU,EAAMV,OAAO6F,SAAS3F,MAAQS,EAAOC,QACrCF,EAAMX,MAAO,IAIjB6F,SAAU,SAAClF,EAA6BC,GACtCD,EAAMkF,cAA8BnN,IAAnBkI,EAAOC,SAAwBD,EAAOC,SAGzDjD,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,WCxBrBQ,GAAW,CACtBsF,QAASA,GACTD,SAAUA,GACVxB,aAAcA,GACd0B,MAAOA,GACPC,MAAOA,GACP9B,KAAMA,GACN7B,MAAOA,GACP8B,IAAKA,GACL8B,cAAeA,GACfC,sBAAuBA,GACvBC,SAAUA,GACVC,cAAeA,GACfhC,WAAYA,GACZc,KAAMA,GACNmB,WAAYA,GACZC,eAAgBA,GAChBC,QAASA,IC/CE1G,GAAiC,CAC5C2G,iBAAiB,EACjBC,WAAY,IAGClG,eAAY,CACzBjC,KAAM,eACNuB,gBACAW,SAAU,CACRkG,cAAe,SAAChG,EAAyBC,GACvCD,EAAM+F,WAAa9F,EAAOC,SAG5B+F,iBAAkB,SAACjG,EAAyBC,GAC1CD,EAAM8F,gBAAkB7F,EAAOC,SAGjCjD,MAAO,SAAC+C,GACNA,EAAM8F,gBAAkB3G,GAAa2G,gBACrC9F,EAAM+F,WAAa5G,GAAa4G,eCXzB5G,GAAe,CAC1BG,OAAQ,CACNwC,MAAO,CACLtC,MAAO,GACPC,MAAO,MAETyG,SAAU,CACR1G,MAAO,GACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,QACNuB,gBACAW,SAAU,CACRqG,SAAU,SAACnG,EAA0BC,GACnCD,EAAMV,OAAOwC,MAAMtC,MAAQS,EAAOC,SAEpCkG,YAAa,SAACpG,EAA0BC,GACtCD,EAAMV,OAAO4G,SAAS1G,MAAQS,EAAOC,SAEvCmG,cAAe,SAACrG,EAA0BC,GACxCD,EAAMV,OAAOwC,MAAMrC,MAAQQ,EAAOC,SAEpCoG,iBAAkB,SAACtG,EAA0BC,GAC3CD,EAAMV,OAAO4G,SAASzG,MAAQQ,EAAOC,SAEvCjD,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,WCnCrBH,GAAqC,CAChD2G,iBAAiB,EACjBS,cAAe,GACfR,WAAY,GACZS,QAAS,SAGI3G,eAAY,CACzBjC,KAAM,iBACNuB,gBACAW,SAAU,CACR2G,YAAa,SAACzG,EAA6BC,GACzCD,EAAMuG,cAAgBtG,EAAOC,SAE/B8F,cAAe,SAAChG,EAA6BC,GAC3CD,EAAM+F,WAAa9F,EAAOC,SAG5B+F,iBAAkB,SAACjG,EAA6BC,GAC9CD,EAAM8F,gBAAkB7F,EAAOC,SAGjCwG,gBAAiB,SAAC1G,EAA6BC,GAC7CD,EAAMwG,QAAUvG,EAAOC,SAGzBjD,MAAO,SAAC+C,GACNA,EAAM8F,gBAAkB3G,GAAa2G,gBACrC9F,EAAM+F,WAAa5G,GAAa4G,eCDzB5G,GAAe,CAC1BmB,WAAY,KACZhB,OAAQ,CACNwC,MAAO,CACLtC,MAAO,GACPC,MAAO,MAETyG,SAAU,CACR1G,MAAO,GACPC,MAAO,MAETkH,qBAAsB,CACpBnH,MAAO,GACPC,MAAO,MAEToC,WAAY,CACVrC,MAAO,GACPC,MAAO,MAET7B,KAAM,CACJ4B,MAAO,GACPC,MAAO,MAETsC,MAAO,CACLvC,MAAO,GACPC,MAAO,MAETuC,QAAS,CACPxC,MAAO,KACPC,MAAO,QAKEI,eAAY,CACzBjC,KAAM,QACNuB,gBACAW,SAAU,CACRmC,cAAe,SAACjC,EAA2BC,GACzCD,EAAMM,WAAaL,EAAOC,SAE5BH,SAAU,SACRC,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcX,EAAd,KAEAQ,EAAMV,OAAOa,GAAOX,MAAQA,EAC5BQ,EAAMV,OAAOa,GAAOV,MAAQ,MAE9BW,cAAe,SACbJ,EACAC,GAEA,UAAuBA,EAAOC,QAA9B,GAAOC,EAAP,KAAcV,EAAd,KAEAO,EAAMV,OAAOa,GAAOV,MAAQA,GAG9BxC,MAAO,SAAC+C,GACNA,EAAMV,OAASH,GAAaG,WCtFrBQ,GAAW,CACtB2F,SAAUA,GACV3B,MAAOA,GACP8C,MAAOA,GACPC,OAAQA,ICRG1H,GAA6B,CACxCE,MAAM,EACNyH,MAAO,MAGMjH,eAAY,CACzBjC,KAAM,qBACNuB,gBACAW,SAAU,CACRO,QAAS,SAACL,EAAqBC,GAC7BD,EAAMX,MAAO,EACbW,EAAM8G,MAAQ7G,EAAOC,SAEvB6G,MAAO,SAAC/G,GACNA,EAAMX,MAAO,M,ioBCXnB,IAAM2H,GAA2B,YAC5BC,MACAC,MAF4B,IAG/BC,OAAO,GAAD,SACDF,KAAkBE,QAClBD,KAAuBC,QAFtB,IAGJC,QAAS,cAGPC,GAAiB,YAClBC,MACAC,MAFkB,IAGrBJ,OAAO,GAAD,SACDG,KAAeH,QACfI,KAAoBJ,QAFnB,IAGJC,QAAS,cA+BAjI,GAA6B,CACxCqI,YAAa,KACbC,gBAAiB,KACjBC,kBAAmB,KACnBC,YAAa,GACbC,YAAa,KACbC,cAAe,KACfC,MAAOd,GACPe,QAAQ,GAAD,MACFf,GAAqBG,QADnB,IAELC,QAAS,CACPY,KAAM,UACNC,KAAM,UACNC,MAAO,WAETC,OAAQ,CACNH,KAAM,UACNC,KAAM,UACNC,MAAO,aAGXE,YAAY,GAECvI,eAAY,CACzBjC,KAAM,SACNuB,gBACAW,SAAU,CACRuI,eAAgB,SAACrI,EAAqBC,GACpCD,EAAM4H,YAAc3H,EAAOC,SAE7BoI,QAAS,SAACtI,EAAqBC,GAC7BD,EAAMwH,YAAcvH,EAAOC,SAE7BqI,iBAAkB,SAACvI,EAAqBC,GACtCD,EAAM6H,cAAgB5H,EAAOC,SAE/BsI,eAAgB,SAACxI,EAAqBC,GACpCD,EAAM2H,YAAc1H,EAAOC,SAE7BuI,gBAAiB,SAACzI,EAAqBC,GACrCD,EAAM8H,MAAMX,OAAOC,QAAUnH,EAAOC,QACpCF,EAAM+H,QAAN,SACK/H,EAAM8H,MAAMX,QADjB,IAEEC,QAAS,CACPa,KAAMjN,KAAMgF,EAAM8H,MAAMX,OAAOC,SAASsB,OAAO,IAAKC,MACpDX,KAAMhI,EAAM8H,MAAMX,OAAOC,QACzBc,MAAOlN,KAAMgF,EAAM8H,MAAMX,OAAOC,SAASwB,QAAQ,IAAKD,OAExDR,OAAQ,CACNF,KAAMjN,KAAMgF,EAAM8H,MAAMX,OAAOgB,QAAQO,OAAO,IAAKC,MACnDX,KAAMhI,EAAM8H,MAAMX,OAAOgB,OACzBD,MAAOlN,KAAMgF,EAAM8H,MAAMX,OAAOgB,QAAQS,QAAQ,IAAKD,UAI3DE,eAAgB,SAAC7I,EAAqBC,GACpCD,EAAM8H,MAAMX,OAAOgB,OAASlI,EAAOC,QACnCF,EAAM+H,QAAN,SACK/H,EAAM8H,MAAMX,QADjB,IAEEC,QAAS,CACPa,KAAMjN,KAAMgF,EAAM8H,MAAMX,OAAOC,SAASsB,OAAO,IAAKC,MACpDX,KAAMhI,EAAM8H,MAAMX,OAAOC,QACzBc,MAAOlN,KAAMgF,EAAM8H,MAAMX,OAAOC,SAASwB,QAAQ,IAAKD,OAExDR,OAAQ,CACNF,KAAMjN,KAAMgF,EAAM8H,MAAMX,OAAOgB,QAAQO,OAAO,IAAKC,MACnDX,KAAMhI,EAAM8H,MAAMX,OAAOgB,OACzBD,MAAOlN,KAAMgF,EAAM8H,MAAMX,OAAOgB,QAAQS,QAAQ,IAAKD,UAI3DG,YAAa,SAAC9I,EAAqBC,GAA4C,IAAD,QAInC,EAIE,GAP3CD,EAAMyH,gBAAkBxH,EAAOC,QAC/BF,EAAM0H,kBAAoB,SAAAzH,EAAOC,UAAP,EAAgBlK,GAAKiO,OAAM,SAAChE,EAAOC,cAAR,EAAC,EAAgBlK,IAAM,KAE5E,SAAIgK,EAAMyH,kBAAN,EAAuBjH,gBACzBR,EAAM8H,MAAMX,OAAOC,QAAnB,SAA6BpH,EAAMyH,sBAAnC,EAA6B,EAAuBjH,cAGtD,SAAIR,EAAMyH,kBAAN,EAAuBlH,iBACzBP,EAAM8H,MAAMX,OAAOgB,OAAnB,SAA4BnI,EAAMyH,sBAAlC,EAA4B,EAAuBlH,gBAErDP,EAAM+H,QAAN,SACK/H,EAAM8H,MAAMX,QADjB,IAEEC,QAAS,CACPa,KAAMjN,KAAMgF,EAAM8H,MAAMX,OAAOC,SAASsB,OAAO,IAAKC,MACpDX,KAAMhI,EAAM8H,MAAMX,OAAOC,QACzBc,MAAOlN,KAAMgF,EAAM8H,MAAMX,OAAOC,SAASwB,QAAQ,IAAKD,OAExDR,OAAQ,CACNF,KAAMjN,KAAMgF,EAAM8H,MAAMX,OAAOgB,QAAQO,OAAO,IAAKC,MACnDX,KAAMhI,EAAM8H,MAAMX,OAAOgB,OACzBD,MAAOlN,KAAMgF,EAAM8H,MAAMX,OAAOgB,QAAQS,QAAQ,IAAKD,UAI3DI,eAAgB,SAAC/I,GAAyB,IAAD,IAIE,EAIE,GAP3CA,EAAMoI,YAAcpI,EAAMoI,WAC1BpI,EAAM8H,MAAQ9H,EAAMoI,WAAaf,GAAoBL,GAErD,SAAIhH,EAAMyH,kBAAN,EAAuBjH,gBACzBR,EAAM8H,MAAMX,OAAOC,QAAnB,SAA6BpH,EAAMyH,sBAAnC,EAA6B,EAAuBjH,cAGtD,SAAIR,EAAMyH,kBAAN,EAAuBlH,iBACzBP,EAAM8H,MAAMX,OAAOgB,OAAnB,SAA4BnI,EAAMyH,sBAAlC,EAA4B,EAAuBlH,gBAGrDP,EAAM+H,QAAN,SACK/H,EAAM8H,MAAMX,QADjB,IAEEC,QAAS,CACPa,KAAMjN,KAAMgF,EAAM8H,MAAMX,OAAOC,SAASsB,OAAO,IAAKC,MACpDX,KAAMhI,EAAM8H,MAAMX,OAAOC,QACzBc,MAAOlN,KAAMgF,EAAM8H,MAAMX,OAAOC,SAASwB,QAAQ,IAAKD,OAExDR,OAAQ,CACNF,KAAMjN,KAAMgF,EAAM8H,MAAMX,OAAOgB,QAAQO,OAAO,IAAKC,MACnDX,KAAMhI,EAAM8H,MAAMX,OAAOgB,OACzBD,MAAOlN,KAAMgF,EAAM8H,MAAMX,OAAOgB,QAAQS,QAAQ,IAAKD,UAI3DK,OAAQ,SAAChJ,GACPY,OAAOC,KAAK1B,IAAc2B,SAAQ,SAACC,GAEjC,GADmBA,KACDf,EAAO,CACvB,IAAMiB,EAFWF,EAKjBf,EALiBe,GAKG5B,GAAa8B,W,qBC3K9B9B,GAAe,CAAE8J,MAAO,IACtBpJ,eAAY,CACzBjC,KAAM,gBACNuB,gBACAW,SAAU,CACRoJ,aAAc,SAAClJ,GACb,IAAYmJ,EAAZ,KAAwBnJ,EAAMiJ,OAA9B,SACAjJ,EAAMiJ,MAAQE,GAEhBC,aAAc,SAACpJ,EAA2BC,GACxCD,EAAMiJ,MAAMI,KAAKpJ,EAAOC,a,qkBCRvB,IAQDoJ,GAAgB,CACpBvI,IAAK,sBACLwI,QAEkB,QAAhBrL,IAASC,GAAwBC,EAAQ,KAA6BoL,QAAUC,IAClFC,UAAW,CAAC,WAIRC,GAAiB/I,OAAOC,KAAK+I,IAASC,QAE1C,SAACC,EAAK/I,GAAN,OACG6I,IAAa7I,KAAO6I,GAArB,SAESE,GAFT,UAEe/I,EAAM6I,GAAQ7I,GAA6BgJ,UADtDD,IAEN,IAKIE,GAAepJ,OAAOC,KAAKoJ,IAAOJ,QACtC,SAACC,EAAK/I,GAAN,OACGkJ,IAAWlJ,KAAOkJ,GAAnB,SAAuCH,GAAvC,UAA6C/I,EAAMkJ,GAAMlJ,GAA2BgJ,UAAxDD,IAC9B,IAKWI,GAAgBtJ,OAAOC,KAAK+I,IAASC,QAChD,SAACC,EAAK/I,GAAN,OACIA,KAAO6I,GAAT,SAA+BE,GAA/B,UAAqC/I,EAAM6I,GAAQ7I,GAA6BoJ,UAA5DL,IACtB,IAaWK,GAAU,CACrBF,MAVyBrJ,OAAOC,KAAKoJ,IAAOJ,QAC5C,SAACC,EAAK/I,GAAN,OACIA,KAAOkJ,GAAT,SAA6BH,GAA7B,UAAmC/I,EAAMkJ,GAAMlJ,GAA2BoJ,UAAxDL,IACpB,IAQAF,QAASM,GACTE,OAAQC,GAAYF,QACpBG,cAAeC,GAAkBJ,QACjCK,YAAaC,GAAiBN,SAGnBO,GAAcC,YAAgB,CACzCP,OAAQC,GAAYN,QACpBO,cAAeC,GAAkBR,QACjCS,YAAaC,GAAiBV,QAC9BH,QAASe,YAAgBhB,IACzBM,MAAOU,YAAgBX,MAEZY,GAAmBC,YAAevB,GAAeoB,IACjDI,GAAQC,YAAe,CAClChB,QAASa,GACTI,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAAC,oBAEnBC,gBAAgB,MAIPC,GAAYC,YAAaR,IAIzBS,GAAiB,kBAAMC,eACvBC,GAAkDC,I,qkBCvFhD,SAASC,GAAUxW,GAChC,IAAQI,EAAaJ,EAAbI,SACR,EAA8Ba,YAAe,GAA7C,WAAOwV,EAAP,KAAgBC,EAAhB,KACA,EAA8BzV,YAAe,GAA7C,WAAO0V,EAAP,KAAgBC,EAAhB,KACMC,EAAY5V,SAAyB,MACrC6V,EAAWV,KAEXW,EAAoB9V,eAAkB,0BAAAG,EAAAC,OAAA,mDACtB,QAAhB0H,IAASC,GAD6B,mEAAA5H,EAAA,MAIZ4V,OAJY,kBAIlCC,aAGNP,GAAW,GAP6B,8DASzC,IAEGQ,EAAWjW,eAAkB,4BAAAG,EAAAC,OAAA,mDACb,QAAhB0H,IAASC,GADoB,wDAIjC,SAAA6N,EAAUvV,UAAV,EAAmB6V,OAJc,WAAA/V,EAAA,MAKT4V,OALS,sBAKzBI,MALyB,oCAAAhW,EAAA,MAOzB4V,OAPyB,QAQ/BJ,GAAW,GACXF,GAAW,GACXI,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAAS,2BAVxB,+DAYhC,CAACqM,IAMJ,OAJA7V,aAAgB,WACd8V,MACC,CAACA,IAGF,gBAAC/O,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,KAAM,IAClBjX,EACAqW,GACC,gBAAC,IAAD,CAAUa,KAAK,OAAO5U,MAAOqC,GAAOwS,KAAMC,UAAW,IACnD,gBAAC7O,EAAA,EAAD,CAAMjG,MAAOqC,GAAO0S,OAApB,6BACA,gBAAC,EAAD,CACEC,IAAKb,EACLnU,MAAO,CACLzC,MAAO,IACPC,OAAQ,KAGVyX,OAAQ1O,EAAQ,OAElB,gBAAC2O,EAAA,EAAD,CACEC,SAAUlB,EACVA,QAASA,EACT9Q,MAAM,UACNnD,MAAOqC,GAAO+S,OACdC,KAAK,WACLC,QAAS,kBAAMd,MANjB,qBAgBV,IAAMnS,GAASC,IAAWC,OAAO,CAC/BsS,KAAK,SACAvS,IAAWiT,oBADZ,IAEF7S,WAAY,SACZiB,eAAgB,WAElBoR,MAAO,CACL5R,MAAO,QACPD,SAAU,GACVsS,WAAY,MACZ/X,SAAU,WACV2C,IAAK,KAEPgV,OAAQ,CACN3X,SAAU,WACVgY,OAAQ,IACRhS,YAAa,QACbxD,aAAc,M,2oBCpFH,SAASyV,GAAT,GAA8D,IAA5ChY,EAA2C,EAA3CA,SACzBiY,EAAgBpX,WACpB,kCACE,IAAIqX,KAAc,CAChBC,eAAe,EACfC,SAAU,GACVC,IACEzB,OAAA,SAAyB0B,IAAUpI,WAAnC,SAAyB,EAAoBJ,YAA7C,EAAyB,EAA2ByI,MAApD,SACID,IAAUpI,WADd,SACI,EAAoBJ,YADxB,EACI,EAA2ByI,KAAK3B,KADpC,SAEI0B,IAAUpI,WAFd,SAEI,EAAoBJ,YAFxB,EAEI,EAA2B0I,QAErC,IAEInG,EAAc6D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAOxC,eACnDqE,EAAWV,KAEX0C,EAAY7X,WAChB,kBACE8X,cAAQ,YAA2D,IAAxDC,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,UAA0B,EAAfC,SACjD,SAAIH,KAAeI,MAAK,SAAClL,GAAD,YAAkC,0BAAzB,SAAAA,EAAImL,iBAAJ,IAAgBC,SAQ/C,OAPAxC,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,kBACR8O,QAAS,gBAGbzC,EAAS9B,GAAQC,OAAOpB,UAItBmF,GAA0C,gBAAzBQ,ovCAAYC,UAC/BT,EAAcrN,SAAQ,SAACuC,GACrB,IAAQzD,EAA0CyD,EAA1CzD,QAASiP,EAAiCxL,EAAjCwL,UAAWC,EAAsBzL,EAAtByL,KAAMlR,EAAgByF,EAAhBzF,KAAMmR,EAAU1L,EAAV0L,MACxC9C,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,oBAAqBA,EAAtB,KAAkCsD,KAAK8L,UAAUH,GAAjD,KAAgEC,EACvEJ,QAAS,WAGbpX,QAAQmI,MAAR,oBACsBG,EADtB,KACkCsD,KAAK8L,UACnCH,GAFJ,KAGQC,EAHR,KAGiBlR,EAHjB,KAG0BmR,GAE1BzX,QAAQC,IAAI2L,KAAK8L,UAAU3L,IAC3B/L,QAAQC,IAAI8W,MAGZD,GAAyC,gBAAzBO,ovCAAYC,UAC9B3C,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,oBAAqBwO,EAC7BM,QAAS,gBAKnB,CAACzC,IAGGgD,EAAW7Y,WACf,kBACE8Y,cAAW,SAACC,EAAD,GACT,MAAO,CACLC,QAAQ,SAFmB,EAAdA,SAII,MAAXxH,KAAayH,YAAb,IAEEC,cAAc,UAAW1H,EAAYyH,YACrC,eAAgBzH,EAAYyH,YAC5B,aAAczH,EAAY2H,WACvB3H,GAEL,UAIZ,CAACA,IAGG4H,EAASpZ,WACb,kBACE,IAAIqZ,KAAa,CACfC,KAAMzB,EAAU0B,OAAOV,GAAUU,OAAO,IAAIC,MAAaD,OAAOnC,GAChEqC,MAAO,IAAIC,SAEf,CAACb,EAAUhB,EAAWT,IAGxB,OAAO,gBAACuC,GAAA,EAAD,CAAgBP,OAAQA,GAASja,G,cCjG3B,SAASya,KACtB,MAAwBvE,IAAe,SAACuC,GAAD,OAAUA,EAAKxD,eAA9CnL,EAAR,EAAQA,KAAMyH,EAAd,EAAcA,MACRmF,EAAWV,KAEjB,OAAQlM,GAASyH,EACf,gBAAC,KAAD,CAAUmJ,QAASnJ,EAAOoJ,eAAgB,kBAAMjE,EAAS9B,GAAQK,YAAYzD,YADtD,K,yoBCRpB,IASQ,IACbmB,MAAO,CACLiI,KAAM,OACNC,WAAY,OACZ3D,KAb0B,UAc1B4D,eAAgB,OAChBC,gBAf0B,UAgB1BC,QAdwB,UAexB9Q,MAdsB,UAetB+Q,QAdwB,UAexBC,KAdqB,WAgBvBxI,KAAM,CACJkI,KAAM,OACNC,WAAY,OACZ3D,KAvByB,OAwBzB4D,eAAgB,OAChBC,gBAzByB,OA0BzBC,QAzBwB,UA0BxB9Q,MAzBsB,UA0BtB+Q,QAzBwB,UA0BxBC,KAzBqB,YCIVC,OANf,WAGE,OAAOvJ,GAAM,O,+kBCGf,IAEKwJ,GAFGxG,GAAYyG,GAAZzG,S,SAEHwG,O,qBAAAA,I,qBAAAA,I,oBAAAA,Q,KAKL,IAiEMzW,GAASC,IAAWC,OAAO,CAC/B4R,UAAW,CACT3W,OAAQ,IACRD,MAAO,OAGIyb,GAvEO,WACpB,IAAM7Q,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK1D,iBACtC2B,EAAWV,KACXxD,EAAU2I,KACVI,EAAmB1a,SAAyB,MAClD,EAA4CA,WAA+Bua,GAAeI,QAA1F,WAAOC,EAAP,KAAuBC,EAAvB,KAEMC,EAAe9a,WACnB,kBAAO4J,EAAMiJ,MAAMkI,OAASnR,EAAMiJ,MAAM,GAAK,OAC7C,CAACjJ,EAAMiJ,QAET7S,aAAgB,WACV4a,IAAmBL,GAAeI,QAAoC,aAAd,MAAZG,OAAA,EAAAA,EAAcxC,UAC5DuC,EAAkBN,GAAeS,WAElC,CAACJ,EAAD,MAAiBE,OAAjB,EAAiBA,EAAcxC,UAElC,IAAM2C,EAAe,CACnBZ,KAAM,CAAEnT,gBAAiByK,EAAQ0I,MACjCF,QAAS,CAAEjT,gBAAiByK,EAAQwI,SACpC9Q,MAAO,CAAEnC,gBAAiByK,EAAQtI,OAClC+Q,QAAS,CAAElT,gBAAiByK,EAAQyI,UAGtC,OACE,gCACGQ,IAAmBL,GAAeS,SACjC,gBAACjU,EAAA,QAAD,CACEtF,MAAK,SACAsC,IAAWiT,oBADX,IAEH7S,WAAY,SACZiB,eAAgB,WAElBnD,cAAc,QAEd,gBAAC,EAAD,CACEiE,MAAM,EACNgV,UAAQ,EACRC,kBAAmB,WACjBN,EAAkBN,GAAea,SACjCC,YAAW,WACTxF,EAAS9B,GAAQjB,gBACjB+H,EAAkBN,GAAeI,UAChC,MAELlE,IAAKiE,EACLjZ,MAAOqC,GAAO8R,UACdc,OAAQ4E,MAId,gBAACC,GAAA,EAAD,CACEC,OAAO,mBACPC,UAAWX,EACXY,UAAW,kBAAM7F,EAAS9B,GAAQjB,iBAClC1M,SAAU,IACVyD,OAAM,MAAEiR,OAAF,EAAEA,EAAcjR,OACtBpI,QAAQ,MAACqZ,MAAcxC,UAAW2C,EAAaH,EAAaxC,UAN9D,MAQGwC,OARH,EAQGA,EAActR,W,UChCRrH,GAxCiB,CAC9BwZ,SAAU,CACRC,KAAgB,KAChB,2BACA,mCACA,kBACA,0BAEFC,OAAQ,CACNrI,QAAS,CACPsI,QAAS,CACPpD,KAAM,YAERqD,cAAe,CACbvI,QAAS,CACPwI,WAAY,QACZC,WAAY,iBACZC,cAAe,WACfC,cAAe,YACfC,YAAa,oBAGjBC,MAAO,CACL7I,QAAS,CACP8I,gBAAiB,aACjBC,qBAAsB,qBAG1BC,gBAAiB,CACfhJ,QAAS,CACPiJ,YAAa,SACbC,aAAc,e,6BC5BT,SAASC,GAAT,GAEuC,IADpDC,EACmD,EADnDA,WAEA,OACE,gBAAC7V,EAAA,QAAD,CAAMtF,MAAOqC,GAAOG,WAClB,gBAACyD,EAAA,EAAD,CAAMjG,MAAOqC,GAAO0S,OAApB,8BACA,gBAACqG,GAAA,EAAD,CAAkB9F,QAAS,kBAAM6F,EAAWE,QAAQ,SAASrb,MAAOqC,GAAOwV,MACzE,gBAAC5R,EAAA,EAAD,CAAMjG,MAAOqC,GAAOiZ,UAApB,wBAMR,I,GAAMjZ,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNlP,gBAAiB,OACjB/C,WAAY,SACZiB,eAAgB,SAChB4X,QAAS,IAEXxG,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdqC,KAAM,CACJ2D,UAAW,GACXC,gBAAiB,IAEnBH,SAAU,CACRpY,SAAU,GACVC,MAAO,a,qsBCVJ,SAASuY,GAAW3T,GACzB,MAAO,CACLA,UACA4T,QAAS,SAIN,SAASC,GAAQ7T,GACtB,MAAO,CACLA,UACA4T,QAAS,IAAIE,OAEX,2JAKC,SAASC,GAAU/T,GACxB,MAAO,CACLA,UACA4T,QAAS,QAIN,SAASI,GACdhU,EACAiU,GAEA,MAAO,CACLjU,UACAiU,YAIG,SAASC,GAOdC,EACAxb,GAeA,IAAQyb,EAAqDzb,EAArDyb,WAAYC,EAAyC1b,EAAzC0b,cAA0BC,EAAe3b,EAA1Bqb,UAEnC,OAAO,SACLna,GAEA,IAAQ0a,EAAqC1a,EAArC0a,aAAcC,EAAuB3a,EAAvB2a,UAAWlG,EAAYzU,EAAZyU,QAEjC,EAA8BmG,aAAYN,EAAUta,EAAKsa,UAAzD,WAAOO,EAAP,KAAiBxI,EAAjB,KAAiBA,QAEXyI,EAAkBne,eACtB,SAAC+J,EAAeP,GACd,IAAM4U,EAAiBC,KAAUtU,GAC3BuU,EACJT,GAAiBO,KAAkBP,EAC/BA,EAAc9T,GACdA,EAEM,MAAZgU,KAAY,GAAMO,EAAa9U,KAEjC,CAACuU,IAoEH,MAAO,CACLrI,UACAwI,OAnEele,eACf,SACEue,EACAC,GAFF,yBAAAre,EAAAC,OAAA,8DAKI,IAAIqe,GAAY,EAyBhB,OAvBIX,GACFtT,OAAOC,KAAK8T,GAAW7T,SAAQ,SAAC1I,GAC9B,IAE2C,EAFrC0c,EAAW1c,EAEb0c,KAAavc,EAAQqb,WAAa,MACpC,SAAAM,EAAWY,KAAX,EAAsBhU,SAAQ,SAACiU,GACzBA,EAAUvB,QACPuB,EAAUvB,QAAQwB,KAAlB,IAA0BL,EAAUG,IAAa,OACpDD,GAAY,EAEZN,EAAgBO,EAAoBC,EAAUnV,UAEvCmV,EAAUlB,WAAakB,EAAUlB,SAASc,IACnDE,GAAY,EACZN,EAAgBO,EAAoBC,EAAUnV,UAE9CtI,QAAQC,IAAR,4CAAwDud,WAO1DD,EAGLI,GAjCP,8CAkCWld,GAlCX,kCAAAxB,EAAA,MAqCyB+d,EAAO,IAC1BK,aACGC,KAvCT,UAqCUM,EArCV,OA4CW,OAFDhV,EAAU8T,EAAWkB,EAAOC,QAElC,SAAAjV,EAASkV,cAAT,EAAsBtU,SAAQ,YAAyB,IAAtBX,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACtC2U,EAAgBpU,EAAOP,MAGd,MAAPM,GAAA,SAAAA,EAASmV,UAAT,EAAiBlE,SAAUjD,EAhDnC,wBAiDM,SAAAhO,EAAQmV,SAAR,EAAgBlf,KAAI,SAACyJ,GAAD,OAAasO,EAAQtO,MAjD/C,uBAkDa7H,GAlDb,eAoDQ,MAACmI,GAAD,SAACA,EAASkV,cAAT,EAAsBjE,SAAUjR,GACnCoV,uBAAsB,kBAAMlB,EAAUlU,MArD5C,kBAuDWA,GAvDX,kCAyDW,MAAPgO,KAAU,KAAItO,SAzDlB,sCA2DS7H,GA3DT,mEA6DA,CAACwc,EAAiBD,EAAQpG,EAASkG,MCpKzC,I,GA+DeN,MA/DcyB,aAAH,iiCAkEF,CACtBvB,WAAY,SAACkB,GAAD,OAAYA,EAAOM,YAC/B5B,UAAW,CACT9R,MAAO,CAACyR,GAAW,qBAAsBE,GAAQ,sBACjD7V,KAAM,CAAC2V,GAAW,qBAClBxR,MAAO,CAACwR,GAAW,6BACnB1R,WAAY,CACV0R,GAAW,2BACXI,GAAU,sCACVC,GAAU,8BAA8B,YAAqB,IAAlB/R,EAAiB,EAAjBA,WACzC,OAAOoC,OAAOpC,GAAc,QAIlCoS,cAAe,CACbwB,UAAW,a,qkBC7ER,IAAMC,GAAiBH,aAAH,gmJA0OZ,SAASI,KAAsB,IAAD,sBACrCC,EAAanK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO1C,qBAClDmO,EAAYpK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAOvC,iBAEjDJ,EAAkBqO,aAAgBJ,GAAgB,CACtDf,UAAW,CACTiB,aACAG,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,KAExDC,YAAa,sBAGTC,EAAqBC,GAAsB,CAC/CjC,UAAW,kBAAM,MACjBlG,QAAS,kBAAM,QA4BjB,OAtBA9X,aAAgB,WAAO,IAAD,gBACdkgB,EAAM,MAAG7O,GAAH,SAAGA,EAAiB0N,OAApB,SAAG,EAAuBhQ,WAA1B,SAAG,EAAiCqC,cAApC,SAAG,EAA8ChD,WAAjD,EAAG,EAAoDxO,GAC7DugB,EAAW,MAAG9O,GAAH,SAAGA,EAAiB0N,OAApB,SAAG,EAAuBhQ,WAA1B,SAAG,EAAiCqC,cAApC,SAAG,EAA8ChD,WAAjD,EAAG,EAAoDqR,UAClEW,EAAaX,GAEdpO,EAAgBqE,SAAWrE,EAAgBgP,QAC1CD,GAAcA,IAAeD,GAAeD,GAC9CF,EAAmB9B,OAAO,CACxBte,GAAIiO,OAAOqS,GACXT,UAAWW,MAIhB,CACDX,EADC,MAEDpO,GAFC,SAEDA,EAAiB0N,OAFhB,SAED,EAAuBhQ,WAFtB,SAED,EAAiCqC,cAFhC,SAED,EAA8ChD,WAF7C,EAED,EAAoDqR,UAFnD,MAGDpO,GAHC,SAGDA,EAAiB0N,OAHhB,SAGD,EAAuBhQ,WAHtB,SAGD,EAAiCqC,cAHhC,SAGD,EAA8ChD,WAH7C,EAGD,EAAoDxO,GACpDyR,EAAgBqE,QAChBrE,EAAgBgP,OAChBL,IAGK,SACF3O,GADL,IAEEtC,SAAQ,MAAEsC,GAAF,SAAEA,EAAiB0N,WAAnB,EAAE,EAAuBhQ,SACjCqC,YAAW,MAAEC,GAAF,SAAEA,EAAiB0N,OAAnB,SAAE,EAAuBhQ,eAAzB,EAAE,EAAiCqC,c,guBC3RlD,IAAMkP,GAAkB,GACXC,GAAmCpB,aAAH,wQAmLhCqB,IAjKiCrB,aAAH,ymFAgKrCoB,IACuCpB,aAAH,yOAgD7BsB,IA7B8BtB,aAAH,idA4BlCqB,IACyBrB,aAAH,0hBA8CfuB,GAAkBvB,aAAH,0eA6CtBsB,IACOE,GAAyBxB,aAAH,4bAkCtByB,GAAmBzB,aAAH,u1BAmEvBwB,IACOE,GAAsB1B,aAAH,0VA8CzB,IAAM2B,GAAsB3B,aAAH,iZAe1ByB,IA+BC,IAAMG,GAAuB5B,aAAH,wPAa3BuB,IA4B+BvB,aAAH,4dAsD3B,IAAM6B,GAA+B7B,aAAH,yQAanCqB,IA8B0CrB,aAAH,8rCAmGtC,I,GAAM8B,GAAiC9B,aAAH,yRC9uB5B,SAAS+B,GAAeC,GAAkC,IAAD,IAC9D7P,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBAER,EDkxBK,SAA4C8P,GACzC,IAAMjf,EAAO,SAAOme,IAAmBc,GACvC,OAAOjK,KAA2G8J,GAAgC9e,GCpxB9Hkf,CAAmC,CAC7D9C,UAAW,CACTiB,WAAY3R,OAAOyD,MAFvB,WAAOgQ,EAAP,KAAkBvC,EAAlB,KAAkBA,KAMlB/e,aAAgB,WACVsR,GACFgQ,EAAQ,CACN/C,UAAW,CACTiB,WAAY3R,OAAOyD,QAIxB,CAACA,EAAmBgQ,IAEvB,IAAM/P,GAAkB,MAAJwN,GAAA,SAAAA,EAAMhQ,WAAN,WAAgBqC,kBAAhB,IAA6BG,cAAe,GAChE,OAAkB,MAAXA,OAAA,EAAAA,EAAagQ,SAASJ,MAA6B,ECRrD,I,GAAMK,GAAwBrC,aAAH,6bAyBnB,SAASsC,GAAQ1iB,GAAwB,IAAD,UAC7C2iB,EAAkE3iB,EAAlE2iB,MAAcC,EAAoD5iB,EAA3D6F,MAAsBsC,EAAqCnI,EAArCmI,gBAAiB0a,EAAoB7iB,EAApB6iB,SAAUxY,EAAUrK,EAAVqK,MAC1DsI,EAAQmQ,eACRjd,EAAQ+c,GAAiBjQ,EAAMX,OAAO+Q,UAC5C,EAAkC9hB,YAAe,GAAjD,WAAO+hB,EAAP,KAAmBC,EAAnB,KACQ1Q,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBAEAyN,EAASW,aAAgB8B,GAAuB,CACtDjD,UAAW,CACTiB,WAAY3R,OAAOyD,GACnBC,YAAa,CAAC,eAHVwN,KAQR,OAFgBmC,GAAezY,EAAWwZ,YAmBxC,gBAACC,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAe1d,EACfmS,QAAS,kBAAMiL,GAAY,IAC3BvgB,MAAO,CACL8gB,iBAAkB,EAClBrb,kBACAjI,OAAQyiB,EAAQ,QAAK/f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExB6gB,UAAW,CAAE5d,QAAOD,SAAU+c,EAAQ,QAAK/f,IAErC,MAALyH,KAAOxJ,GAAP,MAAYwJ,GAAZ,SAAYA,EAAOgF,WAAnB,EAAY,EAAa5G,KAAO,WAlBvC,MAsBGuX,GAtBH,SAsBGA,EAAMhQ,WAtBT,SAsBG,EAAgB0T,gBAtBnB,SAsBG,EAA+BC,YAtBlC,EAsBG,EAAsC3iB,KAAI,SAAC4iB,GAAD,iBACzC,gBAACT,GAAA,EAAKU,KAAN,CACEjY,IAAG,mBAAcgY,GAAd,SAAcA,EAAME,WAApB,EAAc,EAAYjjB,IAC7BmX,QAAS,WACPiL,GAAY,GACZ,MAAIW,KAAME,MACRjB,EAAQ,MAACe,OAAD,EAACA,EAAME,OAGnBrM,MAAK,MAAEmM,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAYzU,WAAd,EAAE,EAAkB5G,WA/C/B,gBAAC4a,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAe1d,EACfnD,MAAO,CACL8gB,iBAAkB,EAClBrb,kBACAjI,OAAQyiB,EAAQ,QAAK/f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExB6gB,UAAW,CAAE5d,QAAOD,SAAU+c,EAAQ,QAAK/f,KAErC,MAALyH,GAAA,SAAAA,EAAOgF,WAAP,IAAa5G,OAAQ,UCxDb,SAASsb,GAAe/jB,GAA+B,IAAD,IAC3D2iB,EAAyE3iB,EAAzE2iB,MAAcC,EAA2D5iB,EAAlE6F,MAAsBsC,EAA4CnI,EAA5CmI,gBAAiBkC,EAA2BrK,EAA3BqK,MAAOwY,EAAoB7iB,EAApB6iB,SAAUmB,EAAUhkB,EAAVgkB,MACjErR,EAAQmQ,eACRjd,EAAQ+c,GAAiBjQ,EAAMX,OAAO+Q,UAC5C,EAAkC9hB,YAAe,GAAjD,WAAO+hB,EAAP,KAAmBC,EAAnB,KACMgB,EAAU9B,GAAezY,EAAWwZ,YAE1C,OAAQe,EAiBN,gBAACd,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAe1d,EACfnD,MAAO,CACL8gB,iBAAkB,EAClBrb,kBACAjI,OAAQyiB,EAAQ,QAAK/f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExB6gB,UAAW,CAAE5d,QAAOD,SAAU+c,EAAQ,QAAK/f,GAC3CoV,QAAS,kBAAMiM,GAAWhB,GAAY,KAEhC,MAAL5Y,KAAOxJ,GAAP,MAAYwJ,GAAZ,SAAYA,EAAOgF,WAAnB,EAAY,EAAa5G,KAAO,kBAlBvC,MAsBGub,OAtBH,EAsBGA,EAAOhjB,KAAI,SAAC6N,GAAD,eACV,gBAACsU,GAAA,EAAKU,KAAN,CACEjY,IAAG,WAAaiD,EAAKhO,GACrBmX,QAAS,WACPiL,GAAY,GACZ,MAAIpU,KAAML,cACRqU,EAAShU,EAAKL,eAGlBiJ,MAAK,MAAE5I,GAAF,SAAEA,EAAML,eAAR,SAAE,EAAoBa,WAAtB,EAAE,EAA0B5G,WA/CvC,gBAAC4a,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAe1d,EACfnD,MAAO,CACL8gB,iBAAkB,EAClBrb,kBACAjI,OAAQyiB,EAAQ,QAAK/f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExB6gB,UAAW,CAAE5d,QAAOD,SAAU+c,EAAQ,QAAK/f,KAErC,MAALyH,GAAA,SAAAA,EAAOgF,WAAP,IAAa5G,OAAQ,iBCpB5B,I,GAAMyb,GAAuB9D,aAAH,+bAyBX,SAAS+D,GAAUnkB,GAA0B,IAAD,UACjD2iB,EAAkE3iB,EAAlE2iB,MAAcC,EAAoD5iB,EAA3D6F,MAAsBsC,EAAqCnI,EAArCmI,gBAAiB0a,EAAoB7iB,EAApB6iB,SAAUxY,EAAUrK,EAAVqK,MAC1DsI,EAAQmQ,eACRjd,EAAQ+c,GAAiBjQ,EAAMX,OAAO+Q,UAC5C,EAAkC9hB,YAAe,GAAjD,WAAO+hB,EAAP,KAAmBC,EAAnB,KACQ1Q,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBAEAyN,EAASW,aAAgBuD,GAAsB,CACrD1E,UAAW,CACTiB,WAAYlO,EACZC,YAAa,CAAC,iBAHVwN,KAQR,OAFgBmC,GAAezY,EAAWwZ,YAmBxC,gBAACC,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,kBACLC,cAAe1d,EACfnD,MAAO,CACL8gB,iBAAkB,EAClBrb,kBACAjI,OAAQyiB,EAAQ,QAAK/f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExB6gB,UAAW,CAAE5d,QAAOD,SAAU+c,EAAQ,QAAK/f,GAC3CoV,QAAS,kBAAMiL,GAAY,KAErB,MAAL5Y,KAAOxJ,GAAP,MAAYwJ,GAAZ,SAAYA,EAAOgF,WAAnB,EAAY,EAAa5G,KAAO,aAlBvC,MAsBGuX,GAtBH,SAsBGA,EAAMhQ,WAtBT,SAsBG,EAAgB0T,gBAtBnB,SAsBG,EAA+BC,YAtBlC,EAsBG,EAAsC3iB,KAAI,SAAC4iB,GAAD,iBACzC,gBAACT,GAAA,EAAKU,KAAN,CACEjY,IAAG,uBAAkBgY,GAAlB,SAAkBA,EAAME,WAAxB,EAAkB,EAAYjjB,IACjCmX,QAAS,WACPiL,GAAY,GACZ,MAAIW,KAAME,MACRjB,EAASe,EAAKE,OAGlBrM,MAAK,MAAEmM,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAYzU,WAAd,EAAE,EAAkB5G,WA/C/B,gBAAC4a,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,iBACLC,cAAe1d,EACfnD,MAAO,CACL8gB,iBAAkB,EAClBrb,kBACAjI,OAAQyiB,EAAQ,QAAK/f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExB6gB,UAAW,CAAE5d,QAAOD,SAAU+c,EAAQ,QAAK/f,KAErC,MAALyH,GAAA,SAAAA,EAAOgF,WAAP,IAAa5G,OAAQ,YCrD5B,IAAM2b,GAAehE,aAAH,4PAeH,SAASiE,GAAUrkB,GAA0B,IAAD,EACjD2iB,EAAkE3iB,EAAlE2iB,MAAcC,EAAoD5iB,EAA3D6F,MAAsBsC,EAAqCnI,EAArCmI,gBAAiBkC,EAAoBrK,EAApBqK,MAAOwY,EAAa7iB,EAAb6iB,SACvDlQ,EAAQmQ,eACRjd,EAAQ+c,GAAiBjQ,EAAMX,OAAO+Q,UAC5C,EAAkC9hB,YAAe,GAAjD,WAAO+hB,EAAP,KAAmBC,EAAnB,KACQ1Q,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBAEAyN,EAASW,aAAgByD,GAAc,CAC7C5E,UAAW,CACTiB,WAAY3R,OAAOyD,MAFfyN,KAKFiE,EAAU9B,GAAezY,EAAWwZ,YAE1C,OAAQe,EAmBN,gBAACd,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,WACLC,cAAe1d,EACfnD,MAAO,CACL8gB,iBAAkB,EAClBrb,kBACAjI,OAAQyiB,EAAQ,QAAK/f,EACrBwC,WAAY,SACZe,YAAaN,QAASjD,GAExB6gB,UAAW,CAAE5d,QAAOD,SAAU+c,EAAQ,QAAK/f,GAC3CoV,QAAS,kBAAMiM,GAAWhB,GAAY,MAEhC,MAAL5Y,OAAA,EAAAA,EAAO5B,OAAQ,aAlBtB,MAsBGuX,GAtBH,SAsBGA,EAAMsE,aAtBT,EAsBG,EAActjB,KAAI,SAACwL,GAAD,OACjB,gBAAC2W,GAAA,EAAKU,KAAN,CACEjY,IAAG,iBAAmBY,EAAM3L,GAC5BmX,QAAS,WACPiL,GAAY,GACZJ,EAASrW,IAEXiL,MAAOjL,EAAM/D,WA/CnB,gBAAC4a,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,mBACLC,cAAe1d,EACfnD,MAAO,CACL8gB,iBAAkB,EAClBrb,kBACAjI,OAAQyiB,EAAQ,QAAK/f,EACrBwC,WAAY,UAEdqe,UAAW,CACT5d,QACAD,SAAU+c,EAAQ,QAAK/f,KAGnB,MAALyH,OAAA,EAAAA,EAAO5B,OAAQ,Y,mIClDP,SAAS8b,GAAYvkB,GAClC,IAAsBwkB,EAA2BxkB,EAAzCykB,aAAgCC,EAAxC,KAAiD1kB,EAAjD,IACQqK,EAAUqa,EAAVra,MACFsI,EAAQmQ,eAER2B,EAAexjB,eACnB,SAAC+Z,GACC,GAAI,KAAK6E,KAAK7E,GAAO,CACnB,MAAkBA,EAAK2J,MAAM,YAAc,CAAC,KAArCC,EAAP,YACAJ,EAAc1V,OAAO8V,OAGzB,CAACJ,IAEH,OACE,gBAACK,GAAA,EAAD,QACMH,EADN,CAEQD,eACNpa,MAAK,IAAKA,GAAS,GACnB0N,KAAK,WACL+M,aAAa,aACbC,MACE,gBAACF,GAAA,EAAUG,MAAX,CACEvB,UAAW,CACTvjB,OAAQ,QAIV8a,KACE,gBAAChT,EAAA,QAAD,CAAMtF,MAAOqC,GAAOkgB,UAClB,gBAAC,IAAD,CACEviB,MAAO,CACLqC,GAAOmgB,gBACP,CAAE/e,YAAawM,EAAMX,OAAOgJ,KAAM7S,gBAAiBwK,EAAMX,OAAOmT,UAElEnN,QAAS,wBAAMwM,OAAN,EAAMA,GAAiBna,GAAS,GAAK,KAE9C,gBAAC+a,GAAA,EAAD,CAAwB3c,KAAK,aAAaC,KAAM,MAElD,gBAAC,IAAD,CACEhG,MAAO,CAACqC,GAAOsgB,mBAAoB,CAAEld,gBAAiBwK,EAAMX,OAAOmT,UACnEnN,QAAS,wBAAMwM,OAAN,EAAMA,GAAiBna,GAAS,GAAK,KAE9C,gBAAC+a,GAAA,EAAD,CAAwB3c,KAAK,eAAeC,KAAM,SAM5D4c,aAAa,KAKnB,IAAMvgB,GAASC,IAAWC,OAAO,CAC/BogB,mBAAoB,CAClBplB,MAAO,GACPC,OAAQ,GACRkF,WAAY,SACZmgB,gBAAiBvgB,IAAWwgB,eAE9BN,gBAAiB,CACfjlB,MAAO,GACPC,OAAQ,GACRulB,kBAAmBzgB,IAAWwgB,cAC9BD,gBAAiBvgB,IAAWwgB,cAC5BpgB,WAAY,UAEd6f,SAAU,CACRhlB,MAAO,GACPC,OAAQ,GACRwlB,WAAY,EACZC,aAAc,GACd5f,cAAe,SACfM,eAAgB,c,SCnEb,SAASuf,GAIdC,EACAziB,GAIA,IAAQyb,EAAezb,EAAfyb,WAER,OAAO,SAAqBva,GAC1B,IAAQkb,EAAqClb,EAArCkb,UAAWsG,EAA0BxhB,EAA1BwhB,aAAc/M,EAAYzU,EAAZyU,QAC3BjC,EAAWV,KAEjB,EAA0CuK,aAASkF,EAAO,CACxDrG,YACAsG,iBAFM9F,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAASzb,EAAhC,EAAgCA,MAK1B0b,EAAkB/kB,WAAc,kBAAM4d,EAAWmB,KAAO,CAACA,IAiB/D,OAfA/e,aAAgB,WACd,MAAIqJ,KAAOG,WACuB,IAA5BnG,EAAK2hB,oBACPnP,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAASH,EAAMG,QACf8O,QAAS,WAKR,MAAPR,KAAUzO,EAAMG,YAEjB,CAACnG,EAAKyU,QAAN,MAAezO,OAAf,EAAeA,EAAOG,QAASnG,EAAK2hB,mBAAoBlN,EAASjC,IAE7D,CACLH,UACAqJ,KAAMgG,EACND,YCHS9kB,I,GAAAA,WAzCf,SAAgEjB,GAC9D,IACEkmB,EAQElmB,EARFkmB,MACAC,EAOEnmB,EAPFmmB,SACAC,EAMEpmB,EANFomB,WACAC,EAKErmB,EALFqmB,WACA/C,EAIEtjB,EAJFsjB,KACAgD,EAGEtmB,EAHFsmB,gBACAC,EAEEvmB,EAFFumB,iBACAC,EACExmB,EADFwmB,gBASF,OANAvlB,aAAgB,aACTklB,IAAcA,EAASnK,QAAUkK,EAAMlK,QAAUwK,IACpDD,EAAiB,CAACL,EAAM,OAEzB,CAACC,EAAUK,EAAiBD,EAAkBL,IAG/C,gBAACle,EAAA,QAAD,CAAMtF,MAAO,CAAEqD,cAAe,MAAO0gB,SAAU,SAC5CP,EAAMllB,KAAI,SAAC4M,GAAD,OACT,gBAACyV,GAAA,EAAD,CACEzX,IAAKmC,KAAK8L,UAAUjM,GACpBmK,KAAK,WACLuL,MAAO6C,EAAS/M,MAAK,SAAC/O,GAAD,OAAWvB,mBAAQ8E,EAAMvD,OAAWiZ,EAAOA,OAAO1gB,EACvEF,MAAO,CAAEgkB,OAAQ,GACjB7O,UAAoB,MAAVwO,OAAA,EAAAA,EAAazY,MAAS,EAChCuY,SAAUC,EAAaA,EAAWxY,GAAQuY,EAAS/M,MAAK,SAAC/O,GAAD,OAAWvB,mBAAQ8E,EAAMvD,MACjF2N,QAAS,kBACPuO,EACsB,IAApBJ,EAASnK,OAAe,CAACpO,GAAQ+Y,iBAAMR,EAAU,CAACvY,GAAOG,KAAK8L,cAIjEyM,EAAgB1Y,WAOW,SAACgZ,EAAUC,GAC/C,OAAO/d,mBACLge,gBAAKF,EAAU,CAAC,aAAc,aAAc,QAAS,aACrDE,gBAAKD,EAAM,CAAC,aAAc,aAAc,QAAS,iBCrDtC,SAASE,GAAmB/mB,GACzC,IAAQgnB,EAAShnB,EAATgnB,KACR,OACE,gBAAC,KAAD,CACEC,WAAS,EACTnmB,eAAgB,CACdZ,OAAQ,GAA6B,IAAb8mB,GAAQ,GAChC/mB,MAAO,OACPoG,eAAgB,SAChB6gB,aAAc,IAEhBzkB,OAAQ,CACN,CACEmJ,IAAK,SACL3L,MAAO,GACPC,OAAQ,GACRyC,aAAc,EACdwkB,eAAgB,GAChB3D,iBAAkB,GAEpB,CACE5X,IAAK,QACL7F,cAAe,MACf3F,SAAU,CACR,CACEwL,IAAK,QACL3L,MAAO,GACPC,OAAQ,GACRyC,aAAc,GACdgjB,YAAa,GAEf,CACE/Z,IAAK,QACL3L,MAAO,GACPC,OAAQ,GACRyC,aAAc,GACdgjB,YAAa,GAEf,CAAE/Z,IAAK,QAAS3L,MAAO,GAAIC,OAAQ,GAAIyC,aAAc,SC3B1D,I,GAiBDykB,GAAsBxB,GAjB2BxF,aAAH,4RAuBT,CACzCvB,WAAY,SAACgH,GAAD,cAAY,CACtBwB,kBAAuB,MAALxB,GAAA,SAAAA,EAAO7V,eAAP,IAAiBqX,mBAAoB,GACvDnb,aAAkB,MAAL2Z,GAAA,SAAAA,EAAO7V,eAAP,IAAiB9D,cAAe,GAC7Cob,WAAgB,MAALzB,OAAA,EAAAA,EAAOyB,YAAa,OAIpB,SAASC,GAAmBvnB,GACzC,IAAQwnB,EAAmDxnB,EAAnDwnB,sBAAuBrG,EAA4BnhB,EAA5BmhB,OAAQ9W,EAAoBrK,EAApBqK,MAAOwY,EAAa7iB,EAAb6iB,SACtCtQ,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBACR,EAA0B6U,GAAoB,CAC5C5H,UAAW,CACTiI,QAAS,CAAC3Y,OAAOqS,IAAW,MAAMuG,OAAOC,SACzClH,WAAY3R,OAAOyD,IAErBwG,QAAS5W,QAAQmI,QALX0V,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAYd,OAJA1V,aAAgB,WACO,MAArBumB,KAAwB7Q,KACvB,CAACA,EAAS6Q,IAEN7Q,EACL,gBAACoQ,GAAD,MAEA,gCACE,gBAAC,KAAKa,UAAN,kBACA,gBAAC,GAAD,CACEpB,iBAAe,EACfN,MACE2B,kBAAO,GAAD,aAAU,MAAJ7H,OAAA,EAAAA,EAAMqH,mBAAoB,IAAhC,MAA6C,MAAJrH,OAAA,EAAAA,EAAMsH,YAAa,MAAM,qBAAGzmB,OAC3E,GAEFslB,SAAU,CAAC9b,GAAOqd,OAAOC,SACzBrB,gBAAiB,SAACnY,GAAD,OAAsB,MAARA,OAAA,EAAAA,EAAU1F,OAAQ,WACjD4d,WAAY,SAAClY,GAAD,cACV,MAAC6R,GAAD,SAACA,EAAMqH,mBAAN,EAAwBrmB,KAAI,qBAAGH,MAAa2hB,SAA5C,MAAqDrU,OAArD,EAAqDA,EAAUtN,MAElE0lB,iBAAkB,gBAAEuB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAS,SC/D3D,I,GAqBDC,GAAiBnC,GArBkCxF,aAAH,8WA2BT,CAC3CvB,WAAY,SAACgH,GAAD,YAAY,CACtB3Z,aAAkB,MAAL2Z,GAAA,SAAAA,EAAO7V,eAAP,IAAiB9D,cAAe,OAIlC,SAAS8b,GAAqBhoB,GAC3C,IAAQqK,EAA8DrK,EAA9DqK,MAAOmd,EAAuDxnB,EAAvDwnB,sBAAuB3E,EAAgC7iB,EAAhC6iB,SAAUoF,EAAsBjoB,EAAtBioB,kBACxC1V,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBAER,EAA0BwV,GAAe,CACvCvI,UAAW,CACTiB,WAAY3R,OAAOyD,GACnB0V,kBAAmBA,GAAqB,MAE1ClP,QAAS5W,QAAQmI,QALX0V,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAYd,OAJA1V,aAAgB,WACO,MAArBumB,KAAwB7Q,KACvB,CAACA,EAAS6Q,IAEN7Q,EACL,gBAACoQ,GAAD,MAEA,gCACE,gBAAC,KAAKa,UAAN,eACA,gBAAC,GAAD,CACEpB,iBAAe,EACfN,OAAW,MAAJlG,OAAA,EAAAA,EAAM9T,cAAe,GAC5Bia,SAAU,CAAC9b,GAAOqd,OAAOC,SACzBrB,gBAAiB,SAAC/X,GAAD,aAAgBA,OAAhB,EAAgBA,EAAY9F,MAC7C4d,WAAY,kBAAM,GAClBE,iBAAkB,gBAAEuB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAS,SC3DlE,SAASI,GAASloB,GAChB,IAAM2S,EAAQmQ,eACNxU,EAAQtO,EAARsO,IACF7F,GAAU,MAAH6F,OAAA,EAAAA,EAAK7F,QAAL,MAAgB6F,OAAhB,EAAgBA,EAAKnB,MAArB,WAA6BmB,OAA7B,EAA6BA,EAAKlB,OAE/C,OACE,gCACE,gBAACzE,EAAA,EAAD,KAAUF,EAAV,YAAmB6F,OAAnB,EAAmBA,EAAKf,YAAxB,UACEe,EAAIe,KAWF,KAVF,gBAACrH,EAAA,QAAD,CACEtF,MAAO,CACLub,QAAS,EACT9Y,kBAAmB,EACnBgD,gBAAiBwK,EAAMX,OAAOgB,OAC9BrQ,aAAc,KAGhB,gBAACgG,EAAA,EAAD,CAAMjG,MAAO,CAAEkD,SAAU,GAAIC,MAAO,UAApC,kBAOV,IAAMsiB,GAAa/H,aAAH,+ZAsBD,SAASgI,GAAUpoB,GAAoB,IAAD,QAC3CmhB,EAAiEnhB,EAAjEmhB,OAAQ9W,EAAyDrK,EAAzDqK,MAAOmc,EAAkDxmB,EAAlDwmB,gBAAiB3D,EAAiC7iB,EAAjC6iB,SAAUpC,EAAuBzgB,EAAvBygB,WAAY4H,EAAWroB,EAAXqoB,OAC9D,EAAkCpnB,YAAe,GAAjD,WAAO+hB,EAAP,KAAmBC,EAAnB,KACQ1Q,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBAER,EAA8B+V,aAAoBH,GAAY,CAC5DnH,YAAa,sBADf,WAAOuH,EAAP,KAAoBvI,EAApB,KAAoBA,KAsBpB,OAlBA/e,aAAgB,WACVkgB,GAAUV,GACZ8H,EAAU,CACR/I,UAAW,CACTiB,WAAYlO,EACZ4O,OAAQrS,OAAOqS,GACf3R,SAAU6Y,QAAUzlB,OAIzB,CAACue,EAAQV,EAAY8H,EAAWhW,EAAmB8V,IAEtDpnB,aAAgB,WAAO,IAAD,OACfoJ,GAASmc,GAAV,MAA6BxG,GAA7B,SAA6BA,EAAMhQ,WAAnC,SAA6B,EAAgBxB,eAA7C,SAA6B,EAA8BY,gBAA9B,EAA6C4M,QAC5E6G,EAAS7C,EAAKhQ,SAASxB,aAAaY,cAAc,MAEnD,CAACoX,EAAD,MAAkBxG,GAAlB,SAAkBA,EAAMhQ,SAASxB,mBAAjC,EAAkB,EAA6BY,cAAeyT,EAAUxY,IAGzE,gBAAC8Y,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAACyB,GAAA,EAAD,CACE2D,WAAY,kBAAMvF,GAAY,IAC9BwF,MAAM,aACNpe,MACEA,IACY,MAALA,OAAA,EAAAA,EAAO5B,QAAP,MAAkB4B,OAAlB,EAAkBA,EAAO8C,MAAzB,WAAiC9C,OAAjC,EAAiCA,EAAO+C,QAD1C,YACsD/C,OADtD,EACsDA,EAAOkD,YAD7D,cAED3K,EAENI,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAWpF,KAAK,eAC5BqF,UAAU,EACV5Q,KAAK,cAdX,MAkBGiI,GAlBH,SAkBGA,EAAMhQ,WAlBT,SAkBG,EAAgBxB,eAlBnB,SAkBG,EAA8BY,oBAlBjC,EAkBG,EAA6CpO,KAAI,SAACsN,GAAD,OAChD,gBAAC6U,GAAA,EAAKU,KAAN,CACEjY,IAAG,cAAgB0C,EAAIzN,GACvBmX,QAAS,WACPiL,GAAY,GACZJ,EAASvU,IAEX5L,MAAO,CAAEzC,MAAO,QAChBwX,MAAO,gBAACyQ,GAAD,CAAU5Z,IAAKA,UCxGjB,SAASsa,KAAgB,IAAD,8CAC/B9R,EAAWV,KACX9D,EAAkBkO,KAClB3V,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMxE,YAClDrP,aAAgB,WAAO,IAAD,EACpB,YAAI4J,EAAMV,OAAOqE,eAAb,EAA2BnE,MAAO,CAAC,IAAD,IACA,MAS+C,IATnF,IAAKQ,EAAMV,OAAOuC,WAAWrC,MAC3ByM,EACE9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAC9B,aACAkE,QAAO,SAAAjE,EAAMV,OAAOqE,eAAb,WAA2BnE,QAA3B,WAAkCgF,WAAlC,IAAwC3C,aAAc,OAKnE,IAAK7B,EAAMV,OAAOmE,IAAIjE,OAAlB,SAA2BQ,EAAMV,OAAOqE,aAAanE,MAAMgF,OAA3D,SAA2B,EAAsCI,OAAtC,EAA4CuM,OACzElF,EACE9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,MAAD,SAAQC,EAAMV,OAAOqE,eAArB,SAAQ,EAA2BnE,YAAnC,EAAQ,EAAkCgF,KAAKI,KAAK,SAIzF,CACDqH,EACAjM,EAAMV,OAAOqE,aAAanE,MAFzB,SAGDQ,EAAMV,OAAOqE,aAAanE,YAHzB,EAGD,EAAiCxJ,GACjCgK,EAAMV,OAAOuC,WAAWrC,MACxBQ,EAAMV,OAAOmE,IAAIjE,QAGnB,IAEMwe,EAA0B1G,IAFpB,MAAGtX,GAAH,SAAGA,EAAOZ,eAAV,EAAG,EAAiBpJ,IAGrB6I,EAAWof,eAAiBpf,EAAWqf,gBAGlD,OACE,gCACE,gBAACxB,GAAD,CACEld,MAAOQ,EAAMV,OAAOgE,SAAS9D,MAC7B8W,OAAQrS,OAAM,MAACjE,GAAD,SAACA,EAAOV,SAAR,SAAC,EAAeqE,eAAhB,SAAC,EAA6BnE,QAA9B,SAAC,EAAoCgF,WAArC,EAAC,EAA0CxO,KAAO,KAChEgiB,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,WAAYP,QAE7E,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOgE,SAAS7D,MAAQ,QAAU,QACvDO,EAAMV,OAAOgE,SAAS7D,OAAS,IAGlC,gBAAC0d,GAAD,CACE3d,MAAOQ,EAAMV,OAAOoE,WAAWlE,MAC/B4d,mBAAoBY,EACpBhG,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,aAAcP,QAE/E,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOoE,WAAWjE,MAAQ,QAAU,QACzDO,EAAMV,OAAOoE,WAAWjE,OAAS,IAGnC,MAACO,GAAD,SAACA,EAAOV,SAAR,SAAC,EAAeoE,aAAhB,SAAC,EAA2BlE,QAA5B,SAAC,EAAkC+D,SAAlC,EAA0C4N,OAC1C,gBAAC,KAAK4L,UAAN,sBADmD,KAGrD,gBAACsB,GAAA,EAAD,CAAYC,YAAU,EAACzmB,MAAOqC,GAAOqkB,cAArC,MACGve,GADH,SACGA,EAAOV,SADV,SACG,EAAeoE,aADlB,SACG,EAA2BlE,QAD9B,SACG,EAAkC+D,aADrC,EACG,EAA0CpN,KAAI,SAACkP,GAAD,mBAC7C,gBAACmT,GAAA,EAAD,CACE8C,SAAQ,MAAEtb,GAAF,SAAEA,EAAOV,SAAT,SAAE,EAAeiE,OAAO/D,YAAxB,EAAE,EAA6B+O,MAAK,qBAAGvY,KAAgBqP,EAAMrP,MACrEmX,QACO,MAALnN,GAAA,SAAAA,EAAOV,SAAP,WAAeiE,OAAO/D,QAAtB,EAA6B+O,MAAK,qBAAGvY,KAAgBqP,EAAMrP,MACvD,0BACEiW,EACE9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAC9B,SAD8B,MAE9BC,GAF8B,SAE9BA,EAAOV,SAFuB,SAE9B,EAAeiE,OAAO/D,YAFQ,EAE9B,EAA6Bqd,QAAO,qBAAG7mB,KAAgBqP,EAAMrP,UAGnE,0BACEiW,EACE9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAC9B,SAD8B,gBAEpB,MAALC,GAAA,SAAAA,EAAOV,SAAP,WAAeiE,aAAf,IAAuB/D,QAAS,IAFP,CAEY6F,SAKlDA,EAAMzH,KApBZ,MAoBsByH,EAAMjE,KApB5B,SAwBJ,gBAAC+c,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOiE,OAAO9D,MAAQ,QAAU,QACrDO,EAAMV,OAAOiE,OAAO9D,OAAS,IAEhC,gBAAC+e,GAAA,EAAD,MACExe,EAAMV,OAAOqE,aACb,gBAAC4Z,GAAD,CACEkB,UAAQ,EACRjf,MAAOQ,EAAMV,OAAOmE,IAAIjE,MACxB8W,OAAQrS,OAAM,SAACjE,EAAMV,OAAOqE,eAAd,SAAC,EAA2BnE,QAA5B,SAAC,EAAkCgF,WAAnC,EAAC,EAAwCxO,IACvD4f,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9CgiB,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,MAAOP,QAN5C,KAS9B,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOmE,IAAIhE,MAAQ,QAAU,QAClDO,EAAMV,OAAOmE,IAAIhE,OAAS,IAE7B,gBAACia,GAAD,CACEkE,MAAM,mBACNne,QAASO,EAAMV,OAAOuC,WAAWpC,MACjCD,MAAK,SAAEQ,EAAMV,OAAOuC,iBAAf,EAAE,EAAyBrC,MAChCoa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,aAAckE,OAAOya,SAInE,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOuC,WAAWpC,MAAQ,QAAU,QACzDO,EAAMV,OAAOuC,WAAWpC,OAAS,IAGnC,SAACO,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BmF,SAC/B,gCACE,gBAAC,KAAKoY,UAAN,kBACA,gBAAC/C,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,iBACNne,QAASO,EAAMV,OAAOsE,cAAcnE,MACpCD,OAAO,SAAAQ,EAAMV,OAAOsE,gBAAb,WAA4BpE,YAA5B,IAAmCmf,aAAc,GACxD/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,gBAAiB2e,QAI/D,gBAAC1E,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,wBACNne,QAASO,EAAMV,OAAOuE,oBAAoBpE,MAC1CD,OAAO,SAAAQ,EAAMV,OAAOuE,oBAAoBrE,YAAjC,IAAwCmf,aAAc,GAC7D/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,sBAAuBkE,OAAOya,UArBpC,MA8BlD,I,GAAMxkB,GAASC,IAAWC,OAAO,CAC/BkF,OAAQ,CACNkN,KAAM,GAERrM,MAAO,CACLkc,aAAc,GAEhBkC,aAAc,CACZlC,aAAc,K,qkBCtJlB,IAAMuC,GAAuBrJ,aAAH,s/DA2GX,SAASsJ,GAAmB1pB,GAA6B,IAAD,oCAC7Dif,EAAoBjf,EAApBif,UAAW/U,EAASlK,EAATkK,KACb4M,EAAWV,KACXvL,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMxE,YAC5CqZ,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,EAA2CiK,aAAsBuK,IAAjE,WAAOG,EAAP,KAA2BC,EAA3B,KAEM/J,EAAW7e,eAAkB,WAAO,IAAD,IACnCye,GAAY,EAkBhB,OAjBI,SAAC7U,EAAMV,OAAOgE,SAAS9D,QAAtB,EAA6BxJ,KAChC6e,GAAY,EACZ5I,EACE9B,GAAQF,MAAMxE,SAASrF,cAAc,CAAC,WAAY,wCAIlD,SAACJ,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BxJ,KAClC6e,GAAY,EACZ5I,EACE9B,GAAQF,MAAMxE,SAASrF,cAAc,CACnC,aACA,iDAKEyU,IACP,CAAC5I,EAAD,SAAWjM,EAAMV,OAAOgE,SAAS9D,YAAjC,EAAW,EAA6BxJ,GAAxC,SAA4CgK,EAAMV,OAAOoE,WAAWlE,YAApE,EAA4C,EAA+BxJ,KACxEipB,EAAa7oB,eAAkB,0EAAAG,EAAAC,OAAA,mDAC9Bye,IAD8B,4EAAA1e,EAAA,MAKZwoB,EAAmB,CACtCpK,UAAU,IACRuK,WAAYjb,OAAM,SAACjE,EAAMV,OAAOgE,SAAS9D,YAAvB,EAAC,EAA6BxJ,IAChDmpB,SAAQ,SAAEnf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4BrJ,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYiO,OAAOjO,MAC7DopB,OAAQnb,OAAM,SAACjE,EAAMV,OAAOkE,KAAKhE,YAAnB,EAAC,EAAyBxJ,IACxCkO,MAAO,SAAClE,EAAMV,OAAOmE,IAAIjE,QAAjB,EAAwBxJ,GAAYiO,OAAM,SAACjE,EAAMV,OAAOmE,IAAIjE,YAAlB,EAAC,EAAwBxJ,IAAtC,KACrCqpB,aAAcpb,OAAM,SAACjE,EAAMV,OAAOoE,aAAd,SAAC,EAAyBlE,YAA1B,EAAC,EAAgCxJ,IACrDspB,eAAgBrb,OAAM,SAACjE,EAAMV,OAAOqE,eAAd,SAAC,EAA2BnE,YAA5B,EAAC,EAAkCxJ,IACzD6L,WAAY7B,EAAMV,OAAOuC,WAAWrC,OAChC,SAACQ,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BmF,SAEhC,CACEf,cAAa,SAAE5D,EAAMV,OAAOsE,oBAAf,EAAE,EAA4BpE,MAC3CqE,oBAAmB,SAAE7D,EAAMV,OAAOuE,0BAAf,EAAE,EAAkCrE,OAHzD,OAfyB,UAK3B0V,EAL2B,OAuBjC,SAAAA,EAAOC,OAAP,WAAaoK,aAAb,WAAyBnK,cAAzB,EAAsCjf,KAAI,YAAyB,IAAtBgK,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QAClD,OAAQO,GACN,IAAK,YACH,OAAO8L,EAAS9B,GAAQF,MAAMxE,SAASrF,cAAc,CAAC,WAAYR,KACpE,IAAK,OACH,OAAOqM,EAAS9B,GAAQF,MAAMxE,SAASrF,cAAc,CAAC,OAAQR,KAChE,IAAK,UACL,IAAK,SACL,IAAK,YACH,OAAOqM,EAAS9B,GAAQF,MAAMxE,SAASrF,cAAc,CAAC,SAAUR,KAClE,IAAK,cACH,OAAOqM,EAAS9B,GAAQF,MAAMxE,SAASrF,cAAc,CAAC,aAAcR,KACtE,IAAK,MACH,OAAOqM,EAAS9B,GAAQF,MAAMxE,SAASrF,cAAc,CAAC,MAAOR,KAC/D,IAAK,gBACH,OAAOqM,EAAS9B,GAAQF,MAAMxE,SAASrF,cAAc,CAAC,eAAgBR,KACxE,IAAK,cACH,OAAOqM,EAAS9B,GAAQF,MAAMxE,SAASrF,cAAc,CAAC,aAAcR,KACtE,QACE,OAAO,SA1CoB,MA6C7BsV,GA7C6B,SA6C7BA,EAAQC,OA7CqB,SA6C7B,EAAcoK,aA7Ce,SA6C7B,EAA0BlK,UAA1B,EAAkClE,OA7CL,wBA8C/BlF,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAO,MAAEsV,GAAF,SAAEA,EAAQC,OAAV,SAAE,EAAcoK,iBAAhB,EAAE,EAA0BlK,OAAO,GAC1C3G,QAAS,WAjDkB,2BAsD7B,SAACwG,EAAOC,OAAR,SAAC,EAAaoK,aAAd,SAAC,EAAyBnK,cAAzB,EAAsCjE,QACzCiD,IAvD+B,kDA0DjCnI,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAMA,QACf8O,QAAS,WA7DoB,mEAiElC,CACDzC,EACA8S,EACA3K,EAHC,SAIDpU,EAAMV,OAAOqE,eAJZ,SAID,EAA2BnE,YAJ1B,EAID,EAAkCxJ,GAClCgK,EAAMV,OAAOuC,WAAWrC,MALvB,SAMDQ,EAAMV,OAAOiE,aANZ,EAMD,EAAqB/D,MANpB,SAODQ,EAAMV,OAAOgE,SAAS9D,YAPrB,EAOD,EAA6BxJ,GAP5B,SAQDgK,EAAMV,OAAOkE,KAAKhE,YARjB,EAQD,EAAyBxJ,GARxB,SASDgK,EAAMV,OAAOuE,0BATZ,EASD,EAAkCrE,MATjC,SAUDQ,EAAMV,OAAOsE,oBAVZ,EAUD,EAA4BpE,MAV3B,SAWDQ,EAAMV,OAAOmE,IAAIjE,YAXhB,EAWD,EAAwBxJ,GAXvB,SAYDgK,EAAMV,OAAOoE,WAAWlE,YAZvB,EAYD,EAA+BxJ,GAZ9B,SAaDgK,EAAMV,OAAOoE,WAAWlE,YAbvB,EAaD,EAA+BmF,SAC/BsQ,IAGF,OACE,gBAACuK,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAWxS,EAAMxH,MAAO,CAAE6nB,UAAW,MAC3C,gBAACC,EAAA,EAAD,CACEC,eAAa,EACb/N,QAASmN,EAAalT,QACtB9Q,MAAO8jB,EAAYhX,MAAMX,OAAOgB,SAElC,gBAACsX,GAAA,EAAOI,MAAR,wBAEe7f,GAFf,SAEeA,EAAOV,SAFtB,SAEe,EAAeqE,eAF9B,SAEe,EAA6BnE,QAF5C,SAEe,EAAoCgF,WAFnD,EAEe,EAA0C5G,MAFzD,iBAEoEoC,EAAMV,OAAOkE,OAFjF,SAEoE,EAAmBhE,YAFvF,EAEoE,EAA0B5B,OAE9F,gBAAC6hB,GAAA,EAAOK,WAAR,KACE,gBAACzB,GAAA,EAAD,KACE,gBAAC,GAAD,QAGJ,gBAACoB,GAAA,EAAOM,QAAR,CAAgBloB,MAAO,CAAE2D,eAAgB,aACvC,gBAACuR,EAAA,EAAD,CACEI,QAAS,WACPlB,EAAS9B,GAAQF,MAAMxE,SAASxI,SAChC9H,EAAM6qB,YAHV,UAQA,gBAACjT,EAAA,EAAD,CAAQI,QAAS8R,GAAjB,e,iBC7NV,IAsCMgB,GAA+BlF,GAtCSxF,aAAH,yoBA4CF,CACvCvB,WAAY,SAACgH,GAAD,mBAAWA,GAAX,SAAWA,EAAO7V,eAAlB,EAAW,EAAiBxB,gBAG3B,SAASuc,GAAY/qB,GAAsB,IAAD,MClFZgrB,EAAwBC,EDoFjExK,EAYEzgB,EAZFygB,WACA0J,EAWEnqB,EAXFmqB,eACAe,EAUElrB,EAVFkrB,YACAxe,EASE1M,EATF0M,WACAye,EAQEnrB,EARFmrB,YACA3b,EAOExP,EAPFwP,SACAf,EAMEzO,EANFyO,cACA2c,EAKEprB,EALForB,gBACAC,EAIErrB,EAJFqrB,SACAC,EAGEtrB,EAHFsrB,mBACAC,EAEEvrB,EAFFurB,sBACAC,EACExrB,EADFwrB,wBAEc7B,EAAgBrT,IAAe,SAACuC,GAAD,OAAUA,KAAjD5D,OAER,EAA0B6V,GAA6B,CACrDtL,UAAW,CACT2K,iBACA1J,cAEF1H,QAAS5W,QAAQmI,QALX0V,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAad,OALA1V,aAAgB,WAAO,IAAD,GACfyL,GAAD,MAAesT,GAAf,SAAeA,EAAM3Q,OAAN,EAAY3C,YAC7B4e,EAAmBxc,OAAOkR,EAAK3Q,KAAK3C,eAErC,OAACsT,OAAD,EAACA,EAAM3Q,KAAK3C,WAAYA,EAAY4e,IAErC,gBAACG,GAAA,EAAD,CAAM/oB,MAAO,CAAE8gB,iBAAkB,GAAI0D,aAAc,IAAMwE,UAAW,GAClE,gBAAClB,EAAA,EAAD,CAAaC,eAAa,EAAC5kB,MAAO8jB,EAAYhX,MAAMX,OAAOgB,OAAQ0J,QAAS/F,IAC5E,gBAAC8U,GAAA,EAAKf,MAAN,CACEjT,MAAK,MAAEuI,OAAF,EAAEA,EAAM3Q,KAAK5G,KAClBzF,KAAM,wBACA,MAAJgd,GAAA,SAAAA,EAAM3Q,OAAN,EAAYsC,MACV,gBAAC,KAAOga,MAAR,CAAchU,OAAQ,CAAEc,IAAKuH,EAAK3Q,KAAKsC,OAASjJ,KAAM,KAEtD,gBAAC,KAAOggB,KAAR,CAAapF,KAAK,UAAU5a,KAAM,QAKxC,gBAAC+iB,GAAA,EAAKG,QAAN,KACE,gBAACvC,GAAA,EAAD,CAAS3mB,MAAO,CAAEwkB,aAAc,KAChC,gBAACgC,GAAA,EAAD,CAAYC,YAAU,GACpB,gBAAC9F,GAAA,EAAD,CAAM3gB,MAAO,CAAE8gB,iBAAkB,GAAKF,KAAK,OAAOvL,KAAK,WAAWF,UAAQ,GAA1E,MACGmI,GADH,SACGA,EAAMjU,WADT,EACG,EAAYtD,MAEf,gBAAC4a,GAAA,EAAD,CAAM3gB,MAAO,CAAE8gB,iBAAkB,GAAKF,KAAK,iBAAiBvL,KAAK,WAAWF,UAAQ,GAApF,MACGmI,GADH,SACGA,EAAM3Q,OADT,SACG,EAAYxC,cADf,EACG,EAAqBpE,MAEtB0iB,GAAgBze,GAAeye,EAAY5d,WAC3C,gBAAC8V,GAAA,EAAD,CAAM3gB,MAAO,CAAE8gB,iBAAkB,GAAKF,KAAK,iBAAiBvL,KAAK,WAAWF,UAAQ,ICxInDmT,EDyITte,ECzIiCue,EDyIrBE,EAAY5d,WCxInD3E,iBAAO,QAAUoiB,EAAkBC,EAAgB,GAAGY,QAAQ,KDsIH,MAM5D,gBAAC7jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+mB,KAClB,gBAAC9jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOgnB,UAClB,gBAAC3D,GAAD,CACEjH,OAAQgJ,EACR1J,WAAYA,EACZoC,SAAUqI,EACV7gB,MAAO8gB,EACP9C,OAAQ7Y,EACRgX,iBAAe,EACf8C,UAAQ,KAGZ,gBAACthB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOinB,SAClB,gBAACzH,GAAD,CACEla,MAAQqC,GAAa,EACrB+X,aAAc,SAACwH,GAAD,OAASX,EAAmBW,IAC1CxD,MAAM,uBAIVjZ,EACA,gCACE,gBAAC6Z,GAAA,EAAD,MACA,gBAAC,KAAKzB,UAAN,kBACA,gBAAC5f,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+mB,KAClB,gBAAC9jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOgnB,UAClB,gBAAClH,GAAA,EAAD,CACExa,MAAOoE,GAAiB,GACxBgW,aAAc,SAACzJ,GAAD,aAAkBuQ,OAAlB,EAAkBA,EAAwBvQ,IACxDyN,MAAM,iBACN1Q,KAAK,cAGT,gBAAC/P,EAAA,QAAD,CAAMtF,MAAOqC,GAAOinB,SAClB,gBAACzH,GAAD,CACEla,MAAQ+gB,GAAkB,EAC1B3G,aAAc,SAACwH,GAAD,aAAST,OAAT,EAASA,EAA0BS,IACjDxD,MAAM,wBAjBH,MAwBf,gBAACgD,GAAA,EAAKb,QAAN,CAAcloB,MAAOqC,GAAOiQ,SAC1B,gBAAC4C,EAAA,EAAD,CAAQG,KAAK,OAAOC,QAAS,wBAAMqT,OAAN,EAAMA,MAAnC,YAQR,I,GAAMtmB,GAASC,IAAWC,OAAO,CAC/B6mB,IAAK,CACH7rB,MAAO,OACP8F,cAAe,MACfX,WAAY,SACZ8Y,UAAW,IAEb6N,SAAU,CACR1U,KAAM,GACNsO,YAAa,GAEfqG,QAAS,CACP3U,KAAM,IAERrC,QAAS,CAAE3O,eAAgB,c,qkBEnM7B,IA8BM+gB,GAAsBxB,GA9BoBxF,aAAH,4eAyCF,CACzCvB,WAAY,SAACgH,GAAD,cAAY,CACtBwB,kBAAuB,MAALxB,GAAA,SAAAA,EAAO7V,eAAP,IAAiBqX,mBAAoB,GACvDnb,aAAkB,MAAL2Z,GAAA,SAAAA,EAAO7V,eAAP,IAAiB9D,cAAe,GAC7Cob,WAAgB,MAALzB,OAAA,EAAAA,EAAOyB,YAAa,OAIpB,SAAS4E,KAAY,IAAD,4BAC3BrhB,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvE,iBAC5CoZ,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C6B,EAAWV,KACX+V,EAAoBhK,GAAezY,EAAWqf,gBAC5C/I,EAASoH,GAAoB,CACnC5H,UAAW,CACTiI,QAAO,SAAE5c,EAAMV,OAAOwE,QAAf,SAAE,EAAoBtE,YAAtB,EAAE,EAA2BrJ,KAAI,SAACorB,GAAD,OAAcA,EAASvrB,MAC/D4f,WAAYkJ,EAAYpX,kBACxB/G,UAAU2gB,GAAoB,MAEhCpT,QAAS5W,QAAQmI,QANX0V,KASFxQ,IAAY,SAAC3E,EAAMV,OAAOoE,WAAWlE,SAAxB,EAA+BmF,UAElD,OACE,gCACE,gBAAC,KAAKoY,UAAN,kBACA,gBAAC6D,GAAA,EAAD,CAAMC,UAAW,EAAGhpB,MAAO,CAAEwkB,aAAc,GAAImF,WAAY,EAAG7I,iBAAkB,KAC9E,gBAACiI,GAAA,EAAKG,QAAN,KACE,gBAAC,GAAD,CACEpF,iBAAe,EACfN,MACE2B,kBAAO,GAAD,aACK,MAAJ7H,OAAA,EAAAA,EAAMqH,mBAAoB,IAD3B,MACwC,MAAJrH,OAAA,EAAAA,EAAMsH,YAAa,MAC3D,qBAAGzmB,OACA,GAEPslB,SAAUtb,EAAMV,OAAOgE,SAAS9D,MAAQ,CAACQ,EAAMV,OAAOgE,SAAS9D,OAAS,GACxEic,gBAAiB,SAACnY,GAAD,OAAwBA,EAAS1F,MAClD4d,WAAY,SAAClY,GAAD,cACV,MAAC6R,GAAD,SAACA,EAAMqH,mBAAN,EAAwBrmB,KAAI,qBAAGH,MAAa2hB,SAASrU,EAAStN,MAEjE0lB,iBAAkB,gBAAEuB,EAAF,mBAChBhR,EAAS9B,GAAQF,MAAMvE,cAAc3F,SAAS,CAAC,WAAYkd,QAI/D,gBAACkB,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOgE,SAAS7D,MAAQ,QAAU,QACvDO,EAAMV,OAAOgE,SAAS7D,OAAS,MAKtC,gBAAC,KAAKsd,UAAN,eACA,gBAAC6D,GAAA,EAAD,CAAMC,UAAW,EAAGhpB,MAAO,CAAE8gB,iBAAkB,KAC7C,gBAACiI,GAAA,EAAKG,QAAN,KACE,gBAAC,GAAD,CACEpF,iBAAe,EACfN,OAAW,MAAJlG,OAAA,EAAAA,EAAM9T,cAAe,GAC5Bia,SAAUtb,EAAMV,OAAOoE,WAAWlE,MAAQ,CAACQ,EAAMV,OAAOoE,WAAWlE,OAAS,GAC5Eic,gBAAiB,SAAC/X,GAAD,OAA4BA,EAAW9F,MACxD8d,iBAAkB,gBAAEuB,EAAF,mBAChBhR,EAAS9B,GAAQF,MAAMvE,cAAc3F,SAAS,CAAC,aAAckd,QAGjE,gBAACkB,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOoE,WAAWjE,MAAQ,QAAU,QACzDO,EAAMV,OAAOoE,WAAWjE,OAAS,IAGnC,MAACO,GAAD,SAACA,EAAOV,SAAR,SAAC,EAAeoE,aAAhB,SAAC,EAA2BlE,QAA5B,SAAC,EAAkC+D,SAAlC,EAA0C4N,OAC1C,gBAAC,KAAK4L,UAAN,sBADmD,KAGrD,gBAACsB,GAAA,EAAD,CAAYC,YAAU,EAACzmB,MAAOqC,GAAOqkB,cAArC,MACGve,GADH,SACGA,EAAOV,SADV,SACG,EAAeoE,aADlB,SACG,EAA2BlE,QAD9B,SACG,EAAkC+D,aADrC,EACG,EAA0CpN,KAAI,SAACkP,GAAD,mBAC7C,gBAACmT,GAAA,EAAD,CACE8C,SAAQ,MAAEtb,GAAF,SAAEA,EAAOV,SAAT,SAAE,EAAeiE,OAAO/D,YAAxB,EAAE,EAA6B+O,MAAK,qBAAGvY,KAAgBqP,EAAMrP,MACrEmX,QACO,MAALnN,GAAA,SAAAA,EAAOV,SAAP,WAAeiE,OAAO/D,QAAtB,EAA6B+O,MAAK,qBAAGvY,KAAgBqP,EAAMrP,MACvD,0BACEiW,EACE9B,GAAQF,MAAMvE,cAAc3F,SAAS,CACnC,SADmC,MAEnCC,GAFmC,SAEnCA,EAAOV,SAF4B,SAEnC,EAAeiE,OAAO/D,YAFa,EAEnC,EAA6Bqd,QAAO,qBAAG7mB,KAAgBqP,EAAMrP,UAGnE,0BACEiW,EACE9B,GAAQF,MAAMvE,cAAc3F,SAAS,CACnC,SADmC,gBAEzB,MAALC,GAAA,SAAAA,EAAOV,SAAP,WAAeiE,aAAf,IAAuB/D,QAAS,IAFF,CAEO6F,SAKlDA,EAAMzH,KApBZ,MAoBsByH,EAAMjE,KApB5B,SAwBJ,gBAAC+c,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOiE,OAAO9D,MAAQ,QAAU,QACrDO,EAAMV,OAAOiE,OAAO9D,OAAS,MAIpC,gBAAC+e,GAAA,EAAD,MAEA,gBAAC,KAAKzB,UAAN,cAhFF,SAiFG/c,EAAMV,SAjFT,SAiFG,EAAcwE,QAjFjB,SAiFG,EAAqBtE,YAjFxB,EAiFG,EAA4BrJ,KAAI,SAACorB,GAAD,OAC/B,gBAACrB,GAAD,CACEtK,WAAYkJ,EAAYpX,kBACxB4X,eAAgBrb,OAAOsd,EAASvrB,IAChCsqB,YAAaiB,EAAS9d,UAAO1L,EAC7B8J,WAAY0f,EAAS1f,WACrB4e,mBAAoB,SAAC5e,GAAD,aAClBoK,EACE9B,GAAQF,MAAMvE,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0BrJ,KAAI,SAACqO,GAAD,OAC5BA,EAAKxO,KAAOurB,EAASvrB,GAArB,SAA+BurB,GAA/B,IAAyC1f,eAAe2C,SAKhEgc,SAAU,wBACRvU,EACE9B,GAAQF,MAAMvE,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0Bqd,QAAO,SAACrY,GAAD,OAAUA,EAAKxO,KAAOurB,EAASvrB,UAItEqqB,YAAa,SAACoB,GAAD,aACXxV,EACE9B,GAAQF,MAAMvE,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0BrJ,KAAI,SAACqO,GAAD,OAC5BA,EAAKxO,KAAOurB,EAASvrB,GAArB,SACSurB,GADT,IACmBrd,MAAOD,OAAOwd,EAAOzrB,IAAKyN,IAAKge,IAC9Cjd,SAKNG,WACNf,cAAe2d,EAAS3d,cACxB2c,gBAAiBgB,EAAS1d,oBAC1B6c,sBAAuB,SAAC9c,GAAD,aACrBqI,EACE9B,GAAQF,MAAMvE,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0BrJ,KAAI,SAACqO,GAAD,OAC5BA,EAAKxO,KAAOurB,EAASvrB,GAArB,SAA+BurB,GAA/B,IAAyC3d,kBAAkBY,SAKnEmc,wBAAyB,SAAC9c,GAAD,aACvBoI,EACE9B,GAAQF,MAAMvE,cAAc3F,SAAS,CACnC,QADmC,SAEnCC,EAAMV,OAAOwE,MAAMtE,YAFgB,EAEnC,EAA0BrJ,KAAI,SAACqO,GAAD,OAC5BA,EAAKxO,KAAOurB,EAASvrB,GAArB,SAA+BurB,GAA/B,IAAyC1d,wBAAwBW,eAWnF,IAAMtK,GAASC,IAAWC,OAAO,CAC/BkF,OAAQ,CACNkN,KAAM,GAERrM,MAAO,CACLkc,aAAc,GAEhBkC,aAAc,CACZlC,aAAc,K,oHCrOX,SAASqF,GACdvsB,EACAwsB,GAEA,IACMC,EAAiBzsB,EAAK,MAE5B,OAAIysB,GAGGC,GAAM,MAAQF,GAWhB,SAAS7jB,GAAK3I,GACnB,IAAQ0C,EAAgD1C,EAAhD0C,MAAOiqB,EAAyC3sB,EAAzC2sB,WAAYC,EAA6B5sB,EAA7B4sB,UAAcC,EAAzC,KAAwD7sB,EAAxD,IACM6F,EAAQ0mB,GAAc,CAAExZ,MAAO4Z,EAAY7Z,KAAM8Z,GAAa,QAEpE,OAAO,gBAAC,IAAD,MAAalqB,MAAO,CAAC,CAAEmD,SAASnD,IAAYmqB,IAG9C,SAAS7kB,GAAKhI,GACnB,IAAQ0C,EAAgD1C,EAAhD0C,MAAOiqB,EAAyC3sB,EAAzC2sB,WAAYC,EAA6B5sB,EAA7B4sB,UAAcC,EAAzC,KAAwD7sB,EAAxD,IACMmI,EAAkBokB,GAAc,CAAExZ,MAAO4Z,EAAY7Z,KAAM8Z,GAAa,cAE9E,OAAO,gBAAC,UAAD,MAAalqB,MAAO,CAAC,CAAEyF,mBAAmBzF,IAAYmqB,IC5BhD,SAASC,GAAT,GAA4D,IAAvCrV,EAAsC,EAAtCA,MAAO5R,EAA+B,EAA/BA,MAAOknB,EAAwB,EAAxBA,SAChD,OACE,gBAAC,GAAD,CAAMrqB,MAAOqC,GAAOioB,OAClB,gBAACtC,GAAA,EAAD,CAAOhoB,MAAO,CAAEmD,UAAU4R,GAC1B,gBAACwV,GAAA,EAAD,CAAWvqB,MAAO,CAAEmD,QAAOL,UAAW,WAAaunB,IAKzD,I,GAAMhoB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACN4G,QAAS,EACT5M,QAAS,OACTlJ,gBAAiB,eAEnB+kB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACNjR,UAAW,SACXhB,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPkI,gBAAiB,cACjBjI,OAAQ,UC1BNgkB,GAAuB9D,aAAH,2tBA4CX,SAAS+M,GAAentB,GAAyB,IAAD,YACrDyU,EAAY6B,IAAe,SAACuC,GAAD,OAAUA,KAArCpE,QACFqC,EAAWV,KACjB,EAAoCnV,WAAe,IAAnD,WAAO2P,EAAP,KAAmBC,EAAnB,KACQ0B,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBAEAyN,EAASW,aAAgBuD,GAAsB,CACrD1E,UAAW,CACTiB,WAAY3R,OAAOyD,GACnB6a,OAAQxc,KAHJoP,KAOA3N,EAAgBmO,KAAhBnO,YACFgb,EAAmBlL,GAAezY,EAAWqf,gBAC7CuE,EAA+BnL,GAAezY,EAAW6jB,wBAE/D,OACE,gCACE,gBAACC,GAAA,EAAD,CAAWnjB,MAAOuG,EAAY6T,aAAc5T,EAAe4c,YAAY,qBACvE,gBAACzlB,EAAA,QAAD,CAAMtF,MAAO,CAAExC,OAAQ,MACrB,gBAAC,IAAD,CAAYwtB,sBAAuB,CAAEhI,WAAY,OAC9C,MAAC1F,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgB0T,gBAAjB,SAAC,EAA+BC,QAA/B,EAAsC3H,SACtC,gBAAC8Q,GAAD,CAAWrV,MAAM,WAAWsV,SAAS,KAFzC,MAKG/M,GALH,SAKGA,EAAMhQ,WALT,SAKG,EAAgB0T,gBALnB,SAKG,EAA+BC,YALlC,EAKG,EAAsC3iB,KAAI,SAAC4iB,GAAD,yBACzC,gBAAC,WAAD,CAAgBhY,IAAG,UAAc,MAAJgY,GAAA,SAAAA,EAAME,WAAN,IAAYjjB,KAAM,IAC7C,gBAAC,KAAKgjB,KAAN,CACEnhB,MAAO,CAAEzC,MAAO,QAChB2L,IAAG,eAAUgY,GAAV,SAAUA,EAAME,WAAhB,EAAU,EAAYjjB,IACzB4W,MAAK,MAAEmM,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAYzU,KAAK5G,KACxBklB,YAAW,MAAE/J,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAY/X,WAAd,EAAE,EAAkBtD,KAC/BzF,KAAM,4BACJ,MAAC4gB,GAAD,SAACA,EAAME,OAAP,SAAC,EAAYzU,OAAZ,EAAkBsC,MAGjB,gBAAC,KAAOga,MAAR,CACEhU,OAAQ,CAAEc,IAAG,MAAEmL,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAYzU,KAAKsC,OAChCjP,MAAO,CAAE0D,UAAW,SAAUod,iBAAkB,IAChD9a,KAAM,KALR,gBAAC,KAAKggB,KAAN,CAAWpF,KAAK,aASpByB,MAAO,0BACL,gBAAC6I,GAAA,EAAD,CACEpsB,OACE,SAAAiT,EAAQnE,SAASc,gBAAjB,EACIpQ,KAAY,qBAAGH,MAChB2hB,SAFH,MAEYoB,GAFZ,SAEYA,EAAME,WAFlB,EAEY,EAAYjjB,IACpB,UACA,eAIVgX,UAGM,MAAJ+L,GAAA,SAAAA,EAAME,WAAN,IAAYzU,KAAKxO,OAAjB,MAAwBwR,OAAxB,EAAwBA,EAAaxR,KACrCysB,IACCD,EAEHrV,QAAS,WAAO,IAAD,IACblB,EACE9B,GAAQP,QAAQnE,SAASgB,YACvB,SAAAmD,EAAQnE,SAASc,gBAAjB,EAAgCpC,MAAK,2BAAGnO,KAAW,UAAQ+iB,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAYjjB,OAAvE,SACI4T,EAAQnE,SAASc,oBADrB,EACI,EAAgCsW,QAC9B,2BAAG7mB,KAAW,UAAQ+iB,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAYjjB,OAFxC,eAIS4T,EAAQnE,SAASc,eAJ1B,OAIyCwS,OAJzC,EAIyCA,EAAME,YAKvD,gBAACuF,GAAA,EAAD,CAAS3mB,MAAO,CAAEzC,MAAO,QAAU2L,IAAG,kBAAagY,GAAb,SAAaA,EAAME,WAAnB,EAAa,EAAYjjB,YAKvE,gBAAC+W,EAAA,EAAD,CACEI,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvE,cAAcrB,iBAAiBuF,EAAQnE,SAASc,gBACvEpR,EAAM6tB,UAERnrB,MAAOqC,GAAO+S,OACdC,KAAK,aANP,SAcN,I,GAAMhT,GAASC,IAAWC,OAAO,CAC/B6S,OAAQ,CACN7X,MAAO,OACP0C,aAAc,GACdsb,QAAS,GAEX6P,WAAY,CACV5tB,OAAQ,OC5IN6tB,GAAwB3N,aAAH,k+CAyFZ,SAASsJ,GAAmB1pB,GAA6B,IAAD,gBAC7DkK,EAAkBlK,EAAlBkK,KAAM2gB,EAAY7qB,EAAZ6qB,QACR/T,EAAWV,KACXvL,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvE,iBAClD,EAA4C2O,aAAsB6O,IAAlE,WAAOC,EAAP,KAA4BnE,EAA5B,KACA,EAAgC5oB,WAAe,GAA/C,WAAOgtB,EAAP,KAAiBC,EAAjB,KAEMpO,EAAW7e,eAAkB,WAAO,IAAD,IACnCye,GAAY,EAkBhB,OAjBI,SAAC7U,EAAMV,OAAOgE,SAAS9D,QAAtB,EAA6BxJ,KAChC6e,GAAY,EACZ5I,EACE9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,WAAY,wCAIvD,SAACJ,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BxJ,KAClC6e,GAAY,EACZ5I,EACE9B,GAAQF,MAAMvE,cAActF,cAAc,CACxC,aACA,iDAKEyU,IACP,CAAC5I,EAAD,SAAWjM,EAAMV,OAAOgE,SAAS9D,YAAjC,EAAW,EAA6BxJ,GAAxC,SAA4CgK,EAAMV,OAAOoE,WAAWlE,YAApE,EAA4C,EAA+BxJ,KACxEipB,EAAa7oB,eAAkB,4DAAAG,EAAAC,OAAA,mDAC9Bye,IAD8B,4EAAA1e,EAAA,MAKZ4sB,EAAoB,CACvCxO,UAAW,CACTuK,WAAYjb,OAAM,SAACjE,EAAMV,OAAOgE,SAAS9D,YAAvB,EAAC,EAA6BxJ,IAChDqpB,aAAcpb,OAAM,SAACjE,EAAMV,OAAOoE,WAAWlE,YAAzB,EAAC,EAA+BxJ,IACpDmpB,SAAQ,SAAEnf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4BrJ,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYiO,OAAOjO,MAC7DopB,OAAQnb,OAAM,SAACjE,EAAMV,OAAOkE,KAAKhE,YAAnB,EAAC,EAAyBxJ,IACxCstB,UAAS,SAAEtjB,EAAMV,OAAOwE,MAAMtE,YAArB,EAAE,EAA0BrJ,KAAI,SAACotB,GAAD,OACvCC,gBAAKD,EAAiB,CAAC,eAZI,UAK3BrO,EAL2B,OAiBjC,SAAAA,EAAOC,OAAP,WAAasO,cAAb,WAA0BrO,cAA1B,EAAuCjf,KAAI,YAAyB,IAAtBgK,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACnD,OAAQO,GACN,IAAK,YACH,OAAO8L,EAAS9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,WAAYR,KACzE,IAAK,OACH,OAAOqM,EAAS9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,OAAQR,KACrE,IAAK,UACL,IAAK,SACL,IAAK,YACH,OAAOqM,EAAS9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,SAAUR,KACvE,IAAK,cACH,OAAOqM,EAAS9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,aAAcR,KAC3E,QACE,OAAO,SA9BoB,MAiC7BsV,GAjC6B,SAiC7BA,EAAQC,OAjCqB,SAiC7B,EAAcsO,cAjCe,SAiC7B,EAA2BpO,UAA3B,EAAmClE,OAjCN,wBAkC/BlF,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAO,MAAEsV,GAAF,SAAEA,EAAQC,OAAV,SAAE,EAAcsO,kBAAhB,EAAE,EAA2BpO,OAAO,GAC3C3G,QAAS,WArCkB,2BA0C7B,SAACwG,EAAOC,OAAR,SAAC,EAAasO,cAAd,SAAC,EAA0BrO,cAA1B,EAAuCjE,QAC1Chc,EAAM6qB,UA3CyB,kDA8CjC/T,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAMA,QACf8O,QAAS,WAjDoB,mEAqDlC,CACDzC,EACAkX,EACAhuB,EAHC,SAID6K,EAAMV,OAAOiE,aAJZ,EAID,EAAqB/D,MAJpB,SAKDQ,EAAMV,OAAOgE,SAAS9D,YALrB,EAKD,EAA6BxJ,GAL5B,SAMDgK,EAAMV,OAAOkE,KAAKhE,YANjB,EAMD,EAAyBxJ,GANxB,SAODgK,EAAMV,OAAOoE,WAAWlE,YAPvB,EAOD,EAA+BxJ,GAC/BgK,EAAMV,OAAOwE,MAAMtE,MACnByV,IAGF,OACE,gBAACuK,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAWxS,EAAMyS,UAAWkO,GAClC,gBAAC7iB,EAAA,QAAD,CAAMtF,MAAO,CAAEyF,gBAAiB,SAAWsU,OAAO,wBAChD,gBAACzU,EAAA,QAAD,CAAM9E,gBAAgB,SAAA2H,EAAMV,OAAOwE,QAAb,WAAoBtE,YAApB,IAA2B2R,SAAU,GAAK,OAAIpZ,EAAY,QAC9E,gBAAC,KAAD,CAAM2rB,aAAcN,EAAUlW,KAAK,QAAQyW,cAAeN,GACxD,gBAAC,KAAD,CAAWzF,MAAM,gBACf,gBAACzgB,EAAA,QAAD,OAEF,gBAAC,KAAD,CAAWygB,MAAM,kBACf,gBAACzgB,EAAA,QAAD,SAKQ,IAAbimB,EACC,gBAACjmB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO0pB,mBAClB,gBAACtB,GAAD,CAAgBU,OAAQ,kBAAMK,EAAY,OAG5C,gBAAC,IAAD,CAAYR,sBAAuB,CAAEgB,cAAe,IAAKC,SAAU,IACjE,gBAAC,GAAD,MACA,gBAAC3mB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO6pB,iBAClB,gBAAChX,EAAA,EAAD,CACEI,QAAS8R,EACTnT,QAASkT,EAAalT,QACtBoB,KAAK,YACLrV,MAAOqC,GAAO+S,QAJhB,aAiBhB,IAAM/S,GAASC,IAAWC,OAAO,CAC/B6S,OAAQ,CACN7X,MAAO,OACP0C,aAAc,GACdsb,QAAS,GAEX2Q,gBAAiB,CACfzpB,kBAAmB,GACnBgD,gBAAiB,SAEnB0mB,iBAAkB,CAChB1pB,kBAAmB,GACnBupB,cAAe,IAEjBD,kBAAmB,CACjBvuB,OAAQ,OACRiI,gBAAiB,QACjBlI,MAAO,OACPge,QAAS,IAEX6Q,MAAO,CACLpD,UAAW,EACXvjB,gBAAiB,QACjBwmB,SAAU,EACVzuB,OAAQ,OACRmR,QAAS,OACTtL,cAAe,SACfM,eAAgB,SAChBqoB,cAAe,IAEjBK,YAAa,CACXrD,UAAW,EACXsD,oBAAqB,GACrBC,qBAAsB,GACtB/uB,OAAQ,GACRgvB,YAAa,OACbC,aAAc,CACZlvB,MAAO,EACPC,QAAS,GAEXiI,gBAAiB,QACjBinB,cAAe,IACfC,aAAc,Q,UC3QH,SAASC,GAAStvB,GAAwB,IAAD,gBAC9C6O,EAAmC7O,EAAnC6O,KAAMmJ,EAA6BhY,EAA7BgY,QAASuX,EAAoBvvB,EAApBuvB,SAAU7sB,EAAU1C,EAAV0C,MAC3BiQ,EAAQmQ,eAER0M,IAAgB,MAAC3gB,MAAMJ,eAC7B,OACE,gCACE,gBAACgd,GAAA,EAAD,CACEzT,QAAO,8GAAE,wBAAMA,OAAN,EAAMA,EAAUnJ,MACzB6c,UAAW,EACXhpB,MAAOsC,IAAWyqB,QAAQ,CAAC1qB,GAAO2qB,KAAM,CAAExI,aAAcsI,GAAgB,EAAI,IAAM9sB,KAElF,gBAAC+oB,GAAA,EAAKf,MAAN,CACEjT,OAAW,MAAJ5I,GAAA,SAAAA,EAAML,mBAAN,IAAoBa,KAAK5G,QAAzB,MAAiCoG,OAAjC,EAAiCA,EAAMJ,eAC9CzL,KAAM,4BACA,MAAJ6L,GAAA,SAAAA,EAAML,eAAN,WAAoBa,OAApB,EAA0BsC,MACxB,gBAAC,KAAOga,MAAR,CACEjpB,MAAO,CAAEyF,gBAAiBwK,EAAMX,OAAOmT,SACvCxN,OAAQ,CAAEc,IAAG,MAAE5J,GAAF,SAAEA,EAAML,mBAAR,EAAE,EAAoBa,KAAKsC,OACxCjJ,KAAM,KAGR,gBAAC,KAAOggB,KAAR,CACEhmB,MAAO,CAAEyF,gBAAiBwK,EAAMX,OAAOmT,SACvCtf,MAAO8M,EAAMG,KAAOH,EAAMX,OAAOgJ,KAAOrI,EAAMX,OAAOC,QACrDqR,KAAK,UACL5a,KAAM,MAIZqc,MAAO,kBACJwK,EACC,gBAACI,GAAA,EAAD,CACEjtB,MAAO,CAAEwb,WAAY,GAAIyH,aAAc,GACvC3N,QAAS,SAAC4X,GACRA,EAAEC,iBACM,MAARN,KAAW1gB,KAJf,KADU,QAahB,gBAAC4c,GAAA,EAAKG,QAAN,CAAclpB,MAAO,CAAEqD,cAAe,MAAO0gB,SAAU,SACrD,gBAACpD,GAAA,EAAD,CACE3gB,MAAOqC,GAAO+qB,SACdrM,UAAW1e,GAAOgrB,SAClBzM,KAAK,OACLvL,KAAK,WACLF,UAAQ,GALV,MAOGhJ,GAPH,SAOGA,EAAML,eAPT,SAOG,EAAoBzC,WAPvB,EAOG,EAA0BtD,MAE7B,gBAAC4a,GAAA,EAAD,CACE3gB,MAAOqC,GAAO+qB,SACdrM,UAAW1e,GAAOgrB,SAClBzM,KAAK,iBACLvL,KAAK,WACLF,UAAQ,GALV,MAOGhJ,GAPH,SAOGA,EAAML,eAPT,SAOG,EAAoBa,OAPvB,SAOG,EAA0BxC,cAP7B,EAOG,EAAmCpE,MAEtC,gBAAC4a,GAAA,EAAD,CACE3gB,MAAOqC,GAAO+qB,SACdrM,UAAW1e,GAAOgrB,SAClBzM,KAAK,gBACLvL,KAAK,WACLF,UAAQ,GALV,MAOGhJ,GAPH,SAOGA,EAAMV,eAPT,EAOG,EAAgB1F,MAEnB,gBAAC4a,GAAA,EAAD,CACE3gB,MAAOqC,GAAO+qB,SACdrM,UAAW1e,GAAOgrB,SAClBzM,KAAK,gBACLvL,KAAK,WACLF,UAAQ,GALV,MAOGhJ,GAPH,SAOGA,EAAMN,iBAPT,EAOG,EAAkB9F,MAEnBoG,EAAKmhB,YACL,gBAAC3M,GAAA,EAAD,CACE3gB,MAAOqC,GAAOkrB,KACdxM,UAAW1e,GAAOgrB,SAClBzM,KAAK,iBACLvL,KAAK,WACLF,UAAQ,GAEPhJ,EAAKmhB,YAAYnE,QAAQ,IART,OAaxB,MAAChd,KAAMJ,cACN,gCACE,gBAACzG,EAAA,QAAD,CACEtF,MAAO,CACLzC,MAAO,OACPC,OAAQ,GACRkF,WAAY,SACZiB,eAAgB,WAGlB,gBAAC+e,GAAA,EAAD,CAAwBvf,MAAO8M,EAAMX,OAAO+Q,UAAWta,KAAK,eAAeC,KAAM,MAEnF,gBAAC+iB,GAAA,EAAD,CACE/oB,MAAOsC,IAAWyqB,QAAQ,CACxB,CAAE/I,OAAQ,GAAIxI,WAAY,EAAGhe,OAAQ,IAAKD,MAAO,QACjDyC,IAEFgpB,UAAW,GAEX,gBAACD,GAAA,EAAKf,MAAN,CACEjT,MAAK,MAAE5I,OAAF,EAAEA,EAAMJ,cACbzL,KAAM,kBACJ,gBAAC,KAAO0lB,KAAR,CACEpF,KAAK,qBACLzd,MAAO8M,EAAMG,KAAOH,EAAMX,OAAOgJ,KAAOrI,EAAMX,OAAOC,QACrDvP,MAAO,CAAEyF,gBAAiBwK,EAAMX,OAAOmT,SACvCzc,KAAM,QAIZ,gBAAC+iB,GAAA,EAAKG,QAAN,KACE,gBAACjjB,EAAA,EAAD,CAAMjG,MAAOqC,GAAOmrB,gBAApB,wBA/BgB,MAwC9B,I,GAAMnrB,GAASC,IAAWC,OAAO,CAC/ByqB,KAAM,CACJhJ,OAAQ,GACRxmB,OAAQ,IACRD,MAAO,QAETgwB,KAAM,CACJvJ,OAAQ,EACRxmB,OAAQ,GACR+d,QAAS,EACT7Y,WAAY,UAEd0qB,SAAU,CACRpJ,OAAQ,EACRxmB,OAAQ,GACR+d,QAAS,EACT7Y,WAAY,UAEd2qB,SAAU,CACRnqB,SAAU,IAEZuqB,cAAe,CACbzJ,OAAQ,GACRxmB,OAAQ,IACRD,MAAO,QAETiwB,eAAgB,CACdtqB,SAAU,GACVkB,QAAS,GACTV,UAAW,SACXnG,MAAO,OACPuF,UAAW,SACXK,MAAO,a,oBCpFI8Y,MA5FcyB,aAAH,giDA4FyE,CACjGvB,WAAY,SAACkB,GAAD,OAAYA,EAAOqQ,YAC/BtR,cAAe,CACbuR,QAAS,QACTC,MAAO,MACPC,QAAS,QACTC,aAAc,gBCtFH,SAASC,GAAazwB,GAAgC,IAAD,MAC5D8W,EAAWV,KACjB,EAAkCnV,YAAe,GAAjD,WAAOyvB,EAAP,KAAmBC,EAAnB,KAEQtiB,EAASrO,EAATqO,KAGAgE,EADgBmO,KAChBnO,YAER,ExB+gBK,SAAiCgQ,GAChC,IAAMjf,EAAO,SAAOme,IAAmBc,GACvC,OAAOjK,KAA4F4J,GAAsB5e,GwBjhBhGwtB,GAAxBC,EAAP,YAEMC,EAAqBC,GAAsB,CAC/C9R,UAAW,kBAAM,MACjBlG,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAG9DyX,EAAa/vB,eACjB,SAAOgwB,GAAP,eAAA7vB,EAAAC,OAAA,uDACQ6vB,EAAgBD,EAAiBE,aAAW,IAAIrQ,KAAQmQ,GAASlQ,UAAY,IAAnD,KADlC,WAAA3f,EAAA,MAGQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChBuL,WAAY8kB,EAAertB,KAAKutB,KAAKF,GAAgB,KACrDrmB,MAAOqmB,EAAe1nB,EAAU6nB,aAAe7nB,EAAU8nB,QAN7D,8DASA,CAACR,EAAoBziB,IAGjBkjB,EAAkBtwB,eACtB,SAAO4J,GAAP,SAAAzJ,EAAAC,OAAA,kEAAAD,EAAA,MACQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChBgK,QACAuB,WAAY,QAJhB,8DAOA,CAAC0kB,EAAoBziB,IAGjBmjB,EAAWvwB,eAAkB,oBAAAG,EAAAC,OAAA,kEAAAD,EAAA,MAC3ByvB,EAAqB,CACzBrR,UAAW,CACT3e,GAAIiO,OAAOT,EAAKxN,IAChBgK,MAAOrB,EAAUioB,WAJY,8DAOhC,CAACZ,EAAsBxiB,IAEpByb,EAAa7oB,eAAkB,WACnC,OAAI,MAACoR,KAAaqf,WASd,MAACrf,KAAasf,cASd,MAACtf,KAAauf,cASd,MAACvf,KAAawf,YASlB/a,EAAS9B,GAAQF,MAAMxE,SAASpF,SAAQ,IACxC4L,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,eAAgByH,KAC1DyE,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,OAAQyD,KAC3C,MAXEyI,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,sCACT8O,QAAS,aAZNzC,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,6DACT8O,QAAS,aAZNzC,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,iCACT8O,QAAS,aAZNzC,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,oDACT8O,QAAS,eAoCd,CAAClH,EAAayE,EAAUzI,IAErByjB,EAAgB3P,GAAezY,EAAWwZ,YAE1C6O,EAAkB5P,GAAezY,EAAWsoB,YAC5C3E,EAAmBlL,GAAezY,EAAWqf,gBAC7CuE,EAA+BnL,GAAezY,EAAW6jB,wBAEzDlhB,EAAS,CAAC7C,EAAU8nB,KAAM9nB,EAAU6nB,cAAc7O,SAASnU,EAAKxD,OAChEonB,IAAc,MAAJ5jB,GAAA,SAAAA,EAAM2V,YAAN,IAAahI,SAAU,MAAW,MAAJ3N,OAAA,EAAAA,EAAM5B,YAAN,MAAkB4B,GAAlB,SAAkBA,EAAM7B,YAAxB,EAAkB,EAAaC,WAAY,GACnFylB,EACJ7lB,IACC4lB,GACDF,KACA,MAAC1jB,GAAD,SAACA,EAAM2V,QAAN,EAAa5K,MAAK,SAACvK,GAAD,aAAU,SAAAA,EAAKL,mBAAL,IAAmB3N,OAAnB,MAA0BwR,OAA1B,EAA0BA,EAAaxR,QAEhEsxB,GACH9E,GAAoBC,KACjB,MAAJjf,OAAA,EAAAA,EAAMxD,SAAUrB,EAAUioB,WACzB,MAACpjB,KAAMjC,aAAciC,EAAKjC,YAAa,IAAI0U,MAAOC,UAAY,KAE3DqR,EAAmBnxB,eACvB,SAACgwB,GAAD,OAA4B,WAC1BN,GAAY,GACZK,EAAWC,MAEb,CAACD,IAGGqB,EAAc,CAClB,CACE5J,MAAO,iBACPzQ,QAASoa,EAAiB,IAC1B9O,KAAM,oBAER,CACEmF,MAAO,iBACPzQ,QAASoa,EAAiB,IAC1B9O,KAAM,oBAER,CACEmF,MAAO,iBACPzQ,QAASoa,EAAiB,IAC1B9O,KAAM,qBAIJgP,EAAkB,CACrBJ,EAEG,CACEzJ,MAAO,cACPnF,KAAM,UACNtL,QAAS,kBAAM8R,MAJjB,KAMHqI,EAEG,CACE1J,MAAO,iBACPnF,KAAM,gBACNtL,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvE,cAAczI,SACrCgP,EAAS9B,GAAQF,MAAMvE,cAAc3F,SAAS,CAAC,OAAQyD,KAEnDif,IAAiCD,GAAoBhb,IAEvDyE,EAAS9B,GAAQP,QAAQnE,SAASgB,YAAY,CAACe,KAC/CyE,EAAS9B,GAAQF,MAAMvE,cAAcrB,iBAAiB,CAACmD,MAGzDyE,EAAS9B,GAAQF,MAAMvE,cAAcrF,SAAQ,IAC7C4L,EAAS9B,GAAQF,MAAMvE,cAAc3F,SAAS,CAAC,OAAQyD,OAf3D,MAkBJqZ,OAAOC,SAEH4K,EAAkB,CACrB,CAAC/oB,EAAU6nB,cAAc7O,SAASnU,EAAKxD,OAEpC,CACE4d,MAAO,uBACPnF,KAAM,eACNtL,QAASoa,EAAiB,OAJ5B,KAMH,CAAC5oB,EAAU8nB,MAAM9O,SAASnU,EAAKxD,OAE5B,CACE4d,MAAO,cACPnF,KAAM,eACNtL,QAAS,kBACP6Y,EAAqB,CACnBrR,UAAW,CAAE3e,GAAIiO,OAAOT,EAAKxN,IAAKgK,MAAOrB,EAAUgpB,eANzD,KASH,CAAChpB,EAAUgpB,WAAWhQ,SAASnU,EAAKxD,OAEjC,CACE4d,MAAO,eACPnF,KAAM,OACNtL,QAAS,kBAAMuZ,EAAgB/nB,EAAU8nB,QAJ3C,KAMH,CAAC9nB,EAAU6nB,aAAc7nB,EAAUipB,UAAUjQ,SAASnU,EAAKxD,OAExD,CACE4d,MAAO,iBACPnF,KAAM,mBACNtL,QAAS,kBAAMwZ,MAJjB,MAMJ9J,OAAOC,SAEH+K,EAAa,eACbrmB,EAASimB,EAAkB,IADd,KAEbR,GAAiB,CAACtoB,EAAU8nB,MAAM9O,SAAjB,MAA0BnU,OAA1B,EAA0BA,EAAMxD,OAASwnB,EAAc,IAF3D,KAGbP,EAAgBS,EAAkB,KAGxC,OACE,gBAAClI,GAAA,EAAD,KACE,gBAACsI,GAAA,EAAIC,MAAL,CACElW,UAAWgW,EAAc1W,OACzB9R,KAAMwmB,EACNpN,KAAMoN,EAAa,QAAU,OAC7BmC,SAAU,CACRC,WAAY,GACZ5L,aAAc,KAIhBlS,QAAS0d,EACTK,cAAe,gBAAG7oB,EAAH,EAAGA,KAAH,OAAcymB,EAAYzmB,O,8DCvO3C8oB,GAAuBjqB,IAASkqB,OAAO,CAC3CC,IAAKjyB,QAAW,kBACd,kCAA8CkyB,MAC5C,kBAA8C,CAC5C9e,QADF,EAAG2e,4BAKPI,QAASnyB,QAAW,kBAClB,kCAA8CkyB,MAC5C,kBAA8C,CAC5C9e,QADF,EAAG2e,4BAOPK,IAAKpyB,QAAW,kBACd,kCAAuCkyB,MAAK,kBAA8C,CACxF9e,QAD0C,EAAG2e,8BAWpC,SAASM,GAAUtzB,GAChC,IAAQuzB,EAAuBvzB,EAAvBuzB,IAAK7qB,EAAkB1I,EAAlB0I,KAAM6Q,EAAYvZ,EAAZuZ,QACbia,EAAaC,aAAKF,EAAK,IAAIzS,MAC3B4S,EAAsB,EAAIF,EAC1BG,EAAqB,GAAKH,EAC1BI,EAAwB,GAAKJ,EACnC,OACE,gBAACR,GAAD,CACEa,UAAWL,EAAa,EACxBnsB,SAAUmsB,EAAa,EAAIA,EAAa,EACxCxhB,OACEwhB,EAAa,EACT,CACE,CAAa,UAAZja,EAAsB,UAAY,UAAWqa,GAC9C,CAAa,UAAZra,EAAsB,UAAY,UAAWoa,GAC9C,CAAa,UAAZpa,EAAsB,UAAY,UAAWma,IAEhD,CAAC,CAAa,UAAZna,EAAsB,UAAY,UAAW,IAErD7Q,KAAMA,GAAQ,GACdorB,YAAa,IAKX,YAAuC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACVC,EAAUpwB,KAAK+E,MAAMmrB,EAAgB,IACrC9C,EAAUiD,aAAiBH,GAC3BI,EAAmBF,EAAU,GAAV,IAAmBA,EAAYA,EAClDG,EAAmBnD,EAAU,GAAV,IAAmBA,EAAYA,EACxD,OACE,gBAAC,KAAStoB,KAAV,CAAejG,MAAO,CAAEmD,MAAOmuB,EAAepuB,SAAU,KACrDwuB,EADH,IACsBD,MClDnB,SAASE,GAAWr0B,GACjC,IAAQqO,EAAoCrO,EAApCqO,KAAMimB,EAA8Bt0B,EAA9Bs0B,OAAQC,EAAsBv0B,EAAtBu0B,QAASn0B,EAAaJ,EAAbI,SAC/B,EAA2BkW,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDtC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACf,OACE,gBAAC4hB,GAAA,eAAD,CACE7sB,MAAO,CAAE1E,EAAG,EAAKF,EAAG,KACpBwwB,IAAK,CAAEtwB,EAAG,GAAKF,EAAG,GAClBL,MAAOqC,GAAOG,UACd8M,OAAQ,CAACW,EAAMX,OAAOmT,QAASxS,EAAMX,OAAOmT,UAE5C,gBAACnd,EAAA,QAAD,CAAMtF,MAAOqC,GAAOiQ,SAChBuf,EACA,gBAACE,GAAA,EAAD,CACEnR,KAAK,SACL5a,KAAM,GACN7C,MAAO8M,EAAMX,OAAOmT,QACpBnN,QAAS,kBAAOsc,EAASA,IAAW,QAL5B,MASd,gBAACtsB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO2vB,iBAClB,gBAAC1sB,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,KAAM,EAAI,IAClB,MAAJhJ,KAAMjC,YAAcuoB,aAA0B,IAAlBtmB,EAAKjC,WAAmB,IAAI0U,MACvD,gBAACwS,GAAD,CAAWC,IAAK,IAAIzS,KAAuB,IAAlBzS,EAAKjC,YAAoBmN,QAAQ,QAAQ7Q,KAAM,KAExE,gBAAC,KAAOggB,KAAR,CACEhgB,KAAM,GACN4a,KAAK,kBACLzd,MAAO8M,EAAMG,KAAOH,EAAMX,OAAOgJ,KAAOpI,EAAQX,QAAQa,KACxDpQ,MAAO,CAAEyF,gBAAiBwK,EAAMG,KAAOF,EAAQX,QAAQa,KAAOF,EAAQX,QAAQc,UAIpF,gBAAC/K,EAAA,QAAD,CAAMtF,MAAOqC,GAAO6vB,gBAClB,gBAAClK,GAAA,EAAD,CAAOhoB,MAAOqC,GAAO0S,OAArB,eAAmCpJ,OAAnC,EAAmCA,EAAMwmB,YACzC,gBAAC5H,GAAA,EAAD,CAAWvqB,MAAOqC,GAAO+vB,WAAzB,MAAqCzmB,OAArC,EAAqCA,EAAM5F,QAI9CrI,GAKP,IAAM2E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTjF,MAAO,OACPylB,WAAY,IAEd1Q,QAAS,CACPjP,cAAe,MACfM,eAAgB,YAElBquB,gBAAiB,CACf3uB,cAAe,MACfX,WAAY,SACZiB,eAAgB,SAChBlB,kBAAmB,GACnB+hB,aAAc,GACdhJ,UAAW,IAEb0W,eAAgB,CACdvvB,YAAa,EACb6S,WAAY,OACZtS,SAAU,GACVyR,KAAM,EAAI,EACVjS,WAAY,aACZiB,eAAgB,UAElBoR,MAAO,GACPqd,UAAW,KC/EE,SAASC,GAAS/0B,GAC/B,IAAQkmB,EAAUlmB,EAAVkmB,MACF7O,EAAO,EAAI6O,EAAMlK,OAEvB,OACE,gCACE,gBAACqN,GAAA,EAAD,CAAS3mB,MAAOqC,GAAOiwB,UACvB,gBAAChtB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOG,WACjBghB,EAAMllB,KAAI,SAAC4M,EAAMqB,GAAP,OACT,gCACE,gBAACjH,EAAA,QAAD,CACEtF,MAAO,CAAE2U,QAETzL,IAAG,aAAeqD,GAElB,gBAAC,KAAK4U,KAAN,CACEoR,WAAY,CACVlwB,GAAO0S,MACP,CACES,YAA0B,IAAdtK,EAAKsnB,KAAiB,YAAStyB,IAG/CF,MAAO,CACLyb,gBAAiB,IAEnB1G,MAAO7J,EAAKvD,MACZ8qB,iBAAkBpwB,GAAO4oB,YACzBA,YAAa/f,EAAK6J,MAClBO,QAASpK,EAAKoK,WAGjB/I,IAAMiX,EAAMlK,OAAS,EAAI,KAExB,gBAACqN,GAAA,EAAD,CAASzd,IAAG,qBAAuBqD,EAAKvM,MAAOqC,GAAOqwB,wBASpE,I,MAAMrwB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CAAEjF,MAAO,OAAQ8F,cAAe,OAC3CivB,QAAS,CACP90B,OAAQ8E,IAAWwgB,cACnBvlB,MAAO,QAETm1B,gBAAiB,CACfn1B,MAAO+E,IAAWwgB,cAClBtlB,OAAQ,QAEVuX,MAAO,CACLjS,UAAW,UAEbmoB,YAAa,CACXnoB,UAAW,YC+BAogB,MA1FWxF,aAAH,q2CA+FT,CACZvB,WAAY,SAACgH,GAAD,aAAWA,OAAX,EAAWA,EAAOxX,QC7CjBsQ,MAnDcyB,aAAH,02BAmD8D,CACtFvB,WAAY,SAACkB,GAAD,OAAYA,EAAOsV,cC7BjC,SAASC,GAAT,GAA0D,IAA7Br1B,EAA4B,EAA5BA,MAC3B,OACE,gBAACwrB,GAAA,EAAD,CACE/oB,MAAO,CACLxC,OAAQ,IACR4G,QAAS,GACT4f,OAAQ,GACRzmB,QACAmF,WAAY,SACZiB,eAAgB,UAElBqlB,UAAW,GAEX,gBAACD,GAAA,EAAKf,MAAN,CACEjT,MAAM,YACN/U,MAAO,CAAE0D,UAAW,SAAUC,eAAgB,SAAUgR,KAAM,GAC9D4d,WAAY,CAAEzvB,UAAW,aAMjC,SAAS+vB,GAAT,GAAqD,IAA7Bt1B,EAA4B,EAA5BA,MACtB,OACE,gBAAC,KAAD,CACEgnB,WAAS,EACTnmB,eAAgB,CACdZ,OAAQ,IACRD,QACAymB,OAAQ,IAEVjkB,OAAQ,CAAC,CAAEmJ,IAAK,sBAAuB1L,OAAQ,IAAKD,YAK3C,SAASid,KAAc,IAAD,QAC7BpG,EAAWV,KACjB,EAAkCnV,YAAe,GAAjD,WAAOyvB,EAAP,KAAmBC,EAAnB,KACM7b,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SAC5C,EAA2BwB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDrC,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,MACX6iB,EAAQC,sBAEd,EAIIC,GAAa,CACflW,UAAW,CACT3e,GAAIiO,OAAO0mB,EAAMG,OAAOtnB,KAAKxN,KAE/BilB,aAAc,MAPR8P,EADR,EACE5V,KACArJ,EAFF,EAEEA,QACAoP,EAHF,EAGEA,QAQI1X,EAAOunB,GAAgBJ,EAAMG,OAAOtnB,KAElCgE,EADgBmO,KAChBnO,YAEFye,EAAqBC,GAAsB,CAC/C9R,UAAW,kBACTnI,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,SAAU4D,EAAKwmB,WAAhB,WACPtb,QAAS,cAGfR,QAAS,SAACtO,GAAD,OACPqM,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,UACA8O,QAAS,cAIXsc,EAAqBC,GAAsB,CAC/C7W,UAAW,SAAClU,GAAD,iBACT+L,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,UAAY,SAAAM,EAAQ8D,OAAR,WAAcL,eAAd,WAA4Ba,WAA5B,IAAkC5G,OAAQ,QAA/C,6BACL4F,EAAKwmB,WAEPtb,QAAS,cAGfR,QAAS,SAACtO,GAAD,OACPqM,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,UACA8O,QAAS,cAKXwc,EAAe90B,eACnB,SAAO4N,GAAP,SAAAzN,EAAAC,OAAA,kEAAAD,EAAA,MACQy0B,EAAmB1W,OAAO,CAC9Bte,GAAIiO,OAAOD,EAAKhO,OAFpB,8DAKA,CAACg1B,IAGGG,EAAc/0B,eAClB,SAAOsL,GAAP,SAAAnL,EAAAC,OAAA,kEAAAD,EAAA,MACQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChBwvB,QAASvhB,OAAOvC,EAAM1L,OAH1B,8DAMA,CAACiwB,EAAoBziB,EAAKxN,KAGtBo1B,EAAYh1B,eAChB,SAAOkL,GAAP,SAAA/K,EAAAC,OAAA,kEAAAD,EAAA,MACQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChByvB,MAAOxhB,OAAO3C,EAAItL,OAHtB,8DAMA,CAACiwB,EAAoBziB,EAAKxN,KAGtBq1B,EAAcj1B,eAClB,SAAOuL,GAAP,SAAApL,EAAAC,OAAA,kEAAAD,EAAA,MACQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChB0vB,QAASzhB,OAAOtC,EAAM3L,OAH1B,8DAMA,CAACiwB,EAAoBziB,EAAKxN,KAGtBs1B,EAAmBl1B,eACvB,SAAOm1B,GAAP,SAAAh1B,EAAAC,OAAA,kEAAAD,EAAA,MACQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChB2vB,aAAc1hB,OAAOsnB,EAAGv1B,OAH5B,8DAMA,CAACiwB,EAAoBziB,EAAKxN,KAGtBw1B,EAAclU,GAAezY,EAAW4sB,YACxCC,EAAgBpU,GAAezY,EAAWof,gBAE1C0N,EAAgBrU,GAAezY,EAAW+sB,YAC1CC,EAAkBvU,GAAezY,EAAWitB,gBAElD11B,aAAgB,WACN,MAAJoN,KAAM5B,WAAgB,MAAJ4B,OAAA,EAAAA,EAAM5B,UAAW,IAAMikB,GAC3CC,GAAY,KAEb,CAACD,EAAD,MAAariB,OAAb,EAAaA,EAAM5B,WAEtB,IAAMoR,EAAa+Y,2BAEb5S,EAAsB6S,MAAMC,KAAK,CACrC9a,SAAa,MAAJ3N,GAAA,SAAAA,EAAM2V,YAAN,IAAahI,SAAU,KAAU,MAAJ3N,OAAA,EAAAA,EAAM0oB,iBAAkB,KAC7D/1B,KAAI,SAACgZ,EAAGrM,GAAJ,cAAoB,MAAJU,GAAA,SAAAA,EAAM2V,YAAN,IAAahI,SAAU,GAAKrO,EAASU,EAAK2V,MAAiBrW,GAAS,KAErFlB,GAAe,MAAJ4B,OAAA,EAAAA,EAAM5B,YAAN,MAAkB4B,GAAlB,SAAkBA,EAAM7B,YAAxB,EAAkB,EAAaC,WAAY,EACtDuqB,EAAgBvqB,IAAgB,MAAJ4B,OAAA,EAAAA,EAAM0oB,iBAAkB,GAElD92B,EAAUg3B,eAAVh3B,MAIFi3B,EAAarzB,KAAKszB,MAAMl3B,EAAK,MAA6B,EAC5Dm3B,EAAe,IAAwBF,EAF3B,GAGhBE,EAAen3B,EAAQm3B,EAAen3B,EAAQm3B,EAE9C,IAAMC,IAAiB,MAACzB,GAAD,SAACA,EAAc5R,QAAd,EAAqBhI,SAAUrF,EAEvD,OACE,gBAAC,GAAD,CAAMjU,MAAO,CAAEisB,SAAU,EAAGxmB,gBAAiBwK,EAAMX,OAAOiJ,aACxD,gBAAC,GAAD,CAAQ5M,KAAMA,GACZ,gBAAC,IAAD,CAAY8a,YAAU,EAACmO,gCAAgC,EAAO50B,MAAO,CAAEykB,eAAgB,IACrF,gBAAC9C,GAAD,CACEha,MAAK,MAAEgE,OAAF,EAAEA,EAAM7B,MACbqW,SAAU,SAAOrW,GAAP,mBAAApL,EAAAC,OAAA,uDACC,MAAJgN,GAAA,SAAAA,EAAM2V,YAAN,IAAahI,SAAU,IAAMxP,EAAMC,UAAY,IAD5C,gBAEAgnB,IAAY,MAAJplB,GAAA,SAAAA,EAAM2V,YAAN,IAAahI,SAAU,IAAMxP,EAAMC,UAAY,GAE7DqK,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,oBAAqBgpB,EAAtB,4CACPla,QAAS,aAPP,wCAAAnY,EAAA,MAWA80B,EAAY1pB,IAXZ,OAYNuZ,IAZM,6DAeVpD,OAAK,EACLxa,gBAAgB,cAChBtC,MAAO+M,EAAQX,QAAQa,OAEzB,gBAAC4P,GAAD,CACErY,MAAK,MAAEgE,OAAF,EAAEA,EAAMlC,IACb0W,SAAUoT,EACVtT,OAAK,EACLxa,gBAAgB,cAChBtC,MAAO+M,EAAQX,QAAQa,OAEzB,gBAACqR,GAAD,CACE9Z,MAAK,MAAEgE,OAAF,EAAEA,EAAM9B,MACbsW,SAAUmT,EACVrT,OAAK,EACLxa,gBAAgB,cAChBtC,MAAO+M,EAAQX,QAAQa,OAEzB,gBAACiR,GAAD,CACE1Z,MAAK,MAAEgE,OAAF,EAAEA,EAAM/B,WACb0X,MAAO3V,EAAK2V,OAAS,GACrBnB,SAAUsT,EACVxT,OAAK,EACLxa,gBAAgB,cAChBtC,MAAO+M,EAAQX,QAAQa,QAG3B,gBAACiiB,GAAD,CACE7O,MAAO,CACL,CACEzO,MAAO,SACPpN,OAAO,WACJb,EAAU8nB,KAAO,QADb,MAEJ9nB,EAAU6nB,aAAe,WAFrB,MAGJ7nB,EAAUgpB,UAAY,aAHlB,MAIJhpB,EAAUipB,SAAW,UAJjB,MAKJjpB,EAAUioB,OAAS,UALf,SAMLpjB,OANK,EAMLA,EAAMxD,QAEV,CAAE4M,MAAO,QAASpN,MAAU2sB,EAAL,IAAsBvqB,GAC7C,CACEgL,MAAO,SACPpN,QAAc,MAAJgE,OAAA,EAAAA,EAAMkpB,SAAU,GAArB,UAKb,gBAAC,IAAD,CACE9a,OAAO,QACP+a,aAAc,SAAC5pB,EAAMC,GAAP,gBAA2B,MAAJD,OAAA,EAAAA,EAAM/M,KAAMgN,IACjDnL,MAAO,CAAE2U,KAAM,EAAGnX,OAAQ2E,KAAWC,IAAI,UAAU5E,QACnDwtB,sBAAuB,CACrBztB,MAAOm3B,EACPhxB,UAAW,SACXC,eAAgB,eAChBqoB,cAAe,KAEjBwI,WAAYA,EACZ/N,YAAY,EACZnJ,KAAOqX,EAAyB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAA9BrT,EACxByT,WAAY9gB,EACZ+gB,UAAW3R,EACX4R,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY9gB,EAAS+gB,UAAW,kBAAM3R,OACtE8R,WAAY,YAA4B,IAAD,EAAlB/T,EAAkB,EAAxBlW,KAAYD,EAAY,EAAZA,MACzB,OAAa,IAATmW,EACK,gBAACyR,GAAD,CAAct1B,MA9Fb,MAiGM,IAAT6jB,EACL,gBAACwR,GAAD,CAAmB1pB,IAAG,cAAgB+B,EAAS1N,MAlGvC,MAoGR,gBAACqvB,GAAD,CACE5sB,MAAO,CAAEzC,MArGH,KAsGN2L,IAAG,QAAUkY,EAAKjjB,GAClBgO,KAAMiV,EACNyL,UACc,MAAXld,OAAA,EAAAA,EAAaxR,OAAb,MAAoBijB,GAApB,SAAoBA,EAAMtV,mBAA1B,EAAoB,EAAoB3N,KAAM21B,GAAkBE,EAC7DX,OACAnzB,EAENoV,QAAS,SAACnJ,GAAU,IAAD,IACXipB,EAAS,MAAGzpB,GAAH,SAAGA,EAAM2V,YAAT,EAAG,EAAa0D,QAC7B,gBAAGqQ,EAAH,EAAGA,YAAH,OAAqBA,GAAeA,IAAgBlpB,EAAKkpB,eAErDC,EAAmB,WACnBF,IACFhhB,EAAS9B,GAAQF,MAAMvE,cAAczI,SACrCgP,EAAS9B,GAAQF,MAAMvE,cAAc3B,aAAakpB,IAClDhhB,EAAS9B,GAAQF,MAAMvE,cAAc3F,SAAS,CAAC,OAAQyD,KACvDwP,EAAWoa,SAAS,yBAGlBC,EAAc,WAClBphB,EAAS9B,GAAQF,MAAMxE,SAASpF,QAAQ2D,IACxCiI,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,OAAQyD,OAGhD,SAAAQ,EAAKQ,WAAL,IAAWxO,OAAX,MAAkBwR,OAAlB,EAAkBA,EAAaxR,IAC7Bw1B,IACF,MAAIyB,KAAW9b,OACbgc,IAEAE,KAGK3B,IACT,MAAIuB,KAAW9b,OACbgc,IAEAE,WAQd,gBAACzH,GAAD,CAAcpiB,KAAMA,IACpB,gBAAC,GAAD,CACEnE,KAAM4K,EAAMxE,SAASpG,KACrB2gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMxE,SAASpF,SAAQ,KACvD+T,UAAW,WACTnI,EAAS9B,GAAQF,MAAMxE,SAASpF,SAAQ,OAG5C,gBAAC,GAAD,CACEhB,KAAM4K,EAAMvE,cAAcrG,KAC1B2gB,QAAS,WACP/T,EAAS9B,GAAQF,MAAMvE,cAAcrF,SAAQ,IAC7C4L,EAAS9B,GAAQF,MAAMvE,cAAczI,UAEvCmX,UAAW,kBAAMnI,EAAS9B,GAAQF,MAAMvE,cAAcrF,SAAQ,Q,uBCvVvD,SAASitB,GAAiBn4B,GACvC,IAAQ0I,EAAiC1I,EAAjC0I,KAAM0vB,EAA2Bp4B,EAA3Bo4B,gBAAiBC,EAAUr4B,EAAVq4B,MAEvBp4B,EAAU4E,KAAWC,IAAI,UAAzB7E,MAGFq4B,IAFcr4B,EAAQ,IAAM,IAAMA,GAEJ,GAAgB,GAAPyI,GAAaA,EAE1D,OACE,gBAACV,EAAA,QAAD,CAAMtF,MAAOqC,GAAOwzB,YACjB1B,MAAMC,KAAK,CAAE9a,OAAQtT,IAAQ1H,KAAI,SAACgZ,EAAGrM,GACpC,IAAM6qB,EAAgBH,GAASA,EAAMrc,OAASrO,EAG1C8qB,EAFW9qB,GAASyqB,GAAmB,GAEhB,QAAU,GAGrC,OAFAK,EAFkB9qB,IAAUyqB,EAEF,SAAWK,EAInC,gBAAC,WAAD,CAAgB7sB,IAAK+B,GACnB,gBAAC,KAAO+a,KAAR,CACEpF,KAAMkV,GAAiBH,EAAQA,EAAM1qB,GAAS8qB,EAC9C/vB,KAAM,GACNhG,MAAO,CAACqC,GAAOue,MAAO8U,GAAmB,GAAKzqB,EAAQ5I,GAAO2zB,cAAW91B,KAEzE8F,EAAO,EAAIiF,EACV,gBAAC3F,EAAA,QAAD,CACEtF,MAAO,CACLqC,GAAO4zB,OACP,CAAE14B,MAAOq4B,IACRF,GAAmB,GAAKzqB,EAAQ5I,GAAO6zB,gBAAah2B,KAGvD,UAQhB,IAAMmC,GAASC,IAAWC,OAAO,CAC/BszB,WAAY,CACVxyB,cAAe,MACf5F,SAAU,WACV2C,IAAK,IACLsD,UAAW,UAEbuyB,OAAQ,CACNz4B,OAAQ,GACRge,UAAW,GACX4U,YAAa,EACb7yB,MAAO,GACPkI,gBAAiB,SAEnBywB,WAAY,CACVzwB,gBvC/DwB,WuCiE1Bmb,KAAM,CACJnb,gBAAiB,QACjB2qB,YAAa,GAEf4F,SAAU,CACRvwB,gBvCtEwB,UuCuExB2qB,YAAa,KCxDJ+F,GAAgB53B,gBAAoC,CAC/D0M,MAAO,EACPmrB,MAAO,EACPC,SAAU,kBAAM,QAyClB,IAAQ94B,GAAU4E,KAAWC,IAAI,UAAzB7E,MAEF8E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTjF,SACAoX,KAAM,EACNqX,cAAe,KAIJsK,GAhDf,SAAgBh5B,GACd,IAAQI,EAAoBJ,EAApBI,SAAUi4B,EAAUr4B,EAAVq4B,MAClB,EAA0Bp3B,WAAe,GAAzC,WAAO0M,EAAP,KAAcorB,EAAd,KACMrhB,EAAMzW,SAA6B,MACnC63B,EAAQ73B,WAAe63B,MAAM14B,GAEnC,OACE,gBAACy4B,GAAcI,SAAf,CACE5uB,MAAO,CACLsD,QACAmrB,QACAC,SAAU,SAAClrB,GAAS,IAAD,EAGjB,SAAA6J,EAAIpW,UAAJ,EAAa43B,cAAc,CAAEvrB,MAAOE,EAAKsrB,UAAU,OAIvD,gBAACnxB,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOG,YACnB,gBAAC,KAAD,CACEk0B,gBAAc,EACdzrB,MAAOA,EACP0rB,oBAAqB,SAACC,GAAD,OAAiB,gBAACnB,GAAD,QAAsBmB,EAAtB,CAAmCjB,MAAOA,MAChFnB,WAAY,EACZqC,eAAe,EACfC,UAAU,EACV9hB,IAAKA,EACL8W,cAAe,YAAgC,IAAtB3gB,EAAqB,EAA5BF,MAA4B,EAAhB8rB,UAC5BV,EAASlrB,GAAO,KAGjBzN,M,gDC/CIa,iBAAgD,SAACjB,EAAO0X,GACrE,IAAQxX,EAAW+2B,eAAX/2B,OACAyS,EAAU2D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAxCtC,MACAjQ,EAAoD1C,EAApD0C,MAAOtC,EAA6CJ,EAA7CI,SAAUstB,EAAmC1tB,EAAnC0tB,sBAA0BhJ,EAAnD,KAA4D1kB,EAA5D,IAEA,OACE,gBAACkpB,GAAA,EAAD,QACMxE,EADN,CAEEhN,IAAKA,EACLgiB,oBAAoB,UACpBC,0BAA0B,UAC1BC,+BAA+B,SAC/Bl3B,MAAO,CACLqC,GAAOG,UACP,CAAEiD,gBAAiBwK,EAAMX,OAAOmT,QAASjlB,OAAQA,EAAS,KAC1DwC,GAEFgrB,sBAAuB,CACrB3oB,GAAOe,QACP,CAAEqC,gBAAiBwK,EAAMX,OAAOiJ,YAChCyS,KAGDttB,MAKD2E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,GAERvR,QAAS,CACPX,kBAAmB,GACnBC,WAAY,aACZupB,SAAU,EACVD,cAAe,MC4DnB,IAAM3pB,GAASC,IAAWC,OAAO,CAC/B40B,aAAc,CACZxzB,eAAgB,UAElBnB,UAAW,CACTiD,gBAAiB,UACjBhD,kBAAmB,GACnBiB,UAAW,UAEbN,QAAS,CAAE4f,WAAY,IAAKiJ,SAAU,EAAGD,cAAe,GACxDjX,MAAO,CACLtX,SAAU,WACV2C,IAAK,IACLokB,aAAc,GACdrhB,MAAO,QACPD,SAAU,GACVsS,WAAY,OACZ1S,UAAW,SACXY,UAAW,UAEb0R,OAAQ,CACN1R,UAAW,SACXnG,MAAO,QAET65B,WAAY,CACV1zB,UAAW,SACXnG,MAAO,OACPujB,iBAAkB,IAEpBuW,QAAS,CACP3zB,UAAW,SACXhB,WAAY,WACZupB,SAAU,EACVtoB,eAAgB,WAChBpG,MAAO,OACP+5B,SAAU,IACV9S,aAAc,OAIH+S,GA3Hf,SAAsBj6B,GACpB,IACEI,EAWEJ,EAXFI,SACAqX,EAUEzX,EAVFyX,MACAd,EASE3W,EATF2W,QACAujB,EAQEl6B,EARFk6B,OACAC,EAOEn6B,EAPFm6B,gBACAC,EAMEp6B,EANFo6B,gBACAvM,EAKE7tB,EALF6tB,OACAwM,EAIEr6B,EAJFq6B,aACAv5B,EAGEd,EAHFc,eACA4B,EAEE1C,EAFF0C,MACA43B,EACEt6B,EADFs6B,cAEF,EAA0Bz1B,KAAWC,IAAI,UAAjC7E,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEf,EAA4Be,aAAiB43B,IAArClrB,EAAR,EAAQA,MAAOorB,EAAf,EAAeA,SAETwB,EAAYt5B,WAWlB,OATAA,aAAgB,WACVs5B,EAAUj5B,SACZi5B,EAAUj5B,QAAQk5B,SAAS,CAAEz3B,EAAG,EAAGo2B,UAAU,IAC7Ch3B,QAAQC,IAAI,aAAcqV,EAAO,UAEjCtV,QAAQC,IAAI,YAEb,CAACuL,EAAO8J,IAGT,gBAACzP,EAAA,QAAD,CAAMtF,MAAOsC,IAAWyqB,QAAQ,CAAC1qB,GAAO80B,aAAc,CAAE55B,SAASyC,KAC/D,gBAAC+3B,GAAD,CACE/3B,MAAO,CAACqC,GAAOG,UAAWpE,GAAkB,GAAI,CAAEb,UAClDytB,sBAAuB1oB,IAAWyqB,QAAQ,CACxC1qB,GAAOe,QACP,CAAE40B,UAAWx6B,EAAQiI,gBAAiB,eACtCkyB,IAEFd,eAAgBe,EAChBp3B,cAAc,WAGdwU,IAAK6iB,GAEL,gBAAC7P,GAAA,EAAD,CAAOhoB,MAAOqC,GAAO0S,OAAQA,GAC5BrX,EAED,gBAAC4H,EAAA,QAAD,CAAMtF,MAAOqC,GAAOg1B,QAAS72B,cAAc,YACzC,gBAAC0U,EAAA,EAAD,CACEhM,IAAG,eAAiB+B,EACpBgJ,QAASA,EACToB,KAAK,YACLlS,MAAM,UACNgS,SAAUlB,EACVjU,MAAOqC,GAAO+S,OACdE,QAAS,oBAAA5W,EAAAC,OAAA,gDACPc,QAAQC,IAAI,oBAAqBuL,GACjCkgB,EAAOlgB,EAAOorB,GAFP,8DAKRqB,GAGDF,EACA,gBAACtiB,EAAA,EAAD,CACEhM,IAAG,UAAY+B,EACfoK,KAAK,OACLF,SAAUlB,EACV9Q,MAAM,UACNnD,MAAOqC,GAAO+0B,WACd9hB,QAAS,oBAAA5W,EAAAC,OAAA,gDACP64B,EAAOvsB,EAAOorB,GADP,8DAIRoB,GAXM,S,wBC5DrB,I,GAAMp1B,GAASC,IAAWC,OAAO,CAC/B8nB,SAAU,CACRlnB,MAAO,QACPL,UAAW,UAEbiS,MAAO,CACL7R,SAAU,GACVC,MAAO,QACPL,UAAW,SACX0S,WAAY,QAEdpS,QAAS,CACPV,WAAY,SACZiB,eAAgB,SAChBsoB,SAAU,EACVvoB,UAAW,UAEbkd,KAAM,CACJ6D,eAAgB,GAChBhf,gB3CxCwB,W2C0C1BjD,UAAW,CACTC,kBAAmB,GACnBC,WAAY,SACZ+C,gBAAiB,iBAINwyB,GAzCf,SAA4B36B,GAC1B,IAAQyX,EAA6BzX,EAA7ByX,MAAOsV,EAAsB/sB,EAAtB+sB,SAAarI,EAA5B,KAAqC1kB,EAArC,IACA,OACE,gBAAC,GAAD,MAAc0C,MAAOqC,GAAOG,WAAewf,GACzC,gBAAC1c,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC,KAAO4iB,KAAR,CAAapF,KAAK,QAAQ5a,KAAM,IAAKhG,MAAOqC,GAAOue,OACnD,gBAAC3a,EAAA,EAAD,CAAMjG,MAAOqC,GAAO0S,OAAQA,GAC5B,gBAACwV,GAAA,EAAD,CAAWvqB,MAAOqC,GAAOgoB,UAAWA,MCmC7BpO,MAhDkCyB,aAAH,27BAmDT,CACnCvB,WAAY,SAACkB,GAAD,OAAYA,EAAO6a,wBAC/Bnc,UAAW,GACXK,cAAe,K,wlBCjDF,SAAS+b,GAAQ76B,GAC9B,IAAQ86B,EAAyC96B,EAAzC86B,MAAOC,EAAkC/6B,EAAlC+6B,UAAWzrB,EAAuBtP,EAAvBsP,SAAU0rB,EAAah7B,EAAbg7B,SACpC,EAAgD/5B,YAAe,GAA/D,WAAOg6B,EAAP,KAAyBC,EAAzB,KACA,EAA4Bj6B,WAAe65B,GAA3C,WAAOK,EAAP,KAAeC,EAAf,KACA,EAAoCn6B,WAAe85B,GAAnD,WAAOM,EAAP,KAAmBC,EAAnB,KACM3oB,EAAQmQ,eAEd,OACE,gBAAC2I,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,KAAMhE,UAAW,GACnC,gBAACD,GAAA,EAAKG,QAAN,CAAclpB,MAAOqC,GAAO+mB,KAC1B,gBAAC9jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOw2B,cAClB,gBAACpY,GAAA,EAAD,CACExG,UAAW,kBAAMue,GAAoB,IACrCxe,QAASue,EACTv4B,MAAO,CAAE84B,SAAU,KACnBpY,OACE,gBAAC,IAAD,CACE1gB,MAAO,CACLisB,SAAU,EACVzuB,OAAQ,GACR6F,cAAe,MACfX,WAAY,SACZiB,eAAgB,UAElB2R,QAAS,kBAAMkjB,GAAoB,KAEnC,gBAAC,KAAKxS,KAAN,CAAWpF,KAAK,WAAW5gB,MAAOqC,GAAOue,OACzC,gBAAC3a,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO02B,eAAgB,CAAE51B,MAAO8M,EAAMX,OAAO+Q,aAA3D,MACGzT,OADH,EACGA,EAAUka,cAKhB,CAAC,KAAO,KAAO,IAAO,IAAM,IAAM,IAAM,KAAMxoB,KAAI,SAAC06B,GAAD,OACjD,gBAAC,KAAK7X,KAAN,CACEjY,IAAK8vB,EACL1jB,QAAS,WACH0jB,GACFV,EAAS,WAAYU,GAEvBR,GAAoB,IAEtBzjB,MAAOikB,EAAIlS,WACXxmB,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAWhmB,MAAOqC,GAAOue,KAAMA,KAAK,qBAMxD,gBAACtb,EAAA,QAAD,CAAMtF,MAAOqC,GAAO42B,cAClB,gBAAC,KAAKjT,KAAN,CAAWpF,KAAK,gBAAgB5gB,MAAOqC,GAAOue,OAC9C,gBAACuB,GAAA,EAAD,CACExa,MAAK,MAAE8wB,OAAF,EAAEA,EAAQ3R,WACfoS,OAAQ,kBAAMZ,EAAS,QAASlsB,OAAOqsB,KACvC1W,aAAc,SAACoX,GACb,GAAI,KAAKhc,KAAKgc,GAAW,CACvB,MAAkBA,EAASlX,MAAM,QAAU,CAACwW,GAArCvW,EAAP,YACAwW,EAAUxW,QACAiX,GACVT,EAAU,KAGd14B,MAAOqC,GAAO+2B,UACdhX,aAAa,aAIjB,gBAAC9c,EAAA,QAAD,CAAMtF,MAAOqC,GAAOg3B,eAClB,gBAAC,KAAKrT,KAAN,CAAWpF,KAAK,UAAU5gB,MAAOqC,GAAOue,OACxC,gBAACuB,GAAA,EAAD,CACExa,MAAK,MAAEgxB,OAAF,EAAEA,EAAY7R,WACnBoS,OAAQ,kBAAMZ,EAAS,YAAalsB,OAAOusB,KAC3C5W,aAAc,SAACuX,GACb,GAAI,KAAKnc,KAAKmc,GAAS,CACrB,MAAkBA,EAAOrX,MAAM,QAAU,CAAC0W,GAAnCzW,EAAP,YACA0W,EAAc1W,QACJoX,GACVV,EAAc,KAGlB54B,MAAOqC,GAAO+2B,UACdhX,aAAa,eAQzB,IAAMmX,GAAwB,CAC5B/7B,OAAQ,GACR6F,cAAe,MACf9F,MAAO,IAAM,GAGT8E,GAASC,IAAWC,OAAO,CAC/Bw2B,eAAgB,CACdD,SAAU,GACV7M,SAAU,EACVvpB,WAAY,SACZiB,eAAgB,SAChB61B,kBAAmB,SACnBC,WAAY,GACZv2B,SAAU,GACVQ,UAAW,UAEbspB,KAAM,CACJvI,eAAgB,EAChB3D,iBAAkB,GAClBvjB,MAAO,IACPmG,UAAW,SAEXzD,aAAc,IAEhB2gB,KAAM,CACJrjB,MAAO,IAETs7B,aAAa,SACRU,IADO,IAEVjN,oBAAqB,GACrBoN,uBAAwB,GACxBv5B,SAAU,WAEZ84B,aAAa,MACRM,IAELF,cAAc,SACTE,IADQ,IAEXhN,qBAAsB,GACtBoN,wBAAyB,GACzBx5B,SAAU,WAEZi5B,UAAW,CACTzkB,KAAM,EACNsX,SAAU,EACVK,oBAAqB,EACrBC,qBAAsB,EACtBhvB,MAAO,OACPu7B,SAAU,IAEZ1P,IAAK,CACH6C,SAAU,EACVtd,QAAS,OACToV,SAAU,SACV1gB,cAAe,MACfX,WAAY,aACZiB,eAAgB,aAChBlB,kBAAmB,EACnBgZ,gBAAiB,EACjBgJ,eAAgB,GAChBjJ,UAAW,EACXgJ,aAAc,K,qkBCnJH,SAASoV,GAAqBt8B,GAAoC,IAAD,QACtEuZ,EAA4BvZ,EAA5BuZ,QAASgjB,EAAmBv8B,EAAnBu8B,eACX1xB,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMpE,WAC5CoG,EAAWV,KACFvG,EAAUhF,EAAMV,OAAO0F,MAA9BxF,MACFsI,EAAQmQ,eAEd,EAAsC7hB,YACpC,SAAA4J,EAAMV,SAAN,WAAcuF,kBAAd,IAA2BrF,QAAS,GADtC,WAAOqF,EAAP,KAAoB8sB,EAApB,KAGA,EAA8Bv7B,YAC5B,SAAA4J,EAAMV,SAAN,WAAc1D,cAAd,IAAuB4D,QAAS,GADlC,WAAO5D,EAAP,KAAgBg2B,EAAhB,KAkBA,OAdAx7B,aAAgB,WACV4J,EAAMV,OAAO1D,QAAQ4D,QAAU5D,GACjCg2B,EAAW5xB,EAAMV,OAAO1D,QAAQ4D,SAIjC,CAACoyB,EAAY5xB,EAAMV,OAAO1D,QAAQ4D,QAErCpJ,aAAgB,WACV4J,EAAMV,OAAOuF,YAAYrF,QAAUqF,GACrC8sB,EAAe3xB,EAAMV,OAAOuF,YAAYrF,SAGzC,CAACQ,EAAMV,OAAO1D,QAAQ4D,MAAOQ,EAAMV,OAAOuF,YAAYrF,MAAOmyB,IAE9D,gBAACE,GAAA,EAAD,CAAsBC,SAAS,WAAWj6B,MAAOqC,GAAOe,SACtD,gBAACkC,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+mB,KAClB,gBAACnjB,EAAA,EAAD,CACEjG,MAAO,CAACqC,GAAO63B,kBAAmB,CAAE/2B,MAAmB,UAAZ0T,EAAsB,QAAU,WAD7E,eAKA,gBAAC5Q,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO83B,cAAe,CAAEh3B,MAAmB,UAAZ0T,EAAsB,QAAU,WAA7E,aAKF,gBAACvR,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+3B,iBAClB,gBAACrR,GAAA,EAAD,CACE/oB,MAAO,CAACqC,GAAOg4B,gBAAiB,CAAE50B,gBAAiBwK,EAAMX,OAAOmT,UAChEuG,UAAW,GAEX,gBAACD,GAAA,EAAKG,QAAN,CAAclpB,MAAOqC,GAAOi4B,aAC1B,gBAAC,KAAKtU,KAAN,CAAWpF,KAAK,cAAc5gB,MAAO,CAAEzC,MAAO,MAC9C,gBAAC,KAAD,CACEoK,MAAK,MAAEqF,OAAF,EAAEA,EAAa8Z,WACpBoS,OAAQ,kBACN9kB,EAAS9B,GAAQF,MAAMpE,QAAQ9F,SAAS,CAAC,cAAekE,OAAOY,OAEjE+U,aAAc,SAACwY,GACb,GAAI,KAAKpd,KAAKod,GAAU,CACtB,MAAkBA,EAAQtY,MAAM,YAAc,CAACjV,GAAxCkV,EAAP,YACA4X,EAAe1tB,OAAO8V,MAG1BliB,MAAO,CAACqC,GAAO+2B,UAAW,CAAEj2B,MAAO8M,EAAMX,OAAO+Q,YAChD+B,aAAa,cAKnB,gBAAC2G,GAAA,EAAD,CAAM/oB,MAAOqC,GAAOm4B,YAAaxR,UAAW,GAC1C,gBAACD,GAAA,EAAKG,QAAN,CAAclpB,MAAO,CAACqC,GAAOi4B,YAAa,CAAE70B,gBAAiBwK,EAAMX,OAAOmT,WACxE,gBAAC,KAAKuD,KAAN,CAAWpF,KAAK,UAAU5gB,MAAO,CAAEzC,MAAO,MAC1C,gBAAC,KAAD,CACEoK,MAAK,MAAE5D,OAAF,EAAEA,EAAS+iB,WAChBoS,OAAQ,kBAAM9kB,EAAS9B,GAAQF,MAAMpE,QAAQ9F,SAAS,CAAC,UAAWkE,OAAOrI,OACzEge,aAAc,SAAC0Y,GACb,GAAI,KAAKtd,KAAKsd,GAAa,CACzB,MAAkBA,EAAWxY,MAAM,QAAU,CAACle,GAAvCme,EAAP,YACA6X,EAAW3tB,OAAO8V,MAGtBE,aAAa,UACbpiB,MAAO,CAACqC,GAAO+2B,UAAW,CAAEj2B,MAAO8M,EAAMX,OAAO+Q,cAElD,gBAAC,IAAD,CAAkB/K,QAAS,wBAAMukB,OAAN,EAAMA,MAC/B,gBAAC,KAAK7T,KAAN,CAAWpF,KAAK,QAAQzd,MAAM,UAAUnD,MAAO,CAAEzC,MAAO,UAKhE,gBAAC+H,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+mB,KAClB,gBAACnjB,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOq4B,eAAgB,CAAEv3B,MAAmB,UAAZ0T,EAAsB,QAAU,WAA9E,YAGA,gBAAC5Q,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOs4B,YAAa,CAAEx3B,MAAmB,UAAZ0T,EAAsB,QAAU,WAA3E,SAGA,gBAAC5Q,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOu4B,gBAAiB,CAAEz3B,MAAmB,UAAZ0T,EAAsB,QAAU,WAA/E,cAIF,gBAAC8P,GAAA,EAAD,MACA,gBAAC,IAAD,CACErJ,KAAMnQ,EACN2nB,aAAc,WAAW7pB,GAAX,EAAGC,KAAH,cAA6BD,GAC3CkqB,WAAY,YAA4B,IAAnB0F,EAAkB,EAAxB3vB,KAAYD,EAAY,EAAZA,MACzB,OACE,gBAACktB,GAAD,QACM0C,EADN,CAEE3xB,IAAG,cAAgB+B,EACnBqtB,SAAU,SAAChwB,EAAOX,GAChB,IAAMmzB,EAAWC,eAAI,KAAK5tB,GAAmBlC,EAAzB,GAAC,MAChB4vB,GADe,UAEjBvyB,EAAQX,KAEXyM,EAAS9B,GAAQF,MAAMpE,QAAQ9F,SAAS,CAAC,QAAS4yB,aAM3D,MAAC3tB,OAAD,EAACA,EAAkBmM,QAAS,EAC3B,gBAAC,IAAD,CACEhE,QAAS,kBACPlB,EACE9B,GAAQF,MAAMpE,QAAQ9F,SAAS,CAC7B,QAD6B,eAExBiF,GAAS,IAFe,CAEV,CAAEP,SAAU,IAAKyrB,UAAW,IAAKD,MAAO,YAKjE,gBAAC9yB,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,OAAQ6G,QAAS,IAAO5D,cAAc,YAC1D,gBAAC23B,GAAD,CAASvrB,SAAS,MAAMyrB,UAAU,IAAID,MAAM,IAAIE,SAAU,kBAAM,UAGlE,MAKV,IAAMj2B,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACbC,aAAc,GAEhBQ,QAAS,CACP7F,MAAO,OACP8F,cAAe,SACfoC,gBAAiB,eAEnB20B,gBAAiB,CACf33B,kBAAmB,GACnBlF,MAAO,IACPmG,UAAW,SACX+B,gBAAiB,cACjBwmB,SAAU,EACVtd,QAAS,OACToV,SAAU,SACV1gB,cAAe,MACfX,WAAY,aACZ+Y,gBAAiB,EACjBgJ,eAAgB,GAChBjJ,UAAW,EACXgJ,aAAc,EACd7gB,eAAgB,iBAElBy1B,UAAU,SACL/yB,IAASkqB,OAAO,CACjBI,IAAK,CAAEpzB,MAAO,QACdizB,IAAK,CAAEvE,SAAU,MAHZ,IAKPD,cAAe,EACfxuB,OAAQ,GACRgY,WAAY,OACZtS,SAAU,KAEZo3B,YAAa,CACXr6B,aAAc,EAEdgsB,SAAU,EACVtd,QAAS,OACToV,SAAU,SACV1gB,cAAe,MACfX,WAAY,aACZiB,eAAgB,aAChBlB,kBAAmB,EACnBgZ,gBAAiB,EACjBgJ,eAAgB,GAChBjJ,UAAW,EACXgJ,aAAc,GAEhB4E,IAAK,CACH7rB,MAAO,IACPmG,UAAW,SACXL,cAAe,MACfM,eAAgB,gBAChBjB,WAAY,SACZD,kBAAmB,EACnBgiB,eAAgB,IAElByV,kBAAmB,CACjB38B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACX0S,WAAY,QAEd2kB,cAAe,CACb58B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACX0S,WAAY,QAEdglB,YAAa,CACXj9B,MAAO,IACPC,OAAQ,GACR6F,cAAe,MACfoC,gBAAiB,QACjBxF,aAAc,GAEhBo6B,gBAAiB,CACf78B,OAAQ,GACRD,MAAO,IACP8F,cAAe,MACfoC,gBAAiB,QACjBxF,aAAc,GAEhBy6B,eAAgB,CACdn9B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACX0S,WAAY,QAEdmlB,YAAa,CACXp9B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACX0S,WAAY,QAEdolB,gBAAiB,CACfr9B,MAAO,IAEP4F,MAAO,QACPL,UAAW,SACX0S,WAAY,QAEdwX,KAAM,CACJvI,eAAgB,EAChBlnB,MAAO,IACPmG,UAAW,SACX+B,gBAAiB,cACjB+mB,YAAa,eAEfwO,UAAW,CACT33B,cAAe,MACfM,eAAgB,iBAElBs3B,UAAW,CACTzlB,WAAY,OACZyN,YAAa,EACb/f,SAAU,GACVQ,UAAW,UAEbqR,MAAO,CACL5R,MAAO,QACPqhB,aAAc,GACdhP,WAAY,OACZtS,SAAU,GACVJ,UAAW,UAEbwF,MAAO,CACLkc,aAAc,GAEhB0W,OAAQ,CACN73B,cAAe,UAEjB83B,cAAe,CAAE59B,MAAO,OAAQC,OAAQ,IACxC8vB,YAAa,CACX5pB,UAAW,UAEb03B,oBAAqB,CACnB79B,MAAO,OAET89B,qBAAsB,CACpB14B,YAAa,GACbpF,MAAO,SC9RX,IAAM8E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACbC,aAAc,KAIH04B,GAjBf,SAA2Bh+B,GACzB,OACE,gBAAC,GAAD,MAAc0C,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,gBACtD,gBAAC6kB,GAAD,Q,UCIC,SAAS2B,GAAT,KAAyF,IAC1FC,EATC,cAA4F,IAA5DC,EAA2D,EAA9Dl7B,EAAUm7B,EAAoD,EAAvDr7B,EAA4Bs7B,EAA2B,EAA9Bp7B,EAC5Dq7B,EAD0F,EAAvBv7B,EACzDq7B,EACVG,EAAKF,EAAKF,EACZD,EAAQr6B,KAAK26B,MAAMF,EAAIC,GAE3B,OADAL,GAAS,IAAMr6B,KAAKC,GAKR26B,CAAkB,CAAEx7B,EAD6D,EAA9DA,EACQF,EADsD,EAAvDA,GACU,CAAEE,EAD2C,EAA9BA,EACNF,EADoC,EAAvBA,IAGtE,OADIm7B,EAAQ,IAAGA,EAAQ,IAAMA,GACtBA,EChBT,IAAMQ,GAA2B,CAC/B,IACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,IACA,MACA,KACA,MACA,K,6lBCGF,IAAQz+B,GAAU4E,KAAWC,IAAI,UAAzB7E,MAWO,SAAS0+B,GAAgB3+B,GACtC,MAAoCiB,WAAgC,CAClEgC,EAAG,EACHF,EAAG,EACH7C,OAAQ,EACRD,MAAO,IAJT,WAAOoC,EAAP,KAAmBC,EAAnB,KAMIgE,EARsB,EAQXjE,EAAWpC,MAC1BqG,EAAWA,EAAW,IAAM,IAAMA,EAElC,IAAQtC,EAAgDhE,EAAhDgE,SAAU46B,EAAsC5+B,EAAtC4+B,UAAWv0B,EAA2BrK,EAA3BqK,MAAOoN,EAAoBzX,EAApByX,MAAOujB,EAAah7B,EAAbg7B,SAC3C,EAAkC/5B,YAAe,GAAjD,WAAO49B,EAAP,KAAmBC,EAAnB,KACA,EAA8B79B,WAAeoJ,GAAS,GAAtD,WAAO5D,EAAP,KAAgBg2B,EAAhB,KACA,EAA4Bx7B,WAE1B,CACAgC,EAAG,EACHF,EAAG,EACH7C,OAAQ,EACRD,MAAO,EACPyG,QAAS,EACTC,QAAS,IARX,WAAOC,EAAP,KAAeC,EAAf,KAWMk4B,EAAW99B,SAAa,IAAI8F,KAASC,MAAMP,IAC3CK,EAAU7F,SAAa,IAAI8F,KAASC,MAAM,IAEhD/F,aAAgB,WACT49B,GACHpC,EAAWpyB,KAEZ,CAACw0B,EAAYx0B,IAGhB,ID9CqCzG,EC8C/BqD,EAAgBhG,SAAa,IAAI8F,KAASC,MAAM,IAChDE,EAAiBjG,SACrB8F,KAASI,KACPJ,KAASK,OAAOH,EAAc3F,QAAS,CACrC+F,SAAU,IACVC,SAAU,IACVC,iBAAiB,IAEnB,CACEC,sBAAsB,KAKtBw3B,EAAiB/9B,eACrB,SAAC2uB,GAEC3oB,EAAc3F,QAAQ29B,SAAS,GAC/B/3B,EAAe5F,QAAQuG,OAGvBX,EAAe5F,QAAQwG,QACvB,IAAQtF,EAAgBotB,EAAhBptB,YAIF08B,EAAqB,CACzBj8B,EAJeT,EAATS,EAKNF,EALeP,EAANO,GAQLo8B,EAAQlB,GAAe,CAAEh7B,EAAG2D,EAAOF,QAAS3D,EAAG6D,EAAOD,SAAWu4B,GACvE/e,uBAAsB,kBAAMsc,EAAW0C,MAEvCJ,EAASz9B,QAAQ29B,SAASE,KAE5B,CAAC1C,EAAY71B,IAGTa,EAAuBxG,eAC3B,SAACyG,GACC,IAAQjF,EAAWiF,EAAMlF,YAAjBC,OACRoE,EAAU,SACLpE,GADI,IAGPiE,QAASjE,EAAOQ,EAAIZ,EAAWpC,MAAQ,EACvC0G,QAASlE,EAAOM,EAAIV,EAAWnC,OAAS,OAG5C,CAACmC,EAAWnC,OAAQmC,EAAWpC,QAG3B8H,EAAqB1D,aAAiB,CAC1CpB,EAAG2D,EAAOF,QACV3D,EAAG6D,EAAOD,QACV/C,QAAS6C,EACTjC,SAAU,GACVC,SAAU,GACVF,OAAQ+B,EAAW,IAGrB,OACE,gBAAC,IAAD,CACE84B,QAAS,WACPN,GAAY,GACZ/3B,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,IAChBI,SAEL03B,QAAS,WACPP,GAAY,GACZ/3B,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,IAChBI,QACHT,EAAe5F,QAAQqG,QACvBwY,uBAAsB,wBAAM6a,OAAN,EAAMA,EAAWv0B,OAEnCu4B,kBAEN,gBAACh3B,EAAA,QAAD,CACEtF,MAAO,CACLzC,MAAO,OACPC,OAAQ,OACRkF,WAAY,SACZ8Y,UAAW,IAEb3b,SAAU,SAACE,GAAD,OAAYH,EAAcG,EAAOD,YAAYC,UAEtDgV,GACC,gBAAC,KAAS9O,KAAV,CACEjG,MAAO,CACLqC,GAAO0S,MACP,CACEyP,aAAc,EACdpgB,QAASA,EAAQxF,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,EAAG,QAKtBmP,GAIL,gBAAC,KAAD,CACEtX,SAAU,CAAE4C,EAAG,EAAGE,EAAG,GACrB3C,OAAQ,CACN2B,IAAK+B,EACL9B,IAAK08B,GAEP99B,eAAgB,CACdX,SAAU,WACV2C,SAAKF,EACLI,UAAMJ,EACNo3B,SAAU,IACVzP,UAAW,KAEb/pB,aAAa,EACbN,OAAQoG,EACRrG,MAAOqG,EACP00B,SAAU,kBAAM,MAChBz6B,MAAM,SAEN,gBAAC,KAASyH,KAAV,CACEzF,SAAUkF,EACV/E,MAAO,CACLqC,GAAOiB,cACP,CACE/F,MAAOqG,EACPpG,OAAQoG,KAIZ,gBAAC,KAAS0B,KAAV,CACEtF,MAAO,CACLxC,OAAQoG,EACRrG,MAAO6G,EAAQxF,QAAQ8G,YAAY,CACjCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,GAAI,KAEpBH,gBAAiB,UACjBrB,QAASA,EAAQxF,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,GAAK,KAErBL,UAAW,CACT,CACEC,OAAQ62B,EAASz9B,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,KAChBC,YAAa,CAAC,OAAQ,kBAOjC,MAACjG,KAAYpC,MACZ,gBAAC,KAAS+H,KAAV,CACEtF,MAAO,CACL,CACEvC,SAAU,WACVF,MAAO,GACPC,OAAQ,GACR4C,IAAKiF,EAAmBhF,EACxBC,KAAM+E,EAAmB9E,EACzBq8B,OAAQ,IACRx4B,QAASG,EAAc3F,QAAQ8G,YAAY,CACzCC,WAAY,EAAE,KAAM,IAAK,KACzBC,YAAa,CAAC,EAAK,EAAK,KAE1BL,UAAW,CACT,CACEC,OAAQ62B,EAASz9B,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,KAChBC,YAAa,CAAC,OAAQ,aAG1B,CACEE,WAAYvB,EAAc3F,aAMlC,gBAAC8jB,GAAA,EAAD,CAAwB3c,KAAK,WAAWC,KAAM,GAAI7C,MAAM,aA5BtC,KA+BtB,gBAAC,KAAS8C,KAAV,CACEjG,MAAO,CACLqC,GAAOQ,YACP,CACEuB,QAASA,EAAQxF,QACjBwB,IAAKwD,EAAW,EAAI,GACpBtD,KAAMsD,EAAW,EAAI,OAIxBzC,KAAK+E,MAAMnC,KAIhB,gBAAC,KAASkC,KAAV,CACEjG,MAAO,CACLqC,GAAOw6B,kBACP,CACEz4B,QAASA,EAAQxF,QAAQ8G,YAAY,CACnCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,EAAG,QAKtBzE,KAAK+E,MAAMnC,GAXd,UD5P+B7C,ECuQuB6C,EDtQrDi4B,GAAyB76B,KAAK+E,MAAMhF,EAAU,QC2P/C,OAkBR,IAAMmB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACbC,aAAc,GAEhBmS,MAAO,CACL7R,SAAU,GACVsS,WAAY,OACZrS,MAAO,QACP7C,KAAM,EACN/C,MAAO,OACPyuB,cAAe,GACflpB,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,IAGZqF,YAAa,CACXtF,MAAO,IACPC,OAAQ,IACRsF,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEV0F,SAAU,IACVC,MAAO,QACP1F,SAAU,YAEZo/B,kBAAmB,CACjB35B,SAAU,GACV8oB,cAAe,GACfxW,WAAY,OACZrS,MAAO,QACP1F,SAAU,WACVgY,OAAQ,GACRnV,KAAM,EACNF,IAAK,GACL7C,MAAO,OACPuF,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,IAIZ4F,QAAS,CACP7F,MAAO,OACP8F,cAAe,UAEjBC,cAAe,CACbC,YAAa,GACbtD,aAAc1C,GAAQ,EACtBiG,YAAa,QACbC,YAAa,UACbC,UAAW,SACXhB,WAAY,SACZiB,eAAgB,YChTpB,IAAMtB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,EACnBC,WAAY,SACZC,YAAa,EACb8C,gBAAiB,OACjB7C,aAAc,GAEhBs4B,OAAQ,CACN39B,MAAO,OACPie,UAAW,IAEbshB,UAAW,CACTt/B,OAAQ,GACRD,MAAO,IACPmG,UAAW,SACX+B,gBAAiB,cACjBtC,MAAO,QACPD,SAAU,GACVJ,UAAW,SACX0hB,aAAc,IAEhBphB,QAAS,CACP7F,MAAO,OACP8F,cAAe,UAEjBC,cAAe,CACb/F,MAAO,IACPC,OAAQ,IACRyC,aAAc,IACdsD,YAAa,GACbE,YAAa,QACbC,UAAW,SACXhB,WAAY,SACZiB,eAAgB,UAElBid,KAAM,CAAEnjB,SAAU,WAAY2C,KAAM,IAEpCgpB,IAAK,CACHzU,KAAM,EACNtR,cAAe,MACfM,eAAgB,gBAChBjB,WAAY,SACZD,kBAAmB,EACnBgiB,eAAgB,IAElBiW,eAAgB,CACd/lB,KAAM,IAENxR,MAAO,QACPL,UAAW,SACX0S,WAAY,QAEdmlB,YAAa,CACXhmB,KAAM,GAENxR,MAAO,QACPL,UAAW,SACX0S,WAAY,QAEdolB,gBAAiB,CACfjmB,KAAM,GAENxR,MAAO,QACPL,UAAW,SACX0S,WAAY,QAEdwX,KAAM,CAAEzR,QAAS,EAAGkJ,eAAgB,IACpCuW,UAAW,CACT33B,cAAe,MACfM,eAAgB,iBAElBs3B,UAAW,CACTzlB,WAAY,OACZyN,YAAa,EACb/f,SAAU,GACVQ,UAAW,UAEbqR,MAAO,CACL5R,MAAO,QACPqhB,aAAc,GACdhP,WAAY,OACZtS,SAAU,GACVJ,UAAW,UAEbwF,MAAO,CACLkc,aAAc,GAEhB2W,cAAe,CAAE59B,MAAO,OAAQC,OAAQ,IACxC8vB,YAAa,CACX5pB,UAAW,UAEb03B,oBAAqB,CACnB79B,MAAO,OAET89B,qBAAsB,CACpB14B,YAAa,GACbpF,MAAO,SAII+9B,GA9If,SAA2Bh+B,GACzB,IAAM6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMpE,WAC5CoG,EAAWV,KACTpG,EAAawQ,KAAbxQ,SACR,EAAgC/O,aAAhC,WAAOw+B,EAAP,KAAiBC,EAAjB,KACMC,EAAmB1+B,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEdG,QAFc,mBAGxB,YAHwB,EAE/BC,OAF+B,mEAAAJ,EAAA,MAMhBG,KAAiC,KANjB,OAMjCpB,EANiC,OAQvCu/B,EAAYv/B,EAASG,QARkB,kDAUvC6B,QAAQC,IAAR,MAVuC,mEAYxC,IAQH,OANAnB,aAAgB,WACV,MAAC+O,KAAU/N,KAAO,MAAC+N,KAAU9N,KAC/By9B,MAED,OAAC3vB,OAAD,EAACA,EAAU/N,IAAX,MAAgB+N,OAAhB,EAAgBA,EAAU9N,IAAKy9B,IAGhC,gBAAC,GAAD,MAAcj9B,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDq6B,aAAc,CAAE3U,WAAY,OAC5E,gBAAC1d,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,OAAQC,OAAQ,QACpC,gBAACy+B,GAAD,CACEt0B,MAAOQ,EAAMV,OAAO1D,QAAQ4D,OAAS,EACrCrG,UAAkB,MAARgM,OAAA,EAAAA,EAAU/N,OAAV,MAAiBw9B,OAAjB,EAAiBA,EAAUz7B,WAAY,EACjD46B,WAAmB,MAAR5uB,OAAA,EAAAA,EAAU9N,OAAV,MAAiBu9B,OAAjB,EAAiBA,EAAUb,YAAa,EACnD5D,SAAU,SAAC3wB,GAAD,OACRyM,EAAS9B,GAAQF,MAAMpE,QAAQ9F,SAAS,CAAC,UAAW/G,KAAK+E,MAAMyB,YCsC5Du1B,OAvEf,WACE,IAAM/0B,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMpE,WAC5C+P,EAAanK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO1C,qBAClDuE,EAAWV,KACXyH,EAAa+Y,2BAEbiJ,EAAkCC,GAAmC,CACzE7gB,UAAW,kBAAM,MACjBD,aAAc,SAAChU,EAAkCP,GAAnC,OACZqM,EAAS9B,GAAQF,MAAMpE,QAAQzF,cAAc,CAACD,EAAOP,MACvDsO,QAAS,SAACtO,GACRqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAI9DwmB,EAAmB9+B,eACvB,SAAO++B,EAAsBjH,GAA7B,eAAA33B,EAAAC,OAAA,kEAAAD,EAAA,MACQy+B,EAAgC1gB,OAAO,CAC3Cte,GAAIiO,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgBpJ,IAC3B4f,WAAYA,EACZ5Q,MAAO9B,KAAK8L,UAAUhP,EAAMV,OAAO0F,MAAMxF,OACzC5D,QAASoE,EAAMV,OAAO1D,QAAQ4D,MAC9BqF,YAAa7E,EAAMV,OAAOuF,YAAYrF,SAN1C,OAQE0uB,EAASiH,EAAe,GAR1B,8DAUA,CAACH,EAAiCh1B,EAAO4V,IAG3C,OACE,gBAAC,GAAD,KACE,gBAACwf,GAAD,CACE9F,gBAAgB,SAChBC,gBAAgB,OAChBF,OAAQ,WACNpjB,EAAS9B,GAAQF,MAAMpE,QAAQ5I,SAC/BgP,EAAS9B,GAAQF,MAAMpE,QAAQxF,SAAQ,IACvC2S,EAAWqiB,UAEbvpB,QAASkpB,EAAgClpB,QACzCkX,OAAQ,SAAClgB,EAAOorB,GAAR,OAAqBA,EAASprB,EAAQ,MAGhD,gBAACwyB,GAAD,CACEhG,gBAAgB,OAChBC,gBAAgB,OAChBzjB,QAASkpB,EAAgClpB,QACzCkX,OAAQ,SAAClgB,EAAOorB,GACdgH,EAAiBpyB,EAAOorB,IAE1BmB,OAAQ,SAACvsB,EAAOorB,GAAR,OAAqBA,EAASprB,EAAQ,MAGhD,gBAAC,GAAD,CACE8J,MAAM,2BACNsV,SAAS,mCACToN,gBAAgB,OAChBC,gBAAgB,OAChBF,OAAQ,SAACvsB,EAAOorB,GACdA,EAASprB,EAAQ,IAEnBkgB,OAAQ,WACN/W,EAAS9B,GAAQF,MAAMpE,QAAQ5I,SAC/BgP,EAAS9B,GAAQF,MAAMpE,QAAQxF,SAAQ,IACvC2S,EAAWqiB,cC9DN,SAASE,KAAiB,IAAD,EAChCv1B,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMpE,WAC5C+P,EAAanK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO1C,qBAClDuE,EAAWV,KACXyH,EAAa+Y,2BAEbiJ,EAAkCC,GAAmC,CACzE7gB,UAAW,kBAAM,MACjBD,aAAc,SAAChU,EAAkCP,GAAnC,OACZqM,EAAS9B,GAAQF,MAAMpE,QAAQzF,cAAc,CAACD,EAAOP,MACvDsO,QAAS,SAACtO,GACRqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAI9DwmB,EAAmB9+B,eAAkB,0BAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACnCy+B,EAAgC1gB,OAAO,CAC3Cte,GAAIiO,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgBpJ,IAC3B4f,WAAYA,EACZ5Q,MAAO9B,KAAK8L,UAAUhP,EAAMV,OAAO0F,MAAMxF,OACzC5D,QAASoE,EAAMV,OAAO1D,QAAQ4D,MAC9BqF,YAAa7E,EAAMV,OAAOuF,YAAYrF,SANC,OAQzCwT,EAAWqiB,SACXppB,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,wBACT8O,QAAS,aAZ4B,8DAexC,CACDsmB,EADC,SAEDh1B,EAAMZ,eAFL,EAED,EAAgBpJ,GAChBgK,EAAMV,OAAO0F,MAAMxF,MACnBQ,EAAMV,OAAO1D,QAAQ4D,MACrBQ,EAAMV,OAAOuF,YAAYrF,MACzBoW,EACA5C,EACA/G,IAGM9G,EAAawQ,KAAbxQ,SACR,EAAgC/O,aAAhC,WAAOw+B,EAAP,KAAiBC,EAAjB,KACMC,EAAmB1+B,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEdG,QAFc,mBAGxB,YAHwB,EAE/BC,OAF+B,mEAAAJ,EAAA,MAMhBG,KAAiC,KANjB,OAMjCpB,EANiC,OAQvCu/B,EAAYv/B,EAASG,QARkB,kDAUvC6B,QAAQC,IAAR,MAVuC,mEAYxC,IAQH,OANAnB,aAAgB,WACV,MAAC+O,KAAU/N,KAAO,MAAC+N,KAAU9N,KAC/By9B,MAED,OAAC3vB,OAAD,EAACA,EAAU/N,IAAX,MAAgB+N,OAAhB,EAAgBA,EAAU9N,IAAKy9B,IAGhC,gBAAC33B,EAAA,QAAD,CAAMtF,MAAOsC,IAAWuE,cACtB,gBAACo1B,GAAD,CACEt0B,MAAOQ,EAAMV,OAAO1D,QAAQ4D,OAAS,EACrCrG,UAAkB,MAARgM,OAAA,EAAAA,EAAU/N,OAAV,MAAiBw9B,OAAjB,EAAiBA,EAAUz7B,WAAY,EACjD46B,WAAmB,MAAR5uB,OAAA,EAAAA,EAAU9N,OAAV,MAAiBu9B,OAAjB,EAAiBA,EAAUb,YAAa,EACnD5D,SAAU,SAAC3wB,GAAD,OACRyM,EAAS9B,GAAQF,MAAMpE,QAAQ9F,SAAS,CAAC,UAAW/G,KAAK+E,MAAMyB,SAGnE,gBAACsoB,GAAA,EAAD,CACEjwB,MAAOqC,GAAOmoB,IACdvK,OAAK,EACLW,KAAK,QACL3M,QAASkpB,EAAgClpB,QACzCkB,SAAUgoB,EAAgClpB,QAC1CqB,QAAS,kBAAM+nB,KACftX,MAAM,UAMd,IAAM1jB,GAASC,IAAWC,OAAO,CAC/BioB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,KC5FG,SAASkoB,KACtB,IAAMx1B,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMpE,WAClD,EAA2B4F,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDtC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACT6N,EAAanK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO1C,qBAClDuE,EAAWV,KACXyH,EAAa+Y,2BAEbiJ,EAAkCC,GAAmC,CACzE7gB,UAAW,kBAAM,MACjBD,aAAc,SAAChU,EAAkCP,GAAnC,OACZqM,EAAS9B,GAAQF,MAAMpE,QAAQzF,cAAc,CAACD,EAAOP,MACvDsO,QAAS,SAACtO,GACRqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAI9DwmB,EAAmB9+B,eAAkB,0BAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACnCy+B,EAAgC1gB,OAAO,CAC3Cte,GAAIiO,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgBpJ,IAC3B4f,WAAYA,EACZ5Q,MAAO9B,KAAK8L,UAAUhP,EAAMV,OAAO0F,MAAMxF,OACzC5D,QAASoE,EAAMV,OAAO1D,QAAQ4D,MAC9BqF,YAAa7E,EAAMV,OAAOuF,YAAYrF,SANC,OAQzCwT,EAAWqiB,SACXppB,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,wBACT8O,QAAS,aAGbzC,EAAS9B,GAAQF,MAAMpE,QAAQ5I,SAC/BgP,EAAS9B,GAAQF,MAAMpE,QAAQxF,SAAQ,IAhBE,8DAiBxC,CAAC20B,EAAiCh1B,EAAO4V,EAAY5C,EAAY/G,IAEpE,OACE,gBAAC2jB,GAAD,CAAkB/M,sBAAuB,CAAEvlB,gBAAiBwK,EAAMX,OAAOiJ,aACvE,gBAACqhB,GAAD,CACEC,eAAgB,kBAAM1e,EAAWoa,SAAS,kBAC1C1e,QAAS5G,EAAMG,KAAO,aAAUlQ,IAElC,gBAACoF,EAAA,QAAD,CAAMtF,MAAOqC,GAAOg1B,QAAS72B,cAAc,YACzC,gBAAC0U,EAAA,EAAD,CACEjB,QAASkpB,EAAgClpB,QACzCoB,KAAK,YACLlS,MAAO+M,EAAQX,QAAQY,KACvBgF,SAAUgoB,EAAgClpB,QAC1CjU,MAAO,CACLqC,GAAO+S,OACP,CACEnV,aAAc,GACdzC,OAAQ,GACRkF,WAAY,SACZiB,eAAgB,SAChB6X,UAAW,KAGfoiB,WAAY,CACVz6B,MAAO,SAETmS,QAAS,oBAAA5W,EAAAC,OAAA,gDACP0+B,IADO,8DAlBX,QAwBA,gBAACnoB,EAAA,EAAD,CACEjB,QAASkpB,EAAgClpB,QACzCoB,KAAK,YACLlS,MAAO+M,EAAQX,QAAQY,KACvBgF,SAAUgoB,EAAgClpB,QAC1CjU,MAAO,CACLqC,GAAO+S,OACP,CACEnV,aAAc,GACdzC,OAAQ,GACRkF,WAAY,SACZiB,eAAgB,SAChB6X,UAAW,KAGfoiB,WAAY,CACVz6B,MAAO,SAETmS,QAAS,oBAAA5W,EAAAC,OAAA,gDACP0+B,IADO,8DAlBX,2CA6BR,IAAMh7B,GAASC,IAAWC,OAAO,CAC/B6S,OAAQ,CACN1R,UAAW,SACXnG,MAAO,QAET65B,WAAY,CACV1zB,UAAW,SACXnG,MAAO,OACPujB,iBAAkB,IAEpBuW,QAAS,CACP3zB,UAAW,SACXhB,WAAY,WACZupB,SAAU,EACVtoB,eAAgB,WAChBpG,MAAO,OACP+5B,SAAU,IACV9S,aAAc,O,UC3GlB,SAASqZ,GAAQvgC,GACf,IAAQ8K,EAAkB9K,EAAlB8K,OAAQ2M,EAAUzX,EAAVyX,MAChB,OACE,gBAACzP,EAAA,QAAD,CAAMtF,MAAOqC,GAAOsW,SAClB,gBAAC4R,GAAA,EAAD,CAAWvqB,MAAO,CAAEmD,MAAO,QAASwR,KAAM,GAAQsX,SAAU,IAAMlX,GAChE3M,EACA,gBAAC8M,EAAA,EAAD,CAAQI,QAASlN,EAAQpI,MAAO,CAAE2U,KAAM,GAAQgV,WAAY,IAA5D,OADS,MASF,SAASmU,GAAaxgC,GACnC,IACEiQ,EASEjQ,EATFiQ,QACA0G,EAQE3W,EARF2W,QACApL,EAOEvL,EAPFuL,sBACAk1B,EAMEzgC,EANFygC,WACAC,EAKE1gC,EALF0gC,oBACAC,EAIE3gC,EAJF2gC,mBACAC,EAGE5gC,EAHF4gC,gBACAC,EAEE7gC,EAFF6gC,wBACAC,EACE9gC,EADF8gC,cAGF,GAAInqB,EACF,OAAO,KAGT,IAAK+pB,IAAwBD,EAAY,CACvC,IAAMM,EAAU,CACbL,EAAsC,KAAhB,cACtBD,EAA2B,KAAd,aACd/Y,OAAOC,SAET,OACE,gBAAC4Y,GAAD,CACE9oB,MAAK,sBAAwBspB,EAAQC,KAAK,SAArC,mBACLl2B,OAAQ,wBAAMg2B,OAAN,EAAMA,OAIpB,OAAKH,EAGAE,EAGAD,GAMDr1B,GAA0B0E,GAAY0G,EAInC,KAHE,gBAAC4pB,GAAD,CAAS9oB,MAAM,6DAJpB,gBAAC8oB,GAAD,CAAS9oB,MAAM,mFALV,gBAAC8oB,GAAD,CAAS9oB,MAAM,wEAHf,gBAAC8oB,GAAD,CAAS9oB,MAAM,4CAkB1B,I,GAAM1S,GAASC,IAAWC,OAAO,CAC/BoW,QAAS,CACPtV,cAAe,MACfX,WAAY,SACZlF,OAAQ,GACRD,MAAO,OACPkI,gBAAiB,QACjB9B,eAAgB,gBAChBlB,kBAAmB,MC9EjB87B,GAAqB7gB,aAAH,mxBA4IT8gB,OAxFf,SAAgBlhC,GAAsB,IAAD,8CAC3B6d,EAA8C7d,EAA9C6d,WAAY+I,EAAkC5mB,EAAlC4mB,SAAUua,EAAwBnhC,EAAxBmhC,MAAOC,EAAiBphC,EAAjBohC,aACrC,EAA8C9qB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApE1C,EAAR,EAAQA,kBAAmBK,EAA3B,EAA2BA,QAASD,EAApC,EAAoCA,MAC9BmE,EAAWV,KACjB,EAAsCkS,aAAoB2Y,GAAoB,CAC5EzhB,UAAW,CACTiB,WAAY3R,OAAOyD,MAFvB,WAAO8uB,EAAP,YAAmBrhB,EAAnB,EAAmBA,KAAMrJ,EAAzB,EAAyBA,QAYzB,OANA1V,aAAgB,WACVsR,GACF8uB,MAED,CAACA,EAAU9uB,IAGZ,gCACE,gBAAC+uB,GAAA,EAAOC,OAAR,CACE7+B,MAAO,CAAEyF,gBAAiBwK,EAAMG,KAAOH,EAAMX,OAAOiJ,WAAatI,EAAMX,OAAOmT,UAE7EyB,EACC,gBAAC0a,GAAA,EAAOE,WAAR,CACExpB,QAAS6F,EAAWqiB,OACpBr6B,MAAO8M,EAAMG,KAAOF,EAAQX,QAAQa,KAAOF,EAAQX,QAAQY,OAG7D,gBAAC4hB,GAAA,EAAD,CACE5uB,MAAO8M,EAAMG,KAAOF,EAAQX,QAAQa,KAAOF,EAAQX,QAAQY,KAC3DyQ,KAAK,OACL5a,KAAM,GACNsP,QAAS,kBAAM6F,EAAW/G,SAAS2qB,iBAAcC,mBAGrD,gBAACJ,GAAA,EAAO1V,QAAR,CACEnU,MAAO0pB,EAAMQ,WAAWv+B,QAAQqU,MAChCwd,WAAY,CAAE/c,WAAY,OAAQrS,MAAO+M,EAAQX,QAAQa,QAG1DquB,EAAMQ,WAAWv+B,QAAQw+B,YACxBT,EAAMQ,WAAWv+B,QAAQw+B,YAAY,CAAEC,UAAW,UAElD,gBAACxe,GAAA,EAAD,CACE3gB,MAAO,CAAEyF,gBAAiByK,EAAQI,OAAOH,MACzCkF,KAAK,OACL0L,UAAW,CAAE5d,MAAO+M,EAAQuS,UAH9B,MAIU,MAAJnF,GAAA,SAAAA,EAAMhQ,WAAN,WAAgBqC,kBAAhB,IAA6BpC,UAAW,KAGjDmxB,EAAe,KACd,gBAACZ,GAAD,CACEvwB,SAAa,MAAJ+P,GAAA,SAAAA,EAAMhQ,WAAN,WAAgBqC,kBAAhB,IAA6BpC,UAAW,EACjD0G,QAASA,EACTpL,wBAAwB,MAACyU,GAAD,SAACA,EAAMhQ,YAAN,EAAgBzE,uBACzCm1B,sBAAsB,MAAC1gB,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgBqC,cAAjB,SAAC,EAA6BhD,QAA7B,EAAmC3C,YAC1Di0B,qBACG,MAAC3gB,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgBqC,eAAhB,EAA6BrG,aAC3B,MAAJgU,GAAA,SAAAA,EAAMhQ,WAAN,WAAgBqC,kBAAhB,IAA6BrG,YAAY,IAAI8U,MAAOC,UAAY,IAElE6f,kBACG,MAAC5gB,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgBqC,cAAjB,SAAC,EAA6BhD,OAA9B,SAAC,EAAmCI,QAAnC,EAAyC2J,MAAK,SAAC9K,GAAS,IAAD,MACjDwzB,EAAc,SAAG9hB,EAAKhQ,WAAR,SAAG,EAAeqC,cAAlB,SAAG,EAA4B0vB,qBAA/B,EAAG,EAA4C/gC,KACjE,SAACghC,GAAD,aAA0B,MAAVA,GAAA,SAAAA,EAAY1zB,UAAZ,IAAiBzN,MAAOyN,EAAIzN,MAExCohC,GAAkB3zB,EAAIhB,iBAAmB,IAAK,IAAIwT,MAAOC,UAAY,IAC3E,OAAO+gB,GAAkBG,MAG7BpB,0BAA0B,MAAC7gB,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgBqC,cAAjB,SAAC,EAA6B0vB,kBAA7B,EAA6C/lB,QACxEykB,aAAa,MAACzgB,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgBqC,cAAjB,SAAC,EAA6BhD,OAA9B,SAAC,EAAmCI,QAAnC,EAAyCuM,QACvD8kB,cAAe,WAAO,IAAD,EAGF,IAFXzuB,EAAW,MAAG2N,GAAH,SAAGA,EAAMhQ,eAAT,EAAG,EAAgBqC,YAEhCA,IACFyE,EAAS9B,GAAQF,MAAMzF,KAAKnE,QAAQmH,EAAYhD,OAChD,MAAIgD,GAAJ,SAAIA,EAAahD,OAAjB,SAAI,EAAmBI,OAAnB,EAAyBuM,QAC3BlF,EAAS9B,GAAQF,MAAMxG,IAAIpD,QAAQmH,EAAYhD,KAAKI,KAAK,KAG3DqH,EAAS9B,GAAQF,MAAMtE,WAAWtF,QAAQmH,EAAYhD,aChIrD,SAAS6yB,GAAT,GAAgF,IAA1DC,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,eACxCxvB,GADsF,EAA9BpH,SAC9C+P,MAEhB,OACE,gBAAC,GAAD,CAAM7Y,MAAO,CAAEzC,MAAO,QACpB,gBAAC,GAAD,CAAMyC,MAAOqC,GAAO0S,OAApB,mBACA,gBAAC,GAAD,CAAM/U,MAAOqC,GAAOs9B,UAAW1V,WAAW,OAAOC,UAAU,0BAC3D,gBAAC,KAAK/I,KAAN,CACEpM,MAAM,kBACNzU,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAW7iB,MAAO+M,EAAQwI,QAASkI,KAAK,aAEtD,gBAAC,KAAKO,KAAN,CACEpM,MAAM,cACNzU,KAAM,kBACHm/B,EAGC,gBAAC,KAAKzZ,KAAN,CAAW7iB,MAAO+M,EAAQwI,QAASkI,KAAK,UAFxC,gBAAC,KAAKoF,KAAN,CAAW7iB,MAAO+M,EAAQtI,MAAOgZ,KAAK,aAM5C,gBAAC,KAAKO,KAAN,CACEpM,MAAM,yBACNzU,KAAM,kBACHo/B,EAGC,gBAAC,KAAK1Z,KAAN,CAAW7iB,MAAO+M,EAAQwI,QAASkI,KAAK,UAFxC,gBAAC,KAAKoF,KAAN,CAAW7iB,MAAO+M,EAAQtI,MAAOgZ,KAAK,cAUlD,IAAMve,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNjS,WAAY,SACZiB,eAAgB,UAElBoR,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdmqB,UAAW,CACTlb,eAAgB,GAChBjnB,OAAQ,EACRD,MAAO,S,UCzDI,SAASqiC,KACtB,OACE,gBAAC,KAAD,CACE12B,IAAI,eACJ9K,eAAgB,CACdZ,OAAQ,IACRD,MAAO,IACPymB,OAAQ,IAEVO,WAAS,EACTxkB,OAAQ,CAAC,CAAEmJ,IAAK,SAAU3L,MAAO,OAAQC,OAAQ,OAAQyC,aAAc,MCS9D,SAAS4/B,GAASviC,GAAwB,IAAD,IACxCwiC,EAA2BxiC,EAAjCqO,KAAqB2J,EAAYhY,EAAZgY,QACvBlB,EAAWV,KACjB,EAA2BE,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDtC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACT6vB,EAAkDxhC,WACtD,iBAAO,CACLiJ,KAAM0I,EAAQI,OAAOH,KACrB6vB,U3D1BoB,U2D2BpBC,c3D1BsB,a2D4BxB,CAAC/vB,EAAQI,OAAOH,OAElB,EAII6iB,GAAa,CACflW,UAAW,CACT3e,GAAIiO,OAAO0zB,EAAc3hC,KAE3BolB,oBAAoB,EACpBH,aAAc,MARRzX,EADR,EACE2R,KACArJ,EAFF,EAEEA,QACAoP,EAHF,EAGEA,QASI+K,EAAqBC,GAAsB,CAC/C9R,UAAW,kBACTnI,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,UAAD,MAAW4D,OAAX,EAAWA,EAAMwmB,YAAjB,WACPtb,QAAS,cAGfR,QAAS,SAACtO,GAAD,OACPqM,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,UACA8O,QAAS,cAKXyc,EAAc/0B,eAClB,SAAOsL,GAAP,SAAAnL,EAAAC,OAAA,yDACOgN,KAAMxN,GADb,mEAAAO,EAAA,MAIQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChBwvB,QAASvhB,OAAOvC,EAAM1L,OAN1B,8DASA,CAACiwB,EAAD,MAAqBziB,OAArB,EAAqBA,EAAMxN,KAGvBq1B,EAAcj1B,eAClB,SAAOuL,GAAP,SAAApL,EAAAC,OAAA,yDACOgN,KAAMxN,GADb,mEAAAO,EAAA,MAIQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChB0vB,QAASzhB,OAAOtC,EAAM3L,OAN1B,8DASA,OAACwN,OAAD,EAACA,EAAMxN,GAAIiwB,IAGb,GAAIna,EACF,OAAO,gBAAC,GAAD,MAGT,IAAMisB,GAAU,WACbp5B,EAAU8nB,KAAO,QADJ,MAEb9nB,EAAU6nB,aAAe,WAFZ,MAGb7nB,EAAUgpB,UAAY,aAHT,MAIbhpB,EAAUipB,SAAW,UAJR,MAKbjpB,EAAUioB,OAAS,UALN,GAOhB,OACE,gBAAChG,GAAA,EAAD,CACEhP,OAAO,YACP/Z,MAAO,CACLgkB,OAAQ,GACR/jB,aAAc,EACdmE,QAAS,CAAC,YAAa,UAAU0b,UAAa,MAAJnU,OAAA,EAAAA,EAAMxD,QAAS,IAAM,GAAM,GAEvE6gB,UAAW,EACX1T,QAASA,GAET,gBAAC2X,GAAA,EAAD,CACEjtB,MAAO,CACLyF,gBAAqB,MAAJkG,KAAMxD,MAAQ43B,EAAiBp0B,EAAKxD,YAASjI,EAC9Dsb,WAAY,EACZyH,aAAc,EACd9f,MAAO,QACPD,SAAU,KAGP,MAAJyI,KAAMxD,MAAQ+3B,EAAU,MAACv0B,OAAD,EAACA,EAAMxD,OAAS,IAE3C,gBAAC4gB,GAAA,EAAKf,MAAN,CACEhoB,MAAO,CAAE2D,eAAgB,iBACzBoR,MAAK,gBAAWpJ,OAAX,EAAWA,EAAMwmB,YACtB9H,SAAQ,MAAE1e,OAAF,EAAEA,EAAM5F,KAChBsc,MAAO,kBACL,MAAC1W,MAAMjC,YAAcy2B,aAAS,IAAI/hB,KAAL,MAAazS,OAAb,EAAaA,EAAMjC,YAAc,KAC5D,gBAAC,GAAD,CAAM1J,MAAO,CAAEijB,YAAa,KAC1B,gBAAC2N,GAAD,CAAWC,IAAK,IAAIzS,KAAwB,KAAf,MAAJzS,OAAA,EAAAA,EAAMjC,mBAMvC,gBAACqf,GAAA,EAAKG,QAAN,CAAclpB,MAAO,CAACqC,GAAOi4B,cAC3B,gBAAC,GAAD,CAAMt6B,MAAO,CAAEqD,cAAe,MAAO0gB,SAAU,OAAQte,gBAAiB,gBACtE,gBAACkc,GAAD,CACEha,MAAK,MAAEgE,OAAF,EAAEA,EAAM7B,MACbmW,OAAK,EACL9c,MAAO8M,EAAMX,OAAO+Q,UACpBF,SAAU,SAAOrW,GAAP,eAAApL,EAAAC,OAAA,uDACC,MAAJgN,OAAA,EAAAA,EAAM2oB,gBAAiB,IAAMxqB,EAAMC,UAAY,IAD5C,gBAEAgnB,IAAY,MAAJplB,OAAA,EAAAA,EAAM2oB,gBAAiB,IAAMxqB,EAAMC,UAAY,GAE7DqK,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,oBAAqBgpB,EAAtB,4CACPla,QAAS,aAPP,wCAAAnY,EAAA,MAWA80B,EAAY1pB,IAXZ,OAYNuZ,IAZM,+DAgBZ,gBAAC5B,GAAD,CACEte,MAAO8M,EAAMX,OAAO+Q,UACpB1Y,MAAK,MAAEgE,OAAF,EAAEA,EAAM9B,MACbsW,SAAUmT,EACVrT,OAAK,IAEP,gBAACU,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,YACL5gB,MAAO,CACL8gB,iBAAkB,EAClBrb,gBAAiB,cACjBjI,OAAQ,GACRkF,WAAY,SACZe,YAAawM,EAAMX,OAAO+Q,WAE5BU,UAAW,CAAE5d,MAAO8M,EAAMX,OAAO+Q,UAAWnd,SAAU,MAEjD,MAAJyI,OAAA,EAAAA,EAAM2oB,gBAAiB,EAZ1B,YAYgC3oB,GAZhC,SAYgCA,EAAM7B,YAZtC,EAYgC,EAAaC,aAQvD,IAAM1H,GAASC,IAAWC,OAAO,CAC/B+3B,YAAa,CACX7V,eAAgB,EAChBtkB,SAAU,SACVkD,cAAe,OAEjB+8B,UAAW,CACT5iC,OAAQ,GACRwmB,OAAQ,EACRthB,WAAY,UAEd29B,cAAe,CAAEn9B,SAAU,M,uCCjLd,SAASo9B,GAAahjC,GACnC,IAAQI,EAAoCJ,EAApCI,SAAU6iC,EAA0BjjC,EAA1BijC,YAAaprB,EAAa7X,EAAb6X,SAEzBH,EAAMzW,WA8CZ,OACE,gBAACiiC,GAAA,EAAD,CAGExrB,IAAKA,EACLyrB,SAAUtrB,EACVurB,mBAnDiB,SACnBC,EACAC,GAEA,IAAMC,EAAQD,EAAMl7B,YAAY,CAC9BC,WAAY,EAAE,IAAK,GACnBC,YAAa,CAAC,EAAK,KAGfk7B,EAAaF,EAAMl7B,YAAY,CACnCC,WAAY,EAAE,IAAK,GACnBC,YAAa,CAAC,EAAG,MAGnB,OACE,gBAAC,IAAD,CACE0P,QAAS,WAAO,IAAD,EACF,MAAXirB,KAAajrB,UACV,MAAHN,GAAA,SAAAA,EAAKpW,UAAL,EAAcsQ,UAGhB,gBAAC,KAAS5J,KAAV,CACEtF,MAAO,CACLisB,SAAU,EACVxmB,gBAAe,MAAE86B,OAAF,EAAEA,EAAa96B,gBAC9B9B,eAAgB,SAChBnG,OAAQ,OACRD,MAAO,GACPgI,UAAW,CAAC,CAAEu7B,iBAGhB,gBAAC,KAAS76B,KAAV,CACEjG,MAAO,CACLmD,MAAO,QACPV,kBAAmB,GACnB+S,WAAY,MACZjQ,UAAW,CAAC,CAAEs7B,YALlB,MAQGN,OARH,EAQGA,EAAaxa,UAapBgb,qBAAmB,GAElBrjC,GClCQ,SAASmiC,GAASviC,GAAwB,IAAD,EAE9CwiC,EAMJxiC,EANFqO,KACAyb,EAKE9pB,EALF8pB,WACA4Z,EAIE1jC,EAJF0jC,gBACAC,EAGE3jC,EAHF2jC,gBACA3L,EAEEh4B,EAFFg4B,iBACAE,EACEl4B,EADFk4B,YAEIrtB,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtC6B,EAAWV,KACjB,EAAkCnV,YAAe,GAAjD,WAAOyvB,EAAP,KAAmBC,EAAnB,KACA,EAA0C1vB,YAAe,GAAzD,WAAO2iC,EAAP,KAAuBC,EAAvB,KAEA,EAIInO,GAAa,CACflW,UAAW,CACT3e,GAAIiO,OAAO0zB,EAAc3hC,KAE3BolB,oBAAoB,IAPd5X,EADR,EACE2R,KACArJ,EAFF,EAEEA,QACAoP,EAHF,EAGEA,QASM1T,EADgBmO,KAChBnO,YAEFye,EAAqBC,GAAsB,CAC/C9R,UAAW,kBACTnI,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,UAAD,MAAW4D,OAAX,EAAWA,EAAMwmB,YAAjB,WACPtb,QAAS,cAGfR,QAAS,SAACtO,GAAD,OACPqM,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,UACA8O,QAAS,cAIXsc,EAAqBC,GAAsB,CAC/C7W,UAAW,SAAClU,GAAD,iBACT+L,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,UAAY,SAAAM,EAAQ8D,OAAR,WAAcL,eAAd,WAA4Ba,WAA5B,IAAkC5G,OAAQ,QAA/C,oCACL4F,OADK,EACLA,EAAMwmB,YAERtb,QAAS,cAGfR,QAAS,SAACtO,GAAD,OACPqM,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,UACA8O,QAAS,cAKXwc,EAAe90B,eACnB,SAAO4N,GAAP,SAAAzN,EAAAC,OAAA,kEAAAD,EAAA,MACQy0B,EAAmB1W,OAAO,CAC9Bte,GAAIiO,OAAOD,EAAKhO,OAFpB,8DAKA,CAACg1B,IAGGG,EAAc/0B,eAClB,SAAOsL,GAAP,SAAAnL,EAAAC,OAAA,yDACOgN,KAAMxN,GADb,mEAAAO,EAAA,MAIQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChBwvB,QAASvhB,OAAOvC,EAAM1L,OAN1B,8DASA,CAACiwB,EAAD,MAAqBziB,OAArB,EAAqBA,EAAMxN,KAGvBo1B,EAAYh1B,eAChB,SAAOkL,GAAP,SAAA/K,EAAAC,OAAA,yDACOgN,KAAMxN,GADb,mEAAAO,EAAA,MAIQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChByvB,MAAOxhB,OAAO3C,EAAItL,OANtB,8DASA,CAACiwB,EAAD,MAAqBziB,OAArB,EAAqBA,EAAMxN,KAGvBq1B,EAAcj1B,eAClB,SAAOuL,GAAP,SAAApL,EAAAC,OAAA,yDACOgN,KAAMxN,GADb,mEAAAO,EAAA,MAIQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChB0vB,QAASzhB,OAAOtC,EAAM3L,OAN1B,8DASA,OAACwN,OAAD,EAACA,EAAMxN,GAAIiwB,IAGPqF,EAAmBl1B,eACvB,SAAOm1B,GAAP,SAAAh1B,EAAAC,OAAA,yDACOgN,KAAMxN,GADb,mEAAAO,EAAA,MAIQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChB2vB,aAAc1hB,OAAOsnB,EAAGv1B,OAN5B,8DASA,OAACwN,OAAD,EAACA,EAAMxN,GAAIiwB,IAGPE,EAAa/vB,eACjB,SAAOgwB,GAAP,eAAA7vB,EAAAC,OAAA,yDACOgN,KAAMxN,GADb,wDAIQqwB,EAAgBD,EAAiBE,aAAW,IAAIrQ,KAAQmQ,GAASlQ,UAAY,IAAnD,KAJlC,WAAA3f,EAAA,MAMQ0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChBuL,WAAY8kB,EAAertB,KAAKutB,KAAKF,GAAgB,QARzD,8DAWA,OAAC7iB,OAAD,EAACA,EAAMxN,GAAIiwB,IAGPU,EAAWvwB,eAAkB,oBAAAG,EAAAC,OAAA,yDAC5BgN,KAAMxN,GADsB,mEAAAO,EAAA,MAI3B0vB,EAAmB3R,OAAO,CAC9Bte,GAAIiO,OAAOT,EAAKxN,IAChBijC,WAAW,KANoB,8DAQhC,OAACz1B,OAAD,EAACA,EAAMxN,GAAIiwB,IAERjT,EAAa+Y,2BACb9E,EAAgB3P,GAAezY,EAAWwZ,YAE1CmT,EAAclU,GAAezY,EAAW4sB,YACxCC,EAAgBpU,GAAezY,EAAWof,gBAE1C0N,EAAgBrU,GAAezY,EAAW+sB,YAC1CC,EAAkBvU,GAAezY,EAAWitB,gBAE5C5E,EAAkB5P,GAAezY,EAAWsoB,YAC5C3E,EAAmBlL,GAAezY,EAAWqf,gBAC7CuE,EAA+BnL,GAAezY,EAAW6jB,wBAEzD2E,EAAqBH,IAAe,MAAI1jB,OAAJ,EAAIA,EAAMhC,WAAU,MAACgC,KAAM4jB,QAErEhxB,aAAgB,WACN,MAAJoN,KAAM5B,WAAgB,MAAJ4B,OAAA,EAAAA,EAAM5B,UAAW,GACrCkkB,GAAY,KAEb,OAACtiB,OAAD,EAACA,EAAM5B,WAEV,IAAM0lB,EACJwR,IACCtW,GAAoBC,MACrB,MAACjf,KAAMy1B,eACN,MAACz1B,KAAMjC,aAAciC,EAAKjC,YAAa,IAAI0U,MAAOC,UAAY,KAEjE,OAAIpK,EACK,gBAAC2rB,GAAD,MAGP,gBAAC7W,GAAA,EAAD,CACEhP,OAAO,YACP/Z,MAAO,CAAEgkB,OAAQ,GAAI5f,QAAa,MAAJuH,KAAMy1B,UAAY,GAAM,GACtDpY,UAAW,GAEX,gBAACD,GAAA,EAAKf,MAAN,CACEhoB,MAAO,CAAE2D,eAAgB,iBACzBoR,MACE,gBAAC,GAAD,CACE/U,MAAO,CACLzC,MAAO,OACPoX,KAAM,EACNtR,cAAe,MACfX,WAAY,SACZiB,eAAgB,gBAChB8B,gBAAiB,gBAGnB,gBAAC,KAAD,eAAmB,MAAJkG,OAAA,EAAAA,EAAMwmB,aAAc,IACnC,gBAAC,GAAD,CAAMnyB,MAAO,CAAEisB,SAAU,KACxBwD,GACC,gBAACsC,GAAA,EAAD,CACEnR,KAAK,gBACL7G,OAAO,wBACPzE,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvE,cAAczI,SACrCgP,EAAS9B,GAAQF,MAAMvE,cAAc3F,SAAS,CAAC,OAAQyD,KAEnDif,IAAiCD,GAAoBhb,IAEvDyE,EAAS9B,GAAQP,QAAQnE,SAASgB,YAAY,CAACe,KAC/CyE,EAAS9B,GAAQF,MAAMvE,cAAcrB,iBAAiB,CAACmD,MAGrDqxB,GACFA,QAOZ3W,SAAQ,MAAE1e,OAAF,EAAEA,EAAM5F,OAElB,gBAAC+hB,EAAA,EAAD,CACE9N,QAAS/F,GAAWma,EAAmBna,SAAWkf,EAAmBlf,QACrE9Q,MAAOgF,EAAM8H,MAAMX,OAAOgB,SAE5B,gBAACyY,GAAA,EAAKG,QAAN,CACElpB,MAAO,CACLykB,eAAgB,EAChBjnB,OAAQwwB,IAAeiT,OAAkB/gC,EAAY,IACrDC,SAAU,WAGZ,gBAAC,GAAD,CAAMH,MAAO,CAAEqD,cAAe,MAAOoC,gBAAiB,gBACpD,gBAAC+gB,GAAA,EAAD,CACEC,YAAU,EACVmO,gCAAgC,EAChC5J,sBAAuB,CAAEvlB,gBAAiB,gBAE1C,gBAACkc,GAAD,CACEha,MAAK,MAAEgE,OAAF,EAAEA,EAAM7B,MACbqW,SAAU,SAAOrW,GAAP,mBAAApL,EAAAC,OAAA,uDACC,MAAJgN,GAAA,SAAAA,EAAM2V,YAAN,IAAahI,SAAU,IAAMxP,EAAMC,UAAY,IAD5C,gBAEAgnB,IAAY,MAAJplB,GAAA,SAAAA,EAAM2V,YAAN,IAAahI,SAAU,IAAMxP,EAAMC,UAAY,GAE7DqK,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,oBAAqBgpB,EAAtB,4CACPla,QAAS,aAPP,wCAAAnY,EAAA,MAWA80B,EAAY1pB,IAXZ,OAYNuZ,IAZM,+DAgBZ,gBAACrD,GAAD,CAASrY,MAAK,MAAEgE,OAAF,EAAEA,EAAMlC,IAAK0W,SAAUoT,IACrC,gBAAC9R,GAAD,CAAW9Z,MAAK,MAAEgE,OAAF,EAAEA,EAAM9B,MAAOsW,SAAUmT,IACzC,gBAACjS,GAAD,CACE1Z,MAAK,MAAEgE,OAAF,EAAEA,EAAM/B,WACb0X,OAAW,MAAJ3V,OAAA,EAAAA,EAAM2V,QAAS,GACtBnB,SAAUsT,MAIhB,gBAAC4N,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,CAAkB7+B,MAAO,CAAEzC,MAAO,SAChC,gBAAC8jC,GAAA,EAAUrZ,MAAX,aACA,gBAACqZ,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,aACA,gBAACD,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,aAJJ,MAMG31B,GANH,SAMGA,EAAM2V,YANT,EAMG,EAAahjB,KAAI,SAAC6N,GAAU,IAAD,gBACpBipB,EAAS,MAAGzpB,GAAH,SAAGA,EAAM2V,YAAT,EAAG,EAAa0D,QAC7B,gBAAGqQ,EAAH,EAAGA,YAAH,OAAqBA,GAAeA,IAAgBlpB,EAAKkpB,eAErDkM,GAAoB,MAAJp1B,GAAA,SAAAA,EAAMQ,WAAN,IAAYxO,OAAZ,MAAmBwR,OAAnB,EAAmBA,EAAaxR,IAEtD,OACE,gBAACmiC,GAAD,CACEnrB,SAAWosB,IAAkBzN,IAAoByN,IAAkBvN,EACnE9qB,IAAG,QAAUiD,EAAKhO,GAClBoiC,YAAa,CACXxa,MAAO,SACPtgB,gBAAiB,MACjB6P,QAAS,kBAAM+d,EAAalnB,MAG9B,gBAACk1B,GAAA,EAAUG,IAAX,CACEznB,OAAO,WACP5E,WAAW,MAACxJ,MAAMy1B,WAClB9rB,QAAS,WAAO,IAAD,GACT,SAAAnJ,EAAKQ,WAAL,IAAWxO,OAAX,MAAkBwR,OAAlB,EAAkBA,EAAaxR,IAC7Bw1B,IACF,MAAIyB,KAAW9b,OACbgc,EAAiBF,GAEjBI,EAAYrpB,IAGP0nB,IACT,MAAIuB,KAAW9b,OACbgc,EAAiBF,GAEjBI,EAAYrpB,KAIlB3L,cAAc,QAEd,gBAAC6gC,GAAA,EAAUI,KAAX,KACE,gBAAClX,GAAA,EAAD,CAAWvqB,MAAOqC,GAAOq/B,UAAzB,MAAoCv1B,GAApC,SAAoCA,EAAML,eAA1C,SAAoC,EAAoBa,WAAxD,EAAoC,EAA0B5G,OAEhE,gBAACs7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC/W,GAAA,EAAD,CAAWvqB,MAAOqC,GAAOq/B,UAAzB,MAAoCv1B,GAApC,SAAoCA,EAAMV,eAA1C,EAAoC,EAAgB1F,OAEtD,gBAACs7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC/W,GAAA,EAAD,CAAWvqB,MAAOqC,GAAOq/B,YACjB,MAAJv1B,GAAA,SAAAA,EAAMN,iBAAN,IAAkBe,WAAY,MAAS,IAD3C,QAMC,MAAJT,GAAA,SAAAA,EAAMN,iBAAN,IAAkBiB,WACjB,gBAACu0B,GAAA,EAAUG,IAAX,CACEznB,OAAO,WACP5E,WAAW,MAACxJ,MAAMy1B,WAClB5gC,cAAc,QAEd,gBAAC6gC,GAAA,EAAUI,KAAX,KACE,gBAAClX,GAAA,EAAD,CAAWvqB,MAAOqC,GAAOq/B,UAAzB,MAAoCv1B,OAApC,EAAoCA,EAAMJ,gBAE5C,gBAACs1B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC/W,GAAA,EAAD,CAAWvqB,MAAOqC,GAAOq/B,UAAzB,cAEF,gBAACL,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC/W,GAAA,EAAD,CAAWvqB,MAAOqC,GAAOq/B,YACjB,MAAJv1B,GAAA,SAAAA,EAAMN,iBAAN,IAAkBe,WAAY,MAAS,IAD3C,WASXunB,MAAMC,KAAK,CAAE9a,QAAY,MAAJ3N,OAAA,EAAAA,EAAM0oB,iBAAkB,IAAK,SAACsN,EAAGp1B,GAAJ,OAAUA,KAAGjO,KAAI,SAACiO,GAAD,OAClE,gBAAC80B,GAAA,EAAUG,IAAX,CACEt4B,KAAG,MAAKyC,OAAL,EAAKA,EAAMxN,IAAX,eAA4BoO,EAC/BwN,OAAO,WACPzE,QAAS,kBAAM6F,EAAWoa,SAAS,aAAc,CAAE5pB,WAEnD,gBAAC01B,GAAA,EAAUI,KAAX,KACE,gBAAClX,GAAA,EAAD,CAAWvqB,MAAOqC,GAAOq/B,UAAzB,kBAEF,gBAACL,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,KACA,gBAACD,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,aAKN,MAAC31B,MAAMjC,cAAkB,MAAJiC,OAAA,EAAAA,EAAMjC,aAAa,IAAI0U,MAAOC,UAAY,KAC/D,gBAAC,GAAD,CAAMre,MAAO,CAAE2U,KAAM,EAAGlP,gBAAiB,QAAS8V,QAAS,IACzD,gBAACgP,GAAA,EAAD,CAAWvqB,MAAO,CAAEmD,MAAO,YAA3B,eACkBy+B,aACd,IAAIxjB,KAC2B,KAA/B,MAACzS,OAAD,EAACA,EAAMjC,aAHX,SASFu3B,EACA,gBAAClY,GAAA,EAAKb,QAAN,KACO,MAAJvc,KAAM5B,WAAgB,MAAJ4B,OAAA,EAAAA,EAAM5B,UAAW,EAAI,KACtC,gBAACmL,EAAA,EAAD,CACEI,QAAS,kBAAM2Y,GAAaD,IAC5BjU,OAAQiU,EAAa,YAAc,aAElCA,EAAa,YAAc,aAGhC,gBAAC,GAAD,CAAMhuB,MAAO,CAAEisB,SAAU,MAEvBmD,GAAkB,MAACzjB,KAAMy1B,UAAY,KAAW,MAAJz1B,KAAMjC,WAClD,gBAACwL,EAAA,EAAD,CAAQG,KAAK,WAAWC,QAAS,kBAAMgZ,EAAW,OAAOvU,OAAO,mBAAhE,UAIA,gBAAC0G,GAAA,EAAD,CACExG,UAAW,kBAAMknB,GAAgB,IACjCnnB,QAASknB,EACTxgB,OACE,gBAACxL,EAAA,EAAD,CACEG,KAAK,WACLC,QAAS,kBAAM6rB,GAAgB,IAC/BpnB,OAAO,mBAHT,aASF,gBAAC0G,GAAA,EAAKU,KAAN,CACEpH,OAAO,gBACPzE,QAAS,WACP6rB,GAAgB,GAChB7S,EAAW,KAEbvZ,MAAM,mBAER,gBAAC0L,GAAA,EAAKU,KAAN,CACEpH,OAAO,gBACPzE,QAAS,WACP6rB,GAAgB,GAChB7S,EAAW,KAEbvZ,MAAM,mBAER,gBAAC0L,GAAA,EAAKU,KAAN,CACEpH,OAAO,gBACPzE,QAAS,WACP6rB,GAAgB,GAChB7S,EAAW,KAEbvZ,MAAM,mBAER,gBAAC0L,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACP6rB,GAAgB,GAChB7S,EAAW,IAEbvZ,MAAM,mBAMP,MAAJpJ,KAAMy1B,UAAY,KAAW,MAAJz1B,KAAMjC,YAC9BiC,EAAKjC,YAAa,IAAI0U,MAAOC,UAAY,KACzC+Q,EACA,gBAACla,EAAA,EAAD,CACElV,MAAO,CAAEowB,WAAY,GACrB/a,KAAK,YACLC,QAAS,WAAO,IAAD,IACb,OAAI,MAAC3J,GAAD,SAACA,EAAM/B,aAAN,EAAkBzL,GASnB,MAACwN,GAAD,SAACA,EAAM9B,QAAN,EAAa1L,GAQX2wB,IAPE1a,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,4DACT8O,QAAS,aAZNzC,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,kEACT8O,QAAS,eARnB,kBA2BA,gBAAC3B,EAAA,EAAD,CACElV,MAAO,CAAEowB,WAAY,GACrB/a,KAAK,YACL0E,OAAO,kBACPzE,QAAS,kBAAM8R,KACfjS,UACGqa,GACDvK,SAAY,MAAJtZ,OAAA,EAAAA,EAAMjC,aAAciC,EAAKjC,YAAa,IAAI0U,MAAOC,UAAY,MAPzE,aA/Fc,MAkH1B,I,SAAMhc,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNjS,WAAY,SACZiB,eAAgB,SAChB8gB,eAAgB,GAElB1P,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdmqB,UAAW,CACTlb,eAAgB,GAChBjnB,OAAQ,EACRD,MAAO,OAETmkC,SAAU,CACRx+B,SAAU,IAEZsnB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,KC7eGwG,MAtDcyB,aAAH,w3BAsDwD,CAChFvB,WAAY,SAACkB,GAAD,OAAYA,EAAOwkB,YAC/B9lB,UAAW,CACThS,SAAU,CACR2R,GAAW,2CACXI,GAAU,gCAEZ+R,QAAS,CAACnS,GAAW,oCACrBkS,MAAO,CAAClS,GAAW,uCAErBU,cAAe,CACbyR,QAAS,QACTD,MAAO,SCnEHtb,GAAYyG,GAAZzG,QCCKkP,GAAuB9D,aAAH,kcAyBlBwF,MAMb1B,GAAsB,CACtBrF,WAAY,SAACgH,GAAD,mBAAWA,GAAX,SAAWA,EAAO7V,eAAlB,EAAW,EAAiB0T,iBClB3B,SAAS8gB,GAAuBxkC,GAAiC,IAAD,EACrEyoB,EAA6EzoB,EAA7EyoB,MAAOgc,EAAsEzkC,EAAtEykC,oBAAqBnhB,EAAiDtjB,EAAjDsjB,KAAMjZ,EAA2CrK,EAA3CqK,MAAOmd,EAAoCxnB,EAApCwnB,sBAAuB3E,EAAa7iB,EAAb6iB,SAChEtQ,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBACFuE,EAAWV,KAEjB,EAA0BsuB,GAAsB,CAC9CllB,UAAW,CACTiB,WAAY3R,OAAOyD,GACnBC,YAAaiyB,GAEf1rB,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAN5DyG,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QASd1V,aAAgB,WACO,MAArBumB,KAAwB7Q,KACvB,CAACA,EAAS6Q,IAEb,IAAMjB,EAAmBtlB,eACvB,gBAAE6mB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAS,OACxC,CAACjF,IAEG8hB,EAAe1jC,eAAkB,SAACkO,GAAD,aAAYA,OAAZ,EAAYA,EAAQE,KAAK5G,OAAM,IAChE2d,EAAanlB,eAAkB,SAAC2M,GAAD,OAAUA,EAAK/M,MAAL,MAAYwJ,OAAZ,EAAYA,EAAOxJ,MAAI,OAACwJ,OAAD,EAACA,EAAOxJ,KACxEslB,EAAWllB,WAAc,iBAAM,CAACoJ,GAAOqd,OAAOC,WAA4B,CAACtd,IAEjF,OAAOsM,EACL,gBAACoQ,GAAD,MAEA,gCACE,gBAAC,KAAKa,UAAN,KAAiBa,GACjB,gBAAC,GAAD,CACEjC,iBAAe,EACflD,KAAMA,GAAQ,UACd4C,MAAO2B,mBAAW,MAAJ7H,GAAA,SAAAA,EAAM2D,YAAN,IAAa3iB,KAAI,SAAC4iB,GAAD,aAAUA,OAAV,EAAUA,EAAME,UAAS,GAAI,MAC5DqC,SAAUA,EACVC,WAAYA,EACZE,gBAAiBqe,EACjBpe,iBAAkBA,KCxC1B,IAAMnC,GAAehE,aAAH,8PAeH,SAASwkB,GAAgB5kC,GACtC,IAAQqK,EAA2CrK,EAA3CqK,MAAOwY,EAAoC7iB,EAApC6iB,SAAU2E,EAA0BxnB,EAA1BwnB,sBACjBjV,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBAER,EAA0BoO,aAAgByD,GAAc,CACtD5E,UAAW,CACTiB,WAAYlO,KAFRyN,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAUd,OAJA1V,aAAgB,WACO,MAArBumB,KAAwB7Q,KACvB,CAACA,EAAS6Q,IAEN7Q,EACL,gBAACoQ,GAAD,MAEA,gCACE,gBAAC,KAAKa,UAAN,iBACA,gBAAC,GAAD,CACEpB,iBAAe,EACfN,MAAO2B,kBAAO,MAAS,MAAJ7H,OAAA,EAAAA,EAAMsE,SAAU,KAAM,qBAAGzjB,OAAgB,GAC5DslB,SAAU,CAAC9b,GAAOqd,OAAOC,SACzBrB,gBAAiB,SAAC9Z,GAAD,OAAuB,MAALA,OAAA,EAAAA,EAAO/D,OAAQ,IAClD4d,WAAY,SAAC7Z,GAAD,OAAW,GACvB+Z,iBAAkB,gBAAEuB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAkB,SChD5D,SAAS+c,KAAY,IAAD,IAC3Bh6B,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzG,QAC5CyI,EAAWV,KAEjB,OACE,gCACE,gBAACyO,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BmjB,YAAY,WACZpjB,MAAOQ,EAAMV,OAAO1B,KAAK4B,OAAS,GAClCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMzG,KAAKzD,SAAS,CAAC,OAAQ2e,QAE5E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO1B,KAAK6B,MAAQ,QAAU,QACnDO,EAAMV,OAAO1B,KAAK6B,OAAS,mCAG9B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,QACNne,QAASO,EAAMV,OAAOsC,SAASnC,MAC/BD,MAAK,SAAEQ,EAAMV,OAAOsC,WAAf,SAAE,EAAuBpC,YAAzB,EAAE,EAA8Bmf,WACrC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMzG,KAAKzD,SAAS,CAAC,WAAYkE,OAAOya,SAG7D,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOsC,SAASnC,MAAQ,QAAU,QACvDO,EAAMV,OAAOsC,SAASnC,OAAS,IAElC,gBAACtC,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC2kC,GAAD,CACEv6B,MAAOQ,EAAMV,OAAOqC,MAAMnC,MAC1BwY,SAAU,SAACxY,GACTyM,EAAS9B,GAAQF,MAAMzG,KAAKzD,SAAS,CAAC,QAASP,KAC/CyM,EAAS9B,GAAQF,MAAMzG,KAAKzD,SAAS,CAAC,WAAYP,EAAMoC,eAG5D,gBAACuc,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOqC,MAAMlC,MAAQ,QAAU,QACpDO,EAAMV,OAAOqC,MAAMlC,OAAS,IAG/B,gBAACk6B,GAAD,CACE/b,MAAM,MACN5F,SAAU,SAAC1T,GAAD,OAAY2H,EAAS9B,GAAQF,MAAMzG,KAAKzD,SAAS,CAAC,MAAOuE,MACnE9E,MAAOQ,EAAMV,OAAOgC,IAAI9B,OAAS,KACjCo6B,oBAAqB,CAAC,cAExB,gBAACzb,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOgC,IAAI7B,MAAQ,QAAU,QAClDO,EAAMV,OAAOgC,IAAI7B,OAAS,IAG7B,gBAACk6B,GAAD,CACE/b,MAAM,QACN5F,SAAU,SAAC1T,GAAD,OAAY2H,EAAS9B,GAAQF,MAAMzG,KAAKzD,SAAS,CAAC,QAASuE,MACrE9E,MAAOQ,EAAMV,OAAOoC,MAAMlC,OAAS,KACnCo6B,oBAAqB,CAAC,gBAExB,gBAACzb,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOoC,MAAMjC,MAAQ,QAAU,QACpDO,EAAMV,OAAOoC,MAAMjC,OAAS,IAG/B,gBAAC+e,GAAA,EAAD,CAAS3mB,MAAO,CAAEykB,eAAgB,KAElC,gBAACyG,GAAA,EAAS/J,KAAV,CACE4E,MAAM,2BACNjnB,OAAQqJ,EAAMV,OAAOkC,OAAOhC,MAAQ,UAAY,YAChD2N,QAAS,kBACPlB,EAAS9B,GAAQF,MAAMzG,KAAKzD,SAAS,CAAC,UAAWC,EAAMV,OAAOkC,OAAOhC,cAQjF,IAAMtF,GAASC,IAAWC,OAAO,CAC/BkF,OAAQ,CACNkN,KAAM,EACNpX,MAAO,QAET+K,MAAO,CACLkc,aAAc,EACdjnB,MAAO,UC3EI,SAAS6kC,GAAc9kC,GACpC,IAAQ+kC,EAA8D/kC,EAA9D+kC,YAAaC,EAAiDhlC,EAAjDglC,aAAcvtB,EAAmCzX,EAAnCyX,MAAOd,EAA4B3W,EAA5B2W,QAASzM,EAAmBlK,EAAnBkK,KAAM9J,EAAaJ,EAAbI,SACnDupB,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAElD,OACE,gBAACoV,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAWxS,EAAM+6B,aAAa,EAAOviC,MAAO,CAAEs3B,SAAU,IAAK5zB,UAAW,WAC9E,gBAACokB,EAAA,EAAD,CAAaC,eAAa,EAAC/N,QAAS/F,EAAS9Q,MAAO8jB,EAAYhX,MAAMX,OAAOgB,SAC7E,gBAACsX,GAAA,EAAOI,MAAR,KAAejT,GACf,gBAAC6S,GAAA,EAAOsB,QAAR,CAAgB1oB,cAAc,YAC5B,gBAAConB,GAAA,EAAOK,WAAR,KACE,gBAAC,IAAD,KAAavqB,KAGjB,gBAACkqB,GAAA,EAAOM,QAAR,CAAgBloB,MAAO,CAAE2D,eAAgB,aACvC,gBAACuR,EAAA,EAAD,CACEI,QAAS,WACPhY,EAAM6qB,YAFV,UAQA,gBAACjT,EAAA,EAAD,CAAQI,QAASgtB,GAAeD,MCzB3B,SAASG,GAAWllC,GAAqB,IAAD,MAC7CkK,EAA6BlK,EAA7BkK,KAAM2gB,EAAuB7qB,EAAvB6qB,QAAS5L,EAAcjf,EAAdif,UACjBpU,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzG,QAC1CkE,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBAEFuE,EAAWV,KACXmuB,EAAaY,GAAsB,CACvClmB,UAAU,SAAD,oGAAC,EAAC,SAAClU,GAAa,IAAD,EACtB+L,EACEsuB,GAASnxB,aAAa,CACpBxJ,QAAQ,SAAD,MAAUM,GAAV,SAAUA,EAASsD,WAAnB,EAAU,EAAe5F,MAAzB,WACP8Q,QAAS,aAIb,MAAIxO,KAASsD,MACX4Q,EAAS,MAAClU,OAAD,EAACA,EAASsD,MAErByI,EAAS9B,GAAQF,MAAMzG,KAAKvG,SAC5BqY,uBAAsB,kBAAMrJ,EAAS9B,GAAQF,MAAMzG,KAAKnD,SAAQ,UAElE6N,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,YAClEyF,aAAc,SAAChU,EAAOP,GAAR,OACZqM,EAAS9B,GAAQF,MAAMzG,KAAKpD,cAAc,CAACD,EAA2BP,QAGpE46B,EAAapkC,WAAc,iBAAM,CAAC,MAAO,OAAM,IAE/CqkC,EAASrkC,eAAkB,WAAO,IAAD,MAC/Bue,EAAY,CAChBnT,SAAUxB,EAAMV,OAAOkC,OAAOhC,MAC9B5B,KAAMoC,EAAMV,OAAO1B,KAAK4B,MACxBoW,WAAYlO,EACZ9F,SAAU5B,EAAMV,OAAOsC,SAASpC,OAAS,KACzCkmB,QAASzhB,OAAM,SAACjE,EAAMV,OAAOqC,MAAMnC,YAApB,EAAC,EAA0BxJ,KAAO,KACjDyvB,MAAOxhB,OAAM,SAACjE,EAAMV,OAAOgC,IAAI9B,YAAlB,EAAC,EAAwBxJ,KAAO,KAC7CwvB,QAASvhB,OAAM,SAACjE,EAAMV,OAAOoC,MAAMlC,YAApB,EAAC,EAA0BxJ,KAAO,MAEnD0jC,EAAWplB,OAAOK,KACjB,CACD+kB,EACAhyB,EAFC,SAGD1H,EAAMV,OAAOgC,IAAI9B,YAHhB,EAGD,EAAwBxJ,GACxBgK,EAAMV,OAAOkC,OAAOhC,MACpBQ,EAAMV,OAAOsC,SAASpC,MACtBQ,EAAMV,OAAO1B,KAAK4B,MANjB,SAODQ,EAAMV,OAAOoC,MAAMlC,YAPlB,EAOD,EAA0BxJ,GAPzB,SAQDgK,EAAMV,OAAOqC,MAAMnC,YARlB,EAQD,EAA0BxJ,KAG5B,OACE,gBAACikC,GAAD,CACE56B,KAAMA,EACN2gB,QAASA,EACTma,aAAcM,EACdP,YAAY,SACZM,WAAYA,EACZ1uB,QAAS4tB,EAAW5tB,QACpBc,MAAM,YAEN,gBAACotB,GAAD,O,2pBC5DS,SAASU,KAAgB,IAAD,YACrC,EAAsC/kB,KAA9BxQ,EAAR,EAAQA,SAAU2G,EAAlB,EAAkBA,QAAS2K,EAA3B,EAA2BA,OACrBxK,EAAWV,KACXyH,EAAa+Y,2BACbjkB,EAAQmQ,eAER0iB,EAAU,MAAGx1B,OAAH,EAAGA,EAAUy1B,kBAEvBC,EAAe,MAAR11B,GAAA,SAAAA,EAAUy1B,oBAAV,EAA6BE,UACtC,IAAI7kB,KAA8C,KAAjC,MAAR9Q,GAAA,SAAAA,EAAUy1B,wBAAV,IAA6BE,YACtC,IAAI7kB,KACFra,GAAkB,MAARuJ,GAAA,SAAAA,EAAUy1B,wBAAV,IAA6Bh/B,UAAW,EAClDiJ,GAAsB,MAARM,GAAA,SAAAA,EAAUy1B,wBAAV,IAA6B/1B,cAAe,EAC1Dk2B,EAAYzjB,GAAezY,EAAWm8B,yBAEtCC,GAAiC,MAAVN,OAAA,EAAAA,EAAY3kC,MAAZ,MAAkB2kC,GAAlB,SAAkBA,EAAY31B,YAA9B,EAAkB,EAAmBmM,UAArC,MAA+CwpB,OAA/C,EAA+CA,EAAY/+B,SACxF,QAAQkQ,GAAW,MAAC3G,KAAUy1B,oBAAuBnkB,EAOnD,gBAACmK,GAAA,EAAD,CACE/oB,MAAOqC,GAAO2qB,KACdhE,UAAW,EACX1T,QAAS,WACH4tB,GAAS,MAAI51B,KAAUy1B,oBACzB3uB,EAAS9B,GAAQF,MAAMpE,QAAQxF,QAAtB,MAA8B8E,OAA9B,EAA8BA,EAAUy1B,oBACjD5nB,EAAWoa,SAAS,iBAIxB,gBAAC8N,GAAA,EAAD,CACEpuB,OAAQhF,EAAMG,KAAOkzB,KAAkBC,KACvCvjC,MAAK,MAAOsC,IAAWiT,oBACvBiuB,WAAW,SAEX,gBAACza,GAAA,EAAKG,QAAN,CACElpB,MAAO,CACL0C,WAAY,SACZiB,eAAgB,SAChBsoB,SAAU,IAGVmX,EAKA,gCACE,gBAAC99B,EAAA,QAAD,CAAMtF,MAAOqC,GAAOjC,KAClB,gBAACkF,EAAA,QAAD,CAAMtF,MAAOqC,GAAOohC,MAClB,gBAACC,GAAA,EAAD,CACE39B,KAAK,WACL5C,MAAM,UACN6C,KAAM,GACNhG,MAAO,CACLijB,YAAa,KAGjB,gBAAChd,EAAA,EAAD,CAAMjG,MAAOqC,GAAO2gC,MAAOW,aAAOX,EAAM,gBAG1C,gBAAC19B,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOohC,KAAM,CAAE9/B,eAAgB,WAAYD,UAAW,cAClE,gBAACggC,GAAA,EAAD,CACE39B,KAAK,cACL5C,MAAM,UACN6C,KAAM,GACNhG,MAAO,CACLijB,YAAa,KAGjB,gBAAChd,EAAA,EAAD,CAAMjG,MAAOqC,GAAO2K,aAAcA,GAAe,KACjD,gBAAC0V,GAAA,EAAD,CAAwB3c,KAAK,sBAAsB5C,MAAM,UAAU6C,KAAM,OAG7E,gBAACV,EAAA,QAAD,CAAMtF,MAAOqC,GAAOoT,QAClB,gBAACnQ,EAAA,QAAD,CAAMtF,MAAOqC,GAAOuhC,WAClB,gBAACt+B,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+mB,KAClB,gBAAC9jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOohC,MAClB,gBAACx9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAOwhC,QAApB,aAEF,gBAACv+B,EAAA,QAAD,CAAMtF,MAAOqC,GAAOohC,MAClB,gBAACx9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAOwhC,QAApB,SAEF,gBAACv+B,EAAA,QAAD,CAAMtF,MAAOqC,GAAOohC,MAClB,gBAACx9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAOwhC,QAApB,eAGHC,oBACS,MAARx2B,GAAA,SAAAA,EAAUy1B,wBAAV,IAA6B51B,QAAS,IACtC,SAACjC,GAAD,OAAUkB,OAAOlB,EAAK0B,YACtB,QACAtO,KAAI,gBAAUu8B,EAAV,EAAGzC,MAAaC,EAAhB,EAAgBA,UAAWzrB,EAA3B,EAA2BA,SAA3B,OACJ,gBAAC,WAAD,CAAgB1D,IAAG,WAAa0D,GAC9B,gBAAC+Z,GAAA,EAAD,CAAS3mB,MAAO,CAAEzC,MAAO,OAAQkI,gBAAiB,WAClD,gBAACH,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+mB,KAClB,gBAAC9jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOohC,MAClB,gBAACx9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAOsF,OAAQiF,IAE9B,gBAACtH,EAAA,QAAD,CAAMtF,MAAOqC,GAAOohC,MAClB,gBAACx9B,EAAA,EAAD,CAAMjG,MAAOqC,GAAOsF,OAAQkzB,IAE9B,gBAACv1B,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOohC,KAAM,CAAE9/B,eAAgB,YAC3C,gBAACsC,EAAA,EAAD,CAAMjG,MAAOqC,GAAOsF,OAAQ0wB,GAC5B,gBAACqL,GAAA,EAAD,CACE39B,KAAK,kBACLC,KAAM,GACNhG,MACEq4B,GAAa,MAAMlb,KAAKkb,IAAcjsB,OAAOisB,GAAa,IACtD,CACE9yB,UAAW,CACT,CACEC,OAAW6yB,EAAL,QAGVjI,WAAY,GAEd,CAAEA,WAAY,YAQhC,gBAAC9qB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO0B,QAASvD,cAAc,YACzC,gBAACyF,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOwhC,OAAQ,CAAE/gC,UAAW,YAA1C,YACYiB,EADZ,QAGA,gBAACqX,GAAA,EAAD,CACEpb,MAAO,CAAEzC,MAAO,OAAQC,OAAQ,QAChC2X,UAAW+tB,EACX5tB,QAAS,WACK,MAARhI,KAAUy1B,mBAAqBG,IACjC9uB,EAAS9B,GAAQF,MAAMpE,QAAQxF,QAAQ8E,EAASy1B,oBAChD5nB,EAAWoa,SAAS,oBAIxB,gBAAC,KAAD,CAAYxxB,QAASA,EAASxE,IAAG,MAAE+N,OAAF,EAAEA,EAAU/N,IAAKC,IAAG,MAAE8N,OAAF,EAAEA,EAAU9N,UA/FzE,gBAAC8F,EAAA,QAAD,CAAMtF,MAAOqC,GAAO0hC,QAClB,gBAAC99B,EAAA,EAAD,CAAMjG,MAAOqC,GAAO2hC,aAApB,uBA9BV,gBAAC,KAAD,CACE5lC,eAAgBiE,GAAO2qB,KACvBzI,WAAS,EACTxkB,OAAQ,CAAC,CAAEmJ,IAAK,OAAQ1L,OAAQ,IAAKD,MAAO,WAqIlD,IAAM8E,GAASC,IAAWC,OAAO,CAC/ByqB,KAAM,CACJf,SAAU,EACVhsB,aAAc,GACdukB,aAAc,GACd1D,iBAAkB,GAClBtjB,OAAQ,IACR2C,SAAU,UAEZ6iC,KAAM,CACJruB,KAAM,EACNzR,SAAU,GACVC,MAAO,QACPF,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,EAClBD,gBAAiB,yBAEnBiK,YAAa,CACX9J,SAAU,GACVu2B,WAAY,GACZt2B,MAAO,QACPQ,eAAgB,WAChBV,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,EAClBD,gBAAiB,yBAEnBgjB,MAAO,CACL5iB,MAAO,QACPqS,WAAY,QAEd7N,MAAO,CACLxE,MAAO,UACPF,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClBD,gBAAiB,uBAEnBqmB,IAAK,CACH1mB,WAAY,SACZiB,eAAgB,eAChBnG,OAAQ,GACRD,MAAO,OACP8F,cAAe,OAEjBogC,KAAM,CACJ9uB,KAAM,EACNxR,MAAO,QACPE,cAAe,OAEjBwgC,OAAQ,CACNruB,WAAY,OACZrS,MAAO,UACPF,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClBD,gBAAiB,sBAEnBghC,OAAQ,CACNrhC,WAAY,SACZiB,eAAgB,SAChBsoB,SAAU,EACVnpB,UAAW,SACXY,UAAW,SACXlG,OAAQ,QAEVwmC,YAAa,CACX7gC,MAAO,UACPF,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClBD,gBAAiB,sBACjBG,SAAU,IAEZ9C,IAAK,CACHob,UAAW,GACX7X,eAAgB,gBAChBjB,WAAY,SACZW,cAAe,MACf9F,MAAO,QAETkY,OAAQ,CACNpS,cAAe,MACf9F,MAAO,OACPoG,eAAgB,gBAChBjB,WAAY,WACZupB,SAAU,EACVzuB,OAAQ,IACRge,UAAW,GACXwQ,cAAe,IAEjB4X,UAAW,CACTrmC,MAAO,IACPC,OAAQ,IACR6F,cAAe,UAEjBU,QAAS,CACPxG,MAAO,IACPC,OAAQ,IACR6F,cAAe,SACfX,WAAY,cCtRD,SAASk9B,KACtB,OACE,gBAAC,KAAD,CACExhC,eAAgB,CACdZ,OAAQ,IACR85B,SAAU,IACV70B,kBAAmB,IAErB8hB,WAAS,EACTxkB,OAAQ,CAAC,CAAEmJ,IAAK,SAAU3L,MAAO,OAAQC,OAAQ,OAAQyC,aAAc,MCQ9D,SAASgkC,KAAkB,IAAD,cACjC97B,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCH,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtC8xB,EAAiBtwB,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQnE,YACvDwG,EAAWV,KACjB,EAAsDnV,YAAe,GAArE,WAAO4lC,EAAP,KAA6BC,EAA7B,KACA,EAA+DtmB,KAAvDxQ,EAAR,EAAQA,SAAUqC,EAAlB,EAAkBA,YAAasE,EAA/B,EAA+BA,QAASoP,EAAxC,EAAwCA,QAASghB,EAAjD,EAAiDA,UAE3ClpB,EAAa+Y,2BACboQ,EAAYC,0BAElBhmC,aAAgB,WACV+lC,GAAS,MAAIh3B,KAAUvH,MACzBoV,EAAWqpB,WAAW,CAAEzvB,MAAOzH,EAASvH,SAEzC,CAACu+B,EAAD,MAAYh3B,OAAZ,EAAYA,EAAUvH,KAAMoV,IAE/B5c,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IAEf,IAAMoc,IAAa,MAACnyB,GAAD,SAACA,EAAUsU,UAAV,EAAkBtI,QAChComB,IAAkB,MAACpyB,GAAD,SAACA,EAAU9D,eAAV,EAAuB8P,QAC1CxQ,IAAY,MAACwE,MAAUxE,UACvB27B,EAAkBhF,GAAaC,EAErCnhC,aAAgB,WAAO,IAAD,QACR,MAAR+O,KAAU3E,eAAwB,MAAR2E,OAAA,EAAAA,EAAU3E,iBAAV,SAA2BR,EAAM8H,QAAjC,SAA2B,EAAaX,aAAxC,EAA2B,EAAqBC,UAC5E6E,EAAS9B,GAAQC,OAAO3B,gBAAgBtD,EAAS3E,eAGvC,MAAR2E,KAAU5E,iBAA0B,MAAR4E,OAAA,EAAAA,EAAU5E,mBAAV,SAA6BP,EAAM8H,QAAnC,SAA6B,EAAaX,aAA1C,EAA6B,EAAqBgB,SAChF8D,EAAS9B,GAAQC,OAAO3B,gBAAgBtD,EAAS5E,mBAElD,CACD0L,EADC,MAED9G,OAFC,EAEDA,EAAU3E,aAFT,MAGD2E,OAHC,EAGDA,EAAU5E,eAHT,SAIDP,EAAM8H,QAJL,SAID,EAAaX,aAJZ,EAID,EAAqBgB,OAJpB,SAKDnI,EAAM8H,QALL,SAKD,EAAaX,aALZ,EAKD,EAAqBC,UAGvB,IAAMm1B,EAAgBjlB,GAAezY,EAAW29B,YAE1Cvd,EAAa7oB,eACjB,SAACoN,GACC,OAAI,MAACgE,KAAaqf,WASd,MAACrf,KAAasf,cASd,MAACtf,KAAai1B,iBASd,MAACj1B,KAAak1B,iBASd,MAACl1B,KAAauf,cASd,MAACvf,KAAawf,YASlB/a,EAAS9B,GAAQF,MAAMxE,SAASpF,SAAQ,IACxC4L,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,eAAgByH,KAC1DyE,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,OAAQyD,KAC3C,MAXEyI,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,sCACT8O,QAAS,aAZNzC,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,6DACT8O,QAAS,aAZNzC,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,kCACT8O,QAAS,aAZNzC,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,oDACT8O,QAAS,aAZNzC,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,iCACT8O,QAAS,aAZNzC,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,oDACT8O,QAAS,eAuDjB,CAAClH,EAAayE,IAGR7W,EAAUg3B,eAAVh3B,MAEJunC,EAA+D,IAAvB,UAA3BZ,EAAev1B,QAAsB,IAAM,KAC5Dm2B,EAAYA,EAAYvnC,EAAQA,EAAQ,GAAKunC,EAC7C,IAAMtQ,EAAarzB,KAAKszB,MAAMl3B,EAAQunC,IAAc,EAC9CpQ,EAAeoQ,EAAYtQ,EAE3BuQ,GAAgB,MAARz3B,GAAA,SAAAA,EAAUy3B,YAAV,IAAiB9jB,QAAS,GAClC0T,IAAiB,MAACoQ,KAAOzrB,SAAUrF,EAEnChE,EAAQmQ,eACd,OACE,gBAAC,GAAD,CAAMpgB,MAAO,CAAE2U,KAAM,EAAGlP,gBAAiBwK,EAAMX,OAAOiJ,aACpD,gBAACuP,EAAA,EAAD,CAAa9N,QAAS/F,EAAS8T,eAAa,EAAC5kB,MAAOgF,EAAM8H,MAAMX,OAAOgB,SAEvE,gBAAC,GAAD,CAAMtQ,MAAOqC,GAAOG,WAChBmyB,GAAmB8P,EAGnB,gBAAC,GAAD,CACEzkC,MAAO,CACLzC,MAAO,OACPoX,KAAM,EACNnX,OAAQ2E,KAAWC,IAAI,UAAU5E,SAGnC,gBAAC,IAAD,CACEwnC,oBAAqB,kBAAM,gBAAC,GAAD,OAC3BC,mBAAoB,kBAClB,gBAAC7a,GAAD,CAAWrV,MAAM,wBAAwBsV,SAAS,wBAEpDrqB,MAAO,CACLgjB,WAAY,GACZrO,KAAM,EACNnX,OAAQ2E,KAAWC,IAAI,UAAU5E,OACjCiI,gBAAiBwK,EAAMX,OAAOiJ,YAEhCwB,OAAO,QACP+a,aAAc,WAAW3pB,GAAX,MAAGD,EAAH,EAAGA,KAAH,sBAAqC,MAAJA,GAAA,SAAAA,EAAMkW,WAAN,IAAYjjB,KAAMgN,IACjEjC,IAAG,iBAAmBsrB,EACtBxJ,sBAAuB,CACrBztB,MAAOm3B,EACPhxB,UAAW,SACXsoB,cAAe,IACfvmB,gBAAiBwK,EAAMX,OAAOiJ,YAEhCic,WAAYA,EACZlX,KAAMqX,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAKoQ,EACzC9P,eACE,gBAACC,GAAA,EAAD,CAAgBH,WAAY9gB,EAAS+gB,UAAW,kBAAMqP,EAAU,OAElElP,WAAY,YAA4B,IAAnBjU,EAAkB,EAAxBhW,KAAYD,EAAY,EAAZA,MAGzB,OAAa,IAATiW,EACgC,SAA3BgjB,EAAev1B,QACpB,gBAAC,GAAD,CAAkBzF,IAAG,gBAAkB+B,IAEvC,gBAAC20B,GAAD,CAAkB12B,IAAG,gBAAkB+B,IAGT,SAA3Bi5B,EAAev1B,QACpB,gBAAC,GAAD,CACEsyB,iBAAiB,EACjB/3B,IAAG,QAAUgY,EAAKE,KAAKjjB,GACvBwN,KAAMuV,EAAKE,KACXoU,YAAa,SAACrpB,GACZ,MAAI+U,KAAME,OACRhN,EAAS9B,GAAQF,MAAMxE,SAASpF,QAAQ2D,IACxCiI,EAAS9B,GAAQF,MAAMxE,SAAS1F,SAAS,CAAC,OAAQgZ,EAAKE,UAG3DkU,iBAAkB,SAAChU,GACjBlN,EAAS9B,GAAQF,MAAMvE,cAAczI,SACrCgP,EAAS9B,GAAQF,MAAMvE,cAAc3B,aAAaoV,IAClDlN,EAAS9B,GAAQF,MAAMvE,cAAc3F,SAAS,CAAC,OAAQgZ,EAAKE,QAC5DjG,EAAWoa,SAAS,wBAEtBnO,WAAY,WACVA,EAAWlG,EAAKE,OAElB4f,gBAAiB,WACf5sB,EAAS9B,GAAQF,MAAMvE,cAAczI,SACrCgP,EAAS9B,GAAQF,MAAMvE,cAAcrF,SAAQ,IAC7C4L,EAAS9B,GAAQF,MAAMvE,cAAc3F,SAAS,CAAC,OAAQgZ,EAAKE,WAIhE,gBAACye,GAAD,CACE32B,IAAG,QAAUgY,EAAKE,KAAKjjB,GACvBwN,KAAMuV,EAAKE,KACX9L,QAAS,kBAAM6F,EAAWoa,SAAS,aAAc,CAAE5pB,KAAMuV,EAAKE,cA1ExE,gBAACoe,GAAD,CAAkBC,YAAWC,iBAAgB52B,aAiF9C47B,GAAiBD,GAChB,gBAACxU,GAAA,EAAD,CACEjwB,MAAOqC,GAAOmoB,IACdvK,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMzG,KAAKnD,SAAQ,KACnDud,MAAM,cAIZ,gBAAC,GAAD,CAAM/lB,MAAOqC,GAAOwhC,QAClB,gBAACpjB,GAAA,EAAD,CACEC,OAAQ,gBAACqR,GAAA,EAAD,CAAYnR,KAAK,cAActL,QAAS,kBAAM8uB,GAAsB,MAC5EpqB,QAASmqB,EACTlqB,UAAW,kBAAMmqB,GAAsB,KAEvC,gBAAC3jB,GAAA,EAAKU,KAAN,CACEpM,MAAM,sBACNwd,WAAY,CACV/c,WAAuC,UAA3B0uB,EAAev1B,QAAsB,SAAW,QAE9D2G,QAAS,WACPlB,EAAS9B,GAAQP,QAAQnE,SAASiB,gBAAgB,SAClDu1B,GAAsB,MAG1B,gBAAC3jB,GAAA,EAAKU,KAAN,CACEpM,MAAM,qBACNwd,WAAY,CACV/c,WAAuC,SAA3B0uB,EAAev1B,QAAqB,SAAW,QAE7D2G,QAAS,WACPlB,EAAS9B,GAAQP,QAAQnE,SAASiB,gBAAgB,UAClDu1B,GAAsB,QAM9B,gBAAC5B,GAAD,CACEjmB,UAAW,WACTnI,EAAS9B,GAAQF,MAAMzG,KAAKnD,SAAQ,IACpC6a,KAEF7b,KAAM4K,EAAMzG,KAAKnE,KACjB2gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMzG,KAAKnD,SAAQ,QAM3D,I,MAAMnG,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNjS,WAAY,SACZiB,eAAgB,UAElBoR,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdmqB,UAAW,CACTlb,eAAgB,GAChBjnB,OAAQ,EACRD,MAAO,OAETitB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEVouB,OAAQ,CACNnhC,WAAY,aACZiB,eAAgB,WAChBN,cAAe,MACfkY,QAAS,EACThe,MAAO,OACPE,SAAU,WACV2C,IAAK,EACLqF,gBAAiB,iBCtSf4lB,GAAwB3N,aAAH,0+CAyFZ,SAASwnB,GAAoB5nC,GAA8B,IAAD,sBAC/Dif,EAAcjf,EAAdif,UACFnI,EAAWV,KACXvL,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvE,iBAC5CoZ,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,EAA4CiK,aAAsB6O,IAAlE,WAAOC,EAAP,KAA4BnE,EAA5B,KACMhM,EAAa+Y,2BAEb9W,EAAW7e,eAAkB,WAAO,IAAD,IACnCye,GAAY,EAkBhB,OAjBI,SAAC7U,EAAMV,OAAOgE,SAAS9D,QAAtB,EAA6BxJ,KAChC6e,GAAY,EACZ5I,EACE9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,WAAY,wCAIvD,SAACJ,EAAMV,OAAOoE,WAAWlE,QAAxB,EAA+BxJ,KAClC6e,GAAY,EACZ5I,EACE9B,GAAQF,MAAMvE,cAActF,cAAc,CACxC,aACA,iDAKEyU,IACP,CAAC5I,EAAD,SAAWjM,EAAMV,OAAOgE,SAAS9D,YAAjC,EAAW,EAA6BxJ,GAAxC,SAA4CgK,EAAMV,OAAOoE,WAAWlE,YAApE,EAA4C,EAA+BxJ,KAExEipB,EAAa7oB,eAAkB,4DAAAG,EAAAC,OAAA,mDAC9Bye,IAD8B,4EAAA1e,EAAA,MAKZ4sB,EAAoB,CACvCxO,UAAW,CACTuK,WAAYjb,OAAM,SAACjE,EAAMV,OAAOgE,SAAS9D,YAAvB,EAAC,EAA6BxJ,IAChDqpB,aAAcpb,OAAM,SAACjE,EAAMV,OAAOoE,WAAWlE,YAAzB,EAAC,EAA+BxJ,IACpDmpB,SAAQ,SAAEnf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4BrJ,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYiO,OAAOjO,MAC7DopB,OAAQnb,OAAM,SAACjE,EAAMV,OAAOkE,KAAKhE,YAAnB,EAAC,EAAyBxJ,IACxCstB,UAAS,SAAEtjB,EAAMV,OAAOwE,MAAMtE,YAArB,EAAE,EAA0BrJ,KAAI,SAACotB,GAAD,OACvCC,gBAAKD,EAAiB,CAAC,eAZI,UAK3BrO,EAL2B,OAiBjC,SAAAA,EAAOC,OAAP,WAAaoK,aAAb,WAAyBnK,cAAzB,EAAsCjf,KAAI,YAAyB,IAAtBgK,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QAClD,OAAQO,GACN,IAAK,YACH,OAAO8L,EAAS9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,WAAYR,KACzE,IAAK,OACH,OAAOqM,EAAS9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,OAAQR,KACrE,IAAK,UACL,IAAK,SACL,IAAK,YACH,OAAOqM,EAAS9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,SAAUR,KACvE,IAAK,cACH,OAAOqM,EAAS9B,GAAQF,MAAMvE,cAActF,cAAc,CAAC,aAAcR,KAC3E,QACE,OAAO,SA9BoB,MAiC7BsV,GAjC6B,SAiC7BA,EAAQC,OAjCqB,SAiC7B,EAAcsO,cAjCe,SAiC7B,EAA2BpO,UAA3B,EAAmClE,OAjCN,wBAkC/BlF,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAO,MAAEsV,GAAF,SAAEA,EAAQC,OAAV,SAAE,EAAcsO,kBAAhB,EAAE,EAA2BpO,OAAO,GAC3C3G,QAAS,WArCkB,2BA0C7B,SAACwG,EAAOC,OAAR,SAAC,EAAasO,cAAd,SAAC,EAA0BrO,cAA1B,EAAuCjE,SACjC,MAATiD,OACApB,EAAWoa,SAAS,WAAY,CAAE4P,OAAQ,oBA5CX,kDA+CjC/wB,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAMA,QACf8O,QAAS,WAlDoB,mEAsDlC,CACDzC,EACAkX,EACAnQ,EACAoB,EAJC,SAKDpU,EAAMV,OAAOiE,aALZ,EAKD,EAAqB/D,MALpB,SAMDQ,EAAMV,OAAOgE,SAAS9D,YANrB,EAMD,EAA6BxJ,GAN5B,SAODgK,EAAMV,OAAOkE,KAAKhE,YAPjB,EAOD,EAAyBxJ,GAPxB,SAQDgK,EAAMV,OAAOoE,WAAWlE,YARvB,EAQD,EAA+BxJ,GAC/BgK,EAAMV,OAAOwE,MAAMtE,MACnByV,IAGF,OACE,gBAAC2a,GAAD,KACE,gBAACjQ,EAAA,EAAD,CACEC,eAAa,EACb/N,QAASmN,EAAalT,QACtB9Q,MAAO8jB,EAAYhX,MAAMX,OAAOgB,SAElC,gBAACyY,GAAA,EAAKf,MAAN,CAEEjT,MAAK,mBAAc5M,GAAd,SAAcA,EAAOV,SAArB,SAAc,EAAewE,QAA7B,SAAc,EAAsBtE,YAApC,EAAc,EAA6B2R,QAA3C,+BAAsEnR,EAAMV,OAAOkE,OAAnF,SAAsE,EAAmBhE,YAAzF,EAAsE,EAA0BwqB,cAEvG,gBAAC,GAAD,MACA,gBAACjd,EAAA,EAAD,CACEG,KAAK,YACLrV,MAAO,CAAEzC,MAAO,OAAQknB,eAAgB,IACxCnP,QAAS,kBAAM8R,KACfnT,QAASkT,EAAalT,SAJxB,SCxMN,IAAMuN,GAAuB9D,aAAH,udA0BX,SAAS0nB,KAAiC,IAAD,YAChD7yB,EAASqB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACvC3E,EAAWgG,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQnE,YACjDwG,EAAWV,KAEjB,EAA0BuK,aAAgBuD,GAAsB,CAC9D1E,UAAW,CACTiB,WAAY3R,OAAOmG,EAAO1C,mBAC1B6a,OAAQ9c,EAASM,cAHboP,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAORkH,EAAa+Y,2BAEboQ,EAAYC,0BAOlB,OANAhmC,aAAgB,WACVqP,EAASK,iBACXmG,EAAS9B,GAAQP,QAAQnE,SAASQ,kBAAiB,MAEpD,CAACgG,EAAUkwB,EAAW12B,EAASK,kBAGhC,gCACE,gBAAC6Z,EAAA,EAAD,CAAaC,eAAa,EAAC5kB,MAAOoP,EAAOtC,MAAMX,OAAOgB,OAAQ0J,QAAS/F,IACvE,gBAAC8jB,GAAD,CAAkB/M,sBAAuB,CAAEvoB,kBAAmB,MAC3D,MAAC6a,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgB0T,gBAAjB,SAAC,EAA+BC,QAA/B,EAAsC3H,SACtC,gBAAC8Q,GAAD,CAAWrV,MAAM,WAAWsV,SAAS,KAFzC,MAKG/M,GALH,SAKGA,EAAMhQ,WALT,SAKG,EAAgB0T,gBALnB,SAKG,EAA+BC,YALlC,EAKG,EAAsC3iB,KAAI,SAAC4iB,GAAD,qBACzC,gCACE,gBAAC,KAAKC,KAAN,CACEnhB,MAAO,CAAEzC,MAAO,QAChB2L,IAAG,eAAUgY,GAAV,SAAUA,EAAME,WAAhB,EAAU,EAAYjjB,IACzB4W,MAAK,MAAEmM,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAYzU,KAAK5G,KACxBklB,YAAW,MAAE/J,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAY/X,WAAd,EAAE,EAAkBtD,KAC/BzF,KAAM,4BACJ,MAAC4gB,GAAD,SAACA,EAAME,OAAP,SAAC,EAAYzU,OAAZ,EAAkBsC,MAGjB,gBAAC,KAAOga,MAAR,CACEhU,OAAQ,CAAEc,IAAG,MAAEmL,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAYzU,KAAKsC,OAChCjP,MAAO,CAAE0D,UAAW,SAAUod,iBAAkB,IAChD9a,KAAM,KALR,gBAAC,KAAKggB,KAAN,CAAWpF,KAAK,aASpByB,MAAO,0BACL,gBAAC6I,GAAA,EAASma,QAAV,CACEvmC,OACE,SAAA8O,EAASc,gBAAT,EAAwBpQ,KAAI,qBAAGH,MAAa2hB,UAAa,MAAJoB,GAAA,SAAAA,EAAME,WAAN,IAAYjjB,KAAM,IACnE,UACA,eAIVmX,QAAS,0BACPlB,EACE9B,GAAQP,QAAQnE,SAASgB,YACvB,SAAAhB,EAASc,gBAAT,EAAwBpC,MAAK,2BAAGnO,KAAW,UAAQ+iB,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAYjjB,OAA/D,SACIyP,EAASc,oBADb,EACI,EAAwBsW,QAAO,2BAAG7mB,KAAW,UAAQ+iB,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAYjjB,OADrE,eAEQyP,EAASc,eAFjB,OAEgCwS,OAFhC,EAEgCA,EAAME,YAK9C,gBAACuF,GAAA,EAAD,CAAS3mB,MAAO,CAAEzC,MAAO,QAAU2L,IAAG,kBAAagY,GAAb,SAAaA,EAAME,WAAnB,EAAa,EAAYjjB,WAIrE,gBAAC8xB,GAAA,EAAD,CACEjwB,MAAOqC,GAAOmoB,IACdvK,OAAK,EACLjG,QAASpM,EAASc,cAAc4K,OAAS,EACzCsH,KAAK,QACLtL,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvE,cAAcrB,iBAAiBoB,EAASc,gBAC/DyM,EAAWmqB,UAAU,CAAE/U,QAAQ,IAC/Bnc,EAAS9B,GAAQP,QAAQnE,SAASQ,kBAAiB,IACnDgG,EAAS9B,GAAQP,QAAQnE,SAASgB,YAAY,KAC9CuM,EAAWoa,SAAS,wBAEtBxP,MAAM,UAMd,I,GAAM1jB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,GAER6V,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEVV,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdmqB,UAAW,CACTlb,eAAgB,GAChBjnB,OAAQ,EACRD,MAAO,S,gDCnII,SAASgoC,GAAWjoC,GACjC,IAAQ6X,EAAyC7X,EAAzC6X,SAAU4Q,EAA+BzoB,EAA/ByoB,MAAOyf,EAAwBloC,EAAxBkoC,UAAWlN,EAAah7B,EAAbg7B,SACpC,EAAwB/5B,YAAe,GAAvC,WAAOiJ,EAAP,KAAagB,EAAb,KAEA,OACE,gCACE,gBAACiY,GAAA,EAAD,CACExG,UAAW,kBAAMzR,GAAQ,IACzBwR,QAASxS,EACTkZ,OACE,gBAAC,KAAKS,KAAN,CACE7L,QAAS,kBAAM9M,GAAQ,IACvB2M,WAAYA,EACZJ,MAAOgR,EACPkF,YAAaua,EAAY7B,aAAmB,IAAZ6B,EAAkB,cAAgB,mBAClEllC,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAWpF,KAAK,iBAIhC,gBAAC,KAAD,CACE6kB,aAAcD,EAAY,CAAC,IAAIpnB,KAAiB,IAAZonB,IAAqB,GACzDE,WAAY,SAAC1C,GACX1K,EAAS0K,EAAK3kB,UAAY,KAC1B7V,GAAQ,QCrBpB,I,GAAMm9B,GAAcjoB,aAAH,2LAYF,SAASkoB,GAAWtoC,GAAqB,IAAD,QAC7C6iB,EAAwC7iB,EAAxC6iB,SAAUhL,EAA8B7X,EAA9B6X,SAAUyR,EAAoBtpB,EAApBspB,SAAUjf,EAAUrK,EAAVqK,MACtC,EAAkCpJ,YAAe,GAAjD,WAAO+hB,EAAP,KAAmBC,EAAnB,KACQ1Q,EAAsB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAApD1C,kBACAyN,EAASW,aAAgB0nB,GAAa,CAC5C7oB,UAAW,CACTiB,WAAY3R,OAAOyD,MAFfyN,KAKR,OACE,gCACE,gBAAC,KAAK4H,UAAN,CAAgBllB,MAAO,CAAE2C,YAAa,IAAtC,gBACA,gBAAC8d,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,SAAU7E,GAAYmL,EACtBI,OACE,gBAAC,KAAKS,KAAN,CACE7gB,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAWpF,KAAK,UAC5BtL,QACEH,OACIjV,EACA,WACEqgB,GAAY,IAGpBxL,OAAY,MAALpN,GAAA,SAAAA,EAAO5B,OAAP,WAAasV,QAAQ,IAAK,WAA1B,IAAgCwqB,gBAAiB,eACxD5a,YAAcrE,EAAwB,KAAb,cAd/B,MAkBGtJ,GAlBH,SAkBGA,EAAMhQ,WAlBT,SAkBG,EAAgBw4B,YAlBnB,EAkBG,EAAuBxnC,KAAI,SAAC+K,GAAD,aAC1B,gBAACoX,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPiL,GAAY,GACZJ,EAAS9W,IAEX0L,OAAO,SAAA1L,EAAKtD,WAAL,IAAWsV,QAAQ,IAAK,KAAKwqB,gBAAiB,WCpDlD,SAASE,KACtB,IAAM59B,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMtG,gBAC5CsI,EAAWV,KACXsyB,EAAgBvmB,GAAezY,EAAWi/B,iBAEhD,OACE,gCACE,gBAACL,GAAD,CACEj+B,MAAOQ,EAAMV,OAAO4B,KAAK1B,MACzBwY,SAAU,SAAC+lB,GAAD,OAAa9xB,EAAS9B,GAAQF,MAAMtG,aAAa5D,SAAS,CAAC,OAAQg+B,MAC7E/wB,UAAW6wB,EACXpf,UAAQ,IAEV,gBAACN,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO4B,KAAKzB,MAAQ,QAAU,QACnDO,EAAMV,OAAO4B,KAAKzB,OAGrB,gBAAC,KAAKsd,UAAN,CAAgBllB,MAAO,CAAE2C,YAAa,IAAtC,aACA,gBAAC4iC,GAAD,CACEC,UAAWr9B,EAAMV,OAAO6B,UAAU3B,QAAS,IAAIyW,MAAOC,UAAY,IAClEia,SAAU,SAAC6N,GAAD,OAAU/xB,EAAS9B,GAAQF,MAAMtG,aAAa5D,SAAS,CAAC,YAAai+B,MAC/EpgB,MAAM,uBAER,gBAACO,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO6B,UAAU1B,MAAQ,QAAU,QACxDO,EAAMV,OAAO6B,UAAU1B,Q,qkBCrBhC,IAAMw+B,GAA8B1oB,aAAH,ohBA4BlB,SAAS2oB,GAAmB/oC,GAA6B,IAAD,MAC7DkK,EAASlK,EAATkK,KACF4M,EAAWV,KACXvL,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMtG,gBAC5Cmb,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,EAAiDiK,aAC/C4pB,IADF,WAAOE,EAAP,KAAmCC,EAAnC,KAIMnpB,EAAW7e,eAAkB,WACjC,IAAIye,GAAY,EAgBhB,OAdK7U,EAAMV,OAAO4B,KAAK1B,QACrBqV,GAAY,EACZ5I,EACE9B,GAAQF,MAAMtG,aAAavD,cAAc,CAAC,OAAQ,qCAIjDJ,EAAMV,OAAO6B,UAAU3B,QAC1BqV,GAAY,EACZ5I,EACE9B,GAAQF,MAAMtG,aAAavD,cAAc,CAAC,YAAa,qCAInDyU,IACP,CAAC5I,EAAUjM,EAAMV,OAAO6B,UAAU3B,MAAOQ,EAAMV,OAAO4B,KAAK1B,QAExDi7B,EAASrkC,eAAkB,4CAAAG,EAAAC,OAAA,mDAC1Bye,IAD0B,4EAAA1e,EAAA,MAKN4nC,EAA2B,CAChDxpB,UAAU,SACJ,SAAA3U,EAAMZ,WAAN,EAAgBpJ,GAAK,CAAEA,GAAE,SAAEgK,EAAMZ,eAAR,EAAE,EAAgBpJ,IAAO,IAD/C,IAEPqoC,WAAYp6B,OAAM,SAACjE,EAAMV,OAAO4B,KAAK1B,YAAnB,EAAC,EAAyBxJ,IAC5CmL,UAAWnB,EAAMV,OAAO6B,UAAU3B,MAClC8f,eAAgBrb,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgBpJ,SAVd,UAKvBsY,EALuB,OAevB,OAFA4G,EAbuB,SAad5G,EAAS6G,WAbK,EAad,EAAempB,qBAE9B,SAAAppB,EAAQE,cAAR,EAAqBjf,KAAI,YAAyB,IAAtBgK,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACjC,OAAQO,GACN,IAAK,YACH,OAAO8L,EAAS9B,GAAQF,MAAMtG,aAAavD,cAAc,CAAC,OAAQR,KACpE,IAAK,aACH,OAAOqM,EAAS9B,GAAQF,MAAMtG,aAAavD,cAAc,CAAC,YAAaR,KACzE,QACE,OAAO,SAtBgB,MAyBzBsV,GAzByB,SAyBzBA,EAAQG,UAAR,EAAgBlE,OAzBS,wBA0B3BlF,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAO,MAAEsV,OAAF,EAAEA,EAAQG,OAAO,GACxB3G,QAAS,WA7Bc,2BAkCzB,MAACwG,GAAD,SAACA,EAAQE,cAAR,EAAqBjE,QAAtB,MAAgC+D,MAAQvR,aAG1CrM,QAAQmI,MAAR,MAAcyV,OAAd,EAAcA,EAAQE,aAFtBjgB,EAAMif,UAAUc,EAAOvR,cAnCI,kDAwC7BsI,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAMA,QACf8O,QAAS,WA3CgB,mEA+C9B,CACDzC,EACAkyB,EACAhpC,EACA6K,EAAMV,OAAO6B,UAAU3B,MAJtB,SAKDQ,EAAMV,OAAO4B,KAAK1B,YALjB,EAKD,EAAyBxJ,GALxB,SAMDgK,EAAMZ,eANL,EAMD,EAAgBpJ,GAChBif,IAGF,OACE,gBAACuK,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAWxS,GACjB,gBAACsgB,EAAA,EAAD,CACEC,eAAa,EACb/N,QAASusB,EAAWtyB,QACpB9Q,MAAO8jB,EAAYhX,MAAMX,OAAOgB,SAElC,gBAACsX,GAAA,EAAOI,MAAR,MAAuB,MAAL7f,GAAA,SAAAA,EAAOZ,WAAP,EAAiBpJ,GAAK,OAAS,OAAjD,kBACA,gBAACypB,GAAA,EAAOsB,QAAR,KACE,gBAAC6c,GAAD,OAEF,gBAACne,GAAA,EAAOM,QAAR,CAAgBloB,MAAO,CAAE2D,eAAgB,aACvC,gBAACuR,EAAA,EAAD,CACEI,QAAS,WACPlB,EAAS9B,GAAQF,MAAMtG,aAAa1G,SACpC9H,EAAM6qB,YAHV,UASA,gBAACjT,EAAA,EAAD,CAAQI,QAASstB,GAAjB,WC9IK,SAAS8D,KAAe,IAAD,QAC9Bv+B,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM7E,WAC5C6G,EAAWV,KAEXizB,GAAiB,SAAAx+B,EAAMZ,eAAN,IAAgBgG,UAAW,EAC5C7F,EAASS,EAAMV,OAAOC,OAAOC,OAAS,EAEtCi/B,EACJz+B,EAAMV,OAAOI,gBAAgBF,QAAUR,EAAgBW,QACnDJ,EAASi/B,EACTj/B,EAASi/B,EACf,OACE,gCACE,gBAACxkB,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,UACNne,QAASO,EAAMV,OAAOM,QAAQH,MAC9BD,OAAO,SAAAQ,EAAMV,OAAOM,QAAQJ,YAArB,IAA4Bmf,aAAc,GACjD/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM7E,QAAQrF,SAAS,CAAC,UAAW2e,QAGxD,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOM,QAAQH,MAAQ,QAAU,QACtDO,EAAMV,OAAOM,QAAQH,OAAS,IAEO,YAAvCO,EAAMV,OAAOI,gBAAgBF,MAC5B,gBAACrC,EAAA,QAAD,KACE,gBAACuc,GAAD,CACEkE,MAAM,aACNne,QAASO,EAAMV,OAAOC,OAAOE,MAC7BD,MAAOQ,EAAMV,OAAOC,OAAOC,MAC3Boa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM7E,QAAQrF,SAAS,CAAC,SAAU2e,QAGvD,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOC,OAAOE,MAAQ,QAAU,QACrDO,EAAMV,OAAOC,OAAOE,OAAS,IAEhC,gBAAC+e,GAAA,EAAD,MAEA,gBAAC0a,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUrZ,MAAX,wBACA,gBAACqZ,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,MAA6B,SAAAn5B,EAAMZ,eAAN,IAAgBgG,UAAW,KAE1D,gBAAC8zB,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUrZ,MAAX,gBACA,gBAACqZ,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,MAA8Bn5B,EAAMV,OAAOC,OAAOC,OAAS,KAE7D,gBAAC05B,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUrZ,MAAX,KACE,gBAAC/hB,EAAA,EAAD,CAAMjG,MAAO,CAAEwV,WAAY,SAA3B,cAEF,gBAAC6rB,GAAA,EAAUI,KAAX,CAAgBH,SAAO,IAAKsF,EAAW,EAAI,IAAM,IAAjD,KACEA,EAAW,GAAgB,EAAZA,EAAgBA,OAMvC,gBAACthC,EAAA,QAAD,KACE,gBAACuc,GAAD,CACEkE,MAAM,kBACNne,QAASO,EAAMV,OAAOC,OAAOE,MAC7BD,MAAOQ,EAAMV,OAAOC,OAAOC,MAC3Boa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM7E,QAAQrF,SAAS,CAAC,SAAU2e,QAGvD,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOC,OAAOE,MAAQ,QAAU,QACrDO,EAAMV,OAAOC,OAAOE,OAAS,IAGhC,gBAAC+e,GAAA,EAAD,MAEA,gBAAC0a,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUrZ,MAAX,wBACA,gBAACqZ,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,MAA6B,SAAAn5B,EAAMZ,eAAN,IAAgBgG,UAAW,KAE1D,gBAAC8zB,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUrZ,MAAX,iBACA,gBAACqZ,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,MAA8Bn5B,EAAMV,OAAOC,OAAOC,OAAS,KAE7D,gBAAC05B,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUrZ,MAAX,KACE,gBAAC/hB,EAAA,EAAD,CAAMjG,MAAO,CAAEwV,WAAY,SAA3B,cAEF,gBAAC6rB,GAAA,EAAUI,KAAX,CAAgBH,SAAO,IAAKsF,EAAW,EAAI,IAAM,IAAjD,KACEA,EAAW,GAAgB,EAAZA,EAAgBA,QAU/C,I,GAAMvkC,GAASC,IAAWC,OAAO,CAC/BkF,OAAQ,CACNkN,KAAM,GAERrM,MAAO,CACLkc,aAAc,KClGH,SAAS6hB,GAAmB/oC,GACzC,IAAQkK,EAAgClK,EAAhCkK,KAAM2gB,EAA0B7qB,EAA1B6qB,QAASrc,EAAiBxO,EAAjBwO,aACjBsI,EAAWV,KACXvL,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM7E,WAC5C0Z,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,ExE4eK,SAAgCoN,GAC/B,IAAMjf,EAAO,SAAOme,IAAmBc,GACvC,OAAOjK,KAA0F2J,GAAqB3e,GwE9elFmmC,GAA1C,WAAOC,EAAP,KAA4BP,EAA5B,KACMh0B,EAASqB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAEvC6K,EAAW7e,eAAkB,WACjC,IAAIye,GAAY,EAMhB,OALK7U,EAAMV,OAAOC,OAAOC,QACvBqV,GAAY,EACZ5I,EAAS9B,GAAQF,MAAM7E,QAAQhF,cAAc,CAAC,SAAU,kCAGlDyU,IACP,CAAC5I,EAAUjM,EAAMV,OAAOC,OAAOC,QAE5Bi7B,EAASrkC,eAAkB,0CAAAG,EAAAC,OAAA,mDAC1Bye,IAD0B,oDAK3B,MAACtR,KAAc3N,IAAoC,OAA9BgK,EAAMV,OAAOC,OAAOC,OAAmB4K,EAAO1C,kBALxC,4EAAAnR,EAAA,MAUNooC,EAAoB,CACzChqB,UAAW,CACTpV,OAAQS,EAAMV,OAAOC,OAAOC,MAC5BoN,MACE5M,EAAMV,OAAOM,QAAQJ,QAEnBQ,EAAMV,OAAOI,gBAAgBF,QAAUR,EAAgBW,QACnD,cACA,kBAERi/B,OACE5+B,EAAMV,OAAOI,gBAAgBF,QAAUR,EAAgBW,QACnD,CACEye,KAAMnf,EAAgB4/B,SACtB7oC,GAAG,GAAIoU,EAAO1C,mBAEhB,CACE0W,KAAMnf,EAAgB6/B,aACtB9oC,GAAI2N,EAAa3N,IAEzB+oC,MACE/+B,EAAMV,OAAOI,gBAAgBF,QAAUR,EAAgBW,QACnD,CACEye,KAAMnf,EAAgB4/B,SACtB7oC,GAAG,GAAIoU,EAAO1C,mBAEhB,CACE0W,KAAMnf,EAAgB6/B,aACtB9oC,GAAI2N,EAAa3N,IAEzB4f,WAAY3R,OAAOmG,EAAO1C,uBAxCD,UAUvB4G,EAVuB,OA6CvB,OAFQ4G,EAAW5G,EAAjB6G,OAER,SAAAD,EAAQ8pB,cAAR,WAAqB5pB,cAArB,EAAkCjf,KAAI,YAAyB,IAAtBgK,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QAC9C,OAAQO,GACN,IAAK,SACH,OAAO8L,EAAS9B,GAAQF,MAAM7E,QAAQhF,cAAc,CAAC,SAAUR,KACjE,IAAK,UACH,OAAOqM,EAAS9B,GAAQF,MAAM7E,QAAQhF,cAAc,CAAC,UAAWR,KAClE,IAAK,SACH,OAAOqM,EAAS9B,GAAQF,MAAM7E,QAAQhF,cAAc,CAAC,SAAUR,KACjE,QACE,OAAO,SAtDgB,MAyDzBsV,GAzDyB,SAyDzBA,EAAQ8pB,cAzDiB,SAyDzB,EAAqB3pB,UAArB,EAA6BlE,OAzDJ,wBA0D3BlF,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAO,MAAEsV,GAAF,SAAEA,EAAQ8pB,kBAAV,EAAE,EAAqB3pB,OAAO,GACrC3G,QAAS,WA7Dc,2BAkEzB,MAACwG,GAAD,SAACA,EAAQ8pB,cAAT,SAAC,EAAqB5pB,cAArB,EAAkCjE,SACrClF,EAAS9B,GAAQF,MAAM7E,QAAQnI,SAC/B9H,EAAMif,aApEqB,kDAuE7BnI,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAMA,QACf8O,QAAS,WA1EgB,mEA8E9B,CACDuG,EADC,MAEDtR,OAFC,EAEDA,EAAc3N,GACdgK,EAAMV,OAAOC,OAAOC,MACpBQ,EAAMV,OAAOM,QAAQJ,MACrBQ,EAAMV,OAAOI,gBAAgBF,MAC7B4K,EAAO1C,kBACPi3B,EACA1yB,EACA9W,IAGF,OACE,gBAACqqB,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAWxS,GACjB,gBAACsgB,EAAA,EAAD,CACEC,eAAa,EACb/N,QAASusB,EAAWtyB,QACpB9Q,MAAO8jB,EAAYhX,MAAMX,OAAOgB,SAElC,gBAACo2B,GAAD,MACA,gBAAC9e,GAAA,EAAOM,QAAR,CAAgBloB,MAAO,CAAE2D,eAAgB,aACvC,gBAACuR,EAAA,EAAD,CACEI,QAAS,WACPlB,EAAS9B,GAAQF,MAAM7E,QAAQnI,SAC/B+iB,MAHJ,UASA,gBAACjT,EAAA,EAAD,CAAQI,QAASstB,GAAjB,WCzIV,I,GA+De3mB,MA/DayB,aAAH,2nCA+DsD,CAC7EvB,WAAY,SAACkB,GAAD,OAAYA,EAAO+pB,WAC/BhrB,cAAe,GACfL,UAAW,CACTtR,KAAM,CAACiR,GAAW,6BAClBhR,MAAO,CAACgR,GAAW,sBACnB/Q,OAAQ,CAAC+Q,GAAW,8BACpB7Q,WAAY,CACV6Q,GAAW,2BACXI,GAAU,uCAEZlR,gBAAiB,CAAC8Q,GAAW,iDCNlBO,MApEayB,aAAH,+uCAoEuE,CAC9FvB,WAAY,SAACkB,GAAD,OAAYA,EAAOgqB,WAC/BjrB,cAAe,KC5DF,SAASkrB,GAAQhqC,GAAkB,IAAD,IACvCiqC,EAAmBjqC,EAAnBiqC,eACFp/B,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMxG,OAC5CwI,EAAWV,KAEX8zB,EAAgB/nB,GAAezY,EAAWygC,WAEhD,OACE,gBAACniC,EAAA,QAAD,KACE,gBAAC6c,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,MAAOQ,EAAMV,OAAO1B,KAAK4B,OAAS,GAClCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,OAAQ2e,QAE3E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO1B,KAAK6B,MAAQ,QAAU,QACnDO,EAAMV,OAAO1B,KAAK6B,OAAS,0CAG9B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAOgD,KAAK7C,MAC3BD,MAAOQ,EAAMV,OAAOgD,KAAK9C,OAAS,GAClCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,OAAQ2e,QAE3E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOgD,KAAK7C,MAAQ,QAAU,QACnDO,EAAMV,OAAOgD,KAAK7C,OAAS,uBAG9B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,QACNne,QAASO,EAAMV,OAAOiD,MAAM9C,MAC5BD,MAAOQ,EAAMV,OAAOiD,MAAM/C,OAAS,GACnCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,QAAS2e,QAE5E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOiD,MAAM9C,MAAQ,QAAU,QACpDO,EAAMV,OAAOiD,MAAM9C,OAAS,YAG/B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,SACNne,QAASO,EAAMV,OAAOkD,OAAO/C,MAC7BD,MAAOQ,EAAMV,OAAOkD,OAAOhD,OAAS,GACpCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,SAAU2e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOkD,OAAO/C,MAAQ,QAAU,QACrDO,EAAMV,OAAOkD,OAAO/C,OAAS,IAGhC,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,sBACNne,QAASO,EAAMV,OAAOoD,WAAWjD,MACjCD,OAAO,SAAAQ,EAAMV,OAAOoD,WAAWlD,YAAxB,IAA+Bmf,aAAc,GACpD1E,aAAa,aACbL,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,aAAckE,OAAOya,SAG9D,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOoD,WAAWjD,MAAQ,QAAU,QACzDO,EAAMV,OAAOoD,WAAWjD,OAAS,+BAGlC2/B,EACA,gBAAC,GAAD,CACE/jB,MAAO,CAAC,UAAW,QAAS,UAC5BI,gBAAiB,SAAC1Y,GAAD,OAAUA,GAC3ByY,WAAY,SAACzY,GAAD,OAAYs8B,GAAyB,UAATt8B,GACxCuY,SAAU,EAAC,SAAAtb,EAAMV,OAAOqD,cAAb,IAAsBnD,QAAS,SAC1Ckc,iBAAkB,gBAAE/Y,EAAF,mBAChBsJ,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,UAAW4C,QAPnC,KAWnB,gBAACy6B,GAAD,CACEC,UAAWr9B,EAAMV,OAAOmD,gBAAgBjD,QAAS,IAAIyW,MAAOC,UAAY,IACxEia,SAAU,SAAC6N,GAAD,OAAU/xB,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,kBAAmBi+B,MAC5EpgB,MAAM,+BAER,gBAACO,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOmD,gBAAgBhD,MAAQ,QAAU,QAC9DO,EAAMV,OAAOmD,gBAAgBhD,OAAS,KAM/C,I,GAAMvF,GAASC,IAAWC,OAAO,CAC/BkF,OAAQ,CACNkN,KAAM,GAERrM,MAAO,CACLkc,aAAc,KClGH,SAASkjB,GAAUpqC,GAAoB,IAAD,IAC3CkK,EAAiDlK,EAAjDkK,KAAMuW,EAA2CzgB,EAA3CygB,WAAYoK,EAA+B7qB,EAA/B6qB,QAAS5L,EAAsBjf,EAAtBif,UAAWkC,EAAWnhB,EAAXmhB,OACxCrK,EAAWV,KACXvL,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMxG,OAE5Cy7B,EAAYM,GAAqB,CACrCprB,UAAU,SAAD,oGAAC,EAAC,SAAClU,GAAD,OAAaoV,uBAAsB,kBAAMlB,UAEpDD,aAAc,SAAChU,EAAOP,GAAR,OACZqM,EAAS9B,GAAQF,MAAMxG,IAAIrD,cAAc,CAACD,EAA0BP,MACtEsO,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAE9DuwB,EAAYQ,GAAqB,CACrCrrB,UAAU,SAAD,oGAAC,EAAC,SAAClU,GAAD,OAAaoV,uBAAsB,kBAAMlB,UACpDD,aAAc,SAAChU,EAAOP,GAAR,OACZqM,EAAS9B,GAAQF,MAAMxG,IAAIrD,cAAc,CAACD,EAA0BP,MACtEsO,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAG9D0N,EAAY8iB,EAAUpzB,SAAWmzB,EAAUnzB,QAE3C2uB,EAASrkC,eAAkB,4BAAAG,EAAAC,OAAA,4DAC3BwJ,EAAMZ,YAAN,EAAgBpJ,GADW,kCAAAO,EAAA,MAEvB2oC,EAAU5qB,OAAO,CACrBte,GAAIiO,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgBpJ,IAC3B4H,KAAMoC,EAAMV,OAAO1B,KAAK4B,MACxB8C,KAAMtC,EAAMV,OAAOgD,KAAK9C,MACxB+C,MAAOvC,EAAMV,OAAOiD,MAAM/C,MAC1BgD,OAAQxC,EAAMV,OAAOkD,OAAOhD,MAC5BkD,WAAY1C,EAAMV,OAAOoD,WAAWlD,MACpCmD,QAAS3C,EAAMV,OAAOqD,QAAQnD,MAC9BiD,gBAAiBzC,EAAMV,OAAOmD,gBAAgBjD,MAC9C8W,OAAQA,EAASrS,OAAOqS,GAAU,KAClCV,WAAYA,EAAa3R,OAAO2R,GAAc,QAZnB,+CAAArf,EAAA,MAevB0oC,EAAU3qB,OAAO,CACrB1W,KAAMoC,EAAMV,OAAO1B,KAAK4B,MACxB8C,KAAMtC,EAAMV,OAAOgD,KAAK9C,MACxB+C,MAAOvC,EAAMV,OAAOiD,MAAM/C,MAC1BgD,OAAQxC,EAAMV,OAAOkD,OAAOhD,MAC5BkD,WAAY1C,EAAMV,OAAOoD,WAAWlD,MACpCmD,QAAS3C,EAAMV,OAAOqD,QAAQnD,MAC9BiD,gBAAiBzC,EAAMV,OAAOmD,gBAAgBjD,MAC9C8W,OAAQA,EAASrS,OAAOqS,GAAU,KAClCV,WAAYA,EAAa3R,OAAO2R,GAAc,QAxBnB,8DA2B9B,CACDqpB,EACArpB,EACA5V,EAAMV,OAAOoD,WAAWlD,MACxBQ,EAAMV,OAAOgD,KAAK9C,MAClBQ,EAAMV,OAAOiD,MAAM/C,MACnBQ,EAAMV,OAAOmD,gBAAgBjD,MAC7BQ,EAAMV,OAAOqD,QAAQnD,MACrBQ,EAAMV,OAAO1B,KAAK4B,MAClBQ,EAAMV,OAAOkD,OAAOhD,MATnB,SAUDQ,EAAMZ,eAVL,EAUD,EAAgBpJ,GAChBkpC,EACA5oB,IAGIkkB,EAAapkC,WAAc,iBAAM,CAAC,OAAM,IACxCspC,EAAgBtpC,eAAkB,WACtCkf,uBAAsB,WACpB0K,IACA/T,EAAS9B,GAAQF,MAAMxG,IAAIxG,cAE5B,CAACgP,EAAU+T,IAEd,OACE,gBAACia,GAAD,CACErtB,MAAO,SAAA5M,EAAMZ,WAAN,EAAgBpJ,GAAK,WAAa,UACzCqJ,KAAMA,EACNm7B,WAAYA,EACZxa,QAAS0f,EACTvF,aAAcM,EACdP,YAAY,OACZpuB,QAASsQ,GAET,gBAAC+iB,GAAD,CAASC,iBAAkBxpB,KCtFjC,I,GAAM+pB,GAAiBpqB,aAAH,uMAcL,SAASqqB,GAAkBzqC,GACxC,IAAQ0qC,EAAkC1qC,EAAlC0qC,aAAc7nB,EAAoB7iB,EAApB6iB,SAAUxY,EAAUrK,EAAVqK,MACxB2V,EAASW,aAAgB6pB,GAAgB,CAC/ChrB,UAAW,CACTkrB,kBAFI1qB,KAKR,OACE,gCACE,gBAAC,KAAK4H,UAAN,gBACA,gBAAC,GAAD,CACEpB,iBAAe,EACflD,KAAK,iBACL4C,OAAW,MAAJlG,OAAA,EAAAA,EAAM2qB,WAAY,GACzBxkB,SAAU,CAAC9b,GAAOqd,OAAOC,SACzBvB,WAAY,SAACxY,GAAD,OAAUA,EAAK/M,MAAL,MAAYwJ,OAAZ,EAAYA,EAAOxJ,KACzCylB,gBAAiB,SAACzZ,GAAD,aAAaA,OAAb,EAAaA,EAASpE,MACvC4d,WAAY,kBAAM,GAClBE,iBAAkB,gBAAEuB,EAAF,mBAAcA,EAAQjF,EAASiF,GAAS,SCjClE,IAAM8iB,GAAoBxqB,aAAH,mGASR,SAASyqB,GAAiB7qC,GAA2B,IAAD,EACzDqK,EAAoBrK,EAApBqK,MAAOwY,EAAa7iB,EAAb6iB,SACf,EAAkC5hB,YAAe,GAAjD,WAAO+hB,EAAP,KAAmBC,EAAnB,KAEQjD,EAASW,aAAgBiqB,IAAzB5qB,KAQR,OANA/e,aAAgB,WAAO,IAAD,EACc,KAA1B,MAAJ+e,GAAA,SAAAA,EAAM8qB,kBAAN,IAAmB9uB,SAAiB3R,GACtCwY,EAAS7C,EAAK8qB,YAAY,MAE3B,OAAC9qB,OAAD,EAACA,EAAM8qB,YAAajoB,EAAUxY,IAG/B,gCACE,gBAAC,KAAKud,UAAN,mBACA,gBAACzE,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAAC,IAAD,CACEpL,QAAS,WACPiL,GAAY,KAGd,gBAAC4B,GAAA,EAAD,CACE9M,KAAK,WACLF,UAAQ,EACRnV,MAAO,CAAE84B,SAAU,KACnBnxB,OAAY,MAALA,OAAA,EAAAA,EAAO5B,OAAQ,+BAb9B,MAkBGuX,GAlBH,SAkBGA,EAAM8qB,kBAlBT,EAkBG,EAAmB9pC,KAAI,SAACmK,GAAD,OACtB,gBAACgY,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPiL,GAAY,GACZJ,EAAS1X,IAEXsM,MAAOtM,EAAW1C,MAAQ,IAC1BmD,IAAG,qBAAuBT,EAAWtK,UCrDlC,SAASqrB,KAAY,IAAD,gDAC3BrhB,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzF,QAC5CyH,EAAWV,KAoBjB,OAlBAnV,aAAgB,WACO,IAAD,EAAhB4J,EAAMZ,WACHY,EAAMV,OAAOuC,WAAWrC,OAC3ByM,EAAS9B,GAAQF,MAAMzF,KAAKzE,SAAS,CAAC,aAAcC,EAAMZ,SAASyC,YAAc,SAG9E7B,EAAMV,OAAOsF,KAAKpF,OAAnB,SAA4BQ,EAAMZ,WAAN,EAAgBpJ,IAC9CiW,EAAS9B,GAAQF,MAAMzF,KAAKzE,SAAS,CAAC,OAAQC,EAAMZ,SAASwF,WAGhE,CACDqH,EACAjM,EAAMV,OAAOuC,WAAWrC,MACxBQ,EAAMV,OAAOsF,KAAKpF,MAClBQ,EAAMZ,SAJL,SAKDY,EAAMZ,eALL,EAKD,EAAgBpJ,KAIhB,gCACE,gBAACgkB,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,OAAO,SAAAQ,EAAMV,OAAO1B,OAAb,WAAmB4B,YAAnB,IAA0Bmf,aAAc,GAC/C/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMzF,KAAKzE,SAAS,CAAC,OAAQ2e,QAG5E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO1B,KAAK6B,MAAQ,QAAU,QACnDO,EAAMV,OAAO1B,KAAK6B,OAAS,KAG9B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,QACNne,QAASO,EAAMV,OAAOwC,MAAMrC,MAC5BD,OAAO,SAAAQ,EAAMV,OAAOwC,QAAb,WAAoBtC,YAApB,IAA2Bmf,aAAc,GAChD/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMzF,KAAKzE,SAAS,CAAC,QAAS2e,QAG7E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOwC,MAAMrC,MAAQ,QAAU,QACpDO,EAAMV,OAAOwC,MAAMrC,OAAS,KAG/B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,QACNne,QAASO,EAAMV,OAAOyC,MAAMtC,MAC5BD,OAAO,SAAAQ,EAAMV,OAAOyC,QAAb,WAAoBvC,YAApB,IAA2Bmf,aAAc,GAChD/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMzF,KAAKzE,SAAS,CAAC,QAAS2e,QAG7E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOyC,MAAMtC,MAAQ,QAAU,QACpDO,EAAMV,OAAOyC,MAAMtC,OAAS,IAG/B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,cACNne,QAASO,EAAMV,OAAOuC,WAAWpC,MACjCD,OAAO,SAAAQ,EAAMV,OAAOuC,aAAb,WAAyBrC,YAAzB,IAAgCmf,aAAc,GACrD1E,aAAa,0BACbC,MAAO,kBAAM,gBAACF,GAAA,EAAUG,MAAX,CAAiBhK,KAAK,QACnCyJ,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMzF,KAAKzE,SAAS,CAAC,aAAc2e,QAGlF,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOuC,WAAWpC,MAAQ,QAAU,QACzDO,EAAMV,OAAOuC,WAAWpC,OAAS,IAGpC,gBAAC+e,GAAA,EAAD,MAEA,gBAACrhB,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC4qC,GAAD,CACExgC,OAAY,MAALQ,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,YAAxB,IAA+Bc,aAAcN,EAAMM,WAAWd,MACrEwY,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAMzF,KAAKvC,cAAczC,OAGjE,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMM,WAAWb,MAAQ,QAAU,QAClDO,EAAMM,WAAWb,OAAS,MAGtB,MAALO,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2CtK,MAA3C,MAAiDgK,GAAjD,SAAiDA,EAAOM,aAAxD,SAAiD,EAAmBd,YAApE,EAAiD,EAA0BxJ,MAC3E,gCACE,gBAAC4pC,GAAD,CACEpgC,MAAOQ,EAAMV,OAAO0C,QAAQxC,MAC5BqgC,aAAc57B,QACP,MAALjE,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2CtK,MAA3C,SAAiDgK,EAAMM,aAAvD,SAAiD,EAAkBd,YAAnE,EAAiD,EAAyBxJ,KAE5EgiB,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAMzF,KAAKzE,SAAS,CAAC,UAAWP,QAExE,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO0C,QAAQvC,MAAQ,QAAU,QACtDO,EAAMV,OAAO0C,QAAQvC,OAAS,OAS7C,I,GAAMvF,GAASC,IAAWC,OAAO,CAC/BkF,OAAQ,CACNkN,KAAM,EACNpX,MAAO,OACPylB,WAAY,IAEd1a,MAAO,CACLkc,aAAc,EACdjnB,MAAO,QAETmpB,aAAc,CACZlC,aAAc,K,qkBC1HX,IAAM6jB,GAAsB3qB,aAAH,iwHAqLjB,SAAS4qB,GAAgBnqC,GAAc,IAAD,oBAC7C4f,EAAanK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO1C,qBAClDD,EAAkBkO,KAElBhS,EAAemS,aAAkCoqB,GAAqB,CAC1EvrB,UAAW,CACTiB,aACA0J,eAAgBtpB,GAAMiO,OAAM,MAACwD,GAAD,SAACA,EAAiB0N,OAAlB,SAAC,EAAuBhQ,WAAxB,SAAC,EAAiCqC,kBAAlC,EAAC,EAA8CxR,KAE7EmgB,YAAa,sBAGf,OAAO,SACFxS,GADL,IAEEA,aACG3N,GAAMA,IAAOiO,OAAM,MAACwD,GAAD,SAACA,EAAiB0N,OAAlB,SAAC,EAAuBhQ,WAAxB,SAAC,EAAiCqC,kBAAlC,EAAC,EAA8CxR,IAAnE,MAEI2N,GAFJ,SAEIA,EAAcwR,OAFlB,SAEI,EAAoBhQ,eAFxB,EAEI,EAA8BxB,aAFlC,MACI8D,GADJ,SACIA,EAAiB0N,OADrB,SACI,EAAuBhQ,eAD3B,EACI,EAAiCqC,cC3L5B,SAAS44B,GAAiBjrC,GAA2B,IAAD,MACzDkK,EAA6ClK,EAA7CkK,KAAM+U,EAAuCjf,EAAvCif,UAAW4L,EAA4B7qB,EAA5B6qB,QAASV,EAAmBnqB,EAAnBmqB,eAC5B5X,EAAoB+D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO1C,qBACzD1H,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzF,QAC5CyH,EAAWV,KAEX6K,EAAqBC,GAAsB,CAC/CjC,UAAU,SAAD,oGAAC,EAAC,SAAClU,GACV+L,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,2BACR8O,QAAS,aAGbzC,EAAS9B,GAAQF,MAAMzF,KAAKnE,SAAQ,IACpC+T,OAEFD,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQF,MAAMzF,KAAKpE,cAAc,CAACD,EAA2BX,MACxE0O,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,YACzEqF,SAAU,CACRssB,eAAgB,CACd,CACErlB,MAAOtF,GACPf,UAAW,CACTiB,WAAYlO,EACZqO,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,MAG1D,CACE8E,MAAOklB,GACPvrB,UAAW,CACTiB,WAAYlO,EACZ4X,uBAOJmb,EAASrkC,eAAkB,gCAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACzB6f,EAAmB9B,OAAO,CAC9Bte,GAAIiO,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgBpJ,IAC3B4H,KAAMoC,EAAMV,OAAO1B,KAAK4B,MACxBiW,UAAW,SAACzV,EAAMV,OAAO0C,QAAQxC,QAArB,EAA4BxJ,GAAYiO,OAAM,SAACjE,EAAMV,OAAO0C,QAAQxC,YAAtB,EAAC,EAA4BxJ,IAA1C,KAC7C+L,MAAO/B,EAAMV,OAAOyC,MAAMvC,MAC1BqC,WAAYy+B,YAAW,SAAAtgC,EAAMV,OAAOuC,iBAAb,IAAyBrC,QAAS,MACzDsC,MAAO9B,EAAMV,OAAOwC,MAAMtC,SAPG,8DAS9B,CACD4W,EACApW,EAAMV,OAAOwC,MAAMtC,MAFlB,SAGDQ,EAAMV,OAAOuC,iBAHZ,EAGD,EAAyBrC,MAHxB,SAIDQ,EAAMV,OAAO0C,QAAQxC,YAJpB,EAID,EAA4BxJ,GAC5BgK,EAAMV,OAAO1B,KAAK4B,MAClBQ,EAAMV,OAAOyC,MAAMvC,MANlB,SAODQ,EAAMZ,eAPL,EAOD,EAAgBpJ,KAGZwkC,EAAapkC,WAAc,iBAAM,CAAC,OAAM,IAE9C,OACE,gBAAC6jC,GAAD,CACErtB,MAAM,qBACNvN,KAAMA,EACNm7B,WAAYA,EACZ1uB,QAASsK,EAAmBtK,QAC5BkU,QAASA,EACTma,aAAcM,EACdP,YAAY,QAEZ,gBAAC,GAAD,O,aC9DS,SAAS1Q,GAAWr0B,GAAqB,IAAD,YAC7CwO,EAAoExO,EAApEwO,aAAc+K,EAAsDvZ,EAAtDuZ,QAAS+a,EAA6Ct0B,EAA7Cs0B,OAAQC,EAAqCv0B,EAArCu0B,QAASn0B,EAA4BJ,EAA5BI,SAAUgrC,EAAkBprC,EAAlBorC,cAC1D,EAA2B90B,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDtC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACf,EAAwC3R,YAAwB,GAAhE,WAAOoqC,EAAP,KAAsBC,EAAtB,KACMC,EAAgBppB,GAAezY,EAAW8hC,YAC1C10B,EAAWV,KAEXq1B,EAAwB,UAAZlyB,EAAsB5G,EAAMX,OAAOmT,QAAUxS,EAAMX,OAAO+Q,UACtE2oB,EAAc7lC,KAAM8M,EAAMX,OAAOC,SAASsB,OAAO,IAAKC,MAE5D,OACE,gBAACxL,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOG,UAAW,CAAEiD,gBAAiBwK,EAAMX,OAAOmT,WAC9D,gBAACnd,EAAA,QAAD,CAAMtF,MAAOqC,GAAOiQ,SAChBuf,EACA,gBAACE,GAAA,EAAD,CACEnR,KAAK,SACL5a,KAAM,GACN7C,MAAO8M,EAAMX,OAAO+Q,UACpB/K,QAAS,kBAAOsc,EAASA,IAAW,QAL5B,MASd,gBAACtsB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO2vB,iBAClB,gBAAC1sB,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,KAAM,EAAI,IACvB,gBAACs0B,GAAA,EAAD,CAAiB3zB,QAASozB,GACvB,MAAC58B,GAAD,SAACA,EAAca,OAAd,EAAoBsC,MAGpB,gBAAC,KAAOga,MAAR,CACEjjB,KAAM,GACNiP,OAAQ,CAAEc,IAAG,MAAEjK,OAAF,EAAEA,EAAca,KAAKsC,OAClCjP,MAAO,CAAEyF,gBAAiByK,EAAQX,QAAQc,SAL5C,gBAAC,KAAO2V,KAAR,CAAahgB,KAAM,GAAI4a,KAAK,cAUlC,gBAACtb,EAAA,QAAD,CAAMtF,MAAOqC,GAAO6vB,gBAClB,gBAACzR,GAAA,EAAD,CACExG,UAAW,kBAAM2uB,GAAe,IAChC5uB,QAAS2uB,EACTjoB,OACE,gBAACuoB,GAAA,EAAD,CAAiB3zB,QAAS,kBAAMszB,GAAe,KAC7C,gBAAC5gB,GAAA,EAAD,CAAOhoB,MAAO,CAACqC,GAAO0S,MAAO,CAAE5R,MAAO6lC,EAAa9lC,SAAU,MAA7D,MACG4I,GADH,SACGA,EAAca,WADjB,EACG,EAAoB5G,QAK3B,gBAAC0a,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPszB,GAAe,GAEf,MAAI98B,KAAca,KAAK1C,OACrBi/B,aAAQ,SAAD,MAASp9B,OAAT,EAASA,EAAca,KAAK1C,SAGvC2W,KAAK,QACL7L,MAAK,MAAEjJ,GAAF,SAAEA,EAAca,WAAhB,EAAE,EAAoB1C,QAE7B,gBAACwW,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPszB,GAAe,GACf,MAAI98B,KAAca,KAAK1C,OACrBi/B,aAAQ,QAAD,MAAQp9B,OAAR,EAAQA,EAAca,KAAKzC,SAGtC0W,KAAK,QACL7L,MAAK,MAAEjJ,GAAF,SAAEA,EAAca,WAAhB,EAAE,EAAoBzC,QAE7B,gBAACuW,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPszB,GAAe,GACXC,GAAiB/8B,GACnBsI,EAAS9B,GAAQF,MAAMtG,aAAatD,QAAQsD,KAGhD8U,KAAK,oCACL7L,MACE,MAACjJ,KAAcxC,UAEXq6B,aAAwC,MAApB,MAAZ73B,OAAA,EAAAA,EAAcxC,YAAa,GAAW,cAD9C,kBAKV,gBAACqd,GAAA,EAAD,CAAS3mB,MAAO,CAAEzC,MAAO,UACzB,gBAACgtB,GAAA,EAAD,CACEvqB,MAAO,CACLqC,GAAO+vB,UACP,CAAE5c,WAAY,OAAQtS,SAAU,GAAIP,YAAa,EAAGQ,MAAO4lC,KAH/D,MAMGj9B,GANH,SAMGA,EAAczC,OANjB,SAMG,EAAoBtD,WANvB,EAMG,EAA0BsV,QAAQ,IAAK,KAAKwqB,iBAKlDnoC,GAKP,IAAM2E,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTjF,MAAO,OACPylB,WAAY,IAEd1Q,QAAS,CACP7U,SAAU,WACV2C,IAAK,EACLiiB,MAAO,EACPhf,cAAe,MACfM,eAAgB,YAElBquB,gBAAiB,CACf3uB,cAAe,MACfX,WAAY,SACZiB,eAAgB,SAChBlB,kBAAmB,GACnBugB,WAAY,GACZwB,aAAc,IAEhB0N,eAAgB,CACdvvB,YAAa,GACbqgB,WAAY,GACZrO,KAAM,EAAI,EACVjS,WAAY,aACZiB,eAAgB,UAElBoR,MAAO,CACL5R,MAAO,SAETivB,UAAW,CACTjvB,MAAO,WCtJI,SAASkvB,GAAS/0B,GAC/B,IAAQkmB,EAAiBlmB,EAAjBkmB,MAAOxjB,EAAU1C,EAAV0C,MACT2U,EAAO,EAAI6O,EAAMlK,OACjBrJ,EAAQmQ,eAEd,OACE,gCACE,gBAACuG,GAAA,EAAD,CAAS3mB,MAAO,CAACqC,GAAOiwB,WACxB,gBAAChtB,EAAA,QAAD,CAAMtF,MAAOsC,IAAWyqB,QAAQ,CAAC1qB,GAAOG,UAAWxC,KAChDwjB,EAAMllB,KAAI,SAAC4M,EAAMqB,GAAP,OACT,gCAEE,gBAACjH,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,QAAQzL,IAAG,aAAeqD,GACvC,gBAAC,KAAK4U,KAAN,CACEoR,WAAY,CACVlwB,GAAO0S,MACP,CACErR,UAAW,SACXC,eAAgB,SAChBR,MAAO8M,EAAMX,OAAOgJ,KACpB9C,YAA0B,IAAdtK,EAAKsnB,KAAiB,YAAStyB,IAG/CF,MAAO,CACLgjB,WAAY,IAEdjO,MAAO7J,EAAKvD,MACZ8qB,iBAAkB,CAACpwB,GAAO4oB,YAAa,CAAE9nB,MAAO8M,EAAMX,OAAOgJ,OAC7D2S,YAAa/f,EAAK6J,MAClBO,QAASpK,EAAKoK,WAGjB/I,IAAMiX,EAAMlK,OAAS,EAAI,KAExB,gBAACqN,GAAA,EAAD,CAASzd,IAAG,qBAAuBqD,EAAKvM,MAAO,CAACqC,GAAOqwB,yBASrE,I,GAAMrwB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CAAEjF,MAAO,OAAQ8F,cAAe,OAC3CivB,QAAS,CACP90B,OAAQ8E,IAAWwgB,cACnBvlB,MAAO,QAETm1B,gBAAiB,CACfn1B,MAAO+E,IAAWwgB,cAClBtlB,OAAQ,QAEVuX,MAAO,CACLjS,UAAW,SACXK,MAAO,SAET8nB,YAAa,CACXnoB,UAAW,SACXK,MAAO,W,qkBC9DJ,IAAMgmC,GAA8BzrB,aAAH,s0CC0DxC,I,MAAMrb,GAASC,IAAWC,OAAO,CAC/BgrB,KAAM,CACJ/vB,OAAQ,GACR4yB,WAAY,EACZ1tB,WAAY,SACZiB,eAAgB,SAChB8B,gBAAiB,cACjBhC,YAAa,QACblG,MAAO,QAET6rC,UAAW,CACT/lC,cAAe,MACfX,WAAY,SACZlF,OAAQ,MAGGyvB,GA5Df,SAAe3vB,GACb,IAAQipB,EAAsCjpB,EAAtCipB,KAAM9C,EAAgCnmB,EAAhCmmB,SAAUtO,EAAsB7X,EAAtB6X,SAAUG,EAAYhY,EAAZgY,QAC1BpF,EAAY0D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAA1CrC,QACFm5B,EAAW,CACfC,UAAW,eACXC,SAAU,iBACVC,gBAAiB,iBACjBC,WAAY,kBACZC,kBAAmB,iBACnBnjB,GAEIR,EAAQ,CACZujB,UAAW,OACXC,SAAU,MACVC,gBAAiB,cACjBC,WAAY,QACZC,kBAAmB,iBACnBnjB,GAEF,OACE,gBAAC5F,GAAA,EAAD,CACEtL,KAAMoO,EAAW,WAAa,OAC9BzjB,MAAO,CACLqC,GAAOkrB,KACP,CAAE9pB,YAAayM,EAAQX,QAAQa,MAC/BqT,OAAWvjB,EAAY,CAAEkE,QAAS,KAClC4gB,OAAOC,SACT9P,SAAUA,EACVG,QAAO,8GAAE,wBAAMA,OAAN,EAAMA,QAEf,gBAAChQ,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+mC,WAClB,gBAAC9jC,EAAA,QAAD,CAAMtF,MAAO,CAAEijB,YAAa,IAC1B,gBAACP,GAAA,EAAD,CACE3c,KAAM0d,EAAW,QAAU4lB,EAC3BlmC,MAAO+M,EAAQX,QAAQa,KACvBpK,KAAM,MAGV,gBAACC,EAAA,EAAD,CAAMjG,MAAO,CAAEmD,MAAO+M,EAAQX,QAAQa,OAAS2V,MC7BxC9J,MAxB2ByB,aAAH,0cA8BT,CAC5BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOssB,kBAC/B5tB,UAAW,CACT6tB,eAAgB,CAACluB,GAAW,mCCTjBO,MAxB0ByB,aAAH,wcA8BT,CAC3BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOwsB,iBAC/B9tB,UAAW,CACT6tB,eAAgB,CAACluB,GAAW,mC,qkBCdjB,SAASouB,GAAiBxsC,GACvC,IAAQwS,EAA8BxS,EAA9BwS,YAAahE,EAAiBxO,EAAjBwO,aACf3D,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtC6B,EAAWV,KACXof,EAAQC,sBAERgX,EAAqBtqB,GAAezY,EAAWi/B,iBAE/C0D,EAAmBK,GAA4B,CACnDztB,UAAW,SAAClU,GACV+L,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAAS,yBAEzDsO,QAAS,SAACzO,GACRwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,YAEzEqF,SAAU,CACRssB,eAAgB,CACd,CACErlB,MAAOtF,GACPf,UAAW,CACTiB,WAAY5V,EAAM0H,kBAClBqO,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,MAG1D,CACE8E,MAAOgmB,GACPrsB,UAAW,CACTiB,WAAY5V,EAAM0H,kBAClB4X,eAAgBrb,OAAO0mB,EAAMG,OAAOxU,cAMxCorB,EAAkBI,GAA2B,CACjD1tB,UAAW,SAAClU,GACV+L,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAAS,yBAEzDsO,QAAS,SAACzO,GACRwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,YAEzEqF,SAAU,CACRssB,eAAgB,CACd,CACErlB,MAAOtF,GACPf,UAAW,CACTiB,WAAY5V,EAAM0H,kBAClBqO,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,MAG1D,CACE8E,MAAOgmB,GACPrsB,UAAW,CACTiB,WAAY5V,EAAM0H,kBAClB4X,eAAgBrb,OAAO0mB,EAAMG,OAAOxU,cAOxCyrB,GAAoB,MAAXp6B,OAAA,EAAAA,EAAakV,QAAO,SAACjf,GAAD,MAAU,SAASoX,KAAKpX,QAAU,GAKrE,OACE,gBAAC,IAAD,CACE0gB,YAAU,EACVzmB,MAAO,CAAEzC,MAAO,QAChBq3B,gCAAgC,EAChC5J,sBAAuB3oB,GAAOe,SAE7B,CACC4D,EAAWmjC,WACXnjC,EAAWojC,UACXpjC,EAAWqjC,SACXrjC,EAAWsjC,kBACXtjC,EAAWujC,iBACXjsC,KAAI,SAACohB,GAAD,OAhBc,SAACA,GAAD,OACtBqqB,GAAsBG,EAAOpqB,SAASJ,GAgBjC8qB,CAAgB9qB,GACf,gBAAC,GAAD,CACE6G,KAAM7G,EACN+D,SAAUymB,EAAOpqB,SAASJ,GAC1BpK,QAAS,kBAENy0B,EAEGG,EAAOpqB,SAASJ,GAChBiqB,EAAiBltB,OACf,CACEmtB,eAAgBlqB,EAChB+H,eAAgBrb,OAAM,MAACN,OAAD,EAACA,EAAc3N,KAEvC,CACEqqC,eAAgB,CACd,CACErlB,MAAO3B,GACP1E,UAAW,CACTiB,WAAY5V,EAAM0H,kBAClBC,YAAa,CAAC4P,MAIpB+qB,OAAQ,SAAO9yB,EAAP,wBAAAjZ,EAAAC,OAAA,yDAAiB2e,KACjBotB,EAAI/yB,EAAOgzB,UAAiB,CAChCxnB,MAAOpD,GACPjD,UAAW,CACThN,YAAa,CAAC4P,GACd3B,WAAY3R,OAAOjE,EAAM0H,sBAIvB+6B,IAAgB,MAADF,GAAA,SAAAA,EAAGp9B,WAAH,WAAa0T,oBAAb,IAA4BC,QAAS,IAAI+D,QAC5D,SAAC9D,GAAD,aAAc,MAAJA,GAAA,SAAAA,EAAME,WAAN,IAAYjjB,OAAZ,MAAmB2N,OAAnB,EAAmBA,EAAc3N,OAG7CwZ,EAAOkzB,WAAW,CAChB1nB,MAAOpD,GACPjD,UAAW,CACThN,YAAa,CAAC4P,GACd3B,WAAY3R,OAAOjE,EAAM0H,oBAE3ByN,KAAK,SACAotB,GADD,IAEFp9B,SAAS,SAAD,MACHo9B,OADG,EACHA,EAAGp9B,UADA,IAEN0T,cAAe,CACbC,MAAO2pB,SAxBT,kBA8BC,CACLttB,KAAK,SACAotB,GADD,IAEFp9B,SAAS,SAAD,MACHo9B,OADG,EACHA,EAAGp9B,UADA,IAEN0T,cAAe,CACbC,MAAO2pB,SApCT,+DA4CZf,EAAgBptB,OACd,CACEmtB,eAAgBlqB,EAChB+H,eAAgBrb,OAAM,MAACN,OAAD,EAACA,EAAc3N,KAEvC,CACEqqC,eAAgB,CACd,CACErlB,MAAO3B,GACP1E,UAAW,CACTiB,WAAY5V,EAAM0H,kBAClBC,YAAa,CAAC4P,MAIpB+qB,OAAQ,SAAO9yB,EAAP,0CAAAjZ,EAAAC,OAAA,uDAAiB2e,EAAjB,EAAiBA,KACjBotB,EAAI/yB,EAAOgzB,UAAiB,CAChCxnB,MAAOpD,GACPjD,UAAW,CACThN,YAAa,CAAC4P,GACd3B,WAAY3R,OAAOjE,EAAM0H,sBAIvBjR,GAAW,MAAD8rC,GAAA,SAAAA,EAAGp9B,WAAH,WAAa0T,oBAAb,IAA4BC,QAAS,GAC/C6pB,IAAiBlsC,EAAQ0N,MAC7B,SAAC4U,GAAD,aAAc,MAAJA,GAAA,SAAAA,EAAME,WAAN,IAAYjjB,OAAZ,MAAmB2N,OAAnB,EAAmBA,EAAc3N,OAGvC4sC,EAAiBD,EAAY,OAExB,MAADJ,GAAA,SAAAA,EAAGp9B,WAAH,WAAa0T,oBAAb,IAA4BC,QAAS,IAAI3iB,KAAI,SAAC4iB,GAAD,eAC3C,MAAJA,GAAA,SAAAA,EAAME,WAAN,IAAYjjB,OAAZ,MAAmB2N,OAAnB,EAAmBA,EAAc3N,IAC7B+iB,EADJ,SAGSA,GAHT,IAIME,KAAK,SAAD,MACCF,OADD,EACCA,EAAME,MADP,MAEC9D,GAFD,SAECA,EAAMusB,sBAFP,EAEC,EAAuB/9B,oBATP,gBAexB,MAAD4+B,GAAA,SAAAA,EAAGp9B,WAAH,WAAa0T,oBAAb,IAA4BC,QAAS,IAfZ,CAgB7B,CACEG,KAAI,MAAE9D,GAAF,SAAEA,EAAMusB,sBAAR,EAAE,EAAuB/9B,gBAG/Bk/B,EAlCA,SAmCDN,GAnCC,IAoCJp9B,SAAS,SAAD,MACHo9B,OADG,EACHA,EAAGp9B,UADA,IAEN0T,cAAe,CACbC,MAAO8pB,OAIbpzB,EAAOkzB,WAAW,CAChB1nB,MAAOpD,GACPjD,UAAW,CACTiB,WAAY3R,OAAOjE,EAAM0H,mBACzBC,YAAa,CAAC4P,IAEhBpC,KAAM0tB,IAjDF,kBAoDC,CACL1tB,KAAM0tB,IArDF,+DA5EZ,QAPqB,SAqJvC,IAAM3oC,GAASC,IAAWC,OAAO,CAC/Ba,QAAS,CACP6oB,SAAU,EACVxQ,gBAAiB,GACjB9X,eAAgB,kB,UCpPL,SAASipB,GAAStvB,GAAe,IAAD,IACrC6O,EAAkB7O,EAAlB6O,KAAMmJ,EAAYhY,EAAZgY,QACRrF,EAAQmQ,eACd,OACE,gBAAChF,GAAA,EAAD,CAAkB9F,QAASA,EAAStV,MAAO,CAAEzC,MAAO,SAClD,gBAACwrB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO4oC,aAClB,gBAACliB,GAAA,EAAKG,QAAN,CAAclpB,MAAOqC,GAAO6oC,oBAC1B,gBAACC,GAAA,EAAD,CACEnrC,MAAO,CACLvC,SAAU,WACV2C,IAAK,EACLiiB,MAAO,IAGRshB,aAAoD,MAAxC,MAAJx3B,GAAA,SAAAA,EAAMR,WAAN,IAAYjC,aAAcyC,EAAK82B,WAAmB,qBAE7D,gBAAC,KAAK9hB,KAAN,CACEpM,MAAK,SAAW5I,EAAKR,KAAKwmB,WAC1BlH,YAAW,SAAE9e,EAAKN,iBAAP,EAAE,EAAiB9F,KAC9B/F,MAAO,CAAEzC,MAAO,QAChBg1B,WAAYlwB,GAAO+oC,iBACnB3Y,iBAAkBpwB,GAAOgpC,uBACzBhpB,MAAO,wBACL,gBAAC/c,EAAA,QAAD,CACEtF,MAAO,CACLzC,MAAO,IACPmF,WAAY,SACZiB,eAAgB,WAChBN,cAAe,QAGjB,gBAAC4C,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAOoJ,SAAU,CAAEtI,MAAO8M,EAAMX,OAAO+Q,aAArD,SACGlU,EAAKV,eADR,EACG,EAAe1F,QAItBzF,KAAM,kBACJ,gBAACgF,EAAA,QAAD,CACEtF,MAAO,CACL2U,KAAM,EACNjS,WAAY,SACZW,cAAe,MACfM,eAAgB,WAGlB,gBAAC+e,GAAA,EAAD,CACEvf,MAAO8M,EAAMX,OAAOgJ,KACpBvS,KAAK,oBACLC,KAAM,YAWxB,I,GAAM3D,GAASC,IAAWC,OAAO,CAC/B+oC,WAAY,GACZF,iBAAkB,CAChBzoC,YAAa,EACbO,SAAU,GACVsS,WAAY,MACZgP,aAAc,GAEhB/Y,SAAU,CAAEvI,SAAU,GAAIktB,WAAY,EAAG5a,WAAY,MAAO1S,UAAW,UACvEuoC,uBAAwB,CACtB1oC,YAAa,GAEfuoC,mBAAoB,CAAEvoC,YAAa,EAAGC,aAAc,EAAGogB,WAAY,EAAGgJ,cAAe,GACrFif,YAAa,CAAEjnB,OAAQ,EAAGQ,aAAc,EAAGC,eAAgB,EAAGxkB,aAAc,EAAG1C,MAAO,UCxDlFguC,GAAwB7tB,aAAH,ulBAoCZ,SAAShD,KAAiB,IAAD,gBAChCvS,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCH,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtCgC,EAAWV,KACXyH,EAAa+Y,2BACXvkB,EAAgBmO,KAAhBnO,YACFmjB,EAAQC,sBACRyY,GAAoB,MAAX77B,OAAA,EAAAA,EAAaxR,MAAO20B,EAAMG,OAAOxU,OAEhD,ENQa,SAAyBtgB,GAAa,IAAD,IAC5C4f,EAAanK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO1C,qBAElD/D,EAAemS,aAAkCkrB,GAA6B,CAClFrsB,UAAW,CACTiB,aACA0J,eAAgBtpB,GAElBmgB,YAAa,sBAGf,OAAO,SACFxS,GADL,IAEEA,aAAY,MAAEA,GAAF,SAAEA,EAAcwR,OAAhB,SAAE,EAAoBhQ,eAAtB,EAAE,EAA8BxB,eMrBH2/B,CACzCr/B,OAAO0mB,EAAMG,OAAOxU,SAAWrS,OAAM,MAACuD,OAAD,EAACA,EAAaxR,KAD7C2N,EAAR,EAAQA,aAAcmI,EAAtB,EAAsBA,QAASoP,EAA/B,EAA+BA,QAIzBihB,EAAYC,0BAElBhmC,aAAgB,kBAAM4c,EAAWqpB,WAAW,CAAEzvB,MAAO,cAAc,CAACoG,IACpE5c,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IAEf,MAA6B7G,aAAsB+uB,IAA5ChtB,EAAP,YAEAhgB,aAAgB,YACd,WAAC,QAAAG,EAAAC,OAAA,mDACqB,QAAhB0H,IAASC,GADd,kCAAA5H,EAAA,MAE4BgtC,QAF5B,gBAGkB,YAHlB,EAEW5sC,QAENW,QAAQmI,MAAM,6DAJnB,4DAAD,KAQC,IAEH,IAAM+jC,EAAcptC,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEZgtC,KAAoC,CACxDE,WAAYF,KAA6BG,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,GACTC,QAAQ,KAPwB,cAE5B5uB,EAF4B,kBAAA3e,EAAA,MAW5B6f,EAAmB,CACvBzB,UAAW,CACT3e,GAAIiO,OAAM,MAACN,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoBxO,IAC/B8Q,MAAM,0BAA2BoO,EAAO4uB,WAdV,uDAkBlCxsC,QAAQC,IAAR,MAlBkC,kEAoBnC,OAACoM,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoBxO,GAAIogB,IAEtB2rB,GAAqB,MAAZp+B,GAAA,SAAAA,EAAcgE,kBAAd,IAA2BkV,QAAO,SAACjf,GAAD,MAAU,SAASoX,KAAKpX,QAAU,GAE7EmmC,EAAoBzsB,GAAezY,EAAWmlC,uBAC9CC,EAA4B3sB,GAAezY,EAAWqlC,sBACtDC,EAAiB7sB,GAAezY,EAAW8hC,YAC3C74B,EAAQmQ,eAEd,OACE,gBAAC0R,GAAA,eAAD,CACE7sB,MAAO,CAAE1E,EAAG,EAAKF,EAAG,KACpBwwB,IAAK,CAAEtwB,EAAG,GAAKF,EAAG,KAClBL,MAAOsC,IAAWuE,aAClByI,OAAQ,CAACW,EAAMX,OAAOmT,QAASxS,EAAMX,OAAOmT,UAE3CxO,GAAW,gBAAC6T,EAAA,EAAD,CAAa3kB,MAAOgF,EAAM8H,MAAMX,OAAOgB,OAAQyX,eAAa,EAAC/N,QAAS/F,IAClF,gBAAC8jB,GAAD,CACE/3B,MAAO,CAAEyF,gBAAiB0C,EAAM8H,MAAMX,OAAOiJ,YAC7CyS,sBAAuB,CAAC3oB,GAAOe,QAAS,CAAEqC,gBAAiB,gBAC3DwvB,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY9gB,EAAS+gB,UAAW,kBAAM3R,QAEpEvX,EACA,gBAAC,GAAD,CACEA,aAAcA,EACd+lB,QAAS2Z,EACT5Z,OAAQ,WACN,MAAI9lB,KAAca,MAChByH,EAAS9B,GAAQF,MAAMzF,KAAKnE,QAAnB,MAA2BsD,OAA3B,EAA2BA,EAAca,QAGtD+7B,cAAeiD,GAEf,gBAAC7B,GAAD,CAAwBh+B,eAAcgE,YAAao6B,IACnD,gBAAC,GAAD,CACElqC,MAAO,CAAExC,OAAQ,IACjBgmB,MAAO,CACL,CACEzO,MAAO,QACPpN,MAAM,MAAiB,MAAZmE,OAAA,EAAAA,EAAcyB,UAAW,GACpC+H,QAAS,WACHxJ,GAAgBogC,GAClB93B,EAAS9B,GAAQF,MAAM7E,QAAQ/E,QAAQsD,MAI7C,CACEiJ,MAAO,UACPpN,MAAM,KAAgB,MAAZmE,GAAA,SAAAA,EAAca,OAAd,WAAoBxC,cAApB,IAA6BpE,OAAQ,MAEjD,CACEgP,MAAO,cACPpN,MAAOxG,KAAK+E,MAAMkG,OAAM,MAACN,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoB3C,aAAa8c,YAAc,QAI9E,gBAACH,GAAA,EAAD,CAAS3mB,MAAOqC,GAAOiwB,WAlCV,KAqCjB,gBAAChtB,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC,KAAK2nB,UAAN,eACA,gBAAC6D,GAAA,EAAD,CAAM/oB,MAAO,CAAEgkB,OAAQ,EAAGf,YAAa,GAAK+F,UAAW,GACpDsjB,EACC,gCACE,gBAAC,KAAKnrB,KAAN,CACEnhB,MAAO,CAAEzC,MAAO,OAAQge,QAAS,GACjCxG,MAAM,wBACNzU,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAWpF,KAAK,UAC5BtL,QAAS,kBACPxJ,EAAesI,EAAS9B,GAAQF,MAAMtG,aAAatD,QAAQsD,IAAiB,QAGhF,gBAAC6a,GAAA,EAAD,CAAS3mB,MAAO,CAAEzC,MAAO,WAEzB,KACHiuC,GAAUY,EACT,gCACE,gBAAC,KAAKjrB,KAAN,CACEnhB,MAAO,CAAEzC,MAAO,OAAQge,QAAS,GACjCxG,MAAM,eACNzU,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAWpF,KAAK,UAC5ByB,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,mBAC7BtL,QAAS,kBACP6F,EAAWoa,SAAS,qBAAsB,CAAE9W,OAAM,MAAE3S,OAAF,EAAEA,EAAc3N,QAGtE,gBAACwoB,GAAA,EAAD,CAAS3mB,MAAO,CAAEzC,MAAO,WAEzB,KACJ,gBAAC,KAAK4jB,KAAN,CACEnhB,MAAO,CAAEzC,MAAO,OAAQge,QAAS,GACjCxG,MAAM,YACNzU,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAWpF,KAAK,eAC5ByB,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,mBAC7BtL,QAAS,kBAAM6F,EAAWoa,SAAS,kBAAmB,CAAE9W,OAAM,MAAE3S,OAAF,EAAEA,EAAc3N,UAKpF,gBAACmH,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC,KAAK2nB,UAAN,gBACA,gBAAC6D,GAAA,EAAD,CAAM/oB,MAAO,CAAEgkB,OAAQ,EAAGlD,iBAAkB,GAAKkI,UAAW,GAA5D,MACGld,GADH,SACGA,EAAcwV,QADjB,SACG,EAAqBL,YADxB,EACG,EAA4B3iB,KAAI,SAAC4iB,GAAD,OAC3B,MAAJA,KAAME,KACJ,gBAAC,GAAD,CACEjV,KAAM+U,EAAKE,KACX9L,QAAS,WACP6F,EAAWoa,SAAS,aAAc,CAAE5pB,KAAMuV,EAAKE,UAGjD,WAMZ,gBAACsmB,GAAD,CACEvf,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,KAClD+T,UAAW,kBAAMkB,uBAAsB,kBAAMrJ,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,QAChFhB,KAAM4K,EAAMxG,IAAIpE,KAChBiX,OAAQrS,OAAM,MAACN,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoBxO,MAGrC,gBAACkoC,GAAD,CACEle,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMtG,aAAatD,SAAQ,KAC3D+T,UAAW,SAAC5P,GACVyH,EAAS9B,GAAQF,MAAMtG,aAAatD,SAAQ,KAC7B,MAAXmH,OAAA,EAAAA,EAAaxR,OAAb,MAAoB2N,OAApB,EAAoBA,EAAc3N,MACpCiW,EAAS9B,GAAQC,OAAO9B,QAAQ9D,EAAKA,OACrC0W,MAGJ7b,KAAM4K,EAAMtG,aAAatE,OAG3B,gBAAC,GAAD,CACE2gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM7E,QAAQ/E,SAAQ,KACtD+T,UAAW,kBAAMnI,EAAS9B,GAAQF,MAAM7E,QAAQ/E,SAAQ,KACxDhB,KAAM4K,EAAM7E,QAAQ/F,KACpBsE,aAAcA,QAAgB5L,IAGhC,gBAAC,GAAD,CACEunB,eAAgBrb,OAAM,MAACN,OAAD,EAACA,EAAc3N,IACrCgqB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMzF,KAAKnE,SAAQ,KACnD+T,UAAW,WACTnI,EAAS9B,GAAQF,MAAMzF,KAAKnE,SAAQ,KAEtChB,KAAM4K,EAAMzF,KAAKnF,QAMzB,I,GAAMnF,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,GAERvR,QAAS,CACP6oB,SAAU,EACVD,cAAe,GACfvpB,kBAAmB,GAErB6vB,QAAS,CACP90B,OAAQ,EACRD,MAAO,QAETgwB,KAAM,CACJvJ,OAAQ,EACRve,gBAAiB,cACjBuyB,UAAW,GACXz0B,YAAa,EACbI,eAAgB,SAChBjB,WAAY,SACZiM,QAAS,QAEX49B,UAAW,CACTppC,MAAO,QACPwL,QAAS,OACThL,eAAgB,SAChBjB,WAAY,SACZQ,SAAU,GACVu2B,WAAY,GACZD,kBAAmB,Y,qkBCzSvB,IAAMgT,GAAoC9uB,aAAH,+3D,cCSxB,SAAS+uB,GAAiBnvC,GACvC,IAAQyX,EAAiDzX,EAAjDyX,MAAOkW,EAA0C3tB,EAA1C2tB,YAAarK,EAA6BtjB,EAA7BsjB,KAAM4kB,EAAuBloC,EAAvBkoC,UAAWlwB,EAAYhY,EAAZgY,QAC7C,EAA2B1B,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDtC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACf,OACE,gBAACkL,GAAA,EAAD,CAAkB9F,QAASA,GACzB,gBAACyT,GAAA,EAAD,CAAM/oB,MAAOqC,GAAOgX,aAAc2P,UAAW,GAC3C,gBAACD,GAAA,EAAKG,QAAN,CAAclpB,MAAOqC,GAAOqqC,qBAC1B,gBAAC,KAAKvrB,KAAN,CACQpM,QAAOkW,cACbjrB,MAAO,CAAEzC,MAAO,QAChBg1B,WAAYlwB,GAAOsqC,kBACnBla,iBAAkBpwB,GAAOuqC,wBACzBtsC,KAAM,kBACJ,gBAAC,KAAO0lB,KAAR,CACEhgB,KAAM,GACA4a,OACNzd,MAAO8M,EAAMG,KAAOH,EAAMX,OAAOgJ,KAAOpI,EAAQI,OAAOD,MACvDrQ,MAAOqC,GAAOipC,gBAIpB,gBAACH,GAAA,EAAD,CAASnrC,MAAOqC,GAAOmjC,WACpBqH,aAAgC,IAAZrH,EAAkB,CAAEsH,WAAW,QAQhE,IAAMzqC,GAASC,IAAWC,OAAO,CAC/B+oC,WAAY,CACV7lC,gBAAiB,cACjB/B,UAAW,SACXod,iBAAkB,IAEpB6rB,kBAAmB,CACjBhqC,YAAa,EACbO,SAAU,GACVsS,WAAY,MACZgP,aAAc,GAEhBooB,wBAAyB,CACvBjqC,YAAa,GAEf+pC,oBAAqB,CAAE/pC,YAAa,EAAGqgB,WAAY,EAAGpgB,aAAc,EAAGopB,cAAe,GACtF3S,aAAc,CACZ2K,OAAQ,EACRvI,gBAAiB,EACjBgJ,eAAgB,EAChBxkB,aAAc,EACd1C,MAAO,QAETioC,UAAW,CACT/nC,SAAU,WACV2C,IAAK,EACLiiB,MAAO,KC7DI,SAAS0qB,GAAuBzvC,GAC7C,IAAQ+b,EAAiB/b,EAAjB+b,aACF8B,EAAa+Y,2BACnB,OACE,gBAACuY,GAAD,CACE13B,MAAM,WACNkW,YAAa5R,EAAatR,QAC1By9B,UAAWnsB,EAAa4pB,UACxBriB,KAAK,WACLtL,QAAS,kBACP6F,EAAWoa,SAAS,WAAY,CAC9B4P,OAAQ,aACR6H,SAAS,EACT/Z,OAAQ,CAAEtnB,KAAO0N,EAAa4zB,SAAkBthC,WCZ3C,SAASuhC,GAAyB5vC,GAC/C,IAAQ+b,EAAiB/b,EAAjB+b,aACF8B,EAAa+Y,2BACnB,OACE,gBAACuY,GAAD,CACE13B,MAAK,SAAYsE,EAAa4zB,SAAkB9a,WAA3C,iBACLlH,YAAa5R,EAAatR,QAC1By9B,UAAWnsB,EAAa4pB,UACxBriB,KAAK,mBACLtL,QAAS,kBACP6F,EAAWoa,SAAS,WAAY,CAC9B4P,OAAQ,aACR6H,SAAS,EACT/Z,OAAQ,CAAEtnB,KAAM0N,EAAa4zB,eCdvC,SAASE,GAAQruC,GACf,OAAQA,GACN,IAAK,OACH,MAAO,OACT,IAAK,WACH,MAAO,cACT,IAAK,UACH,MAAO,mBACT,IAAK,aACH,MAAO,oBACT,QACE,MAAO,QAIE,SAASsuC,GAAkB9vC,GAAuB,IAAD,EACtD+b,EAAiB/b,EAAjB+b,aAER,OACE,gBAACozB,GAAD,CACE13B,MAAOs4B,sBAAYh0B,EAAa4zB,SAAyBnuC,QAAU,IACnEmsB,YAAa5R,EAAatR,QAC1By9B,UAAWnsB,EAAa4pB,UACxBriB,KAAMusB,GAAO,OAAE,EAAA9zB,EAAa4zB,eAAf,EAAC,EAAwCnuC,QACtDwW,QAAS,kBAAM,QCxBN,SAASg4B,GAA0BhwC,GAChD,IAAQ+b,EAAiB/b,EAAjB+b,aACF8B,EAAa+Y,2BACnB,OACE,gBAACuY,GAAD,CACE13B,MACoC,6BAAlCsE,EAAak0B,iBACT,0BACA,2BAENtiB,YAAa5R,EAAatR,QAC1By9B,UAAWnsB,EAAa4pB,UACxBriB,KAAwC,6BAAlCvH,EAAak0B,iBAAkD,MAAQ,YAC7Ej4B,QAAS,uBAC2B,6BAAlC+D,EAAak0B,iBACTpyB,EAAWoa,SAAS,sBAAuB,CACzC3pB,IAAMyN,EAAa4zB,SAAiB9uC,GACpCspB,eAAc,SAAGpO,EAAa4zB,SAAiBtgC,WAAjC,EAAE,EAAqCxO,KAEvDgd,EAAWoa,SAAS,WAAY,CAC9B4P,OAAQ,UACRlS,OAAQ,CACNkS,OAAQ,sBCvBT,SAASqI,GAAuBlwC,GAC7C,IAAQ+b,EAAiB/b,EAAjB+b,aAER,OACE,gBAACozB,GAAD,CACE13B,MACoC,uBAAlCsE,EAAak0B,iBACT,qBACA,qBAENtiB,YAAa5R,EAAatR,QAC1By9B,UAAWnsB,EAAa4pB,UACxBriB,KAAwC,uBAAlCvH,EAAak0B,iBAA4C,YAAc,aAC7Ej4B,QAAS,kBAAM,Q,qkBCsBN,SAASoF,KAAiB,IAAD,EAChCvS,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C,EP+Ca,WAA6B,IAAD,IACnCwL,EAAanK,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAO1C,qBAElDsT,EAAQlF,aAAkCuuB,GAAmC,CACjF1vB,UAAW,CACTiB,cAEFqF,aAAc,MAGhB,OAAO,SACFD,GADL,IAEE1Q,cAAa,MAAE0Q,GAAF,SAAEA,EAAO7F,OAAT,SAAE,EAAahQ,eAAf,EAAE,EAAuBqC,YAAY8C,gBO3DRg7B,GAApCh7B,EAAR,EAAQA,cAAewB,EAAvB,EAAuBA,QAASoP,EAAhC,EAAgCA,QAC1BihB,EAAYC,0BAUlB,OARAhmC,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IAKb,gCACGpP,GAAW,gBAAC6T,EAAA,EAAD,CAAa3kB,MAAOgF,EAAM8H,MAAMX,OAAOgB,OAAQyX,eAAa,EAAC/N,QAAS/F,IACpE,MAAbxB,GAAA,SAAAA,EAAewO,QAAf,EAAsB3H,OAAS,KAC9B,gBAAChU,EAAA,QAAD,CAAMtF,MAAOqC,GAAOioB,OAClB,gBAACF,GAAD,CAAWrV,MAAM,mBAAmBsV,SAAS,qCAGjD,gBAAC,IAAD,CACE/M,KAAI,MAAE7K,OAAF,EAAEA,EAAewO,MACrBuT,WAAY,EACZx0B,MAAO,CACL2U,KAAM,GAERwgB,WAAY,YAAqB,IAAD,EAAXjU,EAAW,EAAjBhW,KACb,aAAQgW,GAAR,SAAQA,EAAME,WAAd,EAAQ,EAAYmsB,kBAClB,IAAK,gBACH,OAAO,gBAACL,GAAD,CAA0BhkC,IAAKgY,EAAKE,KAAKjjB,GAAIkb,aAAc6H,EAAKE,OACzE,IAAK,kBACH,OAAO,gBAAC,GAAD,CAAgBlY,IAAKgY,EAAKE,KAAKjjB,GAAIkb,aAAc6H,EAAKE,OAC/D,IAAK,kBACH,OAAO,gBAACgsB,GAAD,CAAmBlkC,IAAKgY,EAAKE,KAAKjjB,GAAIkb,aAAc6H,EAAKE,OAClE,IAAK,2BACL,IAAK,2BACH,OAAO,gBAACksB,GAAD,CAA2BpkC,IAAKgY,EAAKE,KAAKjjB,GAAIkb,aAAc6H,EAAKE,OAC1E,IAAK,qBACL,IAAK,qBACH,OAAO,gBAACosB,GAAD,CAAwBtkC,IAAKgY,EAAKE,KAAKjjB,GAAIkb,aAAc6H,EAAKE,OACvE,QACE,OAAO,UAQrB,IAAM/e,GAASC,IAAWC,OAAO,CAC/Ba,QAAS,CACP6oB,SAAU,EACVD,cAAe,GACftpB,WAAY,SACZD,kBAAmB,GAErB6vB,QAAS,CACP90B,OAAQ,EACRD,MAAO,QAET+sB,MAAM,SACDhoB,IAAWiT,oBADX,IAEH0W,SAAU,EACVtX,KAAM,EACNjR,UAAW,SACXhB,WAAY,SACZiB,eAAgB,a,kDClGL,SAAS+pC,GAAWpwC,GACjC,IAAQyI,EAAoCzI,EAApCyI,KAAMkJ,EAA8B3R,EAA9B2R,MAAqB+S,GAAS1kB,EAAvB2X,OAArB,KAA4C3X,EAA5C,KACMqwC,EAAO,MAAG5nC,OAAH,EAAGA,EACZ6nC,MAAM,OACPtvC,KAAI,SAACuvC,GAAD,OAAOzoB,KAAMyoB,MACjBvP,KAAK,IAER,OAAQrvB,EAGN,gBAAC,KAAOga,MAAR,MACEhU,OAAQ,CAAEc,IAAK9G,GACfjP,MAAO,CAAE0D,UAAW,SAAUod,iBAAkB,IAChD9a,KAAM,IACFgc,IANN,gBAAC,KAAO/b,KAAR,MAAa8f,MAAO4nB,GAAa3rB,ICHtB,SAAS8rB,GAAUxwC,GAAgB,IAAD,IACvCywC,EAA6CzwC,EAA7CywC,MAAOjiC,EAAsCxO,EAAtCwO,aAAckiC,EAAwB1wC,EAAxB0wC,WAAY14B,EAAYhY,EAAZgY,QACnCrF,EAAQmQ,eACRQ,GAGJ,SAA6B,kBAA5B,SAAAmtB,EAAM7G,YAAN,IAAa+G,aAAkCF,EAAM7G,YAAtD,IAA+E/oC,OAA/E,MACA2N,OADA,EACAA,EAAc3N,IACV,aACA,YAEN,OACE,gBAACid,GAAA,EAAD,CAAkB9F,QAASA,GACzB,gBAACyT,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO0rC,OAClB,gBAAChlB,GAAA,EAAKG,QAAN,CAAclpB,MAAOqC,GAAO6rC,cAC1B,gBAAC/C,GAAA,EAAD,CACEnrC,MAAO,CACLvC,SAAU,WACV2C,IAAK,EACLiiB,MAAO,IAGRshB,aAA0B,KAAd,MAALoK,OAAA,EAAAA,EAAO9K,WAAkB,qBAEnC,gBAAC,KAAK9hB,KAAN,CACEpM,MAAK,IAAMg5B,EAAM5vC,GAAZ,IAAkB4vC,EAAMh5B,MAC7B/U,MAAO,CAAEzC,MAAO,QAChBg1B,WAAYlwB,GAAO8rC,WACnB1b,iBAAkBpwB,GAAO+rC,iBACzB9tC,KAAM,8BACJ,gBAACgF,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,IAAKmF,WAAY,SAAUW,cAAe,QAC7D2qC,EACC,gBAACN,GAAD,CACE1tC,MAAO,CAAE0D,UAAW,SAAUod,iBAAkB,IAChD9a,KAAM,GACND,MACE,MAACgoC,GAAD,SAACA,EAAO7G,QAAR,WAAgCv6B,WAAhC,IAAsC5G,QACtC,MAACgoC,OAAD,EAACA,EAAO7G,OAAmBnhC,MAC3B,GAEFkJ,OACE,gBAAC8+B,OAAD,EAACA,EAAO7G,OAAuBv6B,WAA/B,IAAqCsC,SACrC,MAAC8+B,OAAD,EAACA,EAAO7G,OAAmBt+B,aAC3B1I,IAIJ,gBAACwiB,GAAA,EAAD,CACEvf,MAEE,eAAgB4qC,EAAM7G,OAGK,iBAA3B6G,EAAM7G,MAAM+G,aACZ,SAACF,EAAM7G,YAAP,IAA+B/oC,OAA/B,MAAsC2N,OAAtC,EAAsCA,EAAc3N,IAChD,U5GtEE,U4GyER4H,KAAM6a,EACN5a,KAAM,GACNhG,MAAO,CAAE8gB,iBAAkB,MAG/B,gBAAC7a,EAAA,EAAD,CACEjG,MAAO,CACLkD,SAAU,GACVsS,WAAY,MACZ1S,UAAW,SACXK,MAAO8M,EAAMX,OAAO+Q,YALxB,IAQI0tB,EAAMrmC,eAW1B,IAAMrF,GAASC,IAAWC,OAAO,CAC/B+oC,WAAY,GACZ6C,WAAY,CACVxrC,YAAa,EACbO,SAAU,GACVsS,WAAY,MACZgP,aAAc,GAEhB4pB,iBAAkB,CAChBzrC,YAAa,GAEfurC,aAAc,CAAEvrC,YAAa,EAAGC,aAAc,EAAGogB,WAAY,EAAGgJ,cAAe,GAC/E+hB,MAAO,CACLjtB,iBAAkB,EAClB2D,eAAgBniB,IAAWwgB,cAC3B7iB,aAAc,EACd1C,MAAO,UCtGI,SAAS8wC,KAAsB,IAAD,MACrClmC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCH,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtCgC,EAAWV,KACT/D,EAAgBmO,KAAhBnO,YACFmjB,EAAQC,sBACd,EAA2CuV,GACzCl8B,OAAM,MAAC0mB,GAAD,SAACA,EAAOG,aAAR,EAAC,EAAexU,SAAWrS,OAAM,MAACuD,OAAD,EAACA,EAAaxR,KAD/C2N,EAAR,EAAQA,aAAcmI,EAAtB,EAAsBA,QAASoP,EAA/B,EAA+BA,QAIzBihB,EAAYC,0BACZppB,EAAa+Y,2BAgBnB,OAfA31B,aAAgB,WAAO,IAAD,EACpB,GAAgB,MAAZuN,GAAA,SAAAA,EAAca,OAAd,EAAoB5G,OAAoB,MAAZ+F,OAAA,EAAAA,EAAc3N,OAAd,MAAqBwR,OAArB,EAAqBA,EAAaxR,IAAI,CAAC,IAAD,EACpE,WAAoB2N,EAAaa,WAAjC,EAAoB,EAAmB5G,KAAK6nC,MAAM,MAA3CU,EAAP,YACAnzB,EAAWqpB,WAAW,CAAEzvB,MAAUu5B,EAAL,yBAE7BnzB,EAAWqpB,WAAW,CAAEzvB,MAAO,wBAEhC,OAACpF,OAAD,EAACA,EAAaxR,GAAd,MAAkB2N,OAAlB,EAAkBA,EAAc3N,GAAhC,MAAoC2N,GAApC,SAAoCA,EAAca,WAAlD,EAAoC,EAAoB5G,KAAMoV,IAEjE5c,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IAGb,gCACGpP,GAAW,gBAAC6T,EAAA,EAAD,CAAa3kB,MAAOgF,EAAM8H,MAAMX,OAAOgB,OAAQyX,eAAa,EAAC/N,QAAS/F,IAElF,gBAAC,IAAD,CACEjU,MAAOqC,GAAOksC,SACdjxB,MAAkB,MAAZxR,GAAA,SAAAA,EAAc0iC,aAAd,IAAsBvtB,QAAS,GACrC8T,YAAY,EACZC,UAAW3R,EACX8R,WAAY,gBAAGjqB,EAAH,EAAGA,KAAH,OACV,gBAAC4iC,GAAD,CACEx4B,QAAS,kBAAM6F,EAAWoa,SAAS,cAAe,CAAEwY,MAAO7iC,EAAKkW,QAChE2sB,MAAK,MAAE7iC,OAAF,EAAEA,EAAMkW,KACPtV,oBAKZ,gBAAC,GAAD,CACEqc,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM7E,QAAQ/E,SAAQ,KACtD+T,UAAW,kBAAMnI,EAAS9B,GAAQF,MAAM7E,QAAQ/E,SAAQ,KACxDhB,KAAM4K,EAAM7E,QAAQ/F,KACpBsE,aAAcA,QAAgB5L,KAMtC,IAAMmC,GAASC,IAAWC,OAAO,CAC/BgsC,SAAU,CAAE55B,KAAM,EAAGqO,WAAY,KC9CpB,SAASyrB,GAAQnxC,GAAuB,IAAD,cAC5CsO,EAAuEtO,EAAvEsO,IAAK8B,EAAkEpQ,EAAlEoQ,cAAe5B,EAAmDxO,EAAnDwO,aAAc4iC,EAAqCpxC,EAArCoxC,wBAAyBp5B,EAAYhY,EAAZgY,QACnE,EAAoC/W,YAAe,GAAnD,WAAOowC,EAAP,KAAoBC,EAApB,KACQt+B,EAAWsD,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,OAAOtC,MAAMX,UAAtDgB,OACF8D,EAAWV,KACT/D,EAAgBmO,KAAhBnO,YAEF03B,EAAYM,GAAqB,CACrCprB,UAAW,WACTqyB,GAAa,GACU,MAAvBF,OACAt6B,EACE9B,GAAQG,cAAclB,aAAa,CAAExJ,QAAS,iBAAkB8O,QAAS,cAG7ER,QAAS,SAAC7K,GACR/L,QAAQC,IAAI8L,GACZojC,GAAa,GACbx6B,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAAS,gBAAiB8O,QAAS,cAGrF,EAAwDtY,YAAwB,GAAhF,WAAOswC,EAAP,KAA8BC,EAA9B,KACAvwC,aAAgB,YACd,WAAC,QAAAG,EAAAC,OAAA,mDACqB,QAAhB0H,IAASC,GADd,kCAAA5H,EAAA,MAE4BgtC,QAF5B,gBAGkB,YAHlB,EAEW5sC,QAENW,QAAQmI,MAAM,6DAJnB,4DAAD,KAQC,IAEH,IAAM+jC,EAAcptC,eAAkB,0BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEZgtC,KAAoC,CACxDE,WAAYF,KAA6BG,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,GACTC,QAAQ,KAPwB,cAE5B5uB,EAF4B,OAUlCuxB,GAAa,GAVqB,WAAAlwC,EAAA,MAY5B2oC,EAAU5qB,OAAO,CACrBte,GAAIiO,OAAM,MAACR,OAAD,EAACA,EAAKzN,IAChB4wC,YAAY,0BAA2B1xB,EAAO4uB,UAdd,uDAiBlCxsC,QAAQC,IAAR,MAjBkC,kEAmBnC,OAACkM,OAAD,EAACA,EAAKzN,GAAIkpC,IAEP2H,EAAwBvvB,GAAezY,EAAWioC,mBAClD9zB,EAAa+Y,2BACbgb,GACO,MAAXv/B,GAAA,SAAAA,EAAahD,WAAb,IAAmBxO,OAAnB,SAA0ByN,EAAIe,WAA9B,EAA0B,EAAUxO,MAAU,MAAHyN,GAAA,SAAAA,EAAK0B,eAAL,IAAenP,KAAM6wC,EAE5D/+B,EAAQmQ,eACd,OACE,gBAAC2I,GAAA,EAAD,CAAMzT,QAASA,EAAStV,MAAO,CAAEykB,eAAgB,KAC/C,gBAACqD,EAAA,EAAD,CAAa9N,QAAS20B,EAAa5mB,eAAa,EAAC5kB,MAAOmN,IACxD,gBAACyY,GAAA,EAAKf,MAAN,CAAYjT,MAAOnJ,EAAI7F,MAAW6F,EAAInB,KAAnB,IAA2BmB,EAAIlB,QAClD,gBAACqe,GAAA,EAAKG,QAAN,KACE,gBAAC5jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACkC,EAAA,QAAD,CAAMtF,MAAOqC,GAAO/B,MAClB,gBAAC,KAAO0lB,KAAR,CACEpF,KAAK,YACL5a,KAAM,GACNhG,MAAO,CAAEyF,gBAAiBwK,EAAMG,KAAOH,EAAMX,OAAOmT,QAAUxS,EAAMX,OAAOC,YAG/E,gBAACjK,EAAA,QAAD,CAAMtF,MAAOqC,GAAOggB,OAClB,gBAAC/c,EAAA,QAAD,CAAMtF,MAAOqC,GAAO8sC,SAClB,gBAAClpC,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO0jB,MAAO,CAAE5iB,MAAO8M,EAAMX,OAAO+Q,aAAlD,aACA,gBAACpa,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO4oB,YAAa,CAAE9nB,MAAO8M,EAAMX,OAAO+Q,aACrDzU,EAAInB,KADP,IACcmB,EAAIlB,QAGpB,gBAACpF,EAAA,QAAD,CAAMtF,MAAOqC,GAAO8sC,SAClB,gBAAClpC,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO0jB,MAAO,CAAE5iB,MAAO8M,EAAMX,OAAO+Q,aAAlD,oBAGA,gBAACpa,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO4oB,YAAa,CAAE9nB,MAAO8M,EAAMX,OAAO+Q,aACrDzU,EAAIf,aAGT,gBAACvF,EAAA,QAAD,CAAMtF,MAAOqC,GAAO8sC,SAClB,gBAAClpC,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO0jB,MAAO,CAAE5iB,MAAO8M,EAAMX,OAAO+Q,aAAlD,sBAGA,gBAACpa,EAAA,EAAD,CAAMjG,MAAO,CAACqC,GAAO4oB,YAAa,CAAE9nB,MAAO8M,EAAMX,OAAO+Q,aACrDzU,EAAIhB,gBAAkB+4B,aAA6B,IAAtB/3B,EAAIhB,gBAAwB,cAAgB,UAKlF,gBAACtF,EAAA,QAAD,CAAMtF,MAAO,CAAEqD,cAAe,MAAOmY,UAAW,MAElD,gBAACuN,GAAA,EAAKb,QAAN,CAAcloB,MAAO,CAAE2D,eAAgB,YAAcnD,cAAc,YACjE,gBAACigB,GAAA,EAAD,CACExG,UAAW,kBAAM60B,GAAuB,IACxC90B,QAAS60B,EACT7uC,MAAO,CAAEwb,UAAW,IACpBkF,OACE,gBAACC,GAAA,EAAD,CACEtL,KAAK,WACLuL,KAAK,SACL5gB,MAAO,CAAExC,OAAQ,GAAIkF,WAAY,UACjC4S,QAAS,WACH45B,EACFJ,GAAuB,GAClB,MAAIljC,KAAKmjC,aACd36B,EAAS9B,GAAQK,YAAYnK,QAAQoD,EAAImjC,gBAI3CnjC,EAAImjC,YAAkC,eAApB,oBAIxB,gBAACtuB,GAAA,EAAKU,KAAN,CACEpM,MAAM,aACN6L,KAAK,SACL5gB,MAAO,CAAEyb,gBAAiB,GAC1BnG,QAAS,WACPq2B,IACAmD,GAAuB,MAIzBljC,EAAImjC,YACJ,gCACE,gBAACpoB,GAAA,EAAD,MACA,gBAAClG,GAAA,EAAKU,KAAN,CACEpM,MAAM,OACN6L,KAAK,MACL5gB,MAAO,CAAEyb,gBAAiB,GAC1BnG,QAAS,WACPw5B,GAAuB,GACnBljC,EAAImjC,aACN36B,EAAS9B,GAAQK,YAAYnK,QAAQoD,EAAImjC,kBAV/B,MAkBtB,gBAACpuB,GAAA,EAAD,CACEtL,KAAK,WACLrV,MAAO,CACLqC,GAAOkrB,KACP,CACE9nB,gBAA8B,MAAbiI,GAAA,SAAAA,EAAe0hC,cAAf,WAA4BziC,OAA5B,EAAkC5G,K9GhLrC,UACF,Y8GkLhBuP,QAAS,WACP6F,EAAWoa,SAAS,sBAAuB,CACzC3pB,MACA6b,eAAgBrb,OAAM,MAACN,OAAD,EAACA,EAAc3N,QAIzC,gBAACmH,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+mC,WAClB,gBAAC9jC,EAAA,QAAD,CAAMtF,MAAO,CAAEijB,YAAa,IAC1B,gBAACP,GAAA,EAAD,CAAwB3c,KAAK,oBAAoB5C,MAAM,UAAU6C,KAAM,MAEzE,gBAACC,EAAA,EAAD,CAAMjG,MAAO,CAAEmD,MAAO,WACN,MAAbuK,GAAA,SAAAA,EAAe0hC,cAAf,WAA4BziC,WAA5B,IAAkC5G,OAAQ,qBASzD,IAAM1D,GAASC,IAAWC,OAAO,CAC/Ba,QAAS,CACPC,cAAe,MACfX,WAAY,UAEd6qB,KAAM,CACJ/vB,OAAQ,GACR4yB,WAAY,EACZ1tB,WAAY,SACZiB,eAAgB,UAElBylC,UAAW,CACT/lC,cAAe,MACfX,WAAY,SACZlF,OAAQ,GACRmG,eAAgB,gBAChBgR,KAAM,GAERrU,KAAM,CACJqU,KAAM,KAER0N,MAAO,CACL1N,KAAM,KAERw6B,QAAS,CACP9rC,cAAe,MACfX,WAAY,UAEdqjB,MAAO,CACLvQ,WAAY,MACZjY,MAAO,IACPuF,UAAW,OACXmgB,YAAa,GACbwB,eAAgB,GAElBwG,YAAa,CACXzV,WAAY,SACZyW,SAAU,KChOC,SAASvR,KAAiB,IAAD,QAChCtI,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtCgC,EAAWV,KACT/D,EAAgBmO,KAAhBnO,YACFwL,EAAa+Y,2BAEbpB,EAAQC,sBAEd,EAA2CuV,GACzCl8B,OAAM,MAAC0mB,GAAD,SAACA,EAAOG,aAAR,EAAC,EAAexU,SAAWrS,OAAM,MAACuD,OAAD,EAACA,EAAaxR,KAD/C2N,EAAR,EAAQA,aAAcmI,EAAtB,EAAsBA,QAASoP,EAA/B,EAA+BA,QAIzBihB,EAAYC,0BAElBhmC,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IAEf9kB,aAAgB,WAAO,IAAD,EACpB,GAAgB,MAAZuN,GAAA,SAAAA,EAAca,OAAd,EAAoB5G,OAAoB,MAAZ+F,OAAA,EAAAA,EAAc3N,OAAd,MAAqBwR,OAArB,EAAqBA,EAAaxR,IAAI,CAAC,IAAD,EACpE,WAAoB2N,EAAaa,WAAjC,EAAoB,EAAmB5G,KAAK6nC,MAAM,MAA3CU,EAAP,YACAnzB,EAAWqpB,WAAW,CAAEzvB,MAAUu5B,EAAL,sBAE7BnzB,EAAWqpB,WAAW,CAAEzvB,MAAO,qBAEhC,OAACpF,OAAD,EAACA,EAAaxR,GAAd,MAAkB2N,OAAlB,EAAkBA,EAAc3N,GAAhC,MAAoC2N,GAApC,SAAoCA,EAAca,WAAlD,EAAoC,EAAoB5G,KAAMoV,IACjE,IAAM0tB,EAAgBppB,GAAezY,EAAW8hC,YAChD,OACE,gCACE,gBAAC,IAAD,CACExrB,MAAkB,MAAZxR,GAAA,SAAAA,EAAca,WAAd,IAAoBI,OAAQ,GAClCynB,WAAY,EACZx0B,MAAO,CAAE2U,KAAM,GACfogB,WAAY9gB,EACZ+W,sBAAuB,CAAEzP,QAAS,IAClC4Z,WAAY,kBAAGjqB,EAAH,EAAGA,KAAH,OACV,gBAACujC,GAAD,CACQ3iC,eACN4iC,wBAAyBrrB,EACzBzX,IAAKV,EACLwC,cAAa,MAAE5B,GAAF,SAAEA,EAAcuzB,qBAAhB,EAAE,EAA8B/yB,MAC3C,SAAC+iC,GAAD,aAAU,SAAAA,EAAKzjC,UAAL,IAAUzN,MAAO+M,EAAK/M,IAAMkxC,EAAKC,QAE7Ch6B,QAAS,WACPlB,EAAS9B,GAAQF,MAAMxG,IAAIpD,QAAQ0C,UAM3C,gBAAC+kB,GAAA,EAAD,CACEjwB,MAAOqC,GAAOmoB,IACdxQ,QAAS6uB,EACT5oB,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,KAClDud,MAAM,YAGR,gBAAC2hB,GAAD,CACEvf,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,KAClD+T,UAAW,kBAAMkB,uBAAsB,kBAAMrJ,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,QAChFhB,KAAM4K,EAAMxG,IAAIpE,KAChBiX,OAAQrS,OAAM,MAACN,GAAD,SAACA,EAAca,WAAf,EAAC,EAAoBxO,OAM3C,IAAMkE,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,GAERvR,QAAS,CACP6oB,SAAU,EACVD,cAAe,GACfvpB,kBAAmB,GAErB+nB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6c,QAAS,CACP90B,OAAQ,EACRD,MAAO,QAETgwB,KAAM,CACJvJ,OAAQ,EACRve,gBAAiB,cACjBuyB,UAAW,GACXz0B,YAAa,EACbI,eAAgB,SAChBjB,WAAY,SACZiM,QAAS,QAEX49B,UAAW,CACTppC,MAAO,QACPwL,QAAS,OACThL,eAAgB,SAChBjB,WAAY,SACZQ,SAAU,GACVu2B,WAAY,GACZD,kBAAmB,YCjHR,SAAS+V,KACtB,IAAMp0B,EAAa+Y,2BACb/rB,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCtC,EAAQmQ,eAERovB,EAAoB/vB,GAAezY,EAAWyoC,gBAC9CC,EAAiCjwB,GAAezY,EAAW2oC,oBAEjE,OACE,gBAAC5X,GAAD,KACE,gBAAC,KAAK6X,QAAN,CAAc76B,MAAM,WAAW/U,MAAO,CAAEzC,MAAO,SAC3CiyC,EACA,gBAAC,KAAKruB,KAAN,CACEpM,MAAM,gBACNO,QAAS,kBACP6F,EAAWoa,SAAS,uBAAwB,CAC1CjoB,SAAUnF,EAAMyH,mBAGpBtP,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAW7iB,MAAO8M,EAAMX,OAAOgJ,KAAMsI,KAAK,yBACtDqK,YAAY,6CATM,KAYtB,gBAAC,KAAK9J,KAAN,CACEpM,MAAM,cACNzU,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAW7iB,MAAO8M,EAAMX,OAAOgJ,KAAMsI,KAAK,UACtDtL,QAAS,kBAAM6F,EAAWoa,SAAS,+BAErC,gBAAC,KAAKpU,KAAN,CACEpM,MAAM,YACNO,QAAS,kBAAM6F,EAAWoa,SAAS,iBACnCj1B,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAW7iB,MAAO8M,EAAMX,OAAOgJ,KAAMsI,KAAK,gBAExD,gBAAC,KAAKO,KAAN,CACEpM,MAAM,OACNzU,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAW7iB,MAAO8M,EAAMX,OAAOgJ,KAAMsI,KAAK,eACtDqK,YAAY,8CACZ3V,QAAS,kBAAM6F,EAAWoa,SAAS,yBAErC,gBAAC,KAAKpU,KAAN,CACEhM,UAAWu6B,EACX36B,MAAM,0BACNzU,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAW7iB,MAAO8M,EAAMX,OAAOgJ,KAAMsI,KAAK,WACtDtL,QAAS,kBAAM6F,EAAWoa,SAAS,kCAErC,gBAAC,KAAKpU,KAAN,CACEpM,MAAM,aACNzU,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAW7iB,MAAO8M,EAAMX,OAAOgJ,KAAMsI,KAAK,eACtDqK,YAAY,0CACZ3V,QAAS,kBAAM6F,EAAWoa,SAAS,+BAIvC,gBAAC,KAAKqa,QAAN,CAAc76B,MAAM,UAAU/U,MAAO,CAAEzC,MAAO,SAC5C,gBAAC,KAAK4jB,KAAN,CACEpM,MAAM,eACNO,QAAS,kBAAM6F,EAAWoa,SAAS,sBACnCj1B,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAW7iB,MAAO8M,EAAMX,OAAOgJ,KAAMsI,KAAK,YACtDqK,YAAY,2CAEd,gBAAC,KAAK9J,KAAN,CACEpM,MAAM,iBACNO,QAAS,kBAAM6F,EAAWoa,SAAS,iBACnCj1B,KAAM,kBAAM,gBAAC,KAAK0lB,KAAN,CAAW7iB,MAAO8M,EAAMX,OAAOgJ,KAAMsI,KAAK,UACtDqK,YAAY,4D,uBCPPhP,MA7DqByB,aAAH,ylCAgEF,CAC7BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOwyB,kBAC/BzzB,cAAe,CACbkL,SAAU,UAEZvL,UAAW,CACThW,KAAM,CAAC2V,GAAW,4BAClBnS,KAAM,CAACmS,GAAW,8BAClB9O,SAAU,CAAC8O,GAAW,8BAA+BI,GAAU,iCCXpDG,MA7DqByB,aAAH,gkCAgEF,CAC7BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOyyB,kBAC/B1zB,cAAe,CACbje,GAAI,WACJmpB,SAAU,YC/DRyoB,GAAeryB,aAAH,gNAeZsyB,GAAgD,CACpD,KAAS,SACT,IAAQ,aAGK,SAASC,KAAkB,IAAD,UACjC9nC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvG,cAC5CuI,EAAWV,KACX9D,EAAkBkO,KAExB,EAAgDvf,YAAe,GAA/D,WAAOg6B,EAAP,KAAyBC,EAAzB,KACQlb,EAASW,aAAgB8xB,GAAc,CAC7CjzB,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,OAF1Cmf,KAMR,OACE,gCACE,gBAAC6E,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,MAAOQ,EAAMV,OAAO1B,KAAK4B,OAAS,GAClCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,OAAQ2e,QAElF,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO1B,KAAK6B,MAAQ,QAAU,QACnDO,EAAMV,OAAO1B,KAAK6B,OAAS,qCAG9B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,QACNne,QAASO,EAAMV,OAAO8B,KAAK3B,MAC3BD,MAAK,SAAEQ,EAAMV,OAAO8B,OAAf,SAAE,EAAmB5B,YAArB,EAAE,EAA0Bmf,WACjC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,OAAQkE,OAAOya,SAG/D,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO8B,KAAK3B,MAAQ,QAAU,QACnDO,EAAMV,OAAO8B,KAAK3B,OAAS,yCAE9B,gBAACtC,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAACkjB,GAAA,EAAD,CACExG,UAAW,kBAAMue,GAAoB,IACrCxe,QAASue,EACTv4B,MAAO,CAAEvC,SAAU,WAAY4kB,MAAO,MAAO/hB,KAAM,MAAOqU,KAAM,GAChE+L,OACE,gBAAC,KAAKS,KAAN,CACE7L,QAAS,WACPkjB,GAAoB,IAEtBzjB,MACE5M,EAAMV,OAAOmF,SAASjF,OACtBQ,EAAMV,OAAOmF,SAASjF,MAAMmf,aAAckpB,GACtCA,GAAmB7nC,EAAMV,OAAOmF,SAASjF,MAAMmf,YAC/C,SAEN9mB,MAAO,CAAEzC,MAAO,OAAQoX,KAAM,GAC9B0N,MAAO,kBACL,gBAAC,KAAK2D,KAAN,CACEpF,KACEzY,EAAMV,OAAOmF,SAASjF,OACtBQ,EAAMV,OAAOmF,SAASjF,MAAMmf,aAAckpB,GACtCA,GAAmB7nC,EAAMV,OAAOmF,SAASjF,MAAMmf,YAC/C,oBAOd,gBAAC,KAAK3F,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,WAAY,OACxDswB,GAAoB,IAEtBzjB,MAAM,YACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,iBAE/B,gBAAC,KAAKO,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,WAAY,QACxDswB,GAAoB,IAEtBzjB,MAAM,SACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,wBAE/B,gBAAC,KAAKO,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,WAAY,OACxDswB,GAAoB,IAEtBzjB,MAAM,QACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,oBAI9BzY,EAAMV,OAAOmF,SAASjF,QAAU,CAAC,IAAM,MAAOmY,SAAS3X,EAAMV,OAAOmF,SAASjF,SAC9E,gBAACwa,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,kBACNne,QAASO,EAAMV,OAAOmF,SAAShF,MAC/BD,MAAK,SAAEQ,EAAMV,OAAOmF,WAAf,SAAE,EAAuBjF,YAAzB,EAAE,EAA8Bmf,WACrC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,WAAYkE,OAAOya,SAKrE,gBAACqE,GAAA,EAAS/J,KAAV,CACE4E,MAAM,SACN/lB,MAAO,CAAEzC,MAAO,QAChBuB,OAAQqJ,EAAMV,OAAOqF,SAASnF,MAAQ,UAAY,YAClD2N,QAAS,kBACPlB,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,YAAaC,EAAMV,OAAOqF,SAASnF,YAGnF,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOqF,SAASlF,MAAQ,QAAU,QACvDO,EAAMV,OAAOqF,SAASlF,OACrB,kEAGJ,gBAACsjB,GAAA,EAAS/J,KAAV,CACE4E,MAAM,qBACN/lB,MAAO,CAAEzC,MAAO,QAChBuB,OAAQqJ,EAAMV,OAAOoF,qBAAqBlF,MAAQ,UAAY,YAC9D2N,QAAS,kBACPlB,EACE9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAChC,wBACCC,EAAMV,OAAOoF,qBAAqBlF,YAM3C,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOoF,qBAAqBjF,MAAQ,QAAU,QACnEO,EAAMV,OAAOoF,qBAAqBjF,OACjC,uDAGJ,gBAAC+e,GAAA,EAAD,MACA,gBAAC,KAAKzB,UAAN,+BAtGF,MAuGG5H,OAvGH,EAuGGA,EAAM5R,OAAOpN,KAAI,SAACkP,GAAD,aAChB,gBAAC0d,GAAA,EAAS/J,KAAV,CACEjY,IAAG,SAAWsE,EAAMrP,GACpB4nB,MAAOvY,EAAMzH,MAAQ,GACrBjH,OACE,SAAAqJ,EAAMV,OAAOiE,OAAO/D,QAApB,EAA2BrJ,KAAI,qBAAGH,MAAa2hB,SAAStS,EAAMrP,IAC1D,UACA,YAENmX,QAAS,4BACPlB,EACE9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAChC,SACA,SAAAC,EAAMV,OAAOiE,OAAO/D,QAApB,EAA2BrJ,KAAI,qBAAGH,MAAa2hB,SAAStS,EAAMrP,IAA9D,SACIgK,EAAMV,OAAOiE,OAAO/D,YADxB,EACI,EAA2Bqd,QAAO,qBAAG7mB,KAAgBqP,EAAMrP,MAD/D,wBAESgK,EAAMV,OAAOiE,aAFtB,EAES,EAAqB/D,OAF9B,CAE2D6F,eAW7E,I,SAAMnL,GAASC,IAAWC,OAAO,CAC/B+F,MAAO,CACLkc,aAAc,EACdjnB,MAAO,UCzLI,SAAS2yC,GAAiB5yC,GAA2B,IAAD,QACzDkK,EAAkBlK,EAAlBkK,KAAM2gB,EAAY7qB,EAAZ6qB,QACRhgB,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvG,cAC5CuI,EAAWV,KACX9D,EAAkBkO,KAElB+xB,EAAmBM,GAA4B,CACnD5zB,UAAW,SAAClU,GACV+L,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,QACR8O,QAAS,aAGbzC,EAAS9B,GAAQF,MAAMvG,WAAWzG,SAClC+iB,KAGF7L,aAAc,SAAChU,EAAOP,GAAR,OACZqM,EAAS9B,GAAQF,MAAMvG,WAAWtD,cAAc,CAACD,EAAiCP,MACpFsO,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAE9Di5B,EAAmBM,GAA4B,CACnD7zB,UAAW,SAAClU,GAAD,OACToV,uBAAsB,WACpBrJ,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,QACR8O,QAAS,aAGbzC,EAAS9B,GAAQF,MAAMvG,WAAWzG,SAClC+iB,QAGJ7L,aAAc,SAAChU,EAAOP,GAAR,OACZqM,EAAS9B,GAAQF,MAAMvG,WAAWtD,cAAc,CAACD,EAAiCP,MACpFsO,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAG9DytB,EAAYC,0BAClBhmC,aAAgB,WACV+lC,GACFlwB,EAAS9B,GAAQF,MAAMvG,WAAWzG,WAEnC,CAACgP,EAAUkwB,IAEd,IAAM1B,EAASrkC,eAAkB,sCAAAG,EAAAC,OAAA,4DAC3BwJ,EAAMZ,YAAN,EAAgBpJ,GADW,kCAAAO,EAAA,MAEvBoxC,EAAiBrzB,OAAO,CAC5Bte,GAAIiO,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgBpJ,IAC3B4H,KAAMoC,EAAMV,OAAO1B,KAAK4B,MACxB4B,KAAMpB,EAAMV,OAAO8B,KAAK5B,MACxBiF,SAAUzE,EAAMV,OAAOmF,SAASjF,MAChCkF,qBAAsB1E,EAAMV,OAAOoF,qBAAqBlF,MACxD2f,SAAQ,SAAEnf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4BrJ,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYiO,OAAOjO,MAC7D2O,WAAY3E,EAAMV,OAAOqF,SAASnF,SATP,+CAAAjJ,EAAA,MAYvBmxC,EAAiBpzB,OAAO,CAC5BsB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9C4H,KAAMoC,EAAMV,OAAO1B,KAAK4B,MACxB4B,KAAMpB,EAAMV,OAAO8B,KAAK5B,MACxBiF,SAAUzE,EAAMV,OAAOmF,SAASjF,MAChCkF,qBAAsB1E,EAAMV,OAAOoF,qBAAqBlF,MACxD2f,SAAQ,SAAEnf,EAAMV,OAAOiE,SAAf,SAAE,EAAqB/D,YAAvB,EAAE,EAA4BrJ,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYiO,OAAOjO,MAC7D2O,WAAY3E,EAAMV,OAAOqF,SAASnF,SAnBP,8DAsB9B,CACDkoC,EADC,MAEDjgC,GAFC,SAEDA,EAAiBtC,eAFhB,EAED,EAA2BnP,GAC3BgK,EAAMV,OAAOoF,qBAAqBlF,MAClCQ,EAAMV,OAAOmF,SAASjF,MACtBQ,EAAMV,OAAO8B,KAAK5B,MALjB,SAMDQ,EAAMV,OAAOiE,aANZ,EAMD,EAAqB/D,MACrBQ,EAAMV,OAAOqF,SAASnF,MACtBQ,EAAMV,OAAO1B,KAAK4B,MARjB,SASDQ,EAAMZ,eATL,EASD,EAAgBpJ,GAChB2xC,IAGInN,EAAapkC,WAAc,iBAAM,CAAC,IAAK,OAAM,IACnD,OACE,gBAAC6jC,GAAD,CACErtB,MAAO,SAAA5M,EAAMZ,WAAN,EAAgBpJ,GAAK,cAAgB,aAC5CqJ,KAAMA,EACNm7B,WAAYA,EACZxa,QAAO,8GAAE,WACPA,OAEFlU,QAAS47B,EAAiB57B,SAAW67B,EAAiB77B,QACtDquB,aAAcM,EACdP,YAAY,QAEZ,gBAAC4N,GAAD,OClGN,IAAMI,GAAoB3yB,aAAH,iUAqBjB4yB,GAA8B5yB,aAAH,wgBA2B3B6yB,GAA8B7yB,aAAH,kdA2BlB,SAAS8yB,KAAqB,IAAD,IACpCroC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCk+B,EAAO78B,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvG,cAC3CuI,EAAWV,KACjB,EAAmCuK,aAAgBoyB,GAAmB,CACpEvzB,UAAW,CACTiB,WAAY3R,OAAOjE,EAAM0H,sBAFrByN,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAKjByP,EAAQC,sBACRuR,EAAYC,0BAElBhmC,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IACf,MAAmC7G,aAAsB8zB,IAAlDI,EAAP,YACA,EAAmCl0B,aAAsB+zB,IAAlDI,EAAP,YAEApyC,aAAgB,WACK,sBAAfu0B,EAAM/sB,MACRsd,MAED,CAACA,EAASyP,EAAM/sB,OAEnB,IAAM6qC,EAAuBnxB,GAAezY,EAAW6pC,kBACvD,OACE,gBAAC9Y,GAAD,CACE/3B,MAAOqC,GAAOG,UACdwoB,sBAAuB,CAAC3oB,GAAOe,QAAS,CAAEqC,gBAAiB,UAC3DwvB,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY9gB,EAAS+gB,UAAW3R,KAEhE,gBAACyE,EAAA,EAAD,CAAa9N,QAAS/F,EAAS9Q,MAAOgF,EAAM8H,MAAMX,OAAOgB,SACzD,gBAAC+wB,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUrZ,MAAX,aACA,gBAACqZ,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,QACA,gBAACD,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,YACA,gBAACD,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,WALJ,MAQGhkB,GARH,SAQGA,EAAMhQ,WART,SAQG,EAAgB9D,kBARnB,EAQG,EAA6BlL,KAAI,SAACuN,GAAD,OAChC,gBAACy0B,GAAD,CACEC,YAAa,CACXxa,MAAO,SACPtgB,gBAAiB,MACjB6P,QAAS,kCAAA5W,EAAAC,OAAA,kEAAAD,EAAA,MACwBiyC,EAAyB,CACtD7zB,UAAW,CAAE3e,GAAIiO,OAAOP,EAAW1N,QAF9B,gBAKP,OAJckf,EADP,EACCC,OAIR,SAAID,EAAQyzB,mBAAZ,SAAI,EAA0BtzB,SAA1B,EAAkClE,QACpClF,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAO,MAAEsV,GAAF,SAAEA,EAAQyzB,uBAAV,EAAE,EAA0BtzB,OAAO,GAC1C3G,QAAS,WATR,+DAgBX,gBAACwqB,GAAA,EAAUG,IAAX,CACElsB,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvG,WAAWrD,QAAQqD,KAE5CrL,cAAc,QAEd,gBAAC6gC,GAAA,EAAUI,KAAX,KAAiB51B,EAAW9F,MAC5B,gBAACs7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,IAA0Bz1B,EAAWtC,MACrC,gBAAC83B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAEz1B,EAAWe,UACpC,gBAACy0B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAACyP,GAAA,EAAD,CACEC,cAAe,WACbN,EAAyB,CACvB5zB,UAAW,CACT3e,GAAIiO,OAAOP,EAAW1N,IACtB0O,sBAAuBhB,EAAWgB,yBAIxClF,QAASkE,EAAWgB,8BAQhC,gBAACojB,GAAA,EAAD,CACEjwB,MAAOqC,GAAOmoB,IACdvK,OAAK,EACLjG,QAAS42B,EACThwB,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMvG,WAAWrD,SAAQ,KACzDud,MAAM,oBAER,gBAAC,GAAD,CACEve,KAAMipC,EAAKjpC,KACX2gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMvG,WAAWrD,SAAQ,QAMjE,IAAMnG,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNhG,QAAS,QAEXvL,QAAS,CACP6oB,SAAU,GAEZzB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACNjS,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,U,4DC3MG,SAASyzC,GAAkB3zC,GACxC,IAAQqK,EAAmCrK,EAAnCqK,MAAO2wB,EAA4Bh7B,EAA5Bg7B,SAAU9wB,EAAkBlK,EAAlBkK,KAAM2gB,EAAY7qB,EAAZ6qB,QAEzBnT,EAAMzW,WACZ,OACE,gBAACopB,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAWxS,EAAMyS,UAAW,kBAAMkO,MACxC,gBAACP,GAAA,EAAOI,MAAR,qBACA,gBAACJ,GAAA,EAAOsB,QAAR,CAAgBlpB,MAAO,CAAEub,QAAS,GAAI/d,OAAQ,MAC5C,gBAAC,KAAD,CACEwC,MAAO,CAAE2U,KAAM,GAGfu8B,gBAAiBC,KACjBC,aAAczpC,EACd0pC,aAAW,EAGXr8B,IAAKA,KAGT,gBAAC4S,GAAA,EAAOM,QAAR,KACE,gBAAChT,EAAA,EAAD,CAAQI,QAAS,kBAAM6S,MAAvB,UACA,gBAACjT,EAAA,EAAD,CACEI,QAAS,WACW,IAAD,EAAbN,EAAIpW,SACN05B,EAAQ,SAACtjB,EAAIpW,cAAL,EAAC,EAAa0yC,cAH5B,WC3BV,IAAMC,GAAgB,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAkFF,IAAMlvC,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEd4F,MAAO,CACLkc,aAAc,GAEhBphB,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB2pB,KAAM,CAAEzR,QAAS,EAAGkJ,eAAgB,GAAIjnB,OAAQ,KAChDuX,MAAO,CACL5R,MAAO,QACPD,SAAU,GACVsS,WAAY,OACZgP,aAAc,GACd1hB,UAAW,UAGb0uC,SAAU,CACRh0C,OAAQ,GACRD,MAAO,GACPymB,OAAQ,EACRthB,WAAY,SACZiB,eAAgB,YC9HL8tC,GD4Bf,SAAqBn0C,GACnB,IAAQqK,EAA8CrK,EAA9CqK,MAAOoN,EAAuCzX,EAAvCyX,MAAO28B,EAAgCp0C,EAAhCo0C,WAAYpZ,EAAoBh7B,EAApBg7B,SAAU1wB,EAAUtK,EAAVsK,MAEtC+pC,GAAiBJ,GAAczxB,SAASnY,GAC9C,EAAsCpJ,YAAe,GAArD,WAAOqzC,EAAP,KAAqBC,EAArB,KACA,OACE,gCACE,gBAACZ,GAAD,CACEzpC,KAAMoqC,EACNjqC,MAAOA,EACP2wB,SAAQ,+GAAE,SAACn1B,GACTm1B,EAASn1B,GACT0uC,GAAc,MAEhB1pB,QAAS,kBAAM0pB,GAAc,MAE/B,gBAAC9oB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK9H,UAAN,KAAiBnQ,GAEjB,gBAACgU,GAAA,EAAKG,QAAN,CAAclpB,MAAO,CAAEqD,cAAe,MAAO0gB,SAAU,SACpDwtB,GAAcjzC,KAAI,SAAC6E,GAAD,OACjB,gBAAC8lC,GAAA,EAAD,CAAiB3zB,QAAS,kBAAMgjB,EAASn1B,KACvC,gBAAC2uC,GAAA,EAAD,CACE9xC,MAAO,CACLqC,GAAOmvC,SACP,CAAEnuC,cAAe,OACjBF,IAAUwE,EAAQ,CAAEpE,YAAa,EAAGE,YAAa,SAAY,KAG/D,gBAAC6B,EAAA,QAAD,CACEtF,MAAO,CACLxC,OAAQ,OACRD,MAAO,MACPkI,gBAAiBssC,KAAW5uC,GAAO4N,QAAQ,IAAKD,SAGpD,gBAACxL,EAAA,QAAD,CACEtF,MAAO,CACLxC,OAAQ,OACRD,MAAO,MACPkI,gBAAiBtC,KAGrB,gBAACmC,EAAA,QAAD,CACEtF,MAAO,CACLxC,OAAQ,OACRD,MAAO,MACPkI,gBAAiBssC,KAAW5uC,GAAO0N,OAAO,IAAKC,cAMzD,gBAACm4B,GAAA,EAAD,CAAiB3zB,QAAS,kBAAMu8B,GAAc,KAC5C,gBAACC,GAAA,EAAD,CACE9xC,MAAO,CACLqC,GAAOmvC,SACP,CAAE/rC,gBAAiBksC,EAAgBhqC,EAAQ,WAC3CgqC,EAAgB,CAAEpuC,YAAa,EAAGE,YAAa,SAAY,KAG7D,gBAACuuC,GAAA,EAAD,CAAejsC,KAAK,MAAMC,KAAM,OAItC,gBAACsgB,GAAA,EAAD,CAAYC,KAAM3e,EAAQ,QAAU,QAASA,GAAS8pC,ME9D9D,IAAMrvC,GAASC,IAAWC,OAAO,CAC/BwjB,MAAO,CACLvQ,WAAY,OACZ1S,UAAW,SACXK,MAAO,QACPD,SAAU,GACVsY,UAAW,GAEby2B,iBAAkB,CAChBz0C,OAAQ,IACRD,MAAO,IACP0C,aAAc,EACdsD,YAAajB,IAAWwgB,cACxBrf,YAAa,UACbgC,gBAAiB,UACjB/B,UAAW,UAEbwuC,iBAAkB,CAChB30C,MAAO,GACPC,OAAQ,EACRyC,aAAc,IACdwF,gBAAiB,OACjBhI,SAAU,WACVgY,OAAQ,EACRnV,KAAM,IAER6xC,kBAAmB,CACjB50C,MAAO,EACPC,OAAQ,EACRyC,aAAc,IACdwF,gBAAiB,OACjBhI,SAAU,WACVgY,OAAQ,EACRnV,KAAM,IAER8xC,kBAAmB,CACjB70C,MAAO,EACPC,OAAQ,EACRyC,aAAc,IACdwF,gBAAiB,OACjBhI,SAAU,WACVgY,OAAQ,EACRnV,KAAM,IAGR+xC,cAAe,CACb90C,MAAO,OACPC,OAAQ,OACRiI,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,EACLmsB,qBAAsB,EACtBD,oBAAqB,GAEvBgmB,cAAe,CACb/0C,MAAO,OACPC,OAAQ,OACRiI,gBAAiB,UACjBhI,SAAU,WACVgY,OAAQ,EACRkkB,wBAAyB,EACzBD,uBAAwB,GAE1B6Y,gBAAiB,CACfh1C,MAAO,MACP0C,aAAc,EACdzC,OAAQ,MACRinB,eAAgB,KAChB3D,iBAAkB,KAClBrb,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,OAEPoyC,iBAAkB,CAChBj1C,MAAO,MACPC,OAAQ,MACRyC,aAAc,EACdwF,gBAAiB,UACjBgf,eAAgB,KAChB3D,iBAAkB,KAClBrjB,SAAU,WACV2C,IAAK,OAEPqyC,iBAAkB,CAChBl1C,MAAO,MACPC,OAAQ,MACRyC,aAAc,EACdwkB,eAAgB,KAChBhf,gBAAiB,UACjBqb,iBAAkB,KAClBrjB,SAAU,WACV2C,IAAK,OAEPsyC,cAAe,CACbn1C,MAAO,MACPC,OAAQ,KACRC,SAAU,WACVgY,OAAQ,GACR4M,MAAO,EACPpiB,aAAc,EACdwF,gBAAiB,WAEnB+rC,SAAU,CACRh0C,OAAQ,GACRD,MAAO,GACPymB,OAAQ,KAIG2uB,GAnIf,SAAsBr1C,GACpB,IAAQqL,EAAiCrL,EAAjCqL,aAAcD,EAAmBpL,EAAnBoL,eACduH,EAAU2D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAxCtC,MACF2iC,EAAezvC,KAAMwF,GAAcoI,QAAQ,IAAKD,MACtD,OACE,gBAACxL,EAAA,QAAD,KACE,gBAACwsC,GAAA,EAAD,CAAS9xC,MAAOqC,GAAO4vC,kBACrB,gBAAC3sC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOgwC,cAAe,CAAE5sC,gBAAiBwK,EAAMX,OAAOmT,YACpE,gBAACnd,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOkwC,mBACrB,gBAACjtC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOmwC,oBACrB,gBAACltC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOowC,oBACrB,gBAACntC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOqwC,cAAe,CAAEjtC,gBAAiBiD,MACvD,gBAACpD,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOiwC,cAAe,CAAE7sC,gBAAiBwK,EAAMX,OAAOmT,YACpE,gBAACnd,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAO6vC,iBAAkB,CAAEzsC,gBAAiBmtC,MAC1D,gBAACttC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAO8vC,kBAAmB,CAAE1sC,gBAAiBmtC,MAC3D,gBAACttC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAO+vC,kBAAmB,CAAE3sC,gBAAiBmtC,OAE7D,gBAAC3sC,EAAA,EAAD,CAAMjG,MAAOqC,GAAO0jB,OAApB,WCGN,IAAM1jB,GAASC,IAAWC,OAAO,CAC/BwjB,MAAO,CACLvQ,WAAY,OACZ1S,UAAW,SACXK,MAAO,QACPD,SAAU,GACVsY,UAAW,GAEby2B,iBAAkB,CAChBz0C,OAAQ,IACRD,MAAO,IACP0C,aAAc,EACdsD,YAAajB,IAAWwgB,cACxBrf,YAAa,UACbC,UAAW,UAGb2uC,cAAe,CACb90C,MAAO,OACPC,OAAQ,OACRiI,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,EACLmsB,qBAAsB,EACtBD,oBAAqB,GAEvB4lB,iBAAkB,CAChB30C,MAAO,GACPC,OAAQ,EACRyC,aAAc,EACdwF,gBAAiB,OACjBhI,SAAU,WACVgY,OAAQ,EACRnV,KAAM,IAER6xC,kBAAmB,CACjB50C,MAAO,EACPC,OAAQ,EACRyC,aAAc,EACdwF,gBAAiB,OACjBhI,SAAU,WACVgY,OAAQ,EACRnV,KAAM,IAER8xC,kBAAmB,CACjB70C,MAAO,EACPC,OAAQ,EACRyC,aAAc,EACdwF,gBAAiB,OACjBhI,SAAU,WACVgY,OAAQ,EACRnV,KAAM,IAERgyC,cAAe,CACb/0C,MAAO,OACPC,OAAQ,OACRiI,gBAAiB,UACjBhI,SAAU,WACVgY,OAAQ,EACRkkB,wBAAyB,EACzBD,uBAAwB,GAE1B6Y,gBAAiB,CACfh1C,MAAO,MACPC,OAAQ,MACRinB,eAAgB,KAChBhf,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,MACLE,KAAM,MAERkyC,iBAAkB,CAChBj1C,MAAO,MACPC,OAAQ,MACRiI,gBAAiB,UACjBgf,eAAgB,KAChBhnB,SAAU,WACV2C,IAAK,MACLE,KAAM,OAERmyC,iBAAkB,CAChBl1C,MAAO,MACPC,OAAQ,MACRinB,eAAgB,KAChBhf,gBAAiB,UACjBhI,SAAU,WACV2C,IAAK,MACLE,KAAM,OAERoyC,cAAe,CACbn1C,MAAO,MACPC,OAAQ,KACRC,SAAU,WACVgY,OAAQ,GACR4M,MAAO,EACPpiB,aAAc,EACdwF,gBAAiB,WAEnB+rC,SAAU,CACRh0C,OAAQ,GACRD,MAAO,GACPymB,OAAQ,KAIG6uB,GA9Hf,SAAoBv1C,GAClB,IAAQqL,EAAiCrL,EAAjCqL,aAAcD,EAAmBpL,EAAnBoL,eAChBkqC,EAAezvC,KAAMwF,GAAcoI,QAAQ,IAAKD,MACtD,OACE,gBAACxL,EAAA,QAAD,KACE,gBAACwsC,GAAA,EAAD,CAAS9xC,MAAO,CAACqC,GAAO4vC,iBAAkB,CAAExsC,gBAAiB,aAC3D,gBAACH,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOgwC,cAAe,CAAE5sC,gBAAiB,cACvD,gBAACH,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOkwC,mBACrB,gBAACjtC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOmwC,oBACrB,gBAACltC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOowC,oBACrB,gBAACntC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOqwC,cAAe,CAAEjtC,gBAAiBiD,MACvD,gBAACpD,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAOiwC,cAAe,CAAE7sC,gBAAiB,cACvD,gBAACH,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAO6vC,iBAAkB,CAAEzsC,gBAAiBmtC,MAC1D,gBAACttC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAO8vC,kBAAmB,CAAE1sC,gBAAiBmtC,MAC3D,gBAACttC,EAAA,QAAD,CAAMtF,MAAO,CAACqC,GAAO+vC,kBAAmB,CAAE3sC,gBAAiBmtC,OAE7D,gBAAC3sC,EAAA,EAAD,CAAMjG,MAAOqC,GAAO0jB,OAApB,S,qkBCyIN,I,GAAM1jB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,SACZ+C,gBAAiB,eAEnBsP,MAAO,CACLtX,SAAU,WACVyF,SAAU,GACV9C,IAAK,IACLoV,WAAY,OACZrS,MAAO,QACP7C,KAAM,EACNqC,YAAa,GACbpF,MAAO,OACPyuB,cAAe,GACflpB,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,IAGZs1C,YAAY,SACPxwC,IAAWiT,oBADL,IAET5R,eAAgB,SAChBjB,WAAY,SACZW,cAAe,WAEjBD,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB2pB,KAAM,CACJzR,QAAS,EACTE,gBAAiB,GACjBgJ,eAAgB,GAChBlnB,MAAO,QAETw1C,WAAY,CACVt1C,SAAU,WACVgY,OAAQ,GACR4M,MAAO,GACP5c,gBAAiB,QACjBxF,aAAc,GACdsb,QAAS,KAIEy3B,GArMR,SAA4B11C,GACjC,IAAQ21C,EAAiC31C,EAAjC21C,WAAYC,EAAqB51C,EAArB41C,UAAWvrC,EAAUrK,EAAVqK,MAC/B,EAA4BpJ,aAA5B,WAAOZ,EAAP,KAAew1C,EAAf,KACMlW,EAAmB1+B,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEdG,QAFc,mBAGxB,YAHwB,EAE/BC,OAF+B,mEAAAJ,EAAA,MAMhBG,KAAiC,KANjB,OAMjCk+B,EANiC,OAOvCt9B,QAAQC,IAAI,gBAAiBq9B,EAASn/B,QACtCu1C,EAAU,CACR5zC,IAAKw9B,EAASn/B,OAAO0D,SACrB9B,IAAKu9B,EAASn/B,OAAOs+B,YAVgB,kDAavCz8B,QAAQC,IAAR,MAbuC,mEAexC,IAGHnB,aAAgB,WACI,OAAdoJ,EAAMnI,KAA6B,MAAbmI,EAAMnI,KAC9By9B,MAED,CAACA,EAAkBt1B,EAAMnI,MAE5B,IAAM4E,EAAU7F,SAAa,IAAI8F,KAASC,MAAM,IAE1C8uC,EACJzrC,EAAMnI,KAAOmI,EAAMnI,IACf,CACED,IAAKoI,EAAMpI,IACXC,IAAKmI,EAAMnI,UAEbU,EAEN,EAAoC3B,YAAwB,GAA5D,WAAO80C,EAAP,KAAoBC,EAApB,KACMC,EAAUh1C,SACd8F,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,KAGf2uC,EAASj1C,SACb8F,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,KAIf4uC,EAAoBl1C,eAAkB,SAACyb,GAC3Cs5B,GAAa,IACZt5B,EAAUw5B,EAASD,GAAS30C,QAAQqG,OAAM,kBAAMquC,GAAa,QAC7D,IAEH,EAAkC/0C,YAAwB,GAA1D,WAAO49B,EAAP,KAAmBC,EAAnB,KAEA,OACE,gBAAC,KAAD,CACEsX,YAAa,EACbj2C,SAAU,CACR8C,EAAG,EACHF,EAAG,GAEL9C,MAAM,OACNC,OAAO,OACPa,SAAQ,SACHiE,IAAWiT,oBADR,IAENiG,WAAY,KAEd5d,OAAQw1C,EACRz1C,OAAQA,GAAUy1C,EAClBO,YAAa,WACNN,IACHI,GAAkB,GAClBrX,GAAY,KAGhBr+B,UAAW,SAAC61C,GAAO,IAAD,IAChB,SAAAL,EAAQ30C,UAAR,EAAiBuG,OACjB,SAAAquC,EAAO50C,UAAP,EAAgBuG,OAChBmuC,GAAa,GACbG,GAAkB,GAClBA,GAAkB,GAClBrX,GAAY,GACZ9+B,EAAMg7B,SAAS,CACb4D,UAAW0X,EAAEp0C,IACb8B,SAAUsyC,EAAEr0C,OAGhBzB,aAAW,GAETs1C,EACA,gBAAC9tC,EAAA,QAAD,CAAMtF,MAAOqC,GAAOywC,YAAatyC,cAAc,QAC7C,gBAACkiB,GAAA,EAAD,CACEliB,cAAc,OACdwF,KAAMitC,GAAc,GACpBjzC,MAAO,CACLmD,MAAO,UACPJ,gBAAiB,qBACjBE,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClB45B,OAAQ,IAEV72B,KAAMo2B,EAAa,aAAe,6BAEpC,gBAAC,KAASl2B,KAAV,CACEjG,MAAO,CACLkD,SAAUgwC,GAAa,GACvBz1C,SAAU,WACVgY,OAAQ,MACRlY,MAAO,OACP6G,QAASA,EAAQxF,QACjBkE,UAAW,SACXK,MAAO,UACPJ,gBAAiB,qBACjBE,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,KAGnBowC,EAAO7zC,IAAI4pB,QAAQ,GAjBtB,IAiB2BiqB,EAAO5zC,IAAI2pB,QAAQ,KAlCvC,KAuCX,gBAAC/N,GAAA,EAAD,CACEpb,MAAOqC,GAAO0wC,WACdz9B,QAAS,WACP2nB,MAGF,gBAAC+U,GAAA,EAAD,CAAejsC,KAAK,cAAcC,KAAM,QChJ1CkiC,GAAoBxqB,aAAH,wGAYR,SAASm2B,GAAav2C,GAAuB,IAAD,EACxCw2C,EAAmBx2C,EAA5B2W,QACF9L,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,YAC5C8G,EAAWV,KACjB,EAA0BuK,aAAgBiqB,IAAlC5qB,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAEd1V,aAAgB,WAAO,IAAD,IACZ,MAAJ+e,GAAA,SAAAA,EAAM8qB,eAAN,EAAmB9uB,QAAU,SAACnR,EAAMV,OAAOgB,aAAb,EAAyBd,OACzDyM,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,aAAcoV,EAAK8qB,YAAY,QAE1E,OAAC9qB,OAAD,EAACA,EAAM8qB,YAAah0B,EAApB,SAA8BjM,EAAMV,OAAOgB,iBAA3C,EAA8B,EAAyBd,QAE1D,IAAMgkC,EAAcptC,eAAkB,0BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEZq1C,aAAiB,CACrCC,UAAU,EACVztB,KAAM,WAJ0B,OAE5BlJ,EAF4B,OAOlCjJ,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,SAAUmV,EAAOtH,OAPzB,gDASlCtW,QAAQC,IAAR,MATkC,kEAWnC,CAAC0U,IAIJ,OAFA3U,QAAQC,IAAIyI,EAAMV,QAGhB,gCACE,gBAAC,KAAD,CACE8c,UAAWtQ,GAAW6/B,EACtB11C,eAAgBiE,GAAO4xC,aACvBl0C,OAAQ,CAAC,CAAEmJ,IAAK,MAAO1L,OAAQ,IAAKD,MAAO,UAE3C,gBAACwrB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAACjE,GAAA,EAAKf,MAAN,CAAYjT,MAAM,WAClB,gBAACgU,GAAA,EAAKmrB,MAAN,CACEj/B,OAAQ,CACNc,IAAK5N,EAAMV,OAAOmB,OAAOjB,OAAS,6BAEpC67B,WAAW,QACXxjC,MAAO,CAAEzC,MAAO,UAElB,gBAACwrB,GAAA,EAAKb,QAAN,CAAcloB,MAAO,CAAE2D,eAAgB,aACrC,gBAACuR,EAAA,EAAD,CAAQI,QAASq2B,GAAjB,aAIN,gBAAC,KAAD,CACEpnB,UAAWtQ,GAAW6/B,EACtB11C,eAAgBiE,GAAO4xC,aACvBl0C,OAAQ,CAAC,CAAEmJ,IAAK,MAAO1L,OAAQ,IAAKD,MAAO,UAE3C,gBAACwrB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK9H,UAAN,aACA,gBAAC/C,GAAA,EAAD,CACE9M,KAAK,WACLzN,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,MAAOQ,EAAMV,OAAO1B,KAAK4B,OAAS,GAClCoa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,OAAQ2e,QAGtD,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASpe,EAAMV,OAAO1B,KAAK6B,OAAS,IACrD,gBAACugC,GAAD,CACExgC,MAAOQ,EAAMV,OAAOgB,WAAWd,MAC/BwY,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,aAAcP,QAE/E,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOgB,WAAWb,MAAQ,QAAU,QACzDO,EAAMV,OAAOgB,WAAWb,OAAS,MAKxC,gBAAC,KAAD,CACE2c,UAAWtQ,GAAW6/B,EACtB11C,eAAgBiE,GAAO4xC,aACvBl0C,OAAQ,CAAC,CAAEmJ,IAAK,MAAO1L,OAAQ,IAAKD,MAAO,UAE3C,gBAACwrB,GAAA,EAAD,CAAM/oB,MAAO,CAACqC,GAAO2qB,KAAM,CAAExvB,OAAQ,IAAKiF,kBAAmB,KAC3D,gBAAC,KAAKyiB,UAAN,iBACA,gBAAC6D,GAAA,EAAKG,QAAN,CACElpB,MAAO,CACLwb,UAAW,GACXwQ,cAAe,GACfrpB,YAAa,EACbC,aAAc,EACdqpB,SAAU,IAGZ,gBAAC,GAAD,CACEtkB,MACEQ,EAAMV,OAAOlI,IAAIoI,OAASQ,EAAMV,OAAOjI,IAAImI,MACvC,CAAEpI,IAAK4I,EAAMV,OAAOlI,IAAIoI,MAAOnI,IAAK2I,EAAMV,OAAOjI,IAAImI,YACrDzH,EAENo4B,SAAU,SAAC8a,GACTh/B,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,MAAOkrC,EAAO9xC,YACxD8S,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,MAAOkrC,EAAOlX,mBAOlE,gBAAC,KAAD,CACE3X,UAAWtQ,GAAW6/B,EACtB11C,eAAgBiE,GAAO4xC,aACvBl0C,OAAQ,CAAC,CAAEmJ,IAAK,MAAO1L,OAAQ,IAAKD,MAAO,UAE3C,gBAACwrB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAACjE,GAAA,EAAKf,MAAN,CAAYjT,MAAM,aAClB,gBAACgU,GAAA,EAAKG,QAAN,CACElpB,MAAO,CACLqD,cAAe,MACfM,eAAgB,eAChBjB,WAAY,WACZnF,MAAO,SAGT,gBAAC42C,GAAD,CACExrC,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,UACjDe,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,YAGvD,gBAACysC,GAAD,CACEzrC,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,UACjDe,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,eAM7D,gBAAC,KAAD,CACE4c,UAAWtQ,GAAW6/B,EACtB11C,eAAgBiE,GAAOgyC,wBACvBt0C,OAAQ,CAAC,CAAEmJ,IAAK,MAAO1L,OAAQ,IAAKD,MAAO,UAE3C,gBAAC,GAAD,CACEwX,MAAM,gBACN28B,WAAW,wEACX9pC,MAAOO,EAAMV,OAAOkB,aAAaf,OAAS,KAC1C0wB,SAAU,SAACn1B,GACTiR,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,eAAgB/E,KAC1DiR,EAAS9B,GAAQC,OAAO3B,gBAAgBzN,KAE1CwE,MAAOQ,EAAMV,OAAOkB,aAAahB,OAAS,aAG9C,gBAAC,KAAD,CACE4c,UAAWtQ,GAAW6/B,EACtB11C,eAAgBiE,GAAOgyC,wBACvBt0C,OAAQ,CAAC,CAAEmJ,IAAK,MAAO1L,OAAQ,IAAKD,MAAO,UAE3C,gBAAC,GAAD,CACEwX,MAAM,eACN28B,WAAW,qEACX9pC,MAAOO,EAAMV,OAAOiB,eAAed,MACnC0wB,SAAU,SAACn1B,GACTiR,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,iBAAkB/E,KAC5DiR,EAAS9B,GAAQC,OAAOvB,eAAe7N,KAEzCwE,MAAOQ,EAAMV,OAAOiB,eAAef,OAAS,aAGhD,gBAAC,KAAD,CACE4c,UAAWtQ,GAAW6/B,EACtB11C,eAAgBiE,GAAOiyC,qBACvBv0C,OAAQ,CAAC,CAAEmJ,IAAK,MAAO1L,OAAQ,IAAKD,MAAO,UAE3C,gBAACwrB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK7L,KAAN,CACEpM,MAAM,oBAENkW,YAAY,4GACZ3V,QAAS,kBACPlB,EACE9B,GAAQF,MAAM9E,SAASpF,SAAS,CAC9B,yBACCC,EAAMV,OAAOoB,sBAAsBlB,UAI1CrH,KAAM,kBACJ,gBAAC4qB,GAAA,EAAD,CACE5V,QAAS,kBACPlB,EACE9B,GAAQF,MAAM9E,SAASpF,SAAS,CAC9B,yBACCC,EAAMV,OAAOoB,sBAAsBlB,UAI1C7I,OAAQqJ,EAAMV,OAAOoB,sBAAsBlB,MAAQ,UAAY,mBAMzE,gBAAC,KAAD,CACE4c,UAAWtQ,GAAW6/B,EACtB11C,eAAgBiE,GAAOiyC,qBACvBv0C,OAAQ,CAAC,CAAEmJ,IAAK,MAAO1L,OAAQ,IAAKD,MAAO,UAE3C,gBAACwrB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK7L,KAAN,CACEpM,MAAM,SACNkW,YAAY,qEACZ3V,QAAS,kBACPlB,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,YAAaC,EAAMV,OAAOqB,SAASnB,UAE/ErH,KAAM,kBACJ,gBAAC4qB,GAAA,EAAD,CACE5V,QAAS,kBACPlB,EACE9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,YAAaC,EAAMV,OAAOqB,SAASnB,UAGxE7I,OAAQqJ,EAAMV,OAAOqB,SAASnB,MAAQ,UAAY,oBAUlE,I,MAAMtF,GAASC,IAAWC,OAAO,CAC/B0xC,aAAc,CACZxvB,eAAgB,GAChBlnB,MAAO,QAET82C,wBAAyB,CACvB5vB,eAAgB,GAChBuT,UAAW,IACXz6B,MAAO,QAET+2C,qBAAsB,CACpBtc,UAAW,IACXvT,eAAgB,GAChBlnB,MAAO,QAETyvB,KAAM,CACJzR,QAAS,GACThe,MAAO,QAETkK,OAAQ,CACNwkB,SAAU,EACVtd,QAAS,OACTpR,MAAO,QAET+K,MAAO,CACLkc,aAAc,EACdjnB,MAAO,QAETg3C,UAAW,CACT5xC,YAAa,K,qkBC9QjB,IAAM6xC,GAAyB92B,aAAH,8UAsBtB+2B,GAA2B/2B,aAAH,++BAqDf,SAASg3B,KAAwB,IAAD,EACvCvsC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,YAC5C2Z,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C6B,EAAWV,KAGTpG,EADMylB,sBACaE,OAAnB3lB,SACF6N,EAAa+Y,2BAEnB,EAA0BjW,aAAgBu2B,GAAwB,CAChE13B,UAAW,CAAEiB,WAAY3R,OAAOkB,EAASnP,OADnCmf,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAId1V,aAAgB,WAAO,IAAD,EACpB,MAAI+e,GAAJ,SAAIA,EAAMhQ,WAAN,EAAgBnP,KAClBsB,QAAQC,IAAI,KAAM4d,EAAKhQ,UACvB8G,EAAS9B,GAAQF,MAAM9E,SAAS9E,QAAQ8U,EAAKhQ,cAE9C,OAACgQ,OAAD,EAACA,EAAMhQ,SAAP,MAAiBgQ,GAAjB,SAAiBA,EAAMhQ,eAAvB,EAAiB,EAAgBnP,GAAIiW,IAExC,MAA2CoI,aAAsBi4B,IAAjE,WAAOE,EAAP,KAA+Bz4B,EAA/B,KAEM0mB,EAASrkC,eAAkB,oFAAAG,EAAAC,OAAA,mDAC3Bi2C,GAAW,EADgB,EAY3BzsC,EAAMV,OATR1B,EAH6B,EAG7BA,KACA6C,EAJ6B,EAI7BA,OACAH,EAL6B,EAK7BA,WACAlJ,EAN6B,EAM7BA,IACAC,EAP6B,EAO7BA,IACAmJ,EAR6B,EAQ7BA,aACAD,EAT6B,EAS7BA,eACAG,EAV6B,EAU7BA,sBACAC,EAX6B,EAW7BA,UAGE,SAAC/C,EAAK4B,SAAL,EAAY2R,SAAU,SAAAvT,EAAK4B,YAAL,IAAY2R,QAAS,KAC9Cs7B,GAAW,EACXxgC,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,OAAQ,wBAGpDqsC,EAnB0B,4CAAAl2C,EAAA,MAqBNi2C,EAAuB,CAC1C73B,UAAW,CACT3e,GAAIiO,OAAM,MAACkB,OAAD,EAACA,EAAUnP,IACrB4H,KAAMA,EAAK4B,MACXpI,IAAKA,EAAIoI,MACTnI,IAAKA,EAAImI,MACTiB,OAAQA,EAAOjB,OAAS,KACxBgB,aAAcA,EAAahB,MAC3Be,eAAgBA,EAAef,MAC/BqgC,aAAc57B,OAAM,MAAC3D,GAAD,SAACA,EAAYd,YAAb,EAAC,EAAmBxJ,IACxC0K,wBAAyBA,EACzBC,WAAYA,MAhCW,UAoCrB,OAfAuU,EArBqB,SAoC3B,SAAAA,EAAQC,OAAR,WAAcu3B,iBAAd,WAA8Bt3B,cAA9B,EAA2Cjf,KAAI,YAAyB,IAAtBgK,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACvD,OAAQO,GACN,IAAK,aACL,IAAK,gBACH,OAAO8L,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,aAAcR,KACtE,IAAK,SACH,OAAOqM,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,SAAUR,KAClE,IAAK,gBACH,OAAOqM,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,eAAgBR,KACxE,IAAK,kBACH,OAAOqM,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,iBAAkBR,KAC1E,IAAK,2BACH,OAAOqM,EACL9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,wBAAyBR,KAEnE,IAAK,OACH,OAAOqM,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,OAAQR,KAChE,IAAK,YACH,OAAOqM,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,WAAYR,KACpE,QACE,OAAO,SAxDc,MA2DvBsV,GA3DuB,SA2DvBA,EAAQC,OA3De,SA2DvB,EAAcu3B,iBA3DS,SA2DvB,EAA8Br3B,UAA9B,EAAsClE,OA3Df,0CA4DlBlF,EACL9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAO,MAAEsV,GAAF,SAAEA,EAAQC,OAAV,SAAE,EAAcu3B,qBAAhB,EAAE,EAA8Br3B,OAAO,GAC9C3G,QAAS,YA/DY,eAmEvB,MAACwG,GAAD,SAACA,EAAQC,OAAT,SAAC,EAAcu3B,iBAAf,SAAC,EAA8Bt3B,cAA9B,EAA2CjE,QAE9C,SAAI+D,EAAOC,OAAX,SAAI,EAAau3B,iBAAb,EAA6BvnC,WAC/B8G,EACE9B,GAAQC,OAAOtB,YAAf,SACMgW,EAAYrX,iBAAmB,IADrC,MAEKyN,GAFL,SAEKA,EAAQC,OAFb,SAEK,EAAcu3B,qBAFnB,EAEK,EAA8BvnC,YAGrC8G,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,QACR8O,QAAS,aAGbsE,EAAWqiB,UAlFY,kBAqFpB,MArFoB,kCAuF3BppB,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAMA,QACf8O,QAAS,WA1Fc,iCA+FxB,MA/FwB,mEAgG9B,CACD1O,EAAMV,OACN2M,EACAugC,EAHC,MAIDrnC,OAJC,EAIDA,EAAUnP,GACV8oB,EAAYrX,gBACZuL,IAGF,OACE,gCACE,gBAAC2M,EAAA,EAAD,CAAaC,eAAa,EAAC5kB,MAAO8jB,EAAYhX,MAAMX,OAAOgB,OAAQ0J,QAAS/F,IAC5E,gBAAC8jB,GAAD,CACE/3B,MAAO,CAAEyF,gBAAiB,WAC1BulB,sBAAuB3oB,GAAOe,SAE9B,gBAACywC,GAAD,CAAc5/B,QAASA,IACvB,gBAAC,GAAD,CAAMjU,MAAOqC,GAAOoF,QAClB,gBAACyN,EAAA,EAAD,CACEG,KAAK,YACLF,SAAU+G,EAASjI,QACnBqB,QAASstB,EACT3uB,QAASiI,EAASjI,SAJpB,WAcV,IAAM5R,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNlP,gBAAiB,QACjBkJ,QAAS,QAEXvL,QAAS,CACPuL,QAAS,OACTsd,SAAU,EACVvoB,UAAW,SACXhB,WAAY,SACZnF,MAAO,OACP+5B,SAAU,IACV/b,QAAS,IAEXxG,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdmqB,UAAW,CACTlb,eAAgB,GAChBjnB,OAAQ,EACRD,MAAO,OAETkK,OAAQ,CACNlK,MAAO,OACPinB,aAAc,IAEhBlc,MAAO,CACLkc,aAAc,KCrQH,SAASqvB,KAAgB,IAAD,QAC/B1rC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMtI,SAC5CsK,EAAWV,KAEjB,OACE,gCACE,gBAACyO,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,MAAOQ,EAAMV,OAAO1B,KAAK4B,MACzBoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMtI,MAAM5B,SAAS,CAAC,OAAQ2e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO1B,KAAK6B,MAAQ,QAAU,QACnDO,EAAMV,OAAO1B,KAAK6B,OAAS,IAG9B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,eACNne,QAASO,EAAMV,OAAO4C,aAAazC,MACnCD,MAAOQ,EAAMV,OAAO4C,aAAa1C,MACjCoa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMtI,MAAM5B,SAAS,CAAC,eAAgB2e,QAG3D,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO4C,aAAazC,MAAQ,QAAU,QAC3DO,EAAMV,OAAO4C,aAAazC,OAAS,IAGtC,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,QACNne,QAASO,EAAMV,OAAO8C,MAAM3C,MAC5BD,MAAK,SAAEQ,EAAMV,OAAO8C,QAAf,SAAE,EAAoB5C,YAAtB,EAAE,EAA2Bmf,WAClCiE,YAAY,WACZhJ,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMtI,MAAM5B,SAAS,CAAC,QAASkE,OAAOya,SAG3D,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO8C,MAAM3C,MAAQ,QAAU,QACpDO,EAAMV,OAAO8C,MAAM3C,OAAS,IAG/B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,YACNne,QAASO,EAAMV,OAAO6C,SAAS1C,MAC/BD,MAAK,SAAEQ,EAAMV,OAAO6C,SAAS3C,YAAxB,EAAE,EAA6Bmf,WACpC1E,aAAa,aACbL,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMtI,MAAM5B,SAAS,CAAC,WAAYkE,OAAOya,SAG9D,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO6C,SAAS1C,MAAQ,QAAU,QACvDO,EAAMV,OAAO6C,SAAS1C,OAAS,uCAGlC,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,YACNne,QAASO,EAAMV,OAAOsC,SAASnC,MAC/BD,MAAK,SAAEQ,EAAMV,OAAOsC,eAAf,EAAE,EAAuBpC,MAAMmf,WACpC1E,aAAa,aACbL,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMtI,MAAM5B,SAAS,CAAC,WAAYkE,OAAOya,SAG9D,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOsC,SAASnC,MAAQ,QAAU,QACvDO,EAAMV,OAAOsC,SAASnC,OACrB,gEAMV,I,MAAMvF,GAASC,IAAWC,OAAO,CAC/BkF,OAAQ,CACNlK,MAAO,OACPoX,KAAM,GAERrM,MAAO,CACL/K,MAAO,OACPinB,aAAc,K,qkBCpFlB,I,MAAMswB,GAAwBp3B,aAAH,k/BAuDrBq3B,GAAwBr3B,aAAH,slCAsEZ,SAASs3B,GAAkB13C,GAA2B,IAAD,MAC1DkK,EAAkBlK,EAAlBkK,KAAM2gB,EAAY7qB,EAAZ6qB,QACRvY,EAAkBkO,KAClB3V,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMtI,SAC5CsK,EAAWV,KAEjB,EAAsC8I,aAAsBu4B,IAA5D,WAAOE,EAAP,KAA4B1yC,EAA5B,KACA,EAAsCia,aAAsBs4B,IAA5D,WAAOI,EAAP,KAA4BzK,EAA5B,KAEMrtB,EAAW7e,eAAkB,WACjC,IAAIq2C,GAAW,EAgBf,OAfKzsC,EAAMV,OAAO1B,KAAK4B,OAAS,IAAI2R,OAAS,IAC3Cs7B,GAAW,EACXxgC,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,OAAQ,yBAGjDJ,EAAMV,OAAO4C,aAAa1C,OAAS,IAAI2R,OAAS,IACnDs7B,GAAW,EACXxgC,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,eAAgB,gCAGzDJ,EAAMV,OAAOsC,SAASpC,QACzBitC,GAAW,EACXxgC,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,WAAY,mCAGlDqsC,IACP,CACDxgC,EACAjM,EAAMV,OAAOsC,SAASpC,MACtBQ,EAAMV,OAAO1B,KAAK4B,MAClBQ,EAAMV,OAAO4C,aAAa1C,QAGtBi7B,EAASrkC,eAAkB,8DAAAG,EAAAC,OAAA,qDACiDwJ,EAAMV,OAA9E1B,EADuB,EACvBA,KAAMsE,EADiB,EACjBA,aAAcN,EADG,EACHA,SAAUO,EADP,EACOA,SAAUC,EADjB,EACiBA,MAAOC,EADxB,EACwBA,qBAEjD0R,EAAW,SAAA/T,EAAMZ,WAAN,EAAgBpJ,GAAK+2C,EAAsBD,GAExD73B,IAL2B,4CAAA1e,EAAA,MAONwd,EAAS,CAC5BY,UAAU,SACJ,SAAA3U,EAAMZ,WAAN,EAAgBpJ,GAChB,CAAEA,GAAIiO,OAAOjE,EAAMZ,SAASpJ,KAC5B,CAAE4f,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,MAH7C,IAIP4H,KAAMA,EAAK4B,MACX0C,aAAcA,EAAa1C,MAC3B2C,SAAUA,EAAS3C,MACnBoC,SAAUA,EAASpC,MACnB4C,MAAOA,EAAM5C,MACb6C,qBAAsBA,EAAqB7C,WAjBpB,UAOrB0V,EAPqB,cAqBrBhV,EAAU,SAAAF,EAAMZ,WAAN,EAAgBpJ,GAAhB,MAAqBkf,GAArB,SAAqBA,EAAQC,WAA7B,EAAqB,EAAckW,YAAnC,MAAiDnW,GAAjD,SAAiDA,EAAQC,WAAzD,EAAiD,EAAc63B,cArBpD,SAuBvB9sC,EAASkV,eAAT,EAAsBjE,OAvBC,wBAwBzBjR,EAAQkV,YAAYtU,SAAQ,YAAyB,IAAtBX,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,QACpC,OAAQO,GACN,IAAK,YACH,OAAO8L,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,WAAYR,KACjE,IAAK,OACH,OAAOqM,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,OAAQR,KAC7D,IAAK,YACH,OAAOqM,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,WAAYR,KACjE,IAAK,QACH,OAAOqM,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,QAASR,KAC9D,IAAK,yBACH,OAAOqM,EACL9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,uBAAwBR,KAE/D,IAAK,eACH,OAAOqM,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,eAAgBR,KACrE,QACE,OAAO,SAzCY,2BA+C3B,MAAIM,GAAJ,SAAIA,EAASmV,SAAT,EAAiBlE,QACnBjR,EAAQmV,OAAOvU,SAAQ,SAAClB,GAAD,OACrBqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAIpE,MAAIxO,KAASyB,QACLA,EADY,MACJzB,OADI,EACJA,EAASyB,MACvBsK,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,eAAgB+B,EAAM/D,KAC9B8Q,QAAS,aAGbsR,IACA/T,EAAS9B,GAAQF,MAAMtI,MAAM1E,UA9DJ,kDAiE3BgP,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAMA,QACf8O,QAAS,WApEc,mEAyE9B,OACDjH,GADC,SACDA,EAAiBtC,eADhB,EACD,EAA2BnP,GAC3BiW,EACA6gC,EACAC,EACA/sB,EACAhgB,EAAMV,OANL,SAODU,EAAMZ,eAPL,EAOD,EAAgBpJ,GAChBif,IAGIulB,EAAapkC,WAAc,iBAAM,CAAC,IAAK,SAAQ,IAC/CspC,EAAgBtpC,eAAkB,WACtC4pB,IACA/T,EAAS9B,GAAQF,MAAMtI,MAAM1E,WAC5B,CAACgP,EAAU+T,IAEd,OACE,gBAACia,GAAD,CACErtB,MAAO,SAAA5M,EAAMZ,WAAN,EAAgBpJ,GAAK,gBAAkB,eAC9CqJ,KAAMA,EACNm7B,WAAYA,EACZN,YAAY,OACZC,aAAcM,EACd3uB,QAAS1R,EAAO0R,SAAWw2B,EAAOx2B,QAClCkU,QAAS0f,GAET,gBAAC,GAAD,OC7PN,IAAMnmB,GAAehE,aAAH,qSAkBZ03B,GAAwB13B,aAAH,mZAsBZ,SAAS23B,KAAgB,IAAD,YAC/B9iC,EAASqB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACvCpK,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMtI,SAClD,EAAmCmU,aAAgByD,GAAc,CAC/D5E,UAAW,CACTiB,WAAY3R,OAAOmG,EAAO1C,sBAFtByN,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAMvB,EAAsB7G,aAAsB44B,IAArCE,EAAP,YACMlhC,EAAWV,KAEX4wB,EAAYC,0BAElBhmC,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IAEf,IAAMkyB,EAAiB91B,GAAezY,EAAWwuC,aAC3CC,EAAiBh2B,GAAezY,EAAW0uC,aAEjD,OACE,gCACE,gBAAC3d,GAAD,CACE9C,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY9gB,EAAS+gB,UAAW3R,KAEhE,gBAACyE,EAAA,EAAD,CAAa9N,QAAS/F,EAAS9Q,MAAOoP,EAAOtC,MAAMX,OAAOgB,SAErD,MAAJgN,GAAA,SAAAA,EAAMhQ,WAAN,WAAgBsU,SAAhB,EAAwBtI,OAAS,KAChC,gBAAC8Q,GAAD,CACErV,MAAM,aACNsV,SAAS,0DAIZ,MAAC/M,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgBsU,SAAhB,EAAwBtI,OACxB,gBAAC+nB,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUrZ,MAAX,aACA,gBAACqZ,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,gBACA,gBAACD,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,UAJJ,MAMGhkB,GANH,SAMGA,EAAMhQ,WANT,SAMG,EAAgBsU,aANnB,EAMG,EAAwBtjB,KAAI,SAACwL,GAAD,OAC3B,gBAACw2B,GAAD,CACEp3B,IAAG,SAAWY,EAAM3L,GACpBgX,UAAWogC,EACXhV,YAAa,CACXxa,MAAO,SACPtgB,gBAAiB,MACjB6P,QAAS,gCAAA5W,EAAAC,OAAA,kEAAAD,EAAA,MACwB42C,EAAY,CACzCx4B,UAAW,CAAE3e,GAAIiO,OAAOtC,EAAM3L,QAFzB,gBAKP,OAJckf,EADP,EACCC,OAIR,SAAID,EAAQi4B,cAAZ,SAAI,EAAqB93B,SAArB,EAA6BlE,QAC/BlF,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAASsV,EAAOi4B,YAAY93B,OAAO,GACnC3G,QAAS,WATR,+DAgBX,gBAACwqB,GAAA,EAAUG,IAAX,CACEhhC,cAAc,OACd8U,QAAS,WACPlB,EAAS9B,GAAQF,MAAMtI,MAAMtB,QAAQsB,MAGvC,gBAACu3B,GAAA,EAAUI,KAAX,KAAiB33B,EAAM/D,MACvB,gBAACs7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAEx3B,EAAMO,cAC/B,gBAACg3B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAEx3B,EAAMC,gBAtCN,KA6CnC,gBAACkmB,GAAA,EAAD,CACEjwB,MAAOqC,GAAOmoB,IACdxQ,QAASy7B,EACTx1B,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMtI,MAAMtB,SAAQ,KACpDud,MAAM,eAGV,gBAAC,GAAD,CAAave,KAAMW,EAAMX,KAAM2gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMtI,MAAMtB,SAAQ,QAKzF,I,MAAMnG,GAASC,IAAWC,OAAO,CAC/Ba,QAAS,CACP6oB,SAAU,GAEZzB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACNjS,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,U,qkBCxJG,SAASm4C,GAAkBr4C,GACxC,IAAMs4C,EAAan2B,GAAezY,EAAWsjC,mBACrC3iC,EAA4BrK,EAA5BqK,MAAO2wB,EAAqBh7B,EAArBg7B,SAAUle,EAAW9c,EAAX8c,OAEzB,OAAU,MAANA,KAAQy7B,WAAmC,YAAhB,MAANz7B,OAAA,EAAAA,EAAQy7B,WAE7B,gBAACvwC,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,KAAM,IACnB,gBAACwN,GAAA,EAAD,CACE9M,KAAK,WACLF,UAAWygC,EACX51C,MAAO,CAAEykB,eAAgB,GACzB9c,MAAOA,EACPoa,aAAc,SAACzJ,GAAD,OAAUggB,EAAS,SAAKle,GAAN,IAAczS,MAAO2Q,MACrDyN,MAAO3L,EAAO2L,OAAS,KAEzB,gBAACO,GAAA,EAAD,CAAYC,KAAK,QAAQnM,EAAO6Q,aAAe,mBAI3C,MAAN7Q,KAAQy7B,WAAmC,aAAhB,MAANz7B,OAAA,EAAAA,EAAQy7B,WAE7B,gBAAC,KAAK10B,KAAN,CACEpM,MAAOqF,EAAO2L,OAAS,GACvB5Q,UAAWygC,EACX3qB,YAAa7Q,EAAO6Q,YACpBjrB,MAAO,CAAEykB,eAAgB,GACzBpC,MAAO,kBAAM,gBAAC6I,GAAA,EAASma,QAAV,CAAkBvmC,OAAQ6I,EAAQ,UAAY,eAC3D2N,QAAS,kBAAMgjB,EAAS,SAAKle,GAAN,IAAczS,OAAQA,QAIzC,MAANyS,KAAQy7B,WAAmC,aAAhB,MAANz7B,OAAA,EAAAA,EAAQy7B,WAE7B,gBAACvwC,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,KAAM,IACnB,gBAACwN,GAAA,EAAD,CACEhN,UAAWygC,EACXjuC,MAAOA,EACP0N,KAAK,WACL0M,aAAc,SAACzJ,GAAD,OAAUggB,EAAS,SAAKle,GAAN,IAAczS,MAAO2Q,MACrDyN,MAAO3L,EAAO2L,OAAS,GACvB3D,aAAa,aACbpiB,MAAO,CAAEykB,eAAgB,KAE3B,gBAAC6B,GAAA,EAAD,CAAYC,KAAK,QAAQnM,EAAO6Q,aAAe,mBAI3C,MAAN7Q,KAAQy7B,WAAmC,UAAhB,MAANz7B,OAAA,EAAAA,EAAQy7B,WAE7B,gBAACvwC,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,KAAM,IACnB,gBAAC4wB,GAAD,CACEpwB,UAAWygC,EACXpQ,UAAWp5B,OAAOzE,GAClB2wB,SAAQ,+GAAE,SAAC6N,GAAD,OACR7N,EAAS,SACJle,GADG,IAENzS,MAAOw+B,EAAKrf,iBAGhBf,MAAO3L,EAAO2L,OAAS,KAEzB,gBAACO,GAAA,EAAD,CAAYC,KAAK,QAAQnM,EAAO6Q,aAAe,mBAK9C,K,qkBC9DM,SAAS6qB,KAA6B,IAAD,EAC5C3tC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzE,yBAClD,EAA8BpP,WAC5B,MADF,WAAOw3C,EAAP,KAAgBC,EAAhB,KAGA,EAA8Bz3C,YAAe,GAA7C,WAAO03C,EAAP,KAAgBC,EAAhB,KAEM9hC,EAAWV,KAEjB,OACE,yCACGvL,EAAMV,aADT,EACG,EAAcnJ,KAAI,SAAC4M,EAAMD,GACxB,OAEE,gBAAC,WAAD,CAAgB/B,IAAG,GAAKgC,EAAK2qC,UAAY5qC,GACvC,gBAAC3F,EAAA,QAAD,CACEtF,MAAO,CACL2O,QAAS,OACTtL,cAAe,MACfX,WAAY,WAGd,gBAAC4C,EAAA,QAAD,CAAMtF,MAAO,CAAEisB,SAAU,GAAKnG,WAAY,kBAAMkwB,EAAW,SAAK9qC,GAAN,IAAYD,aACpE,gBAAC0qC,GAAD,CAAmBv7B,OAAQlP,EAAMvD,OAAW,MAAJuD,OAAA,EAAAA,EAAMvD,QAAS,GAAI2wB,SAAU,kBAAM,SAE7E,gBAACvG,GAAA,EAAD,CACEnR,KAAK,SACLtL,QAAS,kBACPlB,EACE9B,GAAQF,MAAMzE,sBAAsBvC,UAClCjD,EAAMV,OAAOud,QAAO,SAAC1N,EAAG/K,GAAJ,OAAUA,IAAMtB,WAM9C,gBAAC0b,GAAA,EAAD,UAIN,gBAACgB,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAQ5N,UAAW+7B,GACjB,gBAACnuB,GAAA,EAAOI,MAAR,kBACA,gBAACJ,GAAA,EAAOsB,QAAR,KACE,gBAAC/G,GAAA,EAAD,CACE4D,MAAM,OACN1Q,KAAK,WACL1N,MAAK,MAAEouC,OAAF,EAAEA,EAAShwB,MAChBhE,aAAc,SAACzJ,GAAD,OAAU09B,EAAW,SAAKD,GAAN,IAAehwB,MAAOzN,QAG1D,gBAAC6J,GAAA,EAAD,CACE4D,MAAM,cACNgF,YAAY,WACZ1V,KAAK,WACL1N,MAAK,MAAEouC,OAAF,EAAEA,EAAS9qB,YAChBlJ,aAAc,SAACzJ,GAAD,OAAU09B,EAAW,SAAKD,GAAN,IAAe9qB,YAAa3S,QAGhE,gBAAC4S,GAAA,EAAS/J,KAAV,CACE4E,MAAM,2BACN1Q,KAAK,UACLC,QAAS,kBAAM0gC,EAAW,SAAKD,GAAN,IAAer6B,aAAY,MAACq6B,KAASr6B,gBAC9D5c,OAAe,MAAPi3C,KAASr6B,WAAa,UAAY,eAG9C,gBAACkM,GAAA,EAAOM,QAAR,KACE,gBAAChT,EAAA,EAAD,CAAQI,QAAS,kBAAM0gC,EAAW,QAAlC,UACA,gBAAC9gC,EAAA,EAAD,CACEI,QAAS,gBACgBpV,KAAZ,MAAP61C,OAAA,EAAAA,EAAS9qC,OAEXmJ,EACE9B,GAAQF,MAAMzE,sBAAsBvC,UAClCjD,EAAMV,OAAOnJ,KAAI,SAACgK,EAAO6C,GAAR,OACfA,IAAQ4qC,EAAQ9qC,MAAQ8qC,EAAUztC,OAKxC8L,EACE9B,GAAQF,MAAMzE,sBAAsBvC,UAApC,eACKjD,EAAMV,QADX,CAEEsuC,MAINC,EAAW,QAnBf,UA0BJ,gBAAC/lB,GAAA,EAAIC,MAAL,CACE1oB,KAAMyuC,EACNj8B,SAAO,EACP4G,KAAMq1B,EAAU,QAAU,OAC1B9lB,SAAU,CACRC,WAAY,GACZ5L,aAAc,IAEhBlS,QAAS,CACP,CACEsO,KAAM,SACNmF,MAAO,OACPzQ,QAAS,kBAAM0gC,EAAW,CAAEH,UAAW,aAEzC,CACEj1B,KAAM,WACNmF,MAAO,OACPzQ,QAAS,kBAAM0gC,EAAW,CAAEH,UAAW,WAEzC,CACEj1B,KAAM,UACNmF,MAAO,SACPzQ,QAAS,kBAAM0gC,EAAW,CAAEH,UAAW,cAEzC,CACEj1B,KAAM,iCACNmF,MAAO,WACPzQ,QAAS,kBAAM0gC,EAAW,CAAEH,UAAW,eAG3CxlB,cAAe,gBAAG7oB,EAAH,EAAGA,KAAH,OAAc0uC,EAAW1uC,QClIlD,I,MAAM2uC,GAAuBz4B,aAAH,gNAapB04B,GAAuB14B,aAAH,6ZAmBX,SAAS24B,KAA+B,IAAD,MAC9CluC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzE,yBAC5CiC,EAAkBkO,KAClB1J,EAAWV,KACT4J,EAASW,aAAgBk4B,GAAsB,CACrDr5B,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,OAF1Cmf,KAMFuU,EAAUpS,GAAezY,EAAW2oC,oBAC1C,EAAuCnzB,aAAsB45B,IAA7D,WAAOE,EAAP,KAA2Bp6B,EAA3B,KAEA3d,aAAgB,WAAO,IAAD,EACpB,MAAI+e,GAAJ,SAAIA,EAAMhQ,WAAN,EAAgBK,uBAClByG,EAAS9B,GAAQF,MAAMzE,sBAAsBnF,QAAQ8U,EAAKhQ,SAASK,0BAEpE,OAAC2P,OAAD,EAACA,EAAMhQ,SAASK,sBAAuByG,IAE1C,IAAMmiC,EAAah4C,eAAkB,4BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAE3B43C,EAAmB,CACvBx5B,UAAW,CACT05B,OAAQpqC,OAAM,MAACkR,GAAD,SAACA,EAAMhQ,SAASK,4BAAhB,EAAC,EAAsCxP,IACrD4f,WAAY3R,OAAM,MAACkR,GAAD,SAACA,EAAMhQ,eAAP,EAAC,EAAgBnP,IACnCoN,WAAYF,KAAK8L,UAAUhP,EAAMV,YANJ,OASjC2M,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,iBACT8O,QAAS,aAZoB,+CAgBjCzC,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAMA,QACf8O,QAAS,WAnBoB,iEAuBlC,CACDy/B,EADC,MAEDh5B,GAFC,SAEDA,EAAMhQ,SAASK,4BAFd,EAED,EAAsCxP,GAFrC,MAGDmf,GAHC,SAGDA,EAAMhQ,eAHL,EAGD,EAAgBnP,GAChBgK,EAAMV,OACN2M,IAGF,OACE,gBAAC2jB,GAAD,KACE,gBAAChP,GAAA,EAAD,CAAM/oB,MAAO,CAAEzC,MAAO,SACpB,gBAACwrB,GAAA,EAAKf,MAAN,CAAYjT,MAAM,iCAElB,gBAACgU,GAAA,EAAKG,QAAN,KACE,gBAAC4sB,GAAD,OAGF,gBAAC/sB,GAAA,EAAKb,QAAN,KACE,gBAAChT,EAAA,EAAD,CACEC,UAAW0c,EACXxc,KAAK,YACLpB,QAASiI,EAASjI,QAClBqB,QAAS,kBAAMihC,KACfv2C,MAAO,CAAEzC,MAAO,SALlB,oBCzFV,IAAMk5C,GAAsB/4B,aAAH,+TAoBnBg5B,GAAsBh5B,aAAH,mvBAyCV,SAASi5B,KAAsB,IAAD,IACrCxuC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCqkC,EAAUhjC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMxG,OACpD,EAAmCqS,aAAgBw4B,GAAqB,CACtE35B,UAAW,CACTiB,WAAY3R,OAAOjE,EAAM0H,sBAFrByN,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAKjBjP,EAAWV,KACX4wB,EAAYC,0BAClB,EAAwC/nB,aAAsBk6B,IAA9D,WAAOG,EAAP,KAA0BC,EAA1B,KAEMC,EAAet3B,GAAezY,EAAWgwC,mBAQ/C,OANAz4C,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IAGb,gBAAC0U,GAAD,CACE/3B,MAAOqC,GAAOG,UACdwoB,sBAAuB,CAAC3oB,GAAOe,QAAS,CAAEqC,gBAAiB,UAC3DwvB,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY9gB,EAAS+gB,UAAW,kBAAM3R,QAEtE,gBAACyE,EAAA,EAAD,CAAa9N,QAAS/F,GAAW6iC,EAAW7iC,QAAS9Q,MAAOgF,EAAM8H,MAAMX,OAAOgB,SAC/E,gBAAC+wB,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUrZ,MAAX,kBACA,gBAACqZ,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,cACA,gBAACD,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,eACA,gBAACD,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,QACA,gBAACD,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,WANJ,MASGhkB,GATH,SASGA,EAAMhQ,WATT,SASG,EAAgBP,WATnB,EASG,EAAsBzO,KAAI,SAACsN,GAAD,OACzB,gBAACy1B,GAAA,EAAUG,IAAX,CAAet4B,IAAG,OAAS0C,EAAIzN,IAC7B,gBAACkjC,GAAA,EAAUI,KAAX,CACEnsB,QAAS,WACPlB,EAAS9B,GAAQF,MAAMxG,IAAIpD,QAAQoD,MAGpC,OAACA,OAAD,EAACA,EAAKnB,KAAN,MAAYmB,OAAZ,EAAYA,EAAKlB,MAAjB,WAA4BkB,OAA5B,EAA4BA,EAAKjB,SAAU2zB,KAAK,MAEnD,gBAAC+C,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACjB,MAAH11B,KAAKhB,gBAAkB+4B,aAA6B,IAAtB/3B,EAAIhB,gBAAwB,cAAgB,KAE7E,gBAACy2B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,UAA4B11B,OAA5B,EAA4BA,EAAKf,aACjC,gBAACw2B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAE11B,EAAId,SAC7B,gBAACu2B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GACrB,gBAAC,IAAD,CACE0P,cAAe,gCAAAtyC,EAAAC,OAAA,kEAAAD,EAAA,MACkBm4C,EAAkB,CAC/C/5B,UAAW,CACT3e,GAAIiO,OAAOR,EAAIzN,IACf2K,UAAW8C,EAAI9C,aAJN,gBAQb,OAPcuU,EADD,EACLC,OAOR,SAAID,EAAQgqB,YAAZ,SAAI,EAAmB7pB,SAAnB,EAA2BlE,QAC7BlF,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAO,MAAEsV,OAAF,EAAEA,EAAQgqB,UAAU7pB,OAAO,GAClC3G,QAAS,WAZF,6DAiBflP,QAASiE,EAAI9C,iBAOvB,gBAAC4+B,GAAD,CACEvf,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,KAClD+T,UAAW,WACTnI,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,IACnC6a,KAEFtF,WAAY3R,OAAOjE,EAAM0H,mBACzBrI,KAAMovC,EAAQpvC,OAGhB,gBAACyoB,GAAA,EAAD,CACEjW,QAAS+8B,EACT/2C,MAAOqC,GAAOmoB,IACdvK,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,KAClDud,MAAM,aAMd,I,GAAM1jB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNhG,QAAS,QAEXvL,QAAS,CACP6oB,SAAU,GAEZzB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACNjS,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,U,qkBClLZ,I,GAAMy5C,GAAuBv5B,aAAH,qWAiBX,SAASw5B,GAAmB55C,GACzC,IAAQyX,EAA6CzX,EAA7CyX,MAAOkW,EAAsC3tB,EAAtC2tB,YAAa5hB,EAAyB/L,EAAzB+L,KAAMugC,EAAmBtsC,EAAnBssC,eAC5BuN,EAAuB13B,GAAezY,EAAWi/B,iBACvD,EAAmCzpB,aAAsBy6B,IAAlDG,EAAP,YACMhjC,EAAWV,KAEjB,OACE,gBAAC,KAAKyN,KAAN,CACEhM,UAAWgiC,EACXn3C,MAAO,CAAEzC,MAAO,QAChB8kB,MAAO,kBACL,gBAAC0uB,GAAA,EAAD,CACEppC,MAAO0B,EAAKyG,YAAYgQ,SAAS8pB,GACjCoH,cAAe,sCAAAtyC,EAAAC,OAAA,kEAAAD,EAAA,MACQ04C,EAAyB,CAC5Ct6B,UAAW,CACTu6B,OAAQjrC,OAAO/C,EAAKlL,IACpByrC,iBACAnJ,SAAUp3B,EAAKyG,YAAYgQ,SAAS8pB,IAEtC0N,mBAAoB,CAClBC,WAAY,CACVluC,KAAK,SACAA,GADD,IAEFyG,YAAczG,EAAKyG,YAAYgQ,SAAS8pB,GAA3B,eAELvgC,EAAKyG,aAFA,CAEa85B,IADtBvgC,EAAKyG,YAAYkV,QAAO,SAACjf,GAAD,OAAUA,IAAS6jC,YAZ1C,OAmBb,OAlBMvsB,EADO,SAmBb,SAAIA,EAAQC,OAAZ,SAAI,EAAci6B,aAAlB,SAAI,EAA0B/5B,SAA1B,EAAkClE,SAC9B,MAAN+D,GAAA,SAAAA,EAAQC,OAAR,WAAci6B,aAAd,WAA0B/5B,SAA1B,EAAkClf,KAAI,SAACyJ,GAAD,OACpCqM,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,UACA8O,QAAS,eAxBJ,gEAgCb9B,QAAOkW,gB,qkBC9DnB,IAAMusB,GAA6B95B,aAAH,qMAuFjB,SAAS+5B,KAA4B,IAAD,QAC3CtvC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C,EAAmC0L,aAAgBu5B,GAA4B,CAC7E16B,UAAW,CACTiB,WAAY3R,OAAOjE,EAAM0H,sBAFrByN,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAKjBihB,EAAYC,0BAQlB,OANAhmC,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IAERpP,GAAW,MAACqJ,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgBw4B,SAAhB,EAAuBxsB,OACxC,gBAAC,KAAD,CACEiL,WAAS,EACTnmB,eAAgB,CACd6tB,SAAU,EACVxpB,kBAAmB,IAErB1C,OAAQ,CACN,CACEmJ,IAAK,QACL1L,OAAQ,IACRge,UAAW,GACXgJ,aAAc,GACdjnB,MAAO,QAET,CAAE2L,IAAK,SAAU1L,OAAQ,IAAKgnB,aAAc,GAAIjnB,MAAO,QACvD,CAAE2L,IAAK,QAAS1L,OAAQ,IAAKgnB,aAAc,GAAIjnB,MAAO,QACtD,CAAE2L,IAAK,SAAU1L,OAAQ,IAAKgnB,aAAc,GAAIjnB,MAAO,QACvD,CAAE2L,IAAK,QAAS1L,OAAQ,IAAKgnB,aAAc,GAAIjnB,MAAO,WAI1D,gBAAC,KAAD,CACEsuB,aAAc,EACdxW,KAAK,aACLpF,MAAK,SACA9H,EAAM8H,OADN,IAEHX,OAAO,SACFnH,EAAM8H,MAAMX,QADX,IAEJC,QAASpH,EAAM+H,QAAQX,QAAQc,WAPrC,MAWGiN,GAXH,SAWGA,EAAMhQ,WAXT,SAWG,EAAgBw4B,YAXnB,EAWG,EAAuBxnC,KAAI,SAAC+K,GAAD,aAC1B,gBAAC,KAAD,CACE0c,MAAOsnB,sBAAU,SAAChkC,EAAKtD,WAAN,EAAC,EAAWsV,QAAQ,IAAK,MAC1CnS,IAAG,uBAAyBG,EAAKlL,IAEjC,gBAAC45B,GAAD,CACE/M,sBAAuB,CACrBsM,SAAU,IACV/5B,MAAO,OACPmG,UAAW,WAGb,gBAACqlB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK9H,UAAN,wBACA,gBAACgyB,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,WACf3e,YAAY,6BACZlW,MAAM,eAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,aACf3e,YAAY,qBACZlW,MAAM,kBAIV,gBAACgU,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK4iB,QAAN,CAAc76B,MAAM,WAAW/U,MAAO,CAAEzC,MAAO,SAC7C,gBAAC,KAAKm6C,UAAN,CAAgB3iC,MAAM,SACpB,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,WACf3e,YAAY,6CACZlW,MAAM,cAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,aACf70B,MAAM,iBAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,aACf3e,YAAY,gEACZlW,MAAM,iBAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,aACf3e,YAAY,oCACZlW,MAAM,iBAIV,gBAAC,KAAK2iC,UAAN,CAAgB3iC,MAAM,eACpB,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,aACf3e,YAAY,yCACZlW,MAAM,kBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,aACf3e,YAAY,+CACZlW,MAAM,oBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,aACf3e,YAAY,+BACZlW,MAAM,oBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,iBACf3e,YAAY,8CACZlW,MAAM,0BAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,yBACf3e,YAAY,iEACZlW,MAAM,wBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,iBACf3e,YAAY,wCACZlW,MAAM,4BAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,iBACf3e,YAAY,uCACZlW,MAAM,6BAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,oBACf3e,YAAY,+BACZlW,MAAM,sBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,oBACf3e,YAAY,gDACZlW,MAAM,yBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,oBACf3e,YAAY,8BACZlW,MAAM,4BAKd,gBAACgU,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK4iB,QAAN,CAAc76B,MAAM,iBAAiB/U,MAAO,CAAEzC,MAAO,SACnD,gBAAC,KAAKm6C,UAAN,CAAgB3iC,MAAM,YACpB,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,iBACf3e,YAAY,iDACZlW,MAAM,oBAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,iBACf3e,YAAY,8BACZlW,MAAM,qBAIV,gBAAC,KAAK2iC,UAAN,CAAgB3iC,MAAM,gBACpB,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,mBACf3e,YAAY,0BACZlW,MAAM,kBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,mBACf3e,YAAY,0DACZlW,MAAM,mBAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,mBACf3e,YAAY,+BACZlW,MAAM,oBAIV,gBAAC,KAAK2iC,UAAN,CAAgB3iC,MAAM,iBACpB,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,cACf3e,YAAY,2BACZlW,MAAM,wBAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,cACf3e,YAAY,2DACZlW,MAAM,yBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,cACf3e,YAAY,gCACZlW,MAAM,0BAIV,gBAAC,KAAK2iC,UAAN,CAAgB3iC,MAAM,UACpB,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,cACf3e,YAAY,oBACZlW,MAAM,oBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,cACf3e,YAAY,qCACZlW,MAAM,oBAGR,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,cACf3e,YAAY,4BACZlW,MAAM,qBAIV,gBAAC,KAAK2iC,UAAN,CAAgB3iC,MAAM,QACpB,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,oBACf3e,YAAY,4DACZlW,MAAM,eAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,oBACf3e,YAAY,mDACZlW,MAAM,gBAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,oBACf3e,YAAY,0CACZlW,MAAM,gBAER,gBAACmiC,GAAD,CACE7tC,KAAMA,EACNugC,eAAe,qBACf3e,YAAY,8CACZlW,MAAM,wCAY1B,I,MAAM1S,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNhG,QAAS,QAEXqe,KAAM,CACJzvB,MAAO,OACPknB,eAAgB,IAElBrhB,QAAS,CACP6oB,SAAU,GAEZzB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACNjS,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,UCzZNm6C,GAAmBj6B,aAAH,s9BA0DP,SAASk6B,KAA2B,IAAD,QAC1ChoC,EAAkBkO,KACxB,EAAkCvf,WAAe4f,aAAW,IAAIC,MAAQC,WAAxE,WAAOmnB,EAAP,KAAkBqS,EAAlB,KACM18B,EAAa+Y,2BAEnB31B,mBAAsB,WACpB4c,EAAWqpB,WAAW,CACpBtF,YAAa,kBACX,gBAACqG,GAAD,CACEjN,SAAU,SAAC6N,GAAD,OAAU0R,EAAoB,IAAP1R,IACjCX,UAAWA,EAAY,IACvBriC,MAAM,iBAIX,CAACgY,EAAYqqB,IAEhB,IAAQloB,EAASW,aAAgB05B,GAAkB,CACjD76B,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9CqnC,UAAWrkC,KAAKszB,MAAM+Q,EAAY,QAH9BloB,KAOR,OACE,gBAACya,GAAD,KACE,gBAACzyB,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,UADxB,MAEG+f,GAFH,SAEGA,EAAMhQ,WAFT,SAEG,EAAgBwqC,YAFnB,SAEG,EAA2B/S,YAF9B,EAEG,EAAkCzmC,KAAI,SAACqN,GAAD,2BACrC,gBAACod,GAAA,EAAD,CAAM/oB,MAAO,CAAEzC,MAAO,OAAQknB,eAAgB,KAC5C,gBAACsE,GAAA,EAAKf,MAAN,CAAYjT,MAAK,QAAUpJ,EAAKwmB,aAChC,gBAACpJ,GAAA,EAAKG,QAAN,KACE,gBAAC,KAAK/H,KAAN,CAAWpM,MAAM,QAAQkW,YAAW,MAAEtf,GAAF,SAAEA,EAAM9B,QAAR,SAAE,EAAa8C,WAAf,EAAE,EAAmB5G,OACzD,gBAAC,KAAKob,KAAN,CAAWpM,MAAM,MAAMkW,YAAW,MAAEtf,GAAF,SAAEA,EAAMlC,MAAR,SAAE,EAAWkD,WAAb,EAAE,EAAiB5G,OACrD,gBAAC,KAAKob,KAAN,CACEpM,MAAM,QACNkW,YACM,MAAJtf,GAAA,SAAAA,EAAM7B,QAAN,EAAa3L,IAAb,MACOwN,GADP,SACOA,EAAM7B,YADb,EACO,EAAa/D,MADpB,YAC6B4F,GAD7B,SAC6BA,EAAM7B,YADnC,EAC6B,EAAaO,cAD1C,IAEI,sBAGR,gBAACg3B,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUrZ,MAAX,aACA,gBAACqZ,GAAA,EAAUrZ,MAAX,kBACA,gBAACqZ,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,aAJJ,SAOG31B,EAAK2V,YAPR,EAOG,EAAYhjB,KAAI,SAAC6N,GAAD,iBACf,gBAACk1B,GAAA,EAAUG,IAAX,KACE,gBAACH,GAAA,EAAUI,KAAX,cAAiBt1B,EAAKQ,WAAtB,EAAiB,EAAW5G,MAC5B,gBAACs7B,GAAA,EAAUI,KAAX,cAAiBt1B,EAAKV,eAAtB,EAAiB,EAAe1F,MAChC,gBAACs7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,SAAyBn1B,EAAKN,iBAA9B,EAAyB,EAAiBe,qBChH5D,IAAMmrC,GAAqBr6B,aAAH,gQAiBT,SAASs6B,KAAa,IAAD,MAC5B7vC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5E,SAC5C4G,EAAWV,KACX9D,EAAkBkO,KAChBR,EAASW,aAAgB85B,GAAoB,CACnDj7B,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,OAF1Cmf,KAMR,OACE,gCACE,gBAAC6E,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,MAAOQ,EAAMV,OAAO1B,KAAK4B,OAAS,GAClCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM5E,MAAMtF,SAAS,CAAC,OAAQ2e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO1B,KAAK6B,MAAQ,QAAU,QACnDO,EAAMV,OAAO1B,KAAK6B,OAAS,IAG9B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,QACNne,QAASO,EAAMV,OAAO8B,KAAK3B,MAC3BD,MAAK,SAAEQ,EAAMV,OAAO8B,OAAf,SAAE,EAAmB5B,YAArB,EAAE,EAA0Bmf,WACjC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM5E,MAAMtF,SAAS,CAAC,OAAQkE,OAAOya,SAG1D,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO8B,KAAK3B,MAAQ,QAAU,QACnDO,EAAMV,OAAO8B,KAAK3B,OAAS,IAG9B,gBAACtC,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC,KAAK2nB,UAAN,2BADF,MAEG5H,OAFH,EAEGA,EAAM9T,YAAYlL,KAAI,SAAC25C,GAAD,aACrB,gBAAC/sB,GAAA,EAAS/J,KAAV,CACE4E,MAAOkyB,EAAOlyC,MAAQ,GACtBjH,OACE,SAAAqJ,EAAMV,OAAO+B,YAAY7B,QAAzB,EAAgCrJ,KAAI,qBAAGH,MAAa2hB,SAASm4B,EAAO95C,IAChE,UACA,YAENmX,QAAS,0BACPlB,EACE9B,GAAQF,MAAM5E,MAAMtF,SAAS,CAC3B,cACA,SAAAC,EAAMV,OAAO+B,YAAY7B,QAAzB,EAAgCrJ,KAAI,qBAAGH,MAAa2hB,SAASm4B,EAAO95C,IAApE,SACIgK,EAAMV,OAAO+B,YAAY7B,YAD7B,EACI,EAAgCqd,QAAO,qBAAG7mB,KAAgB85C,EAAO95C,MADrE,eAESgK,EAAMV,OAAO+B,YAAY7B,OAAS,IAF3C,CAEgDswC,eAWlE,I,GAAM51C,GAASC,IAAWC,OAAO,CAC/BkF,OAAQ,CACNlK,MAAO,OACPoX,KAAM,GAERrM,MAAO,CACLkc,aAAc,EACdjnB,MAAO,UCnFL26C,GAAwBx6B,aAAH,kkBAmCZ,SAASy6B,KAAqB,IAAD,IACpCvoC,EAAkBkO,KAClB3V,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5E,SAC5C4G,EAAWV,KAEXyH,EAAa+Y,2BAEX1mB,EADMulB,sBACUE,OAAhBzlB,MAERjP,aAAgB,WACd6V,EAAS9B,GAAQF,MAAM5E,MAAMhF,QAAQgF,MACpC,CAAC4G,EAAU5G,EAAOA,EAAMrP,KAE3B,MAAoCqe,aAAsB07B,IAA1D,WAAOE,EAAP,KAA4B96B,EAA5B,KAEMF,EAAW7e,eAAkB,WAAgB,IAAD,EAC5Cq2C,GAAW,EAWf,QAVK,SAAAzsC,EAAMV,OAAO1B,KAAK4B,YAAlB,IAAyB2R,SAAU,GAAK,IAC3Cs7B,GAAW,EACXxgC,EAAS9B,GAAQF,MAAM5E,MAAMjF,cAAc,CAAC,OAAQ,wBAGlD6D,OAAOjE,EAAMV,OAAO8B,KAAK5B,OAAS,IACpCitC,GAAW,EACXxgC,EAAS9B,GAAQF,MAAM5E,MAAMjF,cAAc,CAAC,OAAQ,8BAG9CqsC,IACP,CAACzsC,EAAMV,OAAQ2M,IAEZwuB,EAASrkC,eAAkB,4CAAAG,EAAAC,OAAA,qDACKwJ,EAAMV,OAAlC1B,EADuB,EACvBA,KAAMwD,EADiB,EACjBA,KAAMC,EADW,EACXA,aAEhB4T,IAH2B,4CAAA1e,EAAA,MAKN05C,EAAoB,CACvCt7B,UAAW,CACT3e,GAAIiO,OAAM,SAACjE,EAAMZ,eAAP,EAAC,EAAgBpJ,IAC3B4f,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9C4H,KAAMA,EAAK4B,MACX4B,KAAMA,EAAK5B,MACX0wC,cAAa,SAAE7uC,EAAY7B,YAAd,EAAE,EAAmBrJ,KAAI,qBAAGH,UAXlB,OAKrBkf,EALqB,OAe3B,SAAIA,EAAOC,OAAX,SAAI,EAAag7B,cAAb,EAA0B9qC,QAC5B4G,EAASsuB,GAASnxB,aAAa,CAAExJ,QAAQ,QAAU8O,QAAS,aAC5DsE,EAAWqiB,UAjBc,gDAoB3BppB,EAASsuB,GAASnxB,aAAa,CAAExJ,QAAS,KAAMA,QAAS8O,QAAS,WApBvC,kEAuB9B,CACD1O,EAAMV,OADL,SAEDU,EAAMZ,eAFL,EAED,EAAgBpJ,GAChBif,EACAg7B,EAJC,MAKDxoC,GALC,SAKDA,EAAiBtC,eALhB,EAKD,EAA2BnP,GAC3BiW,EACA+G,IAGF,OACE,gBAAC4c,GAAD,CAAkB/M,sBAAuB,CAAEvoB,kBAAmB,KAC5D,gBAACigB,GAAA,EAAD,CACE3c,KAAK,iBACLC,KAAM,IACN7C,MAAM,UACNnD,MAAO,CAAE0D,UAAW,YAEtB,gBAACs0C,GAAD,MACA,gBAAC,GAAD,CAAMh4C,MAAOqC,GAAOoF,QAClB,gBAACyN,EAAA,EAAD,CAAQG,KAAK,YAAYF,SAAUmI,EAAKrJ,QAASqB,QAASstB,EAAQ3uB,QAASqJ,EAAKrJ,SAAhF,UAQR,I,SAAM5R,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,GAERI,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdmqB,UAAW,CACTlb,eAAgB,GAChBjnB,OAAQ,EACRD,MAAO,OAETkK,OAAQ,CACNlK,MAAO,OACPinB,aAAc,IAEhBlc,MAAO,CACLkc,aAAc,KC1GHvI,MAxCeyB,aAAH,8oBAwC0D,CACnFvB,WAAY,SAACkB,GAAD,OAAYA,EAAOk7B,aAC/Bn8B,cAAe,CACbi8B,cAAe,eAEjBt8B,UAAW,CACThW,KAAM,CAAC2V,GAAW,4BAClBnS,KAAM,CAACmS,GAAW,6BAA8BI,GAAU,8BCA/CG,MA/CeyB,aAAH,osBAiDzB,CACEvB,WAAY,SAACkB,GAAD,OAAYA,EAAOi7B,aAC/Bl8B,cAAe,CACbje,GAAI,WACJk6C,cAAe,iBC5CN,SAASG,GAAsBl7C,GAAgC,IAAD,MACnEkK,EAAkBlK,EAAlBkK,KAAM2gB,EAAY7qB,EAAZ6qB,QACRvY,EAAkBkO,KAClB3V,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5E,SAC5C4G,EAAWV,KAEX6kC,EAAcE,GAAuB,CACzCl8B,UAAW,SAAClU,GAAD,OACToV,uBAAsB,WAAO,IAAD,EAC1BrJ,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,UAAD,MAAWM,GAAX,SAAWA,EAASmF,YAApB,EAAW,EAAgBzH,MAClC8Q,QAAS,aAGbsR,IACA/T,EAAS9B,GAAQF,MAAM5E,MAAMpI,aAGjCkX,aAAc,SAAChU,EAAOP,GAAR,OACZqM,EAAS9B,GAAQF,MAAM5E,MAAMjF,cAAc,CAACD,EAA4BP,MAC1EsO,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAE9DyhC,EAAcI,GAAuB,CACzCn8B,UAAW,SAAClU,GAAD,OACToV,uBAAsB,WAAO,IAAD,EAC1BrJ,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAQ,UAAD,MAAWM,GAAX,SAAWA,EAASmF,YAApB,EAAW,EAAgBzH,MAClC8Q,QAAS,aAGbsR,IACA/T,EAAS9B,GAAQF,MAAM5E,MAAMpI,aAGjCkX,aAAc,SAAChU,EAAOP,GAAR,OACZqM,EAAS9B,GAAQF,MAAM5E,MAAMjF,cAAc,CAACD,EAA4BP,MAC1EsO,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,cAG9D+rB,EAASrkC,eAAkB,kCAAAG,EAAAC,OAAA,gDAC/B,MAAIwJ,GAAJ,SAAIA,EAAOZ,WAAP,EAAiBpJ,GACnBm6C,EAAY77B,OAAO,CACjBte,GAAIiO,OAAOjE,EAAMZ,SAASpJ,IAC1B4f,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9C4H,KAAMoC,EAAMV,OAAO1B,KAAK4B,MACxB4B,KAAMpB,EAAMV,OAAO8B,KAAK5B,MACxB0wC,cAAa,SAAElwC,EAAMV,OAAO+B,YAAY7B,YAA3B,EAAE,EAAgCrJ,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYiO,OAAOjO,QAGxEo6C,EAAY97B,OAAO,CACjBsB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9C4H,KAAMoC,EAAMV,OAAO1B,KAAK4B,MACxB4B,KAAMpB,EAAMV,OAAO8B,KAAK5B,MACxB0wC,cAAa,SAAElwC,EAAMV,OAAO+B,YAAY7B,YAA3B,EAAE,EAAgCrJ,KAAI,gBAAGH,EAAH,EAAGA,GAAH,OAAYiO,OAAOjO,QAd3C,8DAiB9B,CACDo6C,EADC,MAED3oC,GAFC,SAEDA,EAAiBtC,eAFhB,EAED,EAA2BnP,GAC3BgK,EAAMV,OAAO8B,KAAK5B,MAClBQ,EAAMV,OAAO1B,KAAK4B,MAClBQ,EAAMV,OAAO+B,YAAY7B,MALxB,SAMDQ,EAAMZ,eANL,EAMD,EAAgBpJ,GAChBm6C,IAGI3V,EAAapkC,WAAc,iBAAM,CAAC,IAAK,OAAM,IAEnD,OACE,gBAAC6jC,GAAD,CACErtB,MAAO,SAAA5M,EAAMZ,WAAN,EAAgBpJ,GAAK,oBAAsB,mBAClDqJ,KAAMA,EACN2gB,QAASA,EACTlU,QAASskC,EAAYtkC,SAAWqkC,EAAYrkC,QAC5CquB,aAAcM,EACdP,YAAY,OACZM,WAAYA,GAEZ,gBAACqV,GAAD,OCjFN,IAAM3H,GAAoB3yB,aAAH,4QAkBR,SAASi7B,KAAgB,IAAD,UAC/B/oC,EAAkBkO,KAClBmJ,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5CqmC,EAAYhlC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM5E,SACtD,EAA0ByQ,aAAgBoyB,GAAmB,CAC3DvzB,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,OAF1Cmf,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAKRG,EAAWV,KACXmlC,EAAkBp5B,GAAezY,EAAW8xC,aAElD,OACE,gCACE,gBAAChxB,EAAA,EAAD,CAAa9N,QAAS/F,EAAS8T,eAAa,EAAC5kB,MAAO8jB,EAAYhX,MAAMX,OAAOgB,SAC7E,gBAAC,GAAD,CAAMtQ,MAAOqC,GAAOG,WAClB,gBAAC6+B,GAAA,EAAD,KACE,gBAACA,GAAA,EAAUxC,OAAX,KACE,gBAACwC,GAAA,EAAUrZ,MAAX,aACA,gBAACqZ,GAAA,EAAUrZ,MAAX,CAAiBsZ,SAAO,GAAxB,SAHJ,MAMGhkB,GANH,SAMGA,EAAMhQ,WANT,SAMG,EAAgB5B,aANnB,EAMG,EAAwBpN,KAAI,SAACkP,GAAD,OAC3B,gBAAC6zB,GAAA,EAAUG,IAAX,CACElsB,QAAS,WACPlB,EAAS9B,GAAQF,MAAM5E,MAAMhF,QAAQgF,KAEvChN,cAAc,QAEd,gBAAC6gC,GAAA,EAAUI,KAAX,KAAiBj0B,EAAMzH,MACvB,gBAACs7B,GAAA,EAAUI,KAAX,CAAgBH,SAAO,GAAvB,IAA0B9zB,EAAMjE,YAIpC0K,KAAW,MAACqJ,GAAD,SAACA,EAAMhQ,WAAP,SAAC,EAAgB5B,SAAhB,EAAwB4N,SACpC,gBAAC8Q,GAAD,CACErV,MAAM,mBAENsV,SAAS,mFAIb,gBAAC4F,GAAA,EAAD,CACEjwB,MAAOqC,GAAOmoB,IACdxQ,QAAS6+B,EACT54B,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM5E,MAAMhF,SAAQ,KACpDud,MAAM,sBAGV,gBAACyyB,GAAD,CACEhxC,KAAMoxC,EAAUpxC,KAChB2gB,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM5E,MAAMhF,SAAQ,QAM5D,IAAMnG,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACN4G,QAAS,EACT5M,QAAS,QAEX6b,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEV6U,MAAO,CACL3V,KAAM,EACNjS,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,U,UC9FZ,SAAS2vC,GAAQruC,GACf,OAAQA,GACN,IAAK,OACL,IAAK,aACH,MAAO,aACT,IAAK,WACL,IAAK,UACH,MAAO,YACT,QACE,MAAO,QAIE,SAASi6C,GAAgBz7C,GACtC,IAAQ2tC,EAAyB3tC,EAAzB2tC,YAAa31B,EAAYhY,EAAZgY,QACfrF,EAAQmQ,eAEd,OACE,gBAAChF,GAAA,EAAD,CAAkB9F,QAASA,EAAStV,MAAO,CAAEzC,MAAO,SAClD,gBAACwrB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO4oC,aAClB,gBAACliB,GAAA,EAAKG,QAAN,CAAclpB,MAAOqC,GAAO6oC,oBAC1B,gBAACC,GAAA,EAAD,CACEnrC,MAAO,CACLvC,SAAU,WACV2C,IAAK,EACLiiB,MAAO,KAGG,MAAX4oB,OAAA,EAAAA,EAAahI,YAAaU,aAAgC,KAAd,MAAXsH,OAAA,EAAAA,EAAahI,WAAkB,qBAEnE,gBAAC,KAAK9hB,KAAN,CACE8J,YAAaoiB,sBAAWpC,EAAYljC,SAAW,IAC/CgN,MAAOk2B,EAAYpjC,gBAAgBg+B,cACnC7lC,MAAO,CAAEzC,MAAO,QAChBg1B,WAAYlwB,GAAO+oC,iBACnB3Y,iBAAkBpwB,GAAOgpC,uBACzB/qC,KAAM,kBACJ,gBAACgF,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,IAAKmF,WAAY,SAAUW,cAAe,QAC9D,gBAACqf,GAAA,EAAD,CACEvf,MAAO8nC,EAAYvjC,OAAS,EAAI,U9InDtB,U8IoDV3B,KAAMonC,GAAQlC,EAAYnsC,QAC1BkH,KAAM,GACNhG,MAAO,CAAE8gB,iBAAkB,MAE7B,gBAAC7a,EAAA,EAAD,CACEjG,MAAO,CACLkD,SAAU,GACVsS,WAAY,MACZ1S,UAAW,SACXK,MAAO8M,EAAMX,OAAO+Q,YAGrB4qB,EAAYvjC,OAAS,EAArB,MAC8B,EAAtBujC,EAAYvjC,OADpB,IAEOujC,EAAYvjC,eAWtC,IAAMrF,GAASC,IAAWC,OAAO,CAC/B+oC,WAAY,GACZF,iBAAkB,CAChBzoC,YAAa,EACbO,SAAU,GACVsS,WAAY,MACZgP,aAAc,GAEhB6mB,uBAAwB,CACtB1oC,YAAa,GAEfuoC,mBAAoB,CAAEvoC,YAAa,EAAGC,aAAc,EAAGogB,WAAY,EAAGgJ,cAAe,GACrFif,YAAa,CACXnqB,iBAAkB,EAClB2D,eAAgBniB,IAAWwgB,cAC3B7iB,aAAc,EACd1C,MAAO,UC3EX,SAASy7C,GAAY17C,GACnB,IAAQ27C,EAAmB37C,EAAnB27C,QAAShuC,EAAU3N,EAAV2N,MACT0E,EAAgBmO,KAAhBnO,YAEFupC,EAAS36C,eACb,SAAC46C,GACC,MACE,eAAgBA,GACM,iBAAtBA,EAAOlL,YACPkL,EAAOh7C,MAAP,MAAcwR,OAAd,EAAcA,EAAaxR,MAG/B,CAACwR,IAGH,OACE,gCACE,gBAAC,KAAKuV,UAAN,kBAA6Bja,EAAQ,IADvC,MAEGguC,OAFH,EAEGA,EAASG,aACPp0B,QAAO,SAACimB,GAAD,OAAiBiO,EAAOjO,EAAYoO,aAC3C/6C,KAAI,SAAC2sC,GAAD,OACH,gBAAC8N,GAAD,CAAuB9N,oBAKlB,SAASqO,KAAe,IAAD,QAC9BxmB,EAAQC,sBACR9iB,EAAQmQ,eACN2tB,EAAUjb,EAAMG,OAAhB8a,MAERtuC,QAAQC,IAAI,QAASozB,EAAMG,QAE3B,IAAM9e,EAAY5V,WAChB,kBACE8M,KAAKC,MACHD,KAAK8L,UAAUoiC,IAAuBl+B,QACpC,aACA,CACElY,KAAM8M,EAAMX,OAAOC,SAASiqC,MAC5Br2C,KAAM8M,EAAMX,OAAOC,SAASkqC,QAC5Bt2C,KAAM8M,EAAMX,OAAOC,SAASmqC,QAC5Bpb,KAAK,SAGb,CAACruB,EAAMX,OAAOC,UAEhB,OACE,gBAACwoB,GAAD,KACE,gBAAChP,GAAA,EAAD,CAAM/oB,MAAO,CAAEwb,UAAW,GAAIje,MAAO,OAAQ+5B,SAAU,MACrD,gBAACvO,GAAA,EAAKG,QAAN,CAAclpB,MAAO,CAAEgsB,cAAe,KACpC,gBAAC1mB,EAAA,QAAD,CAAMtF,MAAO,CAAEqD,cAAe,MAAOX,WAAY,SAAUiS,KAAM,IAC/D,gBAAC,EAAD,CACElQ,MAAM,EACNgV,UAAQ,EACR2e,MAAO,GACPp4B,MAAO,CACLxC,OAAQ,IACRD,MAAO,KAET0X,OAAQd,IAEV,gBAAC7O,EAAA,QAAD,CAAMtF,MAAO,CAAEisB,SAAU,IACvB,gBAAChmB,EAAA,EAAD,CACEjG,MAAO,CACLwV,WAAY,OACZ9R,UAAW,aACXR,SAAU,GACVktB,WAAY,GACZ7yB,MAAO,SANX,UAQYwwC,EAAM5vC,IAClB,gBAAC8H,EAAA,EAAD,CACEjG,MAAO,CACLwV,WAAY,OACZpR,QAAS,GACTV,UAAW,aACXR,SAAU,GACVktB,WAAY,GACZ7yB,MAAO,OACPinB,aAAc,KAGfupB,EAAMh5B,OAET,gBAACG,EAAA,EAAD,CAAQG,KAAK,WAAWlS,M/IvGV,U+IuG+BnD,MAAO,CAAEC,aAAc,GAAI+jB,OAAQ,IAC7E+pB,EAAM5lC,UAKf,gBAACwe,GAAA,EAAD,MACA,gBAACoC,GAAA,EAAKf,MAAN,CACEhoB,MAAO,CAAEqD,cAAe,OACxBkvB,WAAY,CAAEh1B,MAAO,OACrBo8C,WAAY,CAAEp8C,MAAO,OACrBwX,MACE,gBAAC,KAAKoM,KAAN,CACE8J,YAAY,QACZlW,OAAO,MAACg5B,GAAD,SAACA,EAAO7G,QAAR,WAAgCv6B,WAAhC,IAAsC5G,QAAtC,MAA+CgoC,GAA/C,SAA+CA,EAAO7G,YAAtD,EAA8C,EAA4BnhC,MACjFzF,KAAM,SAAChD,GAAD,uBACJ,gBAACowC,GAAD,CACE3nC,MACE,MAACgoC,GAAD,SAACA,EAAO7G,QAAR,WAAgCv6B,WAAhC,IAAsC5G,QAAtC,MACCgoC,GADD,SACCA,EAAO7G,YADR,EACA,EAA4BnhC,OAC5B,GAEFkJ,OACE,MAAC8+B,GAAD,SAACA,EAAO7G,QAAR,WAAgCv6B,WAAhC,IAAsCsC,SAAtC,MACC8+B,GADD,SACCA,EAAO7G,YADR,EACA,EAA4Bt+B,SAC5B,GAEF5I,MAAO,CAAE0D,UAAW,UACpBsC,KAAM,MAGVusB,WAAY,CAAEh1B,MAAO,IAAK2F,SAAU,IACpCuvB,iBAAkB,CAAEl1B,MAAO,IAAK2F,SAAU,MAG9Cmf,MAAO,4BACL,gBAAC,KAAKlB,KAAN,CACE8J,YAAY,SACZ5I,MAAO,SAAC/kB,GAAD,uBACL,gBAACowC,GAAD,CACE3nC,MACE,MAACgoC,GAAD,SAACA,EAAOhH,SAAR,WAAiCp6B,WAAjC,IAAuC5G,QAAvC,MACCgoC,GADD,SACCA,EAAOhH,aADR,EACA,EAA6BhhC,OAC7B,GAEFkJ,OACE,MAAC8+B,GAAD,SAACA,EAAO7G,QAAR,WAAgCv6B,WAAhC,IAAsCsC,SAAtC,MACC8+B,GADD,SACCA,EAAO7G,YADR,EACA,EAA4Bt+B,SAC5B,GAEF5I,MAAO,CAAE0D,UAAW,SAAU0sB,WAAY,GAC1CpqB,KAAM,MAGVusB,WAAY,CAAEzvB,UAAW,QAASI,SAAU,IAC5CuvB,iBAAkB,CAAE3vB,UAAW,QAASI,SAAU,IAClD6R,OACE,MAACg5B,GAAD,SAACA,EAAOhH,SAAR,WAAiCp6B,WAAjC,IAAuC5G,QAAvC,MAAgDgoC,GAAhD,SAAgDA,EAAOhH,aAAvD,EAA+C,EAA6BhhC,YA9FxF,MAoGGgoC,GApGH,SAoGGA,EAAO6L,eApGV,EAoGG,EAAiBt7C,KAAI,SAAC26C,EAAShuC,GAC9B,OAAO,gBAAC+tC,GAAD,CAAmBC,UAASlL,QAAO9iC,cC3JnC,SAASojC,KAAsB,IAAD,IACrClmC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtCH,EAAQwB,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,SACtCgC,EAAWV,KACT/D,EAAgBmO,KAAhBnO,YACR,ExIsnBK,SAA0CgQ,GACvC,IAAMjf,EAAO,SAAOme,IAAmBc,GACvC,OAAOjK,KAAuG6J,GAA8B7e,GwIxnB9Gm5C,GAAtC,WAAOC,EAAP,KACMhnB,GADN,KAA4BxV,KACdyV,uBACd,EAA2CuV,GACzCl8B,OAAM,MAAC0mB,GAAD,SAACA,EAAOG,aAAR,EAAC,EAAexU,SAAWrS,OAAM,MAACuD,OAAD,EAACA,EAAaxR,KAD/C2N,EAAR,EAAQA,aAAcmI,EAAtB,EAAsBA,QAASoP,EAA/B,EAA+BA,QAIzBihB,EAAYC,0BACZppB,EAAa+Y,2BAcnB,OAZA31B,aAAgB,WACV+lC,GACFjhB,MAED,CAACihB,EAAWjhB,IAEf9kB,aAAgB,WACV4J,EAAM0H,mBACRiqC,EAAkB,CAAEh9B,UAAW,CAAEiB,WAAY5V,EAAM0H,uBAEpD,OAAC1H,OAAD,EAACA,EAAO0H,kBAAmBiqC,IAG5B,gCACG7lC,GAAW,gBAAC6T,EAAA,EAAD,CAAa3kB,MAAOgF,EAAM8H,MAAMX,OAAOgB,OAAQyX,eAAa,EAAC/N,QAAS/F,IAElF,gBAAC,IAAD,CACEjU,MAAOqC,GAAOksC,SACdjxB,MAAkB,MAAZxR,GAAA,SAAAA,EAAc0iC,aAAd,IAAsBvtB,QAAS,GACrC8T,YAAY,EACZC,UAAW3R,EACX8R,WAAY,gBAAGjqB,EAAH,EAAGA,KAAH,OACV,gBAAC4iC,GAAD,CACEx4B,QAAS,kBAAM6F,EAAWoa,SAAS,cAAe,CAAEwY,MAAO7iC,EAAKkW,QAChE2sB,MAAK,MAAE7iC,OAAF,EAAEA,EAAMkW,KACb4sB,YAAU,EACJliC,oBAKZ,gBAAC,GAAD,CACEqc,QAAS,kBAAM/T,EAAS9B,GAAQF,MAAM7E,QAAQ/E,SAAQ,KACtD+T,UAAW,kBAAMnI,EAAS9B,GAAQF,MAAM7E,QAAQ/E,SAAQ,KACxDhB,KAAM4K,EAAM7E,QAAQ/F,KACpBsE,aAAcA,QAAgB5L,KAMtC,I,MAAMmC,GAASC,IAAWC,OAAO,CAC/BgsC,SAAU,CAAE55B,KAAM,EAAGqO,WAAY,KClEpB,SAAS+2B,KACtB,IAAM5xC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1E,iBAC5C0G,EAAWV,KAEjB,OACE,gCACGvL,EAAMV,OAAOnJ,KAAI,SAAC4M,EAAMD,GACvB,OACE,gBAAC0qC,GAAD,CAEEzsC,IAAK+B,EACLmP,OAAQlP,EACRvD,OAAW,MAAJuD,OAAA,EAAAA,EAAMvD,QAAS,GACtB2wB,SAAU,SAAC3wB,GAAD,OAAWyM,EAAS9B,GAAQF,MAAM1E,cAAcxF,SAAS,CAAC+C,EAAOtD,Y,qkBCDvF,IAAMqyC,GAAwBt8B,aAAH,msBAuCrBu8B,GAAiCv8B,aAAH,qhCAwDrB,SAASw8B,KAAuB,IAAD,kBACtC/xC,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM1E,iBAC5CkC,EAAkBkO,KAClB1J,EAAWV,KAOjB,EALcqf,sBAKgCE,OAAtCrnB,EAAR,EAAQA,IAAK6b,EAAb,EAAaA,eAAgBhJ,EAA7B,EAA6BA,OAC7B,EAA0BR,aAAgB+7B,GAAuB,CAC/Dl9B,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9CspB,iBACAhJ,YAJInB,EAAR,EAAQA,KAAM+F,EAAd,EAAcA,QAQRihB,EAAYC,0BAElBhmC,aAAgB,WACd8kB,MACC,CAACihB,EAAWjhB,IAEf,IAAMuyB,EAAan2B,GAAezY,EAAWsjC,mBAC7C,EAAgD9tB,aAC9Cy9B,IADF,WAAOE,EAAP,KAAoCj+B,EAApC,KAGMf,EAAa+Y,2BACnB31B,aAAgB,WAAO,IAAD,MAKpB,GAJ8B,MAAG+e,GAAH,SAAGA,EAAMhQ,WAAT,SAAG,EAAgBxB,eAAnB,SAAG,EAA8BuzB,qBAAjC,EAAG,EAA8C3oB,MAC7E,SAAC4oB,GAAD,iBAAgB,SAAAA,EAAW1zB,MAAX,WAAgBzN,SAAhB,IAAoB2oB,eAApB,SAAmClb,EAAIzN,SAAvC,EAAmC,EAAQ2oB,aAAcwY,EAAW/zB,cAGxD,CAAC,IAAD,MACtB+zB,EAAU,MAAGhiB,GAAH,SAAGA,EAAMhQ,WAAT,SAAG,EAAgBxB,eAAnB,SAAG,EAA8BuzB,qBAAjC,EAAG,EAA8C/yB,MAC/D,SAAC8tC,GAAD,aAAY,SAAAA,EAAOxuC,UAAP,IAAYzN,MAAOyN,EAAIzN,MAGjCmhC,IACFlrB,EAAS9B,GAAQF,MAAM1E,cAActC,UAAUk0B,EAAW/zB,YAAc,OACxE6I,EAAS9B,GAAQF,MAAM1E,cAAc1C,MAAMs0B,EAAWgQ,YAEnD,CAAC,IAAD,EACLl7B,EACE9B,GAAQF,MAAM1E,cAActC,WACtB,MAAJkS,GAAA,SAAAA,EAAMhQ,SAASK,4BAAf,IAAsCpC,aAAc,UAIzD,OACD+R,GADC,SACDA,EAAMhQ,WADL,SACD,EAAgBxB,mBADf,EACD,EAA8BuzB,eAD7B,MAED/hB,GAFC,SAEDA,EAAMhQ,SAASK,4BAFd,EAED,EAAsCpC,WACtC6I,EACAxI,EAAIzN,KAGN,IAAMk8C,EAAsB97C,eAAkB,0BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEpCy7C,EAA4B,CAChCr9B,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9CkO,MAAOD,OAAOR,EAAIzN,IAClBoN,WAAYF,KAAK8L,UAAUhP,EAAMV,QACjC6nC,OAAQnnC,EAAM4C,IAEhB0/B,OAAQ,SAAO9yB,EAAQ2iC,GAAf,uDAAA57C,EAAAC,OAAA,uDACA+O,EADA,SACgB4sC,EAAeh9B,OAD/B,SACgB,EAAqB+8B,0BADrC,EACgB,EAA0C3sC,cAC1D2P,EAAS1F,EAAOgzB,UAAiB,CACrCxnB,MAAOklB,GACPvrB,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9CspB,eAAgBrb,OAAM,MAACsB,GAAD,SAACA,EAAe5B,mBAAhB,EAAC,EAA6B3N,QAY3C,OARPo8C,EAAY5iC,EAAOgzB,UAAiB,CACxCxnB,MAAOtF,GACPf,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9C+f,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,SAItD,SAAAk8B,EAAWjtC,WAAX,WAAqBqC,kBAArB,IAAkCxR,OAAlC,MAAyCuP,GAAzC,SAAyCA,EAAe5B,mBAAxD,EAAyC,EAA6B3N,KACxEwZ,EAAOkzB,WAAW,CAChB1nB,MAAOtF,GACPf,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9C+f,kBAAmBC,aAAW,IAAIC,MAAQC,UAAY,KAExDf,KAAK,SACAi9B,GADD,IAEFjtC,SAAS,SAAD,MACHitC,OADG,EACHA,EAAWjtC,UADR,IAENqC,YAAY,SAAD,MACN4qC,GADM,SACNA,EAAWjtC,eADL,EACN,EAAqBqC,aADf,IAET0vB,eAAe,GAAD,cACC,MAATkb,GAAA,SAAAA,EAAWjtC,WAAX,WAAqBqC,kBAArB,IAAkC0vB,iBAAkB,IAAIra,QAC1D,SAACw1B,GAAD,OAASA,EAAIr8C,MAAJ,MAAWuP,OAAX,EAAWA,EAAevP,QAFzB,CAIZuP,YAQNs9B,EA3CA,eA4CD3tB,OA5CC,EA4CDA,EAAQ/P,UA5CP,IA6CJxB,aAAa,SAAD,MACPuR,GADO,SACPA,EAAQ/P,eADD,EACP,EAAkBxB,cADX,IAEVuzB,eAAe,GAAD,cACF,MAANhiB,GAAA,SAAAA,EAAQ/P,WAAR,WAAkBxB,mBAAlB,IAAgCuzB,iBAAkB,IAAIra,QACxD,SAACw1B,GAAD,OAASA,EAAIr8C,MAAJ,MAAWuP,OAAX,EAAWA,EAAevP,QAFzB,CAIZuP,QAKNiK,EAAOkzB,WAAW,CAChB1nB,MAAOklB,GACPvrB,UAAW,CACTiB,WAAY3R,OAAM,MAACwD,GAAD,SAACA,EAAiBtC,eAAlB,EAAC,EAA2BnP,IAC9CspB,eAAgBrb,OAAM,MAACsB,GAAD,SAACA,EAAe5B,mBAAhB,EAAC,EAA6B3N,KAEtDmf,KAAM0tB,IA9DF,kBAgEC,CACL1tB,KAAM0tB,IAjEF,gEATgC,OA+E1C52B,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,uBACT8O,QAAS,aAGbzC,EAAS9B,GAAQF,MAAM1E,cAActI,SACrC+V,EAAWqiB,SAtF+B,gDAwF1CppB,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAMA,QACf8O,QAAS,WA3F6B,kEA+F3C,CACDsjC,EADC,MAEDvqC,GAFC,SAEDA,EAAiBtC,eAFhB,EAED,EAA2BnP,GAC3ByN,EAAIzN,GACJgK,EAAMV,OACNU,EAAM4C,GACNqJ,EACA+G,IAGF,OACE,gBAAC4c,GAAD,KACE,gBAACiC,GAAA,EAAD,CACEC,SAAS,WACTj6B,MAAO,CACLzC,MAAO,OACP0uB,SAAU,EACVqL,SAAU,IACV7xB,gBAAiB,gBAGnB,gBAACgpC,GAAD,CAAS7iC,IAAKA,IAEd,gBAACmd,GAAA,EAAD,CAAM/oB,MAAO,CAAEzC,MAAO,SACpB,gBAACwrB,GAAA,EAAKf,MAAN,CAAYjT,MAAK,MAAEuI,GAAF,SAAEA,EAAMhQ,WAAR,SAAE,EAAgBK,4BAAlB,EAAE,EAAuC5H,OAE1D,gBAACgjB,GAAA,EAAKG,QAAN,KACE,gBAAC6wB,GAAD,MAEA,gBAACpzB,GAAA,EAAD,MACA,gBAACuE,GAAA,EAAS/J,KAAV,CACE9L,KAAK,UACL0Q,MAAM,yBACNzQ,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM1E,cAAc1C,OAAO7C,EAAM4C,MACjEjM,OAAQqJ,EAAM4C,GAAK,UAAY,eAInC,gBAACge,GAAA,EAAKb,QAAN,KACE,gBAAChT,EAAA,EAAD,CACEC,UACGygC,GACDvqC,KAAK8L,UAAUhP,EAAMV,WAArB,MAAiC6V,GAAjC,SAAiCA,EAAMhQ,WAAvC,SAAiC,EAAgBK,4BAAjD,EAAiC,EAAuCpC,YAE1E8J,KAAK,YACLC,QAAS,kBAAM+kC,KACfpmC,QAASiI,EAASjI,QAClBjU,MAAO,CAAEzC,MAAO,SARlB,yBChOZ,IAAMk9C,GAAWC,eAEF,SAASC,KACtB,IAAM1zB,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC1C5C,EAAgBmO,KAAhBnO,YAER,OACE,gBAAC8qC,GAASG,UAAV,CACEC,cAAe,CACbC,eAAgB7zB,EAAYlX,cAAekX,EAAYrX,iBACvDi0B,OAAQ,SAACvmC,GAAD,OAAW,gBAAC,GAAWA,IAC/By9C,UAAW,CACTpmC,KAAM,KAIV,gBAAC8lC,GAASO,OAAV,CACEj1C,KAAK,iBACLtH,UAAWwlC,GACXvjC,QAAS,CAAEqU,MAAO,cAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,0BACLtH,UAAWy+B,GACXx8B,QAAS,CAAEo6C,aAAa,KAE1B,gBAACL,GAASO,OAAV,CACEj1C,KAAK,aACLtH,UAAWk/B,GACXj9B,QAAS,CAAEqU,MAAO,iBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,gBACLtH,UAAWi/B,GACXh9B,QAAS,CAAEqU,MAAO,cAEpB,gBAAC0lC,GAASO,OAAV,CAAiBj1C,KAAK,aAAatH,UAAW+b,GAAY9Z,QAAS,CAAEqU,MAAO,UAC5E,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,sBACLtH,UAAWymC,GACXxkC,QAAS,CAAEqU,MAAO,oBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,gCACLtH,UAAW2mC,GACX1kC,QAAS,CAAEqU,MAAO,kBAIpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,gBACLtH,UAAWic,GACXha,QAAS,CAAEqU,MAAO,WAClBkmC,cAAe,CACbx8B,OAAM,MAAE9O,OAAF,EAAEA,EAAaxR,MAGzB,gBAACs8C,GAASO,OAAV,CACEj1C,KAAK,sBACLtH,UAAWy8C,GACXx6C,QAAS,CAAEqU,MAAO,mBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,kBACLtH,UAAW08C,GACXz6C,QAAS,CAAEqU,MAAO,eAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,qBACLtH,UAAW4vC,GACX3tC,QAAS,CAAEqU,MAAO,qBAGpB,gBAAC0lC,GAASO,OAAV,CAAiBj1C,KAAK,cAActH,UAAW66C,GAAa54C,QAAS,CAAEqU,MAAO,WAE9E,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,iBACLtH,UAAW8wC,GACX7uC,QAAS,CAAEqU,MAAO,cAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,uBACLtH,UAAWi2C,GACXh0C,QAAS,CAAEqU,MAAO,oBAEpB,gBAAC0lC,GAASO,OAAV,CAAiBj1C,KAAK,eAAetH,UAAW42C,GAAc30C,QAAS,CAAEqU,MAAO,YAChF,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,oBACLtH,UAAW28C,GACX16C,QAAS,CAAEqU,MAAO,kBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,oBACLtH,UAAW05C,GACXz3C,QAAS,CAAEqU,MAAO,0BAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,eACLtH,UAAWk6C,GACXj4C,QAAS,CAAEqU,MAAO,oBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,8BACLtH,UAAW43C,GACX31C,QAAS,CAAEqU,MAAO,yBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,sBACLtH,UAAWy7C,GACXx5C,QAAS,CAAEqU,MAAO,oBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,qBACLtH,UAAWk4C,GACXj2C,QAAS,CAAEqU,MAAO,mBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,6BACLtH,UAAW48C,GACX36C,QAAS,CAAEqU,MAAO,oBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,2BACLtH,UAAWg5C,GACX/2C,QAAS,CAAEqU,MAAO,iBAEpB,gBAAC0lC,GAASO,OAAV,CACEj1C,KAAK,0BACLtH,UAAWm5C,GACXl3C,QAAS,CAAEqU,MAAO,iBCtMX,SAASyU,KAAY,IAAD,4CAC3BrhB,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3E,SAC5C2G,EAAWV,KA4BjB,OA1BAnV,aAAgB,WACd,GAAI4J,EAAMZ,SAAU,CAAC,IAAD,IACkB,EAApC,IAAKY,EAAMV,OAAOuC,WAAWrC,MAC3ByM,EACE9B,GAAQF,MAAM3E,MAAMvF,SAAS,CAC3B,cACA,SAAAC,EAAMZ,SAASyC,iBAAf,IAA2B8c,aAAc,SAK1C3e,EAAMV,OAAO0C,QAAQxC,OAAtB,SAA+BQ,EAAMZ,WAArC,SAA+B,EAAgB4C,UAAhB,EAAyBhM,KACtDgK,EAAMZ,SAAS4C,QAAQ1B,YACzB2L,EAAS9B,GAAQF,MAAM3E,MAAMrD,cAAcjC,EAAMZ,SAAS4C,QAAQ1B,aAEpE2L,EAAS9B,GAAQF,MAAM3E,MAAMvF,SAAS,CAAC,UAAWC,EAAMZ,SAAS4C,eAGpE,CACDiK,EACAjM,EAAMV,OAAOuC,WAAWrC,MACxBQ,EAAMV,OAAO0C,QAAQxC,MACrBQ,EAAMZ,SAJL,SAKDY,EAAMZ,eALL,EAKD,EAAgBpJ,KAIhB,gCACE,gBAACgkB,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,OAAO,SAAAQ,EAAMV,OAAO1B,OAAb,WAAmB4B,YAAnB,IAA0Bmf,aAAc,GAC/C/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3E,MAAMvF,SAAS,CAAC,OAAQ2e,QAG7E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO1B,KAAK6B,MAAQ,QAAU,QACnDO,EAAMV,OAAO1B,KAAK6B,OAAS,KAG9B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,QACNne,QAASO,EAAMV,OAAOwC,MAAMrC,MAC5BD,OAAO,SAAAQ,EAAMV,OAAOwC,QAAb,WAAoBtC,YAApB,IAA2Bmf,aAAc,GAChD/E,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3E,MAAMvF,SAAS,CAAC,QAAS2e,QAG9E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOwC,MAAMrC,MAAQ,QAAU,QACpDO,EAAMV,OAAOwC,MAAMrC,OAAS,KAG/B,gBAACia,GAAD,CACExM,KAAK,WACL0Q,MAAM,mBACNne,QAASO,EAAMV,OAAOuC,WAAWpC,MACjCD,MAAOyE,OAAM,SAACjE,EAAMV,OAAOuC,iBAAd,EAAC,EAAyBrC,OACvCoa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM3E,MAAMvF,SAAS,CAAC,aAAD,MAAe2e,OAAf,EAAeA,EAAUC,iBAInE,gBAACR,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOuC,WAAWpC,MAAQ,QAAU,QACzDO,EAAMV,OAAOuC,WAAWpC,OAAS,IAGpC,gBAAC+e,GAAA,EAAD,MAEA,gBAACrhB,EAAA,QAAD,CAAMtF,MAAO,CAAEzC,MAAO,SACpB,gBAAC4qC,GAAD,CACExgC,OAAY,MAALQ,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,YAAxB,IAA+Bc,aAAcN,EAAMM,WAAWd,MACrEwY,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAM3E,MAAMrD,cAAczC,OAGlE,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMM,WAAWb,MAAQ,QAAU,QAClDO,EAAMM,WAAWb,OAAS,MAGtB,MAALO,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2CtK,MAA3C,MAAiDgK,GAAjD,SAAiDA,EAAOM,aAAxD,SAAiD,EAAmBd,YAApE,EAAiD,EAA0BxJ,MAC3E,gCACE,gBAAC4pC,GAAD,CACEpgC,MAAOQ,EAAMV,OAAO0C,QAAQxC,MAC5BqgC,aAAc57B,QACP,MAALjE,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2CtK,MAA3C,SAAiDgK,EAAMM,aAAvD,SAAiD,EAAkBd,YAAnE,EAAiD,EAAyBxJ,KAE5EgiB,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAM3E,MAAMvF,SAAS,CAAC,UAAWP,QAEzE,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO0C,QAAQvC,MAAQ,QAAU,QACtDO,EAAMV,OAAO0C,QAAQvC,OAAS,MAKvC,gBAACg+B,GAAD,CACEj+B,OAAO,SAAAQ,EAAMV,OAAO4B,WAAb,IAAmB1B,QAAS,KACnCwY,SAAU,SAAC0G,GAAD,OAAczS,EAAS9B,GAAQF,MAAM3E,MAAMvF,SAAS,CAAC,OAAQ2e,QAGzE,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOyC,MAAMtC,MAAQ,QAAU,QACpDO,EAAMV,OAAOyC,MAAMtC,OAAS,KAMrC,I,MAAMvF,GAASC,IAAWC,OAAO,CAC/BkF,OAAQ,CACNkN,KAAM,EACNpX,MAAO,OACPylB,WAAY,IAEd1a,MAAO,CACLkc,aAAc,EACdjnB,MAAO,QAETmpB,aAAc,CACZlC,aAAc,KC3EHvI,MArDeyB,aAAH,62BAuDzB,CACEvB,WAAY,SAACkB,GAAD,OAAYA,EAAOi+B,aAC/Bv/B,UAAW,CACT/R,WAAY,CACV0R,GAAW,gCACXI,GAAU,gCAEZ7R,MAAO,CACLyR,GAAW,wCACXE,GAAQ,yCAEV7V,KAAM,CAAC2V,GAAW,qBAElB27B,OAAQ,CAAC37B,GAAW,4BAEtBU,cAAe,CACbjS,QAAS,YACToxC,YAAa,aACblyC,KAAM,YCjEG,SAASmyC,GAAkBl+C,GAA4B,IAAD,IAC3DkK,EAA6BlK,EAA7BkK,KAAM+U,EAAuBjf,EAAvBif,UAAW4L,EAAY7qB,EAAZ6qB,QACnBhgB,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3E,SAC5CwZ,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C6B,EAAWV,KAEX+nC,EAAsBC,GAAuB,CACjDn/B,UAAU,SAAD,oGAAC,EAAC,SAAClU,GACVoV,uBAAsB,WAAO,IAAD,EAC1BlB,IACAnI,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,SAAO,MAAKM,GAAL,SAAKA,EAASsE,WAAd,EAAK,EAAe5G,MAApB,mCACP8Q,QAAS,mBAKjByF,aAAc,SAAChU,EAAOX,GACpByM,EAAS9B,GAAQF,MAAM3E,MAAMlF,cAAc,CAACD,EAA4BX,MAG1E0O,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,cAGrE+rB,EAASrkC,eAAkB,8BAAAG,EAAAC,OAAA,gDAC/B88C,EAAoBh/B,OAAO,CACzBsB,WAAYkJ,EAAYpX,kBACxB9J,KAAMoC,EAAMV,OAAO1B,KAAK4B,OAAS,GACjCiW,UAAW,SAACzV,EAAMV,OAAO0C,QAAQxC,QAArB,EAA4BxJ,GAAYiO,OAAM,SAACjE,EAAMV,OAAO0C,QAAQxC,YAAtB,EAAC,EAA4BxJ,IAA1C,KAC7C+L,MAAO/B,EAAMV,OAAOyC,MAAMvC,MAC1BqC,WAAYoC,OAAOjE,EAAMV,OAAOuC,WAAWrC,OAC3CsC,MAAO9B,EAAMV,OAAOwC,MAAMtC,OAAS,GACnC0vC,OAAQjrC,OAAM,SAACjE,EAAMV,OAAO4B,KAAK1B,YAAnB,EAAC,EAAyBxJ,MARX,8DAU9B,CACDs9C,EACAx0B,EAAYpX,kBACZ1H,EAAMV,OAAO1B,KAAK4B,MAHjB,SAIDQ,EAAMV,OAAO0C,QAAQxC,YAJpB,EAID,EAA4BxJ,GAC5BgK,EAAMV,OAAOyC,MAAMvC,MACnBQ,EAAMV,OAAOuC,WAAWrC,MACxBQ,EAAMV,OAAOwC,MAAMtC,MAPlB,SAQDQ,EAAMV,OAAO4B,KAAK1B,YARjB,EAQD,EAAyBxJ,KAGrBwkC,EAAapkC,WAAc,iBAAM,CAAC,IAAK,OAAM,IACnD,OACE,gBAAC6jC,GAAD,CACErtB,MAAM,oBACNvN,KAAMA,EACNm7B,WAAYA,EACZ1uB,QAASwnC,EAAoBxnC,QAC7BkU,QAASA,EACTma,aAAcM,EACdP,YAAY,QAEZ,gBAAC,GAAD,O,qkBCvDN,IAAM7gB,GAAuB9D,aAAH,ucA0B1B,SAASi+B,KACP,IAAM1rC,EAAQmQ,eACd,OACE,gBAAC,KAAD,CACEmE,WAAS,EACTnmB,eAAgB,CACdZ,OAAQ,GACRiI,gBAAiBwK,EAAMX,OAAOmT,QAC9BllB,MAAO,OACPge,QAAS,GACTyI,OAAQ,EACR3gB,cAAe,OAEjBtD,OAAQ,CACN,CAAEmJ,IAAK,cAAe1L,OAAQ,GAAID,MAAO,GAAIujB,iBAAkB,GAAI7gB,aAAc,IACjF,CACEiJ,IAAK,iBACL7F,cAAe,SACf3F,SAAU,CACR,CACEwL,IAAK,YACL1L,OAAQ,GACRD,MAAO,IACPie,UAAW,EACX4U,WAAY,EACZnwB,aAAc,MAEhB,CACEiJ,IAAK,YACL1L,OAAQ,GACRD,MAAO,IACPie,UAAW,EACX4U,WAAY,EACZnwB,aAAc,WAQb,SAAS27C,KAAe,IAAD,IAC9BrpC,EAASqB,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACvCpK,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQ9F,SAC9C4vC,EAAYjoC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM3E,SAChD2G,EAAWV,KAEjB,EAAmCuK,aAAgBuD,GAAsB,CACvE1E,UAAW,CACTiB,WAAY3R,OAAOmG,EAAO1C,mBAC1B6a,OAAQviB,EAAM+F,YAEhBoQ,YAAa,iBALPhB,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QAQjBlI,EAAa+Y,2BAEboQ,EAAYC,0BAClBhmC,aAAgB,WACV4J,EAAM8F,kBAAoBq2B,GAC5BlwB,EAAS9B,GAAQP,QAAQ9F,MAAMmC,kBAAiB,MAEjD,CAACgG,EAAUkwB,EAAWn8B,EAAM8F,kBAE/B,IAAM6tC,EAAgBr8B,GAAezY,EAAW+0C,YACxCx+C,EAAUg3B,eAAVh3B,MAGFi3B,EAAarzB,KAAKszB,MAAMl3B,EADZ,MACkC,EAE9C0O,GAAY,MAAJqR,GAAA,SAAAA,EAAMhQ,WAAN,WAAgB0T,oBAAhB,IAA+BC,QAAS,GAChD0T,IAAiB,MAAC1oB,KAAOqN,SAAUrF,EAEzC,OACE,gCACE,gBAAC6T,EAAA,EAAD,CAAaC,eAAa,EAAC5kB,MAAOoP,EAAOtC,MAAMX,OAAOgB,OAAQ0J,QAAS/F,IACjE,MAALhI,KAAOqN,OAAS,KACf,gBAAChU,EAAA,QAAD,CAAMtF,MAAOqC,GAAOioB,OAClB,gBAACF,GAAD,CAAWrV,MAAM,WAAWsV,SAAS,MAGzC,gBAAC,IAAD,CACE/M,KAAMqX,EAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAK1oB,EACnD+oB,UAAW,kBACT3R,EAAQ,CACNtF,WAAY3R,OAAOmG,EAAO1C,mBAC1B6a,OAAQviB,EAAM+F,cAGlB4mB,aAAc,WAAW3pB,GAAX,MAAGD,EAAH,EAAGA,KAAH,gBAA+B,MAAJA,GAAA,SAAAA,EAAMkW,WAAN,IAAYjjB,KAAMgN,IAC3DnL,MAAO,CACL2U,KAAM,EACNqO,WAAY,GAEd+R,WAAY9gB,EACZghB,eAAgB,gBAACC,GAAA,EAAD,CAAgBH,WAAY9gB,EAAS+gB,UAAW3R,IAChEmR,WAAYA,EACZxJ,sBAAuB,CAAEztB,MAAO,OAAQmG,UAAW,UACnDyxB,WAAY,0BAASjU,EAAT,EAAGhW,KAAH,OACD,IAATgW,EACE,gBAACy6B,GAAD,MAEA,gBAAC5yB,GAAA,EAAD,CACE7f,IAAG,eAAUgY,GAAV,SAAUA,EAAME,WAAhB,EAAU,EAAYjjB,IACzB6B,MAAO,CAAEgkB,OAAQ,EAAGS,eAAgB,EAAGxkB,aAAc,EAAG1C,MAAO,SAE/D,gBAACwrB,GAAA,EAAKG,QAAN,CACElpB,MAAO,CAAE2C,YAAa,EAAGqgB,WAAY,EAAGpgB,aAAc,EAAGopB,cAAe,IAExE,gBAAC,KAAK7K,KAAN,CACEnhB,MAAO,CAAEzC,MAAO,QAChBwX,MAAK,MAAEmM,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAYzU,KAAK5G,KACxBwsB,WAAY,CAAE/c,WAAY,QAC1Bid,iBAAkB,CAAEvvB,SAAU,IAC9B+nB,YAAW,MAAE/J,GAAF,SAAEA,EAAME,OAAR,SAAE,EAAY/X,OAAd,SAAE,EAAkBtD,WAApB,EAAE,EAAwBsV,QAAQ,IAAK,KAAKwqB,cACvDvlC,KAAM,4BACJ,MAAC4gB,GAAD,SAACA,EAAME,OAAP,SAAC,EAAYzU,OAAZ,EAAkBsC,MAUjB,gBAAC,KAAOga,MAAR,CACEhU,OAAQ,CAAEc,IAAG,MAAEmL,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAYzU,KAAKsC,OAChCjP,MAAO,CACL0D,UAAW,SACXod,iBAAkB,GAClBrb,gBAAiB8M,EAAOrC,QAAQX,QAAQc,OAE1CrK,KAAM,KAhBR,gBAAC,KAAOggB,KAAR,CACEpF,KAAK,UACL5gB,MAAO,CACL0D,UAAW,SACXod,iBAAkB,IAEpB9a,KAAM,MAcZqc,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,mBAC7BtL,QAAS,wBACP6F,EAAWoa,SAAS,oBAAqB,CACvC9W,OAAM,MAAEyC,GAAF,SAAEA,EAAME,WAAR,EAAE,EAAYjjB,aAUnC29C,GACC,gBAAC7rB,GAAA,EAAD,CACEjwB,MAAOqC,GAAOmoB,IACdvK,OAAK,EACLW,KAAK,OACLtL,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAM3E,MAAMjF,SAAQ,KACpDud,MAAM,aAGV,gBAACy1B,GAAD,CACEh0C,KAAMq0C,EAAUr0C,KAChB2gB,QAAS,kBAAM1K,uBAAsB,kBAAMrJ,EAAS9B,GAAQF,MAAM3E,MAAMjF,SAAQ,QAChF+T,UAAW,WACTkB,uBAAsB,WACpBrJ,EAAS9B,GAAQF,MAAM3E,MAAMjF,SAAQ,IACrC6a,WAQZ,IAAMhhB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,GAER2V,MAAM,SACDhoB,IAAWiT,oBADX,IAEH0W,SAAU,EACVtX,KAAM,EACNjR,UAAW,SACXhB,WAAY,SACZiB,eAAgB,WAElB6mB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,EACP5M,OAAQ,GAEVV,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdmqB,UAAW,CACTlb,eAAgB,GAChBjnB,OAAQ,EACRD,MAAO,SCvLX,IAAM8E,GAASC,IAAWC,OAAO,CAC/By5C,eAAgB,CACd/vB,SAAU,GAEZgwB,MAAO,CACLx2C,gBAAiB,cACjBtC,MAAO,UACPD,SAAU,IAEZ0d,KAAM,CACJE,iBAAkB,KAIP0d,GAxDf,YAQuB,IAPrBrjB,EAOoB,EAPpBA,WACA+I,EAMoB,EANpBA,SACAua,EAKoB,EALpBA,MACAyd,EAIoB,EAJpBA,SACAhuC,EAGoB,EAHpBA,WACAiuC,EAEoB,EAFpBA,cACA/tC,EACoB,EADpBA,iBAEQ6B,EAAU2D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAxCtC,MACR,OACE,gBAAC2uB,GAAA,EAAOC,OAAR,CACE7+B,MAAO,CAAEyF,gBAAiBwK,EAAMG,KAAOH,EAAMX,OAAOiJ,WAAatI,EAAMX,OAAOmT,UAE7EyB,EAAW,gBAAC0a,GAAA,EAAOE,WAAR,CAAmBxpB,QAAS6F,EAAWqiB,SAAa,KAC/D2e,EAAgB,gBAACvd,GAAA,EAAOE,WAAR,CAAmBxpB,QAAS,kBAAMlH,GAAiB,MAAa,KAChF+tC,EACC,gBAAC72C,EAAA,QAAD,CAAMtF,MAAOqC,GAAO25C,gBAClB,gBAAC75B,GAAA,EAAD,CACEniB,MAAOqC,GAAO45C,MACdt0C,MAAOuG,GAAc,GACrB6T,aAAc,SAACzJ,GAAD,OAAU4jC,EAAS5jC,IACjC8jC,WAAS,KAIb,gBAACxd,GAAA,EAAO1V,QAAR,CACEnU,MAAO0pB,EAAMQ,WAAWv+B,QAAQqU,MAChCwd,WAAY,CAAE/c,WAAY,UAG9B,gBAACw8B,GAAA,EAAD,CACEjsC,KAAK,SACLuP,QAAS,kBAAMlH,GAAkB+tC,IACjCh5C,MAAM,UACN6C,KAAM,GACNhG,MAAOqC,GAAOue,SC1BhBy7B,GAAW3B,eAEF,SAAS4B,KACtB,MAAwC1oC,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQ9F,SAAtEgC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,WACnBkG,EAAWV,KAEjB,OACE,gBAAC2oC,GAASzB,UAAV,CACEC,cAAe,CACbC,aAAa,EACbjX,OAAQ,SAACvmC,GAAD,OACN,gBAAC,GAAD,QACMA,EADN,CAEE4Q,WAAYA,EACZiuC,cAAeluC,EACfG,iBAAkB,SAAC4L,GAAD,OAChB5F,EAAS9B,GAAQP,QAAQ9F,MAAMmC,iBAAiB4L,KAElDkiC,SAAU,SAAC5jC,GAAD,OAAUlE,EAAS9B,GAAQP,QAAQ9F,MAAMkC,cAAcmK,SAGrEyiC,UAAW,CACTpmC,KAAM,KAIV,gBAAC0nC,GAASrB,OAAV,CACEj1C,KAAK,cACLtH,UAAWm9C,GACXl7C,QAAS,CAAEqU,MAAO,oBAEpB,gBAACsnC,GAASrB,OAAV,CACEj1C,KAAK,oBACLtH,UAAWic,GACXha,QAAS,CAAEqU,MAAO,UAEpB,gBAACsnC,GAASrB,OAAV,CACEj1C,KAAK,sBACLtH,UAAWy7C,GACXx5C,QAAS,CAAEqU,MAAO,gBAEpB,gBAACsnC,GAASrB,OAAV,CACEj1C,KAAK,qBACLtH,UAAW4vC,GACX3tC,QAAS,CAAEqU,MAAO,kBAEpB,gBAACsnC,GAASrB,OAAV,CACEj1C,KAAK,kBACLtH,UAAW08C,GACXz6C,QAAS,CAAEqU,MAAO,gBC5D1B,IAAMwnC,GAAU7B,eAED,SAAS1hC,KACtB,OACE,gBAACujC,GAAQ3B,UAAT,CACEC,cAAe,CACbC,aAAa,EACbjX,OAAQ,SAACvmC,GAAD,OAAW,gBAAC,GAAD,QAAYA,EAAZ,CAAmBohC,cAAY,MAClDqc,UAAW,CACTpmC,KAAM,IAGV6nC,iBAAiB,uBAEjB,gBAACD,GAAQvB,OAAT,CACEj1C,KAAK,sBACLtH,UAAWy8C,GACXx6C,QAAS,CAAEqU,MAAO,mBAGpB,gBAACwnC,GAAQvB,OAAT,CACEj1C,KAAK,sBACLtH,UAAWy7C,GACXx5C,QAAS,CAAEqU,MAAO,qBClCX,yBAAM,kC,qkBC4BrB,IAAM0nC,GAAYC,eAEZC,GAAet4C,WAASu4C,wBAAwBl6B,MACvC,SAASm6B,KACtB,MAA2BjpC,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAjDtC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACTK,EAA6C,SAAhCusC,IAAWC,iBAExBC,EAAev9B,GAAezY,EAAWi2C,UAEzCC,EAAY3+C,WAChB,iBAAO,CACLq/B,WAAY,CACVz6B,MAAO8M,EAAMG,KAAOH,EAAMX,OAAO+Q,UAAYnQ,EAAQuS,SAEvD7B,KAAM,CACJu8B,YAAajtC,EAAQuS,QACrB26B,cAAeltC,EAAQX,QAAQa,MAEjCmI,WAAY,CACV4kC,YAAajtC,EAAQX,QAAQY,KAC7BitC,cAAentC,EAAMX,OAAOmT,YAGhC,CACEvS,EAAQX,QAAQa,KAChBF,EAAQX,QAAQY,KAChBD,EAAQuS,QACRxS,EAAMX,OAAO+Q,UACbpQ,EAAMX,OAAOmT,QACbxS,EAAMG,OAGJitC,EAA2C9+C,WAC/C,iBAAO,CACLk8C,SAAS,SACJyC,GADG,IAENt8B,KAAK,SACAs8B,EAAUt8B,MADX,IAEFniB,UAAW,gBAAG6+C,EAAH,EAAGA,cAAet3C,EAAlB,EAAkBA,KAAM7C,EAAxB,EAAwBA,MAAxB,OACT,gBAACw5C,GAAD,CACE52C,KAAK,WACL/F,MAAO,CAACqC,GAAOue,KAAM08B,EAAgBj7C,GAAOk7C,gBAAar9C,GACnD8F,OAAM7C,MAAOA,SAK3B6V,cAAc,SACTkkC,GADQ,IAEXt8B,KAAK,SACAs8B,EAAUt8B,MADX,IAEFniB,UAAW,gBAAG6+C,EAAH,EAAGA,cAAet3C,EAAlB,EAAkBA,KAAM7C,EAAxB,EAAwBA,MAAxB,OACT,gBAACw5C,GAAD,CACE52C,KAAK,eACL/F,MAAO,CAACqC,GAAOue,KAAM08B,EAAgBj7C,GAAOk7C,gBAAar9C,GACnD8F,OAAM7C,MAAOA,SAK3Bq6C,MAAM,SACDN,GADA,IAEHt8B,KAAK,SACAs8B,EAAUt8B,MADX,IAEFniB,UAAW,gBAAG6+C,EAAH,EAAGA,cAAet3C,EAAlB,EAAkBA,KAAM7C,EAAxB,EAAwBA,MAAxB,OACT,gBAACw5C,GAAD,CACE52C,KAAK,wBACL/F,MAAO,CAACqC,GAAOue,KAAM08B,EAAgBj7C,GAAOk7C,gBAAar9C,GACnD8F,OAAM7C,MAAOA,YAM7B,CAAC+5C,IAGH,OACE,gBAACT,GAAU7B,UAAX,MACE4B,iBAAiB,YACbn2C,IAASkqB,OAAO,CAClBI,IAAK,GACLH,IAAK,CACHitB,OAAQ,SAACngD,GAAD,OACN,gBAAC,GAAD,MACEogD,OAAO,SACPL,KAAMA,EAGNlpC,UAAU,uBACVwpC,gBAAiB,IACjBC,cAAe,IACXtgD,MAIVozB,QAAS,CACP+sB,OAAQ,SAACngD,GAAD,OACN,gBAAC,GAAD,MACEogD,OAAO,SACPL,KAAMA,EAGNlpC,UAAU,uBACVwpC,gBAAiB,IACjBC,cAAe,IACXtgD,QA5Bd,CAiCEugD,cAAe,CACbC,gBAAiB,UACjBC,wBAAyB9tC,EAAMG,KAAOH,EAAMX,OAAO0uC,SAAW/tC,EAAMX,OAAOC,QAC3E0uC,sBAAuBhuC,EAAMG,KAAOH,EAAMX,OAAOmT,QAAUxS,EAAMX,OAAOC,QACxE2uC,kBAAmB,UACnBC,UAA2B,QAAhB93C,IAASC,GACpB83C,UAAU,EACVp+C,MAAO,CACLyF,gBAAiBwK,EAAMG,KAAOH,EAAMX,OAAOiJ,WAAa,UACxD8lC,eAAgB/7C,IAAWwgB,cAC3Bw7B,eAAgB,cAIpB,gBAAC7B,GAAUzB,OAAX,CACEj1C,KAAK,WACLtH,UAAWk8C,GACXj6C,QAAS,CACP69C,YAAa,gBAAGC,EAAH,EAAGA,QAASr7C,EAAZ,EAAYA,MAAZ,OACVq7C,EACC,gBAACv4C,EAAA,EAAD,CACEjG,MAAO,CACLqC,GAAO0jB,MACP,CAAE5iB,MAAOoN,GAAciuC,EAAUvuC,EAAMX,OAAOC,QAAUpM,KAH5D,YADS,MAUbs7C,WAAY,gBAAGD,EAAH,EAAGA,QAASr7C,EAAZ,EAAYA,MAAO6C,EAAnB,EAAmBA,KAAnB,OACV,gBAAC0c,GAAA,EAAD,CACE3c,KAAK,WACL/F,MAAO,CAACqC,GAAOue,KAAM49B,EAAUn8C,GAAOk7C,gBAAar9C,GAC7C8F,OACN7C,MAAOoN,GAAciuC,EAAUvuC,EAAMX,OAAOC,QAAUpM,KAG1Du7C,eAAe,KAGnB,gBAACjC,GAAUzB,OAAX,CACEj1C,KAAK,gBACLtH,UAAWkgD,GACXj+C,QAAS,CACP69C,YAAa,gBAAGC,EAAH,EAAGA,QAASr7C,EAAZ,EAAYA,MAAZ,OACVq7C,EACC,gBAACv4C,EAAA,EAAD,CACEjG,MAAO,CACLqC,GAAO0jB,MACP,CAAE5iB,MAAOoN,GAAciuC,EAAUvuC,EAAMX,OAAOC,QAAUpM,KAH5D,iBADS,MAUbs7C,WAAY,gBAAGD,EAAH,EAAGA,QAASr7C,EAAZ,EAAYA,MAAO6C,EAAnB,EAAmBA,KAAnB,OACV,gBAAC0c,GAAA,EAAD,CACE3c,KAAK,OACL/F,MAAO,CAACqC,GAAOue,KAAM49B,EAAUn8C,GAAOk7C,gBAAar9C,GAC7C8F,OACN7C,MAAOoN,GAAciuC,EAAUvuC,EAAMX,OAAOC,QAAUpM,KAG1Du7C,eAAe,KAGlB1B,GACC,gBAACP,GAAUzB,OAAX,CACEj1C,KAAK,QACLtH,UAAWmgD,GACXl+C,QAAS,CACP69C,YAAa,gBAAGC,EAAH,EAAGA,QAASr7C,EAAZ,EAAYA,MAAZ,OACVq7C,EACC,gBAACv4C,EAAA,EAAD,CACEjG,MAAO,CACLqC,GAAO0jB,MACP,CAAE5iB,MAAOoN,GAAciuC,EAAUvuC,EAAMX,OAAOC,QAAUpM,KAH5D,SADS,MAUbs7C,WAAY,gBAAGz4C,EAAH,EAAGA,KAAM7C,EAAT,EAASA,MAAOq7C,EAAhB,EAAgBA,QAAhB,OACV,gBAAC97B,GAAA,EAAD,CACQ1c,OAAM7C,QACZ4C,KAAK,gBACL/F,MAAO,CAACqC,GAAOue,KAAM49B,EAAUn8C,GAAOk7C,gBAAar9C,GAC7C8F,OACN7C,MAAOoN,GAAciuC,EAAUvuC,EAAMX,OAAOC,QAAUpM,KAG1Du7C,eAAe,MAQ3B,I,GAAMr8C,GAASC,IAAWC,OAAO,CAC/Bqe,KAAM,CACJxc,QAAS,KAEXm5C,WAAY,CACVn5C,QAAS,GAEX2hB,MAAO,CACL5iB,MAAO,UACPD,SAAU,M,oBC7OR27C,GAAkBnhC,aAAH,8fA8BN,SAAS7C,KAAmB,IAAD,EAClCzG,EAAWV,KACXuT,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAClD,EAAmC0L,aAAgB4gC,IAA3CvhC,EAAR,EAAQA,KAAMrJ,EAAd,EAAcA,QAASoP,EAAvB,EAAuBA,QACjBlI,EAAa+Y,2BAEnB,OACE,gBAAC4qB,GAAA,EAAD,CAAc9+C,MAAOqC,GAAOG,WAC1B,gBAACu8C,GAAA,EAAD,CACEzhC,MAAU,MAAJA,GAAA,SAAAA,EAAM0hC,gBAAN,IAAiB/9B,QAAS,GAChCuT,WAAY,EACZO,WAAY9gB,EACZ+gB,UAAW,kBAAM3R,KACjBrjB,MAAO,CAAE2U,KAAM,EAAGpX,MAAO,QACzBytB,sBAAuB,CACrBiB,SAAU,EACV1uB,MAAO,OACPyuB,cAAe,KAEjBiZ,mBAAoB,kBAClB,gBAAC7a,GAAD,CAAWrV,MAAM,gBAAgBsV,SAAS,sBAAsBlnB,MAAM,aAExEgyB,WAAY,YAAe,IAAD,UAAXjqB,EAAW,EAAXA,KACb,OACE,gBAAC6d,GAAA,EAAD,CACE/oB,MAAO,CACLzC,MAAO4E,KAAWC,IAAI,UAAU7E,MAAQ,EAAI,GAC5CymB,OAAQ,GAEV1O,QAAS,0BAAA5W,EAAAC,OAAA,gDACP,MAAIuM,KAAMkW,OACF69B,IAAoBh4B,EAAYpX,kBACtCuE,EAAS9B,GAAQC,OAAOtB,YAAY/F,EAAKkW,OAErC69B,GAGF9jC,EAAWE,QAAQ,gBAAiB,CAClC8pB,OAAQ,gBATP,8DAeJ,MAAJj6B,GAAA,SAAAA,EAAMkW,OAAN,EAAYxY,OACX,gBAACmgB,GAAA,EAAKmrB,MAAN,CAAYj/B,OAAQ,CAAEc,IAAG,MAAE7K,GAAF,SAAEA,EAAMkW,WAAR,EAAE,EAAYxY,UAEvC,gBAACtD,EAAA,QAAD,CACEtF,MAAO,CACLqC,GAAO68C,OACP,CAAEz5C,iBAAqB,MAAJyF,GAAA,SAAAA,EAAMkW,WAAN,IAAYzY,oBAAgBzI,KAGjD,gBAAC,KAAO8lB,KAAR,CACEhmB,MAAO,CAAEyF,iBAAqB,MAAJyF,GAAA,SAAAA,EAAMkW,WAAN,IAAY1Y,sBAAkBxI,GACxD0gB,KAAK,sBAKX,gBAACmI,GAAA,EAAKG,QAAN,KACE,gBAAClB,GAAA,EAAD,WAAQ9c,GAAR,SAAQA,EAAMkW,WAAd,EAAQ,EAAYrb,WAO9B,gBAACkqB,GAAA,EAAD,CACEjwB,MAAOqC,GAAOmoB,IACdvK,OAAK,EACLW,KAAK,OACLtL,QAAS,WACPlB,EAAS9B,GAAQF,MAAMtI,MAAM1E,SAC7BgP,EAAS9B,GAAQF,MAAMvG,WAAWzG,SAClCgP,EAAS9B,GAAQF,MAAM9E,SAASlI,SAChC+V,EAAWoa,SAAS,wBAEtBxP,MAAM,qBAMd,I,GAAM1jB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACN4G,QAAS,EACT5M,QAAS,OACTsd,SAAU,EACVxmB,gBAAiB,WAEnBy5C,OAAQ,CACN1hD,OAAQ,IACRkF,WAAY,SACZiB,eAAgB,UAElB6mB,IAAK,CACH/sB,SAAU,WACVumB,OAAQ,GACR3B,MAAO,GACP5M,OAAQ,EACRhQ,gBAAiB,WAEnB6kB,MAAO,CACL3V,KAAM,EACNlP,gBAAiB,UACjB/C,WAAY,SACZiB,eAAgB,SAChBpG,MAAO,OACPC,OAAQ,UC/GGye,MArCyByB,aAAH,spBAgDT,CAC1BvB,WAAY,SAACkB,GAAD,OAAYA,EAAO8hC,gBAC/B/iC,cAAe,CACb4rB,aAAc,cAEhBjsB,UAAW,CACThW,KAAM,CAAC2V,GAAW,wBC/CP,SAASZ,KACtB,IAAM3S,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,YAC5C8G,EAAWV,KAEXyrC,EAAiBC,GAA0B,CAC/C/oC,QAAS,SAAC6W,GAAD,OACP9Y,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASmlB,EAAGrW,QAAS,YACrEyF,aAAc,SAAChU,EAAOV,GAAR,OACZwM,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAACD,EAAiBV,MAElE2U,UAAW,SAAClU,GAAD,OACF,MAAPA,OAAA,EAAAA,EAASiF,WAAY8G,EAAS9B,GAAQC,OAAOtB,YAAY5I,EAAQiF,cAGrE,OACE,gBAACyqB,GAAD,CAAkB/M,sBAAuB,CAAEvoB,kBAAmB,KAC5D,gBAACoxC,GAAD,CAAc5/B,QAASkrC,EAAelrC,UACtC,gBAAC,GAAD,CAAMjU,MAAOqC,GAAOoF,QAClB,gBAACyN,EAAA,EAAD,CACEG,KAAK,YACLF,SAAUgqC,EAAelrC,QACzBA,QAASkrC,EAAelrC,QACxBqB,QAAS,wBACP6pC,EAAe1iC,OAAO,CACpB1W,KAAMoC,EAAMV,OAAO1B,KAAK4B,OAAS,GACjCiB,OAAQT,EAAMV,OAAOmB,OAAOjB,MAC5BqgC,aAAc57B,OAAM,SAACjE,EAAMV,OAAOgB,WAAWd,YAAzB,EAAC,EAA+BxJ,IACpDoB,IAAK4I,EAAMV,OAAOlI,IAAIoI,OAAS,KAC/BnI,IAAK2I,EAAMV,OAAOjI,IAAImI,OAAS,KAC/Be,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,KACrDgB,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,SAZvD,UAuBR,IAAMtF,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNjS,WAAY,UAEdqS,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdmqB,UAAW,CACTlb,eAAgB,GAChBjnB,OAAQ,EACRD,MAAO,OAETkK,OAAQ,CACNlK,MAAO,QAET+K,MAAO,CACLkc,aAAc,KChEZ66B,GAAQ3E,eAEC,SAAS9/B,KACtB,OACE,gBAACykC,GAAMzE,UAAP,CACEC,cAAe,CACbC,aAAa,EACbC,UAAW,CACTpmC,KAAM,IAGV6nC,iBAAiB,aAEjB,gBAAC6C,GAAMrE,OAAP,CAAcj1C,KAAK,kBAAkBtH,UAAWoc,KAChD,gBAACwkC,GAAMrE,OAAP,CAAcj1C,KAAK,uBAAuBtH,UAAWqc,M,qCCJrDwkC,GAAkB5hC,aAAH,wYAsBN,SAAS1C,KACtB,IAAM7S,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQhD,SAC9CqF,EAAWV,KACXyH,EAAa+Y,2BACnB,EAA8B1X,aAAsB8iC,IAApD,WAAOC,EAAP,KAAsBjiC,EAAtB,KAEMkiC,EAAUjhD,eAAkB,sCAAAG,EAAAC,OAAA,mDAG1B8gD,EAAa,IAAI5jC,OADP,0JAEZ+4B,GAAW,EAEVzsC,EAAMV,OAAOwC,MAAMtC,QACtBitC,GAAW,EACXxgC,EAAS9B,GAAQP,QAAQhD,MAAMP,cAAc,uBAG1CrG,EAAMV,OAAO4G,SAAS1G,QACzBitC,GAAW,EACXxgC,EAAS9B,GAAQP,QAAQhD,MAAMN,iBAAiB,0BAG7CgxC,EAAWtiC,KAAKhV,EAAMV,OAAOwC,MAAMtC,SACtCitC,GAAW,EACXxgC,EAAS9B,GAAQP,QAAQhD,MAAMP,cAAc,gCAG1ComC,EArB2B,6CAAAl2C,EAAA,MAuBP6gD,EAAc,CACjCziC,UAAW,CACT7S,MAAO9B,EAAMV,OAAOwC,MAAMtC,MAC1B0G,SAAUlG,EAAMV,OAAO4G,SAAS1G,UA1BR,QA8BlB,OAPJ0V,EAvBsB,SA8BxB,SAAAA,EAAQC,OAAR,WAAcoiC,YAAd,EAAyBC,iBAAzB,MAA4CtiC,GAA5C,SAA4CA,EAAQC,OAApD,SAA4C,EAAcoiC,YAAd,EAAyB3vC,cACvEqE,EAAS9B,GAAQC,OAAO/B,eAAe6M,EAAOC,KAAKoiC,UAAU3vC,cAC7DqE,EAAS9B,GAAQC,OAAO9B,QAAQ4M,EAAOC,KAAKoiC,UAAUC,mBAhC5B,kDAmC5BvrC,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,KAAEA,QACX8O,QAAS,WAtCe,mEA2C/B,CAACzC,EAAUmrC,EAAep3C,EAAMV,OAAOwC,MAAMtC,MAAOQ,EAAMV,OAAO4G,SAAS1G,QAE7E,OACE,gBAAC,GAAD,CAAM3H,MAAOqC,GAAOG,WAClB,gBAACymB,GAAA,EAAD,CAAOhU,OAAQ2qC,KAAM5/C,MAAO,CAAExC,OAAQ,IAAKD,MAAO,QAAUimC,WAAW,YACvE,gBAACxJ,GAAA,EAAD,CAAsBh6B,MAAOqC,GAAOoF,OAAQwyB,SAAS,WACnD,gBAAC9X,GAAA,EAAD,CACE4D,MAAM,QACN1Q,KAAK,WACL1N,MAAOQ,EAAMV,OAAOwC,MAAMtC,MAC1Boa,aAAc,SAAC8E,GACbzS,EAAS9B,GAAQP,QAAQhD,MAAMT,SAASuY,OAG5C,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASpe,EAAMV,OAAOwC,MAAMrC,OAAS,KAEtD,gBAACua,GAAA,EAAD,CACE4D,MAAM,WACN1Q,KAAK,WACL1N,MAAOQ,EAAMV,OAAO4G,SAAS1G,MAC7Bk4C,iBAAe,EACf99B,aAAc,SAAC8E,GACbzS,EAAS9B,GAAQP,QAAQhD,MAAMR,YAAYsY,KAE7Ci5B,gBAAiBN,EACjB53C,QAASO,EAAMV,OAAO4G,SAASzG,QAEjC,gBAAC0e,GAAA,EAAD,CAAYC,KAAK,SAASpe,EAAMV,OAAO4G,SAASzG,OAAS,KACzD,gBAACsN,EAAA,EAAD,CACEG,KAAK,YACLuoB,WAAYv7B,GAAOggC,YACnBriC,MAAOqC,GAAO+S,OACdE,QAASkqC,EACTvrC,QAASqJ,EAAKrJ,SALhB,UAUA,gBAACiB,EAAA,EAAD,CACE0oB,WAAYv7B,GAAO09C,gBACnB//C,MAAOqC,GAAO29C,WACd1qC,QAAS,kBAAM6F,EAAWoa,SAAS,kBAHrC,aAYR,I,GAAMlzB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNjS,WAAY,SACZiB,eAAgB,SAChB8B,gBjKvIwB,UiKwIxBud,WAAY,IAEdjO,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAGd/N,OAAQ,CACN+c,aAAc,GACdhJ,WAAY,GACZ8b,SAAU,IACV/5B,MAAO,OACPkF,kBAAmB,GACnBgD,gBAAiB,eAEnB2P,OAAQ,CACNoG,UAAW,GACX/V,gBAAiB,QACjBlI,MAAO,QAET8kC,YAAa,CACXl/B,MAAO,WAET68C,WAAY,CACVxkC,UAAW,GACX/V,gBAAiB,cACjBtC,MAAO,QACP5F,MAAO,QAETwiD,gBAAiB,CACf58C,MAAO,aCjII8Y,MAxCqByB,aAAH,8xBAwC8D,CAC7FvB,WAAY,SAACkB,GAAD,OAAYA,EAAO4iC,YAC/B7jC,cAAe,CACbjS,QAAS,aAEX4R,UAAW,CACThW,KAAM,CAAC2V,GAAW,qBAClBzR,MAAO,CAAC2R,GAAQ,+BAChB9M,qBAAsB,CACpBiN,GACE,qFACA,SAACtU,GAAD,MACE,mDAAmD0V,KAAK1V,EAAOqH,yBAEnEiN,GACE,yBACA,SAACtU,GAAD,OAAYA,EAAO4G,WAAa5G,EAAOqH,4BC9ChC,SAASoxC,KACtB,IAAM/3C,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAKpE,QAAQ/C,UAC9CiY,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAC5C6B,EAAWV,KACXyH,EAAa+Y,2BAEnB,EAAsCisB,GAAkB,CACtD5jC,UAAW,SAAClU,GAWV,OATA+L,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAAS,kDACT8O,QAAS,aAIbsE,EAAWoa,SAAS,eAEb,MAETjZ,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQP,QAAQ/C,OAAOzG,cAAc,CAACD,EAAoCX,QAf/EsM,EAAR,EAAQA,QAAiBmsC,EAAzB,EAAiB3jC,OAkBjB,OACE,gBAACsb,GAAD,CAAkB/3B,MAAOqC,GAAOG,UAAWwoB,sBAAuB3oB,GAAOe,SACvE,gBAAC42B,GAAA,EAAD,CAAsBh6B,MAAOqC,GAAOoF,OAAQwyB,SAAS,YACnD,gBAAChR,GAAA,EAAD,CAAOhU,OAAQ2qC,KAAM5/C,MAAO,CAAEzC,MAAO,OAAQC,OAAQ,KAAOgmC,WAAW,YACvE,gBAACrhB,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,MAAOQ,EAAMV,OAAO1B,KAAK4B,MACzBoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQP,QAAQ/C,OAAO9G,SAAS,CAAC,OAAQ2e,QAEhF,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASpe,EAAMV,OAAO1B,KAAK6B,OAAS,IAErD,gBAAC0e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOuC,WAAWpC,MAAQ,QAAU,QACzDO,EAAMV,OAAOuC,WAAWpC,OAAS,IAGpC,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,QACNne,QAASO,EAAMV,OAAOwC,MAAMrC,MAC5BD,MAAOQ,EAAMV,OAAOwC,MAAMtC,MAC1Boa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQP,QAAQ/C,OAAO9G,SAAS,CAAC,QAAS2e,QAIvD,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASpe,EAAMV,OAAOwC,MAAMrC,OAAS,IAgBtD,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,WACNne,MAAOqd,QAAQ9c,EAAMV,OAAO4G,SAASzG,OAASO,EAAMV,OAAOqH,qBAAqBlH,OAChFy4C,gBAAgB,WAChBR,iBAAe,EACfS,cAAc,mEACd34C,MAAOQ,EAAMV,OAAO4G,SAAS1G,MAC7Boa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQP,QAAQ/C,OAAO9G,SAAS,CAAC,WAAY2e,QAI1D,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASpe,EAAMV,OAAO4G,SAASzG,OAAS,IAEzD,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,kBACNne,MAAOqd,QAAQ9c,EAAMV,OAAO4G,SAASzG,OAASO,EAAMV,OAAOqH,qBAAqBlH,OAChFy4C,gBAAgB,WAChBR,iBAAe,EACfS,cAAc,mEACd34C,MAAOQ,EAAMV,OAAOqH,qBAAqBnH,MACzCoa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQP,QAAQ/C,OAAO9G,SAAS,CAAC,uBAAwB2e,QAGtE,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASpe,EAAMV,OAAOqH,qBAAqBlH,OAAS,IAErE,gBAACsN,EAAA,EAAD,CACEG,KAAK,YACLuoB,WAAYv7B,GAAOggC,YACnBriC,MAAOqC,GAAO+S,OACdE,QAAS,0BACP8qC,EAAS,CACPpiC,UAAWiJ,EAAYjX,cACvB/F,MAAO9B,EAAMV,OAAOwC,MAAMtC,MAC1B5B,KAAMoC,EAAMV,OAAO1B,KAAK4B,MACxBqC,WAAY7B,EAAMV,OAAOuC,WAAWrC,MACpC0G,SAAUlG,EAAMV,OAAO4G,SAAS1G,MAChCmH,qBAAsB3G,EAAMV,OAAOqH,qBAAqBnH,MACxDiW,UAAWxR,OAAM,SAACjE,EAAMV,OAAO0C,UAAd,SAAC,EAAsBxC,YAAvB,EAAC,EAA6BxJ,KAAO,KACtD+L,MAAO/B,EAAMV,OAAOyC,MAAMvC,SAG9BsM,QAASA,GAhBX,aAyBR,IAAM5R,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTmS,KAAM,EACNlP,gBnKvIwB,WmKyI1BrC,QAAS,CACPX,kBAAmB,GACnBC,WAAY,SACZ+C,gBAAiB,eAEnB2P,OAAQ,CACNoG,UAAW,GACX/V,gBAAiB,QACjBlI,MAAO,QAET8kC,YAAa,CACXl/B,MAAO,WAET4R,MAAO,CACL7R,SAAU,GACVsS,WAAY,QAEdmqB,UAAW,CACTlb,eAAgB,GAChBjnB,OAAQ,EACRD,MAAO,OAETkK,OAAQ,CACNlK,MAAO,OACP0uB,SAAU,EACVqL,SAAU,IACV7xB,gBAAiB,eAEnB6C,MAAO,CACLkc,aAAc,EACd/e,gBAAiB,QACjBhC,YAAa,QACbN,MAAO,WCxKLk8C,GAAQ3E,eAEC,SAAS3/B,KACtB,OACE,gBAAC,GAAM6/B,UAAP,CACEC,cAAe,CACbC,aAAa,EACbC,UAAW,CACTpmC,KAAM,KAIV,gBAAC,GAAMqmC,OAAP,CAAcj1C,KAAK,cAActH,UAAWuc,KAC5C,gBAAC,GAAMggC,OAAP,CAAcj1C,KAAK,eAAetH,UAAWwc,MCmBnD,IAAM5Y,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTE,WAAY,SACZ+C,gBAAiB,eAEnBrC,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB0R,MAAO,CACL5R,MAAO,QACPqhB,aAAc,IACdthB,SAAU,GACVsS,WAAY,QAEdwX,KAAM,CACJzR,QAAS,GACTkJ,eAAgB,GAChBlnB,MAAO,UAIIgjD,GAxDf,SAAsCjjD,GACpC,IAAM6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,YAC5C8G,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAc1T,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,sBACtD,gBAACzP,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC2lB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK9H,UAAN,aACA,gBAAC/C,GAAA,EAAD,CACE9M,KAAK,WACLzN,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,MAAOQ,EAAMV,OAAO1B,KAAK4B,OAAS,GAClCoa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,OAAQ2e,QAGtD,gBAACP,GAAA,EAAD,CAAYC,KAAK,SAASpe,EAAMV,OAAO1B,KAAK6B,OAAS,KAEvD,gBAACmhB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAACmb,GAAD,CACExgC,MAAOQ,EAAMV,OAAOgB,WAAWd,MAC/BwY,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,aAAcP,QAE/E,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOgB,WAAWb,MAAQ,QAAU,QACzDO,EAAMV,OAAOgB,WAAWb,OAAS,Q,+kBCiJ9C,IAAMvF,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,SACZ+C,gBAAiB,eAEnBysB,eAAgB,CACdz0B,SAAU,WACV2C,IAAK,IACLE,KAAM,EACN/C,MAAO,OACP8F,cAAe,SACfX,WAAY,SACZiB,eAAgB,cAElBoR,MAAO,CACL7R,SAAU,GACVsS,WAAY,OACZrS,MAAO,QACPL,UAAW,SACXC,gBAAiB,wBACjBC,iBAAkB,GAClBC,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,IAGZs1C,YAAY,SACPxwC,IAAWiT,oBADL,IAET5R,eAAgB,SAChBi5B,OAAQ,IACRl6B,WAAY,SACZW,cAAe,WAEjBD,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB2pB,KAAM,CACJzR,QAAS,EACTE,gBAAiB,GACjBgJ,eAAgB,GAChBlnB,MAAO,QAETw1C,WAAY,CACVt1C,SAAU,WACVgY,OAAQ,MACR4M,MAAO,GACP5c,gBAAiB,QACjBxF,aAAc,GACdsb,QAAS,MAIEy3B,GAvNf,SAA4B11C,GAA4B,IAAD,IAC/C6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,YAC5C8G,EAAWV,KACjB,EAA4BnV,aAA5B,WAAOZ,EAAP,KAAew1C,EAAf,KAEMlW,EAAmB1+B,eAAkB,8BAAAG,EAAAC,OAAA,2EAAAD,EAAA,MAEdG,QAFc,mBAGxB,aADPC,EAF+B,EAE/BA,QAF+B,uBAIrCW,QAAQC,IAAIZ,GAJyB,6CAAAJ,EAAA,MAOhBG,KAAiC,KAPjB,QAOjCk+B,EAPiC,OASvC3oB,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,MAAO60B,EAASn/B,OAAO0D,YACjE8S,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,MAAO60B,EAASn/B,OAAOs+B,aAEjEiX,EAAU,CACR5zC,IAAKw9B,EAASn/B,OAAO0D,SACrB9B,IAAKu9B,EAASn/B,OAAOs+B,YAdgB,kDAiBvCz8B,QAAQC,IAAR,MAjBuC,mEAmBxC,CAAC0U,IAGJ7V,aAAgB,WACiB,OAA3B4J,EAAMV,OAAOlI,IAAIoI,OAA4C,MAA1BQ,EAAMV,OAAOjI,IAAImI,OACtDs1B,MAED,CAACA,EAAkB90B,EAAMV,OAAOlI,IAAIoI,MAAOQ,EAAMV,OAAOjI,IAAImI,QAE/D,IAAMvD,EAAU7F,SAAa,IAAI8F,KAASC,MAAM,IAE1C8uC,EACJjrC,EAAMV,OAAOlI,IAAIoI,OAASQ,EAAMV,OAAOjI,IAAImI,MACvC,CACErG,SAAU6G,EAAMV,OAAOlI,IAAIoI,MAC3Bu0B,UAAW/zB,EAAMV,OAAOjI,IAAImI,MAC5B64C,cAAen/C,aAAqB8G,EAAMV,OAAOlI,IAAIoI,OACrD84C,eAAgBp/C,aAAqB8G,EAAMV,OAAOlI,IAAIoI,aAExDzH,EAEAqzC,EAAUh1C,SACd8F,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,KAGf2uC,EAASj1C,SACb8F,KAASK,OAAON,EAAQxF,QAAS,CAC/B+F,SAAU,IACVC,QAAS,EACTC,iBAAiB,KAGf4uC,EAAoBl1C,eAAkB,SAACyb,GAC3Cva,QAAQC,IAAI,CAAEsa,aACbA,EAAUw5B,EAASD,GAAS30C,QAAQqG,UACpC,IAEH,EAA0BsvB,eAAlB/2B,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,MAChB,EAAkCgB,YAAe,GAAjD,WAAO49B,EAAP,KAAmBC,EAAnB,KAEA,OACE,gBAAC,GAAD,MACExE,eAAa,EACb53B,MAAOqC,GAAOG,UACdpE,eAAgB,CAAEqE,kBAAmB,IACjCnF,GAEJ,gBAAC,KAAD,CACEe,SAAQ,MACHiE,IAAWiT,oBAEhB9X,SAAU,CACR8C,EAAG,EACHF,EAAG,GAEC7C,SAAQD,QACdK,OACQ,MAANw1C,KAAQ9xC,UAAR,MAAoB8xC,KAAQlX,UACxB,CAAE38B,IAAG,MAAE6zC,OAAF,EAAEA,EAAQ9xC,SAAU9B,IAAG,MAAE4zC,OAAF,EAAEA,EAAQlX,gBACtCh8B,EAENyzC,YAAa,WACXvX,GAAY,GACZqX,GAAkB,IAEpB91C,OAAQA,QAAUuC,EAClBnC,UAAW,SAAC61C,GAAO,IAAD,IAChB,SAAAL,EAAQ30C,UAAR,EAAiBuG,OACjB,SAAAquC,EAAO50C,UAAP,EAAgBuG,OAChBsuC,GAAkB,GAClBrX,GAAY,GACZhoB,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,MAAO0rC,EAAEr0C,OACnD6U,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,MAAO0rC,EAAEp0C,QAErD1B,aAAW,GAETs1C,EACA,gBAAC9tC,EAAA,QAAD,CAAMtF,MAAOqC,GAAOywC,YAAatyC,cAAc,QAC7C,gBAACkiB,GAAA,EAAD,CACEliB,cAAc,OACdwF,KAAM,GACNhG,MAAO,CACLmD,MAAO,UACPJ,gBAAiB,qBACjBE,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,GAClB45B,OAAQ,IAEV72B,KAAMo2B,EAAa,aAAe,8BAf7B,MAoBb,gBAAC/gB,GAAA,EAAD,CACEpb,MAAOqC,GAAO0wC,WACdz9B,QAAS,WACP2nB,MAGF,gBAAC+U,GAAA,EAAD,CAAejsC,KAAK,cAAcC,KAAM,MAG1C,gBAACV,EAAA,QAAD,CAAMtF,MAAOqC,GAAO6vB,gBAClB,gBAACjsB,EAAA,EAAD,CAAMjG,MAAOqC,GAAO0S,OAApB,iBACA,gBAAC,KAAS9O,KAAV,CACEjG,MAAO,CACLkD,SAAU,GACVsY,UAAW,GACXpX,QAASA,EAAQxF,QACjBkE,UAAW,SACXK,MAAO,UACPJ,gBAAiB,qBACjBE,iBAAkB,CAChB1F,MAAO,EACPC,OAAQ,GAEVwF,iBAAkB,KAGnB,MAACowC,KAAQ9xC,UAAY,MAAC8xC,KAAQlX,UAC7B,sCACGkX,GADH,SACGA,EAAQ9xC,eADX,EACG,EAAkB6nB,QAAQ,GAD7B,UACkCiqB,GADlC,SACkCA,EAAQlX,gBAD1C,EACkC,EAAmB/S,QAAQ,IAFpB,SC9DrD,IAAM9mB,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB2pB,KAAM,CAAEzR,QAAS,EAAGkJ,eAAgB,GACpCuW,UAAW,CACT33B,cAAe,MACfM,eAAgB,iBAElBs3B,UAAW,CACTzlB,WAAY,OACZyN,YAAa,EACb/f,SAAU,GACVQ,UAAW,UAEbqR,MAAO,CACL5R,MAAO,QACPqhB,aAAc,GACdhP,WAAY,OACZtS,SAAU,GACVJ,UAAW,UAEbwF,MAAO,CACLkc,aAAc,GAEhB0W,OAAQ,CACN73B,cAAe,UAEjB83B,cAAe,CAAE59B,MAAO,OAAQC,OAAQ,IACxC8vB,YAAa,CACX5pB,UAAW,UAEb03B,oBAAqB,CACnB79B,MAAO,OAET89B,qBAAsB,CACpB14B,YAAa,GACbpF,MAAO,SAIImjD,GAhJf,SAA8BpjD,GAA4B,IAAD,gBACjD6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMtI,SAClD,EAAgCvL,YAAoB,MAAL4J,GAAA,SAAAA,EAAOV,SAAP,WAAe6C,eAAf,IAAyB3C,QAAS,GAAjF,WAAO2C,EAAP,KAAiBq2C,EAAjB,KACA,EAAgCpiD,YAAoB,MAAL4J,GAAA,SAAAA,EAAOV,SAAP,WAAesC,eAAf,IAAyBpC,QAAS,GAAjF,WAAOoC,EAAP,KAAiB62C,EAAjB,KACMxsC,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAc1T,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,aACtD,gBAACzP,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC2lB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK9H,UAAN,oBACA,gBAAC/C,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,OACNne,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,MAAOQ,EAAMV,OAAO1B,KAAK4B,MACzBoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMtI,MAAM5B,SAAS,CAAC,OAAQ2e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO1B,KAAK6B,MAAQ,QAAU,QACnDO,EAAMV,OAAO1B,KAAK6B,OAAS,IAG9B,gBAACua,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,eACNne,QAASO,EAAMV,OAAO4C,aAAazC,MACnCD,MAAOQ,EAAMV,OAAO4C,aAAa1C,OAAS,GAC1Coa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMtI,MAAM5B,SAAS,CAAC,eAAgB2e,QAG3D,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO4C,aAAazC,MAAQ,QAAU,QAC3DO,EAAMV,OAAO4C,aAAazC,OAAS,KAIxC,gBAACmhB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,KAAMhE,UAAW,GACnC,gBAAC1jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO24B,WAClB,gBAAC,KAAK9V,UAAN,sBACA,gBAACjf,EAAA,EAAD,CAAMjG,MAAOqC,GAAO44B,WAAY3wB,GAAY,IAG9C,gBAAChF,EAAA,QAAD,CAAMtF,MAAOqC,GAAO64B,QAClB,gBAAC,KAAD,CACEl7B,MAAOqC,GAAO84B,cACd0lB,aAAc,EACdC,aAAc/2C,GAAY,GAC1Bg3C,KAAM,EACNp5C,MAAO2C,EACP02C,sBAAsB,UACtBC,sBAAsB,UACtBjQ,cAAe,SAACrpC,GAAD,OAAWg5C,EAAYh5C,IACtCu5C,kBAAmB,kBACjB9sC,EAAS9B,GAAQF,MAAMtI,MAAM5B,SAAS,CAAC,WAAYoC,SAKzD,gBAACgc,GAAA,EAAD,CAAYC,KAAM,SAAApe,EAAMV,OAAO6C,WAAb,EAAuB1C,MAAQ,QAAU,SACxD,SAAAO,EAAMV,OAAO6C,eAAb,IAAuB1C,QACtB,mFAIN,gBAACmhB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,KAAMhE,UAAW,GACnC,gBAAC1jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO24B,WAClB,gBAAC,KAAK9V,UAAN,kBACA,gBAACjf,EAAA,EAAD,CAAMjG,MAAOqC,GAAO44B,WAAYlxB,GAAY,KAG9C,gBAACzE,EAAA,QAAD,CAAMtF,MAAOqC,GAAO64B,QAClB,gBAAC,KAAD,CACEl7B,MAAOqC,GAAO84B,cACd0lB,aAAc,EACdC,aAAc,GACdC,KAAM,EACNC,sBAAsB,UACtBC,sBAAsB,UACtBt5C,MAAOoC,EACPinC,cAAe,SAACrpC,GAAD,OAAWi5C,EAAYj5C,IACtCu5C,kBAAmB,kBACjB9sC,EAAS9B,GAAQF,MAAMtI,MAAM5B,SAAS,CAAC,WAAYkE,OAAOrC,UAKhE,gBAACuc,GAAA,EAAD,CAAYC,KAAM,SAAApe,EAAMV,OAAOsC,WAAb,EAAuBnC,MAAQ,QAAU,SACxD,SAAAO,EAAMV,OAAOsC,eAAb,IAAuBnC,QAAS,4CC5C7C,I,GAAMvF,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEd4F,MAAO,CACLkc,aAAc,GAEhBphB,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB2pB,KAAM,CAAEzR,QAAS,EAAGkJ,eAAgB,IAEpC+sB,SAAU,CACRh0C,OAAQ,GACRD,MAAO,GACPymB,OAAQ,KAIGm9B,GAnEf,SAAmC7jD,GACjC,IAAM6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,YAC5C8G,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAc1T,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,aACtD,gBAACzP,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAACkC,EAAA,QAAD,CACEtF,MAAO,CACLqD,cAAe,MACfX,WAAY,WACZiB,eAAgB,iBAGlB,gBAACwwC,GAAD,CACExrC,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,UACjDe,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,YAGvD,gBAACysC,GAAD,CACEzrC,aAAcR,EAAMV,OAAOkB,aAAahB,OAAS,UACjDe,eAAgBP,EAAMV,OAAOiB,eAAef,OAAS,aAIzD,gBAAC,GAAD,CACEoN,MAAM,gBACN28B,WAAW,wEACX9pC,MAAOO,EAAMV,OAAOkB,aAAaf,MACjC0wB,SAAU,SAACn1B,GAAD,OAAWiR,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,eAAgB/E,MAC/EwE,MAAOQ,EAAMV,OAAOkB,aAAahB,OAAS,YAG5C,gBAAC,GAAD,CACEoN,MAAM,eACN28B,WAAW,qEACX9pC,MAAOO,EAAMV,OAAOiB,eAAed,MACnC0wB,SAAU,SAACn1B,GAAD,OAAWiR,EAAS9B,GAAQF,MAAM9E,SAASpF,SAAS,CAAC,iBAAkB/E,MACjFwE,MAAOQ,EAAMV,OAAOiB,eAAef,OAAS,e,kBClChD6vC,GAA6B95B,aAAH,4MAsDhC,IAAMrb,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,SACfmhB,aAAc,IAEhBwI,KAAM,CAAEzR,QAAS,EAAGkJ,eAAgB,IACpCuW,UAAW,CACT33B,cAAe,MACfM,eAAgB,iBAElBs3B,UAAW,CACTzlB,WAAY,OACZyN,YAAa,EACb/f,SAAU,GACVQ,UAAW,UAEbqR,MAAO,CACL5R,MAAO,QACPqhB,aAAc,GACdhP,WAAY,OACZtS,SAAU,GACVJ,UAAW,UAEbwF,MAAO,CACLkc,aAAc,GAEhB0W,OAAQ,CACN73B,cAAe,UAEjB83B,cAAe,CAAE59B,MAAO,OAAQC,OAAQ,IACxC8vB,YAAa,CACX5pB,UAAW,UAEb03B,oBAAqB,CACnB79B,MAAO,OAET89B,qBAAsB,CACpB14B,YAAa,GACbpF,MAAO,SAII6jD,GApFf,SAAgC9jD,GAAiC,IAAD,QACtDoiB,EAAwBpiB,EAAxBoiB,WAAesC,EAAvB,KAAgC1kB,EAAhC,IACM+jD,EAAeztC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,YACzD,EAAgDsY,aAAoB4xB,IAApE,WAAO8J,EAAP,YAAqBhkC,EAArB,EAAqBA,KAAMrJ,EAA3B,EAA2BA,QAAS2K,EAApC,EAAoCA,OAYpC,OAVArgB,aAAgB,WAAO,IAAD,EACpB,SAAI8iD,EAAa95C,WAAb,EAAuBpJ,IACzBmjD,EAAW,CACTxkC,UAAW,CACTiB,WAAY3R,OAAOi1C,EAAa95C,SAASpJ,SAI9C,CAACkjD,EAAa95C,SAAU+5C,IAGzB,gBAAC,GAAD,MAActhD,MAAOqC,GAAOG,WAAewf,GACzC,gBAAC1c,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SACfwb,IAAW3K,GAAX,MAAsBqJ,GAAtB,SAAsBA,EAAMhQ,WAA5B,SAAsB,EAAgBw4B,QAAhB,EAAuBxsB,OAC9C,gBAACyP,GAAA,EAAD,KACE,gBAACA,GAAA,EAAKG,QAAN,CAAclpB,MAAO,CAAE0C,WAAY,SAAUiB,eAAgB,WAA7D,MACG2Z,GADH,SACGA,EAAMhQ,WADT,SACG,EAAgBw4B,YADnB,EACG,EAAuBxnC,KAAI,SAAC+K,GAAD,aAC1B,gBAAC6tC,GAAD,CACEtN,eAAgBlqB,EAChBrW,KAAMA,EACN0L,MAAOs4B,sBAAU,MAAChkC,GAAD,SAACA,EAAMtD,WAAP,EAAC,EAAYsV,QAAQ,IAAK,aAPK,QCiFlE,I,SAAMhZ,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB2pB,KAAM,CAAEzR,QAAS,EAAGkJ,eAAgB,IACpCuW,UAAW,CACT33B,cAAe,MACfM,eAAgB,iBAElBs3B,UAAW,CACTzlB,WAAY,OACZyN,YAAa,EACb/f,SAAU,GACVQ,UAAW,UAEbqR,MAAO,CACL5R,MAAO,QACPqhB,aAAc,EACdhP,WAAY,OACZtS,SAAU,GACVJ,UAAW,UAEbsvB,UAAW,CACTjvB,MAAO,QACPqhB,aAAc,EACdhP,WAAY,OAEZ1S,UAAW,UAEbwF,MAAO,CACLkc,aAAc,EACd1D,iBAAkB,IAEpBoa,OAAQ,CACN73B,cAAe,UAEjB83B,cAAe,CAAE59B,MAAO,OAAQC,OAAQ,IACxC8vB,YAAa,CACX5pB,UAAW,UAEb03B,oBAAqB,CACnB79B,MAAO,OAET89B,qBAAsB,CACpB14B,YAAa,GACbpF,MAAO,SAIIgkD,GA/Kf,SAAgCjkD,GAA4B,IAAD,QACnD6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvG,cAC5CuI,EAAWV,KACjB,EAAgDnV,YAAe,GAA/D,WAAOg6B,EAAP,KAAyBC,EAAzB,KACA,EAA0Bj6B,WAAe,GAAzC,WAAOijD,EAAP,KAAcC,EAAd,KAEA,OACE,gBAAC,GAAD,MAAczhD,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,YACtD,gBAACwV,GAAA,EAAD,CAAWvqB,MAAOqC,GAAO+vB,WAAzB,iDAEA,gBAAC9sB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC2lB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK9H,UAAN,aACA,gBAAC/C,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACLzN,QAASO,EAAMV,OAAO1B,KAAK6B,MAC3BD,MAAOQ,EAAMV,OAAO1B,KAAK4B,OAAS,GAClCoa,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,OAAQ2e,QAGxD,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO1B,KAAK6B,MAAQ,QAAU,QACnDO,EAAMV,OAAO1B,KAAK6B,OAAS,KAIhC,gBAACmhB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,KAAMhE,UAAW,GACnC,gBAAC1jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO24B,WAClB,gBAAC,KAAK9V,UAAN,cACA,gBAACjf,EAAA,EAAD,CAAMjG,MAAOqC,GAAO44B,WAApB,IAAiCumB,GAAS,IAG5C,gBAACl8C,EAAA,QAAD,CAAMtF,MAAOqC,GAAO64B,QAClB,gBAAC,KAAD,CACEl7B,MAAOqC,GAAO84B,cACd0lB,aAAc,EACdC,aAAc,IACdC,KAAM,EACNp5C,MAAO65C,EACPR,sBAAsB,UACtBC,sBAAsB,UACtBC,kBAAmB,kBAAM9sC,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,OAAQs5C,MAC7ExQ,cAAeyQ,KAInB,gBAACn7B,GAAA,EAAD,CAAYC,KAAM,SAAApe,EAAMV,OAAO8B,OAAb,EAAmB3B,MAAQ,QAAU,SACpD,SAAAO,EAAMV,OAAO8B,WAAb,IAAmB3B,QAClB,mFAIN,gBAACmhB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,KAAMhE,UAAW,GACnC,gBAACvI,GAAA,EAAD,CACExG,UAAW,kBAAMue,GAAoB,IACrCxe,QAASue,EACTZ,aAAc,CAAEp6B,MAAO,KACvBmjB,OACE,gBAAC,IAAD,CAAkBpL,QAAS,kBAAMkjB,GAAoB,KACnD,gBAAClzB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO24B,WAClB,gBAAC,KAAK9V,UAAN,iBACA,gBAACjf,EAAA,EAAD,CAAMjG,MAAOqC,GAAO44B,WACjB9yB,EAAMV,OAAOmF,SAASjF,OACvB,CAAC,IAAM,MAAOmY,SAAS3X,EAAMV,OAAOmF,SAASjF,OACzC,CACE,KAAS,SACT,IAAQ,aACRQ,EAAMV,OAAOmF,SAASjF,MAAMmf,YAC9B,aAMZ,gBAAC,KAAK3F,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,WAAY,OACxDswB,GAAoB,IAEtBzjB,MAAM,YACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,iBAE/B,gBAAC,KAAKO,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,WAAY,QACxDswB,GAAoB,IAEtBzjB,MAAM,SACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,wBAE/B,gBAAC,KAAKO,KAAN,CACE7L,QAAS,WACPlB,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,WAAY,OACxDswB,GAAoB,IAEtBzjB,MAAM,QACNsN,MAAO,kBAAM,gBAAC,KAAK2D,KAAN,CAAWpF,KAAK,oBAI9BzY,EAAMV,OAAOmF,SAASjF,QACtB,CAAC,IAAM,MAAOmY,SAAS3X,EAAMV,OAAOmF,SAASjF,SAC9C,gBAACwa,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,kBACNne,QAASO,EAAMV,OAAOmF,SAAShF,MAC/BD,MAAK,SAAEQ,EAAMV,OAAOmF,WAAf,SAAE,EAAuBjF,YAAzB,EAAE,EAA8Bmf,WACrC/E,aAAc,SAAC8E,GAAD,OACZzS,EAAS9B,GAAQF,MAAMvG,WAAW3D,SAAS,CAAC,WAAYkE,OAAOya,aC/DhE5K,MAnDkByB,aAAH,q9BAsDF,CAC1BvB,WAAY,SAACkB,GAAD,OAAYA,EAAOw3B,gBAC/Bz4B,cAAe,KCDFH,MAvDeyB,aAAH,4gCAkEF,CACvBvB,WAAY,SAACkB,GAAD,OAAYA,EAAO83B,aAC/B/4B,cAAe,CACb9O,SAAU,cAEZyO,UAAW,CACThW,KAAM,CAAC2V,GAAW,qBAClBrR,aAAc,CAACqR,GAAW,gCClBfO,MAvDeyB,aAAH,k/BA0DF,CACvBvB,WAAY,SAACkB,GAAD,OAAYA,EAAOmW,aAC/BpX,cAAe,KCkSFslC,OA5Uf,WAAgC,IAAD,UACvBC,EAAW/tC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMtI,SAC/CmuC,EAASrkC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMvG,cAC7CyB,EAAWsG,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAM9E,YAC/C8G,EAAWV,KACXyH,EAAa+Y,2BAEb0tB,EAAyBxC,GAA0B,CACvD/oC,QAAS,SAACzO,GACRwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,YAEzE0F,UAAW,SAAClU,GAAD,OAAa5I,QAAQC,IAAI2I,IACpCiU,aAAc,SAAChU,EAAOX,GACpByM,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAACD,EAA+BX,KAC9ElI,QAAQC,IAAI4I,EAAOX,MAGjBgtC,EAAyBkN,GAA0B,CACvDxrC,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,YACzE0F,UAAW,SAAClU,GAAD,OAAa5I,QAAQC,IAAI2I,IACpCiU,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAACD,EAA+BX,QAE5EstC,EAAsB6M,GAAuB,CACjDzrC,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,YACzE0F,UAAW,SAAClU,GAAD,OAAa5I,QAAQC,IAAI2I,IACpCiU,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAACD,EAA4BX,QAEtEutC,EAAsB6M,GAAuB,CACjD1rC,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,YACzE0F,UAAW,SAAClU,GAAD,OAAa5I,QAAQC,IAAI2I,IACpCiU,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAACD,EAA4BX,QAEtEq6C,EAA2B7R,GAA4B,CAC3D95B,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,YACzE0F,UAAW,SAAClU,GAAD,OAAa5I,QAAQC,IAAI2I,IACpCiU,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQF,MAAMvG,WAAWtD,cAAc,CAACD,EAAiCX,QAEhF+oC,EAA2BN,GAA4B,CAC3D/5B,QAAS,SAACzO,GAAD,OACPwM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,QAASH,EAAOiP,QAAS,YACzE0F,UAAW,SAAClU,GAAD,OAAa5I,QAAQC,IAAI2I,IACpCiU,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQF,MAAMvG,WAAWtD,cAAc,CAACD,EAAiCX,QAGhFs6C,EAAkB1jD,eACtB,SAAO0M,EAAeorB,GAAtB,SAAA33B,EAAAC,OAAA,mDACO2O,EAAS7F,OAAO1B,KAAK4B,MAD5B,uBAEIyM,EAAS9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,OAAQ,oCAF3D,6BAKO+E,EAAS7F,OAAOgB,WAAWd,MALlC,uBAMIyM,EACE9B,GAAQF,MAAM9E,SAAS/E,cAAc,CACnC,aACA,wDATR,0BAeE8tB,EAASprB,EAAQ,GAfnB,8DAiBA,CAACmJ,EAAU9G,EAAS7F,OAAOgB,WAAWd,MAAO2F,EAAS7F,OAAO1B,KAAK4B,QAG9Du6C,EAAgB3jD,eACpB,SAAO0M,EAAeorB,GAAtB,6BAAA33B,EAAAC,OAAA,mDACO2O,EAAS7F,OAAOkB,aAAahB,MADpC,uBAEIyM,EACE9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,eAAgB,iCAH5D,6BAOO+E,EAAS7F,OAAOiB,eAAef,MAPtC,uBAQIyM,EACE9B,GAAQF,MAAM9E,SAAS/E,cAAc,CAAC,iBAAkB,iCAT9D,6BAaE9I,QAAQC,IAAI4N,EAAS7F,QAbvB,SAgBkB6F,EAAS/F,WAAT,EAAmBpJ,GAhBrC,oCAAAO,EAAA,MAiBYkjD,EAAuBnlC,OAAO,CAClCurB,aAAc57B,OAAM,SAACkB,EAAS7F,OAAOgB,WAAWd,YAA5B,EAAC,EAAkCxJ,IACvD4H,KAAMuH,EAAS7F,OAAO1B,KAAK4B,OAAS,GACpCiB,OAAQ,GACRD,aAAc2E,EAAS7F,OAAOkB,aAAahB,MAC3Ce,eAAgB4E,EAAS7F,OAAOiB,eAAef,MAC/CpI,IAAK+N,EAAS7F,OAAOlI,IAAIoI,MACzBnI,IAAK8N,EAAS7F,OAAOjI,IAAImI,SAxBjC,+DAAAjJ,EAAA,MA0BYi2C,EAAuBl4B,OAAO,CAClCte,GAAIiO,OAAOkB,EAAS/F,SAASpJ,IAC7B6pC,aAAc57B,OAAM,SAACkB,EAAS7F,OAAOgB,WAAWd,YAA5B,EAAC,EAAkCxJ,IACvD4H,KAAMuH,EAAS7F,OAAO1B,KAAK4B,OAAS,GACpCgB,aAAc2E,EAAS7F,OAAOkB,aAAahB,MAC3Ce,eAAgB4E,EAAS7F,OAAOiB,eAAef,MAC/CpI,IAAK+N,EAAS7F,OAAOlI,IAAIoI,MACzBnI,IAAK8N,EAAS7F,OAAOjI,IAAImI,MACzBiB,OAAQ,MAlChB,4BAqCM,OArBEyU,EAhBR,OAqCM,SAACA,EAAQG,SAAR,EAAgBlE,QAAjB,MAA2B+D,GAA3B,SAA2BA,EAAQ/P,YAAR,EAAkBnP,KAC/CiW,EAAS9B,GAAQF,MAAM9E,SAAS9E,QAAvB,MAA+B6U,OAA/B,EAA+BA,EAAQ/P,WAChD8G,EAAS9B,GAAQC,OAAOtB,YAAf,MAA2BoM,OAA3B,EAA2BA,EAAQ/P,WACxC+P,EAAO/P,SAAS3E,cAClByL,EAAS9B,GAAQC,OAAO3B,gBAAf,MAA+ByM,GAA/B,SAA+BA,EAAQ/P,eAAvC,EAA+B,EAAkB3E,eAExD0U,EAAO/P,SAAS5E,gBAClB0L,EAAS9B,GAAQC,OAAOvB,eAAf,MAA8BqM,GAA9B,SAA8BA,EAAQ/P,eAAtC,EAA8B,EAAkB5E,iBAE3D2tB,EAASprB,EAAQ,IA9CrB,+DAiDA,CACEmJ,EACA9G,EAAS7F,OAFX,SAGE6F,EAAS/F,eAHX,EAGE,EAAmBpJ,GACnByjD,EACAjN,IAIEwN,EAAiB5jD,eACrB,SAAO0M,EAAeorB,GAAtB,uBAAA33B,EAAAC,OAAA,mDACOgjD,EAASl6C,OAAO1B,KAAK4B,MAD5B,uBAEIyM,EAAS9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAAC,OAAQ,iCAFxD,6BAKOo5C,EAASl6C,OAAO4C,aAAa1C,MALpC,uBAMIyM,EACE9B,GAAQF,MAAMtI,MAAMvB,cAAc,CAChC,eACA,0CATR,sCAgBkBo5C,EAASp6C,WAAT,EAAmBpJ,GAhBrC,mCAAAO,EAAA,MAiBYu2C,EAAoBx4B,OAAO,CAC/BsB,WAAY3R,OAAM,MAACkB,GAAD,SAACA,EAAU/F,eAAX,EAAC,EAAoBpJ,IACvC4H,KAAM47C,EAASl6C,OAAO1B,KAAK4B,MAC3B0C,aAAcs3C,EAASl6C,OAAO4C,aAAa1C,MAC3C2C,SAAU8B,OAAOu1C,EAASl6C,OAAO6C,SAAS3C,OAC1CoC,SAAUqC,OAAOu1C,EAASl6C,OAAOsC,SAASpC,UAtBlD,8DAAAjJ,EAAA,MAwBYw2C,EAAoBz4B,OAAO,CAC/Bte,GAAIiO,OAAOu1C,EAASp6C,SAASpJ,IAC7B4H,KAAM47C,EAASl6C,OAAO1B,KAAK4B,MAC3B0C,aAAcs3C,EAASl6C,OAAO4C,aAAa1C,MAC3C2C,SAAUq3C,EAASl6C,OAAO6C,SAAS3C,MACnCoC,SAAU43C,EAASl6C,OAAOsC,SAASpC,SA7B3C,4BAgCM,OAhBE0V,EAhBR,OAgCM,SAACA,EAAQG,SAAR,EAAgBlE,QAAjB,MAA2B+D,GAA3B,SAA2BA,EAAQvT,SAAR,EAAe3L,KAC5CiW,EAAS9B,GAAQF,MAAMtI,MAAMtB,QAApB,MAA4B6U,OAA5B,EAA4BA,EAAQvT,QAC7CusB,EAASprB,EAAQ,IAlCrB,+DAqCA,CACE02C,EAASl6C,OAAOsC,SAASpC,MACzBg6C,EAASl6C,OAAO6C,SAAS3C,MACzBg6C,EAASl6C,OAAO1B,KAAK4B,MACrBg6C,EAASl6C,OAAO4C,aAAa1C,MAJ/B,SAKEg6C,EAASp6C,eALX,EAKE,EAAmBpJ,GACnBiW,EANF,MAOE9G,GAPF,SAOEA,EAAU/F,eAPZ,EAOE,EAAoBpJ,GACpB82C,EACAC,IAIEkN,EAAmB7jD,eACvB,SAAO0M,EAAeorB,GAAtB,uBAAA33B,EAAAC,OAAA,mDACOs5C,EAAOxwC,OAAO1B,KAAK4B,MAD1B,uBAEIyM,EAAS9B,GAAQF,MAAMvG,WAAWtD,cAAc,CAAC,OAAQ,+BAF7D,6BAMO0vC,EAAOxwC,OAAO8B,KAAK5B,MAN1B,uBAOIyM,EAAS9B,GAAQF,MAAMvG,WAAWtD,cAAc,CAAC,OAAQ,+BAP7D,sCAYkB0vC,EAAO1wC,WAAP,EAAiBpJ,GAZnC,mCAAAO,EAAA,MAaYsjD,EAAyBvlC,OAAO,CACpCsB,WAAY3R,OAAM,SAACkB,EAAS/F,eAAV,EAAC,EAAmBpJ,IACtC4H,KAAMkyC,EAAOxwC,OAAO1B,KAAK4B,MACzB4B,KAAM0uC,EAAOxwC,OAAO8B,KAAK5B,MACzBiF,SAAUqrC,EAAOxwC,OAAOmF,SAASjF,MACjCmF,UAAU,EACVD,sBAAsB,KAnB9B,8DAAAnO,EAAA,MAqBYgyC,EAAyBj0B,OAAO,CACpCte,GAAIiO,OAAO6rC,EAAO1wC,SAASpJ,IAC3B4H,KAAMkyC,EAAOxwC,OAAO1B,KAAK4B,MACzB4B,KAAM0uC,EAAOxwC,OAAO8B,KAAK5B,MACzBiF,SAAUqrC,EAAOxwC,OAAOmF,SAASjF,MACjCmF,UAAU,EACVD,sBAAsB,KA3B9B,4BA8BM,OAlBEwQ,EAZR,OA8BM,SAACA,EAAQG,SAAR,EAAgBlE,QAAjB,MAA2B+D,GAA3B,SAA2BA,EAAQxR,cAAR,EAAoB1N,KACjDiW,EAAS9B,GAAQF,MAAMvG,WAAWrD,QAAQ6U,EAAOxR,aACjDwqB,EAASprB,EAAQ,IAhCrB,+DAmCA,CACEgtC,EAAOxwC,OAAO1B,KAAK4B,MACnBswC,EAAOxwC,OAAO8B,KAAK5B,MACnBswC,EAAOxwC,OAAOmF,SAASjF,MAHzB,SAIEswC,EAAO1wC,eAJT,EAIE,EAAiBpJ,GACjB6jD,EALF,SAME10C,EAAS/F,eANX,EAME,EAAmBpJ,GACnBuyC,EACAt8B,IAIJ,OACE,gBAAC,GAAD,KACE,gBAACiuC,GAAD,CACE7qB,OAAQ,WACNpjB,EAAS9B,GAAQF,MAAMrE,eAAevF,SAAQ,IAC9C4L,EAAS9B,GAAQF,MAAMrE,eAAe3I,SACtCgP,EAAS9B,GAAQF,MAAMvG,WAAWrD,SAAQ,IAC1C4L,EAAS9B,GAAQF,MAAMtI,MAAMtB,SAAQ,IACrC4L,EAAS9B,GAAQF,MAAM9E,SAAS9E,SAAQ,IACxC4L,EAAS9B,GAAQF,MAAMvG,WAAWzG,SAClCgP,EAAS9B,GAAQF,MAAMtI,MAAM1E,SAC7BgP,EAAS9B,GAAQF,MAAM9E,SAASlI,SAChC+V,EAAWqiB,UAEb/F,gBAAgB,SAChBC,gBAAgB,OAChBvM,OAAQ82B,IAEV,gBAAC,GAAD,CACEzqB,OAAQ,SAACrsB,EAAKkrB,GAAN,OAAmBA,EAASlrB,EAAM,IAC1CggB,OAAQ,SAAChgB,EAAKkrB,GAAN,OAAmBA,EAASlrB,EAAM,IAC1CssB,gBAAgB,OAChBC,gBAAgB,SAGlB,gBAAC4qB,GAAD,CACE9qB,OAAQ,SAACrsB,EAAKkrB,GAAN,OAAmBA,EAASlrB,EAAM,IAC1CggB,OAAQ+2B,EACRjuC,QAAS2tC,EAAuB3tC,SAAW0gC,EAAuB1gC,QAClEyjB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC8qB,GAAD,CACE/qB,OAAQ,SAACrsB,EAAKkrB,GAAN,OAAmBA,EAASlrB,EAAM,IAC1CggB,OAAQg3B,EACRluC,QAASghC,EAAoBhhC,SAAWihC,EAAoBjhC,QAC5DyjB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC+qB,GAAD,CACEhrB,OAAQ,SAACrsB,EAAKkrB,GAAN,OAAmBA,EAASlrB,EAAM,IAC1CggB,OAAQi3B,EACRnuC,QAAS+tC,EAAyB/tC,SAAWy8B,EAAyBz8B,QACtEyjB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC,GAAD,CACE1iB,MAAM,oBACN2K,WAAY1Y,EAAWsoB,WACvBkI,OAAQ,SAACrsB,EAAKkrB,GAAN,OAAmBA,EAASlrB,EAAM,IAC1CggB,OAAQ,SAAChgB,EAAKkrB,GAAN,OAAmBA,EAASlrB,EAAM,IAC1CusB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC,GAAD,CACE1iB,MAAM,yBACN2K,WAAY1Y,EAAWqf,eACvBmR,OAAQ,SAACrsB,EAAKkrB,GAAN,OAAmBA,EAASlrB,EAAM,IAC1CggB,OAAQ,SAAChgB,EAAKkrB,GACZA,EAASlrB,EAAM,IAEjBusB,gBAAgB,OAChBD,gBAAgB,SAElB,gBAAC,GAAD,CACE1iB,MAAM,iBACNsV,SAAS,uDACToN,gBAAgB,OAChBC,gBAAgB,OAChBF,OAAQ,SAACrsB,EAAKkrB,GAAN,OAAmBA,EAASlrB,EAAM,IAC1CggB,OAAQ,WACN/W,EAAS9B,GAAQC,OAAOtB,YAAY3D,EAAS/F,WACzC+F,EAAS7F,OAAOkB,aAAahB,OAC/ByM,EAAS9B,GAAQC,OAAO3B,gBAAgBtD,EAAS7F,OAAOkB,aAAahB,QAEnE2F,EAAS7F,OAAOiB,eAAef,OACjCyM,EAAS9B,GAAQC,OAAOvB,eAAe1D,EAAS7F,OAAOiB,eAAef,QAExEyM,EAAS9B,GAAQC,OAAOtB,YAAY3D,EAAS/F,WAE7C6M,EAAS9B,GAAQF,MAAMrE,eAAevF,SAAQ,IAC9C4L,EAAS9B,GAAQF,MAAMrE,eAAe3I,SACtCgP,EAAS9B,GAAQF,MAAMvG,WAAWrD,SAAQ,IAC1C4L,EAAS9B,GAAQF,MAAMtI,MAAMtB,SAAQ,IACrC4L,EAAS9B,GAAQF,MAAM9E,SAAS9E,SAAQ,IACxC4L,EAAS9B,GAAQF,MAAMvG,WAAWzG,SAClCgP,EAAS9B,GAAQF,MAAMtI,MAAM1E,SAC7BgP,EAAS9B,GAAQF,MAAM9E,SAASlI,SAGhCgP,EAAS9B,GAAQF,MAAMrE,eAAeV,YAGtC8N,EAAWE,QAAQ,gBAAiB,CAAE8pB,OAAQ,oBCrQxD,I,GAAM9iC,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTypB,SAAU,EACVxmB,gBAAiB,UACjB/C,WAAY,SACZiB,eAAgB,UAElBid,KAAM,CACJnb,gB/K5FwB,U+K6FxB+e,aAAc,IAEhBi+B,UAAW,CACTh9C,gB/K9FwB,U+K+FxB+e,aAAc,IAEhBzP,MAAO,CACL7R,SAAU,GACVshB,aAAc,IAEhB6F,SAAU,CACRnnB,SAAU,GACVJ,UAAW,YAIA4/C,GArGf,WAA8B,IAAD,EACrB5vB,EAAQC,sBAMR3e,EAAWV,KACjB,EvK+bK,SAAgCiM,GAC/B,IAAMjf,EAAO,SAAOme,IAAmBc,GACvC,OAAOjK,KAA0F0J,GAAqB1e,GuKjc5FiiD,GAAhC,WAAOC,EAAP,KAAoB1mC,EAApB,KACM/H,EAAY5V,SAAyB,MAC3C,EAA0BA,YAAe,GAAzC,WAAOqJ,EAAP,KAAci7C,EAAd,KACM1nC,EAAa+Y,2BA4BnB,OA1BA31B,aAAgB,WAAO,IAAD,EACpB,MAAIu0B,GAAJ,SAAIA,EAAOG,SAAP,EAAe6vB,OACjBF,EAAY,CACV9lC,UAAW,CACTgmC,MAAOhwB,EAAMG,OAAO6vB,SAGrBryB,MAAK,YAAuB,IAAD,IAAnBnT,EAAmB,EAAnBA,KAAmB,EAAbE,OACb,MAAIF,GAAJ,SAAIA,EAAMylC,mCAAV,SAAI,EAAwChzC,cAAxC,EAAqDyH,aACvDpD,EACE9B,GAAQC,OAAO/B,eAAe8M,EAAKylC,iCAAiChzC,cAEtEqE,EACE9B,GAAQC,OAAO9B,QAAQ6M,EAAKylC,iCAAiCpD,kBAE/DxkC,EAAWoa,SAAS,oBAEpBstB,GAAS,MAGZG,OAAM,WACLH,GAAS,QAGd,CAACD,EAAaxuC,EAAU+G,EAAxB,SAAoC2X,EAAMG,aAA1C,EAAoC,EAAc6vB,QAEjD5mC,EAASjI,QAET,gBAAC3O,EAAA,QAAD,CAAMtF,MAAOqC,GAAOG,WAClB,gBAACyD,EAAA,EAAD,CAAMjG,MAAOqC,GAAO0S,OAApB,gBACA,gBAAC,EAAD,CACE0E,UAAQ,EACRhV,MAAI,EACJuQ,IAAKb,EACLnU,MAAO,CACLzC,MAAO,IACPC,OAAQ,IACRge,UAAW,GACXgJ,aAAc,IAGhBvP,OAAQ1O,EAAQ,OAElB,gBAACN,EAAA,EAAD,CAAMjG,MAAOqC,GAAOgoB,UAApB,kBAKEziB,EAON,gBAACtC,EAAA,QAAD,CAAMtF,MAAOqC,GAAOG,WAClB,gBAAC,KAAOwjB,KAAR,CAAapF,KAAK,QAAQ5gB,MAAOqC,GAAOogD,YACxC,gBAACx8C,EAAA,EAAD,CAAMjG,MAAOqC,GAAO0S,OAApB,SACA,gBAAC9O,EAAA,EAAD,CAAMjG,MAAOqC,GAAOgoB,UAApB,0BATF,gBAAC/kB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOG,WAClB,gBAAC,KAAOwjB,KAAR,CAAapF,KAAK,QAAQ5gB,MAAOqC,GAAOue,OACxC,gBAAC3a,EAAA,EAAD,CAAMjG,MAAOqC,GAAO0S,OAApB,aACA,gBAAC9O,EAAA,EAAD,CAAMjG,MAAOqC,GAAOgoB,UAApB,wB,qBCzCSnH,MA9BSxF,aAAH,8fA8BkD,CACrEvB,WAAY,SAACgH,GAAD,aAAWA,OAAX,EAAWA,EAAO67B,aChBjB,SAASiE,KAAc,IAAD,MAC3BhzC,EAAU2D,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAAxCtC,MACFmE,EAAWV,KACjB,EAA2CoK,KAAnCnO,EAAR,EAAQA,YAAarC,EAArB,EAAqBA,SAAU2G,EAA/B,EAA+BA,QACvBqJ,EAAS4lC,GAAkB,CACjC7sC,QAAS,SAAC7K,GAAD,OAAS/L,QAAQmI,MAAM4D,MAD1B8R,KAIFnC,EAAa+Y,2BACbpB,EAAQC,sBACRowB,EAAYC,wCAA6BtwB,GACzCuwB,EAAWloC,EAAWmoC,sBACtBC,EAAcF,EAASG,OAAOH,EAASp4C,OAAO9C,MAG9Cs7C,EAAY,MAAGF,OAAH,EAAGA,EAAaC,OAAb,MAAoBD,OAApB,EAAoBA,EAAat4C,OAChDy4C,EAAc,MAAGD,OAAH,EAAGA,EAAct7C,MACjCw7C,EAAeJ,GAAeH,wCAA6BK,GAC/DE,EAAeA,IAAY,MAAID,OAAJ,EAAIA,EAAgBF,OAAO,GAAGz9C,MAEzD,IAAMypC,EAAoB/vB,GAAezY,EAAWyoC,gBAC9CmU,EAAiBnkC,GAAezY,EAAW68C,aAC3CC,EAAuBrkC,GAAezY,EAAW+8C,kBACjDC,EAAkBvkC,GAAezY,EAAWi9C,aAC5CC,EAAuBzkC,GAAezY,EAAWi/B,iBACjDke,EAAkB1kC,GAAezY,EAAWioC,mBAC5CS,EAAiCjwB,GAAezY,EAAW2oC,oBAE3DyU,EACJ5U,GACAoU,GACAE,GACAE,GACAE,GACAC,GACAzU,EAEF,OACE,gBAACpqC,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,KAAM,EAAGqO,WAAY,MACjC/O,EACC,gBAAC,KAAD,CACE7V,eAAgBiE,GAAOgiD,SACvB9/B,WAAS,EACTxkB,OAAQ,CACN,CAAEmJ,IAAK,SAAUjJ,aAAc,GAAIzC,OAAQ,GAAID,MAAO,IACtD,CAAE2L,IAAK,OAAQ1L,OAAQ,GAAID,MAAO,IAAK6yB,WAAY,EAAG5U,UAAW,OAIrE,gBAAC,KAAK2F,KAAN,CACE7gB,KAAM,wBACJ,MAACqP,GAAD,SAACA,EAAahD,OAAb,EAAmBsC,MAQlB,gBAAC,KAAOga,MAAR,CACEjjB,KAAM,GACNiP,OAAQ,CAAEc,IAAG,MAAEpG,OAAF,EAAEA,EAAahD,KAAKsC,OACjCjP,MAAO,CAAEyF,gBAAiBwK,EAAMX,OAAOmT,WAVzC,gBAAC,KAAOuD,KAAR,CACEhgB,KAAM,GACN4a,KAAK,UACLzd,MAAO8M,EAAMX,OAAOC,QACpBvP,MAAO,CAAEyF,gBAAiBwK,EAAMX,OAAOmT,YAU7C1N,MAAK,MAAEpF,GAAF,SAAEA,EAAahD,WAAf,EAAE,EAAmB5G,KAC1BklB,YAAW,YAAO3d,OAAP,EAAOA,EAAUvH,MAC5BwsB,WAAYlwB,GAAOiiD,mBACnB7xB,iBAAkBpwB,GAAOkiD,sBACzBvkD,MAAOqC,GAAOmiD,cACdlvC,QAAS,WACP6F,EAAWoa,SAAS,gBAAiB,CACnC4P,OAAQ,gBACRlS,OAAQ,CACNkS,OAAQ,WACRlS,OAAQ,CACNkS,OAAQ,uBAQpB,gBAAC9S,GAAD,CACE7O,MAAO,CACL,CACEzO,MAAO,OACPpN,MAAO0lC,OAAuB,MAAX19B,GAAA,SAAAA,EAAatG,WAAb,IAAmBtD,OAAQ,IAAIsV,QAAQ,IAAK,OAEjE,CACEtG,MAAO,QACPpN,MAAM,MAAgB,MAAXgI,OAAA,EAAAA,EAAapC,UAAW,OAKzC,gBAAC,IAAD,CAAYk3C,8BAA8B,GACxC,gBAAC,KAAO7U,QAAR,CAAgB76B,MAAM,WACpB,gBAAC,KAAOoM,KAAR,CACE4E,MAAM,WACN2+B,OAAQ,WAAWvnC,KAAKwmC,GAAgB,IACxC/iC,KAAK,OACLtL,QAAS,WACP6F,EAAWoa,SAAS,gBAAiB,CACnC4P,OAAQ,gBACRlS,OAAQ,CACNkS,OAAQ,uBAKhB,gBAAC,KAAOhkB,KAAR,CACE4E,MAAM,UACN2+B,OAAyB,kBAAjBf,EACR/iC,KAAK,UACLtL,QAAS,WACP6F,EAAWoa,SAAS,gBAAiB,CACnC4P,OAAQ,gBACRlS,OAAQ,CACNkS,OAAQ,WACRlS,OAAQ,CACNkS,OAAQ,uBAMlB,gBAAC,KAAOhkB,KAAR,CACE4E,MAAM,YACN2+B,OAAyB,oBAAjBf,EACR/iC,KAAK,YACLtL,QAAS,WACP6F,EAAWoa,SAAS,gBAAiB,CACnC4P,OAAQ,gBACRlS,OAAQ,CACNkS,OAAQ,WACRlS,OAAQ,CACNkS,OAAQ,yBAOlB,gBAAC,KAAOhkB,KAAR,CACE4E,MAAM,gBACN2+B,OAAyB,kBAAjBf,EACR/iC,KAAK,OACLtL,QAAS,kBACP6F,EAAWoa,SAAS,gBAAiB,CACnC4P,OAAQ,gBACRlS,OAAQ,CACNkS,OAAQ,sBAKhB,gBAAC,KAAOhkB,KAAR,CACE4E,MAAM,eACN2+B,OAAyB,uBAAjBf,EACR/iC,KAAK,OACLtL,QAAS,WACP6F,EAAWoa,SAAS,gBAAiB,CACnC4P,OAAQ,gBACRlS,OAAQ,CACNkS,OAAQ,WACRlS,OAAQ,CACNkS,OAAQ,4BAOlB,gBAAC,KAAOhkB,KAAR,CACE4E,MAAM,UACNnF,KAAK,SACLtL,QAAS,WACPlB,EAAS9B,GAAQC,OAAOpB,UACxBgK,EAAW/G,SAAS2qB,iBAAc4lB,mBAIxC,gBAAC,KAAO/U,QAAR,CAAgB76B,MAAM,YACpB,gBAAC,KAAOoM,KAAR,CACE4E,MAAM,iBACN2+B,OAAyB,+BAAjBf,EACR/iC,KAAK,OACLtL,QAAS,WACP6F,EAAWoa,SAAS,gBAAiB,CACnC4P,OAAQ,gBACRlS,OAAQ,CACNkS,OAAQ,WACRlS,OAAQ,CACNkS,OAAQ,oCAMjBif,EACC,gBAAC,KAAOjjC,KAAR,CACEujC,OAAsB,aAAdvB,EACRp9B,MAAM,WACNnF,KAAK,MACLtL,QAAS,kBACP6F,EAAWoa,SAAS,gBAAiB,CACnC4P,OAAQ,gBACRlS,OAAQ,CACNkS,OAAQ,WACRlS,OAAQ,CACNkS,OAAQ,wBAMhB,MAEN,gBAAC,KAAOyK,QAAR,CAAgB76B,MAAM,mBAAtB,MACGuI,GADH,SACGA,EAAM2D,YADT,EACG,EAAa3iB,KAAI,SAAC4iB,GAAD,iBAChB,gBAAC,KAAOC,KAAR,CACEjY,KAAG,MAAKgY,GAAL,SAAKA,EAAME,WAAX,EAAK,EAAYjjB,IAAjB,MACH4nB,OAAW,MAAJ7E,GAAA,SAAAA,EAAME,WAAN,IAAYrb,OAAQ,GAC3B6a,KAAK,aACL8jC,QAAgB,MAARp3C,OAAA,EAAAA,EAAUnP,OAAV,MAAiB+iB,GAAjB,SAAiBA,EAAME,WAAvB,EAAiB,EAAYjjB,IACrCmX,QAAS,WACP,MAAI4L,KAAME,OACRhN,EAAS9B,GAAQC,OAAOtB,YAAYiQ,EAAKE,OACzCjG,EAAWoa,SAAS,gBAAiB,CACnC4P,OAAQ,yBAMlB,gBAAC,KAAOhkB,KAAR,CACE4E,MAAM,aACNnF,KAAK,OACLtL,QAAS,WACP6F,EAAWoa,SAAS,6BASlC,IAAMlzB,GAASC,IAAWC,OAAO,CAC/BqiD,cAAe,CACbn/C,gBAAiB,UACjBwmB,SAAU,GAEZo4B,SAAU,CACR7mD,OAAQ,GACRD,MAAO,OACPkF,kBAAmB,EACnBY,cAAe,MACfmhB,aAAc,IAEhBggC,cAAe,CACbhgC,aAAc,IAEhB8/B,mBAAoB,CAClB9uC,WAAY,OACZ4a,WAAY,GAEdm0B,sBAAuB,CACrBrhD,SAAU,GACVktB,WAAY,KCjQVivB,GAAQ3E,eACRmK,GAASC,eAEA,SAASC,KACtB,IAAM99B,EAAcrT,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UAElD,OACE,gBAAC,GAAMqoC,UAAP,CACEC,cAAe,CACbC,aAAa,EACbC,UAAW,CACTpmC,KAAM,KAITsS,EAAYlX,YACXkX,EAAYrX,gBACV,gBAAC,GAAMorC,OAAP,CAAcj1C,KAAK,kBAChB,kBACC,gBAAC8+C,GAAOjK,UAAR,CAAkBoK,cAAe,kBAAM,gBAAC/B,GAAD,QACrC,gBAAC4B,GAAO7J,OAAR,CAAej1C,KAAK,gBAAgBtH,UAAWwmD,SAKrD,gBAAC,GAAMjK,OAAP,CAAcj1C,KAAK,YAAYtH,UAAWymD,KAG5C,gBAAC,GAAMlK,OAAP,CAAcj1C,KAAK,kBAAkBtH,UAAW0mD,KAElD,gBAAC,GAAMnK,OAAP,CAAcj1C,KAAK,sBAAsBtH,UAAWijD,KACpD,gBAAC,GAAM1G,OAAP,CAAcj1C,KAAK,UAAUtH,UAAWikD,KACxC,gBAAC,GAAM1H,OAAP,CAAcj1C,KAAK,kBAAkBtH,UAAWoc,KAEhD,gBAAC,GAAMmgC,OAAP,CAAcj1C,KAAK,WAAWtH,UAAWyc,GAAgBxa,QAAS,CAAEqU,MAAO,Y,cCtBjF,IAAM1S,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB0R,MAAO,CACL5R,MAAO,QACPqhB,aAAc,IACdthB,SAAU,GACVsS,WAAY,QAEdwX,KAAM,CACJzR,QAAS,GACTkJ,eAAgB,GAChBlnB,MAAO,UAII6nD,GA7Df,SAA+B9nD,GAA4B,IAAD,8BAClD6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzF,QAC5CyH,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAc1T,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,8BACtD,gBAACzP,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC2lB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAACmb,GAAD,CACExgC,OAAY,MAALQ,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,YAAxB,IAA+Bc,aAAcN,EAAMM,WAAWd,MACrEwY,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAMzF,KAAKvC,cAAczC,OAEjE,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMM,WAAWb,MAAQ,QAAU,QAClDO,EAAMM,WAAWb,OAAS,KAI/B,gBAACmhB,GAAA,EAAD,CAAM/oB,MAAO,CAAEub,QAAS,OACf,MAALpT,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2CtK,MAA3C,MAAiDgK,GAAjD,SAAiDA,EAAOM,aAAxD,SAAiD,EAAmBd,YAApE,EAAiD,EAA0BxJ,MAC3E,gCACE,gBAAC4pC,GAAD,CACEpgC,MAAOQ,EAAMV,OAAO0C,QAAQxC,MAC5BqgC,aAAc57B,QACP,MAALjE,GAAA,SAAAA,EAAOV,SAAP,WAAe0C,UAAf,WAAwBxC,QAAxB,WAA+Bc,iBAA/B,IAA2CtK,MAA3C,SAAiDgK,EAAMM,aAAvD,SAAiD,EAAkBd,YAAnE,EAAiD,EAAyBxJ,KAE5EgiB,SAAU,SAACxY,GAAD,OAAWyM,EAAS9B,GAAQF,MAAMzF,KAAKzE,SAAS,CAAC,UAAWP,QAExE,gBAAC2e,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAO0C,QAAQvC,MAAQ,QAAU,QACtDO,EAAMV,OAAO0C,QAAQvC,OAAS,SCyE/C,IAAMvF,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEd4F,MAAO,CACLkc,aAAc,GAEhBphB,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB2pB,KAAM,CAAEzR,QAAS,GAAIkJ,eAAgB,IACrC1P,MAAO,CACL5R,MAAO,QACPqhB,aAAc,GACdthB,SAAU,GACVsS,WAAY,UAID6vC,GA5Hf,SAAyB/nD,GACvB,IAAM6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMxG,OAC5CwI,EAAWV,KACjB,EAAkCnV,YAAe,GAAjD,WAAO+hB,EAAP,KAAmBC,EAAnB,KACA,EAAsChiB,YAAe,GAArD,WAAO+mD,EAAP,KAAoBC,EAApB,KAEA,OACE,gBAAC,GAAD,MAAcvlD,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,yBACtD,gBAACzP,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC2lB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK9H,UAAN,+BACA,gBAACzE,GAAA,EAAD,CACExG,UAAW,kBAAMsG,GAAY,IAC7BvG,QAASsG,EACTI,OACE,gBAAC,IAAD,CAAkBpL,QAAS,kBAAMiL,GAAY,KAC3C,gBAAC4B,GAAA,EAAD,CACE3hB,cAAc,WACdR,MAAOqC,GAAOiG,MACd+M,KAAK,WACLzN,QAASO,EAAMV,OAAOgD,KAAK7C,MAC3BD,MAAO29C,EAAc,QAAUn9C,EAAMV,OAAOgD,KAAK9C,OAAS,sBAC1DwN,UAAQ,MAKb,CACC,OACA,UACA,SACA,SACA,aACA,WACA,uBACA,oBACA,SACA7W,KAAI,SAACmM,GAAD,OACJ,gBAACgW,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPiL,GAAY,GACZnM,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,OAAQuC,KAC7C86C,GAAe,IAEjBxwC,MAAOtK,OAGX,gBAACgW,GAAA,EAAKU,KAAN,CACE7L,QAAS,WACPiL,GAAY,GACZnM,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,OAAQ,MAC7Cq9C,GAAe,IAEjBxwC,MAAM,WAGRuwC,EACA,gBAACnjC,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACL0Q,MAAM,qBACNne,QAASO,EAAMV,OAAOgD,KAAK7C,MAC3BD,MAAOQ,EAAMV,OAAOgD,KAAK9C,OAAS,GAClCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,OAAQ2e,QAP7D,KAWhB,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOgD,KAAK7C,MAAQ,QAAU,QACnDO,EAAMV,OAAOgD,KAAK7C,OAAS,IAG9B,gBAAC,KAAKsd,UAAN,cACA,gBAAC/C,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACLzN,QAASO,EAAMV,OAAOiD,MAAM9C,MAC5BD,MAAOQ,EAAMV,OAAOiD,MAAM/C,OAAS,GACnCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,QAAS2e,QAE5E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOiD,MAAM9C,MAAQ,QAAU,QACpDO,EAAMV,OAAOiD,MAAM9C,OAAS,aAIjC,gBAACmhB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK9H,UAAN,sBACA,gBAAC/C,GAAA,EAAD,CACEniB,MAAOqC,GAAOiG,MACd+M,KAAK,WACLzN,QAASO,EAAMV,OAAOkD,OAAO/C,MAC7BD,MAAOQ,EAAMV,OAAOkD,OAAOhD,OAAS,GACpCoa,aAAc,SAAC8E,GAAD,OAAczS,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,SAAU2e,QAE7E,gBAACP,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOkD,OAAO/C,MAAQ,QAAU,QACrDO,EAAMV,OAAOkD,OAAO/C,OAAS,QCxE1C,IAAMvF,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEd4F,MAAO,CACLkc,aAAc,GAEhBphB,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB2pB,KAAM,CAAEzR,QAAS,EAAGkJ,eAAgB,IACpC1P,MAAO,CACL5R,MAAO,QACPD,SAAU,GACVsS,WAAY,OACZgP,aAAc,GACd1hB,UAAW,YAIAq+C,GA7Cf,SAAmC7jD,GACjC,IAAM6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMxG,OAC5CwI,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAc1T,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,yBACtD,gBAACzP,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC2lB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,MAClB,gBAAC,KAAK9H,UAAN,iBACA,gBAACqgB,GAAD,CACEC,UAAWr9B,EAAMV,OAAOmD,gBAAgBjD,QAAS,IAAIyW,MAAOC,UAAY,IACxEia,SAAU,SAAC6N,GAAD,OAAU/xB,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,kBAAmBi+B,QAE9E,gBAAC7f,GAAA,EAAD,CAAYC,KAAMpe,EAAMV,OAAOmD,gBAAgBhD,MAAQ,QAAU,QAC9DO,EAAMV,OAAOmD,gBAAgBhD,OAAS,QCgBnD,IAAMvF,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB0R,MAAO,CACL5R,MAAO,QACPqhB,aAAc,IACdthB,SAAU,GACVsS,WAAY,QAEdwX,KAAM,CACJzR,QAAS,GACTkJ,eAAgB,GAChB9P,KAAM,EACNvQ,QAAS,IAEXsgD,OAAQ,CACNtgD,QAAS,KAIEghD,GA1Df,SAA+B9nD,GAC7B,IAAM6K,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMtE,cAC5CsG,EAAWV,KAEjB,OACE,gBAAC,GAAD,MAAc1T,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,uBACtD,gBAACzP,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC2lB,GAAA,EAAD,CACE/oB,MAAO,CACLqC,GAAO2qB,MAC6B,IAApC7kB,EAAMV,OAAO2F,aAAazF,MAAkBtF,GAAOqiD,YAASxkD,GAE9DoV,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMtE,WAAW5F,SAAS,CAAC,gBAAgB,OAE3E,gBAAC6gB,GAAA,EAAKf,MAAN,CAAYjT,MAAM,uBAGpB,gBAACgU,GAAA,EAAD,CACE/oB,MAAO,CACLqC,GAAO2qB,MAC6B,IAApC7kB,EAAMV,OAAO2F,aAAazF,MAAiBtF,GAAOqiD,YAASxkD,GAE7DoV,QAAS,kBAAMlB,EAAS9B,GAAQF,MAAMtE,WAAW5F,SAAS,CAAC,gBAAgB,OAE3E,gBAAC6gB,GAAA,EAAKf,MAAN,CAAYjT,MAAM,0BC2E5B,IAAM1S,GAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,kBAAmB,GACnBC,WAAY,UAEdU,QAAS,CACP7F,MAAO,OACPoG,eAAgB,eAChBN,cAAe,UAEjB2pB,KAAM,CAAEzR,QAAS,EAAGkJ,eAAgB,IACpCuW,UAAW,CACT33B,cAAe,MACfM,eAAgB,iBAElBs3B,UAAW,CACTzlB,WAAY,OACZyN,YAAa,EACb/f,SAAU,GACVQ,UAAW,UAEbqR,MAAO,CACL5R,MAAO,QACPqhB,aAAc,GACdhP,WAAY,OACZtS,SAAU,GACVJ,UAAW,UAEbwF,MAAO,CACLkc,aAAc,GAEhB0W,OAAQ,CACN73B,cAAe,UAEjB83B,cAAe,CAAE59B,MAAO,OAAQC,OAAQ,IACxC8vB,YAAa,CACX5pB,UAAW,UAEb03B,oBAAqB,CACnB79B,MAAO,OAET89B,qBAAsB,CACpB14B,YAAa,GACbpF,MAAO,SAIIioD,GAhJf,SAAiCloD,GAA4B,IAAD,QACpDs5C,EAAUhjC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMxG,OAC9C65C,EAAW7xC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzF,QAC/CyH,EAAWV,KACjB,EAAoCnV,WAAeq4C,EAAQnvC,OAAOoD,WAAWlD,OAAS,KAAtF,WAAOkD,EAAP,KAAmB66C,EAAnB,KACA,EAA4BnnD,WAAe6N,OAAOq5C,EAASh+C,OAAOuC,WAAWrC,QAAU,KAAvF,WAAOktB,EAAP,KAAe8wB,EAAf,KAQA,OANApnD,aAAgB,WACVq4C,EAAQnvC,OAAOoD,WAAWlD,OAC5B+9C,EAAc9O,EAAQnvC,OAAOoD,WAAWlD,SAEzC,CAACivC,EAAQnvC,OAAOoD,WAAWlD,QAG5B,gBAAC,GAAD,MAAc3H,MAAOqC,GAAOG,WAAelF,EAA3C,CAAkDyX,MAAM,qBACtD,gBAACzP,EAAA,QAAD,CAAMtF,MAAOqC,GAAOe,SAClB,gBAAC2lB,GAAA,EAAD,KACE,gBAACA,GAAA,EAAKG,QAAN,CACElpB,MAAO,CACLqD,cAAe,MACfX,WAAY,SACZiB,eAAgB,WAGlB,gBAAC2B,EAAA,QAAD,CAAMtF,MAAOqC,GAAO+4B,qBAClB,gBAAC,KAAOn1B,KAAR,CACE8f,MAAO2I,gBACJ,MAAQtiB,OAAOq5C,EAASh+C,OAAOuC,WAAWrC,OAAS,KACjDivC,EAAQnvC,OAAOoD,WAAWlD,OAAS,KACtC,GACAmf,WACF9gB,KAAM,IACNhG,MAAOqC,GAAOirB,eAGlB,gBAAChoB,EAAA,QAAD,CAAMtF,MAAOqC,GAAOg5B,sBAClB,gBAACtS,GAAA,EAAKf,MAAN,CAAYjT,MAAM,mBAAmB/U,MAAO,CAAE2C,YAAa,KAC3D,gBAAC4nB,GAAA,EAAD,8EAMN,gBAACxB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,KAAMhE,UAAW,GACnC,gBAAC1jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO24B,WAClB,gBAAC,KAAK9V,UAAN,yBACA,gBAACjf,EAAA,EAAD,CAAMjG,MAAOqC,GAAO44B,WAAYpG,GAAU,GAA1C,OAEF,gBAAC,KAAD,CACE70B,MAAOqC,GAAO84B,cACd0lB,aAAc,GACdC,aAAc,IACdC,KAAM,GACNC,sBAAsB,UACtBC,sBAAsB,UACtBC,kBAAmB,kBACjB9sC,EAAS9B,GAAQF,MAAMzF,KAAKzE,SAAS,CAAC,aAAc2sB,EAAO/N,eAE7Dnf,MAAOktB,EACPmc,cAAe,SAAC4U,GAAD,OAAOD,EAAUC,MAElC,gBAACt/B,GAAA,EAAD,CAAYC,KAAM,SAAAk/B,EAASh+C,OAAOuC,aAAhB,EAA4BpC,MAAQ,QAAU,SAC7D,SAAA69C,EAASh+C,OAAOuC,iBAAhB,IAA4BpC,QAAS,8CAI1C,gBAACmhB,GAAA,EAAD,CAAM/oB,MAAOqC,GAAO2qB,KAAMhE,UAAW,GACnC,gBAAC1jB,EAAA,QAAD,CAAMtF,MAAOqC,GAAO24B,WAClB,gBAAC,KAAK9V,UAAN,oBACA,gBAACjf,EAAA,EAAD,CAAMjG,MAAOqC,GAAO44B,WAAYpwB,GAAc,IAA9C,OAGF,gBAACvF,EAAA,QAAD,CAAMtF,MAAOqC,GAAO64B,QAClB,gBAAC,KAAD,CACEl7B,MAAOqC,GAAO84B,cACd0lB,aAAc,GACdC,aAAc,IACdC,KAAM,EACNp5C,MAAOkD,GAAc,IACrBm2C,sBAAsB,UACtBC,sBAAsB,UACtBjQ,cAAe,SAAChrC,GAAD,OAAU0/C,EAAc1/C,IACvCk7C,kBAAmB,kBACjB9sC,EAAS9B,GAAQF,MAAMxG,IAAI1D,SAAS,CAAC,aAAc2C,SAKzD,gBAACyb,GAAA,EAAD,CAAYC,KAAM,SAAAk/B,EAASh+C,OAAOuC,aAAhB,EAA4BpC,MAAQ,QAAU,SAC7D,SAAA69C,EAASh+C,OAAOuC,iBAAhB,IAA4BpC,QAAS,+C,qkBC8LlD,IAAMvF,GAASC,IAAWC,OAAO,CAC/BsjD,MAAM,SACDvjD,IAAWiT,oBADX,IAEH5S,YAAa,EACbytB,WAAY,EACZ5L,aAAc,EACdhJ,UAAW,EACXwH,WAAY,EACZpgB,aAAc,EACdopB,cAAe,EACfvmB,gBAAiB,MACjBkJ,QAAS,OACTpR,MAAO,OACPC,OAAQ,OACRmX,KAAM,EACNjS,WAAY,aAIDojD,GAjSf,WAA6B,IAAD,kBACpBL,EAAW7xC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMzF,QAC/CiqC,EAAUhjC,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMxG,OAC9CzD,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK/D,MAAMtE,cAC5CsG,EAAWV,KACX6K,EAAqBC,GAAsB,CAC/CjC,UAAW,SAAC2Q,GAAD,OAAO,GAClB7W,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,YAClEyF,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQF,MAAMzF,KAAKpE,cAAc,CAACD,EAA2BX,QAEpEkvC,EAAoBlP,GAAqB,CAC7CprB,UAAW,kBAAM,GACjBlG,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,YAClEyF,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQF,MAAMxG,IAAIrD,cAAc,CAACD,EAA0BX,QAElEo+C,EAAoBne,GAAqB,CAC7CrrB,UAAW,SAAC2Q,GAAD,OAAO,GAClB7W,QAAS,SAACtO,GAAD,OACPqM,EAAS9B,GAAQG,cAAclB,aAAa,CAAExJ,UAAS8O,QAAS,YAClEyF,aAAc,SAAChU,EAAOX,GAAR,OACZyM,EAAS9B,GAAQF,MAAMxG,IAAIrD,cAAc,CAACD,EAA0BX,QAGlEq+C,EAAmBznD,eACvB,SAAO0M,EAAeorB,GAAtB,uBAAA33B,EAAAC,OAAA,4DAEO8mD,EAASh+C,OAAO0C,UAFvB,SAEO,EAAyBxC,QAAzB,EAAgCxJ,GAFvC,uBAGIiW,EAAS9B,GAAQF,MAAMzF,KAAKpE,cAAc,CAAC,UAAW,+BAH1D,mBAIW,GAJX,kCAAA7J,EAAA,MASU6f,EAAmB9B,OAAO,CAC9Bte,GAAIiO,OAAM,SAACq5C,EAASl+C,eAAV,EAAC,EAAmBpJ,IAC9Byf,UAAWxR,OAAM,SAACq5C,EAASh+C,OAAO0C,UAAjB,SAAC,EAAyBxC,YAA1B,EAAC,EAAgCxJ,OAXxD,gCAaWk4B,EAASprB,EAAQ,IAb5B,0DAeW,GAfX,kEAkBA,CAACmJ,EAAUmK,EAAX,SAA+BknC,EAASh+C,OAAO0C,UAA/C,SAA+B,EAAyBxC,YAAxD,EAA+B,EAAgCxJ,GAA/D,SAAmEsnD,EAASl+C,eAA5E,EAAmE,EAAmBpJ,KAGlF8nD,EAAY1nD,eAChB,SAAO0M,EAAeorB,GAAtB,2BAAA33B,EAAAC,OAAA,4DAEOi4C,EAAQnvC,OAAOgD,OAAf,EAAqB9C,MAF5B,uBAGIyM,EAAS9B,GAAQF,MAAMxG,IAAIrD,cAAc,CAAC,OAAQ,gCAHtD,sCAOOquC,EAAQnvC,OAAOiD,QAAf,EAAsB/C,MAP7B,uBAQIyM,EAAS9B,GAAQF,MAAMxG,IAAIrD,cAAc,CAAC,QAAS,+BARvD,+CAciBquC,EAAQrvC,WAAR,EAAkBpJ,GAdnC,oCAAAO,EAAA,MAecqnD,EAAkBtpC,OAAO,CAC7BhS,KAAMmsC,EAAQnvC,OAAOgD,KAAK9C,MAC1B+C,MAAOksC,EAAQnvC,OAAOiD,MAAM/C,MAC5BgD,OAAQisC,EAAQnvC,OAAOkD,OAAOhD,MAC9B8W,OAAQrS,OAAM,SAACq5C,EAASl+C,eAAV,EAAC,EAAmBpJ,OAnB5C,+DAAAO,EAAA,MAqBcm4C,EAAkBp6B,OAAO,CAC7Bte,GAAIiO,OAAM,SAACwqC,EAAQrvC,eAAT,EAAC,EAAkBpJ,IAC7BsM,KAAMmsC,EAAQnvC,OAAOgD,KAAK9C,MAC1B+C,MAAOksC,EAAQnvC,OAAOiD,MAAM/C,MAC5BgD,OAAQisC,EAAQnvC,OAAOkD,OAAOhD,MAC9B8W,OAAQrS,OAAM,SAACq5C,EAASl+C,eAAV,EAAC,EAAmBpJ,OA1B5C,4BA6BI,OAfMyN,EAdV,OA6BQA,EAAKA,KACPwI,EAAS9B,GAAQF,MAAMxG,IAAIpD,QAAQoD,EAAIA,MAEzCyqB,EAASprB,EAAQ,GAhCrB,kDAkCIxL,QAAQmI,MAAR,MAlCJ,mEAqCA,CACEgvC,EAAQnvC,OAAOgD,KAAK9C,MACpBivC,EAAQnvC,OAAOiD,MAAM/C,MACrBivC,EAAQnvC,OAAOkD,OAAOhD,MAHxB,SAIEivC,EAAQrvC,eAJV,EAIE,EAAkBpJ,GAClBiW,EACA2xC,EANF,SAOEN,EAASl+C,eAPX,EAOE,EAAmBpJ,GACnB04C,IAIEqP,EAAsB3nD,eAC1B,SAAO0M,EAAeorB,GAAtB,mBAAA33B,EAAAC,OAAA,4DAEOi4C,EAAQnvC,OAAOmD,kBAAf,EAAgCjD,MAFvC,uBAGIyM,EACE9B,GAAQF,MAAMxG,IAAIrD,cAAc,CAC9B,kBACA,kDANR,mBASW,GATX,kCAAA7J,EAAA,MAcsBm4C,EAAkBp6B,OAAO,CACzCte,GAAIiO,OAAM,SAACwqC,EAAQrvC,eAAT,EAAC,EAAkBpJ,IAC7ByM,gBAAiBgsC,EAAQnvC,OAAOmD,gBAAgBjD,SAhBtD,cAkBI,OAJMiE,EAdV,SAkBQA,EAAKA,KACPwI,EAAS9B,GAAQF,MAAMxG,IAAIpD,QAAQoD,EAAIA,MAnB7C,kBAqBWyqB,EAASprB,EAAQ,IArB5B,4DAuBW,GAvBX,mEA0BA,CAACmJ,EAAUyiC,EAAmBD,EAAQnvC,OAAOmD,gBAAgBjD,MAA7D,SAAoEivC,EAAQrvC,eAA5E,EAAoE,EAAkBpJ,KAGlFgoD,EAAoB5nD,eACxB,SAAO0M,EAAeorB,GAAtB,uBAAA33B,EAAAC,OAAA,4DAEOi4C,EAAQnvC,OAAOoD,aAAf,EAA2BlD,MAFlC,uBAGIyM,EAAS9B,GAAQF,MAAMxG,IAAIrD,cAAc,CAAC,aAAc,oCAH5D,mBAIW,GAJX,mBAOOk9C,EAASh+C,OAAOuC,aAAhB,EAA4BrC,MAPnC,uBAQIyM,EACE9B,GAAQF,MAAMzF,KAAKpE,cAAc,CAAC,aAAc,qCATtD,mBAWW,GAXX,kCAAA7J,EAAA,MAgBUm4C,EAAkBp6B,OAAO,CAC7Bte,GAAIiO,OAAM,SAACwqC,EAAQrvC,eAAT,EAAC,EAAkBpJ,IAC7B0M,WAAY+rC,EAAQnvC,OAAOoD,WAAWlD,SAlB5C,0BAAAjJ,EAAA,MAoBU6f,EAAmB9B,OAAO,CAC9Bte,GAAIiO,OAAM,SAACq5C,EAASl+C,eAAV,EAAC,EAAmBpJ,IAC9B6L,WAAYoC,OAAM,SAACq5C,EAASh+C,OAAOuC,iBAAjB,EAAC,EAA4BrC,UAtBrD,QAyBI0uB,EAASprB,EAAQ,GAzBrB,kDA2BIxL,QAAQmI,MAAR,MA3BJ,iCA6BS,MA7BT,mEA+BA,CACEgvC,EAAQnvC,OAAOoD,WAAWlD,MAD5B,SAEEivC,EAAQrvC,eAFV,EAEE,EAAkBpJ,GAFpB,SAGEsnD,EAASh+C,OAAOuC,iBAHlB,EAGE,EAA4BrC,MAH9B,SAIE89C,EAASl+C,eAJX,EAIE,EAAmBpJ,GACnBiW,EACAyiC,EACAt4B,IAIJ,OACE,gBAACoJ,GAAA,EAAD,KACE,gBAACy+B,GAAA,EAAD,CACEpsC,QAAS7R,EAAMX,KACf+6B,aAAa,EACbviC,MAAOqC,GAAOwjD,MACd76B,sBAAuB,CAAExtB,OAAQ,SAEjC,gBAAC,GAAD,KACE,gBAAC6oD,GAAD,CACE5uB,gBAAgB,SAChBC,gBAAgB,OAChBF,OAAQ,WACNpjB,EAAS9B,GAAQF,MAAMtE,WAAWtF,SAAQ,IAC1C4L,EAAS9B,GAAQF,MAAMzF,KAAKnE,SAAQ,IACpC4L,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,IACnC4L,EAAS9B,GAAQF,MAAMtE,WAAW1I,SAClCgP,EAAS9B,GAAQF,MAAMzF,KAAKvH,SAC5BgP,EAAS9B,GAAQF,MAAMxG,IAAIxG,UAE7B6O,QAASsK,EAAmBtK,QAC5BkX,OAAQ66B,IAEV,gBAACM,GAAD,CACE7uB,gBAAgB,SAChBC,gBAAiBvvB,EAAMV,OAAO2F,aAAazF,MAAQ,OAAS,OAC5D6vB,OAAQ,SAACvsB,EAAOorB,GACdA,EAASprB,EAAQ,IAEnBkgB,OAAQ,SAAClgB,EAAOorB,IAC0B,IAApCluB,EAAMV,OAAO2F,aAAazF,MAC5B0uB,EAASprB,EAAQ,GAEjBorB,EAASprB,EAAQ,MAIvB,gBAACs7C,GAAD,CACE9uB,gBAAgB,OAChBC,gBAAgB,OAChBF,OAAQ,SAACvsB,EAAOorB,GACdA,EAASprB,EAAQ,IAEnBgJ,QACEsK,EAAmBtK,SAAW4iC,EAAkB5iC,SAAW8xC,EAAkB9xC,QAE/EkX,OAAQ86B,IAEV,gBAACO,GAAD,CACE/uB,gBAAgB,OAChBC,gBAAgB,OAChBzjB,QACEsK,EAAmBtK,SAAW4iC,EAAkB5iC,SAAW8xC,EAAkB9xC,QAE/EujB,OAAQ,SAACvsB,EAAOorB,GACdA,EAASprB,EAAQ,IAEnBkgB,OAAQ+6B,IAEV,gBAACO,GAAD,CACEhvB,gBAAgB,OAChBC,gBAAgB,OAChBzjB,QACEsK,EAAmBtK,SAAW4iC,EAAkB5iC,SAAW8xC,EAAkB9xC,QAE/EujB,OAAQ,SAACvsB,EAAOorB,GACdA,EAASprB,EAAQ,IAEnBkgB,OAAQg7B,IAGV,gBAAC,GAAD,CACEpxC,MAAM,kBACNsV,SAAS,sDACToN,gBAAgB,OAChBC,gBAAgB,OAChBF,OAAQ,SAACvsB,EAAOorB,IAC0B,IAApCluB,EAAMV,OAAO2F,aAAazF,MAC5B0uB,EAASprB,EAAQ,GAEjBorB,EAASprB,EAAQ,IAGrBkgB,OAAQ,WACN/W,EAAS9B,GAAQF,MAAMtE,WAAWtF,SAAQ,IAC1C4L,EAAS9B,GAAQF,MAAMzF,KAAKnE,SAAQ,IACpC4L,EAAS9B,GAAQF,MAAMxG,IAAIpD,SAAQ,IACnC4L,EAAS9B,GAAQF,MAAMtE,WAAW1I,SAClCgP,EAAS9B,GAAQF,MAAMzF,KAAKvH,SAC5BgP,EAAS9B,GAAQF,MAAMxG,IAAIxG,gBC3MzC,SAAS8jB,KAAW,IAAD,IACX/gB,EAAQyL,IAAe,SAACuC,GAAD,OAAUA,EAAK5D,UACtC6B,EAAWV,KAEXgzC,EACJnoD,WACIooD,EACJpoD,WAEIqoD,EAAgB,SAAC/uC,GACrB,IACMgvC,EADMC,IAAIjvC,EAAK3B,KACKe,OAC1BxX,QAAQC,IAAImnD,IAGRt2C,EAA6C,SAAhCusC,IAAWC,iBAuD9B,OArDAx+C,aAAgB,WACVgS,IAAepI,EAAMoI,aAEbA,GAAcpI,EAAMoI,WAD9B6D,EAAS9B,GAAQC,OAAOrB,kBAIxBkD,EAAS9B,GAAQC,OAAO3B,gBAAgBzI,EAAM8H,MAAMX,OAAOC,YAE5D,CAAC6E,EAAU7D,EAAYpI,EAAMoI,WAAYpI,EAAM8H,MAAMX,OAAOC,UAE/DhR,aAAgB,WACd,GAAoB,QAAhB8H,IAASC,GA+Bb,OA1FJ,oCAAA5H,EAAAC,OAAA,mDACMmkD,EAAuB,MACvB9sC,IAAU+wC,SAFhB,mCAAAroD,EAAA,MAG6Csa,OAH7C,mBAGoBguC,EAHpB,EAGYloD,OACJmoD,EAAcD,EACK,YAAnBA,EALR,oCAAAtoD,EAAA,MAM+Bsa,OAN/B,iBAMcla,EANd,EAMcA,OACRmoD,EAAcnoD,EAPpB,WASwB,YAAhBmoD,EATR,wBAUMxnD,QAAQynD,KAAK,mDAVnB,kBAWa,MAXb,2BAAAxoD,EAAA,MAamBsa,OAbnB,QAaI8pC,EAbJ,OAa0DxlC,KACtD7d,QAAQC,IAAIojD,GAdhB,wBAgBIrjD,QAAQynD,KAAK,mDAhBjB,cAmBsB,YAAhB7gD,IAASC,IACX0S,IAA0C,UAAW,CACnDjT,KAAM,UACNohD,WAAYnuC,IAAgCouC,IAC5CC,iBAAkB,CAAC,EAAG,IAAK,IAAK,KAChCp9B,WAAY,cAxBlB,kBA4BS64B,GAAS,MA5BlB,6DA+DIwE,GAAoC72B,MAAK,SAACqyB,GACpCA,GACF1uC,EAAS9B,GAAQC,OAAO7B,iBAAiBoyC,OAK7C4D,EAAqB9nD,QAAUoa,KAA8C,SAACK,GACxEA,EAAakuC,QAAQnkD,QAAQokD,MAC/BpzC,EACE9B,GAAQG,cAAclB,aAAa,CACjCxJ,QAASsR,EAAakuC,QAAQnkD,QAAQokD,KACtC3wC,QAAS,gBASjB8vC,EAAiB/nD,QAAUoa,KAAsD,SAACvC,GAChFhX,QAAQC,IAAI+W,MAGd0D,IAAQstC,iBAAiB,MAAOb,GAEzB,WACDF,EAAqB9nD,SACvBoa,IAA6C0tC,EAAqB9nD,SAEhE+nD,EAAiB/nD,SACnBoa,IAA6C2tC,EAAiB/nD,SAEhEub,IAAQutC,oBAAoB,MAAOd,MAEpC,CAACxyC,IAGF,gBAACN,GAAD,KACE,gBAAC,WAAD,CACE6zC,SACE,gBAACriD,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,KAAM,EAAGsX,SAAU,IAChC,gBAACnE,EAAA,EAAD,CAAaC,eAAa,EAAC5kB,MAAK,MAAEgF,GAAF,SAAEA,EAAO8H,QAAT,SAAE,EAAcX,aAAhB,EAAE,EAAsBgB,OAAQ0J,SAAO,MAI3E,gBAACtE,GAAD,KACE,gBAAC,IAAD,CAAkBzF,MAAO9H,EAAM8H,OAC7B,gBAAC,IAAD,KACE,gBAACkI,GAAD,MACA,gBAACyvC,EAAA,EAAD,CACEC,QAASC,GACT73C,MAAO9H,EAAM8H,OAEb,gBAACrJ,EAAD,KACE,gBAACm+C,GAAD,QAIJ,gBAACgD,EAAA,EAAD,MACA,gBAAC,GAAD,MACA,gBAAC,GAAD,WA3Id/uC,IAAqC,CACnCgvC,mBAAoB,oBAAAtpD,EAAAC,OAAA,yEAAa,CAC/BspD,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,IAHE,+DAOtBC,OAAY,CACVC,IAAKvxC,ovCAAYwxC,WACjBC,yBAAyB,EACzBC,OAAO,IA8JMC,uBAtBf,WAGE,OC9Ka,WACb,MAAgDlqD,YAAe,GAA/D,WAAOmqD,EAAP,KAA0BC,EAA1B,KAEA,EAAsBC,KAAc,CAClCC,iBAAkBC,KAClBC,gBAAiBD,KACjBE,cAAeF,OAHVG,EAAP,YA8BA,OAvBA1qD,aAAgB,WACd,EAAAG,EAAAC,OAAA,gEAEIuqD,OAFJ,WAAAxqD,EAAA,MAKUkqD,KAAA,SACDO,KAASC,MADR,IAGJ,aAAc7iD,EAAQ,SAR5B,6EAcIoiD,GAAmB,GACnBO,OAfJ,mFAoBC,IAEIR,GAAqBO,ED2IFI,GAMxB,gBAAC,IAAD,CAAUp2C,MAAOA,IACf,gBAAC,IAAD,CACEO,UAAWA,GACXS,QACE,gBAAC3O,EAAA,QAAD,CAAMtF,MAAO,CAAE2U,KAAM,EAAGhR,eAAgB,SAAUjB,WAAY,WAC5D,gBAAC4mD,EAAA,EAAD,CAAmBtjD,KAAK,YAI5B,gBAACkjB,GAAD,QAZG,U","file":"static/js/app.831796ed.chunk.js","sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n/* eslint-disable import/no-unresolved */\nimport { GOOGLE_MAPS_WEB } from '@env';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { calculateLatLngDelta } from '../../utils/calculateLatLngDelta';\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const { width, height, position, children, center, coords, shape, interactive, onDragEnd } =\n    props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_WEB,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n\n  const onLoad = React.useCallback(async (component: GoogleMap) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = component;\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      // const location = await Location.getCurrentPositionAsync({});\n      // const lat = coords?.lat || location.coords.latitude;\n      // const lng = coords?.lng || location.coords.longitude;\n    } catch (error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const bounds = new window.google.maps.LatLngBounds();\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current?.fitBounds(bounds);\n    }\n  }, []);\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const delayedPanningTimer = React.useRef<ReturnType<typeof setTimeout>>();\n\n  const panDelayed = React.useCallback((lat: number, lng: number) => {\n    if (delayedPanningTimer) {\n      // clearTimeout(delayedPanningTimer.current);\n      // delayedPanningTimer.current = null;\n    }\n    return;\n    if (map.current?.panTo) {\n      console.log('PANNING', lat, lng);\n      map.current?.panTo?.({ lat, lng });\n\n      const latDelta = calculateLatLngDelta(lat, 0.5);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const bounds = new window.google.maps.LatLngBounds(\n        { lat: lat - latDelta, lng: lng - latDelta },\n        { lat: lat + latDelta, lng: lng + latDelta }\n      );\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current?.fitBounds(bounds);\n    } else {\n      console.log('DELAYING PANNING TO ', lat, lng, map.current);\n      delayedPanningTimer.current = setTimeout(() => panDelayed(lat, lng), 500);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (center) {\n      console.log({ center, coords });\n      panDelayed(center.lat, center.lng);\n    }\n  }, [center, coords, panDelayed]);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  return !isLoaded ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        // provider={PROVIDER_GOOGLE}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          mapTypeControl: false,\n          zoomControl: false,\n          mapTypeId: 'satellite',\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from '../../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../../../components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: MAP_SIZE / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons name=\"airplane\" size={20} color=\"#ffffff\" />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function Wrapper({ children }: { children: React.ReactNode }) {\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type AnyResource = {\n  id: Scalars['ID'];\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateExtra */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateRigInspection */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteDropzone */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteLoad */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeletePlane */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteSlot */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteTicket */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  dropzoneUsers: DropzoneUserConnection;\n  extras: Array<Extra>;\n  federation: Federation;\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  isPublic: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  loads: LoadConnection;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['Int'];\n  userRoles: Array<UserRole>;\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUsersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  permissions?: Maybe<Array<Permission>>;\n  search?: Maybe<Scalars['String']>;\n  licensed?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  name: Scalars['String'];\n  banner?: Maybe<Scalars['String']>;\n  federationId: Scalars['Int'];\n  isPublic?: Maybe<Scalars['Boolean']>;\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  primaryColor?: Maybe<Scalars['String']>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  isCreditSystemEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['Int'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['Int'];\n  user: User;\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  expiresAt?: Maybe<Scalars['Int']>;\n  credits?: Maybe<Scalars['Float']>;\n  userRoleId?: Maybe<Scalars['Int']>;\n};\n\nexport type Extra = SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type ExtraInput = {\n  name?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  ticketTypeIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  id: Scalars['Int'];\n  state: LoadState;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of FinalizeLoad */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['Int'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FormTemplateInput = {\n  name?: Maybe<Scalars['String']>;\n  definition?: Maybe<Scalars['String']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n};\n\nexport type GhostInput = {\n  name: Scalars['String'];\n  email: Scalars['String'];\n  phone?: Maybe<Scalars['String']>;\n  exitWeight: Scalars['Float'];\n  dropzoneId: Scalars['Int'];\n  roleId: Scalars['Int'];\n  licenseId?: Maybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of GrantPermission */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['Int'];\n  federation?: Maybe<Federation>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['Int'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['Int'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  isOpen?: Maybe<Scalars['Boolean']>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  pilotId?: Maybe<Scalars['Int']>;\n  planeId?: Maybe<Scalars['Int']>;\n  gcaId?: Maybe<Scalars['Int']>;\n  loadMasterId?: Maybe<Scalars['Int']>;\n  state?: Maybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** open */\n  Open = 'open',\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteTicketType?: Maybe<DeleteTicketPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<UserRegisterPayload>;\n  userResendConfirmation?: Maybe<UserResendConfirmationPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordReset?: Maybe<UserSendPasswordResetPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userSignUp?: Maybe<UserSignUpPayload>;\n  userUpdatePassword?: Maybe<UserUpdatePasswordPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  email: Scalars['String'];\n  confirmUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSignUpArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmSuccessUrl?: Maybe<Scalars['String']>;\n  phone: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  name: Scalars['String'];\n  licenseId?: Maybe<Scalars['Int']>;\n  pushToken?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  currentPassword?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<Scalars['String']>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  title?: Maybe<Scalars['String']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: WalletInput;\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: WalletInput;\n  /** Total amount of the order */\n  amount: Scalars['Int'];\n  sellableItem?: Maybe<SellableItemInput>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport enum OrderState {\n  /** pending */\n  Pending = 'pending',\n  /** completed */\n  Completed = 'completed',\n  /** refunded */\n  Refunded = 'refunded',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  /** updateDropzone */\n  UpdateDropzone = 'updateDropzone',\n  /** deleteDropzone */\n  DeleteDropzone = 'deleteDropzone',\n  /** updateWeatherConditions */\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  /** createLoad */\n  CreateLoad = 'createLoad',\n  /** updateLoad */\n  UpdateLoad = 'updateLoad',\n  /** deleteLoad */\n  DeleteLoad = 'deleteLoad',\n  /** readLoad */\n  ReadLoad = 'readLoad',\n  /** createSlot */\n  CreateSlot = 'createSlot',\n  /** updateSlot */\n  UpdateSlot = 'updateSlot',\n  /** deleteSlot */\n  DeleteSlot = 'deleteSlot',\n  /** createUserSlot */\n  CreateUserSlot = 'createUserSlot',\n  /** createUserSlotWithSelf */\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  /** updateUserSlot */\n  UpdateUserSlot = 'updateUserSlot',\n  /** deleteUserSlot */\n  DeleteUserSlot = 'deleteUserSlot',\n  /** createStudentSlot */\n  CreateStudentSlot = 'createStudentSlot',\n  /** updateStudentSlot */\n  UpdateStudentSlot = 'updateStudentSlot',\n  /** deleteStudentSlot */\n  DeleteStudentSlot = 'deleteStudentSlot',\n  /** createTicketType */\n  CreateTicketType = 'createTicketType',\n  /** updateTicketType */\n  UpdateTicketType = 'updateTicketType',\n  /** deleteTicketType */\n  DeleteTicketType = 'deleteTicketType',\n  /** createExtra */\n  CreateExtra = 'createExtra',\n  /** updateExtra */\n  UpdateExtra = 'updateExtra',\n  /** deleteExtra */\n  DeleteExtra = 'deleteExtra',\n  /** readExtra */\n  ReadExtra = 'readExtra',\n  /** createPlane */\n  CreatePlane = 'createPlane',\n  /** updatePlane */\n  UpdatePlane = 'updatePlane',\n  /** deletePlane */\n  DeletePlane = 'deletePlane',\n  /** createRig */\n  CreateRig = 'createRig',\n  /** updateRig */\n  UpdateRig = 'updateRig',\n  /** deleteRig */\n  DeleteRig = 'deleteRig',\n  /** readRig */\n  ReadRig = 'readRig',\n  /** createDropzoneRig */\n  CreateDropzoneRig = 'createDropzoneRig',\n  /** updateDropzoneRig */\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  /** deleteDropzoneRig */\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  /** readDropzoneRig */\n  ReadDropzoneRig = 'readDropzoneRig',\n  /** readPermissions */\n  ReadPermissions = 'readPermissions',\n  /** updatePermissions */\n  UpdatePermissions = 'updatePermissions',\n  /** createPackjob */\n  CreatePackjob = 'createPackjob',\n  /** updatePackjob */\n  UpdatePackjob = 'updatePackjob',\n  /** deletePackjob */\n  DeletePackjob = 'deletePackjob',\n  /** readPackjob */\n  ReadPackjob = 'readPackjob',\n  /** createFormTemplate */\n  CreateFormTemplate = 'createFormTemplate',\n  /** updateFormTemplate */\n  UpdateFormTemplate = 'updateFormTemplate',\n  /** deleteFormTemplate */\n  DeleteFormTemplate = 'deleteFormTemplate',\n  /** readFormTemplate */\n  ReadFormTemplate = 'readFormTemplate',\n  /** readUser */\n  ReadUser = 'readUser',\n  /** updateUser */\n  UpdateUser = 'updateUser',\n  /** deleteUser */\n  DeleteUser = 'deleteUser',\n  /** createUser */\n  CreateUser = 'createUser',\n  /** actAsPilot */\n  ActAsPilot = 'actAsPilot',\n  /** actAsLoadMaster */\n  ActAsLoadMaster = 'actAsLoadMaster',\n  /** actAsGCA */\n  ActAsGca = 'actAsGCA',\n  /** actAsDZSO */\n  ActAsDzso = 'actAsDZSO',\n  /** actAsRigInspector */\n  ActAsRigInspector = 'actAsRigInspector',\n  /** createUserTransaction */\n  CreateUserTransaction = 'createUserTransaction',\n  /** readUserTransactions */\n  ReadUserTransactions = 'readUserTransactions',\n  /** grantPermission */\n  GrantPermission = 'grantPermission',\n  /** revokePermission */\n  RevokePermission = 'revokePermission'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots?: Maybe<Scalars['Int']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type PlaneInput = {\n  name?: Maybe<Scalars['String']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  hours?: Maybe<Scalars['Int']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get dropzone details */\n  dropzone: Dropzone;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get ticket addons for a dropzone */\n  extras: Array<Extra>;\n  /** Available federations */\n  federations: Array<Federation>;\n  /** Load base64 images as graphql */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load: Load;\n  /** Get loads */\n  loads: LoadConnection;\n  /** Get planes from a dropzone */\n  planes: Array<Plane>;\n  /** Get ticket types for a dropzone */\n  ticketTypes: Array<TicketType>;\n  userCheckPasswordToken: User;\n  userConfirmAccount: User;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  allowedForUserId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  dropzoneId: Scalars['Int'];\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  dropzoneId: Scalars['Int'];\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryUserCheckPasswordTokenArgs = {\n  resetPasswordToken: Scalars['String'];\n  redirectUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryUserConfirmAccountArgs = {\n  confirmationToken: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  id?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of RevokePermission */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n  user?: Maybe<User>;\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\nexport type RigInput = {\n  name?: Maybe<Scalars['String']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  maintainedAt?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  userId?: Maybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  canopySize?: Maybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['Int'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type RigInspectionInput = {\n  dropzoneId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  definition?: Maybe<Scalars['String']>;\n  isOk?: Maybe<Scalars['Boolean']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type SellableItemInput = {\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  type: SellableItemTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum SellableItemTypes {\n  Pack = 'pack',\n  TicketType = 'ticketType',\n  Extra = 'extra',\n  Slot = 'slot'\n}\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  user?: Maybe<User>;\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUserId?: Maybe<Scalars['Int']>;\n  ticketTypeId?: Maybe<Scalars['Int']>;\n  jumpTypeId?: Maybe<Scalars['Int']>;\n  loadId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n  userGroup?: Maybe<Array<SlotUser>>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type SlotUser = {\n  id: Scalars['Int'];\n  exitWeight: Scalars['Float'];\n  rigId?: Maybe<Scalars['Int']>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type TicketTypeInput = {\n  currency?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n  altitude?: Maybe<Scalars['Int']>;\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  isTandem?: Maybe<Scalars['Boolean']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser: DropzoneUser;\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum TransactionStatus {\n  Reserved = 'reserved',\n  Completed = 'completed',\n  Cancelled = 'cancelled'\n}\n\nexport enum TransactionType {\n  Purchase = 'purchase',\n  Sale = 'sale',\n  Deposit = 'deposit',\n  Withdrawal = 'withdrawal',\n  Refund = 'refund'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  id: Scalars['Int'];\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzone */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateExtra */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  id: Scalars['Int'];\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateLoad */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateNotification */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  id: Scalars['Int'];\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdatePlane */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  permission: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRole */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  id: Scalars['Int'];\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateSlot */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  id: Scalars['Int'];\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateTicket */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateUser */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  name?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserInput = {\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['String']>;\n  apfNumber?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  licenseId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n};\n\n/** Autogenerated return type of UserLogin */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserRegister */\nexport type UserRegisterPayload = {\n  __typename?: 'UserRegisterPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n};\n\n/** Autogenerated return type of UserResendConfirmation */\nexport type UserResendConfirmationPayload = {\n  __typename?: 'UserResendConfirmationPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated return type of UserSendPasswordReset */\nexport type UserSendPasswordResetPayload = {\n  __typename?: 'UserSendPasswordResetPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSignUp */\nexport type UserSignUpPayload = {\n  __typename?: 'UserSignUpPayload';\n  authenticatable?: Maybe<User>;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated return type of UserUpdatePassword */\nexport type UserUpdatePasswordPayload = {\n  __typename?: 'UserUpdatePasswordPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\nexport type WalletInput = {\n  /** Any model with an account, e.g DropzoneUser or Dropzone */\n  type: WalletableTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum WalletableTypes {\n  DropzoneUser = 'dropzoneUser',\n  Dropzone = 'dropzone'\n}\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['Int'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['Int'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  winds?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['Int']>;\n  jumpRun?: Maybe<Scalars['Int']>;\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['String']>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser, Transaction, TransactionType } from '../../../api/schema.d';\n\ntype Fields = Pick<Transaction, 'amount' | 'transactionType' | 'message'>;\n\ninterface IDropzoneEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Transaction[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    amount: {\n      value: null,\n      error: null,\n    },\n    transactionType: {\n      value: TransactionType.Deposit,\n      error: null,\n    },\n    message: {\n      value: '',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/credits',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      console.log({ field });\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<DropzoneUser | boolean>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\nexport type DropzoneFields = Pick<\n  Dropzone,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'isPublic'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: Dropzone | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: Dropzone[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    isPublic: {\n      value: false,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ntype Fields = Pick<DropzoneUser, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUser[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneUserEditState, action: PayloadAction<boolean | DropzoneUser>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Extra } from '../../../api/schema.d';\n\nexport type ExtraFields = Pick<Extra, 'name' | 'cost' | 'ticketTypes'>;\ninterface IExtraEditState {\n  original: Extra | null;\n  open: boolean;\n  fields: {\n    [K in keyof ExtraFields]-?: {\n      value: Extra[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IExtraEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    ticketTypes: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/extra',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IExtraEditState, action: PayloadAction<boolean | Extra>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.ticketTypes.value = action.payload.ticketTypes;\n        state.fields.cost.value = action.payload.cost;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: IExtraEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Load } from '../../../api/schema.d';\n\nexport type LoadFields = Pick<\n  Load,\n  'name' | 'gca' | 'dispatchAt' | 'isOpen' | 'loadMaster' | 'pilot' | 'maxSlots' | 'plane'\n>;\n\ninterface ILoadEditState {\n  original: Load | null;\n  open: boolean;\n  fields: {\n    [K in keyof LoadFields]-?: {\n      value: Load[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ILoadEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    gca: {\n      value: null,\n      error: null,\n    },\n    dispatchAt: {\n      value: null,\n      error: null,\n    },\n    isOpen: {\n      value: true,\n      error: null,\n    },\n    loadMaster: {\n      value: null,\n      error: null,\n    },\n    pilot: {\n      value: null,\n      error: null,\n    },\n    plane: {\n      value: null,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/load',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ILoadEditState, action: PayloadAction<boolean | Load>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ILoadEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Federation, User, DropzoneUser } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email' | 'license'> &\n  Pick<DropzoneUser, 'role'>;\n\ninterface IGhostEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (state: IGhostEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (state: IGhostEditState, action: PayloadAction<boolean | User>) => {\n      console.log('Setting open');\n      console.log(action.payload);\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Plane } from '../../../api/schema.d';\n\nexport type PlaneFields = Pick<\n  Plane,\n  'name' | 'registration' | 'minSlots' | 'maxSlots' | 'hours' | 'nextMaintenanceHours'\n>;\n\ninterface IPlaneEditState {\n  original: Plane | null;\n  open: boolean;\n  fields: {\n    [K in keyof PlaneFields]-?: {\n      value: Plane[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IPlaneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    registration: {\n      value: '',\n      error: null,\n    },\n    minSlots: {\n      value: 0,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n    hours: {\n      value: null,\n      error: null,\n    },\n    nextMaintenanceHours: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'Plane',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IPlaneEditState, action: PayloadAction<boolean | Plane>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.hours.value = action.payload.hours || 0;\n        state.fields.minSlots.value = action.payload.minSlots || 0;\n        state.fields.maxSlots.value = action.payload.maxSlots || 3;\n        state.fields.name.value = action.payload.name || '';\n        state.fields.registration.value = action.payload.registration || '';\n        state.fields.nextMaintenanceHours.value = action.payload.nextMaintenanceHours || 0;\n      }\n    },\n\n    reset: (state: IPlaneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig } from '../../../api/schema.d';\n\nexport type RigFields = Pick<\n  Rig,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: Rig | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: Rig[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | Rig>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        console.error('Failed to read rig inspection template', error.message, action.payload);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Slot } from '../../../api/schema.d';\n\nexport type ManifestUserFields = Pick<\n  Slot,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: Slot | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | Slot>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotUser, Slot, DropzoneUser, Rig } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = SlotUser & { rig?: Rig };\n\ninterface IFields extends Pick<Slot, 'jumpType' | 'load' | 'ticketType' | 'extras'> {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (state: ISlotEditState, action: PayloadAction<Slot[]>) => {\n      state.fields.users.value = action.payload.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUser[];\n\n      state.fields.jumpType.value = action.payload.find((i) => i)?.jumpType;\n      state.fields.load.value = action.payload.find((i) => i)?.load || null;\n      state.fields.extras.value = action.payload.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (state: ISlotEditState, action: PayloadAction<DropzoneUser[]>) => {\n      state.fields.users.value = action.payload.map<SlotUser>((dzUser) => ({\n        id: Number(dzUser.id),\n        rigId: Number(dzUser?.availableRigs?.find(({ id }) => id)?.id),\n        exitWeight: Number(dzUser?.user?.exitWeight),\n      })) as SlotUser[];\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketType } from '../../../api/schema.d';\n\nexport type TicketTypeFields = Pick<\n  TicketType,\n  'name' | 'cost' | 'isTandem' | 'allowManifestingSelf' | 'altitude' | 'extras'\n>;\n\ninterface ITicketTypeEditState {\n  original: TicketType | null;\n  open: boolean;\n  fields: {\n    [K in keyof TicketTypeFields]-?: {\n      value: TicketType[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ITicketTypeEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    altitude: {\n      value: 14000,\n      error: null,\n    },\n    allowManifestingSelf: {\n      value: false,\n      error: null,\n    },\n    isTandem: {\n      value: false,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ticketType',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ITicketTypeEditState, action: PayloadAction<boolean | TicketType>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.altitude.value = action.payload.altitude || 0;\n        state.fields.cost.value = action.payload.cost || 0;\n        state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: ITicketTypeEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Federation, User } from '../../../api/schema.d';\n\nexport type UserFields = Pick<User, 'exitWeight' | 'rigs' | 'name' | 'phone' | 'email' | 'license'>;\n\ninterface IUserEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: User[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IUserEditState, action: PayloadAction<boolean | User>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherCondition } from '../../../api/schema.d';\n\ntype Fields = Pick<\n  WeatherCondition,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherCondition | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherCondition>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig, User } from '../../../api/schema.d';\n\ninterface IUserWizardState {\n  open: boolean;\n  fields: {\n    skipRigSetup: {\n      value: boolean;\n      error: string | null;\n    };\n    user: {\n      value: User | null;\n      error: string | null;\n    };\n    rig: {\n      value: Rig | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserWizardState = {\n  open: false,\n  fields: {\n    user: {\n      value: null,\n      error: null,\n    },\n    skipRigSetup: {\n      value: false,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/userWizard',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IUserWizardState['fields']>(\n      state: IUserWizardState,\n      action: PayloadAction<[T, IUserWizardState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n    },\n    setFieldError: <T extends keyof IUserWizardState['fields']>(\n      state: IUserWizardState,\n      action: PayloadAction<[T, IUserWizardState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IUserWizardState, action: PayloadAction<boolean | User>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.fields = initialState.fields;\n      } else {\n        state.fields.user.value = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IUserWizardState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\ninterface IDropzoneWizardState {\n  open: boolean;\n  complete: boolean;\n  fields: {\n    dropzone: {\n      value: Dropzone | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  open: false,\n  complete: false,\n  fields: {\n    dropzone: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneWizard',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneWizardState['fields']>(\n      state: IDropzoneWizardState,\n      action: PayloadAction<[T, IDropzoneWizardState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n    },\n    setFieldError: <T extends keyof IDropzoneWizardState['fields']>(\n      state: IDropzoneWizardState,\n      action: PayloadAction<[T, IDropzoneWizardState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneWizardState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.fields = initialState.fields;\n      } else {\n        state.fields.dropzone.value = action.payload;\n        state.open = true;\n      }\n    },\n\n    complete: (state: IDropzoneWizardState, action: PayloadAction<boolean | undefined>) => {\n      state.complete = action.payload !== undefined ? action.payload : true;\n    },\n\n    reset: (state: IDropzoneWizardState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import * as credits from './credits/slice';\nimport * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as extra from './extra/slice';\nimport * as load from './load/slice';\nimport * as ghost from './ghost/slice';\nimport * as plane from './plane/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as ticketType from './ticket_type/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\nimport * as userWizard from '../dialogs/UserWizard/slice';\nimport * as dropzoneWizard from '../../screens/authenticated/dropzone_setup/slice';\n\nexport const initialState = {\n  credits: credits.initialState,\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  extra: extra.initialState,\n  ghost: ghost.initialState,\n  load: load.initialState,\n  plane: plane.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  ticketType: ticketType.initialState,\n  user: user.initialState,\n  userWizard: userWizard.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  credits: credits.default,\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  extra: extra.default,\n  ghost: ghost.default,\n  load: load.default,\n  plane: plane.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  ticketType: ticketType.default,\n  user: user.default,\n  userWizard: userWizard.default,\n  dropzoneWizard: dropzoneWizard.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUser[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (state: IManifestScreenState, action: PayloadAction<DropzoneUser[]>) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import * as users from './authenticated/users/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { Credential, User, Dropzone } from '../api/schema';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n    primary: '#333333',\n  },\n};\nconst CombinedDarkTheme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: '#333333',\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: User | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: Dropzone | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<User>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<Dropzone | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    toggleDarkMode: (state: IGlobalState) => {\n      state.isDarkMode = !state.isDarkMode;\n      state.theme = state.isDarkMode ? CombinedDarkTheme : CombinedDefaultTheme;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'warning';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationState {\n  queue: INotification[];\n}\n\nexport const initialState = { queue: [] } as INotificationState;\nexport default createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    hideSnackbar: (state: INotificationState) => {\n      const [, ...newQueue] = state.queue;\n      state.queue = newQueue;\n    },\n    showSnackbar: (state: INotificationState, action: PayloadAction<INotification>) => {\n      state.queue.push(action.payload);\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\nimport notificationSlice, {\n  initialState as initialStateNotification,\n} from '../components/notifications/slice';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  notifications: initialStateNotification,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  notifications: notificationSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  notifications: notificationSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport LottieView from '../LottieView';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const dispatch = useAppDispatch();\n\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      setOverlay(true);\n    }\n  }, []);\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'New version installed' }));\n    }\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport { RetryLink } from '@apollo/client/link/retry';\nimport * as React from 'react';\nimport * as Update from 'expo-updates';\nimport Constants from 'expo-constants';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const httpBatchLink = React.useMemo(\n    () =>\n      new BatchHttpLink({\n        batchDebounce: true,\n        batchMax: 10,\n        uri:\n          Update.releaseChannel in Constants.manifest?.extra?.urls\n            ? Constants.manifest?.extra?.urls[Update.releaseChannel]\n            : Constants.manifest?.extra?.url,\n      }),\n    []\n  );\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Session expired`,\n              variant: 'error',\n            })\n          );\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`,\n                variant: 'error',\n              })\n            );\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `[Network error]: ${networkError}`,\n              variant: 'error',\n            })\n          );\n        }\n      }),\n    [dispatch]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link: errorLink.concat(authLink).concat(new RetryLink()).concat(httpBatchLink),\n        cache: new InMemoryCache(),\n      }),\n    [authLink, errorLink, httpBatchLink]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport { Snackbar } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector, useAppDispatch } from '../../state';\nimport LottieView from '../LottieView';\nimport slice from './slice';\nimport usePalette from '../../hooks/usePalette';\nimport lottieDoneAnimation from '../../../assets/images/finished.json';\n\nconst { actions } = slice;\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\nconst Notifications = () => {\n  const state = useAppSelector((root) => root.notifications);\n  const dispatch = useAppDispatch();\n  const palette = usePalette();\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(\n    () => (state.queue.length ? state.queue[0] : null),\n    [state.queue]\n  );\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  const variantStyle = {\n    info: { backgroundColor: palette.info },\n    success: { backgroundColor: palette.success },\n    error: { backgroundColor: palette.error },\n    warning: { backgroundColor: palette.warning },\n  };\n\n  return (\n    <>\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            onAnimationFinish={() => {\n              setAnimationState(AnimationState.waiting);\n              setTimeout(() => {\n                dispatch(actions.hideSnackbar());\n                setAnimationState(AnimationState.closed);\n              }, 200);\n            }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Snackbar\n        testID=\"snackbar-message\"\n        visible={!!notification}\n        onDismiss={() => dispatch(actions.hideSnackbar())}\n        duration={3000}\n        action={notification?.action}\n        style={!!notification?.variant && variantStyle[notification.variant]}\n      >\n        {notification?.message}\n      </Snackbar>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 420,\n    width: 420,\n  },\n});\nexport default Notifications;\n","import { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nconst options: LinkingOptions = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      confirm: {\n        path: '/confirm',\n      },\n      Authenticated: {\n        screens: {\n          HomeScreen: '/home',\n          LoadScreen: '/load/:load_id',\n          PackingScreen: '/packing',\n          ProfileScreen: '/user/:id',\n          SetupScreen: '/dropzone/setup',\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzonesScreen: '/dropzones',\n          CreateDropzoneScreen: '/dropzone/create',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport default options;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport { FieldError, Mutation } from './schema';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern: new RegExp(\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    ),\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  }\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: Mutation) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        onFieldError?.(`${fieldName}`, message);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          onError?.(err.message);\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { MutationUpdateUserArgs, UpdateUserPayload } from '../schema';\n\nconst MUTATION_UPDATE_USER = gql`\n  mutation UpdateUser(\n    $id: Int\n    $name: String\n    $phone: String\n    $email: String\n    $pushToken: String\n    $nickname: String\n    $licenseId: Int\n    $exitWeight: Float\n  ) {\n    updateUser(\n      input: {\n        id: $id\n        attributes: {\n          pushToken: $pushToken\n          name: $name\n          phone: $phone\n          email: $email\n          nickname: $nickname\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        pushToken\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateUserArgs['input']['attributes'],\n  UpdateUserPayload\n>(MUTATION_UPDATE_USER, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    phone: [isRequired('Phone number is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useMutationUpdateUser from './useMutationUpdateUser';\n\nexport const QUERY_DROPZONE = gql`\n  query QueryDropzone($dropzoneId: Int!, $earliestTimestamp: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n      lat\n      lng\n      name\n      primaryColor\n      secondaryColor\n      planes {\n        id\n        name\n        registration\n      }\n      ticketTypes {\n        id\n        name\n      }\n\n      currentConditions {\n        id\n        jumpRun\n        temperature\n        offsetDirection\n        offsetMiles\n        winds {\n          altitude\n          speed\n          direction\n        }\n      }\n\n      currentUser {\n        id\n        credits\n        hasCredits\n        hasExitWeight\n        hasMembership\n        hasReserveInDate\n        hasRigInspection\n        hasLicense\n        permissions\n        expiresAt\n\n        role {\n          id\n          name\n        }\n\n        rigInspections {\n          id\n          isOk\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          rig {\n            id\n          }\n        }\n\n        orders {\n          edges {\n            node {\n              id\n              title\n              state\n              createdAt\n              title\n              amount\n              buyer {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              seller {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              item {\n                title\n                cost\n              }\n              item {\n                title\n                cost\n\n                ... on Slot {\n                  id\n\n                  ticketType {\n                    id\n                    name\n                    cost\n                  }\n\n                  extras {\n                    id\n                    name\n                    cost\n                  }\n                }\n                ... on TicketType {\n                  id\n                }\n                ... on Extra {\n                  id\n                  name\n                }\n              }\n              receipts {\n                id\n                transactions {\n                  id\n                  message\n                  transactionType\n                  status\n                  createdAt\n                  amount\n                  sender {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                  receiver {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        availableRigs {\n          name\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          pushToken\n          image\n\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n            packingCard\n\n            user {\n              id\n            }\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n\n      loads(earliestTimestamp: $earliestTimestamp) {\n        edges {\n          node {\n            id\n            name\n            loadNumber\n            isOpen\n            maxSlots\n            state\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function useCurrentDropzone() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n\n  const currentDropzone = useQuery<Query>(QUERY_DROPZONE, {\n    variables: {\n      dropzoneId,\n      earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: () => null,\n  });\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const userId = currentDropzone?.data?.dropzone?.currentUser?.user?.id;\n    const remoteToken = currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken;\n    const localToken = pushToken;\n\n    if (!currentDropzone.loading && currentDropzone.called) {\n      if (localToken && localToken !== remoteToken && userId) {\n        mutationUpdateUser.mutate({\n          id: Number(userId),\n          pushToken: localToken,\n        });\n      }\n    }\n  }, [\n    pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.id,\n    currentDropzone.loading,\n    currentDropzone.called,\n    mutationUpdateUser,\n  ]);\n\n  return {\n    ...currentDropzone,\n    dropzone: currentDropzone?.data?.dropzone,\n    currentUser: currentDropzone?.data?.dropzone?.currentUser,\n  };\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions =  {}\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    id\n    name\n  }\n}\n    `;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    id\n    isOk\n    inspectedBy {\n      id\n      user {\n        id\n        name\n      }\n    }\n    rig {\n      id\n    }\n  }\n  orders {\n    edges {\n      node {\n        id\n        title\n        state\n        createdAt\n        title\n        amount\n        buyer {\n          __typename\n          ... on DropzoneUser {\n            id\n            user {\n              id\n              name\n            }\n          }\n          ... on Dropzone {\n            id\n            name\n          }\n        }\n        seller {\n          __typename\n          ... on DropzoneUser {\n            id\n            user {\n              id\n              name\n            }\n          }\n          ... on Dropzone {\n            id\n            name\n          }\n        }\n        item {\n          title\n          cost\n          ... on Slot {\n            id\n            ticketType {\n              id\n              name\n              cost\n            }\n            extras {\n              id\n              name\n              cost\n            }\n          }\n          ... on TicketType {\n            id\n          }\n          ... on Extra {\n            id\n            name\n          }\n        }\n        receipts {\n          id\n          transactions {\n            id\n            message\n            transactionType\n            status\n            createdAt\n            amount\n            sender {\n              ... on DropzoneUser {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n              ... on Dropzone {\n                id\n                name\n              }\n            }\n            receiver {\n              ... on DropzoneUser {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n              ... on Dropzone {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  availableRigs {\n    name\n    id\n    make\n    model\n    canopySize\n    serial\n    user {\n      id\n    }\n  }\n  user {\n    id\n    name\n    exitWeight\n    email\n    phone\n    pushToken\n    image\n    rigs {\n      id\n      name\n      model\n      make\n      serial\n      canopySize\n      repackExpiresAt\n      packingCard\n      user {\n        id\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n    license {\n      id\n      name\n    }\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  lat\n  lng\n  name\n  primaryColor\n  secondaryColor\n  planes {\n    id\n    name\n    registration\n  }\n  ticketTypes {\n    id\n    name\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  currentConditions {\n    id\n    jumpRun\n    temperature\n    offsetDirection\n    offsetMiles\n    winds {\n      altitude\n      speed\n      direction\n    }\n  }\n  loads(earliestTimestamp: $earliestTimestamp) {\n    edges {\n      node {\n        id\n        name\n        loadNumber\n        isOpen\n        maxSlots\n        state\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\nexport const SlotFragmentDoc = gql`\n    fragment slot on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  dropzoneUser {\n    id\n    role {\n      id\n      name\n    }\n    user {\n      id\n      name\n      exitWeight\n      image\n      license {\n        id\n        name\n      }\n    }\n  }\n  ticketType {\n    id\n    name\n    altitude\n    isTandem\n    extras {\n      id\n      name\n      cost\n    }\n  }\n  jumpType {\n    id\n    name\n  }\n  extras {\n    id\n    name\n  }\n}\n    `;\nexport const LoadFragmentDoc = gql`\n    fragment load on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n  plane {\n    id\n    maxSlots\n    name\n  }\n  gca {\n    id\n    user {\n      id\n      name\n    }\n  }\n  pilot {\n    id\n    user {\n      id\n      name\n    }\n  }\n  loadMaster {\n    id\n    user {\n      id\n      name\n    }\n  }\n  slots {\n    ...slot\n  }\n}\n    ${SlotFragmentDoc}`;\nexport const TransactionFragmentDoc = gql`\n    fragment transaction on Transaction {\n  id\n  transactionType\n  amount\n  status\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const OrderFragmentDoc = gql`\n    fragment order on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  buyer {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    id\n    amountCents\n    createdAt\n    updatedAt\n    transactions {\n      ...transaction\n    }\n  }\n}\n    ${TransactionFragmentDoc}`;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: WalletInput!, $seller: WalletInput!, $dropzoneId: Int!, $title: String, $amount: Int!) {\n  createOrder(\n    input: {attributes: {dropzoneId: $dropzoneId, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...order\n    }\n  }\n}\n    ${OrderFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzoneId: // value for 'dropzoneId'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...load\n    }\n  }\n}\n    ${LoadFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($dropzoneId: Int!, $id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: Int!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const QueryDropzoneUserProfileDocument = gql`\n    query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    dropzoneUser(id: $dropzoneUserId) {\n      id\n      credits\n      expiresAt\n      permissions\n      role {\n        id\n        name\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n        image\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n          repackExpiresAt\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n          federation {\n            id\n            name\n          }\n        }\n      }\n      slots {\n        edges {\n          node {\n            id\n            createdAt\n            load {\n              id\n              name\n              loadNumber\n              dispatchAt\n              createdAt\n            }\n            jumpType {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useQueryDropzoneUserProfile__\n *\n * To run a query within a React component, call `useQueryDropzoneUserProfile` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzoneUserProfile` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzoneUserProfile({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useQueryDropzoneUserProfile(baseOptions: Apollo.QueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n      }\nexport function useQueryDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n        }\nexport type QueryDropzoneUserProfileHookResult = ReturnType<typeof useQueryDropzoneUserProfile>;\nexport type QueryDropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useQueryDropzoneUserProfileLazyQuery>;\nexport type QueryDropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        id\n        name\n      }\n      permissions\n    }\n  }\n}\n    `;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;","import * as React from 'react';\nimport { Permission } from '../api/schema.d';\nimport { useCurrentUserPermissionsLazyQuery } from '../api/reflection';\nimport { useAppSelector } from '../state';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [execute, { data }] = useCurrentUserPermissionsLazyQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      execute({\n        variables: {\n          dropzoneId: Number(currentDropzoneId),\n        },\n      });\n    }\n  }, [currentDropzoneId, execute]);\n\n  const permissions = data?.dropzone?.currentUser?.permissions || [];\n  return permissions?.includes(permission as Permission) || false;\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: DropzoneUser): void;\n}\n\nexport const QUERY_PERMISSION_USER = gql`\n  query QueryGCAUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PERMISSION_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: ['actAsGCA'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No gca'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"radio-handheld\"\n          selectedColor={color}\n          onPress={() => setMenuOpen(true)}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n        >\n          {value?.id ? value?.user?.name : 'No gca'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`gca-chip-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge?.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Slot, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\n\ninterface ILoadMasterChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: Slot[];\n  onSelect(user: DropzoneUser): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"shield-account\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No loadmaster'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-account\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No loadmaster'}\n        </Chip>\n      }\n    >\n      {slots?.map((slot) => (\n        <Menu.Item\n          key={`lm-chip-${slot.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (slot?.dropzoneUser) {\n              onSelect(slot.dropzoneUser);\n            }\n          }}\n          title={slot?.dropzoneUser?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: DropzoneUser | null;\n  onSelect(user: DropzoneUser): void;\n}\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryPilotUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n      permissions: ['actAsPilot'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No pilot'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No pilot'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`pilot-select-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Plane, Permission, Query } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPlaneChipSelect {\n  value?: Plane | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QueryChipPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"airplane-takeoff\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n      }}\n      textStyle={{\n        color,\n        fontSize: small ? 12 : undefined,\n      }}\n    >\n      {value?.name || 'No plane'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.name || 'No plane'}\n        </Chip>\n      }\n    >\n      {data?.planes?.map((plane) => (\n        <Menu.Item\n          key={`lm-plane-chip-${plane.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(plane as Plane);\n          }}\n          title={plane.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { TextInput, useTheme } from 'react-native-paper';\n\ninterface INumberFieldProps {\n  error?: boolean;\n  label?: string;\n  value?: number | null;\n  onChangeText(newValue: number): void;\n}\nexport default function NumberField(props: INumberFieldProps) {\n  const { onChangeText: onChangeValue, ...rest } = props;\n  const { value } = rest;\n  const theme = useTheme();\n\n  const onChangeText = React.useCallback(\n    (text: string) => {\n      if (/\\d/.test(text)) {\n        const [numbers] = text.match(/^\\-?\\d+/) || ['0'];\n        onChangeValue(Number(numbers));\n      }\n    },\n    [onChangeValue]\n  );\n  return (\n    <TextInput\n      {...rest}\n      {...{ onChangeText }}\n      value={`${value || 0}`}\n      mode=\"outlined\"\n      keyboardType=\"number-pad\"\n      right={\n        <TextInput.Affix\n          textStyle={{\n            height: '100%',\n          }}\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          text={\n            <View style={styles.chevrons}>\n              <TouchableOpacity\n                style={[\n                  styles.affixTopChevron,\n                  { borderColor: theme.colors.text, backgroundColor: theme.colors.surface },\n                ]}\n                onPress={() => onChangeValue?.((value || 0) + 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-up\" size={24} />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.affixBottomChevron, { backgroundColor: theme.colors.surface }]}\n                onPress={() => onChangeValue?.((value || 0) - 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-down\" size={24} />\n              </TouchableOpacity>\n            </View>\n          }\n        />\n      }\n      caretHidden={false}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  affixBottomChevron: {\n    width: 48,\n    height: 54 / 2,\n    alignItems: 'center',\n    borderLeftWidth: StyleSheet.hairlineWidth,\n  },\n  affixTopChevron: {\n    width: 48,\n    height: 54 / 2,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderLeftWidth: StyleSheet.hairlineWidth,\n    alignItems: 'center',\n  },\n  chevrons: {\n    width: 48,\n    height: 59,\n    paddingTop: 4,\n    marginRight: -10,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  },\n});\n","import { DocumentNode, useQuery } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport { Query } from './schema';\nimport { actions, useAppDispatch } from '../state';\n\nexport interface IAppQuery<Payload, InputType> {\n  data: Maybe<Payload>;\n  loading: boolean;\n  refetch(variables?: InputType): void;\n}\n\nexport interface IAppQueryProps<InputType> {\n  onError?(message: string): void;\n  pollInterval?: number;\n  showSnackbarErrors?: boolean;\n  variables?: InputType;\n}\n\nexport function createQuery<\n  Payload extends Maybe<Record<string, unknown>>,\n  InputType extends object\n>(\n  query: DocumentNode,\n  options: {\n    getPayload(query?: Query): Maybe<Payload>;\n  }\n) {\n  const { getPayload } = options;\n\n  return function useAppQuery(opts: IAppQueryProps<InputType>): IAppQuery<Payload, InputType> {\n    const { variables, pollInterval, onError } = opts;\n    const dispatch = useAppDispatch();\n\n    const { data, loading, refetch, error } = useQuery(query, {\n      variables,\n      pollInterval,\n    });\n\n    const transformedData = React.useMemo(() => getPayload(data), [data]);\n\n    React.useEffect(() => {\n      if (error?.message) {\n        if (opts.showSnackbarErrors !== false) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n\n        onError?.(error.message);\n      }\n    }, [opts.onError, error?.message, opts.showSnackbarErrors, onError, dispatch]);\n\n    return {\n      loading,\n      data: transformedData,\n      refetch,\n    };\n  };\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Chip } from 'react-native-paper';\n\ninterface IChipSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  icon?: string;\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction ChipSelect<T extends Record<string, unknown> | string>(props: IChipSelect<T>) {\n  const {\n    items,\n    selected,\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChangeSelected,\n    autoSelectFirst,\n  } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n      {items.map((item) => (\n        <Chip\n          key={JSON.stringify(item)}\n          mode=\"outlined\"\n          icon={!selected.some((value) => isEqual(item, value)) && icon ? icon : undefined}\n          style={{ margin: 1 }}\n          disabled={isDisabled?.(item) || false}\n          selected={isSelected ? isSelected(item) : selected.some((value) => isEqual(item, value))}\n          onPress={() =>\n            onChangeSelected(\n              selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n            )\n          }\n        >\n          {renderItemLabel(item)}\n        </Chip>\n      ))}\n    </View>\n  );\n}\n\nexport default React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof ChipSelect;\n","import * as React from 'react';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpType | null;\n  userId?: number | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: JumpType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  { jumpTypes: JumpType[]; allowedJumpTypes: JumpType[] },\n  {\n    dropzoneId: number;\n    userIds: number[];\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypes({\n    variables: {\n      userIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: Number(currentDropzoneId),\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={\n          uniqBy([...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])], ({ id }) => id) ||\n          []\n        }\n        selected={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { TicketType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketType | null;\n  onlyPublicTickets?: boolean;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: TicketType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES = gql`\n  query DropzoneUsersAllowedTicketTypes($dropzoneId: Int!, $onlyPublicTickets: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      ticketTypes(isPublic: $onlyPublicTickets) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst useTicketTypes = createQuery<\n  { ticketTypes: TicketType[] },\n  {\n    dropzoneId: number;\n    onlyPublicTickets?: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES, {\n  getPayload: (query) => ({\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n  }),\n});\n\nexport default function TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onSelect, onlyPublicTickets } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useTicketTypes({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={data?.ticketTypes || []}\n        selected={[value].filter(Boolean) as TicketType[]}\n        renderItemLabel={(ticketType) => ticketType?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useLazyQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { Badge, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Rig, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRigSelect {\n  dropzoneId?: number;\n  userId?: number;\n  value?: Rig | null;\n  tandem?: boolean;\n  autoSelectFirst?: boolean;\n  onSelect(rig: Rig): void;\n}\n\nfunction RigTitle(props: { rig: Rig }): JSX.Element {\n  const theme = useTheme();\n  const { rig } = props;\n  const name = rig?.name || `${rig?.make} ${rig?.model}`;\n\n  return (\n    <>\n      <Text>{`${name} (${rig?.canopySize} sqft)`}</Text>\n      {!rig.user ? (\n        <View\n          style={{\n            padding: 2,\n            paddingHorizontal: 4,\n            backgroundColor: theme.colors.accent,\n            borderRadius: 16,\n          }}\n        >\n          <Text style={{ fontSize: 10, color: 'white' }}>Dropzone rig</Text>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nconst QUERY_RIGS = gql`\n  query QueryAvailableRigs($dropzoneId: Int!, $userId: Int!, $isTandem: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n      dropzoneUser(userId: $userId) {\n        id\n        availableRigs(isTandem: $isTandem) {\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigSelect(props: IRigSelect) {\n  const { userId, value, autoSelectFirst, onSelect, dropzoneId, tandem } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [fetchRigs, { data }] = useLazyQuery<Query>(QUERY_RIGS, {\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (userId && dropzoneId) {\n      fetchRigs({\n        variables: {\n          dropzoneId: currentDropzoneId,\n          userId: Number(userId),\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [userId, dropzoneId, fetchRigs, currentDropzoneId, tandem]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.dropzone?.dropzoneUser?.availableRigs?.length) {\n      onSelect(data.dropzone.dropzoneUser.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.dropzone.dropzoneUser?.availableRigs, onSelect, value]);\n\n  return (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <TextInput\n          onTouchEnd={() => setMenuOpen(true)}\n          label=\"Select rig\"\n          value={\n            value\n              ? `${value?.name || `${value?.make} ${value?.model}`} (${value?.canopySize} sqft)`\n              : undefined\n          }\n          left={() => <List.Icon icon=\"parachute\" />}\n          editable={false}\n          mode=\"outlined\"\n        />\n      }\n    >\n      {data?.dropzone?.dropzoneUser?.availableRigs?.map((rig) => (\n        <Menu.Item\n          key={`rig-select-${rig.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(rig);\n          }}\n          style={{ width: '100%' }}\n          title={<RigTitle rig={rig} />}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { TextInput, HelperText, Divider, Chip, List } from 'react-native-paper';\nimport NumberField from '../../input/number_input/NumberField';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Permission } from '../../../api/schema.d';\nimport JumpTypeChipSelect from '../../input/chip_select/JumpTypeChipSelect';\nimport TicketTypeChipSelect from '../../input/chip_select/TicketTypeChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function ManifestForm() {\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.manifest);\n  React.useEffect(() => {\n    if (state.fields.dropzoneUser?.value) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.manifest.setField([\n            'exitWeight',\n            Number(state.fields.dropzoneUser?.value?.user?.exitWeight || 60),\n          ])\n        );\n      }\n\n      if (!state.fields.rig.value && state.fields.dropzoneUser.value.user?.rigs?.length) {\n        dispatch(\n          actions.forms.manifest.setField(['rig', state.fields.dropzoneUser?.value?.user.rigs[0]])\n        );\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.dropzoneUser.value,\n    state.fields.dropzoneUser.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.rig.value,\n  ]);\n\n  const isEdit = state?.original?.id;\n\n  const allowedToManifestOthers = useRestriction(\n    isEdit ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n\n  return (\n    <>\n      <JumpTypeChipSelect\n        value={state.fields.jumpType.value}\n        userId={Number(state?.fields?.dropzoneUser?.value?.user?.id) || null}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['jumpType', value]))}\n      />\n      <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n        {state.fields.jumpType.error || ''}\n      </HelperText>\n\n      <TicketTypeChipSelect\n        value={state.fields.ticketType.value}\n        onlyPublicTickets={!allowedToManifestOthers}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['ticketType', value]))}\n      />\n      <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n        {state.fields.ticketType.error || ''}\n      </HelperText>\n\n      {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n        <List.Subheader>Ticket addons</List.Subheader>\n      )}\n      <ScrollView horizontal style={styles.ticketAddons}>\n        {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n          <Chip\n            selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n            onPress={\n              state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                ? () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                      ])\n                    )\n                : () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        [...(state?.fields?.extras?.value || []), extra],\n                      ])\n                    )\n            }\n          >\n            {`${extra.name} ($${extra.cost})`}\n          </Chip>\n        ))}\n      </ScrollView>\n      <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n        {state.fields.extras.error || ''}\n      </HelperText>\n      <Divider />\n      {!state.fields.dropzoneUser ? null : (\n        <RigSelect\n          required\n          value={state.fields.rig.value}\n          userId={Number(state.fields.dropzoneUser?.value?.user?.id)}\n          dropzoneId={Number(currentDropzone?.dropzone?.id)}\n          onSelect={(value) => dispatch(actions.forms.manifest.setField(['rig', value]))}\n        />\n      )}\n      <HelperText type={state.fields.rig.error ? 'error' : 'info'}>\n        {state.fields.rig.error || ''}\n      </HelperText>\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.manifest.setField(['exitWeight', Number(newValue)]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      {!state.fields.ticketType.value?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger name\"\n            error={!!state.fields.passengerName.error}\n            value={state.fields.passengerName?.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerName', newValue]))\n            }\n          />\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger exit weight\"\n            error={!!state.fields.passengerExitWeight.error}\n            value={state.fields.passengerExitWeight.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerExitWeight', Number(newValue)]))\n            }\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotForm from '../../forms/manifest/ManifestForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOT = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $rigId: Int\n    $ticketTypeId: Int\n    $dropzoneUserId: Int\n    $exitWeight: Float\n    $passengerName: String\n    $passengerExitWeight: Float\n  ) {\n    createSlot(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          rigId: $rigId\n          ticketTypeId: $ticketTypeId\n          dropzoneUserId: $dropzoneUserId\n          exitWeight: $exitWeight\n          passengerExitWeight: $passengerExitWeight\n          passengerName: $passengerName\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      slot {\n        id\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n        exitWeight\n        load {\n          id\n          name\n          createdAt\n          dispatchAt\n          hasLanded\n          maxSlots\n          isFull\n          isOpen\n          plane {\n            id\n            name\n          }\n          gca {\n            id\n            user {\n              id\n              name\n            }\n          }\n          pilot {\n            id\n            user {\n              id\n              name\n            }\n          }\n          loadMaster {\n            id\n            user {\n              id\n              name\n            }\n          }\n          slots {\n            id\n            createdAt\n            user {\n              id\n              name\n            }\n            passengerName\n            passengerExitWeight\n            ticketType {\n              id\n              name\n              isTandem\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { onSuccess, open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlot, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOT);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlot({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          rigId: !state.fields.rig.value?.id ? null : Number(state.fields.rig.value?.id),\n          ticketTypeId: Number(state.fields.ticketType?.value?.id),\n          dropzoneUserId: Number(state.fields.dropzoneUser?.value?.id),\n          exitWeight: state.fields.exitWeight.value,\n          ...(!state.fields.ticketType.value?.isTandem\n            ? {}\n            : {\n                passengerName: state.fields.passengerName?.value,\n                passengerExitWeight: state.fields.passengerExitWeight?.value,\n              }),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifest.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifest.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifest.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifest.setFieldError(['ticketType', message]));\n          case 'rig':\n            return dispatch(actions.forms.manifest.setFieldError(['rig', message]));\n          case 'dropzone_user':\n            return dispatch(actions.forms.manifest.setFieldError(['dropzoneUser', message]));\n          case 'exit_weight':\n            return dispatch(actions.forms.manifest.setFieldError(['exitWeight', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlot?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlot?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlot?.fieldErrors?.length) {\n        onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlot,\n    onSuccess,\n    state.fields.dropzoneUser?.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.passengerExitWeight?.value,\n    state.fields.passengerName?.value,\n    state.fields.rig.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.ticketType.value?.isTandem,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} style={{ maxHeight: 500 }}>\n        <ProgressBar\n          indeterminate\n          visible={mutationData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>\n          {/* eslint-disable-next-line max-len */}\n          {`Manifest ${state?.fields?.dropzoneUser?.value?.user?.name} on ${state.fields.load?.value?.name}`}\n        </Dialog.Title>\n        <Dialog.ScrollArea>\n          <ScrollView>\n            <SlotForm />\n          </ScrollView>\n        </Dialog.ScrollArea>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.manifest.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          <Button onPress={onManifest}>Manifest</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Card,\n  TextInput,\n  ProgressBar,\n  Chip,\n  Divider,\n  List,\n  Button,\n} from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { DropzoneUser, Query, Rig } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport calculateWingLoading from '../../../utils/calculateWingLoading';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: number;\n  dropzoneId: number;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: Rig;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: Rig): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nconst QUERY_DROPZONE_USERS_MANIFEST_DETAILS = gql`\n  query QueryDropzoneUsersManifestDetails($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n\n        user {\n          id\n          name\n          exitWeight\n          license {\n            id\n            name\n          }\n          rigs {\n            id\n            name\n            make\n            model\n            canopySize\n          }\n        }\n        role {\n          id\n          name\n        }\n        user {\n          id\n          name\n          image\n        }\n      }\n    }\n  }\n`;\nconst useQueryDropzoneUsersDetails = createQuery<\n  Query['dropzone']['dropzoneUser'],\n  {\n    dropzoneId: number;\n    dropzoneUserId: number;\n  }\n>(QUERY_DROPZONE_USERS_MANIFEST_DETAILS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUser as DropzoneUser | null,\n});\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneId,\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { data, loading } = useQueryDropzoneUsersDetails({\n    variables: {\n      dropzoneUserId,\n      dropzoneId,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && data?.user?.exitWeight) {\n      onChangeExitWeight(Number(data.user.exitWeight));\n    }\n  }, [data?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={3}>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <Card.Title\n        title={data?.user.name}\n        left={() =>\n          data?.user?.image ? (\n            <Avatar.Image source={{ uri: data.user.image }} size={24} />\n          ) : (\n            <Avatar.Icon icon=\"account\" size={24} />\n          )\n        }\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"lock\" mode=\"outlined\" disabled>\n            {data?.role?.name}\n          </Chip>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {data?.user?.license?.name}\n          </Chip>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip style={{ marginHorizontal: 1 }} icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n        </ScrollView>\n        <View style={styles.row}>\n          <View style={styles.rowFirst}>\n            <RigSelect\n              userId={dropzoneUserId}\n              dropzoneId={dropzoneId}\n              onSelect={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n              required\n            />\n          </View>\n          <View style={styles.rowLast}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              onChangeText={(num) => onChangeExitWeight(num)}\n              label=\"Exit weight (kg)\"\n            />\n          </View>\n        </View>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                  mode=\"outlined\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChangeText={(num) => onChangePassengerWeight?.(num)}\n                  label=\"Exit weight (kg)\"\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { HelperText, Divider, Chip, List, Card } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useRestriction from '../../../hooks/useRestriction';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType, Permission, TicketType } from '../../../api/schema.d';\n\nimport UserRigCard from './UserRigCard';\n\nconst QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!, $isPublic: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n\n      ticketTypes(isPublic: $isPublic) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  {\n    jumpTypes: JumpType[];\n    allowedJumpTypes: JumpType[];\n    ticketTypes: TicketType[];\n  },\n  {\n    dropzoneId: number;\n    userIds: number[];\n    isPublic: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypes({\n    variables: {\n      userIds: state.fields.users?.value?.map((slotUser) => slotUser.id) as number[],\n      dropzoneId: globalState.currentDropzoneId as number,\n      isPublic: canManifestOthers ? null : true,\n    },\n    onError: console.error,\n  });\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  return (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <Card elevation={2} style={{ marginBottom: 16, flexShrink: 1, marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={\n              uniqBy(\n                [...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n                ({ id }) => id\n              ) || []\n            }\n            selected={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n            renderItemLabel={(jumpType: JumpType) => jumpType.name}\n            isDisabled={(jumpType: JumpType) =>\n              !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n            }\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['jumpType', first as JumpType]))\n            }\n          />\n\n          <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n            {state.fields.jumpType.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n\n      <List.Subheader>Ticket</List.Subheader>\n      <Card elevation={2} style={{ marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={data?.ticketTypes || []}\n            selected={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n            renderItemLabel={(ticketType: TicketType) => ticketType.name}\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['ticketType', first as TicketType]))\n            }\n          />\n          <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n            {state.fields.ticketType.error || ''}\n          </HelperText>\n\n          {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n            <List.Subheader>Ticket addons</List.Subheader>\n          )}\n          <ScrollView horizontal style={styles.ticketAddons}>\n            {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n              <Chip\n                selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n                onPress={\n                  state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                    ? () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                          ])\n                        )\n                    : () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            [...(state?.fields?.extras?.value || []), extra],\n                          ])\n                        )\n                }\n              >\n                {`${extra.name} ($${extra.cost})`}\n              </Chip>\n            ))}\n          </ScrollView>\n          <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n            {state.fields.extras.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n      <Divider />\n\n      <List.Subheader>Group</List.Subheader>\n      {state.fields?.users?.value?.map((slotUser) => (\n        <UserRigCard\n          dropzoneId={globalState.currentDropzoneId as number}\n          dropzoneUserId={Number(slotUser.id)}\n          selectedRig={slotUser.rig || undefined}\n          exitWeight={slotUser.exitWeight}\n          onChangeExitWeight={(exitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n                ),\n              ])\n            )\n          }\n          onRemove={() =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n              ])\n            )\n          }\n          onChangeRig={(newRig) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id\n                    ? { ...slotUser, rigId: Number(newRig.id), rig: newRig }\n                    : user\n                ),\n              ])\n            )\n          }\n          {...{ isTandem }}\n          passengerName={slotUser.passengerName}\n          passengerWeight={slotUser.passengerExitWeight}\n          onChangePassengerName={(passengerName) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerName } : user\n                ),\n              ])\n            )\n          }\n          onChangePassengerWeight={(passengerExitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n                ),\n              ])\n            )\n          }\n        />\n      ))}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Paragraph, Title } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle }: INoResults) {\n  return (\n    <View style={styles.empty}>\n      <Title style={{ color }}>{title}</Title>\n      <Paragraph style={{ color, textAlign: 'center' }}>{subtitle}</Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Button, Checkbox, Divider, List, Searchbar } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport NoResults from '../../NoResults';\nimport { DropzoneUser, Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n              exitWeight\n            }\n\n            availableRigs {\n              id\n              name\n              make\n              model\n              canopySize\n              serial\n\n              user {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IUserListSelect {\n  onNext(): void;\n}\n\nexport default function UserListSelect(props: IUserListSelect) {\n  const { screens } = useAppSelector((root) => root);\n  const dispatch = useAppDispatch();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      search: searchText,\n    },\n  });\n\n  const { currentUser } = useCurrentDropzone();\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  return (\n    <>\n      <Searchbar value={searchText} onChangeText={setSearchText} placeholder=\"Search skydivers\" />\n      <View style={{ height: 380 }}>\n        <ScrollView contentContainerStyle={{ paddingTop: 16 }}>\n          {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n            <NoResults title=\"No users\" subtitle=\"\" />\n          )}\n\n          {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n            <React.Fragment key={`user-${edge?.node?.id || 0}`}>\n              <List.Item\n                style={{ width: '100%' }}\n                key={`user-${edge?.node?.id}`}\n                title={edge?.node?.user.name}\n                description={edge?.node?.role?.name}\n                left={() =>\n                  !edge?.node?.user?.image ? (\n                    <List.Icon icon=\"account\" />\n                  ) : (\n                    <Avatar.Image\n                      source={{ uri: edge?.node?.user.image }}\n                      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                      size={32}\n                    />\n                  )\n                }\n                right={() => (\n                  <Checkbox\n                    status={\n                      screens.manifest.selectedUsers\n                        ?.map<string>(({ id }) => id)\n                        .includes(edge?.node?.id as string)\n                        ? 'checked'\n                        : 'unchecked'\n                    }\n                  />\n                )}\n                disabled={\n                  // Dont allow removing current user if the user\n                  // can only manifest a group with themselves in it\n                  edge?.node?.user.id === currentUser?.id &&\n                  canManifestGroupWithSelfOnly &&\n                  !canManifestGroup\n                }\n                onPress={() => {\n                  dispatch(\n                    actions.screens.manifest.setSelected(\n                      screens.manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                        ? screens.manifest.selectedUsers?.filter(\n                            ({ id }) => id !== `${edge?.node?.id}`\n                          )\n                        : ([...screens.manifest.selectedUsers, edge?.node] as DropzoneUser[])\n                    )\n                  );\n                }}\n              />\n              <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n            </React.Fragment>\n          ))}\n        </ScrollView>\n      </View>\n      <Button\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n          props.onNext();\n        }}\n        style={styles.button}\n        mode=\"contained\"\n      >\n        Next\n      </Button>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  scrollView: {\n    height: 100,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\nimport UserListSelect from './UserListSelect';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const [tabIndex, setTabIndex] = React.useState(0);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        props.onClose();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    props,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={onClose}>\n        <View style={{ backgroundColor: 'white' }} testID=\"manifest-group-sheet\">\n          <View pointerEvents={(state.fields.users?.value?.length || 0) > 0 ? undefined : 'none'}>\n            <Tabs defaultIndex={tabIndex} mode=\"fixed\" onChangeIndex={setTabIndex}>\n              <TabScreen label=\"Create group\">\n                <View />\n              </TabScreen>\n              <TabScreen label=\"Configure jump\">\n                <View />\n              </TabScreen>\n            </Tabs>\n          </View>\n\n          {tabIndex === 0 ? (\n            <View style={styles.userListContainer}>\n              <UserListSelect onNext={() => setTabIndex(1)} />\n            </View>\n          ) : (\n            <ScrollView contentContainerStyle={{ paddingBottom: 200, flexGrow: 1 }}>\n              <ManifestGroupForm />\n              <View style={styles.buttonContainer}>\n                <Button\n                  onPress={onManifest}\n                  loading={mutationData.loading}\n                  mode=\"contained\"\n                  style={styles.button}\n                >\n                  Save\n                </Button>\n              </View>\n            </ScrollView>\n          )}\n        </View>\n      </Dialog>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: '100%',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Badge, Card, Chip, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ViewProps } from '../../../components/Themed';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlotCardProps {\n  slot: Slot;\n  style?: ViewProps['style'];\n  onPress?(slot: Slot): void;\n  onDelete?(slot: Slot): void;\n}\n\nexport default function SlotCard(props: ISlotCardProps) {\n  const { slot, onPress, onDelete, style } = props;\n  const theme = useTheme();\n\n  const hasPassenger = !!slot?.passengerName;\n  return (\n    <>\n      <Card\n        onPress={() => onPress?.(slot)}\n        elevation={3}\n        style={StyleSheet.flatten([styles.card, { marginBottom: hasPassenger ? -4 : 12 }, style])}\n      >\n        <Card.Title\n          title={slot?.dropzoneUser?.user.name || slot?.passengerName}\n          left={() =>\n            slot?.dropzoneUser?.user?.image ? (\n              <Avatar.Image\n                style={{ backgroundColor: theme.colors.surface }}\n                source={{ uri: slot?.dropzoneUser?.user.image }}\n                size={24}\n              />\n            ) : (\n              <Avatar.Icon\n                style={{ backgroundColor: theme.colors.surface }}\n                color={theme.dark ? theme.colors.text : theme.colors.primary}\n                icon=\"account\"\n                size={40}\n              />\n            )\n          }\n          right={() =>\n            !onDelete ? null : (\n              <Badge\n                style={{ marginTop: -45, marginRight: -5 }}\n                onPress={(e) => {\n                  e.preventDefault();\n                  onDelete?.(slot);\n                }}\n              >\n                -\n              </Badge>\n            )\n          }\n        />\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"lock\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.role?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"ticket-account\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.user?.license?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"human-handsup\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.jumpType?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"arrow-up-bold\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.ticketType?.name}\n          </Chip>\n          {!slot.wingLoading ? null : (\n            <Chip\n              style={styles.chip}\n              textStyle={styles.chipText}\n              icon=\"escalator-down\"\n              mode=\"outlined\"\n              disabled\n            >\n              {slot.wingLoading.toFixed(2)}\n            </Chip>\n          )}\n        </Card.Content>\n      </Card>\n      {!slot?.passengerName ? null : (\n        <>\n          <View\n            style={{\n              width: '100%',\n              height: 30,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <MaterialCommunityIcons color={theme.colors.onSurface} name=\"link-variant\" size={30} />\n          </View>\n          <Card\n            style={StyleSheet.flatten([\n              { margin: 12, marginTop: -4, height: 150, width: '100%' },\n              style,\n            ])}\n            elevation={3}\n          >\n            <Card.Title\n              title={slot?.passengerName}\n              left={() => (\n                <Avatar.Icon\n                  icon=\"account-supervisor\"\n                  color={theme.dark ? theme.colors.text : theme.colors.primary}\n                  style={{ backgroundColor: theme.colors.surface }}\n                  size={40}\n                />\n              )}\n            />\n            <Card.Content>\n              <Text style={styles.passengerTitle}>P A S S E N G E R</Text>\n            </Card.Content>\n          </Card>\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  chip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  infoChip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  chipText: {\n    fontSize: 12,\n  },\n  passengerChip: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  passengerTitle: {\n    fontSize: 30,\n    opacity: 0.5,\n    alignSelf: 'center',\n    width: '100%',\n    textAlign: 'center',\n    color: '#CCCCCC',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema';\n\nconst MUTATION_UPDATE_LOAD = gql`\n  mutation UpdateLoad(\n    $id: Int!\n    $pilotId: Int\n    $gcaId: Int\n    $planeId: Int\n    $isOpen: Boolean\n    $loadMasterId: Int\n    $dispatchAt: Int\n    $hasLanded: Boolean\n  ) {\n    updateLoad(\n      input: {\n        id: $id\n        attributes: {\n          pilotId: $pilotId\n          gcaId: $gcaId\n          planeId: $planeId\n          isOpen: $isOpen\n          loadMasterId: $loadMasterId\n          dispatchAt: $dispatchAt\n          hasLanded: $hasLanded\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        createdAt\n        loadNumber\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          exitWeight\n\n          passengerName\n          passengerExitWeight\n\n          user {\n            id\n            name\n          }\n          ticketType {\n            id\n            name\n            altitude\n            isTandem\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(MUTATION_UPDATE_LOAD, {\n  getPayload: (result) => result.updateLoad,\n  fieldErrorMap: {\n    pilotId: 'pilot',\n    gcaId: 'gca',\n    planeId: 'plane',\n    loadMasterId: 'loadMaster',\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal } from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\n\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nimport { Load, Permission, LoadState } from '../../../api/schema.d';\nimport { useFinalizeLoadMutation } from '../../../api/reflection';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../../state';\n\ninterface ILoadActionButtonProps {\n  load: Load;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () => null,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const onManifest = React.useCallback(() => {\n    if (!currentUser?.hasLicense) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You need to select a license on your user profile',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasMembership) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your membership is out of date',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasExitWeight) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Update your exit weight on your profile before manifesting',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasCredits) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You have no credits on your account',\n          variant: 'warning',\n        })\n      );\n    }\n\n    dispatch(actions.forms.manifest.setOpen(true));\n    dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n    dispatch(actions.forms.manifest.setField(['load', load]));\n    return null;\n  }, [currentUser, dispatch, load]);\n\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const createCallAction = React.useCallback(\n    (minutes: number | null) => () => {\n      setExpanded(false);\n      updateCall(minutes);\n    },\n    [updateCall]\n  );\n\n  const callActions = [\n    {\n      label: '20 minute call',\n      onPress: createCallAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createCallAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createCallAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const manifestActions = [\n    !showManifestButton\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => onManifest(),\n        },\n    !showGroupIcon\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createCallAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: () =>\n            mutationFinalizeLoad({\n              variables: { id: Number(load.id), state: LoadState.Cancelled },\n            }),\n        },\n    ![LoadState.Cancelled].includes(load.state)\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: () => onLanded(),\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n});\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, IconButton, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useAppSelector } from '../../../state';\nimport { Load } from '../../../api/schema';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: Load;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, onEdit, canEdit, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.surface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          {load?.dispatchAt && isAfter(load.dispatchAt * 1000, new Date()) ? (\n            <Countdown end={new Date(load.dispatchAt * 1000)} variant=\"light\" size={80} />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"shield-airplane\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 48,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          <>\n            <View\n              style={{ flex }}\n              // eslint-disable-next-line react/no-array-index-key\n              key={`info-grid-${i}`}\n            >\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_LOAD = gql`\n  query QueryLoad($id: Int!) {\n    load(id: $id) {\n      id\n      name\n      createdAt\n      dispatchAt\n      hasLanded\n      loadNumber\n      isFull\n      state\n      isOpen\n      weight\n      maxSlots\n      availableSlots\n      occupiedSlots\n      plane {\n        id\n        maxSlots\n        name\n      }\n      gca {\n        id\n        user {\n          id\n          name\n        }\n      }\n      pilot {\n        id\n        user {\n          id\n          name\n        }\n      }\n      loadMaster {\n        id\n        user {\n          id\n          name\n        }\n      }\n      slots {\n        id\n        createdAt\n        exitWeight\n        passengerName\n        passengerExitWeight\n        wingLoading\n        dropzoneUser {\n          id\n          role {\n            id\n            name\n          }\n          user {\n            id\n            name\n            exitWeight\n            license {\n              id\n              name\n            }\n          }\n        }\n        ticketType {\n          id\n          name\n          altitude\n          isTandem\n\n          extras {\n            id\n            name\n            cost\n          }\n        }\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['load'],\n  {\n    id: number;\n  }\n>(QUERY_LOAD, {\n  getPayload: (query) => query?.load,\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { DeleteSlotInput, DeleteSlotPayload } from '../schema';\n\nconst MUTATION_DELETE_SLOT = gql`\n  mutation DeleteSlot($id: Int!) {\n    deleteSlot(input: { id: $id }) {\n      slot {\n        id\n\n        dropzoneUser {\n          id\n          user {\n            id\n            name\n          }\n        }\n        load {\n          id\n          availableSlots\n          isOpen\n          weight\n          slots {\n            id\n            createdAt\n            exitWeight\n\n            passengerName\n            passengerExitWeight\n\n            user {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n              altitude\n              isTandem\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<DeleteSlotInput, DeleteSlotPayload>(MUTATION_DELETE_SLOT, {\n  getPayload: (result) => result.deleteSlot,\n});\n","import * as React from 'react';\nimport { Dimensions, RefreshControl, useWindowDimensions } from 'react-native';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { Card } from 'react-native-paper';\n\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../components/chips/PilotChip';\nimport PlaneChip from '../../../components/chips/PlaneChip';\nimport ManifestUserSheet from '../../../components/dialogs/ManifestUser/ManifestUser';\nimport ManifestGroupSheet from '../../../components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from '../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser, LoadState } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotCard from './SlotCard';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\nimport useQueryLoad from '../../../api/hooks/useQueryLoad';\nimport useMutationDeleteSlot from '../../../api/hooks/useMutationDeleteSlot';\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\n\nfunction AvailableSlotCard({ width }: { width: number }) {\n  return (\n    <Card\n      style={{\n        height: 150,\n        opacity: 0.5,\n        margin: 12,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      elevation={3}\n    >\n      <Card.Title\n        title=\"Available\"\n        style={{ alignSelf: 'center', justifyContent: 'center', flex: 1 }}\n        titleStyle={{ textAlign: 'center' }}\n      />\n    </Card>\n  );\n}\n\nfunction SlotSkeleton({ width }: { width: number }) {\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 150,\n        width,\n        margin: 12,\n      }}\n      layout={[{ key: 'user-card-container', height: 150, width }]}\n    />\n  );\n}\n\nexport default function LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const route = useRoute<{ key: string; name: string; params: { load: Load } }>();\n\n  const {\n    data: detailedLoad,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(route.params.load.id),\n    },\n    pollInterval: 30000,\n  });\n\n  const load = detailedLoad || route.params.load;\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const navigation = useNavigation();\n\n  const slots: (Slot | 2)[] = Array.from({\n    length: (load?.slots?.length || 0) + (load?.availableSlots || 0),\n  }).map((_, index) => ((load?.slots?.length || 0) > index ? (load.slots as Slot[])[index] : 2));\n\n  const maxSlots = load?.maxSlots || load?.plane?.maxSlots || 0;\n  const occupiedSlots = maxSlots - (load?.availableSlots || 0);\n\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 364;\n  const padding = 24;\n  const numColumns = Math.floor(width / (cardWidth + padding)) || 1;\n  let contentWidth = (cardWidth + padding) * numColumns + padding;\n  contentWidth = width < contentWidth ? width : contentWidth;\n\n  const initialLoading = !detailedLoad?.slots?.length && loading;\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.background }}>\n      <Header load={load}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ marginVertical: 8 }}>\n          <PlaneChip\n            value={load?.plane}\n            onSelect={async (plane) => {\n              if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'warning',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <GCAChip\n            value={load?.gca}\n            onSelect={updateGCA}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <PilotChip\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <LoadMasterChip\n            value={load?.loadMaster}\n            slots={load.slots || []}\n            onSelect={updateLoadMaster}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n        </ScrollView>\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      <FlatList\n        testID=\"slots\"\n        keyExtractor={(item, idx) => `slot-${item?.id || idx}`}\n        style={{ flex: 1, height: Dimensions.get('window').height }}\n        contentContainerStyle={{\n          width: contentWidth,\n          alignSelf: 'center',\n          justifyContent: 'space-evenly',\n          paddingBottom: 100,\n        }}\n        numColumns={numColumns}\n        horizontal={false}\n        data={!initialLoading ? slots : [1, 1, 1, 1, 1, 1, 1, 1]}\n        refreshing={loading}\n        onRefresh={refetch}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n        renderItem={({ item: node, index }) => {\n          if (node === 1) {\n            return <SlotSkeleton width={cardWidth} />;\n          }\n\n          return node === 2 ? (\n            <AvailableSlotCard key={`empty-slot-${index}`} width={cardWidth} />\n          ) : (\n            <SlotCard\n              style={{ width: cardWidth }}\n              key={`slot-${node.id}`}\n              slot={node}\n              onDelete={\n                (currentUser?.id === node?.dropzoneUser?.id && canRemoveSelf) || canRemoveOthers\n                  ? onDeleteSlot\n                  : undefined\n              }\n              onPress={(slot) => {\n                const slotGroup = load?.slots?.filter(\n                  ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n                );\n                const onSlotGroupPress = () => {\n                  if (slotGroup) {\n                    dispatch(actions.forms.manifestGroup.reset());\n                    dispatch(actions.forms.manifestGroup.setFromSlots(slotGroup));\n                    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n                    navigation.navigate('ManifestGroupScreen');\n                  }\n                };\n                const onSlotPress = () => {\n                  dispatch(actions.forms.manifest.setOpen(slot));\n                  dispatch(actions.forms.manifest.setField(['load', load]));\n                };\n\n                if (slot.user?.id === currentUser?.id) {\n                  if (canEditSelf) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress();\n                    } else {\n                      onSlotPress();\n                    }\n                  }\n                } else if (canEditOthers) {\n                  if (slotGroup?.length) {\n                    onSlotGroupPress();\n                  } else {\n                    onSlotPress();\n                  }\n                }\n              }}\n            />\n          );\n        }}\n      />\n      <ActionButton load={load} />\n      <ManifestUserSheet\n        open={forms.manifest.open}\n        onClose={() => dispatch(actions.forms.manifest.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.manifest.setOpen(false));\n        }}\n      />\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  return (\n    <WizardContext.Provider\n      value={{\n        index,\n        count,\n        setIndex: (idx) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          ref.current?.scrollToIndex({ index: idx, animated: true });\n        },\n      }}\n    >\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              console.log('onNext with index', index);\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"position\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds}\n        keyExtractor={({ item }, index) => `wind.${index}`}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../../components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport JumpRunSelector from '../../../../components/input/jump_run_select/JumpRunSelect';\n\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport JumpRunSelector from '../../../components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    dispatch,\n  ]);\n\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../components/forms/weather_conditions/WeatherConditionForm';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [mutationCreateWeatherConditions, state, dropzoneId, navigation, dispatch]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() => navigation.navigate('JumpRunScreen')}\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload conditions from MarkSchulz.net\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, Button } from 'react-native-paper';\nimport { View, StyleSheet } from 'react-native';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  return (\n    <View style={styles.warning}>\n      <Paragraph style={{ color: 'white', flex: 7 / 10, flexGrow: 2 }}>{title}</Paragraph>\n      {!action ? null : (\n        <Button onPress={action} style={{ flex: 1 / 10, flexShrink: 1 }}>\n          Fix\n        </Button>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning title=\"Your reserve repack is due. You cannot manifest if your repack is out of date.\" />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 32,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { DrawerActions } from '@react-navigation/native';\nimport { Query } from '../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\nimport SetupWarning from './SetupWarning';\n\nconst QUERY_CURRENT_USER = gql`\n  query QueryDropzone($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      isCreditSystemEnabled\n\n      currentUser {\n        id\n        credits\n        expiresAt\n\n        rigInspections {\n          id\n          rig {\n            id\n            repackExpiresAt\n          }\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { navigation, previous, scene, hideWarnings } = props;\n  const { currentDropzoneId, palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [loadData, { data, loading }] = useLazyQuery<Query>(QUERY_CURRENT_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      loadData();\n    }\n  }, [loadData, currentDropzoneId]);\n\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {previous ? (\n          <Appbar.BackAction\n            onPress={navigation.goBack}\n            color={theme.dark ? palette.primary.dark : palette.primary.main}\n          />\n        ) : (\n          <IconButton\n            color={theme.dark ? palette.primary.dark : palette.primary.main}\n            icon=\"menu\"\n            size={32}\n            onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n          />\n        )}\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold', color: palette.primary.dark }}\n        />\n\n        {scene.descriptor.options.headerRight ? (\n          scene.descriptor.options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{ backgroundColor: palette.accent.main }}\n            mode=\"flat\"\n            textStyle={{ color: palette.surface }}\n          >{`$${data?.dropzone?.currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={data?.dropzone?.currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!data?.dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!data?.dropzone?.currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!data?.dropzone?.currentUser?.expiresAt &&\n            data?.dropzone?.currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!data?.dropzone?.currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = data.dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!data?.dropzone?.currentUser?.rigInspections?.length}\n          isRigSetUp={!!data?.dropzone?.currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            const currentUser = data?.dropzone?.currentUser;\n\n            if (currentUser) {\n              dispatch(actions.forms.user.setOpen(currentUser.user));\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOpen(currentUser.user.rigs[0]));\n              }\n\n              dispatch(actions.forms.userWizard.setOpen(currentUser.user));\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List } from 'react-native-paper';\n\nimport { Text, View } from '../../../components/Themed';\nimport usePalette from '../../../hooks/usePalette';\n\ninterface IGetStartedProps {\n  hasPlanes: boolean;\n  hasTicketTypes: boolean;\n  isPublic: boolean;\n}\nexport default function GetStarted({ hasPlanes, hasTicketTypes, isPublic }: IGetStartedProps) {\n  const palette = usePalette();\n\n  return (\n    <View style={{ width: '70%' }}>\n      <Text style={styles.title}>Set up dropzone</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <List.Item\n        title=\"Create dropzone\"\n        left={() => <List.Icon color={palette.success} icon=\"check\" />}\n      />\n      <List.Item\n        title=\"Add a plane\"\n        left={() =>\n          !hasPlanes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n      <List.Item\n        title=\"Configure jump tickets\"\n        left={() =>\n          !hasTicketTypes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Plane, DropzoneUser, LoadState } from '../../../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../../state';\nimport { errorColor, warningColor } from '../../../../../constants/Colors';\nimport Countdown from '../Countdown';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  load: Load;\n  onPress(): void;\n}\n\nexport default function LoadCard(props: ILoadCardSmall) {\n  const { load: initialRecord, onPress } = props;\n  const dispatch = useAppDispatch();\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    pollInterval: 30000,\n  });\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 2,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load?.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={[styles.cardContent]}>\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', backgroundColor: 'transparent' }}>\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              if ((load?.occupiedSlots || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.occupiedSlots || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'warning',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport {\n  Button,\n  Card,\n  DataTable,\n  IconButton,\n  Menu,\n  Paragraph,\n  ProgressBar,\n  Text,\n} from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { useNavigation } from '@react-navigation/native';\nimport useCurrentDropzone from '../../../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser } from '../../../../../api/schema.d';\nimport useRestriction from '../../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../../state';\nimport SwipeActions from '../../../../../components/layout/SwipeActions';\nimport LoadingCard from '../Small/Loading';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport useMutationDeleteSlot from '../../../../../api/hooks/useMutationDeleteSlot';\n\ninterface ILoadCardLarge {\n  load: Load;\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: Slot[]): void;\n  onSlotPress(slot: Slot): void;\n  onManifest(): void;\n}\n\nexport default function LoadCard(props: ILoadCardLarge) {\n  const {\n    load: initialRecord,\n    onManifest,\n    onManifestGroup,\n    controlsVisible,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    // pollInterval: 30000,\n  });\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load?.id) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    if (!load?.id) {\n      return;\n    }\n    await mutationUpdateLoad.mutate({\n      id: Number(load.id),\n      hasLanded: true,\n    });\n  }, [load?.id, mutationUpdateLoad]);\n\n  const navigation = useNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Text>{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || mutationUpdateLoad.loading || mutationDeleteSlot.loading}\n        color={state.theme.colors.accent}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n          <ScrollView\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: `You need to take ${diff} people off the load to fit on this plane`,\n                      variant: 'warning',\n                    })\n                  );\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip value={load?.gca} onSelect={updateGCA} />\n            <PilotChip value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <DataTable>\n          <DataTable.Header style={{ width: '100%' }}>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Jump type</DataTable.Title>\n            <DataTable.Title numeric>Altitude</DataTable.Title>\n          </DataTable.Header>\n          {load?.slots?.map((slot) => {\n            const slotGroup = load?.slots?.filter(\n              ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n            );\n            const isCurrentUser = slot?.user?.id === currentUser?.id;\n\n            return (\n              <SwipeActions\n                disabled={(isCurrentUser && !canRemoveSelf) || (!isCurrentUser && !canRemoveOthers)}\n                key={`slot-${slot.id}`}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: () => onDeleteSlot(slot),\n                }}\n              >\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  onPress={() => {\n                    if (slot.user?.id === currentUser?.id) {\n                      if (canEditSelf) {\n                        if (slotGroup?.length) {\n                          onSlotGroupPress(slotGroup);\n                        } else {\n                          onSlotPress(slot);\n                        }\n                      }\n                    } else if (canEditOthers) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  }}\n                  pointerEvents=\"none\"\n                >\n                  <DataTable.Cell>\n                    <Paragraph style={styles.slotText}>{slot?.dropzoneUser?.user?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n\n                {slot?.ticketType?.isTandem && (\n                  <DataTable.Row\n                    testID=\"slot-row\"\n                    disabled={!!load?.hasLanded}\n                    pointerEvents=\"none\"\n                  >\n                    <DataTable.Cell>\n                      <Paragraph style={styles.slotText}>{slot?.passengerName}</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>Passenger</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>\n                        {(slot?.ticketType?.altitude || 14000) / 1000}k\n                      </Paragraph>\n                    </DataTable.Cell>\n                  </DataTable.Row>\n                )}\n              </SwipeActions>\n            );\n          })}\n          {Array.from({ length: load?.availableSlots || 0 }, (v, i) => i).map((i) => (\n            <DataTable.Row\n              key={`${load?.id}-empty-slot-${i}`}\n              testID=\"slot-row\"\n              onPress={() => navigation.navigate('LoadScreen', { load })}\n            >\n              <DataTable.Cell>\n                <Paragraph style={styles.slotText}>- Available -</Paragraph>\n              </DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button mode=\"outlined\" onPress={() => updateCall(null)} testID=\"dispatch-cancel\">\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              onDismiss={() => setDispatchOpen(false)}\n              visible={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <Menu.Item\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a load master before this load can be finalized',\n                      variant: 'warning',\n                    })\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a pilot before this load can be finalized',\n                      variant: 'warning',\n                    })\n                  );\n                }\n                return onLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  slotText: {\n    fontSize: 12,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateLoadPayload, LoadInput } from '../schema';\n\nconst MUTATION_CREATE_LOAD = gql`\n  mutation CreateLoad(\n    $name: String\n    $pilotId: Int\n    $gcaId: Int\n    $maxSlots: Int!\n    $planeId: Int\n    $isOpen: Boolean\n  ) {\n    createLoad(\n      input: {\n        attributes: {\n          name: $name\n          pilotId: $pilotId\n          gcaId: $gcaId\n          maxSlots: $maxSlots\n          planeId: $planeId\n          isOpen: $isOpen\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        loadNumber\n        occupiedSlots\n        availableSlots\n        maxSlots\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        maxSlots\n        isOpen\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<LoadInput, CreateLoadPayload>(MUTATION_CREATE_LOAD, {\n  getPayload: (result) => result.createLoad,\n  validates: {\n    maxSlots: [\n      isRequired('lease specify amount of allowed jumpers'),\n      isNumeric('Please enter a valid number'),\n    ],\n    planeId: [isRequired('What plane is flying this load?')],\n    gcaId: [isRequired('You must have a GCA for this load')],\n  },\n  fieldErrorMap: {\n    planeId: 'plane',\n    gcaId: 'gca',\n  },\n});\n","import slice from './slice';\nimport Notifications from './Notifications';\n\nconst { actions } = slice;\n\nexport { actions };\nexport default Notifications;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['dropzone']['dropzoneUsers'],\n  {\n    dropzoneId: number;\n    permissions: string[];\n  }\n>(QUERY_DROPZONE_USERS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUsers,\n});\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport useQueryDropzoneUsers from '../../../api/hooks/useQueryDropzoneUsers';\nimport { DropzoneUser } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IDropzoneUserChipSelect {\n  value?: DropzoneUser | null;\n  label: string;\n  icon?: string;\n  requiredPermissions: string[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(dzuser: DropzoneUser): void;\n}\n\nexport default function DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const { label, requiredPermissions, icon, value, onLoadingStateChanged, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQueryDropzoneUsers({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: requiredPermissions,\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]) => (first ? onSelect(first) : null),\n    [onSelect]\n  );\n  const getItemLabel = React.useCallback((dzUser) => dzUser?.user.name, []);\n  const isSelected = React.useCallback((item) => item.id === value?.id, [value?.id]);\n  const selected = React.useMemo(() => [value].filter(Boolean) as DropzoneUser[], [value]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUser>\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={uniqBy(data?.edges?.map((edge) => edge?.node) || [], 'id') as DropzoneUser[]}\n        selected={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChangeSelected={onChangeSelected}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Plane, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: Plane | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QuerySelectPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onSelect, onLoadingStateChanged } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<Plane>\n        autoSelectFirst\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        selected={[value].filter(Boolean) as Plane[]}\n        renderItemLabel={(plane: Plane) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChangeSelected={([first]) => (first ? onSelect(first as Plane) : null)}\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DropzoneUserChipSelect from '../../input/chip_select/DropzoneUserChipSelect';\nimport PlaneChipSelect from '../../input/chip_select/PlaneChipSelect';\n\nexport default function LoadForm() {\n  const state = useAppSelector((root) => root.forms.load);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        placeholder=\"Optional\"\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.load.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'e.g Starcrest load, Tandem load'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.load.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error || ''}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelect\n          value={state.fields.plane.value}\n          onSelect={(value) => {\n            dispatch(actions.forms.load.setField(['plane', value]));\n            dispatch(actions.forms.load.setField(['maxSlots', value.maxSlots]));\n          }}\n        />\n        <HelperText type={state.fields.plane.error ? 'error' : 'info'}>\n          {state.fields.plane.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"GCA\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['gca', dzUser]))}\n          value={state.fields.gca.value || null}\n          requiredPermissions={['actAsGCA']}\n        />\n        <HelperText type={state.fields.gca.error ? 'error' : 'info'}>\n          {state.fields.gca.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"Pilot\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['pilot', dzUser]))}\n          value={state.fields.pilot.value || null}\n          requiredPermissions={['actAsPilot']}\n        />\n        <HelperText type={state.fields.pilot.error ? 'error' : 'info'}>\n          {state.fields.pilot.error || ''}\n        </HelperText>\n\n        <Divider style={{ marginVertical: 8 }} />\n\n        <Checkbox.Item\n          label=\"Allow public manifesting\"\n          status={state.fields.isOpen.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.load.setField(['isOpen', !state.fields.isOpen.value]))\n          }\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nexport default function DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, buttonAction, title, loading, open, children } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} dismissable={false} style={{ maxWidth: 500, alignSelf: 'center' }}>\n        <ProgressBar indeterminate visible={loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>{title}</Dialog.Title>\n        <Dialog.Content pointerEvents=\"box-none\">\n          <Dialog.ScrollArea>\n            <ScrollView>{children}</ScrollView>\n          </Dialog.ScrollArea>\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={buttonAction}>{buttonLabel}</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\n\nimport useMutationCreateLoad from '../../api/hooks/useMutationCreateLoad';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { actions as snackbar } from '../notifications';\n\nimport { Load } from '../../api/schema';\nimport LoadForm from '../forms/load/LoadForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport { LoadFields } from '../forms/load/slice';\n\ninterface ILoadDialog {\n  open: boolean;\n  onClose(): void;\n  onSuccess(load: Load): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, onClose, onSuccess } = props;\n  const state = useAppSelector((root) => root.forms.load);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const dispatch = useAppDispatch();\n  const createLoad = useMutationCreateLoad({\n    onSuccess: (payload) => {\n      dispatch(\n        snackbar.showSnackbar({\n          message: `Load ${payload?.load?.name} created`,\n          variant: 'success',\n        })\n      );\n\n      if (payload?.load) {\n        onSuccess(payload?.load);\n      }\n      dispatch(actions.forms.load.reset());\n      requestAnimationFrame(() => dispatch(actions.forms.load.setOpen(false)));\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.load.setFieldError([field as keyof LoadFields, message])),\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  const onSave = React.useCallback(() => {\n    const variables = {\n      isOpen: !!state.fields.isOpen.value,\n      name: state.fields.name.value,\n      dropzoneId: currentDropzoneId,\n      maxSlots: state.fields.maxSlots.value || null,\n      planeId: Number(state.fields.plane.value?.id) || null,\n      gcaId: Number(state.fields.gca.value?.id) || null,\n      pilotId: Number(state.fields.pilot.value?.id) || null,\n    };\n    createLoad.mutate(variables);\n  }, [\n    createLoad,\n    currentDropzoneId,\n    state.fields.gca.value?.id,\n    state.fields.isOpen.value,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.pilot.value?.id,\n    state.fields.plane.value?.id,\n  ]);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={createLoad.loading}\n      title=\"New Load\"\n    >\n      <LoadForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport { StyleSheet, ImageBackground, Text, View, TouchableOpacity } from 'react-native';\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport { useNavigation } from '@react-navigation/native';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport weatherBackground from '../../../../../assets/images/weather.png';\nimport nightBackground from '../../../../../assets/images/night.png';\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\nimport { actions, useAppDispatch } from '../../../../state';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { Permission } from '../../../../api/schema.d';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const { dropzone, loading, called } = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? new Date(dropzone?.currentConditions?.createdAt * 1000)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Card\n      style={styles.card}\n      elevation={3}\n      onPress={() => {\n        if (canUpdate && dropzone?.currentConditions) {\n          dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n          navigation.navigate('WindScreen');\n        }\n      }}\n    >\n      <ImageBackground\n        source={theme.dark ? nightBackground : weatherBackground}\n        style={{ ...StyleSheet.absoluteFillObject }}\n        resizeMode=\"cover\"\n      >\n        <Card.Content\n          style={{\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexGrow: 1,\n          }}\n        >\n          {!hasWeatherConditions ? (\n            <View style={styles.noData}>\n              <Text style={styles.noDataLabel}>No weather data</Text>\n            </View>\n          ) : (\n            <>\n              <View style={styles.top}>\n                <View style={styles.cell}>\n                  <FontAwesome\n                    name=\"calendar\"\n                    color=\"#ffffff\"\n                    size={20}\n                    style={{\n                      marginRight: 8,\n                    }}\n                  />\n                  <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                </View>\n\n                <View style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}>\n                  <FontAwesome\n                    name=\"thermometer\"\n                    color=\"#ffffff\"\n                    size={20}\n                    style={{\n                      marginRight: 8,\n                    }}\n                  />\n                  <Text style={styles.temperature}>{temperature || '?'}</Text>\n                  <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                </View>\n              </View>\n              <View style={styles.bottom}>\n                <View style={styles.windboard}>\n                  <View style={styles.row}>\n                    <View style={styles.cell}>\n                      <Text style={styles.header}>Altitude</Text>\n                    </View>\n                    <View style={styles.cell}>\n                      <Text style={styles.header}>Wind</Text>\n                    </View>\n                    <View style={styles.cell}>\n                      <Text style={styles.header}>Direction</Text>\n                    </View>\n                  </View>\n                  {orderBy(\n                    dropzone?.currentConditions?.winds || [],\n                    (item) => Number(item.altitude),\n                    'desc'\n                  ).map(({ speed: wind, direction, altitude }) => (\n                    <React.Fragment key={`wind-at-${altitude}`}>\n                      <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                      <View style={styles.row}>\n                        <View style={styles.cell}>\n                          <Text style={styles.value}>{altitude}</Text>\n                        </View>\n                        <View style={styles.cell}>\n                          <Text style={styles.value}>{wind}</Text>\n                        </View>\n                        <View style={[styles.cell, { justifyContent: 'center' }]}>\n                          <Text style={styles.value}>{direction}</Text>\n                          <FontAwesome\n                            name=\"long-arrow-down\"\n                            size={14}\n                            style={\n                              direction && /\\d+/.test(direction) && Number(direction) < 361\n                                ? {\n                                    transform: [\n                                      {\n                                        rotate: `${direction}deg`,\n                                      },\n                                    ],\n                                    marginLeft: 4,\n                                  }\n                                : { marginLeft: 4 }\n                            }\n                          />\n                        </View>\n                      </View>\n                    </React.Fragment>\n                  ))}\n                </View>\n                <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                  <Text style={[styles.header, { textAlign: 'center' }]}>\n                    Jump run {jumpRun}&deg;\n                  </Text>\n                  <TouchableOpacity\n                    style={{ width: '100%', height: '100%' }}\n                    disabled={!canUpdate}\n                    onPress={() => {\n                      if (dropzone?.currentConditions && canUpdate) {\n                        dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n                        navigation.navigate('JumpRunScreen');\n                      }\n                    }}\n                  >\n                    <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </>\n          )}\n        </Card.Content>\n      </ImageBackground>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    marginHorizontal: 16,\n    height: 200,\n    overflow: 'hidden',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    flexDirection: 'column',\n  },\n  jumpRun: {\n    width: 105,\n    height: 105,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Dimensions, RefreshControl, StyleSheet, useWindowDimensions } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, Menu, ProgressBar, useTheme } from 'react-native-paper';\n\nimport NoResults from '../../../components/NoResults';\nimport { View } from '../../../components/Themed';\nimport { Load, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport GetStarted from './GetStarted';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport LoadDialog from '../../../components/dialogs/Load';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const { dropzone, currentUser, loading, refetch, fetchMore } = useCurrentDropzone();\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({ title: dropzone.name });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const hasPlanes = !!dropzone?.planes?.length;\n  const hasTicketTypes = !!dropzone?.ticketTypes?.length;\n  const isPublic = !!dropzone?.isPublic;\n  const isSetupComplete = hasPlanes && hasTicketTypes;\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      dispatch(actions.global.setPrimaryColor(dropzone.secondaryColor));\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n\n  const onManifest = React.useCallback(\n    (load: Load) => {\n      if (!currentUser?.hasLicense) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You need to select a license on your user profile',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasMembership) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your membership is out of date',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasRigInspection) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs to be inspected before manifesting',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasReserveInDate) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs a reserve repack',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasExitWeight) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Update your exit weight on your profile before manifesting',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasCredits) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You have no credits on your account',\n            variant: 'warning',\n          })\n        );\n      }\n\n      dispatch(actions.forms.manifest.setOpen(true));\n      dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n      dispatch(actions.forms.manifest.setField(['load', load]));\n      return null;\n    },\n    [currentUser, dispatch]\n  );\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 335 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const loads = dropzone?.loads?.edges || [];\n  const initialLoading = !loads?.length && loading;\n\n  const theme = useTheme();\n  return (\n    <View style={{ flex: 1, backgroundColor: theme.colors.background }}>\n      <ProgressBar visible={loading} indeterminate color={state.theme.colors.accent} />\n\n      <View style={styles.container}>\n        {!initialLoading && !isSetupComplete ? (\n          <GetStarted {...{ hasPlanes, hasTicketTypes, isPublic }} />\n        ) : (\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              height: Dimensions.get('window').height,\n            }}\n          >\n            <FlatList\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults title=\"No loads so far today\" subtitle=\"How's the weather?\" />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n                backgroundColor: theme.colors.background,\n              }}\n              testID=\"loads\"\n              keyExtractor={({ item }, idx) => `load-small-${item?.node?.id || idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n                backgroundColor: theme.colors.background,\n              }}\n              numColumns={numColumns}\n              data={initialLoading ? [1, 1, 1, 1, 1] : loads}\n              refreshControl={\n                <RefreshControl refreshing={loading} onRefresh={() => fetchMore({})} />\n              }\n              renderItem={({ item: edge, index }) => {\n                // 1 means loading, because null and undefined\n                // get filtered out\n                if (edge === 1) {\n                  return manifestScreen.display === 'list' ? (\n                    <LoadingCardLarge key={`loading-card-${index}`} />\n                  ) : (\n                    <LoadingCardSmall key={`loading-card-${index}`} />\n                  );\n                }\n                return manifestScreen.display === 'list' ? (\n                  <LoadCardLarge\n                    controlsVisible={false}\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onSlotPress={(slot) => {\n                      if (edge?.node) {\n                        dispatch(actions.forms.manifest.setOpen(slot));\n                        dispatch(actions.forms.manifest.setField(['load', edge.node]));\n                      }\n                    }}\n                    onSlotGroupPress={(slots) => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setFromSlots(slots));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                      navigation.navigate('ManifestGroupScreen');\n                    }}\n                    onManifest={() => {\n                      onManifest(edge.node);\n                    }}\n                    onManifestGroup={() => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setOpen(true));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                    }}\n                  />\n                ) : (\n                  <LoadCardSmall\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onPress={() => navigation.navigate('LoadScreen', { load: edge.node })}\n                  />\n                );\n              }}\n            />\n          </View>\n        )}\n        {canCreateLoad && isSetupComplete && (\n          <FAB\n            style={styles.fab}\n            small\n            icon=\"plus\"\n            onPress={() => dispatch(actions.forms.load.setOpen(true))}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n          visible={isDisplayOptionsOpen}\n          onDismiss={() => setDisplayOptionsOpen(false)}\n        >\n          <Menu.Item\n            title=\"Show expanded cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'cards' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <Menu.Item\n            title=\"Show compact cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'list' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n\n      <LoadDialog\n        onSuccess={() => {\n          dispatch(actions.forms.load.setOpen(false));\n          refetch();\n        }}\n        open={forms.load.open}\n        onClose={() => dispatch(actions.forms.load.setOpen(false))}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { omit } from 'lodash';\nimport { Button, Card, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../../components/forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestGroupScreen {\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateMultipleSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupScreen(props: IManifestGroupScreen) {\n  const { onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const navigation = useNavigation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onSuccess?.();\n        navigation.navigate('Manifest', { screen: 'DropzoneScreen' });\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    navigation,\n    onSuccess,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <ProgressBar\n        indeterminate\n        visible={mutationData.loading}\n        color={globalState.theme.colors.accent}\n      />\n      <Card.Title\n        // eslint-disable-next-line max-len\n        title={`Manifest ${state?.fields?.users?.value?.length} jumpers on Load #${state.fields.load?.value?.loadNumber}`}\n      />\n      <ManifestGroupForm />\n      <Button\n        mode=\"contained\"\n        style={{ width: '100%', marginVertical: 16 }}\n        onPress={() => onManifest()}\n        loading={mutationData.loading}\n      >\n        Save\n      </Button>\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Checkbox, Divider, FAB, List, ProgressBar } from 'react-native-paper';\n\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { DropzoneUser, Query } from '../../../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupUserSelectScreen() {\n  const global = useAppSelector((root) => root.global);\n  const manifest = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: manifest.searchText,\n    },\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (manifest.isSearchVisible) {\n      dispatch(actions.screens.manifest.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, manifest.isSearchVisible]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 0 }}>\n        {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n          <NoResults title=\"No users\" subtitle=\"\" />\n        )}\n\n        {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n          <>\n            <List.Item\n              style={{ width: '100%' }}\n              key={`user-${edge?.node?.id}`}\n              title={edge?.node?.user.name}\n              description={edge?.node?.role?.name}\n              left={() =>\n                !edge?.node?.user?.image ? (\n                  <List.Icon icon=\"account\" />\n                ) : (\n                  <Avatar.Image\n                    source={{ uri: edge?.node?.user.image }}\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={32}\n                  />\n                )\n              }\n              right={() => (\n                <Checkbox.Android\n                  status={\n                    manifest.selectedUsers?.map(({ id }) => id).includes(edge?.node?.id || '')\n                      ? 'checked'\n                      : 'unchecked'\n                  }\n                />\n              )}\n              onPress={() =>\n                dispatch(\n                  actions.screens.manifest.setSelected(\n                    manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                      ? manifest.selectedUsers?.filter(({ id }) => id !== `${edge?.node?.id}`)\n                      : [...manifest.selectedUsers, edge?.node as DropzoneUser]\n                  )\n                )\n              }\n            />\n            <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n          </>\n        ))}\n      </ScrollableScreen>\n      <FAB\n        style={styles.fab}\n        small\n        visible={manifest.selectedUsers.length > 0}\n        icon=\"check\"\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(manifest.selectedUsers));\n          navigation.setParams({ select: false });\n          dispatch(actions.screens.manifest.setSearchVisible(false));\n          dispatch(actions.screens.manifest.setSelected([]));\n          navigation.navigate('ManifestGroupScreen');\n        }}\n        label=\"Next\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\n\ninterface IDatepicker {\n  label: string;\n  timestamp: number;\n  disabled?: boolean;\n  onChange(timestamp: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, timestamp, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Menu\n        onDismiss={() => setOpen(false)}\n        visible={open}\n        anchor={\n          <List.Item\n            onPress={() => setOpen(true)}\n            disabled={!!disabled}\n            title={label}\n            description={timestamp ? format(timestamp * 1000, 'yyyy/MM/dd') : 'No date selected'}\n            left={() => <List.Icon icon=\"calendar\" />}\n          />\n        }\n      >\n        <DayPicker\n          selectedDays={timestamp ? [new Date(timestamp * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </Menu>\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport { Query, UserRole } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRoleSelect {\n  value?: UserRole | null;\n  required?: boolean;\n  disabled?: boolean;\n  onSelect(jt: UserRole): void;\n}\n\nconst QUERY_ROLES = gql`\n  query RolesQuery($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles(selectable: true) {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const { onSelect, disabled, required, value } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useQuery<Query>(QUERY_ROLES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  return (\n    <>\n      <List.Subheader style={{ paddingLeft: 0 }}>Access level</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={!disabled && isMenuOpen}\n        anchor={\n          <List.Item\n            left={() => <List.Icon icon=\"lock\" />}\n            onPress={\n              disabled\n                ? undefined\n                : () => {\n                    setMenuOpen(true);\n                  }\n            }\n            title={value?.name?.replace('_', ' ')?.toUpperCase() || 'Access level'}\n            description={!required ? 'Optional' : null}\n          />\n        }\n      >\n        {data?.dropzone?.roles?.map((role) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(role);\n            }}\n            title={role.name?.replace('_', ' ').toUpperCase() || '-'}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n        required\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Mutation } from '../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUser): void;\n}\n\nconst MUTATION_EDIT_DROPZONE_USER = gql`\n  mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n    updateDropzoneUser(\n      input: { id: $dropzoneUserId, attributes: { userRoleId: $userRoleId, expiresAt: $expiresAt } }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      dropzoneUser {\n        id\n        credits\n        expiresAt\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationUpdateDropzoneUser, createData] = useMutation<Mutation>(\n    MUTATION_EDIT_DROPZONE_USER\n  );\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        props.onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    props,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n        <Dialog.Content>\n          <DropzoneUserForm />\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.dropzoneUser.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, HelperText, Divider, DataTable } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport { TransactionType } from '../../../api/schema.d';\nimport NumberField from '../../input/number_input/NumberField';\n\nexport default function CreditsForm() {\n  const state = useAppSelector((root) => root.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = state.original?.credits || 0;\n  const amount = state.fields.amount.value || 0;\n\n  const subtotal =\n    state.fields.transactionType.value === TransactionType.Deposit\n      ? amount + currentCredits\n      : amount - currentCredits;\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Message\"\n        error={!!state.fields.message.error}\n        value={state.fields.message.value?.toString() || ''}\n        onChangeText={(newValue: string) =>\n          dispatch(actions.forms.credits.setField(['message', newValue]))\n        }\n      />\n      <HelperText type={state.fields.message.error ? 'error' : 'info'}>\n        {state.fields.message.error || ''}\n      </HelperText>\n      {state.fields.transactionType.value === 'deposit' ? (\n        <View>\n          <NumberField\n            label=\"Add amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Deposit</DataTable.Title>\n              <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      ) : (\n        <View>\n          <NumberField\n            label=\"Withdraw amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Withdraw</DataTable.Title>\n              <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { useCreateOrderMutation } from '../../../api/reflection';\nimport { DropzoneUser, TransactionType, WalletableTypes } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsForm from '../../forms/credits/CreditsForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUser;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.credits);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateOrder, createData] = useCreateOrderMutation();\n  const global = useAppSelector((root) => root.global);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(actions.forms.credits.setFieldError(['amount', 'You must specify an amount']));\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.amount.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n\n    if (!dropzoneUser?.id || state.fields.amount.value === null || !global.currentDropzoneId) {\n      return;\n    }\n\n    try {\n      const response = await mutationCreateOrder({\n        variables: {\n          amount: state.fields.amount.value,\n          title:\n            state.fields.message.value ||\n            `${\n              state.fields.transactionType.value === TransactionType.Deposit\n                ? 'Added funds'\n                : 'Withdrew funds'\n            }`,\n          seller:\n            state.fields.transactionType.value !== TransactionType.Deposit\n              ? {\n                  type: WalletableTypes.Dropzone,\n                  id: `${global.currentDropzoneId}`,\n                }\n              : {\n                  type: WalletableTypes.DropzoneUser,\n                  id: dropzoneUser.id,\n                },\n          buyer:\n            state.fields.transactionType.value === TransactionType.Deposit\n              ? {\n                  type: WalletableTypes.Dropzone,\n                  id: `${global.currentDropzoneId}`,\n                }\n              : {\n                  type: WalletableTypes.DropzoneUser,\n                  id: dropzoneUser.id,\n                },\n          dropzoneId: Number(global.currentDropzoneId),\n        },\n      });\n      const { data: result } = response;\n\n      result?.createOrder?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'amount':\n            return dispatch(actions.forms.credits.setFieldError(['amount', message]));\n          case 'message':\n            return dispatch(actions.forms.credits.setFieldError(['message', message]));\n          case 'status':\n            return dispatch(actions.forms.credits.setFieldError(['status', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.createOrder?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.createOrder?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.createOrder?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        props.onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    validate,\n    dropzoneUser?.id,\n    state.fields.amount.value,\n    state.fields.message.value,\n    state.fields.transactionType.value,\n    global.currentDropzoneId,\n    mutationCreateOrder,\n    dispatch,\n    props,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <CreditsForm />\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.credits.reset());\n              onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('Manufacturer is required')],\n    model: [isRequired('Model is required')],\n    serial: [isRequired('Serial number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema';\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateRig(\n    $id: Int!\n    $name: String\n    $make: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $packingCard: String\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    updateRig(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          make: $make\n          packingCard: $packingCard\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n        packingCard\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(MUTATION_UPDATE_RIG, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'You can give your equipment a nickname'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Make\"\n        error={!!state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n      <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n        {state.fields.make.error || 'e.g Javelin, Mirage'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Model\"\n        error={!!state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Serial\"\n        error={!!state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n      <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n        {state.fields.serial.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Current canopy size\"\n        error={!!state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.canopySize.error ? 'error' : 'info'}>\n        {state.fields.canopySize.error || 'Size of canopy in container'}\n      </HelperText>\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          selected={[state.fields.rigType?.value || 'sport']}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField(['rigType', rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateRig.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    } else {\n      await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { License, Query } from '../../../api/schema.d';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: License | null;\n  federationId?: number | null;\n  onSelect(jt: License): void;\n}\n\nconst QUERY_LICENSES = gql`\n  query Licenses($federationId: Int) {\n    licenses(federationId: $federationId) {\n      id\n      name\n\n      federation {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useQuery<Query>(QUERY_LICENSES, {\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<License>\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        selected={[value].filter(Boolean) as License[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { List, Menu, TextInput } from 'react-native-paper';\nimport { Federation, Query } from '../../../api/schema.d';\n\ninterface IFederationSelect {\n  value?: Federation | null;\n  onSelect(jt: Federation): void;\n}\n\nconst QUERY_FEDERATIONS = gql`\n  query Federations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\nexport default function FederationSelect(props: IFederationSelect) {\n  const { value, onSelect } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n\n  const { data } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onSelect(data.federations[0]);\n    }\n  }, [data?.federations, onSelect, value]);\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={isMenuOpen}\n        anchor={\n          <TouchableOpacity\n            onPress={() => {\n              setMenuOpen(true);\n            }}\n          >\n            <TextInput\n              mode=\"outlined\"\n              disabled\n              style={{ minWidth: 200 }}\n              value={value?.name || 'Please select federation'}\n            />\n          </TouchableOpacity>\n        }\n      >\n        {data?.federations?.map((federation) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(federation);\n            }}\n            title={federation.name || '-'}\n            key={`federation-select-${federation.id}`}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(actions.forms.user.setField(['exitWeight', state.original.exitWeight || '60']));\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Phone\"\n        error={!!state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Exit weight\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value?.toString() || ''}\n        keyboardType=\"numbers-and-punctuation\"\n        right={() => <TextInput.Affix text=\"kg\" />}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['exitWeight', newValue]))}\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useCurrentDropzone from './useCurrentDropzone';\n\nexport const QUERY_DROPZONE_USER = gql`\n  query QueryDropzoneUser($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n        rigInspections {\n          id\n          isOk\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          rig {\n            id\n          }\n        }\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n            }\n          }\n        }\n\n        orders {\n          edges {\n            node {\n              id\n              state\n              createdAt\n              amount\n              title\n              buyer {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              seller {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              item {\n                title\n                cost\n\n                ... on Slot {\n                  id\n\n                  ticketType {\n                    id\n                    name\n                    cost\n                  }\n\n                  extras {\n                    id\n                    name\n                    cost\n                  }\n                }\n                ... on TicketType {\n                  id\n                }\n                ... on Extra {\n                  id\n                  name\n                }\n              }\n              receipts {\n                id\n                transactions {\n                  id\n                  transactionType\n                  status\n                  createdAt\n                  amount\n                  message\n                  sender {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                  receiver {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            packingCard\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id?: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const currentDropzone = useCurrentDropzone();\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id || Number(currentDropzone?.data?.dropzone?.currentUser?.id),\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser:\n      !id || id === Number(currentDropzone?.data?.dropzone?.currentUser?.id)\n        ? currentDropzone?.data?.dropzone?.currentUser\n        : dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import * as React from 'react';\nimport { startOfDay } from 'date-fns';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { QUERY_DROPZONE } from '../../api/hooks/useCurrentDropzone';\nimport { QUERY_DROPZONE_USER } from '../../api/hooks/useDropzoneUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId: number;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const currentDropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Profile has been updated`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    mutation: {\n      refetchQueries: [\n        {\n          query: QUERY_DROPZONE,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      id: Number(state.original?.id),\n      name: state.fields.name.value,\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n  }, [\n    mutationUpdateUser,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Menu,\n  Paragraph,\n  Title,\n  TouchableRipple,\n} from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { DropzoneUser, Permission } from '../../../../api/schema.d';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUser;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, onEdit, canEdit, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.onSurface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            {!dropzoneUser?.user?.image ? (\n              <Avatar.Icon size={80} icon=\"account\" />\n            ) : (\n              <Avatar.Image\n                size={80}\n                source={{ uri: dropzoneUser?.user.image }}\n                style={{ backgroundColor: palette.primary.light }}\n              />\n            )}\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            onDismiss={() => setContactOpen(false)}\n            visible={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USER_PROFILE = gql`\n  query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n\n        slots {\n          edges {\n            node {\n              id\n              createdAt\n              load {\n                id\n                name\n                loadNumber\n                dispatchAt\n                createdAt\n              }\n              jumpType {\n                id\n                name\n              }\n              ticketType {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_PROFILE, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser: dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    actAsDZSO: 'shield-cross',\n    actAsGCA: 'radio-handheld',\n    actAsLoadMaster: 'shield-account',\n    actAsPilot: 'shield-airplane',\n    actAsRigInspector: 'shield-search',\n  }[type];\n\n  const label = {\n    actAsDZSO: 'DZSO',\n    actAsGCA: 'GCA',\n    actAsLoadMaster: 'Load Master',\n    actAsPilot: 'Pilot',\n    actAsRigInspector: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { RevokePermissionPayload } from '../schema';\n\nexport const MUTATION_REVOKE_PERMISSION = gql`\n  mutation RevokePermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    revokePermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  RevokePermissionPayload\n>(MUTATION_REVOKE_PERMISSION, {\n  getPayload: (result) => result.revokePermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { GrantPermissionPayload } from '../schema';\n\nexport const MUTATION_GRANT_PERMISSION = gql`\n  mutation GrantPermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    grantPermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  GrantPermissionPayload\n>(MUTATION_GRANT_PERMISSION, {\n  getPayload: (result) => result.grantPermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import { useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport startOfDay from 'date-fns/startOfDay';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { QUERY_DROPZONE_USERS } from '../../../../api/hooks/useQueryDropzoneUsers';\nimport { QUERY_PERMISSION_USER } from '../../../../components/chips/GcaChip';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { DropzoneUser, Permission, Query } from '../../../../api/schema.d';\n\nimport { QUERY_DROPZONE } from '../../../../api/hooks/useCurrentDropzone';\n// eslint-disable-next-line max-len\nimport { QUERY_DROPZONE_USER_PROFILE } from '../../../../api/hooks/useDropzoneUserProfile';\nimport Badge, { IBadgeProps } from '../../../../components/Badge';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport useMutationRevokePermission from '../../../../api/hooks/useMutationRevokePermission';\nimport useMutationGrantPermission from '../../../../api/hooks/useMutationGrantPermission';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUser;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const revokePermission = useMutationRevokePermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission revoked' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QUERY_DROPZONE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(route.params.userId),\n          },\n        },\n      ],\n    },\n  });\n  const grantPermission = useMutationGrantPermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission granted' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QUERY_DROPZONE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(route.params.userId),\n          },\n        },\n      ],\n    },\n  });\n\n  const badges = permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const shouldShowBadge = (permission: Permission) =>\n    canGrantPermission || badges.includes(permission);\n\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revokePermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const updatedList = (c?.dropzone?.dropzoneUsers?.edges || []).filter(\n                          (edge) => edge?.node?.id !== dropzoneUser?.id\n                        );\n\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        });\n\n                        return {\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        };\n                      },\n                    }\n                  )\n                : grantPermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const current = c?.dropzone?.dropzoneUsers?.edges || [];\n                        const shouldUpdate = !!current.find(\n                          (edge) => edge?.node?.id === dropzoneUser?.id\n                        );\n\n                        const updatedGcaList = shouldUpdate\n                          ? [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []).map((edge) =>\n                                edge?.node?.id !== dropzoneUser?.id\n                                  ? edge\n                                  : {\n                                      ...edge,\n                                      node: {\n                                        ...edge?.node,\n                                        ...data?.grantPermission?.dropzoneUser,\n                                      },\n                                    }\n                              ),\n                            ]\n                          : [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []),\n                              {\n                                node: data?.grantPermission?.dropzoneUser,\n                              },\n                            ];\n                        const newData = {\n                          ...c,\n                          dropzone: {\n                            ...c?.dropzone,\n                            dropzoneUsers: {\n                              edges: updatedGcaList,\n                            },\n                          },\n                        };\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            dropzoneId: Number(state.currentDropzoneId),\n                            permissions: [permission],\n                          },\n                          data: newData,\n                        });\n\n                        return {\n                          data: newData,\n                        };\n                      },\n                    }\n                  )\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlot {\n  slot: Slot;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 0,\n              right: 8,\n            }}\n          >\n            {format((slot?.load?.dispatchAt || slot.createdAt) * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`Load #${slot.load.loadNumber}`}\n            description={slot.ticketType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text style={[styles.jumpType, { color: theme.colors.onSurface }]}>\n                  {slot.jumpType?.name}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  flex: 1,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <MaterialCommunityIcons\n                  color={theme.colors.text}\n                  name=\"parachute-outline\"\n                  size={36}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  jumpType: { fontSize: 24, marginLeft: 4, fontWeight: '100', textAlign: 'center' },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 4, paddingBottom: 4 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Platform, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Card, Divider, List, ProgressBar, useTheme } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Mutation, Permission } from '../../../api/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport DropzoneUserDialog from '../../../components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport EditUserSheet from '../../../components/dialogs/User';\n\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n// eslint-disable-next-line max-len\nimport useDropzoneUserProfile from '../../../api/hooks/useDropzoneUserProfile';\nimport useRestriction from '../../../hooks/useRestriction';\n\nimport PermissionBadges from './UserInfo/PermissionBadges';\n\nimport SlotCard from './SlotCard';\n\nconst MUTATION_UPDATE_IMAGE = gql`\n  mutation UpdateUserImage($id: Int, $image: String) {\n    updateUser(input: { id: $id, attributes: { image: $image } }) {\n      user {\n        id\n        name\n        exitWeight\n        email\n        image\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const isSelf = currentUser?.id === route.params.userId;\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUserProfile(\n    Number(route.params.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const [mutationUpdateUser] = useMutation<Mutation>(MUTATION_UPDATE_IMAGE);\n\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      // Upload image\n      await mutationUpdateUser({\n        variables: {\n          id: Number(dropzoneUser?.user?.id),\n          image: `data:image/jpeg;base64,${result.base64}`,\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.user?.id, mutationUpdateUser]);\n\n  const badges = dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const theme = useTheme();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 0.75 }}\n      style={StyleSheet.absoluteFill}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      <ScrollableScreen\n        style={{ backgroundColor: state.theme.colors.background }}\n        contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n      >\n        {!dropzoneUser ? null : (\n          <Header\n            dropzoneUser={dropzoneUser}\n            canEdit={isSelf}\n            onEdit={() => {\n              if (dropzoneUser?.user) {\n                dispatch(actions.forms.user.setOpen(dropzoneUser?.user));\n              }\n            }}\n            onPressAvatar={onPickImage}\n          >\n            <PermissionBadges {...{ dropzoneUser, permissions: badges }} />\n            <InfoGrid\n              style={{ height: 80 }}\n              items={[\n                {\n                  title: 'Funds',\n                  value: `$${dropzoneUser?.credits || 0}`,\n                  onPress: () => {\n                    if (dropzoneUser && canAddTransaction) {\n                      dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                    }\n                  },\n                },\n                {\n                  title: 'License',\n                  value: `${dropzoneUser?.user?.license?.name || '-'}`,\n                },\n                {\n                  title: 'Exit weight',\n                  value: Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                },\n              ]}\n            />\n            <Divider style={styles.divider} />\n          </Header>\n        )}\n        <View style={{ width: '100%' }}>\n          <List.Subheader>Manage</List.Subheader>\n          <Card style={{ margin: 8, marginRight: 8 }} elevation={1}>\n            {canUpdateUsers ? (\n              <>\n                <List.Item\n                  style={{ width: '100%', padding: 0 }}\n                  title=\"Access and Membership\"\n                  left={() => <List.Icon icon=\"lock\" />}\n                  onPress={() =>\n                    dropzoneUser ? dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser)) : null\n                  }\n                />\n                <Divider style={{ width: '100%' }} />\n              </>\n            ) : null}\n            {isSelf || canViewOthersTransactions ? (\n              <>\n                <List.Item\n                  style={{ width: '100%', padding: 0 }}\n                  title=\"Transactions\"\n                  left={() => <List.Icon icon=\"cash\" />}\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('TransactionsScreen', { userId: dropzoneUser?.id })\n                  }\n                />\n                <Divider style={{ width: '100%' }} />\n              </>\n            ) : null}\n            <List.Item\n              style={{ width: '100%', padding: 0 }}\n              title=\"Equipment\"\n              left={() => <List.Icon icon=\"parachute\" />}\n              right={() => <List.Icon icon=\"chevron-right\" />}\n              onPress={() => navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id })}\n            />\n          </Card>\n        </View>\n\n        <View style={{ width: '100%' }}>\n          <List.Subheader>History</List.Subheader>\n          <Card style={{ margin: 8, marginHorizontal: 0 }} elevation={1}>\n            {dropzoneUser?.slots?.edges?.map((edge) =>\n              edge?.node ? (\n                <SlotCard\n                  slot={edge.node}\n                  onPress={() => {\n                    navigation.navigate('LoadScreen', { load: edge.node });\n                  }}\n                />\n              ) : null\n            )}\n          </Card>\n        </View>\n      </ScrollableScreen>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n\n      <DropzoneUserDialog\n        onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n        onSuccess={(user) => {\n          dispatch(actions.forms.dropzoneUser.setOpen(false));\n          if (currentUser?.id === dropzoneUser?.id) {\n            dispatch(actions.global.setUser(user.user));\n            refetch();\n          }\n        }}\n        open={forms.dropzoneUser.open}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n\n      <EditUserSheet\n        dropzoneUserId={Number(dropzoneUser?.id)}\n        onClose={() => dispatch(actions.forms.user.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.user.setOpen(false));\n        }}\n        open={forms.user.open}\n      />\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONE_USER_NOTIFICATIONS = gql`\n  query QueryNotifications($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      currentUser {\n        id\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n              sentBy {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n\n              resource {\n                ... on Load {\n                  id\n                  loadNumber\n                  dispatchAt\n                  state\n                }\n                ... on Transaction {\n                  id\n                  amount\n                  message\n                  status\n                }\n\n                ... on Slot {\n                  id\n                  load {\n                    id\n                    loadNumber\n                    dispatchAt\n                    state\n                  }\n                }\n\n                ... on Rig {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                  rigInspections(dropzoneId: $dropzoneId) {\n                    id\n                    createdAt\n                    inspectedBy {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                  }\n                }\n\n                ... on RigInspection {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useNotifications() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const query = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_NOTIFICATIONS, {\n    variables: {\n      dropzoneId,\n    },\n    pollInterval: 30000,\n  });\n\n  return {\n    ...query,\n    notifications: query?.data?.dropzone?.currentUser.notifications,\n  };\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from '../../../../state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: number;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(timestamp * 1000, { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Slot } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: (notification.resource as Slot).load },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useNavigation } from '@react-navigation/native';\nimport { Load, Notification } from '../../../../api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: notification.resource as Load },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Rig } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('RigInspectionScreen', {\n              rig: (notification.resource as Rig).id,\n              dropzoneUserId: (notification.resource as Rig).user?.id,\n            })\n          : navigation.navigate('Manifest', {\n              screen: 'Profile',\n              params: {\n                screen: 'ProfileScreen',\n              },\n            })\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from '../../../state';\nimport useNotifications from '../../../api/hooks/useNotifications';\nimport NoResults from '../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\n\n/* const MUTATION_MARK_AS_SEEN = gql`\n  mutation MarkAsSeen($id: Int) {\n    updateNotification(input: { id: $id, attributes: { isSeen: true } }) {\n      notification {\n        id\n        isSeen\n        message\n        notificationType\n        receivedBy {\n          notifications {\n            edges {\n              node {\n                id\n                message\n                isSeen\n                notificationType\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n*/\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { notifications, loading, refetch } = useNotifications();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      {notifications?.edges?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n        </View>\n      )}\n      <FlatList\n        data={notifications?.edges}\n        numColumns={1}\n        style={{\n          flex: 1,\n        }}\n        renderItem={({ item: edge }) => {\n          switch (edge?.node?.notificationType) {\n            case 'boarding_call':\n              return <BoardingCallNotification key={edge.node.id} notification={edge.node} />;\n            case 'user_manifested':\n              return <ManifestedCard key={edge.node.id} notification={edge.node} />;\n            case 'credits_updated':\n              return <FundsNotification key={edge.node.id} notification={edge.node} />;\n            case 'rig_inspection_requested':\n            case 'rig_inspection_completed':\n              return <RigInspectionNotification key={edge.node.id} notification={edge.node} />;\n            case 'permission_granted':\n            case 'permission_revoked':\n              return <PermissionNotification key={edge.node.id} notification={edge.node} />;\n            default:\n              return null;\n          }\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string;\n  name: string;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text label={initals} {...rest} />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n      size={32}\n      {...rest}\n    />\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Dropzone, DropzoneUser, Order } from '../../../api/schema';\nimport UserAvatar from '../../../components/UserAvatar';\n\ninterface IOrder {\n  order: Order;\n  dropzoneUser?: DropzoneUser | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    (order.buyer?.__typename === 'DropzoneUser' && (order.buyer as DropzoneUser))?.id ===\n    dropzoneUser?.id\n      ? 'cash-minus'\n      : 'cash-plus';\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Card.Content style={styles.orderContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {format(order?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`#${order.id} ${order.title}`}\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            descriptionStyle={styles.orderDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                {showAvatar ? (\n                  <UserAvatar\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={30}\n                    name={\n                      (order?.buyer as DropzoneUser)?.user?.name ||\n                      (order?.buyer as Dropzone).name ||\n                      ''\n                    }\n                    image={\n                      (order?.buyer as DropzoneUser).user?.image ||\n                      (order?.buyer as Dropzone).banner ||\n                      undefined\n                    }\n                  />\n                ) : (\n                  <MaterialCommunityIcons\n                    color={\n                      // eslint-disable-next-line no-underscore-dangle\n                      '__typename' in order.buyer &&\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                      // @ts-ignore\n                      order.buyer.__typename === 'DropzoneUser' &&\n                      (order.buyer as DropzoneUser)?.id === dropzoneUser?.id\n                        ? '#FF1414'\n                        : successColor\n                    }\n                    name={icon}\n                    size={36}\n                    style={{ marginHorizontal: 16 }}\n                  />\n                )}\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  ${order.amount}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet, Platform } from 'react-native';\nimport { Avatar, Card, Chip, Divider, Menu, ProgressBar, useTheme } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/core';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nimport useMutationUpdateRig from '../../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { errorColor, successColor } from '../../../constants/Colors';\n\nimport { DropzoneUser, Permission, Rig, RigInspection } from '../../../api/schema.d';\n\nexport interface IRigCardProps {\n  rig: Rig;\n  dropzoneUser?: DropzoneUser | null;\n  rigInspection?: RigInspection;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      dispatch(\n        actions.notifications.showSnackbar({ message: 'Image uploaded', variant: 'success' })\n      );\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'Upload failed', variant: 'error' }));\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result.base64}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.user?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          onDismiss={() => setPackingCardMenuOpen(false)}\n          visible={isPackingCardMenuOpen}\n          style={{ marginTop: 12 }}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <Menu.Item\n            title=\"Upload new\"\n            icon=\"camera\"\n            style={{ paddingVertical: 0 }}\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <Menu.Item\n                title=\"View\"\n                icon=\"eye\"\n                style={{ paddingVertical: 0 }}\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rig,\n              dropzoneUserId: Number(dropzoneUser?.id),\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Permission } from '../../../api/schema.d';\nimport RigDialog from '../../../components/dialogs/Rig';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigCard from './RigCard';\n\nexport default function ProfileScreen() {\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const navigation = useNavigation();\n\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        style={styles.fab}\n        visible={canUpdateUser}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { List, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const state = useAppSelector((root) => root.global);\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  return (\n    <ScrollableScreen>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            onPress={() =>\n              navigation.navigate('UpdateDropzoneScreen', {\n                dropzone: state.currentDropzone,\n              })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n        <List.Item\n          title=\"Permissions\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() => navigation.navigate('DropzonePermissionScreen')}\n        />\n        <List.Item\n          title=\"Aircrafts\"\n          onPress={() => navigation.navigate('PlanesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() => navigation.navigate('DropzoneRigsScreen')}\n        />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() => navigation.navigate('RigInspectionTemplateScreen')}\n        />\n        <List.Item\n          title=\"Master Log\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"View historic data for daily operations\"\n          onPress={() => navigation.navigate('DropzoneMasterLogScreen')}\n        />\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          title=\"Ticket types\"\n          onPress={() => navigation.navigate('TicketTypesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <List.Item\n          title=\"Ticket add-ons\"\n          onPress={() => navigation.navigate('ExtrasScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { MutationCreateTicketTypeArgs, CreateTicketPayload } from '../schema';\n\nconst MUTATION_CREATE_TICKET_TYPE = gql`\n  mutation CreateTicketType(\n    $name: String\n    $cost: Float\n    $dropzoneId: Int!\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    createTicketType(\n      input: {\n        attributes: {\n          name: $name\n          cost: $cost\n          dropzoneId: $dropzoneId\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extraIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  MutationCreateTicketTypeArgs['input']['attributes'],\n  CreateTicketPayload\n>(MUTATION_CREATE_TICKET_TYPE, {\n  getPayload: (result) => result.createTicketType,\n  fieldErrorMap: {\n    extraIds: 'extras',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price')],\n    altitude: [isRequired('Altitude must be specified'), isNumeric('Altitude must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateTicketTypeArgs, UpdateTicketPayload } from '../schema';\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketType(\n    $id: Int!\n    $name: String\n    $cost: Float\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    updateTicketType(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          cost: $cost\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extrasIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateTicketTypeArgs['input']['attributes'],\n  UpdateTicketPayload\n>(MUTATION_UPDATE_TICKET_TYPE, {\n  getPayload: (result) => result.updateTicketType,\n  fieldErrorMap: {\n    id: 'original',\n    extraIds: 'extras',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Menu, List, Divider } from 'react-native-paper';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Extra, Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nconst QUERY_EXTRAS = gql`\n  query QueryExtras($dropzoneId: Int!) {\n    extras(dropzoneId: $dropzoneId) {\n      id\n      cost\n      name\n\n      ticketTypes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst ALTITUDE_LABEL_MAP: { [key: string]: string } = {\n  '14000': 'Height',\n  '4000': 'Hop n Pop',\n};\n\nexport default function TicketTypeForm() {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const { data } = useQuery<Query>(QUERY_EXTRAS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ticketType.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'Name of the ticket users will see'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ticketType.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || 'Base cost without extra ticket addons'}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <Menu\n          onDismiss={() => setAltitudeMenuOpen(false)}\n          visible={altitudeMenuOpen}\n          style={{ position: 'absolute', right: '10%', left: '10%', flex: 1 }}\n          anchor={\n            <List.Item\n              onPress={() => {\n                setAltitudeMenuOpen(true);\n              }}\n              title={\n                state.fields.altitude.value &&\n                state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                  ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                  : 'Custom'\n              }\n              style={{ width: '100%', flex: 1 }}\n              right={() => (\n                <List.Icon\n                  icon={\n                    state.fields.altitude.value &&\n                    state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                      ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                      : 'pencil-plus'\n                  }\n                />\n              )}\n            />\n          }\n        >\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Hop n Pop\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Height\"\n            right={() => <List.Icon icon=\"airplane-takeoff\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Other\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n        </Menu>\n\n        {(!state.fields.altitude.value || ![4000, 14000].includes(state.fields.altitude.value)) && (\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Custom altitude\"\n            error={!!state.fields.altitude.error}\n            value={state.fields.altitude?.value?.toString()}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n            }\n          />\n        )}\n\n        <Checkbox.Item\n          label=\"Tandem\"\n          style={{ width: '100%' }}\n          status={state.fields.isTandem.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.ticketType.setField(['isTandem', !state.fields.isTandem.value]))\n          }\n        />\n        <HelperText type={state.fields.isTandem.error ? 'error' : 'info'}>\n          {state.fields.isTandem.error ||\n            'Allow also manifesting a passenger when using this ticket type'}\n        </HelperText>\n\n        <Checkbox.Item\n          label=\"Public manifesting\"\n          style={{ width: '100%' }}\n          status={state.fields.allowManifestingSelf.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(\n              actions.forms.ticketType.setField([\n                'allowManifestingSelf',\n                !state.fields.allowManifestingSelf.value,\n              ])\n            )\n          }\n        />\n\n        <HelperText type={state.fields.allowManifestingSelf.error ? 'error' : 'info'}>\n          {state.fields.allowManifestingSelf.error ||\n            'Allow users to manifest themselves with this ticket'}\n        </HelperText>\n\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        {data?.extras.map((extra) => (\n          <Checkbox.Item\n            key={`extra-${extra.id}`}\n            label={extra.name || ''}\n            status={\n              state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.ticketType.setField([\n                  'extras',\n                  state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                    ? state.fields.extras.value?.filter(({ id }) => id !== extra.id)\n                    : [...(state.fields.extras?.value as Required<Extra[]>), extra],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useIsFocused } from '@react-navigation/core';\nimport useMutationCreateTicketType from '../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../api/hooks/useMutationUpdateTicketType';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport TicketTypeForm from '../forms/ticket_type/TicketTypeForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { TicketTypeFields } from '../forms/ticket_type/slice';\n\ninterface ITicketTypeDialog {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const createTicketType = useMutationCreateTicketType({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Saved`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.ticketType.reset());\n      onClose();\n    },\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateTicketType = useMutationUpdateTicketType({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved`,\n            variant: 'success',\n          })\n        );\n        dispatch(actions.forms.ticketType.reset());\n        onClose();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (isFocused) {\n      dispatch(actions.forms.ticketType.reset());\n    }\n  }, [dispatch, isFocused]);\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateTicketType.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    } else {\n      await createTicketType.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    }\n  }, [\n    createTicketType,\n    currentDropzone?.dropzone?.id,\n    state.fields.allowManifestingSelf.value,\n    state.fields.altitude.value,\n    state.fields.cost.value,\n    state.fields.extras?.value,\n    state.fields.isTandem.value,\n    state.fields.name.value,\n    state.original?.id,\n    updateTicketType,\n  ]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket' : 'New ticket'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={() => {\n        onClose();\n      }}\n      loading={createTicketType.loading || updateTicketType.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useRoute } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport TicketTypesDialog from '../../../components/dialogs/TicketType';\nimport SwipeActions from '../../../components/layout/SwipeActions';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      ticketTypes {\n        id\n        cost\n        currency\n        name\n        altitude\n        allowManifestingSelf\n\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketTypePublic($id: Int!, $allowManifestingSelf: Boolean) {\n    updateTicketType(\n      input: { id: $id, attributes: { allowManifestingSelf: $allowManifestingSelf } }\n    ) {\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        isTandem\n        extras {\n          id\n          name\n          cost\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_DELETE_TICKET_TYPE = gql`\n  mutation DeleteTicketType($id: Int!) {\n    deleteTicketType(input: { id: $id }) {\n      ticketType {\n        id\n        dropzone {\n          id\n          ticketTypes {\n            id\n            cost\n            currency\n            name\n            altitude\n            allowManifestingSelf\n\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n      errors\n    }\n  }\n`;\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const form = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const { data, loading, refetch } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const route = useRoute();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n  const [mutationUpdateTicketType] = useMutation<Mutation>(MUTATION_UPDATE_TICKET_TYPE);\n  const [mutationDeleteTicketType] = useMutation<Mutation>(MUTATION_DELETE_TICKET_TYPE);\n\n  React.useEffect(() => {\n    if (route.name === 'TicketTypesScreen') {\n      refetch();\n    }\n  }, [refetch, route.name]);\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.ticketTypes?.map((ticketType) => (\n          <SwipeActions\n            rightAction={{\n              label: 'Delete',\n              backgroundColor: 'red',\n              onPress: async () => {\n                const { data: result } = await mutationDeleteTicketType({\n                  variables: { id: Number(ticketType.id) },\n                });\n\n                if (result?.deleteTicketType?.errors?.length) {\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: result?.deleteTicketType?.errors[0],\n                      variant: 'error',\n                    })\n                  );\n                }\n              },\n            }}\n          >\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setOpen(ticketType));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n              <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n              <DataTable.Cell numeric>\n                <Switch\n                  onValueChange={() => {\n                    mutationUpdateTicketType({\n                      variables: {\n                        id: Number(ticketType.id),\n                        allowManifestingSelf: !ticketType.allowManifestingSelf,\n                      },\n                    });\n                  }}\n                  value={!!ticketType.allowManifestingSelf}\n                />\n              </DataTable.Cell>\n            </DataTable.Row>\n          </SwipeActions>\n        ))}\n      </DataTable>\n\n      <FAB\n        style={styles.fab}\n        small\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.ticketType.setOpen(true))}\n        label=\"New ticket type\"\n      />\n      <TicketTypesDialog\n        open={form.open}\n        onClose={() => dispatch(actions.forms.ticketType.setOpen(false))}\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\nimport SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={SliderComponent}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n  secondaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor, secondaryColor } = props;\n  const { theme } = useAppSelector((root) => root.global);\n  const primaryLight = color(primaryColor).lighten(0.6).hex();\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: secondaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: primaryLight }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\n\ninterface IWebPreview {\n  primaryColor?: string;\n  secondaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor, secondaryColor } = props;\n  const primaryLight = color(primaryColor).lighten(0.6).hex();\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: secondaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: primaryLight }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value.lng === null || value.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      defaultZoom={3}\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        props.onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, TextInput, HelperText, Card, List, Checkbox } from 'react-native-paper';\nimport { getDocumentAsync } from 'expo-document-picker';\nimport { useQuery, gql } from '@apollo/client';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport ColorPicker from '../../input/colorpicker';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport { Query } from '../../../api/schema';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\n\nconst QUERY_FEDERATIONS = gql`\n  query QueryFederations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await getDocumentAsync({\n        multiple: false,\n        type: 'image',\n      })) as { uri: string };\n\n      dispatch(actions.forms.dropzone.setField(['banner', result.uri as string]));\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch]);\n\n  console.log(state.fields);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Banner\" />\n          <Card.Cover\n            source={{\n              uri: state.fields.banner.value || 'https://picsum.photos/700',\n            }}\n            resizeMode=\"cover\"\n            style={{ width: '100%' }}\n          />\n          <Card.Actions style={{ justifyContent: 'flex-end' }}>\n            <Button onPress={onPickImage}>Upload</Button>\n          </Card.Actions>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview\n              primaryColor={state.fields.primaryColor.value || '#000000'}\n              secondaryColor={state.fields.secondaryColor.value || '#FFFFFF'}\n            />\n\n            <WebPreview\n              primaryColor={state.fields.primaryColor.value || '#000000'}\n              secondaryColor={state.fields.secondaryColor.value || '#FFFFFF'}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Accent color\"\n          helperText=\"Accent color is used for highlights, like buttons and loading bars\"\n          error={state.fields.secondaryColor.error}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['secondaryColor', color]));\n            dispatch(actions.global.setAccentColor(color));\n          }}\n          value={state.fields.secondaryColor.value || '#FFFFFF'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title=\"Public\"\n            description=\"Your dropzone will not be available in the app if this is disabled\"\n            onPress={() =>\n              dispatch(actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic.value]))\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic.value])\n                  )\n                }\n                status={state.fields.isPublic.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n  },\n  skeletonCardCheckbox: {\n    minHeight: 200,\n    marginVertical: 16,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ProgressBar } from 'react-native-paper';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { Dropzone, Mutation, Query } from '../../../api/schema';\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nconst QUERY_DROPZONE_DETAILS = gql`\n  query QueryDropzoneDetails($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n      primaryColor\n      secondaryColor\n      lat\n      lng\n      planes {\n        id\n        name\n        registration\n      }\n      ticketTypes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_DROPZONE = gql`\n  mutation UpdateDropzone(\n    $id: Int!\n    $name: String!\n    $banner: String\n    $lat: Float\n    $lng: Float\n    $federationId: Int!\n    $primaryColor: String\n    $secondaryColor: String\n    $isCreditSystemEnabled: Boolean\n    $isPublic: Boolean\n  ) {\n    updateDropzone(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          banner: $banner\n          lat: $lat\n          lng: $lng\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          isCreditSystemEnabled: $isCreditSystemEnabled\n          isPublic: $isPublic\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n        primaryColor\n        secondaryColor\n        isCreditSystemEnabled\n        lat\n        lng\n\n        planes {\n          id\n          name\n        }\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{ key: string; name: string; params: { dropzone: Dropzone } }>();\n  const { dropzone } = route.params;\n  const navigation = useNavigation();\n\n  const { data, loading } = useQuery<Query>(QUERY_DROPZONE_DETAILS, {\n    variables: { dropzoneId: Number(dropzone.id) },\n  });\n\n  React.useEffect(() => {\n    if (data?.dropzone?.id) {\n      console.log('dz', data.dropzone);\n      dispatch(actions.forms.dropzone.setOpen(data.dropzone));\n    }\n  }, [data?.dropzone, data?.dropzone?.id, dispatch]);\n\n  const [mutationUpdateDropzone, mutation] = useMutation<Mutation>(MUTATION_UPDATE_DROPZONE);\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n      isPublic,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone({\n          variables: {\n            id: Number(dropzone?.id),\n            name: name.value,\n            lat: lat.value,\n            lng: lng.value,\n            banner: banner.value || null,\n            primaryColor: primaryColor.value,\n            secondaryColor: secondaryColor.value,\n            federationId: Number(federation?.value?.id),\n            isCreditSystemEnabled: !!isCreditSystemEnabled,\n            isPublic: !!isPublic,\n          },\n        });\n\n        result?.data?.updateDropzone?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        if (result?.data?.updateDropzone?.errors?.length) {\n          return dispatch(\n            actions.notifications.showSnackbar({\n              message: result?.data?.updateDropzone?.errors[0],\n              variant: 'error',\n            })\n          );\n        }\n        if (!result?.data?.updateDropzone?.fieldErrors?.length) {\n          // No errors:\n          if (result.data?.updateDropzone?.dropzone) {\n            dispatch(\n              actions.global.setDropzone({\n                ...(globalState.currentDropzone || {}),\n                ...result?.data?.updateDropzone?.dropzone,\n              })\n            );\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `Saved`,\n                variant: 'success',\n              })\n            );\n            navigation.goBack();\n          }\n        }\n        return null;\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n    return null;\n  }, [\n    state.fields,\n    dispatch,\n    mutationUpdateDropzone,\n    dropzone?.id,\n    globalState.currentDropzone,\n    navigation,\n  ]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <ScrollableScreen\n        style={{ backgroundColor: '#f4f5f5' }}\n        contentContainerStyle={styles.content}\n      >\n        <DropzoneForm loading={loading} />\n        <View style={styles.fields}>\n          <Button\n            mode=\"contained\"\n            disabled={mutation.loading}\n            onPress={onSave}\n            loading={mutation.loading}\n          >\n            Save\n          </Button>\n        </View>\n      </ScrollableScreen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: 500,\n    padding: 48,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function DropzoneForm() {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value}\n        onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Registration\"\n        error={!!state.fields.registration.error}\n        value={state.fields.registration.value}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['registration', newValue]))\n        }\n      />\n      <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n        {state.fields.registration.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"hours\"\n        error={!!state.fields.hours.error}\n        value={state.fields.hours?.value?.toString()}\n        placeholder=\"Optional\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['hours', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.hours.error ? 'error' : 'info'}>\n        {state.fields.hours.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Min slots\"\n        error={!!state.fields.minSlots.error}\n        value={state.fields.minSlots.value?.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['minSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.minSlots.error ? 'error' : 'info'}>\n        {state.fields.minSlots.error || 'Minimum tickets required to send it'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Max slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error ||\n          'Maximum amount of jumpers who can be manifested on one load'}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    width: '100%',\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\n\nimport { Mutation } from '../../api/schema';\nimport PlaneForm from '../forms/plane/PlaneForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        ...plane\n\n        dropzone {\n          id\n          planes {\n            ...plane\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n  fragment plane on Plane {\n    id\n    name\n    registration\n    minSlots\n    maxSlots\n    hours\n    nextMaintenanceHours\n\n    dropzone {\n      id\n      name\n      planes {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n      }\n    }\n  }\n`;\n\ninterface IPlaneDialogProps {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function CreatePlaneScreen(props: IPlaneDialogProps) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  const [mutationCreatePlane, create] = useMutation<Mutation>(MUTATION_CREATE_PLANE);\n  const [mutationUpdatePlane, update] = useMutation<Mutation>(MUTATION_UPDATE_PLANE);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.registration.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['registration', 'Registration is too short']));\n    }\n\n    if (!state.fields.maxSlots.value) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['maxSlots', 'Max slots must be specified']));\n    }\n\n    return !hasError;\n  }, [\n    dispatch,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.registration.value,\n  ]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots, hours, nextMaintenanceHours } = state.fields;\n\n    const mutation = state.original?.id ? mutationUpdatePlane : mutationCreatePlane;\n\n    if (validate()) {\n      try {\n        const result = await mutation({\n          variables: {\n            ...(state.original?.id\n              ? { id: Number(state.original.id) }\n              : { dropzoneId: Number(currentDropzone?.dropzone?.id) }),\n            name: name.value,\n            registration: registration.value,\n            minSlots: minSlots.value,\n            maxSlots: maxSlots.value,\n            hours: hours.value,\n            nextMaintenanceHours: nextMaintenanceHours.value,\n          },\n        });\n\n        const payload = state.original?.id ? result?.data?.updatePlane : result?.data?.createPlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'hours':\n                return dispatch(actions.forms.plane.setFieldError(['hours', message]));\n              case 'next_maintenance_hours':\n                return dispatch(\n                  actions.forms.plane.setFieldError(['nextMaintenanceHours', message])\n                );\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n    onClose,\n    state.fields,\n    state.original?.id,\n    validate,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n  const onDialogClose = React.useCallback(() => {\n    onClose();\n    dispatch(actions.forms.plane.reset());\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSave}\n      loading={create.loading || update.loading}\n      onClose={onDialogClose}\n    >\n      <PlaneForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PlaneDialog from '../../../components/dialogs/Plane';\nimport useRestriction from '../../../hooks/useRestriction';\nimport SwipeActions from '../../../components/layout/SwipeActions';\n\nconst QUERY_PLANES = gql`\n  query QueryPlanes($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      planes {\n        id\n        name\n        registration\n        hours\n        minSlots\n        maxSlots\n        nextMaintenanceHours\n        createdAt\n      }\n    }\n  }\n`;\n\nconst MUTATION_DELETE_PLANE = gql`\n  mutation DeletePlane($id: Int!) {\n    deletePlane(input: { id: $id }) {\n      errors\n      plane {\n        id\n        dropzone {\n          id\n          planes {\n            name\n            registration\n            hours\n            minSlots\n            maxSlots\n            nextMaintenanceHours\n            createdAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.forms.plane);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n    },\n  });\n\n  const [deletePlane] = useMutation<Mutation>(MUTATION_DELETE_PLANE);\n  const dispatch = useAppDispatch();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n\n  return (\n    <>\n      <ScrollableScreen\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n      >\n        <ProgressBar visible={loading} color={global.theme.colors.accent} />\n\n        {data?.dropzone?.planes?.length ? null : (\n          <NoResults\n            title=\"No planes?\"\n            subtitle=\"You need to have at least one plane to manifest loads\"\n          />\n        )}\n\n        {!data?.dropzone?.planes?.length ? null : (\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Name</DataTable.Title>\n              <DataTable.Title numeric>Registration</DataTable.Title>\n              <DataTable.Title numeric>Slots</DataTable.Title>\n            </DataTable.Header>\n            {data?.dropzone?.planes?.map((plane) => (\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: async () => {\n                    const { data: result } = await deletePlane({\n                      variables: { id: Number(plane.id) },\n                    });\n\n                    if (result?.deletePlane?.errors?.length) {\n                      dispatch(\n                        actions.notifications.showSnackbar({\n                          message: result.deletePlane.errors[0],\n                          variant: 'error',\n                        })\n                      );\n                    }\n                  },\n                }}\n              >\n                <DataTable.Row\n                  pointerEvents=\"none\"\n                  onPress={() => {\n                    dispatch(actions.forms.plane.setOpen(plane));\n                  }}\n                >\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            ))}\n          </DataTable>\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreatePlane}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.plane.setOpen(true))}\n          label=\"New plane\"\n        />\n      </ScrollableScreen>\n      <PlaneDialog open={state.open} onClose={() => dispatch(actions.forms.plane.setOpen(false))} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List, TextInput } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          mode=\"outlined\"\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChangeText={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          value={value as string}\n          mode=\"outlined\"\n          onChangeText={(text) => onChange({ ...config, value: text as string })}\n          label={config.label || ''}\n          keyboardType=\"number-pad\"\n          style={{ marginVertical: 8 }}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          timestamp={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"delete\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from '../../../components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_RIG_INSPECTION = gql`\n  query RigInspection($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_FORM = gql`\n  mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n    updateFormTemplate(\n      input: { id: $formId, attributes: { dropzoneId: $dropzoneId, definition: $definition } }\n    ) {\n      formTemplate {\n        id\n        name\n        definition\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const { data } = useQuery<Query>(QUERY_RIG_INSPECTION, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useMutation<Mutation>(MUTATION_UPDATE_FORM);\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(actions.forms.rigInspectionTemplate.setOpen(data.dropzone.rigInspectionTemplate));\n    }\n  }, [data?.dropzone.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Template saved',\n          variant: 'success',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <Card style={{ width: '100%' }}>\n        <Card.Title title=\"Rig Inspection Form Template\" />\n\n        <Card.Content>\n          <RigInspectionTemplateForm />\n        </Card.Content>\n\n        <Card.Actions>\n          <Button\n            disabled={!canEdit}\n            mode=\"contained\"\n            loading={mutation.loading}\n            onPress={() => updateForm()}\n            style={{ width: '100%' }}\n          >\n            Save template\n          </Button>\n        </Card.Actions>\n      </Card>\n    </ScrollableScreen>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_DROPZONE_RIGS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigs {\n        id\n        name\n        make\n        isPublic\n        model\n        serial\n        rigType\n        repackExpiresAt\n        canopySize\n        packValue\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateDropzoneRig($id: Int!, $isPublic: Boolean) {\n    updateRig(input: { id: $id, attributes: { isPublic: $isPublic } }) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        isPublic\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        dropzone {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            isPublic\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_RIGS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useMutation<Mutation>(MUTATION_UPDATE_RIG);\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    dispatch(\n                      actions.notifications.showSnackbar({\n                        message: result?.updateRig.errors[0],\n                        variant: 'error',\n                      })\n                    );\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Mutation, Permission, UserRole } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: UserRole;\n  permissionName: string;\n}\n\nconst MUTATION_UPDATE_ROLE = gql`\n  mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n    updateRole(input: { id: $roleId, permission: $permissionName, enabled: $enabled }) {\n      role {\n        id\n        name\n        permissions\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useMutation<Mutation>(MUTATION_UPDATE_ROLE);\n  const dispatch = useAppDispatch();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) =>\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'error',\n                  })\n                )\n              );\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport { Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PermissionListItem from '../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        flexGrow: 1,\n        paddingHorizontal: 16,\n      }}\n      layout={[\n        {\n          key: 'first',\n          height: 175,\n          marginTop: 70,\n          marginBottom: 35,\n          width: '100%',\n        },\n        { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n      ]}\n    />\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Manifesting\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket types\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket addons\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Query } from '../../../api/schema.d';\nimport DatePicker from '../../../components/input/date_picker/DatePicker';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: Int!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            user {\n              id\n              name\n              license {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          timestamp={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, List } from 'react-native-paper';\nimport { xor } from 'lodash';\nimport { Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_TICKET_TYPES = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    ticketTypes(dropzoneId: $dropzoneId) {\n      id\n      cost\n      currency\n      name\n      allowManifestingSelf\n\n      extras {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function ExtraForm() {\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const { data } = useQuery<Query>(QUERY_TICKET_TYPES, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.extra.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.extra.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || ''}\n      </HelperText>\n\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        {data?.ticketTypes.map((ticket) => (\n          <Checkbox.Item\n            label={ticket.name || ''}\n            status={\n              state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.extra.setField([\n                  'ticketTypes',\n                  state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                    ? state.fields.ticketTypes.value?.filter(({ id }) => id !== ticket.id)\n                    : [...(state.fields.ticketTypes.value || []), ticket],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { gql, useMutation } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { actions as snackbar } from '../../../components/notifications';\n\nimport { Mutation, Extra } from '../../../api/schema';\nimport ExtraForm from '../../../components/forms/extra/ExtraForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        id\n        name\n\n        ticketTypes {\n          id\n          name\n          cost\n          altitude\n          allowManifestingSelf\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateExtraScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n  const route = useRoute<{ key: string; name: string; params: { extra: Extra } }>();\n  const { extra } = route.params;\n\n  React.useEffect(() => {\n    dispatch(actions.forms.extra.setOpen(extra));\n  }, [dispatch, extra, extra.id]);\n\n  const [mutationUpdateExtra, data] = useMutation<Mutation>(MUTATION_UPDATE_EXTRA);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (Number(state.fields.cost.value) < 0) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['cost', 'Price must be a number']));\n    }\n\n    return !hasError;\n  }, [state.fields, dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, cost, ticketTypes } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationUpdateExtra({\n          variables: {\n            id: Number(state.original?.id),\n            dropzoneId: Number(currentDropzone?.dropzone?.id),\n            name: name.value,\n            cost: cost.value,\n            ticketTypeIds: ticketTypes.value?.map(({ id }) => id),\n          },\n        });\n\n        if (result.data?.updateExtra?.extra) {\n          dispatch(snackbar.showSnackbar({ message: `Saved`, variant: 'success' }));\n          navigation.goBack();\n        }\n      } catch (error) {\n        dispatch(snackbar.showSnackbar({ message: error.message, variant: 'error' }));\n      }\n    }\n  }, [\n    state.fields,\n    state.original?.id,\n    validate,\n    mutationUpdateExtra,\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 48 }}>\n      <MaterialCommunityIcons\n        name=\"ticket-percent\"\n        size={100}\n        color=\"#999999\"\n        style={{ alignSelf: 'center' }}\n      />\n      <ExtraForm />\n      <View style={styles.fields}>\n        <Button mode=\"contained\" disabled={data.loading} onPress={onSave} loading={data.loading}>\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { ExtraInput, CreateExtraPayload } from '../schema';\n\nconst MUTATION_CREATE_EXTRA = gql`\n  mutation CreateExtra($name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n    createExtra(\n      input: {\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<ExtraInput, CreateExtraPayload>(MUTATION_CREATE_EXTRA, {\n  getPayload: (result) => result.createExtra,\n  fieldErrorMap: {\n    ticketTypeIds: 'ticketTypes',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price'), isNumeric('Price must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { ExtraInput, UpdateExtraPayload } from '../schema';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & ExtraInput, UpdateExtraPayload>(\n  MUTATION_UPDATE_EXTRA,\n  {\n    getPayload: (result) => result.updateExtra,\n    fieldErrorMap: {\n      id: 'original',\n      ticketTypeIds: 'ticketTypes',\n    },\n  }\n);\n","import * as React from 'react';\nimport useMutationCreateExtra from '../../api/hooks/useMutationCreateExtra';\nimport useMutationUpdateExtra from '../../api/hooks/useMutationUpdateExtra';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport ExtraForm from '../forms/extra/ExtraForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { ExtraFields } from '../forms/extra/slice';\n\ninterface ITicketTypeExtraDialog {\n  open: boolean;\n  onClose(): void;\n}\nexport default function TicketTypeExtraDialog(props: ITicketTypeExtraDialog) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const createExtra = useMutationCreateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateExtra = useMutationUpdateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    if (state?.original?.id) {\n      updateExtra.mutate({\n        id: Number(state.original.id),\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    } else {\n      createExtra.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    }\n  }, [\n    createExtra,\n    currentDropzone?.dropzone?.id,\n    state.fields.cost.value,\n    state.fields.name.value,\n    state.fields.ticketTypes.value,\n    state.original?.id,\n    updateExtra,\n  ]);\n\n  const snapPoints = React.useMemo(() => [300, 500], []);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket addon' : 'New ticket addon'}\n      open={open}\n      onClose={onClose}\n      loading={createExtra.loading || updateExtra.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      snapPoints={snapPoints}\n    >\n      <ExtraForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { View } from '../../../components/Themed';\nimport { Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport TicketTypeExtraDialog from '../../../components/dialogs/TicketTypeExtra';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryExtra($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      extras {\n        id\n        cost\n        name\n        ticketTypes {\n          id\n          altitude\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function ExtrasScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const globalState = useAppSelector((root) => root.global);\n  const formState = useAppSelector((root) => root.forms.extra);\n  const { data, loading } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.accent} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.dropzone?.extras?.map((extra) => (\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.extra.setOpen(extra));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.dropzone?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.extra.setOpen(true))}\n          label=\"New ticket addon\"\n        />\n      </View>\n      <TicketTypeExtraDialog\n        open={formState.open}\n        onClose={() => dispatch(actions.forms.extra.setOpen(false))}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Transaction } from '../../../api/schema';\n\ninterface ITransaction {\n  transaction: Transaction;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {transaction?.createdAt && format(transaction?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { Dropzone, DropzoneUser, Order, Receipt, Wallet } from '../../../api/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport UserAvatar from '../../../components/UserAvatar';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport lottieTicketAnimation from '../../../../assets/images/ticket.json';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: Receipt;\n  index: number;\n  order: Order;\n}\n\nfunction ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const { currentUser } = useCurrentDropzone();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | Dropzone | DropzoneUser) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        .filter((transaction) => isUser(transaction.receiver))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\nexport default function OrderScreen() {\n  const route = useRoute<{ key: string; name: string; params: { order: Order } }>();\n  const theme = useTheme();\n  const { order } = route.params;\n\n  console.log('Order', route.params);\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                }}\n              >{`Order #${order.id}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                }}\n              >\n                {order.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name || (order?.seller as Dropzone)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport { useDropzoneTransactionsLazyQuery } from '../../../api/reflection';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const [fetchTransactions, { data }] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({ variables: { dropzoneId: state.currentDropzoneId } });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            showAvatar\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider } from 'react-native-paper';\nimport { KeyboardAvoidingView } from 'react-native';\nimport RigInspectionForm from '../../../components/forms/rig_inspection/RigInspectionForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone, { QUERY_DROPZONE } from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Query, Rig, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { QUERY_DROPZONE_USER } from '../../../api/hooks/useDropzoneUser';\nimport RigCard from '../equipment/RigCard';\n\nconst QUERY_RIG_INSPECTIONS = gql`\n  query RigInspections($dropzoneUserId: Int, $dropzoneId: Int!, $userId: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n\n      dropzoneUser(id: $dropzoneUserId, userId: $userId) {\n        id\n        rigInspections {\n          id\n          isOk\n          definition\n          rig {\n            id\n            name\n          }\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          formTemplate {\n            id\n            name\n            definition\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_CREATE_RIG_INSPECTION = gql`\n  mutation CreateRigInspection($dropzoneId: Int, $rigId: Int, $isOk: Boolean, $definition: String) {\n    createRigInspection(\n      input: {\n        attributes: { dropzoneId: $dropzoneId, rigId: $rigId, isOk: $isOk, definition: $definition }\n      }\n    ) {\n      rigInspection {\n        id\n        isOk\n        definition\n        dropzoneUser {\n          id\n          rigInspections {\n            id\n            isOk\n            rig {\n              id\n            }\n            inspectedBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n          }\n        }\n        inspectedBy {\n          id\n          user {\n            id\n            name\n          }\n        }\n        rig {\n          id\n          name\n          make\n          model\n        }\n\n        formTemplate {\n          id\n          definition\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{\n    key: string;\n    name: string;\n    params: { rig: Rig; dropzoneUserId: number; userId: number };\n  }>();\n  const { rig, dropzoneUserId, userId } = route.params;\n  const { data, refetch } = useQuery<Query>(QUERY_RIG_INSPECTIONS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      dropzoneUserId,\n      userId,\n    },\n  });\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    refetch();\n  }, [isFocused, refetch]);\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useMutation<Mutation>(\n    MUTATION_CREATE_RIG_INSPECTION\n  );\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = data?.dropzone?.dropzoneUser?.rigInspections?.some(\n      (inspection) => inspection.rig?.id?.toString() === rig.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = data?.dropzone?.dropzoneUser?.rigInspections?.find(\n        (record) => record.rig?.id === rig.id\n      );\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          data?.dropzone.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    data?.dropzone?.dropzoneUser?.rigInspections,\n    data?.dropzone.rigInspectionTemplate?.definition,\n    dispatch,\n    rig.id,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzoneId: Number(currentDropzone?.dropzone?.id),\n          rigId: Number(rig.id),\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<Query>({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: QUERY_DROPZONE,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: QUERY_DROPZONE,\n              variables: {\n                dropzoneId: Number(currentDropzone?.dropzone?.id),\n                earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            ...result?.dropzone,\n            dropzoneUser: {\n              ...result?.dropzone?.dropzoneUser,\n              rigInspections: [\n                ...(result?.dropzone?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Rig inspection saved',\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig.id,\n    state.fields,\n    state.ok,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <KeyboardAvoidingView\n        behavior=\"position\"\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          maxWidth: 400,\n          backgroundColor: 'transparent',\n        }}\n      >\n        <RigCard rig={rig} />\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={data?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            <RigInspectionForm />\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) === data?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { Dropzone, DropzoneUser, Order, Slot } from '../../api/schema.d';\nimport { useAppSelector } from '../../state';\nimport LoadScreen from '../../screens/authenticated/load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from '../../screens/authenticated/weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from '../../screens/authenticated/weather_conditions/JumpRunScreen';\nimport WindScreen from '../../screens/authenticated/weather_conditions/WindScreen';\nimport AppBar from '../AppBar';\n\nimport ManifestScreen from '../../screens/authenticated/manifest/ManifestScreen';\nimport ManifestGroupScreen from '../../screens/authenticated/manifest/ManifestGroupScreen';\n// eslint-disable-next-line max-len\nimport ManifestGroupUserSelectScreen from '../../screens/authenticated/manifest/ManifestGroupUserSelectScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\n// Settings\nimport SettingsScreen from '../../screens/authenticated/settings/SettingsScreen';\nimport TicketTypeSettingsScreen from '../../screens/authenticated/ticket_types/TicketTypesScreen';\nimport UpdateDropzoneScreen from '../../screens/authenticated/dropzones/UpdateDropzoneScreen';\nimport PlanesScreen from '../../screens/authenticated/planes/PlanesScreen';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateScreen from '../../screens/authenticated/settings/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from '../../screens/authenticated/settings/DropzoneRigsScreen';\n// eslint-disable-next-line max-len\nimport DropzonePermissionScreen from '../../screens/authenticated/settings/DropzonePermissionScreen';\nimport DropzoneMasterLogScreen from '../../screens/authenticated/settings/DropzoneMasterLogScreen';\nimport UpdateExtraScreen from '../../screens/authenticated/extras/UpdateExtraScreen';\nimport ExtrasScreen from '../../screens/authenticated/extras/ExtrasScreen';\nimport OrderScreen from '../../screens/authenticated/transactions/OrderScreen';\nimport DropzoneTransactionsScreen from '../../screens/authenticated/transactions/DropzoneTransactionsScreen';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\n\nexport type IManifestTabParams = {\n  DropzoneScreen: undefined;\n  LoadScreen: undefined;\n  ManifestGroupUserSelectScreen: undefined;\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  JumpRunScreen: undefined;\n  Settings: undefined;\n  Profile: undefined;\n  ManifestGroupScreen: {\n    users?: DropzoneUser[];\n    slots?: Slot[];\n    loadId?: number;\n  };\n\n  ProfileScreen: {\n    userId: string;\n  };\n  NotificationsScreen: undefined;\n  EquipmentScreen: undefined;\n  TransactionsScreen: undefined;\n\n  SettingsScreen: undefined;\n  UpdateDropzoneScreen: { dropzone: Dropzone };\n  TicketTypeSettingsScreen: undefined;\n  PlanesScreen: undefined;\n  PlaneScreen: undefined;\n  TicketTypesScreen: undefined;\n  UpdateExtraScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  DropzonePermissionScreen: undefined;\n  DropzoneMasterLogScreen: undefined;\n  RigInspectionScreen: undefined;\n  DropzoneTransactionsScreen: undefined;\n  OrderScreen: {\n    order: Order;\n  };\n};\n\nconst Manifest = createStackNavigator<IManifestTabParams>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n  const { currentUser } = useCurrentDropzone();\n\n  return (\n    <Manifest.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Manifest.Screen\n        name=\"DropzoneScreen\"\n        component={ManifestScreen}\n        options={{ title: 'Manifest' }}\n      />\n      <Manifest.Screen\n        name=\"WeatherConditionsScreen\"\n        component={WeatherConditionsScreen}\n        options={{ headerShown: false }}\n      />\n      <Manifest.Screen\n        name=\"WindScreen\"\n        component={WindScreen}\n        options={{ title: 'Winds Aloft' }}\n      />\n      <Manifest.Screen\n        name=\"JumpRunScreen\"\n        component={JumpRunScreen}\n        options={{ title: 'Jump Run' }}\n      />\n      <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n      <Manifest.Screen\n        name=\"ManifestGroupScreen\"\n        component={ManifestGroupScreen}\n        options={{ title: 'Manifest group' }}\n      />\n      <Manifest.Screen\n        name=\"ManifestGroupUserSelectScreen\"\n        component={ManifestGroupUserSelectScreen}\n        options={{ title: 'Select users' }}\n      />\n\n      {/* PROFILE */}\n      <Manifest.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'Profile' }}\n        initialParams={{\n          userId: currentUser?.id,\n        }}\n      />\n      <Manifest.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n      <Manifest.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n      <Manifest.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Account History' }}\n      />\n\n      <Manifest.Screen name=\"OrderScreen\" component={OrderScreen} options={{ title: 'Order' }} />\n\n      <Manifest.Screen\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n        options={{ title: 'Settings' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateDropzoneScreen\"\n        component={UpdateDropzoneScreen}\n        options={{ title: 'Basic settings' }}\n      />\n      <Manifest.Screen name=\"PlanesScreen\" component={PlanesScreen} options={{ title: 'Planes' }} />\n      <Manifest.Screen\n        name=\"TicketTypesScreen\"\n        component={TicketTypeSettingsScreen}\n        options={{ title: 'Ticket types' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateExtraScreen\"\n        component={UpdateExtraScreen}\n        options={{ title: 'Update ticket add-on' }}\n      />\n      <Manifest.Screen\n        name=\"ExtrasScreen\"\n        component={ExtrasScreen}\n        options={{ title: 'Ticket add-ons' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionTemplateScreen\"\n        component={RigInspectionTemplateScreen}\n        options={{ title: 'Rig Inspection Form' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig Inspection' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneRigsScreen\"\n        component={DropzoneRigsScreen}\n        options={{ title: 'Dropzone rigs' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneTransactionsScreen\"\n        component={DropzoneTransactionsScreen}\n        options={{ title: 'Order Activity' }}\n      />\n      <Manifest.Screen\n        name=\"DropzonePermissionScreen\"\n        component={DropzonePermissionScreen}\n        options={{ title: 'Permissions' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneMasterLogScreen\"\n        component={DropzoneMasterLogScreen}\n        options={{ title: 'Master log' }}\n      />\n    </Manifest.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport NumberField from '../../input/number_input/NumberField';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.ghost.setField([\n            'exitWeight',\n            state.original.exitWeight?.toString() || '60',\n          ])\n        );\n      }\n\n      if (!state.fields.license.value && state.original?.license?.id) {\n        if (state.original.license.federation) {\n          dispatch(actions.forms.ghost.setFederation(state.original.license.federation));\n        }\n        dispatch(actions.forms.ghost.setField(['license', state.original.license]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.license.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <NumberField\n        mode=\"outlined\"\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={Number(state.fields.exitWeight?.value)}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue?.toString()]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onSelect={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostPayload, MutationCreateGhostArgs } from '../schema';\n\nconst MUTATION_CREATE_GHOST = gql`\n  mutation CreateGhost(\n    $name: String!\n    $phone: String\n    $email: String!\n    $roleId: Int!\n    $licenseId: Int\n    $dropzoneId: Int!\n    $exitWeight: Float!\n  ) {\n    createGhost(\n      input: {\n        attributes: {\n          roleId: $roleId\n          name: $name\n          phone: $phone\n          email: $email\n          dropzoneId: $dropzoneId\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationCreateGhostArgs['input']['attributes'], CreateGhostPayload>(\n  MUTATION_CREATE_GHOST,\n  {\n    getPayload: (result) => result.createGhost,\n    validates: {\n      exitWeight: [\n        isRequired('Exit weight must be provided'),\n        isNumeric('Please enter a valid number'),\n      ],\n      email: [\n        isRequired('Please provide a valid email address'),\n        isEmail('Please provide a valid email address'),\n      ],\n      name: [isRequired('Name is required')],\n\n      roleId: [isRequired('You must select a role')],\n    },\n    fieldErrorMap: {\n      license: 'licenseId',\n      exit_weight: 'exitWeight',\n      role: 'roleId',\n    },\n  }\n);\n","import * as React from 'react';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => {\n      requestAnimationFrame(() => {\n        onSuccess();\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `${payload?.user?.name} has been added to your dropzone`,\n            variant: 'success',\n          })\n        );\n      });\n    },\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n    },\n\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    mutationCreateGhost.mutate({\n      dropzoneId: globalState.currentDropzoneId as number,\n      name: state.fields.name.value || '',\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: Number(state.fields.exitWeight.value),\n      email: state.fields.email.value || '',\n      roleId: Number(state.fields.role.value?.id),\n    });\n  }, [\n    mutationCreateGhost,\n    globalState.currentDropzoneId,\n    state.fields.name.value,\n    state.fields.license.value?.id,\n    state.fields.phone.value,\n    state.fields.exitWeight.value,\n    state.fields.email.value,\n    state.fields.role.value?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport NoResults from '../../../components/NoResults';\nimport { Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport CreateGhostDialog from '../../../components/dialogs/Ghost';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 36, width: 36, marginHorizontal: 12, borderRadius: 36 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: state.searchText,\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = data?.dropzone?.dropzoneUsers?.edges || [];\n  const initialLoading = !users?.length && loading;\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList\n        data={initialLoading ? [1, 1, 1, 11, 1, 1, 1, 1] : users}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: Number(global.currentDropzoneId),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={({ item }, idx) => `user-${item?.node?.id || idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%', alignSelf: 'center' }}\n        renderItem={({ item: edge }) =>\n          edge === 1 ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${edge?.node?.id}`}\n              style={{ margin: 0, marginVertical: 0, borderRadius: 2, width: '100%' }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={edge?.node?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={edge?.node?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !edge?.node?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={36}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: edge?.node?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={36}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('UserProfileScreen', {\n                      userId: edge?.node?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={styles.fab}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.ghost.setOpen(true))}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from '../../../state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  previous,\n  scene,\n  onSearch,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold' }}\n        />\n      )}\n      <MaterialIcons\n        name=\"search\"\n        onPress={() => setSearchVisible(!searchVisible)}\n        color=\"#FFFFFF\"\n        size={24}\n        style={styles.icon}\n      />\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport { Rig } from '../../api/schema';\n\nimport UsersScreen from '../../screens/authenticated/users/UsersScreen';\nimport SearchableAppBar from '../../screens/authenticated/users/AppBar';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\nexport type ISettingsTabParams = {\n  UsersScreen: {\n    select?: boolean;\n    loadId: number;\n    onSelect?(): void;\n  };\n  RigInspectionScreen: { dropzoneUserId: number; rig: Rig };\n  UserProfileScreen: undefined;\n  TransactionsScreen: undefined;\n  EquipmentScreen: undefined;\n};\n\nconst Settings = createStackNavigator<ISettingsTabParams>();\n\nexport default function SettingsTab() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Settings.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => (\n          <SearchableAppBar\n            {...props}\n            searchText={searchText}\n            searchVisible={isSearchVisible}\n            setSearchVisible={(visible) =>\n              dispatch(actions.screens.users.setSearchVisible(visible))\n            }\n            onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n          />\n        ),\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Settings.Screen\n        name=\"UsersScreen\"\n        component={UsersScreen}\n        options={{ title: 'Dropzone users' }}\n      />\n      <Settings.Screen\n        name=\"UserProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'User' }}\n      />\n      <Settings.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Inspection' }}\n      />\n      <Settings.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Transactions' }}\n      />\n      <Settings.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n    </Settings.Navigator>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from '../AppBar';\n\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\n\nexport type IProfileTabParams = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n};\n\nconst Profile = createStackNavigator<IProfileTabParams>();\n\nexport default function Notifications() {\n  return (\n    <Profile.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} hideWarnings />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"NotificationsScreen\"\n    >\n      <Profile.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n\n      <Profile.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig inspection' }}\n      />\n    </Profile.Navigator>\n  );\n}\n","import * as React from 'react';\n\nexport default () => <></>;\n","import {\n  BottomTabBarOptions,\n  BottomTabBarProps,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Appearance, Platform, StyleSheet, Text } from 'react-native';\nimport type { TabsConfig, BubbleTabBarItemConfig } from '@gorhom/animated-tabbar';\nimport Animated from 'react-native-reanimated';\n\nimport { useAppSelector } from '../state';\nimport ManifestTab from './tabs/manifest';\nimport UsersTab from './tabs/users';\nimport NotificationsTab from './tabs/notifications';\n\nimport useRestriction from '../hooks/useRestriction';\nimport { Permission } from '../api/schema.d';\n\nimport AnimatedTabBar from './AnimatedTabBar';\n\nexport type IAuthenticatedTabParams = {\n  Manifest: undefined;\n  Profile: undefined;\n  Packing: undefined;\n  Users: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n};\n\nconst BottomTab = createBottomTabNavigator<IAuthenticatedTabParams>();\n\nconst AnimatedIcon = Animated.createAnimatedComponent(MaterialCommunityIcons);\nexport default function AuthenticatedTabBar() {\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  const canViewUsers = useRestriction(Permission.ReadUser);\n\n  const tabConfig = React.useMemo(\n    () => ({\n      labelStyle: {\n        color: theme.dark ? theme.colors.onSurface : palette.surface,\n      },\n      icon: {\n        activeColor: palette.surface,\n        inactiveColor: palette.primary.dark,\n      },\n      background: {\n        activeColor: palette.primary.main,\n        inactiveColor: theme.colors.surface,\n      },\n    }),\n    [\n      palette.primary.dark,\n      palette.primary.main,\n      palette.surface,\n      theme.colors.onSurface,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n  const tabs: TabsConfig<BubbleTabBarItemConfig> = React.useMemo(\n    () => ({\n      Manifest: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"airplane\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Notifications: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"bell-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Users: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"account-group-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n    }),\n    [tabConfig]\n  );\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Manifest\"\n      {...Platform.select({\n        web: {},\n        ios: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n        android: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: '#FFFFFF',\n        inactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.primary,\n        activeBackgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary,\n        inactiveTintColor: '#CCCCCC',\n        showLabel: Platform.OS !== 'web',\n        adaptive: true,\n        style: {\n          backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n          borderTopWidth: StyleSheet.hairlineWidth,\n          borderTopColor: '#CCCCCC',\n        },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Manifest\"\n        component={ManifestTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Manifest\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"airplane\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: false,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Notifications\"\n        component={NotificationsTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Notifications\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"bell\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: true,\n        }}\n      />\n      {canViewUsers && (\n        <BottomTab.Screen\n          name=\"Users\"\n          component={UsersTab}\n          options={{\n            tabBarLabel: ({ focused, color }) =>\n              !focused ? null : (\n                <Text\n                  style={[\n                    styles.label,\n                    { color: isDarkMode && focused ? theme.colors.primary : color },\n                  ]}\n                >\n                  Users\n                </Text>\n              ),\n            tabBarIcon: ({ size, color, focused }) => (\n              <MaterialCommunityIcons\n                {...{ size, color }}\n                name=\"account-group\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size }}\n                color={isDarkMode && focused ? theme.colors.primary : color}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n      )}\n    </BottomTab.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, FlatList, Dimensions, View } from 'react-native';\nimport { Card, Title, FAB, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Query } from '../../../api/schema.d';\n\nimport NoResults from '../../../components/NoResults';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONES);\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={data?.dropzones?.edges || []}\n        numColumns={2}\n        refreshing={loading}\n        onRefresh={() => refetch()}\n        style={{ flex: 1, width: '100%' }}\n        contentContainerStyle={{\n          flexGrow: 1,\n          width: '100%',\n          paddingBottom: 100,\n        }}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" color=\"#FFFFFF\" />\n        )}\n        renderItem={({ item }) => {\n          return (\n            <Card\n              style={{\n                width: Dimensions.get('window').width / 2 - 32,\n                margin: 8,\n              }}\n              onPress={async () => {\n                if (item?.node) {\n                  const shouldPushRoute = !!globalState.currentDropzoneId;\n                  dispatch(actions.global.setDropzone(item.node));\n\n                  if (shouldPushRoute) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    navigation.replace('Authenticated', {\n                      screen: 'HomeScreen',\n                    });\n                  }\n                }\n              }}\n            >\n              {item?.node?.banner ? (\n                <Card.Cover source={{ uri: item?.node?.banner as string }} />\n              ) : (\n                <View\n                  style={[\n                    styles.dzIcon,\n                    { backgroundColor: item?.node?.primaryColor || undefined },\n                  ]}\n                >\n                  <Avatar.Icon\n                    style={{ backgroundColor: item?.node?.secondaryColor || undefined }}\n                    icon=\"airplane-takeoff\"\n                  />\n                </View>\n              )}\n\n              <Card.Content>\n                <Title>{item?.node?.name}</Title>\n              </Card.Content>\n            </Card>\n          );\n        }}\n      />\n\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('DropzoneSetupScreen');\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n    backgroundColor: '#FF1414',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzonePayload } from '../schema';\n\nexport const MUTATION_CREATE_DROPZONE = gql`\n  mutation CreateDropzone(\n    $name: String!\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n  ) {\n    createDropzone(\n      input: {\n        attributes: {\n          name: $name\n          banner: $banner\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          lat: $lat\n          lng: $lng\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federationId: number;\n    primaryColor: string | null;\n    secondaryColor: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  CreateDropzonePayload\n>(MUTATION_CREATE_DROPZONE, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federationId: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\n\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport useMutationCreateDropzone from '../../../api/hooks/useMutationCreateDropzone';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nexport default function CreateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  const createDropzone = useMutationCreateDropzone({\n    onError: (e: string) =>\n      dispatch(actions.notifications.showSnackbar({ message: e, variant: 'error' })),\n    onFieldError: (field, error) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as string, error])),\n    // eslint-disable-next-line max-len\n    onSuccess: (payload) =>\n      payload?.dropzone && dispatch(actions.global.setDropzone(payload.dropzone)),\n  });\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 32 }}>\n      <DropzoneForm loading={createDropzone.loading} />\n      <View style={styles.fields}>\n        <Button\n          mode=\"contained\"\n          disabled={createDropzone.loading}\n          loading={createDropzone.loading}\n          onPress={() =>\n            createDropzone.mutate({\n              name: state.fields.name.value || '',\n              banner: state.fields.banner.value,\n              federationId: Number(state.fields.federation.value?.id),\n              lat: state.fields.lat.value || null,\n              lng: state.fields.lng.value || null,\n              secondaryColor: state.fields.secondaryColor.value || null,\n              primaryColor: state.fields.primaryColor.value || null,\n            })\n          }\n        >\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport CreateDropzoneScreen from '../screens/authenticated/dropzones/CreateDropzoneScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"Dropzones\"\n    >\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n      <Stack.Screen name=\"CreateDropzoneScreen\" component={CreateDropzoneScreen} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, StyleSheet } from 'react-native';\nimport { Button, HelperText, TextInput } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { View } from '../../../components/Themed';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Mutation } from '../../../api/schema';\nimport { primaryColor } from '../../../constants/Colors';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNGs are allowed\nimport logo from '../../../../assets/images/logo.png';\n\nconst MUTATION_LOG_IN = gql`\n  mutation UserLogin($email: String!, $password: String!) {\n    userLogin(email: $email, password: $password) {\n      authenticatable {\n        id\n        email\n        name\n        phone\n        createdAt\n        updatedAt\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useMutation<Mutation>(MUTATION_LOG_IN);\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: e.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [dispatch, mutationLogin, state.fields.email.value, state.fields.password.value]);\n\n  return (\n    <View style={styles.container}>\n      <Image source={logo} style={{ height: 300, width: '100%' }} resizeMode=\"contain\" />\n      <KeyboardAvoidingView style={styles.fields} behavior=\"padding\">\n        <TextInput\n          label=\"Email\"\n          mode=\"outlined\"\n          value={state.fields.email.value}\n          onChangeText={(newValue) => {\n            dispatch(actions.screens.login.setEmail(newValue));\n          }}\n        />\n        <HelperText type=\"error\">{state.fields.email.error || ' '}</HelperText>\n\n        <TextInput\n          label=\"Password\"\n          mode=\"outlined\"\n          value={state.fields.password.value}\n          secureTextEntry\n          onChangeText={(newValue) => {\n            dispatch(actions.screens.login.setPassword(newValue));\n          }}\n          onSubmitEditing={onLogin}\n          error={!!state.fields.password.error}\n        />\n        <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={onLogin}\n          loading={data.loading}\n        >\n          Log in\n        </Button>\n\n        <Button\n          labelStyle={styles.textButtonLabel}\n          style={styles.textButton}\n          onPress={() => navigation.navigate('SignUpScreen')}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  textButton: {\n    marginTop: 10,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    color: '#FFFFFF',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserSignUpArgs, UserSignUpPayload } from '../schema';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserSignUpArgs, UserSignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userSignUp,\n  fieldErrorMap: {\n    license: 'licenseId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, StyleSheet } from 'react-native';\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'A confirmation link has been sent to your email',\n          variant: 'success',\n        })\n      );\n\n      navigation.navigate('LoginScreen');\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView style={styles.fields} behavior=\"position\">\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value}\n          onChangeText={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n          {state.fields.exitWeight.error || ''}\n        </HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Email\"\n          error={!!state.fields.email.error}\n          value={state.fields.email.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['email', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        {/*\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Phone\"\n          error={!!state.fields.phone.error}\n          value={state.fields.phone.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['phone', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.phone.error || ''}</HelperText>\n        */}\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Repeat password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport LoginScreen from '../screens/unauthenticated/login/LoginScreen';\nimport SignUpScreen from '../screens/unauthenticated/signup/SignUpScreen';\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator();\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport FederationSelect from '../../../../components/input/dropdown_select/FederationSelect';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction NameAndFederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Basic information\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n        </Card>\n        <Card style={styles.card}>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default NameAndFederationWizardSceen;\n","import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { calculateLatLngDelta } from '../../../../utils/calculateLatLngDelta';\nimport Map from '../../../../components/map/Map';\n\nfunction LocationWizardStep(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        console.log(status);\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    console.log({ visible });\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n\n  return (\n    <WizardScreen\n      disableScroll\n      style={styles.container}\n      containerStyle={{ paddingHorizontal: 0 }}\n      {...props}\n    >\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <Text style={styles.title}>Pick location</Text>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 140,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction AircraftWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.plane);\n  const [minSlots, setMinSlots] = React.useState(state?.fields?.minSlots?.value || 0);\n  const [maxSlots, setMaxSlots] = React.useState(state?.fields?.maxSlots?.value || 0);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Aircraft\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Information</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Name\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value}\n            onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n          />\n          <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n            {state.fields.name.error || ''}\n          </HelperText>\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Registration\"\n            error={!!state.fields.registration.error}\n            value={state.fields.registration.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.plane.setField(['registration', newValue]))\n            }\n          />\n          <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n            {state.fields.registration.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Minimum slots</List.Subheader>\n            <Text style={styles.cardValue}>{minSlots || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={maxSlots || 34}\n              step={1}\n              value={minSlots}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onValueChange={(value) => setMinSlots(value)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.plane.setField(['minSlots', minSlots]))\n              }\n            />\n          </View>\n\n          <HelperText type={state.fields.minSlots?.error ? 'error' : 'info'}>\n            {state.fields.minSlots?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Max slots</List.Subheader>\n            <Text style={styles.cardValue}>{maxSlots || 34}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={2}\n              maximumValue={34}\n              step={1}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              value={maxSlots}\n              onValueChange={(value) => setMaxSlots(value)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.plane.setField(['maxSlots', Number(maxSlots)]))\n              }\n            />\n          </View>\n\n          <HelperText type={state.fields.maxSlots?.error ? 'error' : 'info'}>\n            {state.fields.maxSlots?.error || 'Max available slots on this aircraft'}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 4 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default AircraftWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { PhonePreview, WebPreview } from '../../../../components/theme_preview';\nimport ColorPicker from '../../../../components/input/colorpicker';\n\nfunction ReserveRepackWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Branding\">\n      <View style={styles.content}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview\n            primaryColor={state.fields.primaryColor.value || '#000000'}\n            secondaryColor={state.fields.secondaryColor.value || '#ffffff'}\n          />\n\n          <WebPreview\n            primaryColor={state.fields.primaryColor.value || '#000000'}\n            secondaryColor={state.fields.secondaryColor.value || '#ffffff'}\n          />\n        </View>\n\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n\n        <ColorPicker\n          title=\"Accent color\"\n          helperText=\"Accent color is used for highlights, like buttons and loading bars\"\n          error={state.fields.secondaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['secondaryColor', color]))}\n          value={state.fields.secondaryColor.value || '#FFFFFF'}\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default ReserveRepackWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { useAppSelector } from '../../../../state';\nimport { Permission, Query } from '../../../../api/schema.d';\nimport PermissionListItem from '../../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzonePermissions($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\ninterface IPermissionWizardScreen extends IWizardScreenProps {\n  permission: Permission;\n  title: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useLazyQuery<Query>(QUERY_DROPZONE_PERMISSIONS);\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          dropzoneId: Number(dropzoneForm.original.id),\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <Card>\n            <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n              {data?.dropzone?.roles?.map((role) => (\n                <PermissionListItem\n                  permissionName={permission}\n                  role={role}\n                  title={capitalize(role?.name?.replace(/_/, ' '))}\n                />\n              ))}\n            </Card.Content>\n          </Card>\n        )}\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n    marginBottom: 16,\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, Menu, Paragraph, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n\nfunction TicketTypeWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [price, setPrice] = React.useState(0);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Tickets\">\n      <Paragraph style={styles.paragraph}>You can add more tickets later under Settings</Paragraph>\n\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['name', newValue]))\n            }\n          />\n          <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n            {state.fields.name.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Price</List.Subheader>\n            <Text style={styles.cardValue}>${price || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={500}\n              step={1}\n              value={price}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onSlidingComplete={() => dispatch(actions.forms.ticketType.setField(['cost', price]))}\n              onValueChange={setPrice}\n            />\n          </View>\n\n          <HelperText type={state.fields.cost?.error ? 'error' : 'info'}>\n            {state.fields.cost?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            contentStyle={{ width: 300 }}\n            anchor={\n              <TouchableOpacity onPress={() => setAltitudeMenuOpen(true)}>\n                <View style={styles.cardTitle}>\n                  <List.Subheader>Altitude</List.Subheader>\n                  <Text style={styles.cardValue}>\n                    {state.fields.altitude.value &&\n                    [4000, 14000].includes(state.fields.altitude.value)\n                      ? {\n                          '14000': 'Height',\n                          '4000': 'Hop n Pop',\n                        }[state.fields.altitude.value.toString() as '14000' | '4000']\n                      : 'Custom'}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            }\n          >\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Hop n Pop\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Height\"\n              right={() => <List.Icon icon=\"airplane-takeoff\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Other\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n          </Menu>\n\n          {(!state.fields.altitude.value ||\n            ![4000, 14000].includes(state.fields.altitude.value)) && (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Custom altitude\"\n              error={!!state.fields.altitude.error}\n              value={state.fields.altitude?.value?.toString()}\n              onChangeText={(newValue) =>\n                dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n              }\n            />\n          )}\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  paragraph: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    // fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    marginHorizontal: 16,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default TicketTypeWizardScreen;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs, UpdateDropzonePayload } from '../schema';\n\nconst MUTATION_UPDATE_DROPZONE = gql`\n  mutation UpdateDropzone(\n    $id: Int!\n    $name: String!\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n    $isCreditSystemEnabled: Boolean\n    $isPublic: Boolean\n  ) {\n    updateDropzone(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          banner: $banner\n          lat: $lat\n          lng: $lng\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          isCreditSystemEnabled: $isCreditSystemEnabled\n          isPublic: $isPublic\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n        primaryColor\n        secondaryColor\n        isCreditSystemEnabled\n\n        planes {\n          id\n          name\n        }\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  UpdateDropzonePayload\n>(MUTATION_UPDATE_DROPZONE, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreatePlanePayload } from '../schema';\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    registration: string;\n    dropzoneId: number;\n    minSlots: number;\n    maxSlots: number;\n    hours?: number;\n    nextMaintenanceHours?: number;\n  },\n  CreatePlanePayload\n>(MUTATION_CREATE_PLANE, {\n  getPayload: (result) => result.createPlane,\n  fieldErrorMap: {\n    dropzone: 'dropzoneId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    registration: [isRequired('Registration is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdatePlaneArgs, UpdatePlanePayload } from '../schema';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdatePlaneArgs['input']['attributes'],\n  UpdatePlanePayload\n>(MUTATION_UPDATE_PLANE, {\n  getPayload: (result) => result.updatePlane,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DropzoneFields } from '../../../components/forms/dropzone/slice';\nimport { PlaneFields } from '../../../components/forms/plane/slice';\nimport { TicketTypeFields } from '../../../components/forms/ticket_type/slice';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport NameAndFederationStep from './steps/Name';\nimport LocationStep from './steps/Location';\nimport AircraftStep from './steps/Aircraft';\nimport ThemingStep from './steps/Theming';\nimport PermissionStep from './steps/Permissions';\nimport TicketTypeStep from './steps/TicketType';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useMutationCreateDropzone from '../../../api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from '../../../api/hooks/useMutationUpdateDropzone';\nimport useMutationCreatePlane from '../../../api/hooks/useMutationCreatePlane';\nimport useMutationUpdatePlane from '../../../api/hooks/useMutationUpdatePlane';\nimport useMutationCreateTicketType from '../../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../../api/hooks/useMutationUpdateTicketType';\nimport { Permission } from '../../../api/schema.d';\n\nfunction DropzoneSetupScreen() {\n  const aircraft = useAppSelector((root) => root.forms.plane);\n  const ticket = useAppSelector((root) => root.forms.ticketType);\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const mutationCreatePlane = useMutationCreatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationUpdatePlane = useMutationUpdatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationCreateTicketType = useMutationCreateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n  const mutationUpdateTicketType = useMutationUpdateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n\n  const onBasicInfoNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void): Promise<void> => {\n      if (!dropzone.fields.name.value) {\n        dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n        return;\n      }\n      if (!dropzone.fields.federation.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError([\n            'federation',\n            'Your dropzone must have an associated organization',\n          ])\n        );\n        return;\n      }\n\n      setIndex(index + 1);\n    },\n    [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]\n  );\n\n  const onThemingNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!dropzone.fields.primaryColor.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n        );\n        return;\n      }\n      if (!dropzone.fields.secondaryColor.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError(['secondaryColor', 'Please pick an accent color'])\n        );\n        return;\n      }\n      console.log(dropzone.fields);\n\n      // Create or update dropzone\n      const result = !dropzone.original?.id\n        ? await mutationCreateDropzone.mutate({\n            federationId: Number(dropzone.fields.federation.value?.id),\n            name: dropzone.fields.name.value || '',\n            banner: '',\n            primaryColor: dropzone.fields.primaryColor.value,\n            secondaryColor: dropzone.fields.secondaryColor.value,\n            lat: dropzone.fields.lat.value as number,\n            lng: dropzone.fields.lng.value as number,\n          })\n        : await mutationUpdateDropzone.mutate({\n            id: Number(dropzone.original.id),\n            federationId: Number(dropzone.fields.federation.value?.id),\n            name: dropzone.fields.name.value || '',\n            primaryColor: dropzone.fields.primaryColor.value,\n            secondaryColor: dropzone.fields.secondaryColor.value,\n            lat: dropzone.fields.lat.value,\n            lng: dropzone.fields.lng.value,\n            banner: '',\n          });\n\n      if (!result?.errors?.length && result?.dropzone?.id) {\n        dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n        dispatch(actions.global.setDropzone(result?.dropzone));\n        if (result.dropzone.primaryColor) {\n          dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n        }\n        if (result.dropzone.secondaryColor) {\n          dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n        }\n        setIndex(index + 1);\n      }\n    },\n    [\n      dispatch,\n      dropzone.fields,\n      dropzone.original?.id,\n      mutationCreateDropzone,\n      mutationUpdateDropzone,\n    ]\n  );\n\n  const onAircraftNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!aircraft.fields.name.value) {\n        dispatch(actions.forms.plane.setFieldError(['name', 'You must name your aircraft']));\n        return;\n      }\n      if (!aircraft.fields.registration.value) {\n        dispatch(\n          actions.forms.plane.setFieldError([\n            'registration',\n            'Please provide aircraft registration',\n          ])\n        );\n        return;\n      }\n\n      // Create or update dropzone\n      const result = !aircraft.original?.id\n        ? await mutationCreatePlane.mutate({\n            dropzoneId: Number(dropzone?.original?.id),\n            name: aircraft.fields.name.value,\n            registration: aircraft.fields.registration.value,\n            minSlots: Number(aircraft.fields.minSlots.value),\n            maxSlots: Number(aircraft.fields.maxSlots.value),\n          })\n        : await mutationUpdatePlane.mutate({\n            id: Number(aircraft.original.id),\n            name: aircraft.fields.name.value,\n            registration: aircraft.fields.registration.value,\n            minSlots: aircraft.fields.minSlots.value,\n            maxSlots: aircraft.fields.maxSlots.value,\n          });\n\n      if (!result?.errors?.length && result?.plane?.id) {\n        dispatch(actions.forms.plane.setOpen(result?.plane));\n        setIndex(index + 1);\n      }\n    },\n    [\n      aircraft.fields.maxSlots.value,\n      aircraft.fields.minSlots.value,\n      aircraft.fields.name.value,\n      aircraft.fields.registration.value,\n      aircraft.original?.id,\n      dispatch,\n      dropzone?.original?.id,\n      mutationCreatePlane,\n      mutationUpdatePlane,\n    ]\n  );\n\n  const onTicketTypeNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!ticket.fields.name.value) {\n        dispatch(actions.forms.ticketType.setFieldError(['name', 'You must name your ticket']));\n        return;\n      }\n\n      if (!ticket.fields.cost.value) {\n        dispatch(actions.forms.ticketType.setFieldError(['cost', 'Tickets must have a price']));\n        return;\n      }\n\n      // Create or update dropzone\n      const result = !ticket.original?.id\n        ? await mutationCreateTicketType.mutate({\n            dropzoneId: Number(dropzone.original?.id),\n            name: ticket.fields.name.value,\n            cost: ticket.fields.cost.value,\n            altitude: ticket.fields.altitude.value,\n            isTandem: false,\n            allowManifestingSelf: true,\n          })\n        : await mutationUpdateTicketType.mutate({\n            id: Number(ticket.original.id),\n            name: ticket.fields.name.value,\n            cost: ticket.fields.cost.value,\n            altitude: ticket.fields.altitude.value,\n            isTandem: false,\n            allowManifestingSelf: true,\n          });\n\n      if (!result?.errors?.length && result?.ticketType?.id) {\n        dispatch(actions.forms.ticketType.setOpen(result.ticketType));\n        setIndex(index + 1);\n      }\n    },\n    [\n      ticket.fields.name.value,\n      ticket.fields.cost.value,\n      ticket.fields.altitude.value,\n      ticket.original?.id,\n      mutationCreateTicketType,\n      dropzone.original?.id,\n      mutationUpdateTicketType,\n      dispatch,\n    ]\n  );\n\n  return (\n    <Wizard>\n      <NameAndFederationStep\n        onBack={() => {\n          dispatch(actions.forms.dropzoneWizard.setOpen(false));\n          dispatch(actions.forms.dropzoneWizard.reset());\n          dispatch(actions.forms.ticketType.setOpen(false));\n          dispatch(actions.forms.plane.setOpen(false));\n          dispatch(actions.forms.dropzone.setOpen(false));\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.goBack();\n        }}\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onNext={onBasicInfoNext}\n      />\n      <LocationStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => setIndex(idx + 1)}\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n      />\n\n      <ThemingStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onThemingNext}\n        loading={mutationCreateDropzone.loading || mutationUpdateDropzone.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <AircraftStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onAircraftNext}\n        loading={mutationCreatePlane.loading || mutationUpdatePlane.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <TicketTypeStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onTicketTypeNext}\n        loading={mutationCreateTicketType.loading || mutationUpdateTicketType.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <PermissionStep\n        title=\"Who can manifest?\"\n        permission={Permission.CreateSlot}\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => setIndex(idx + 1)}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <PermissionStep\n        title=\"Manifest other people?\"\n        permission={Permission.CreateUserSlot}\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => {\n          setIndex(idx + 1);\n        }}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <WizardCompleteStep\n        title=\"Setup complete\"\n        subtitle=\"You can configure settings under the Settings screen\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={() => {\n          dispatch(actions.global.setDropzone(dropzone.original));\n          if (dropzone.fields.primaryColor.value) {\n            dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n          }\n          if (dropzone.fields.secondaryColor.value) {\n            dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n          }\n          dispatch(actions.global.setDropzone(dropzone.original));\n\n          dispatch(actions.forms.dropzoneWizard.setOpen(false));\n          dispatch(actions.forms.dropzoneWizard.reset());\n          dispatch(actions.forms.ticketType.setOpen(false));\n          dispatch(actions.forms.plane.setOpen(false));\n          dispatch(actions.forms.dropzone.setOpen(false));\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.dropzone.reset());\n\n          // Set complete-flag to force navigation from dropzone screen\n          dispatch(actions.forms.dropzoneWizard.complete());\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          navigation.replace('Authenticated', { screen: 'HomeScreen' });\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('DropzonesScreen');\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<Query['dropzones'], never>(QUERY_DROPZONES, {\n  getPayload: (query) => query?.dropzones,\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport {\n  DrawerActions,\n  getFocusedRouteNameFromRoute,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport InfoGrid from '../../screens/authenticated/load/InfoGrid';\nimport useRestriction from '../../hooks/useRestriction';\nimport { Permission } from '../../api/schema.d';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport useQueryDropzones from '../../api/hooks/useQueryDropzones';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { currentUser, dropzone, loading } = useCurrentDropzone();\n  const { data } = useQueryDropzones({\n    onError: (err) => console.error(err),\n  });\n\n  const navigation = useNavigation();\n  const route = useRoute();\n  const routeName = getFocusedRouteNameFromRoute(route);\n  const navState = navigation.dangerouslyGetState();\n  const subNavState = navState.routes[navState.index].state;\n  // eslint-disable-next-line\n  // @ts-ignore\n  const subNavRoutes = subNavState?.routes[subNavState?.index];\n  const subNavSubState = subNavRoutes?.state;\n  let subRouteName = subNavState && getFocusedRouteNameFromRoute(subNavRoutes);\n  subRouteName = subRouteName || subNavSubState?.routes[0].name;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'Authenticated',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'ProfileScreen',\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(subRouteName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'ManifestScreen',\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Profile\"\n            active={subRouteName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ProfileScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={subRouteName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'EquipmentScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={subRouteName === 'Notifications'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Notifications',\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={subRouteName === 'TransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'TransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n        <Drawer.Section title=\"Dropzone\">\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={subRouteName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'DropzoneTransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'Authenticated',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'SettingsScreen',\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Switch dropzone\">\n          {data?.edges?.map((edge) => (\n            <Drawer.Item\n              key={`${edge?.node?.id}-dz`}\n              label={edge?.node?.name || ''}\n              icon=\"map-marker\"\n              active={dropzone?.id === edge?.node?.id}\n              onPress={() => {\n                if (edge?.node) {\n                  dispatch(actions.global.setDropzone(edge.node));\n                  navigation.navigate('Authenticated', {\n                    screen: 'Authenticated',\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('DropzoneSetupScreen');\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport AuthenticatedRoutes from './Authenticated';\nimport LimboRoutes from './LimboRoutes';\nimport UnauthenticatedRoutes from './Unauthenticated';\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport DropzoneSetupScreen from '../screens/authenticated/dropzone_setup/DropzoneSetupScreen';\nimport ConfirmUserScreen from '../screens/unauthenticated/signup/ConfirmUserScreen';\nimport DrawerMenu from './drawer/Drawer';\n\nexport type TRootNavigatorRouteParams = {\n  Authenticated: undefined;\n  Unauthenticated: undefined;\n  // eslint-disable-next-line camelcase\n  confirm: { account_confirmation_success?: boolean };\n  Dropzones: undefined;\n  DropzonesScreen: undefined;\n  DropzoneSetupScreen: undefined;\n  NotFound: undefined;\n};\n\nexport type TDrawerNavigatorRouteParams = {\n  Authenticated: undefined;\n  Profile: undefined;\n  Settings: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<TRootNavigatorRouteParams>();\nconst Drawer = createDrawerNavigator<TDrawerNavigatorRouteParams>();\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\">\n            {() => (\n              <Drawer.Navigator drawerContent={() => <DrawerMenu />}>\n                <Drawer.Screen name=\"Authenticated\" component={AuthenticatedRoutes} />\n              </Drawer.Navigator>\n            )}\n          </Stack.Screen>\n        ) : (\n          <Stack.Screen name=\"Dropzones\" component={LimboRoutes} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={UnauthenticatedRoutes} />\n      )}\n      <Stack.Screen name=\"DropzoneSetupScreen\" component={DropzoneSetupScreen} />\n      <Stack.Screen name=\"confirm\" component={ConfirmUserScreen} />\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText } from 'react-native-paper';\nimport LicenseChipSelect from '../../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../../input/dropdown_select/FederationSelect';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction FederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"What license do you have?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <FederationSelect\n            value={state?.fields?.license?.value?.federation || state.federation.value}\n            onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n          />\n          <HelperText type={state.federation.error ? 'error' : 'info'}>\n            {state.federation.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={{ padding: 16 }}>\n          {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n            <>\n              <LicenseChipSelect\n                value={state.fields.license.value}\n                federationId={Number(\n                  state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n                )}\n                onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n              />\n              <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n                {state.fields.license.error || ''}\n              </HelperText>\n            </>\n          )}\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, HelperText, List, Menu, TextInput } from 'react-native-paper';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction RigWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"What're you jumping?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Container manufacturer</List.Subheader>\n          <Menu\n            onDismiss={() => setMenuOpen(false)}\n            visible={isMenuOpen}\n            anchor={\n              <TouchableOpacity onPress={() => setMenuOpen(true)}>\n                <TextInput\n                  pointerEvents=\"box-only\"\n                  style={styles.field}\n                  mode=\"outlined\"\n                  error={!!state.fields.make.error}\n                  value={isOtherMake ? 'Other' : state.fields.make.value || 'Select manufacturer'}\n                  disabled\n                />\n              </TouchableOpacity>\n            }\n          >\n            {[\n              'Icon',\n              'Javelin',\n              'Mirage',\n              'Vector',\n              'PA (Talon)',\n              'Infinity',\n              'Parachutes de France',\n              'Parachute Systems',\n              'Racer',\n            ].map((make) => (\n              <Menu.Item\n                onPress={() => {\n                  setMenuOpen(false);\n                  dispatch(actions.forms.rig.setField(['make', make]));\n                  setIsOtherMake(false);\n                }}\n                title={make}\n              />\n            ))}\n            <Menu.Item\n              onPress={() => {\n                setMenuOpen(false);\n                dispatch(actions.forms.rig.setField(['make', '']));\n                setIsOtherMake(true);\n              }}\n              title=\"Other\"\n            />\n          </Menu>\n          {!isOtherMake ? null : (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          )}\n\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n\n          <List.Subheader>Model</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card}>\n          <List.Subheader>Serial number</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n            {state.fields.serial.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 16, marginVertical: 16 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from '../../../input/date_picker/DatePicker';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction ReserveRepackWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Next reserve repack?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction FederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Do you have a rig?\">\n      <View style={styles.content}>\n        <Card\n          style={[\n            styles.card,\n            state.fields.skipRigSetup.value === false ? styles.active : undefined,\n          ]}\n          onPress={() => dispatch(actions.forms.userWizard.setField(['skipRigSetup', false]))}\n        >\n          <Card.Title title=\"I have my own rig\" />\n        </Card>\n\n        <Card\n          style={[\n            styles.card,\n            state.fields.skipRigSetup.value === true ? styles.active : undefined,\n          ]}\n          onPress={() => dispatch(actions.forms.userWizard.setField(['skipRigSetup', true]))}\n        >\n          <Card.Title title=\"I dont have a rig\" />\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Card, HelperText, List, Paragraph } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { ceil } from 'lodash';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction WingloadingWizardScreen(props: IWizardScreenProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [canopySize, setCanopySize] = React.useState(rigForm.fields.canopySize.value || 120);\n  const [weight, setWeight] = React.useState(Number(userForm.fields.exitWeight.value) || 120);\n\n  React.useEffect(() => {\n    if (rigForm.fields.canopySize.value) {\n      setCanopySize(rigForm.fields.canopySize.value);\n    }\n  }, [rigForm.fields.canopySize.value]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Your wingloading\">\n      <View style={styles.content}>\n        <Card>\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <View style={styles.wingLoadingCardLeft}>\n              <Avatar.Text\n                label={ceil(\n                  (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                    (rigForm.fields.canopySize.value || 150),\n                  2\n                ).toString()}\n                size={100}\n                style={styles.wingLoading}\n              />\n            </View>\n            <View style={styles.wingLoadingCardRight}>\n              <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n              <Paragraph>\n                Your wingloading is an indicator of your descent rate under canopy\n              </Paragraph>\n            </View>\n          </Card.Content>\n        </Card>\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Your exit weight</List.Subheader>\n            <Text style={styles.cardValue}>{weight || 50}kg</Text>\n          </View>\n          <Slider\n            style={styles.sliderControl}\n            minimumValue={50}\n            maximumValue={160}\n            step={0.5}\n            minimumTrackTintColor=\"#FF1414\"\n            maximumTrackTintColor=\"#000000\"\n            onSlidingComplete={() =>\n              dispatch(actions.forms.user.setField(['exitWeight', weight.toString()]))\n            }\n            value={weight}\n            onValueChange={(w) => setWeight(w)}\n          />\n          <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n            {userForm.fields.exitWeight?.error || \"Your weight in kg's with all equipment on\"}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Canopy size</List.Subheader>\n            <Text style={styles.cardValue}>{canopySize || 120}ft</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={34}\n              maximumValue={350}\n              step={1}\n              value={canopySize || 120}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onValueChange={(size) => setCanopySize(size)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.rig.setField(['canopySize', canopySize]))\n              }\n            />\n          </View>\n\n          <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n            {userForm.fields.exitWeight?.error || 'Size of your main canopy in square feet'}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Portal, Modal } from 'react-native-paper';\nimport Wizard from '../../wizard/Wizard';\nimport WizardCompleteStep from '../../wizard/WizardCompleteStep';\nimport FederationStep from './steps/Federation';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useMutationUpdateUser from '../../../api/hooks/useMutationUpdateUser';\nimport useMutationUpdateRig from '../../../api/hooks/useMutationUpdateRig';\nimport useMutationCreateRig from '../../../api/hooks/useMutationCreateRig';\nimport { UserFields } from '../../forms/user/slice';\nimport { RigFields } from '../../forms/rig/slice';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.forms.userWizard);\n  const dispatch = useAppDispatch();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const mutationUpdateRig = useMutationUpdateRig({\n    onSuccess: () => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, value])),\n  });\n  const mutationCreateRig = useMutationCreateRig({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, value])),\n  });\n\n  const onFederationNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!userForm.fields.license?.value?.id) {\n        dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n        return false;\n      }\n\n      // Update user license\n      try {\n        await mutationUpdateUser.mutate({\n          id: Number(userForm.original?.id),\n          licenseId: Number(userForm.fields.license?.value?.id),\n        });\n        return setIndex(index + 1);\n      } catch (_) {\n        return false;\n      }\n    },\n    [dispatch, mutationUpdateUser, userForm.fields.license?.value?.id, userForm.original?.id]\n  );\n\n  const onRigNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.make?.value) {\n        dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n        return;\n      }\n\n      if (!rigForm.fields.model?.value) {\n        dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n        return;\n      }\n\n      // Create user rig\n      try {\n        const rig = !rigForm.original?.id\n          ? await mutationCreateRig.mutate({\n              make: rigForm.fields.make.value,\n              model: rigForm.fields.model.value,\n              serial: rigForm.fields.serial.value,\n              userId: Number(userForm.original?.id),\n            })\n          : await mutationUpdateRig.mutate({\n              id: Number(rigForm.original?.id),\n              make: rigForm.fields.make.value,\n              model: rigForm.fields.model.value,\n              serial: rigForm.fields.serial.value,\n              userId: Number(userForm.original?.id),\n            });\n\n        if (rig?.rig) {\n          dispatch(actions.forms.rig.setOpen(rig.rig));\n        }\n        setIndex(index + 1);\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    [\n      rigForm.fields.make.value,\n      rigForm.fields.model.value,\n      rigForm.fields.serial.value,\n      rigForm.original?.id,\n      dispatch,\n      mutationCreateRig,\n      userForm.original?.id,\n      mutationUpdateRig,\n    ]\n  );\n\n  const onReserveRepackNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        return false;\n      }\n\n      // Update repack expiry date\n      try {\n        const rig = await mutationUpdateRig.mutate({\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        });\n        if (rig?.rig) {\n          dispatch(actions.forms.rig.setOpen(rig.rig));\n        }\n        return setIndex(index + 1);\n      } catch (_) {\n        return false;\n      }\n    },\n    [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]\n  );\n\n  const onWingloadingNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.canopySize?.value) {\n        dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n        return false;\n      }\n\n      if (!userForm.fields.exitWeight?.value) {\n        dispatch(\n          actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight'])\n        );\n        return false;\n      }\n\n      // Update repack expiry date\n      try {\n        await mutationUpdateRig.mutate({\n          id: Number(rigForm.original?.id),\n          canopySize: rigForm.fields.canopySize.value,\n        });\n        await mutationUpdateUser.mutate({\n          id: Number(userForm.original?.id),\n          exitWeight: Number(userForm.fields.exitWeight?.value),\n        });\n\n        setIndex(index + 1);\n      } catch (e) {\n        console.error(e);\n      }\n      return null;\n    },\n    [\n      rigForm.fields.canopySize.value,\n      rigForm.original?.id,\n      userForm.fields.exitWeight?.value,\n      userForm.original?.id,\n      dispatch,\n      mutationUpdateRig,\n      mutationUpdateUser,\n    ]\n  );\n\n  return (\n    <Portal>\n      <Modal\n        visible={state.open}\n        dismissable={false}\n        style={styles.modal}\n        contentContainerStyle={{ height: '100%' }}\n      >\n        <Wizard>\n          <FederationStep\n            backButtonLabel=\"Cancel\"\n            nextButtonLabel=\"Next\"\n            onBack={() => {\n              dispatch(actions.forms.userWizard.setOpen(false));\n              dispatch(actions.forms.user.setOpen(false));\n              dispatch(actions.forms.rig.setOpen(false));\n              dispatch(actions.forms.userWizard.reset());\n              dispatch(actions.forms.user.reset());\n              dispatch(actions.forms.rig.reset());\n            }}\n            loading={mutationUpdateUser.loading}\n            onNext={onFederationNext}\n          />\n          <AskForRigStep\n            backButtonLabel=\"Cancel\"\n            nextButtonLabel={state.fields.skipRigSetup.value ? 'Done' : 'Next'}\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={(index, setIndex) => {\n              if (state.fields.skipRigSetup.value === true) {\n                setIndex(index + 4);\n              } else {\n                setIndex(index + 1);\n              }\n            }}\n          />\n          <RigStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onNext={onRigNext}\n          />\n          <ReserveRepackStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={onReserveRepackNext}\n          />\n          <WingloadingStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={onWingloadingNext}\n          />\n\n          <WizardCompleteStep\n            title=\"You're all set!\"\n            subtitle=\"You can configure your settings on the profile page\"\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Done\"\n            onBack={(index, setIndex) => {\n              if (state.fields.skipRigSetup.value === true) {\n                setIndex(index - 4);\n              } else {\n                setIndex(index - 1);\n              }\n            }}\n            onNext={() => {\n              dispatch(actions.forms.userWizard.setOpen(false));\n              dispatch(actions.forms.user.setOpen(false));\n              dispatch(actions.forms.rig.setOpen(false));\n              dispatch(actions.forms.userWizard.reset());\n              dispatch(actions.forms.user.reset());\n              dispatch(actions.forms.rig.reset());\n            }}\n          />\n        </Wizard>\n      </Modal>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modal: {\n    ...StyleSheet.absoluteFillObject,\n    paddingLeft: 0,\n    marginLeft: 0,\n    marginBottom: 0,\n    marginTop: 0,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    backgroundColor: 'red',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    flex: 1,\n    alignItems: 'center',\n  },\n});\n\nexport default UserWizardScreen;\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider as MaterialProvider, ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { Appearance, Linking, Platform, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { registerRootComponent } from 'expo';\nimport * as Sentry from 'sentry-expo';\nimport URI from 'urijs';\nimport './PaperDatesPolyfill';\nimport Wrapper from './EntrypointWrapper';\n\nimport AppUpdate from './components/app_update/AppUpdate';\n\nimport Apollo from './api/Apollo';\nimport { store, persistor, useAppSelector, useAppDispatch } from './state/store';\nimport ImageViewer from './components/dialogs/ImageViewer/ImageViewer';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport NotificationArea from './components/notifications/Notifications';\nimport LinkingConfiguration from './navigation/Routes';\nimport RootNavigator from './navigation/RootNavigator';\nimport { actions } from './state';\nimport UserWizardScreen from './components/dialogs/UserWizard/UserWizardScreen';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  enableInExpoDevelopment: true,\n  debug: true,\n});\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nfunction Content() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = (link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  };\n\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  React.useEffect(() => {\n    if (isDarkMode && !state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else if (!isDarkMode && state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else {\n      dispatch(actions.global.setPrimaryColor(state.theme.colors.primary));\n    }\n  }, [dispatch, isDarkMode, state.isDarkMode, state.theme.colors.primary]);\n\n  React.useEffect(() => {\n    if (Platform.OS === 'web') {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: notification.request.content.body,\n            variant: 'warning',\n          })\n        );\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      console.log(response);\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch]);\n\n  return (\n    <AppUpdate>\n      <React.Suspense\n        fallback={\n          <View style={{ flex: 1, flexGrow: 1 }}>\n            <ProgressBar indeterminate color={state?.theme?.colors?.accent} visible />\n          </View>\n        }\n      >\n        <Apollo>\n          <MaterialProvider theme={state.theme}>\n            <SafeAreaProvider>\n              <ImageViewer />\n              <NavigationContainer\n                linking={LinkingConfiguration}\n                theme={state.theme as unknown as never}\n              >\n                <Wrapper>\n                  <RootNavigator />\n                </Wrapper>\n              </NavigationContainer>\n\n              <StatusBar />\n              <UserWizardScreen />\n              <NotificationArea />\n            </SafeAreaProvider>\n          </MaterialProvider>\n        </Apollo>\n      </React.Suspense>\n    </AppUpdate>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default registerRootComponent(App);\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        // console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n"],"sourceRoot":""}