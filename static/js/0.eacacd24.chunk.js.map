{"version":3,"sources":["index.ts","ReactNativeSVG.web.ts","SvgTouchableMixin.ts","resolve.ts","reactnode_modules/@babel/runtime/helpers/arrayLikeToArray.js","reactnode_modules/@babel/runtime/helpers/arrayWithHoles.js","reactnode_modules/@babel/runtime/helpers/arrayWithoutHoles.js","reactnode_modules/@babel/runtime/helpers/extends.js","reactnode_modules/@babel/runtime/helpers/interopRequireDefault.js","reactnode_modules/@babel/runtime/helpers/iterableToArray.js","reactnode_modules/@babel/runtime/helpers/iterableToArrayLimit.js","reactnode_modules/@babel/runtime/helpers/nonIterableRest.js","reactnode_modules/@babel/runtime/helpers/nonIterableSpread.js","reactnode_modules/@babel/runtime/helpers/slicedToArray.js","reactnode_modules/@babel/runtime/helpers/toConsumableArray.js","reactnode_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","react-native-countdown-circle-timer/src/components/CountdownCircleTimer.jsx","react-native-countdown-circle-timer/src/components/TimeWrapper.jsx","react-native-countdown-circle-timer/src/components/index.js","react-native-countdown-circle-timer/src/hooks/index.js","react-native-countdown-circle-timer/src/hooks/useCountdown.js","react-native-countdown-circle-timer/src/utils/getStroke.js","react-native-countdown-circle-timer/src/utils/index.js","reactshared/components/DefsLinearGradient.jsx","reactshared/components/index.js","reactshared/index.js","reactshared/utils/colorsValidator.js","reactshared/utils/countdownCircleTimerDefaultProps.js","reactshared/utils/countdownCircleTimerProps.js","reactshared/utils/getGradientId.js","reactshared/utils/getPathProps.js","reactshared/utils/getStartAt.js","reactshared/utils/index.js","reactshared/utils/styles.js","reactshared/utils/uuid.js","reactnode_modules/prop-types/factoryWithThrowingShims.js","reactnode_modules/prop-types/index.js","reactnode_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:/react-native-countdown-circle-timer/external \"react\"","webpack:/react-native-countdown-circle-timer/external \"react-native\"","webpack:/react-native-countdown-circle-timer/external \"react-native-svg\"","react-native-countdown-circle-timer/webpack/bootstrap","react-native-countdown-circle-timer/src/index.js"],"names":["createElement","cE","ucE","prepare","props","self","translate","scale","rotation","skewX","skewY","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","style","forwardedRef","onPress","onPressIn","onPressOut","onLongPress","rest","hasTouchableProperty","clean","onStartShouldSetResponder","onResponderTerminationRequest","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","transform","styles","resolve","getBoundingClientRect","node","remeasure","tag","this","state","touchable","measureLayout","relativeNode","setTimeout","relativeRect","height","left","top","width","x","y","callback","WebShape","React","Component","Circle","ClipPath","Defs","Ellipse","G","Image","Line","LinearGradient","Path","Polygon","Polyline","RadialGradient","Rect","Stop","Svg","Symbol","Text","TSpan","TextPath","Use","Mask","ForeignObject","Marker","Pattern","PRESS_RETENTION_OFFSET","right","bottom","Mixin","Touchable","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","touchableGetInitialState","SvgTouchableMixin","touchableHandlePress","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandleLongPress","touchableGetPressRectOffset","touchableGetHitSlop","touchableGetHighlightDelayMS","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","touchKeys","Object","touchVals","key","numTouchKeys","i","val","target","StyleSheet","styleProp","cleanedProps","module","exports","arr","len","length","arr2","Array","isArray","arrayLikeToArray","r","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","obj","__esModule","iter","iterator","from","_arr","_n","_d","_e","_s","_i","next","done","push","value","err","TypeError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","AnimatedPath","Animated","createAnimatedComponent","CountdownCircleTimer","size","strokeWidth","trailColor","trailStrokeWidth","duration","isPlaying","colors","strokeLinecap","children","isLinearGradient","gradientUniqueKey","onComplete","ariaLabel","renderAriaTime","initialRemainingTime","useCountdown","Math","max","path","pathLength","gradientId","animatedElapsedTime","animatedStroke","strokeDashoffset","durationMilliseconds","isProgressPathVisible","View","wrapper","accessible","accessibilityLabel","DefsLinearGradient","defs","linearGradient","stop","fill","stroke","d","strokeDasharray","TimeWrapper","animatedColor","propTypes","countdownCircleTimerProps","defaultProps","countdownCircleTimerDefaultProps","displayName","create","time","timeStyle","ariaTime","opacity","useState","remainingTime","elapsedTime","timeProps","setTimeProps","useEffect","animatedListenerId","addListener","ceil","removeListener","accessibilityElementsHidden","importantForAccessibility","isValidElement","cloneElement","Children","only","accessibilityRole","accessibilityLiveRegion","PropTypes","number","isRequired","object","oneOfType","string","useRef","isInFinishedState","setIsInFinishedState","startAt","getStartAt","current","repeatTimeoutRef","isMountedRef","Value","totalElapsedTime","getPathProps","useMemo","getGradientId","getWrapperStyle","getStroke","interpolate","inputRange","outputRange","setValue","stopAnimation","removeAllListeners","clearTimeout","animateTime","timing","toValue","easing","Easing","linear","useNativeDriver","start","finished","isDurationReached","shouldRepeat","c","delay","resetAnimation","colorsLength","colorsTotalDuration","map","index","colorEndTimeTemp","colorEndTime","id","x1","y1","x2","y2","isColorsString","offset","stopColor","currentDuration","gradient","TagType","func","isHexColor","color","match","getErrorInProp","propName","componentName","getHexColorError","type","Error","colorsValidator","bool","oneOf","uuid","halfSize","halfStrokeWith","arcRadius","arcDiameter","rotationIndicator","PI","position","display","justifyContent","alignItems","random","substring","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","location","propFullName","secret","getShim","ReactPropTypes","array","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","shape","exact","checkPropTypes","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"oOAAA,6M,+aCCA,U,SASA,YACA,S,2kBAEA,IAAMA,EAAgBC,iBAAMC,EAA5B,uBA0DMC,WAAU,GAEdC,MACG,uDADKC,EAAKD,MAGXE,EAmBEF,EArBD,UAGDG,EAkBEH,EArBD,MAIDI,EAiBEJ,EArBD,SAKDK,EAgBEL,EArBD,MAMDM,EAeEN,EArBD,MAODO,EAcEP,EArBD,QAQDQ,EAaER,EArBD,QASDS,EAYET,EArBD,WAUDU,EAWEV,EArBD,SAWDW,EAUEX,EArBD,WAYDY,EASEZ,EArBD,UAaDa,EAQEb,EArBD,MAcDc,EAOEd,EArBD,aAeDe,EAMEf,EArBD,QAgBDgB,EAKEhB,EArBD,UAiBDiB,EAIEjB,EArBD,WAkBDkB,EAGElB,EArBD,YAoBEmB,GApBF,8MAsBGC,EACJL,SADF,EAEMM,EAUL,KACKD,EACA,CACEE,0BACErB,EAFJ,uCAGEsB,8BACEtB,EAJJ,2CAKEuB,iBAAkBvB,EALpB,8BAMEwB,gBAAiBxB,EANnB,6BAOEyB,mBAAoBzB,EAPtB,gCAQE0B,qBAAsB1B,EATJ,mCADzB,QAVD,GA0BM2B,EAAN,GAEIrB,SAAJ,MAAuBC,GACrBoB,2BAA4BrB,GAA5BqB,eAA6CpB,GAA7CoB,QAEF,MAAI1B,GACF0B,mCAEF,MAAIzB,GACFyB,+BAGF,MAAIxB,GACFwB,gCAEF,MAAIvB,GACFuB,+BAEF,MAAItB,GACFsB,+BAEErB,SAAJ,MAAuBC,GACrBoB,4BAA6BrB,GAA7BqB,gBAA+CpB,GAA/CoB,QAGEA,EAAJ,SACEP,YAAkBO,OAAlBP,MAGF,IACEA,SAGF,IAAMQ,EAAN,GAsBA,OAfA,MAAIpB,IACFoB,gBAEF,MAAInB,IACFmB,cAEF,MAAIlB,IACFkB,gBAEF,MAAIjB,IACFiB,eAGFR,SAAc,IAAAS,SAAA,EAAdT,GAEOA,GAGHU,WAAwB,GAC5B,OAEE,IAAkBC,YAElB,oBAAwBA,EAAP,uBAEf,OAAOA,EAAP,yBA8BN,SAASC,IAEP,IAAMC,EAAMC,KAAKC,MAAMC,UAAvB,YACA,MAAIH,GA5BAI,SAAgB,KAYpB,IAAMC,EAAeP,GAAQA,EAA7B,WACA,GACEQ,YAAW,WAET,IAAMC,EAAeV,EAArB,GAFe,EAGsBA,EAHtB,GAGPW,EAHO,SAGCC,EAHD,OAGOC,EAHP,MAGYC,EAHZ,QAITC,EAAIH,EAAOF,EAAjB,KACMM,EAAIH,EAAMH,EAAhB,IACAO,EAASF,EAAE,EAAH,MAARE,KANFR,GAkBFF,CAAcJ,EAAKC,KAAnBG,oBAGWW,M,YAgBX,gBAAmC,IAAD,8BAChC,uDADgC,4gBAEhC,+BACA,gCAAqChB,qBAArC,IAHgC,E,4BAb1BiB,EAAMC,W,aAoBHC,M,yLAET,OAAOxD,EAAc,SAAUG,EAA/B,W,GAFwBkD,G,WAMfI,M,yLAET,OAAOzD,EAAc,WAAYG,EAAjC,W,GAF0BkD,G,aAMjBK,M,yLAET,OAAO1D,EAAc,OAAQG,EAA7B,W,GAFsBkD,G,SAMbM,M,yLAET,OAAO3D,EAAc,UAAWG,EAAhC,W,GAFyBkD,G,YAMhBO,M,yLAOY,IAAD,EACMrB,KADN,MACZW,EADY,IACTC,EADS,IACH5B,GADG,0BAOpB,OAJK2B,IAAD,GAAa3B,EAAjB,YACEA,sBAAoB2B,GAApB3B,eAA+B4B,GAA/B5B,IAGKvB,EAAc,IAAKG,EAAQoC,KAAlC,Q,GAdmBc,G,MAkBVQ,M,yLAET,OAAO7D,EAAc,QAASG,EAA9B,W,GAFuBkD,G,UAMdS,M,yLAET,OAAO9D,EAAc,OAAQG,EAA7B,W,GAFsBkD,G,SAMbU,M,yLAET,OAAO/D,EAAc,iBAAkBG,EAAvC,W,GAFgCkD,G,mBAMvBW,M,yLAET,OAAOhE,EAAc,OAAQG,EAA7B,W,GAFsBkD,G,SAMbY,M,yLAET,OAAOjE,EAAc,UAAWG,EAAhC,W,GAFyBkD,G,YAMhBa,M,yLAET,OAAOlE,EAAc,WAAYG,EAAjC,W,GAF0BkD,G,aAMjBc,M,yLAET,OAAOnE,EAAc,iBAAkBG,EAAvC,W,GAFgCkD,G,mBAMvBe,M,yLAET,OAAOpE,EAAc,OAAQG,EAA7B,W,GAFsBkD,G,SAMbgB,M,yLAET,OAAOrE,EAAc,OAAQG,EAA7B,W,GAFsBkD,G,SAMbiB,M,yLAET,OAAOtE,EAAc,MAAOG,EAA5B,W,GAFqBkD,G,QAMZkB,M,yLAET,OAAOvE,EAAc,SAAUG,EAA/B,W,GAFwBkD,G,WAMfmB,M,yLAET,OAAOxE,EAAc,OAAQG,EAA7B,W,GAFsBkD,G,SAMboB,M,yLAET,OAAOzE,EAAc,QAASG,EAA9B,W,GAFuBkD,G,UAMdqB,M,yLAET,OAAO1E,EAAc,WAAYG,EAAjC,W,GAF0BkD,G,aAMjBsB,M,yLAET,OAAO3E,EAAc,MAAOG,EAA5B,W,GAFqBkD,G,QAMZuB,M,yLAET,OAAO5E,EAAc,OAAQG,EAA7B,W,GAFsBkD,G,SAMbwB,M,yLAET,OAAO7E,EAAc,gBAAiBG,EAAtC,W,GAF+BkD,G,kBAMtByB,M,yLAET,OAAO9E,EAAc,SAAUG,EAA/B,W,GAFwBkD,G,WAMf0B,M,yLAET,OAAO/E,EAAc,UAAWG,EAAhC,W,GAFyBkD,G,kBAMdiB,E,0HCvZf,I,uOACA,IAAMU,EAAyB,CAAEhC,IAAF,GAAWD,KAAX,GAAqBkC,MAArB,GAAgCC,OAA/D,IAEQC,EAAUC,YAAVD,MAENE,EAOEF,EAPFE,uCACAC,EAMEH,EANFG,2CACAC,EAKEJ,EALFI,8BACAC,EAIEL,EAJFK,6BACAC,EAGEN,EAHFM,gCACAC,EAEEP,EAFFO,kCACAC,EACER,EADFQ,yBAGIC,E,2WAAiB,OAGrBP,uCAHqB,YAG6C,IACxD3D,EAA8Ba,KADyB,gCAE/D,SACSb,EAAP,GAEO2D,YAAP,IAIJC,2CAZqB,YAYiD,IAC5D3D,EAAkCY,KADyB,oCAEnE,SACSZ,EAAP,GAEO2D,YAAP,IAIJC,8BArBqB,YAqBoC,IAC/C3D,EAAqBW,KADyB,uBAEtD,SACSX,EAAP,GAEO2D,YAAP,IAIJC,6BA9BqB,YA8BmC,IAC9C3D,EAAoBU,KADyB,sBAErD,SACSV,EAAP,GAEO2D,YAAP,IAIJC,gCAvCqB,YAuCsC,IACjD3D,EAAuBS,KADyB,yBAExD,SACST,EAAP,GAEO2D,YAAP,IAIJC,kCAhDqB,YAgDwC,IACnD3D,EAAyBQ,KADyB,2BAE1D,SACSR,EAAP,GAEO2D,YAAP,IAIJG,qBAzDqB,YAyD2B,IACtC1E,EAAYoB,KADyB,cAE7CpB,GAAWA,EAAXA,IAGF2E,6BA9DqB,YA8DmC,IAC9C1E,EAAcmB,KAD+B,gBAErDnB,GAAaA,EAAbA,IAGF2E,8BAnEqB,YAmEoC,IAC/C1E,EAAekB,KAD+B,iBAEtDlB,GAAcA,EAAdA,IAGF2E,yBAxEqB,YAwE+B,IAC1C1E,EAAgBiB,KADyB,kBAEjDjB,GAAeA,EAAfA,IAGF2E,4BA7EqB,WA+EnB,OADiC1D,KADL,4BAE5B,GAGF2D,oBAlFqB,WAoFnB,OADoB3D,KADA,eAKtB4D,6BAvFqB,WAyFnB,OADyB5D,KADI,oBAE7B,GAGF6D,6BA5FqB,WA4FW,IACtBC,EAAmB9D,KADE,qBAE7B,OAAO8D,QAA2BA,GAAlC,KAGFC,4BAjGqB,WAmGnB,OAD0B/D,KADE,qBAE5B,KAIEgE,EAAYC,YAAlB,GACMC,EAAYF,OAAc,SAAAG,GAAG,OAAId,EAAJ,MAC7Be,EAAeJ,EAArB,O,UAEe,YACb,IAAK,IAAIK,EAAT,EAAgBA,EAAhB,EAAkCA,IAAK,CACrC,IAAMF,EAAMH,EAAZ,GACMM,EAAMJ,EAAZ,GAEEK,KADF,oBAAWD,EACKA,OAAdC,GAEAA,EAGJA,QAAenB,M,4FCjIV,cACL,SACSoB,aACH,CAACC,EADED,GAGLC,EAAS,2BAACzC,OAAD,SAATyC,cACER,2BAAM,8BADRQ,MAEE,kBALJ,GAOOC,G,qBAZX,K,iECUAC,EAAOC,QAVP,SAA2BC,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIV,EAAI,EAAGW,EAAO,IAAIC,MAAMH,GAAMT,EAAIS,EAAKT,IAC9CW,EAAKX,GAAKQ,EAAIR,GAGhB,OAAOW,I,gBCHTL,EAAOC,QAJP,SAAyBC,GACvB,GAAII,MAAMC,QAAQL,GAAM,OAAOA,I,oBCDjC,IAAIM,EAAmBC,EAAQ,KAM/BT,EAAOC,QAJP,SAA4BC,GAC1B,GAAII,MAAMC,QAAQL,GAAM,OAAOM,EAAiBN,K,gBCHlD,SAASQ,IAeP,OAdAV,EAAOC,QAAUS,EAAWpB,OAAOqB,QAAU,SAAUf,GACrD,IAAK,IAAIF,EAAI,EAAGA,EAAIkB,UAAUR,OAAQV,IAAK,CACzC,IAAImB,EAASD,UAAUlB,GAEvB,IAAK,IAAIF,KAAOqB,EACVvB,OAAOwB,UAAUC,eAAeC,KAAKH,EAAQrB,KAC/CI,EAAOJ,GAAOqB,EAAOrB,IAK3B,OAAOI,GAGFc,EAASO,MAAM5F,KAAMuF,WAG9BZ,EAAOC,QAAUS,G,gBCZjBV,EAAOC,QANP,SAAgCiB,GAC9B,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACnC,QAAWA,K,gBCEflB,EAAOC,QAJP,SAA0BmB,GACxB,GAAsB,oBAAX/D,QAA0BA,OAAOgE,YAAY/B,OAAO8B,GAAO,OAAOd,MAAMgB,KAAKF,K,gBC0B1FpB,EAAOC,QA3BP,SAA+BC,EAAKR,GAClC,GAAsB,oBAAXrC,QAA4BA,OAAOgE,YAAY/B,OAAOY,GAAjE,CACA,IAAIqB,EAAO,GACPC,KACAC,KACAC,SAEJ,IACE,IAAK,IAAiCC,EAA7BC,EAAK1B,EAAI7C,OAAOgE,cAAmBG,GAAMG,EAAKC,EAAGC,QAAQC,QAChEP,EAAKQ,KAAKJ,EAAGK,QAETtC,GAAK6B,EAAKnB,SAAWV,GAH8C8B,OAKzE,MAAOS,GACPR,KACAC,EAAKO,EARP,QAUE,IACOT,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAD9C,QAGE,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,K,gBCpBTvB,EAAOC,QAJP,WACE,MAAM,IAAIiC,UAAU,+I,gBCGtBlC,EAAOC,QAJP,WACE,MAAM,IAAIiC,UAAU,0I,mBCDtB,IAAIC,EAAiB1B,EAAQ,KAEzB2B,EAAuB3B,EAAQ,KAE/B4B,EAA6B5B,EAAQ,KAErC6B,EAAkB7B,EAAQ,KAM9BT,EAAOC,QAJP,SAAwBC,EAAKR,GAC3B,OAAOyC,EAAejC,IAAQkC,EAAqBlC,EAAKR,IAAM2C,EAA2BnC,EAAKR,IAAM4C,M,oBCTtG,IAAIC,EAAoB9B,EAAQ,KAE5B+B,EAAkB/B,EAAQ,KAE1B4B,EAA6B5B,EAAQ,KAErCgC,EAAoBhC,EAAQ,KAMhCT,EAAOC,QAJP,SAA4BC,GAC1B,OAAOqC,EAAkBrC,IAAQsC,EAAgBtC,IAAQmC,EAA2BnC,IAAQuC,M,oBCT9F,IAAIjC,EAAmBC,EAAQ,KAW/BT,EAAOC,QATP,SAAqCyC,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOlC,EAAiBkC,EAAGC,GACtD,IAAIC,EAAItD,OAAOwB,UAAU+B,SAAS7B,KAAK0B,GAAGI,MAAM,GAAI,GAEpD,MADU,WAANF,GAAkBF,EAAEK,cAAaH,EAAIF,EAAEK,YAAYC,MAC7C,QAANJ,GAAqB,QAANA,EAAoBtC,MAAMgB,KAAKoB,GACxC,cAANE,GAAqB,2CAA2CK,KAAKL,GAAWpC,EAAiBkC,EAAGC,a,gHCR1G,IAAAjD,EAAA,UACA,SACA,E,ujBAAA,QACA,SAKA,SACA,S,+IAEA,IAAMwD,EAAeC,WAASC,wBAAwBtG,QAEhDuG,EAAuB,SAACnK,GAC5B,IACEoK,EAgBEpK,EAhBFoK,KACAC,EAeErK,EAfFqK,YACAC,EAcEtK,EAdFsK,WACAC,EAaEvK,EAbFuK,iBACAC,EAYExK,EAZFwK,SACAC,EAWEzK,EAXFyK,UACAC,EAUE1K,EAVF0K,OACAC,EASE3K,EATF2K,cACAC,EAQE5K,EARF4K,SACAC,EAOE7K,EAPF6K,iBACAC,EAME9K,EANF8K,kBACAC,EAKE/K,EALF+K,WACAC,EAIEhL,EAJFgL,UACAC,EAGEjL,EAHFiL,eACAC,EAEElL,EAFFkL,qBACA9K,EACEJ,EADFI,SAGF,KAUI,EAAA+K,cAAa,CACfV,YACAD,WACAJ,OAGAC,YAAae,KAAKC,IAAIhB,EAATe,MAAsBb,IAAoB,GACvDG,SACAQ,uBACAH,aACAD,oBACA1K,aApBAkL,EADF,EACEA,KACAC,EAFF,EAEEA,WACA1J,EAHF,EAGEA,OACA2J,EAJF,EAIEA,WACAC,EALF,EAKEA,oBACAC,EANF,EAMEA,eACAC,EAPF,EAOEA,iBACAC,EARF,EAQEA,qBACAC,EATF,EASEA,sBAeF,OACE,wBAAC,EAAAC,KAAD,CACEjL,MAAOgB,EAAOkK,QACdC,cACAC,mBAAoBjB,EAHtB,6DAKE,wBAAC,UAAD,CAAKnI,MAAOuH,EAAM1H,OAAQ0H,EAA1B,6DACGS,GACC,wBAAC,EAAAqB,mBAAD,CACExB,OAAQA,EACRc,WAAYA,EACZW,KAAM7I,OACN8I,eAAgBzI,iBAChB0I,KAAMpI,OALR,+DAQF,wBAAC,EAAAL,KAAD,CACE0I,KAAK,OACLjC,YAAW,MAAEE,IAAoBF,EACjCkC,OAAQjC,EACRkC,EAAGlB,EAJL,8DAMCO,GACC,wBAAC7B,EAAD,CACEsC,KAAK,OACLC,OAAQ1B,EAAgB,QAAWW,EAAX,IAA2BE,EACnDc,EAAGlB,EACHX,cAAeA,EACfN,YAAaA,EACboC,gBAAiBlB,EACjBI,iBAAkBA,EAPpB,iEAWW,OAAbf,GAA+C,mBAAnBK,IAC5B,wBAAC,EAAAyB,YAAD,CACEC,cAAejB,EACfD,oBAAqBA,EACrBjB,SAAUoB,EAAuB,IACjCX,eAAgBA,EAJlB,6DAMGL,K,yBAOXT,EAAqByC,UAAYC,4BACjC1C,EAAqB2C,aAAeC,mCACpC5C,EAAqB6C,YAAc,wB,sHC3GnC,E,ujBAAA,QACA,YACA,SACA,S,sIAKA,IAAMnL,EAAS8E,aAAWsG,OAAO,CAC/BC,KAAMC,YACNC,SAAU,CAAE1K,OAAQ,EAAG2K,QAAS,KAG5BX,EAAc,SAAC1M,GACnB,IACE4K,EAKE5K,EALF4K,SACAa,EAIEzL,EAJFyL,oBACAjB,EAGExK,EAHFwK,SACAS,EAEEjL,EAFFiL,eACA0B,EACE3M,EADF2M,cAGF,KAAkC,EAAAW,UAAS,CACzCC,cAAe/C,EACfgD,YAAa,EACbb,kBAHF,qBAAOc,EAAP,KAAkBC,EAAlB,KAqBA,OAAM,EAfN,EAAAC,YAAU,WACR,IAAMC,EAAqBnC,EAAoBoC,aAAY,YAAgB,IACnEL,EADkE,EAAZ1E,MAChC,IAC5B4E,EAAa,CACXH,cAAenC,KAAK0C,KAAKtD,EAAWgD,GACpCA,cACAb,qBAIJ,OAAO,WACLlB,EAAoBsC,eAAeH,MAEpC,CAACnC,EAAqBkB,EAAenC,IAGtC,gDACgB,OAAbI,GACC,wBAAC,EAAAX,SAAS6B,KAAV,CACEkC,+BACAC,0BAA0B,sBAC1BpN,MAAOgB,EAAOqL,KAHhB,6DAKGhK,UAAMgL,eAAetD,GAClB1H,UAAMiL,aAAajL,UAAMkL,SAASC,KAAKzD,GAAW6C,GAClD7C,EAAS6C,IAGU,mBAAnBxC,GACN,wBAAC,EAAA7G,KAAD,CACEkK,kBAAkB,QAClBC,wBAAwB,YACxBN,0BAA0B,MAC1BpN,MAAOgB,EAAOuL,SAJhB,6DAMGnC,EAAewC,M,gBAO1Bf,EAAYE,UAAY,CACtBpC,SAAUgE,UAAUC,OAAOC,WAC3BjD,oBAAqB+C,UAAUG,OAAOD,WAGtC/B,cAAe6B,UAAUI,UAAU,CAACJ,UAAUG,OAAQH,UAAUK,SAChEjE,SAAUiC,4BAA0BjC,SACpCK,eAAgB4B,4BAA0B5B,iB,+QC7E5C,aACA,U,mKCDA,c,uHAAA,SCCA,SACA,SAMA,S,eAE4B,SAAC,GAUtB,IATLR,EASI,EATJA,UACAD,EAQI,EARJA,SACAJ,EAOI,EAPJA,KACAC,EAMI,EANJA,YACAK,EAKI,EALJA,OACAQ,EAII,EAJJA,qBACAH,EAGI,EAHJA,WACAD,EAEI,EAFJA,kBACA1K,EACI,EADJA,SAEMoN,KAAc,EAAAsB,QAAO,GAC3B,KAAkD,EAAAxB,WAAA,GAAlD,qBAAOyB,EAAP,KAA0BC,EAA1B,KAGA,KAA0C,EAAAF,QAAO,CAC/ClD,qBAAiC,IAAXpB,EACtByE,QAAsD,OAA7C,EAAAC,YAAWhE,EAAsBV,KACzC2E,QAHKvD,EAAR,EAAQA,qBAAsBqD,EAA9B,EAA8BA,QAIxBG,KAAmB,EAAAN,QAAO,MAC1BO,KAAe,EAAAP,SAAA,GACfrD,KAAsB,EAAAqD,QAAO,IAAI7E,WAASqF,MAAM,IAAIH,QACpDI,KAAmB,EAAAT,QAAQG,EAAU,KAAS,GACpD,KAA6B,EAAAO,cAAapF,EAAMC,EAAajK,GAArDkL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRC,KAAa,EAAAiE,UAAQ,oBAAM,EAAAC,eAAc5E,KAAoB,CACjEA,IAEIjJ,EAAS8E,aAAWsG,OAAO,CAAElB,SAAQA,EAAC,EAAA4D,iBAAgBvF,KACtDsB,KAAiB,EAAAkE,WAAU,CAC/BlF,SACAe,sBACAG,yBAEID,EAAmBF,EAAoBoE,YAAY,CACvDC,WAAY,CAAC,EAAGlE,GAChBmE,YAAa,CAAC,EAAGxE,KA+EnB,OAAM,EA5EN,EAAAoC,YAAU,WAgBR,OAdA0B,EAAaF,WAGTF,IACFzB,EAAY2B,QAAUF,EACtBxD,EAAoBuE,SAASf,IAI/BxD,EAAoBoC,aAAY,YAAgB,IAAb/E,EAAY,EAAZA,MACjC0E,EAAY2B,QAAUrG,KAIjB,WACLuG,EAAaF,WACb1D,EAAoBwE,gBACpBxE,EAAoByE,qBACpBC,aAAaf,EAAiBD,YAE/B,CAAC1D,EAAqBwD,OAGzB,EAAAtB,YAAU,WAoCR,GAAIlD,EAGF,OAtCkB,SAAd2F,IACJnG,WAASoG,OAAO5E,EAAqB,CACnC6E,QAAS1E,EACT2E,OAAQC,SAAOC,OACfjG,SAAUoB,EAAuB4B,EAAY2B,QAC7CuB,iBAAgBA,IACfC,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACJC,EAAoBrD,EAAY2B,UAAYvD,EAKlD,GAAIgF,IAAa7B,GAAqB8B,IACpC7B,MAE0B,mBAAfjE,GAA2B,CACpCwE,EAAiBJ,SAAWvD,EAAuB,IAEnD,MACEb,EAAWwE,EAAiBJ,UAAY,GAD1C,4BAAO2B,WAAP,KAAAC,EAAA,KAA6BC,WAA7BD,EAAqC,EAArCA,EAGID,GAAgBzB,EAAaF,UAC/BC,EAAiBD,QAAU3M,YAAW,WAEpCgL,EAAY2B,QAAU,EACtB1D,EAAoBwF,iBACpBjC,MACAoB,MACCY,QA5BO,GAsCX,WACLvF,EAAoBwE,mBAGvB,CACDxF,EACAgB,EACAG,EACAb,EACAgE,IAGK,CACLzD,OACAC,aACA1J,SACA2J,aACAC,sBACAC,iBACAC,mBACAC,uBACAC,uBAAwBkD,K,4ICrIH,SAAC,GAInB,IAHLrE,EAGI,EAHJA,OACAe,EAEI,EAFJA,oBACAG,EACI,EADJA,qBAEA,GAAsB,iBAAXlB,EACT,OAAOA,EAGT,IAAMwG,EAAexG,EAAOxD,OAC5B,GAAqB,IAAjBgK,EACF,OAAOxG,EAAO,GAAG,GAGnB,IAAIyG,EAAsB,EAEpBrB,EAAapF,EAAO0G,KAAI,WAAgBC,GAAW,IAAD,qBAArB7G,GAAqB,WAEtD,GAAI2G,GAAuBvF,GADPsF,IAAiBG,EAAQ,EAE3C,OAAOzF,EAGT,IAAM0F,WACJ9G,EACI2G,EAAsB3G,EAAWoB,EACjCA,EAAuBuF,EACvBI,EACJD,GAAoB1F,EAChBA,EACA0F,EAIN,OAFAH,EAAsBI,EAEfA,KAGHxB,EAAcrF,EAAO0G,KAAI,2CAE/B,OAAO3F,EAAoBoE,YAAY,CACrCC,WAAW,CAAE,GAAH,qBAASA,IACnBC,YAAY,GAAD,qBAAMA,GAAN,CAAmBrF,EAAOwG,EAAe,GAAG,S,6JCxC3D,c,qJAAA,YCCA,YACA,S,yIA0BMhF,EAAqB,SAAC,GAAD,IACzBV,EADyB,EACzBA,WACAd,EAFyB,EAEzBA,OAFyB,IAGzByB,KAAM7I,WAHmB,EAGZ,OAHY,MAIzB8I,eAAgBzI,WAJS,EAIQ,iBAJR,MAKzB0I,KAAMpI,WALmB,EAKZ,OALY,SAOzB,wBAACX,EAAD,8DACE,wBAACK,EAAD,CAAgB6N,GAAIhG,EAAYiG,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAxD,6DAhCiB,SAAClH,GACpB,IAAMmH,EAAmC,iBAAXnH,EAC9B,GAAImH,GAAoC,IAAlBnH,EAAOxD,OAE3B,MAAO,CAAC,CAAE4K,OAAQ,EAAGC,UADHF,EAAiBnH,EAASA,EAAO,GAAG,GACtBpE,IAAK,IAGvC,IAAM4K,EAAexG,EAAOxD,OACxB8K,EAAkB,EACtB,MAAM,CACJ,CAAEF,OAAQ,EAAGC,UAAWrH,EAAO,GAAG,GAAIpE,IAAK,IAD7C,qBAEKoE,EAAO0G,KAAI,WAAwBC,GAAW,IAAD,qBAAhCU,EAAgC,KAArBvH,EAAqB,KAI9C,OAFAwH,GAAmBxH,EAEZ,CACLsH,OAJkBZ,IAAiBG,EAAQ,EAIrB,EAAIW,EAC1BD,YACAzL,IAAK+K,EAAQ,QAlBA,CAiCD3G,GAAQ0G,KAAI,SAACa,GAAD,OACxB,wBAAChO,KAAD,cAAUgO,EAAV,CAAoB3L,IAAK2L,EAAS3L,IAAlC,qE,uBAMR,IAAM4L,EAAU1D,UAAUI,UAAU,CAACJ,UAAU2D,KAAM3D,UAAUK,SAE/D3C,EAAmBU,UAAY,CAC7BpB,WAAYgD,UAAUK,OAAOH,WAC7BhE,OAAQmC,4BAA0BnC,OAClCyB,KAAM+F,EACN9F,eAAgB8F,EAChB7F,KAAM6F,I,+KCnDR,c,i4BAAA,aCSA,U,4FCTA,IAAME,EAAa,SAACC,GAAD,OAAWA,EAAMC,MAAM,uCACpCC,EAAiB,SAACC,EAAUC,GAAX,uBACJD,EADI,kBACsBC,EADtB,KAEjBC,EAAmB,SAACF,EAAUC,GAAX,IAA0BE,EAA1B,uDAAiC,QAAjC,OACvB,IAAIC,MACCL,EAAeC,EAAUC,GAD9B,aAEa,UAATE,EAAmB,kDAAoD,IAF3E,gC,kBA+B6B,SAAC3S,EAAOwS,EAAUC,GAC/C,IAAM/H,EAAS1K,EAAMwS,GACrB,MAAsB,iBAAX9H,EA1BkB,SAACA,EAAQ8H,EAAUC,GAChD,IAAKL,EAAW1H,GACd,OAAOgI,EAAiBF,EAAUC,EAAe,UAFtB,CA2BG/H,EAAQ8H,EAAUC,GArBtB,SAAC/H,EAAQ8H,EAAUC,GAC/C,IAAK,IAAIpB,EAAQ,EAAGA,EAAQ3G,EAAOxD,OAAQmK,GAAS,EAAG,CACrD,IAAMgB,EAAQ3H,EAAO2G,GAAO,GACtB7G,EAAWE,EAAO2G,GAAO,GAE/B,IAAKe,EAAWC,GACd,OAAOK,EAAiBF,EAAUC,GAGpC,cAAMjI,GAA2BA,GAAY,GAAKA,GAAY,GAC5D,OAAO,IAAIoI,MACNL,EAAeC,EAAUC,GADvB,sIAViB,CAwBC/H,EAAQ8H,EAAUC,K,gJCzCD,CAC9CrI,KAAM,IACNC,YAAa,GACbC,WAAY,UACZG,WAAUA,EACVE,cAAe,QACfE,kBAAiBA,EACjBG,UAAW,kBACXJ,SAAU,KACVxK,SAAU,c,qHCTZ,IAAAoG,EAAA,UACA,SAEaqG,EAA4B,CACvCrC,SAAUgE,UAAUC,OAAOC,WAC3BhE,OAAQmI,kBACRjI,SAAU4D,UAAUI,UAAU,CAACJ,UAAU2D,KAAM3D,UAAUxM,OACzDoI,KAAMoE,UAAUC,OAChBpE,YAAamE,UAAUC,OACvBlE,iBAAkBiE,UAAUC,OAC5BnE,WAAYkE,UAAUK,OACtBpE,UAAW+D,UAAUsE,KACrBnI,cAAe6D,UAAUuE,MAAM,CAAC,QAAS,WACzClI,iBAAkB2D,UAAUsE,KAC5BhI,kBAAmB0D,UAAUK,OAC7B9D,WAAYyD,UAAU2D,KACtBnH,UAAWwD,UAAUK,OACrB5D,eAAgBuD,UAAU2D,KAC1BjH,qBAAsBsD,UAAUC,OAChCrO,SAAUoO,UAAUuE,MAAM,CAAC,YAAa,sB,2HCnB1C,a,gBAE6B,SAACjI,GAAD,0CACQA,MAAqB,EAAAkI,W,wGCH9B,SAAC5I,EAAMC,EAAajK,GAC9C,IAAM6S,EAAW7I,EAAO,EAClB8I,EAAiB7I,EAAc,EAC/B8I,EAAYF,EAAWC,EACvBE,EAAc,EAAID,EAClBE,EAAiC,cAAbjT,EAA2B,MAAQ,MAO7D,MAAO,CAAEkL,KAJC,KAAQ2H,EAAR,IAAoBC,EAApB,iBACEC,EADF,IACeA,EADf,MAC8BE,EAD9B,MACqDD,EADrD,iBAEED,EAFF,IAEeA,EAFf,MAE8BE,EAF9B,OAEsDD,EAEjD7H,WALI,EAAIH,KAAKkI,GAAKH,K,oGCPT,SAACjI,EAAsBV,GAC/C,OAAiB,IAAbA,EACK,EAG8B,iBAAzBU,EACVV,EAAWU,EACX,I,y8BCPN,aACA,SACA,SACA,SACA,SACA,SACA,SACA,U,0HCP+B,SAACd,GAAD,MAAW,CACxCmJ,SAAU,WACV1Q,MAAOuH,EACP1H,OAAQ0H,I,YAGe,CACvBoJ,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZH,SAAU,WACV5Q,KAAM,EACNC,IAAK,EACLC,MAAO,OACPH,OAAQ,S,wFCdU,kBAAM0I,KAAKuI,SAAShK,SAAS,IAAIiK,UAAU,K,iCCS/D,IAAIC,EAAuBtM,EAAQ,KAEnC,SAASuM,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3ChN,EAAOC,QAAU,WACf,SAASkN,EAAKjU,EAAOwS,EAAUC,EAAeyB,EAAUC,EAAcC,GACpE,GAAIA,IAAWP,EAAf,CAIA,IAAI9K,EAAM,IAAI6J,MACZ,mLAKF,MADA7J,EAAIe,KAAO,sBACLf,GAGR,SAASsL,IACP,OAAOJ,EAFTA,EAAKvF,WAAauF,EAMlB,IAAIK,EAAiB,CACnBC,MAAON,EACPnB,KAAMmB,EACN9B,KAAM8B,EACNxF,OAAQwF,EACRtF,OAAQsF,EACRpF,OAAQoF,EACRO,OAAQP,EAERQ,IAAKR,EACLS,QAASL,EACTM,QAASV,EACTW,YAAaX,EACbY,WAAYR,EACZrS,KAAMiS,EACNa,SAAUT,EACVtB,MAAOsB,EACPzF,UAAWyF,EACXU,MAAOV,EACPW,MAAOX,EAEPY,eAAgBlB,EAChBC,kBAAmBF,GAKrB,OAFAQ,EAAe9F,UAAY8F,EAEpBA,I,oBC7CPxN,EAAOC,QAAUQ,EAAA,IAAAA,I,6BCNnBT,EAAOC,QAFoB,gD,6BCT3BD,EAAOC,QAAUmO,EAAQ,I,6BCAzBpO,EAAOC,QAAUmO,EAAQ,M,6BCAzBpO,EAAOC,QAAUmO,EAAQ,OCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,YAAIC,EACH,OAAOA,EAAavO,QAGrB,IAAID,EAASqO,EAAyBE,GAAY,CAGjDtO,QAAS,IAOV,OAHAwO,EAAoBF,GAAUvN,KAAKhB,EAAOC,QAASD,EAAQA,EAAOC,QAASqO,GAGpEtO,EAAOC,Q,4LCrBf,c","file":"static/js/0.eacacd24.chunk.js","sourcesContent":["export * from './ReactNativeSVG';\n\nexport { default } from './ReactNativeSVG';\n","// @ts-ignore\nimport * as React from 'react';\nimport {\n  GestureResponderEvent,\n  // @ts-ignore\n  unstable_createElement as ucE,\n  // @ts-ignore\n  createElement as cE,\n} from 'react-native';\nimport { NumberArray, NumberProp } from './lib/extract/types';\nimport SvgTouchableMixin from './lib/SvgTouchableMixin';\nimport { resolve } from './lib/resolve';\n\nconst createElement = cE || ucE;\n\ntype BlurEvent = Object;\ntype FocusEvent = Object;\ntype PressEvent = Object;\ntype LayoutEvent = Object;\ntype EdgeInsetsProp = Object;\n\ninterface BaseProps {\n  accessible?: boolean;\n  accessibilityLabel?: string;\n  accessibilityHint?: string;\n  accessibilityIgnoresInvertColors?: boolean;\n  accessibilityRole?: string;\n  accessibilityState?: Object;\n  delayLongPress?: number;\n  delayPressIn?: number;\n  delayPressOut?: number;\n  disabled?: boolean;\n  hitSlop?: EdgeInsetsProp;\n  nativeID?: string;\n  touchSoundDisabled?: boolean;\n  onBlur?: (e: BlurEvent) => void;\n  onFocus?: (e: FocusEvent) => void;\n  onLayout?: (event: LayoutEvent) => object;\n  onLongPress?: (event: PressEvent) => object;\n  onClick?: (event: PressEvent) => object;\n  onPress?: (event: PressEvent) => object;\n  onPressIn?: (event: PressEvent) => object;\n  onPressOut?: (event: PressEvent) => object;\n  pressRetentionOffset?: EdgeInsetsProp;\n  rejectResponderTermination?: boolean;\n\n  translate: NumberArray;\n  scale: NumberArray;\n  rotation: NumberArray;\n  skewX: NumberProp;\n  skewY: NumberProp;\n  originX: NumberProp;\n  originY: NumberProp;\n\n  fontStyle?: string;\n  fontWeight?: NumberProp;\n  fontSize?: NumberProp;\n  fontFamily?: string;\n  forwardedRef: {};\n  style: Iterable<{}>;\n}\n\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {WebShape} self Instance given to us.\n * @param {Object?} props Optional overridden props given to us.\n * @returns {Object} Cleaned props object.\n * @private\n */\nconst prepare = <T extends BaseProps>(\n  self: WebShape<T>,\n  props = self.props,\n) => {\n  const {\n    translate,\n    scale,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    forwardedRef,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    // @ts-ignore\n    ...rest\n  } = props;\n  const hasTouchableProperty =\n    onPress || onPressIn || onPressOut || onLongPress;\n  const clean: {\n    onStartShouldSetResponder?: (e: GestureResponderEvent) => boolean;\n    onResponderMove?: (e: GestureResponderEvent) => void;\n    onResponderGrant?: (e: GestureResponderEvent) => void;\n    onResponderRelease?: (e: GestureResponderEvent) => void;\n    onResponderTerminate?: (e: GestureResponderEvent) => void;\n    onResponderTerminationRequest?: (e: GestureResponderEvent) => boolean;\n    transform?: string;\n    style?: {};\n    ref?: {};\n  } = {\n    ...(hasTouchableProperty\n      ? {\n          onStartShouldSetResponder:\n            self.touchableHandleStartShouldSetResponder,\n          onResponderTerminationRequest:\n            self.touchableHandleResponderTerminationRequest,\n          onResponderGrant: self.touchableHandleResponderGrant,\n          onResponderMove: self.touchableHandleResponderMove,\n          onResponderRelease: self.touchableHandleResponderRelease,\n          onResponderTerminate: self.touchableHandleResponderTerminate,\n        }\n      : null),\n    ...rest,\n  };\n\n  const transform = [];\n\n  if (originX != null || originY != null) {\n    transform.push(`translate(${originX || 0}, ${originY || 0})`);\n  }\n  if (translate != null) {\n    transform.push(`translate(${translate})`);\n  }\n  if (scale != null) {\n    transform.push(`scale(${scale})`);\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (rotation != null) {\n    transform.push(`rotate(${rotation})`);\n  }\n  if (skewX != null) {\n    transform.push(`skewX(${skewX})`);\n  }\n  if (skewY != null) {\n    transform.push(`skewY(${skewY})`);\n  }\n  if (originX != null || originY != null) {\n    transform.push(`translate(${-originX || 0}, ${-originY || 0})`);\n  }\n\n  if (transform.length) {\n    clean.transform = transform.join(' ');\n  }\n\n  if (forwardedRef) {\n    clean.ref = forwardedRef;\n  }\n\n  const styles: {\n    fontStyle?: string;\n    fontFamily?: string;\n    fontSize?: NumberProp;\n    fontWeight?: NumberProp;\n  } = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n\n  clean.style = resolve(style, styles);\n\n  return clean;\n};\n\nconst getBoundingClientRect = (node: SVGElement) => {\n  if (node) {\n    // @ts-ignore\n    const isElement = node.nodeType === 1; /* Node.ELEMENT_NODE */\n    // @ts-ignore\n    if (isElement && typeof node.getBoundingClientRect === 'function') {\n      // @ts-ignore\n      return node.getBoundingClientRect();\n    }\n  }\n};\n\nconst measureLayout = (\n  node: SVGElement,\n  callback: (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n  ) => void,\n) => {\n  // @ts-ignore\n  const relativeNode = node && node.parentNode;\n  if (relativeNode) {\n    setTimeout(() => {\n      // @ts-ignore\n      const relativeRect = getBoundingClientRect(relativeNode);\n      const { height, left, top, width } = getBoundingClientRect(node);\n      const x = left - relativeRect.left;\n      const y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nfunction remeasure() {\n  // @ts-ignore\n  const tag = this.state.touchable.responderID;\n  if (tag == null) {\n    return;\n  }\n  // @ts-ignore\n  measureLayout(tag, this._handleQueryLayout);\n}\n\nexport class WebShape<\n  P extends BaseProps = BaseProps,\n  C = {}\n> extends React.Component<P, C> {\n  [x: string]: unknown;\n  _remeasureMetricsOnActivation: () => void;\n  touchableHandleStartShouldSetResponder?: (\n    e: GestureResponderEvent,\n  ) => boolean;\n  touchableHandleResponderMove?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderGrant?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderRelease?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderTerminate?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderTerminationRequest?: (\n    e: GestureResponderEvent,\n  ) => boolean;\n  constructor(props: P, context: C) {\n    super(props, context);\n    SvgTouchableMixin(this);\n    this._remeasureMetricsOnActivation = remeasure.bind(this);\n  }\n}\n\nexport class Circle extends WebShape {\n  render(): JSX.Element {\n    return createElement('circle', prepare(this));\n  }\n}\n\nexport class ClipPath extends WebShape {\n  render(): JSX.Element {\n    return createElement('clipPath', prepare(this));\n  }\n}\n\nexport class Defs extends WebShape {\n  render(): JSX.Element {\n    return createElement('defs', prepare(this));\n  }\n}\n\nexport class Ellipse extends WebShape {\n  render(): JSX.Element {\n    return createElement('ellipse', prepare(this));\n  }\n}\n\nexport class G extends WebShape<\n  BaseProps & {\n    x?: NumberProp;\n    y?: NumberProp;\n    translate?: string;\n  }\n> {\n  render(): JSX.Element {\n    const { x, y, ...rest } = this.props;\n\n    if ((x || y) && !rest.translate) {\n      rest.translate = `${x || 0}, ${y || 0}`;\n    }\n\n    return createElement('g', prepare(this, rest));\n  }\n}\n\nexport class Image extends WebShape {\n  render(): JSX.Element {\n    return createElement('image', prepare(this));\n  }\n}\n\nexport class Line extends WebShape {\n  render(): JSX.Element {\n    return createElement('line', prepare(this));\n  }\n}\n\nexport class LinearGradient extends WebShape {\n  render(): JSX.Element {\n    return createElement('linearGradient', prepare(this));\n  }\n}\n\nexport class Path extends WebShape {\n  render(): JSX.Element {\n    return createElement('path', prepare(this));\n  }\n}\n\nexport class Polygon extends WebShape {\n  render(): JSX.Element {\n    return createElement('polygon', prepare(this));\n  }\n}\n\nexport class Polyline extends WebShape {\n  render(): JSX.Element {\n    return createElement('polyline', prepare(this));\n  }\n}\n\nexport class RadialGradient extends WebShape {\n  render(): JSX.Element {\n    return createElement('radialGradient', prepare(this));\n  }\n}\n\nexport class Rect extends WebShape {\n  render(): JSX.Element {\n    return createElement('rect', prepare(this));\n  }\n}\n\nexport class Stop extends WebShape {\n  render(): JSX.Element {\n    return createElement('stop', prepare(this));\n  }\n}\n\nexport class Svg extends WebShape {\n  render(): JSX.Element {\n    return createElement('svg', prepare(this));\n  }\n}\n\nexport class Symbol extends WebShape {\n  render(): JSX.Element {\n    return createElement('symbol', prepare(this));\n  }\n}\n\nexport class Text extends WebShape {\n  render(): JSX.Element {\n    return createElement('text', prepare(this));\n  }\n}\n\nexport class TSpan extends WebShape {\n  render(): JSX.Element {\n    return createElement('tspan', prepare(this));\n  }\n}\n\nexport class TextPath extends WebShape {\n  render(): JSX.Element {\n    return createElement('textPath', prepare(this));\n  }\n}\n\nexport class Use extends WebShape {\n  render(): JSX.Element {\n    return createElement('use', prepare(this));\n  }\n}\n\nexport class Mask extends WebShape {\n  render(): JSX.Element {\n    return createElement('mask', prepare(this));\n  }\n}\n\nexport class ForeignObject extends WebShape {\n  render(): JSX.Element {\n    return createElement('foreignObject', prepare(this));\n  }\n}\n\nexport class Marker extends WebShape {\n  render(): JSX.Element {\n    return createElement('marker', prepare(this));\n  }\n}\n\nexport class Pattern extends WebShape {\n  render(): JSX.Element {\n    return createElement('pattern', prepare(this));\n  }\n}\n\nexport default Svg;\n","// @ts-ignore\nimport { Touchable, GestureResponderEvent } from 'react-native';\nconst PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };\n// @ts-ignore\nconst { Mixin } = Touchable;\nconst {\n  touchableHandleStartShouldSetResponder,\n  touchableHandleResponderTerminationRequest,\n  touchableHandleResponderGrant,\n  touchableHandleResponderMove,\n  touchableHandleResponderRelease,\n  touchableHandleResponderTerminate,\n  touchableGetInitialState,\n} = Mixin;\n\nconst SvgTouchableMixin = {\n  ...Mixin,\n\n  touchableHandleStartShouldSetResponder(e: GestureResponderEvent) {\n    const { onStartShouldSetResponder } = this.props;\n    if (onStartShouldSetResponder) {\n      return onStartShouldSetResponder(e);\n    } else {\n      return touchableHandleStartShouldSetResponder.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminationRequest(e: GestureResponderEvent) {\n    const { onResponderTerminationRequest } = this.props;\n    if (onResponderTerminationRequest) {\n      return onResponderTerminationRequest(e);\n    } else {\n      return touchableHandleResponderTerminationRequest.call(this, e);\n    }\n  },\n\n  touchableHandleResponderGrant(e: GestureResponderEvent) {\n    const { onResponderGrant } = this.props;\n    if (onResponderGrant) {\n      return onResponderGrant(e);\n    } else {\n      return touchableHandleResponderGrant.call(this, e);\n    }\n  },\n\n  touchableHandleResponderMove(e: GestureResponderEvent) {\n    const { onResponderMove } = this.props;\n    if (onResponderMove) {\n      return onResponderMove(e);\n    } else {\n      return touchableHandleResponderMove.call(this, e);\n    }\n  },\n\n  touchableHandleResponderRelease(e: GestureResponderEvent) {\n    const { onResponderRelease } = this.props;\n    if (onResponderRelease) {\n      return onResponderRelease(e);\n    } else {\n      return touchableHandleResponderRelease.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminate(e: GestureResponderEvent) {\n    const { onResponderTerminate } = this.props;\n    if (onResponderTerminate) {\n      return onResponderTerminate(e);\n    } else {\n      return touchableHandleResponderTerminate.call(this, e);\n    }\n  },\n\n  touchableHandlePress(e: GestureResponderEvent) {\n    const { onPress } = this.props;\n    onPress && onPress(e);\n  },\n\n  touchableHandleActivePressIn(e: GestureResponderEvent) {\n    const { onPressIn } = this.props;\n    onPressIn && onPressIn(e);\n  },\n\n  touchableHandleActivePressOut(e: GestureResponderEvent) {\n    const { onPressOut } = this.props;\n    onPressOut && onPressOut(e);\n  },\n\n  touchableHandleLongPress(e: GestureResponderEvent) {\n    const { onLongPress } = this.props;\n    onLongPress && onLongPress(e);\n  },\n\n  touchableGetPressRectOffset() {\n    const { pressRetentionOffset } = this.props;\n    return pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop() {\n    const { hitSlop } = this.props;\n    return hitSlop;\n  },\n\n  touchableGetHighlightDelayMS() {\n    const { delayPressIn } = this.props;\n    return delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS() {\n    const { delayLongPress } = this.props;\n    return delayLongPress === 0 ? 0 : delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS() {\n    const { delayPressOut } = this.props;\n    return delayPressOut || 0;\n  },\n};\n\nconst touchKeys = Object.keys(SvgTouchableMixin);\nconst touchVals = touchKeys.map(key => SvgTouchableMixin[key]);\nconst numTouchKeys = touchKeys.length;\n\nexport default (target: { [x: string]: unknown; state: unknown }) => {\n  for (let i = 0; i < numTouchKeys; i++) {\n    const key = touchKeys[i];\n    const val = touchVals[i];\n    if (typeof val === 'function') {\n      target[key] = val.bind(target);\n    } else {\n      target[key] = val;\n    }\n  }\n  target.state = touchableGetInitialState();\n};\n","import { StyleSheet } from 'react-native';\n\n// Kept in separate file, to avoid name collision with Symbol element\nexport function resolve<T>(styleProp: Iterable<T>, cleanedProps: T) {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","import React from 'react'\nimport { View, Animated } from 'react-native'\nimport Svg, { Path, Defs, LinearGradient, Stop } from 'react-native-svg'\nimport {\n  DefsLinearGradient,\n  countdownCircleTimerProps,\n  countdownCircleTimerDefaultProps,\n} from '@countdown-circle-timer/shared'\nimport { TimeWrapper } from '.'\nimport { useCountdown } from '../hooks'\n\nconst AnimatedPath = Animated.createAnimatedComponent(Path)\n\nconst CountdownCircleTimer = (props) => {\n  const {\n    size,\n    strokeWidth,\n    trailColor,\n    trailStrokeWidth,\n    duration,\n    isPlaying,\n    colors,\n    strokeLinecap,\n    children,\n    isLinearGradient,\n    gradientUniqueKey,\n    onComplete,\n    ariaLabel,\n    renderAriaTime,\n    initialRemainingTime,\n    rotation,\n  } = props\n\n  const {\n    path,\n    pathLength,\n    styles,\n    gradientId,\n    animatedElapsedTime,\n    animatedStroke,\n    strokeDashoffset,\n    durationMilliseconds,\n    isProgressPathVisible,\n  } = useCountdown({\n    isPlaying,\n    duration,\n    size,\n    // https://github.com/vydimitrov/react-countdown-circle-timer/pull/82#issuecomment-774961578\n    // Find the larger strokeWidth and calculate the path.\n    strokeWidth: Math.max(strokeWidth, trailStrokeWidth ?? 0),\n    colors,\n    initialRemainingTime,\n    onComplete,\n    gradientUniqueKey,\n    rotation,\n  })\n\n  return (\n    <View\n      style={styles.wrapper}\n      accessible={true}\n      accessibilityLabel={ariaLabel}\n    >\n      <Svg width={size} height={size}>\n        {isLinearGradient && (\n          <DefsLinearGradient\n            colors={colors}\n            gradientId={gradientId}\n            defs={Defs}\n            linearGradient={LinearGradient}\n            stop={Stop}\n          />\n        )}\n        <Path\n          fill=\"none\"\n          strokeWidth={trailStrokeWidth ?? strokeWidth}\n          stroke={trailColor}\n          d={path}\n        />\n        {isProgressPathVisible && (\n          <AnimatedPath\n            fill=\"none\"\n            stroke={isLinearGradient ? `url(#${gradientId})` : animatedStroke}\n            d={path}\n            strokeLinecap={strokeLinecap}\n            strokeWidth={strokeWidth}\n            strokeDasharray={pathLength}\n            strokeDashoffset={strokeDashoffset}\n          />\n        )}\n      </Svg>\n      {(children !== null || typeof renderAriaTime === 'function') && (\n        <TimeWrapper\n          animatedColor={animatedStroke}\n          animatedElapsedTime={animatedElapsedTime}\n          duration={durationMilliseconds / 1000} // durationMilliseconds is locked version of the duration\n          renderAriaTime={renderAriaTime}\n        >\n          {children}\n        </TimeWrapper>\n      )}\n    </View>\n  )\n}\n\nCountdownCircleTimer.propTypes = countdownCircleTimerProps\nCountdownCircleTimer.defaultProps = countdownCircleTimerDefaultProps\nCountdownCircleTimer.displayName = 'CountdownCircleTimer'\n\nexport { CountdownCircleTimer }\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text, Animated, StyleSheet } from 'react-native'\nimport {\n  countdownCircleTimerProps,\n  timeStyle,\n} from '@countdown-circle-timer/shared'\n\nconst styles = StyleSheet.create({\n  time: timeStyle,\n  ariaTime: { height: 0, opacity: 0 },\n})\n\nconst TimeWrapper = (props) => {\n  const {\n    children,\n    animatedElapsedTime,\n    duration,\n    renderAriaTime,\n    animatedColor,\n  } = props\n\n  const [timeProps, setTimeProps] = useState({\n    remainingTime: duration,\n    elapsedTime: 0,\n    animatedColor,\n  })\n\n  useEffect(() => {\n    const animatedListenerId = animatedElapsedTime.addListener(({ value }) => {\n      const elapsedTime = value / 1000\n      setTimeProps({\n        remainingTime: Math.ceil(duration - elapsedTime),\n        elapsedTime,\n        animatedColor,\n      })\n    })\n\n    return () => {\n      animatedElapsedTime.removeListener(animatedListenerId)\n    }\n  }, [animatedElapsedTime, animatedColor, duration])\n\n  return (\n    <>\n      {children !== null && (\n        <Animated.View\n          accessibilityElementsHidden={true}\n          importantForAccessibility=\"no-hide-descendants\"\n          style={styles.time}\n        >\n          {React.isValidElement(children)\n            ? React.cloneElement(React.Children.only(children), timeProps)\n            : children(timeProps)}\n        </Animated.View>\n      )}\n      {typeof renderAriaTime === 'function' && (\n        <Text\n          accessibilityRole=\"timer\"\n          accessibilityLiveRegion=\"assertive\"\n          importantForAccessibility=\"yes\"\n          style={styles.ariaTime}\n        >\n          {renderAriaTime(timeProps)}\n        </Text>\n      )}\n    </>\n  )\n}\n\nTimeWrapper.propTypes = {\n  duration: PropTypes.number.isRequired,\n  animatedElapsedTime: PropTypes.object.isRequired,\n  // when there is a single color we just past the color string\n  // when there are more colors it is an interpolate object\n  animatedColor: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  children: countdownCircleTimerProps.children,\n  renderAriaTime: countdownCircleTimerProps.renderAriaTime,\n}\n\nexport { TimeWrapper }\n","export { CountdownCircleTimer } from './CountdownCircleTimer'\nexport { TimeWrapper } from './TimeWrapper'\n","export { useCountdown } from './useCountdown'\n","import { useRef, useState, useEffect, useMemo } from 'react'\nimport { Animated, Easing, StyleSheet } from 'react-native'\nimport {\n  getPathProps,\n  getStartAt,\n  getGradientId,\n  getWrapperStyle,\n} from '@countdown-circle-timer/shared'\nimport { getStroke } from '../utils'\n\nexport const useCountdown = ({\n  isPlaying,\n  duration,\n  size,\n  strokeWidth,\n  colors,\n  initialRemainingTime,\n  onComplete,\n  gradientUniqueKey,\n  rotation,\n}) => {\n  const elapsedTime = useRef(0)\n  const [isInFinishedState, setIsInFinishedState] = useState(false)\n  // time related props can NOT be changed once the component is mounted because animation relays on elapsed time since the timer is running\n  // to change them pass a new value to the \"key\" prop of the component, which will reinitialize/restart the timer and use the new props\n  const { durationMilliseconds, startAt } = useRef({\n    durationMilliseconds: duration * 1000,\n    startAt: getStartAt(initialRemainingTime, duration) * 1000, // in milliseconds\n  }).current\n  const repeatTimeoutRef = useRef(null)\n  const isMountedRef = useRef(false)\n  const animatedElapsedTime = useRef(new Animated.Value(0)).current\n  const totalElapsedTime = useRef((startAt / 1000) * -1) // in seconds\n  const { path, pathLength } = getPathProps(size, strokeWidth, rotation)\n  const gradientId = useMemo(() => getGradientId(gradientUniqueKey), [\n    gradientUniqueKey,\n  ])\n  const styles = StyleSheet.create({ wrapper: getWrapperStyle(size) })\n  const animatedStroke = getStroke({\n    colors,\n    animatedElapsedTime,\n    durationMilliseconds,\n  })\n  const strokeDashoffset = animatedElapsedTime.interpolate({\n    inputRange: [0, durationMilliseconds],\n    outputRange: [0, pathLength],\n  })\n\n  useEffect(() => {\n    // set isMounted prop to true when the component is mounted\n    isMountedRef.current = true\n\n    // set initial remaining time if it is provided\n    if (startAt) {\n      elapsedTime.current = startAt\n      animatedElapsedTime.setValue(startAt)\n    }\n\n    // keep track of the elapsed time\n    animatedElapsedTime.addListener(({ value }) => {\n      elapsedTime.current = value\n    })\n\n    // final cleanup\n    return () => {\n      isMountedRef.current = false\n      animatedElapsedTime.stopAnimation()\n      animatedElapsedTime.removeAllListeners()\n      clearTimeout(repeatTimeoutRef.current)\n    }\n  }, [animatedElapsedTime, startAt])\n\n  // toggle playing effect\n  useEffect(() => {\n    const animateTime = () => {\n      Animated.timing(animatedElapsedTime, {\n        toValue: durationMilliseconds,\n        easing: Easing.linear,\n        duration: durationMilliseconds - elapsedTime.current,\n        useNativeDriver: false,\n      }).start(({ finished }) => {\n        const isDurationReached = elapsedTime.current === durationMilliseconds\n\n        // finished - React Native state, it is set to true even when paused\n        // isInFinishedState - keeps track if animation is currently in finished state and prevents running onComplete callback again if in finished state\n        // isDurationReached - tells us that we can fire the onComplete callback\n        if (finished && !isInFinishedState && isDurationReached) {\n          setIsInFinishedState(true)\n\n          if (typeof onComplete === 'function') {\n            totalElapsedTime.current += durationMilliseconds / 1000\n\n            const [shouldRepeat = false, delay = 0] =\n              onComplete(totalElapsedTime.current) || []\n\n            if (shouldRepeat && isMountedRef.current) {\n              repeatTimeoutRef.current = setTimeout(() => {\n                // reset animation and start over\n                elapsedTime.current = 0\n                animatedElapsedTime.resetAnimation()\n                setIsInFinishedState(false)\n                animateTime()\n              }, delay)\n            }\n          }\n        }\n      })\n    }\n\n    if (isPlaying) {\n      animateTime()\n\n      return () => {\n        animatedElapsedTime.stopAnimation()\n      }\n    }\n  }, [\n    isPlaying,\n    animatedElapsedTime,\n    durationMilliseconds,\n    onComplete,\n    isInFinishedState,\n  ])\n\n  return {\n    path,\n    pathLength,\n    styles,\n    gradientId,\n    animatedElapsedTime,\n    animatedStroke,\n    strokeDashoffset,\n    durationMilliseconds,\n    isProgressPathVisible: !isInFinishedState,\n  }\n}\n","export const getStroke = ({\n  colors,\n  animatedElapsedTime,\n  durationMilliseconds,\n}) => {\n  if (typeof colors === 'string') {\n    return colors\n  }\n\n  const colorsLength = colors.length\n  if (colorsLength === 1) {\n    return colors[0][0]\n  }\n\n  let colorsTotalDuration = 0\n\n  const inputRange = colors.map(([_, duration], index) => {\n    const isLastColor = colorsLength === index + 1\n    if (colorsTotalDuration >= durationMilliseconds || isLastColor) {\n      return durationMilliseconds\n    }\n\n    const colorEndTimeTemp =\n      duration !== undefined\n        ? colorsTotalDuration + duration * durationMilliseconds\n        : durationMilliseconds - colorsTotalDuration\n    const colorEndTime =\n      colorEndTimeTemp >= durationMilliseconds\n        ? durationMilliseconds\n        : colorEndTimeTemp\n\n    colorsTotalDuration = colorEndTime\n\n    return colorEndTime\n  })\n\n  const outputRange = colors.map(([color]) => color)\n\n  return animatedElapsedTime.interpolate({\n    inputRange: [0, ...inputRange],\n    outputRange: [...outputRange, colors[colorsLength - 1][0]],\n  })\n}\n","export { getStroke } from './getStroke'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { countdownCircleTimerProps } from '..'\n\nconst getStopProps = (colors) => {\n  const isColorsString = typeof colors === 'string'\n  if (isColorsString || colors.length === 1) {\n    const stopColor = isColorsString ? colors : colors[0][0]\n    return [{ offset: 1, stopColor, key: 0 }]\n  }\n\n  const colorsLength = colors.length\n  let currentDuration = 0\n  return [\n    { offset: 0, stopColor: colors[0][0], key: 0 },\n    ...colors.map(([stopColor, duration], index) => {\n      const isLastColor = colorsLength === index + 1\n      currentDuration += duration\n\n      return {\n        offset: isLastColor ? 1 : currentDuration,\n        stopColor,\n        key: index + 1,\n      }\n    }),\n  ]\n}\n\nconst DefsLinearGradient = ({\n  gradientId,\n  colors,\n  defs: Defs = 'defs',\n  linearGradient: LinearGradient = 'linearGradient',\n  stop: Stop = 'stop',\n}) => (\n  <Defs>\n    <LinearGradient id={gradientId} x1=\"1\" y1=\"0\" x2=\"0\" y2=\"0\">\n      {getStopProps(colors).map((gradient) => (\n        <Stop {...gradient} key={gradient.key} />\n      ))}\n    </LinearGradient>\n  </Defs>\n)\n\nconst TagType = PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n\nDefsLinearGradient.propTypes = {\n  gradientId: PropTypes.string.isRequired,\n  colors: countdownCircleTimerProps.colors,\n  defs: TagType,\n  linearGradient: TagType,\n  stop: TagType,\n}\n\nexport { DefsLinearGradient }\n","export { DefsLinearGradient } from './DefsLinearGradient'\n","export {\n  getWrapperStyle,\n  getPathProps,\n  getStartAt,\n  getGradientId,\n  timeStyle,\n  countdownCircleTimerProps,\n  countdownCircleTimerDefaultProps,\n} from './utils'\nexport { DefsLinearGradient } from './components'\n","const isHexColor = (color) => color.match(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)\nconst getErrorInProp = (propName, componentName) =>\n  `Invalid prop '${propName}' supplied to '${componentName}'`\nconst getHexColorError = (propName, componentName, type = 'array') =>\n  new Error(\n    `${getErrorInProp(propName, componentName)}. Expect ${\n      type === 'array' ? 'an array of tuples where the first element is a' : ''\n    } HEX color code string.\n .`\n  )\n\nconst validateColorsAsString = (colors, propName, componentName) => {\n  if (!isHexColor(colors)) {\n    return getHexColorError(propName, componentName, 'string')\n  }\n}\n\nconst validateColorsAsArray = (colors, propName, componentName) => {\n  for (let index = 0; index < colors.length; index += 1) {\n    const color = colors[index][0]\n    const duration = colors[index][1]\n\n    if (!isHexColor(color)) {\n      return getHexColorError(propName, componentName)\n    }\n\n    if (!(duration === undefined || (duration >= 0 && duration <= 1))) {\n      return new Error(\n        `${getErrorInProp(propName, componentName)}.\n        Expect an array of tuples where the second element is a number between 0 and 1 representing color transition duration.`\n      )\n    }\n  }\n}\n\nexport const colorsValidator = (props, propName, componentName) => {\n  const colors = props[propName]\n  if (typeof colors === 'string') {\n    return validateColorsAsString(colors, propName, componentName)\n  }\n\n  return validateColorsAsArray(colors, propName, componentName)\n}\n","export const countdownCircleTimerDefaultProps = {\n  size: 180,\n  strokeWidth: 12,\n  trailColor: '#d9d9d9',\n  isPlaying: false,\n  strokeLinecap: 'round',\n  isLinearGradient: false,\n  ariaLabel: 'Countdown timer',\n  children: null,\n  rotation: 'clockwise',\n}\n","import PropTypes from 'prop-types'\nimport { colorsValidator } from '.'\n\nexport const countdownCircleTimerProps = {\n  duration: PropTypes.number.isRequired,\n  colors: colorsValidator,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  trailStrokeWidth: PropTypes.number,\n  trailColor: PropTypes.string,\n  isPlaying: PropTypes.bool,\n  strokeLinecap: PropTypes.oneOf(['round', 'square']),\n  isLinearGradient: PropTypes.bool,\n  gradientUniqueKey: PropTypes.string,\n  onComplete: PropTypes.func,\n  ariaLabel: PropTypes.string,\n  renderAriaTime: PropTypes.func,\n  initialRemainingTime: PropTypes.number,\n  rotation: PropTypes.oneOf(['clockwise', 'counterclockwise']),\n}\n","import { uuid } from '.'\n\nexport const getGradientId = (gradientUniqueKey) =>\n  `countdown-circle-timer-gradient-${gradientUniqueKey || uuid()}`\n","export const getPathProps = (size, strokeWidth, rotation) => {\n  const halfSize = size / 2\n  const halfStrokeWith = strokeWidth / 2\n  const arcRadius = halfSize - halfStrokeWith\n  const arcDiameter = 2 * arcRadius\n  const rotationIndicator = rotation === 'clockwise' ? '1,0' : '0,1'\n\n  const pathLength = 2 * Math.PI * arcRadius\n  const path = `m ${halfSize},${halfStrokeWith}\n          a ${arcRadius},${arcRadius} 0 ${rotationIndicator} 0,${arcDiameter}\n          a ${arcRadius},${arcRadius} 0 ${rotationIndicator} 0,-${arcDiameter}`\n\n  return { path, pathLength }\n}\n","export const getStartAt = (initialRemainingTime, duration) => {\n  if (duration === 0) {\n    return 0\n  }\n\n  return typeof initialRemainingTime === 'number'\n    ? duration - initialRemainingTime\n    : 0\n}\n","export { uuid } from './uuid'\nexport { getPathProps } from './getPathProps'\nexport { getWrapperStyle, timeStyle } from './styles'\nexport { colorsValidator } from './colorsValidator'\nexport { getGradientId } from './getGradientId'\nexport { getStartAt } from './getStartAt'\nexport { countdownCircleTimerProps } from './countdownCircleTimerProps'\nexport { countdownCircleTimerDefaultProps } from './countdownCircleTimerDefaultProps'\n","export const getWrapperStyle = (size) => ({\n  position: 'relative',\n  width: size,\n  height: size,\n})\n\nexport const timeStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%',\n}\n","export const uuid = () => Math.random().toString(36).substring(2)\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = require(\"react\");;","module.exports = require(\"react-native\");;","module.exports = require(\"react-native-svg\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export { CountdownCircleTimer } from './components'\n"],"sourceRoot":""}