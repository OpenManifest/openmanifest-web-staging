{"version":3,"sources":["app/components/map/Map.web.tsx","app/utils/calculateLatLngDelta.ts","app/utils/calculateCoordinatesByAngle.ts","assets/images/logo.png","assets/images/weather.png","assets/images/night.png","app/screens/authenticated/manifest/Weather/JumpRun.tsx","assets/fonts/SpaceMono-Regular.ttf","app/EntrypointWrapper.web.tsx","app/api/schema.d.ts","app/components/forms/credits/slice.tsx","app/components/forms/dropzone/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/extra/slice.tsx","app/components/forms/load/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/plane/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/ticket_type/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/dialogs/UserWizard/slice.tsx","app/screens/authenticated/dropzone_setup/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/users/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/state/global.ts","app/components/notifications/slice.ts","app/state/store.ts","app/components/app_update/AppUpdate.tsx","app/api/Apollo.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/constants/Colors.ts","app/hooks/usePalette.ts","app/components/notifications/Notifications.tsx","app/navigation/Routes.ts","app/screens/NotFoundScreen.tsx","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateUser.ts","app/api/hooks/useCurrentDropzone.ts","app/api/reflection.tsx","app/hooks/useRestriction.ts","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/input/number_input/NumberField.tsx","app/api/createQuery.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/components/forms/manifest/ManifestForm.tsx","app/components/dialogs/ManifestUser/ManifestUser.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/components/dialogs/ManifestGroup/UserListSelect.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/load/SlotCard.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/screens/authenticated/load/ActionButton.tsx","app/screens/authenticated/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/load/Header.tsx","app/screens/authenticated/load/InfoGrid.tsx","app/api/hooks/useQueryLoad.ts","app/api/hooks/useMutationDeleteSlot.ts","app/screens/authenticated/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/layout/ScrollableScreen.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/weather_conditions/WindScreen.tsx","app/navigation/SetupWarning.tsx","app/navigation/AppBar.tsx","app/screens/authenticated/manifest/GetStarted.tsx","app/screens/authenticated/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/manifest/LoadCard/Small/Card.tsx","app/components/layout/SwipeActions.tsx","app/screens/authenticated/manifest/LoadCard/Large/Card.tsx","app/api/hooks/useMutationCreateLoad.ts","app/components/notifications/index.ts","app/api/hooks/useQueryDropzoneUsers.ts","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/forms/load/LoadForm.tsx","app/components/layout/DialogOrSheet.web.tsx","app/components/dialogs/Load.tsx","app/screens/authenticated/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/manifest/ManifestScreen.tsx","app/screens/authenticated/manifest/ManifestGroupScreen.tsx","app/screens/authenticated/manifest/ManifestGroupUserSelectScreen.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/components/forms/credits/CreditsForm.tsx","app/components/dialogs/CreditsDialog/Credits.web.tsx","app/api/hooks/useMutationCreateRig.ts","app/api/hooks/useMutationUpdateRig.tsx","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/forms/user/UserForm.tsx","app/api/hooks/useDropzoneUser.ts","app/components/dialogs/User.tsx","app/screens/authenticated/profile/UserInfo/Header.tsx","app/screens/authenticated/profile/UserInfo/InfoGrid.tsx","app/api/hooks/useDropzoneUserProfile.ts","app/components/Badge.tsx","app/api/hooks/useMutationRevokePermission.ts","app/api/hooks/useMutationGrantPermission.ts","app/screens/authenticated/profile/UserInfo/PermissionBadges.tsx","app/screens/authenticated/profile/SlotCard.tsx","app/screens/authenticated/profile/ProfileScreen.tsx","app/api/hooks/useNotifications.ts","app/screens/authenticated/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/NotificationsScreen.tsx","app/components/UserAvatar.tsx","app/screens/authenticated/transactions/OrderCard.tsx","app/screens/authenticated/transactions/TransactionsScreen.tsx","app/screens/authenticated/equipment/RigCard.tsx","app/screens/authenticated/equipment/EquipmentScreen.tsx","app/screens/authenticated/settings/SettingsScreen.tsx","app/api/hooks/useMutationCreateTicketType.ts","app/api/hooks/useMutationUpdateTicketType.ts","app/components/forms/ticket_type/TicketTypeForm.tsx","app/components/dialogs/TicketType.tsx","app/screens/authenticated/ticket_types/TicketTypesScreen.tsx","app/api/hooks/useMutationUpdateDropzone.ts","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/dropzones/UpdateDropzoneScreen.tsx","app/components/forms/plane/PlaneForm.tsx","app/components/dialogs/Plane.tsx","app/screens/authenticated/planes/PlanesScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/settings/RigInspectionTemplateScreen.tsx","app/screens/authenticated/settings/DropzoneRigsScreen.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/authenticated/settings/DropzonePermissionScreen.tsx","app/screens/authenticated/settings/DropzoneMasterLogScreen.tsx","app/components/forms/extra/ExtraForm.tsx","app/screens/authenticated/extras/UpdateExtraScreen.tsx","app/api/hooks/useMutationCreateExtra.ts","app/api/hooks/useMutationUpdateExtra.ts","app/components/dialogs/TicketTypeExtra.tsx","app/screens/authenticated/extras/ExtrasScreen.tsx","app/screens/authenticated/transactions/TransactionCard.tsx","app/screens/authenticated/transactions/OrderScreen.tsx","app/screens/authenticated/transactions/DropzoneTransactionsScreen.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/screens/authenticated/rig/RigInspectionScreen.tsx","app/navigation/tabs/manifest.tsx","app/components/forms/ghost/GhostForm.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/users/UsersScreen.tsx","app/screens/authenticated/users/AppBar.tsx","app/navigation/tabs/users.tsx","app/navigation/tabs/notifications.tsx","app/navigation/AnimatedTabBar.web.tsx","app/navigation/Authenticated.tsx","app/screens/authenticated/dropzones/DropzonesScreen.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/screens/authenticated/dropzones/CreateDropzoneScreen.tsx","app/navigation/LimboRoutes.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/hooks/useMutationSignUp.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/navigation/Unauthenticated.tsx","app/screens/authenticated/dropzone_setup/steps/Name.tsx","app/screens/authenticated/dropzone_setup/steps/Location.web.tsx","app/screens/authenticated/dropzone_setup/steps/Aircraft.tsx","app/screens/authenticated/dropzone_setup/steps/Theming.tsx","app/screens/authenticated/dropzone_setup/steps/Permissions.tsx","app/screens/authenticated/dropzone_setup/steps/TicketType.tsx","app/api/hooks/useMutationCreatePlane.tsx","app/api/hooks/useMutationUpdatePlane.tsx","app/screens/authenticated/dropzone_setup/DropzoneSetupScreen.tsx","app/screens/unauthenticated/signup/ConfirmUserScreen.tsx","app/api/hooks/useQueryDropzones.ts","app/navigation/drawer/Drawer.tsx","app/navigation/RootNavigator.tsx","app/components/dialogs/UserWizard/steps/Federation.tsx","app/components/dialogs/UserWizard/steps/UserInfo.tsx","app/components/dialogs/UserWizard/steps/License.tsx","app/components/dialogs/UserWizard/steps/Rig.tsx","app/components/dialogs/UserWizard/steps/ReserveRepack.tsx","app/components/dialogs/UserWizard/steps/AskForRig.tsx","app/components/dialogs/UserWizard/steps/Wingloading.tsx","app/components/dialogs/UserWizard/UserWizardScreen.tsx","app/Entrypoint.tsx","app/hooks/useCachedResources.ts"],"names":["Map","props","width","height","position","children","center","coords","shape","interactive","onDragEnd","isLoaded","useJsApiLoader","googleMapsApiKey","id","containerStyle","mapStyle","map","React","onLoad","component","a","async","current","Location","status","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","panDelayed","lat","lng","console","log","rootLayout","setRootLayout","onLayout","nativeEvent","layout","style","borderRadius","undefined","overflow","top","y","left","x","pointerEvents","mapContainerStyle","options","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","mapTypeId","degreesToRadians","degrees","Math","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","getPointOnCircle","opts","radius","offsetX","offsetY","sin","module","exports","Dimensions","get","styles","StyleSheet","create","container","paddingHorizontal","alignItems","paddingLeft","paddingRight","degreeLabel","textAlign","textShadowColor","textShadowRadius","textShadowOffset","fontSize","color","content","flexDirection","iconContainer","borderWidth","borderStyle","borderColor","alignSelf","justifyContent","MAP_SIZE","CENTER_Y","CENTER_X","jumpRun","originX","originY","origin","setOrigin","opacity","Animated","Value","planePosition","planeAnimation","loop","timing","duration","toValue","useNativeDriver","resetBeforeIteration","onMountRotatableView","event","start","animate","stop","reset","planeStartPosition","View","transform","rotate","backgroundColor","interpolate","inputRange","outputRange","scaleX","translateY","name","size","Text","round","b","isEqual","Wrapper","absoluteFill","LoadState","ModerationRole","NotificationType","OrderState","Permission","SellableItemTypes","TransactionStatus","TransactionType","WalletableTypes","initialState","original","open","fields","amount","value","error","transactionType","Deposit","message","createSlice","reducers","setField","state","action","payload","field","setFieldError","setOpen","federation","secondaryColor","primaryColor","banner","isCreditSystemEnabled","isPublic","requestPublication","Object","keys","forEach","key","payloadKey","typedKey","role","expiresAt","cost","ticketTypes","gca","dispatchAt","isOpen","loadMaster","pilot","plane","maxSlots","exitWeight","email","phone","license","setFederation","registration","minSlots","hours","nextMaintenanceHours","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","idx","setFields","JSON","parse","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","passengerName","passengerExitWeight","users","setFromSlots","slot","Number","rigId","find","i","setDropzoneUsers","dzUser","availableRigs","user","altitude","allowManifestingSelf","isTandem","apfNumber","nickname","rigs","dropzone","userFederations","uid","temperature","exitSpotMiles","offsetDirection","winds","skipRigSetup","complete","credits","extra","ghost","rigInspection","rigInspectionTemplate","manifest","manifestGroup","userWizard","dropzoneWizard","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","login","signup","image","close","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","expoPushToken","theme","palette","main","dark","light","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setPermissions","setPrimaryColor","darken","hex","lighten","setAccentColor","setDropzone","toggleDarkMode","logout","queue","hideSnackbar","newQueue","showSnackbar","push","persistConfig","storage","Platform","OS","require","default","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","notifications","notificationSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppUpdate","overlay","setOverlay","loading","setLoading","animation","dispatch","isUpdateAvailable","Update","isAvailable","onUpdate","play","isNew","flex","tint","blur","intensity","title","ref","source","Button","disabled","button","mode","onPress","absoluteFillObject","fontWeight","bottom","Apollo","httpBatchLink","BatchHttpLink","batchDebounce","batchMax","uri","Constants","urls","url","root","errorLink","onError","graphQLErrors","networkError","operation","response","some","extensions","code","variant","process","EXPO_ENV","locations","path","nodes","stringify","authLink","setContext","_","headers","accessToken","Authorization","tokenType","client","ApolloClient","link","concat","RetryLink","cache","InMemoryCache","ApolloProvider","ImageViewer","mainSrc","onCloseRequest","text","background","tabIconDefault","tabIconSelected","success","warning","info","usePalette","AnimationState","slice","Notifications","successAnimation","closed","animationState","setAnimationState","notification","length","opening","Toast","show","onHide","text1","capitalize","text2","type","autoPlay","onAnimationFinish","waiting","setTimeout","lottieDoneAnimation","setRef","autoHide","visibilityTime","prefixes","Linking","config","confirm","Authenticated","HomeScreen","LoadScreen","PackingScreen","ProfileScreen","SetupScreen","Limbo","DropzonesScreen","CreateDropzoneScreen","Unauthenticated","LoginScreen","SignUpScreen","NotFoundScreen","navigation","TouchableOpacity","replace","linkText","padding","marginTop","paddingVertical","isRequired","pattern","isEmail","RegExp","isNumeric","validates","callback","createMutation","mutation","getPayload","fieldErrorMap","validators","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","variables","mopts","hasErrors","variable","validator","test","validate","result","data","fieldErrors","errors","requestAnimationFrame","gql","updateUser","licenseId","QUERY_DROPZONE","useCurrentDropzone","dropzoneId","pushToken","useQuery","earliestTimestamp","startOfDay","Date","getTime","fetchPolicy","mutationUpdateUser","useMutationUpdateUser","userId","remoteToken","localToken","called","defaultOptions","CurrentUserEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","SlotFragmentDoc","LoadFragmentDoc","TransactionFragmentDoc","OrderFragmentDoc","FinalizeLoadDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","DropzoneTransactionsDocument","CurrentUserPermissionsDocument","useRestriction","permission","useCurrentUserPermissionsLazyQuery","execute","includes","QUERY_PERMISSION_USER","GCAChip","small","assignedColor","onSelect","useTheme","onSurface","isMenuOpen","setMenuOpen","UpdateLoad","Menu","onDismiss","visible","anchor","Chip","icon","selectedColor","marginHorizontal","textStyle","dropzoneUsers","edges","edge","Item","node","LoadMasterChip","slots","allowed","QUERY_DROPZONE_USERS","PilotChip","QUERY_PLANES","PlaneChip","planes","NumberField","onChangeValue","onChangeText","rest","match","numbers","TextInput","keyboardType","right","Affix","chevrons","affixTopChevron","surface","MaterialCommunityIcons","affixBottomChevron","caretHidden","borderLeftWidth","hairlineWidth","borderBottomWidth","paddingTop","marginRight","createQuery","query","pollInterval","refetch","transformedData","showSnackbarErrors","items","selected","isSelected","isDisabled","renderItemLabel","onChangeSelected","autoSelectFirst","flexWrap","margin","xorBy","previous","next","pick","ChipSelectSkeleton","rows","isLoading","marginBottom","marginVertical","useAllowedJumpTypes","allowedJumpTypes","jumpTypes","JumpTypeChipSelect","onLoadingStateChanged","userIds","filter","Boolean","Subheader","uniqBy","first","useTicketTypes","TicketTypeChipSelect","onlyPublicTickets","RigTitle","QUERY_RIGS","RigSelect","tandem","useLazyQuery","fetchRigs","onTouchEnd","label","Icon","editable","ManifestForm","allowedToManifestOthers","UpdateUserSlot","CreateUserSlot","HelperText","ScrollView","horizontal","ticketAddons","Divider","required","newValue","toString","MUTATION_CREATE_SLOT","ManifestUserDialog","globalState","mutationCreateSlot","mutationData","onManifest","jumpTypeId","extraIds","loadId","ticketTypeId","dropzoneUserId","createSlot","Portal","Dialog","maxHeight","ProgressBar","indeterminate","Title","ScrollArea","Actions","onClose","useQueryDropzoneUsersDetails","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","Card","elevation","Image","Content","toFixed","row","rowFirst","rowLast","num","SlotForm","canManifestOthers","slotUser","flexShrink","newRig","useThemeColor","colorName","colorFromProps","Colors","lightColor","darkColor","otherProps","NoResults","subtitle","empty","Paragraph","fab","UserListSelect","search","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","Searchbar","placeholder","contentContainerStyle","description","Checkbox","onNext","scrollView","MUTATION_CREATE_SLOTS","mutationCreateSlots","tabIndex","setTabIndex","userGroup","slotUserWithRig","omit","createSlots","testID","defaultIndex","onChangeIndex","userListContainer","paddingBottom","flexGrow","buttonContainer","contentContainer","sheet","sheetHeader","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","SlotCard","onDelete","hasPassenger","flatten","card","Badge","e","preventDefault","infoChip","chipText","wingLoading","chip","passengerTitle","passengerChip","updateLoad","pilotId","gcaId","planeId","loadMasterId","ActionButton","isExpanded","setExpanded","useFinalizeLoadMutation","mutationFinalizeLoad","mutationUpdateLoad","useMutationUpdateLoad","updateCall","minutes","dispatchTime","addMinutes","ceil","BoardingCall","Open","updateLoadState","onLanded","Landed","hasLicense","hasMembership","hasExitWeight","hasCredits","canUpdateLoad","canManifestSelf","CreateSlot","isFull","showManifestButton","showGroupIcon","createCallAction","callActions","manifestActions","workflowActions","Cancelled","InFlight","buttonActions","FAB","Group","fabStyle","marginLeft","onStateChange","CountdownCircleTimer","select","ios","then","android","web","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","UserHeader","onEdit","canEdit","LinearGradient","IconButton","avatarContainer","isAfter","titleContainer","loadNumber","paragraph","InfoGrid","divider","titleStyle","bold","descriptionStyle","verticalDivider","deleteSlot","AvailableSlotCard","SlotSkeleton","route","useRoute","useQueryLoad","params","detailedLoad","mutationDeleteSlot","useMutationDeleteSlot","onDeleteSlot","updatePilot","updateGCA","updatePlane","updateLoadMaster","lm","canEditSelf","UpdateSlot","canEditOthers","canRemoveSelf","DeleteSlot","canRemoveOthers","DeleteUserSlot","useNavigation","Array","from","availableSlots","occupiedSlots","useWindowDimensions","numColumns","floor","contentWidth","initialLoading","showsHorizontalScrollIndicator","weight","keyExtractor","refreshing","onRefresh","refreshControl","RefreshControl","renderItem","slotGroup","groupNumber","onSlotGroupPress","navigate","onSlotPress","WizardPagination","paginationIndex","icons","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","count","setIndex","Wizard","Provider","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","wizardScreen","buttonBack","buttons","maxWidth","WizardScreen","onBack","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","scrollTo","ScrollableScreen","minHeight","WizardCompleteStep","createWeatherCondition","WindRow","speed","direction","onChange","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","minWidth","altitudeOption","alt","strengthCard","onBlur","newSpeed","textField","directionCard","newDir","CARD_STYLE","textAlignVertical","lineHeight","borderBottomLeftRadius","borderBottomRightRadius","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","KeyboardAvoidingView","behavior","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","set","cardTitle","cardValue","slider","sliderControl","wingLoadingCardLeft","wingLoadingCardRight","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","JumpRunSelector","longitude","isDragging","setDragging","rotation","onGestureEvent","setValue","currentCoordinates","angle","onBegan","onEnded","zIndex","bottomDegreeLabel","textInput","location","setLocation","setUsersLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","currentIndex","Winds","goBack","JumpRun","JumpRunScreen","WindScreen","labelStyle","Warning","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","join","QUERY_CURRENT_USER","AppBar","scene","hideWarnings","loadData","Appbar","Header","BackAction","DrawerActions","toggleDrawer","descriptor","headerRight","tintColor","isRigInspected","rigInspections","inspection","isRepackInDate","GetStarted","hasPlanes","hasTicketTypes","separator","LoadingCard","LoadCard","initialRecord","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","smallChip","smallChipText","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","translateX","useNativeAnimations","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","hasLanded","DataTable","numeric","isCurrentUser","Row","Cell","slotText","v","differenceInMinutes","createLoad","DropzoneUserChipSelect","requiredPermissions","useQueryDropzoneUsers","getItemLabel","PlaneChipSelect","LoadForm","DialogOrSheet","buttonLabel","buttonAction","dismissable","LoadDialog","useMutationCreateLoad","snackbar","snapPoints","onSave","WeatherBoard","conditions","currentConditions","date","createdAt","canUpdate","UpdateWeatherConditions","hasWeatherConditions","easing","Easing","inOut","ease","onLongPress","ImageBackground","nightBackground","weatherBackground","resizeMode","cell","FontAwesome","format","windboard","header","orderBy","noData","noDataLabel","ManifestScreen","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","fetchMore","isFocused","useIsFocused","setOptions","isSetupComplete","canCreateLoad","CreateLoad","hasRigInspection","hasReserveInDate","cardWidth","loads","ListHeaderComponent","ListEmptyComponent","ManifestGroupScreen","screen","ManifestGroupUserSelectScreen","Android","setParams","DatePicker","timestamp","selectedDays","onDayClick","QUERY_ROLES","RoleSelect","toUpperCase","roles","DropzoneUserForm","canUpdateRole","GrantPermission","newRole","time","MUTATION_EDIT_DROPZONE_USER","DropzoneUserDialog","mutationUpdateDropzoneUser","createData","userRoleId","updateDropzoneUser","CreditsForm","currentCredits","subtotal","MUTATION_CREATE_TRANSACTION","mutationCreateTransaction","updateRig","createRig","RigForm","showTypeSelect","canCreateRigs","CreateRig","RigDialog","useMutationUpdateRig","useMutationCreateRig","onDialogClose","QUERY_LICENSES","LicenseChipSelect","federationId","licenses","QUERY_FEDERATIONS","FederationSelect","federations","QUERY_DROPZONE_USER","useDropzoneUser","UpdateUserDialog","joinFederation","refetchQueries","parseFloat","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","textColor","primaryDark","TouchableRipple","openURL","QUERY_DROPZONE_USER_PROFILE","innerChip","iconName","actAsDZSO","actAsGCA","actAsLoadMaster","actAsPilot","actAsRigInspector","revokePermission","permissionName","grantPermission","PermissionBadges","canGrantPermission","useMutationRevokePermission","useMutationGrantPermission","badges","ActAsPilot","ActAsDzso","ActAsGca","ActAsRigInspector","ActAsLoadMaster","shouldShowBadge","update","c","readQuery","updatedList","writeQuery","shouldUpdate","updatedGcaList","newData","transaction","transactionContent","Caption","transactionTitle","transactionDescription","avatarIcon","MUTATION_UPDATE_IMAGE","isSelf","useDropzoneUserProfile","ImagePicker","onPickImage","mediaTypes","Images","allowsEditing","aspect","quality","base64","canAddTransaction","CreateUserTransaction","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","chipTitle","QUERY_DROPZONE_USER_NOTIFICATIONS","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","addSuffix","ManifestedNotification","initial","resource","BoardingCallNotification","getIcon","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","useNotifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","UserAvatar","initals","split","n","OrderCard","order","showAvatar","buyer","__typename","orderContent","orderTitle","orderDescription","TransactionsScreen","firstName","flatList","orders","RigCard","onSuccessfulImageUpload","isUploading","setUploading","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","textRow","inspectedBy","insp","isOk","SettingsScreen","canUpdateDropzone","UpdateDropzone","canUpdateRigInspectionTemplate","UpdateFormTemplate","Section","createTicketType","updateTicketType","QUERY_EXTRAS","ALTITUDE_LABEL_MAP","TicketTypeForm","TicketTypeDialog","useMutationCreateTicketType","useMutationUpdateTicketType","QUERY_TICKET_TYPE","MUTATION_UPDATE_TICKET_TYPE","MUTATION_DELETE_TICKET_TYPE","TicketTypesScreen","form","mutationUpdateTicketType","mutationDeleteTicketType","canCreateTicketTypes","CreateTicketType","deleteTicketType","Switch","onValueChange","updateDropzone","ColorPickerDialog","sliderComponent","SliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","colorBox","ColorPicker","helperText","isCustomColor","isDialogOpen","setDialogOpen","Surface","manipulate","MaterialIcons","previewContainer","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","previewTabBar","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","PhonePreview","primaryLight","WebPreview","markerFixed","myLocation","LocationWizardStep","markerSize","labelSize","setCenter","region","isAnimating","setAnimating","fadeOut","fadeIn","setCoordinateFade","defaultZoom","onDragStart","r","DropzoneForm","outsideLoading","getDocumentAsync","multiple","skeletonCard","Cover","Phone","Web","skeletonCardColorPicker","skeletonCardCheckbox","descriptionNumberOfLines","iconProps","extraProps","public","requestPublic","moderationRole","subheader","UpdateDropzoneScreen","mutationUpdateDropzone","useMutationUpdateDropzone","hasError","MUTATION_UPDATE_PLANE","MUTATION_CREATE_PLANE","CreatePlaneScreen","mutationCreatePlane","mutationUpdatePlane","createPlane","MUTATION_DELETE_PLANE","PlanesScreen","deletePlane","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","RigInspectionItem","canInspect","valueType","RigInspectionTemplateForm","newItem","setNewItem","fabOpen","setFabOpen","QUERY_RIG_INSPECTION","MUTATION_UPDATE_FORM","RigInspectionTemplateScreen","mutationUpdateForm","updateForm","formId","QUERY_DROPZONE_RIGS","MUTATION_UPDATE_RIG","DropzoneRigsScreen","rigForm","mutationUpdateRig","updateData","canCreateRig","CreateDropzoneRig","MUTATION_UPDATE_ROLE","PermissionListItem","canChangePermissions","mutationUpdatePermission","roleId","optimisticResponse","updateRole","QUERY_DROPZONE_PERMISSIONS","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","masterLog","QUERY_TICKET_TYPES","ExtraForm","ticket","MUTATION_UPDATE_EXTRA","UpdateExtraScreen","mutationUpdateExtra","ticketTypeIds","updateExtra","createExtra","TicketTypeExtraDialog","useMutationCreateExtra","useMutationUpdateExtra","ExtrasScreen","formState","canCreateExtras","CreateExtra","TransactionCard","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","rightStyle","seller","receipts","useDropzoneTransactionsLazyQuery","fetchTransactions","RigInspectionForm","QUERY_RIG_INSPECTIONS","MUTATION_CREATE_RIG_INSPECTION","RigInspectionScreen","mutationCreateRigInspection","record","createRigInspection","mutationResult","currentDz","ins","Manifest","createStackNavigator","ManifestTab","Navigator","screenOptions","headerShown","cardStyle","Screen","initialParams","NotificationsScreen","EquipmentScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","createGhost","exit_weight","CreateGhostDialog","mutationCreateGhost","useMutationCreateGhost","UserCardSkeleton","UsersScreen","ghostForm","canCreateUser","CreateUser","inputContainer","input","onSearch","searchVisible","autoFocus","Settings","SettingsTab","Profile","initialRouteName","BottomTab","createBottomTabNavigator","AnimatedIcon","createAnimatedComponent","AuthenticatedTabBar","Appearance","getColorScheme","canViewUsers","ReadUser","tabConfig","activeColor","inactiveColor","tabs","animatedFocus","iconActive","Users","tabBar","preset","inactiveOpacity","inactiveScale","tabBarOptions","activeTintColor","inactiveBackgroundColor","backdrop","activeBackgroundColor","inactiveTintColor","showLabel","adaptive","borderTopWidth","borderTopColor","tabBarLabel","focused","tabBarIcon","unmountOnBlur","NotificationsTab","UsersTab","QUERY_DROPZONES","SafeAreaView","FlatList","dropzones","shouldPushRoute","dzIcon","createDropzone","useMutationCreateDropzone","Stack","MUTATION_LOG_IN","mutationLogin","onLogin","emailRegex","userLogin","authenticatable","logo","secureTextEntry","onSubmitEditing","textButtonLabel","textButton","userSignUp","SignupScreen","useMutationSignUp","onSignUp","textContentType","passwordRules","NameAndFederationWizardSceen","latitudeDelta","longitudeDelta","AircraftWizardScreen","setMinSlots","setMaxSlots","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","onSlidingComplete","ReserveRepackWizardScreen","PermissionWizardScreen","dropzoneForm","queryRoles","TicketTypeWizardScreen","price","setPrice","DropzoneSetupScreen","aircraft","mutationCreateDropzone","useMutationCreatePlane","useMutationUpdatePlane","mutationCreateTicketType","onBasicInfoNext","onThemingNext","onAircraftNext","onTicketTypeNext","Name","Theming","Aircraft","TicketType","errorIcon","ConfirmUserScreen","account_confirmation_success","DrawerMenu","useQueryDropzones","routeName","getFocusedRouteNameFromRoute","navState","dangerouslyGetState","subNavState","routes","subNavRoutes","subNavSubState","subRouteName","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","active","closeDrawer","profileHeader","Drawer","createDrawerNavigator","RootNavigator","drawerContent","AuthenticatedRoutes","LimboRoutes","UnauthenticatedRoutes","FederationWizardSceen","UserInfoScreen","RigWizardScreen","isOtherMake","setIsOtherMake","WingloadingWizardScreen","userForm","setCanopySize","setWeight","w","modal","UserWizardScreen","mutationJoinFederation","mutationCreateRig","onUserInfoNext","onFederationNext","toLowerCase","userFederation","onLicenseNext","onRigNext","onReserveRepackNext","onWingloadingNext","Modal","UserInfo","Federation","License","AskForRig","Rig","ReserveRepack","Wingloading","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","token","isDevice","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","registerForPushNotificationsAsync","request","body","addEventListener","removeEventListener","fallback","NavigationContainer","linking","LinkingConfiguration","StatusBar","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","registerRootComponent","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","fontsLoaded","SplashScreen","Ionicons","font","useCachedResources","ActivityIndicator"],"mappings":"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","file":"static/js/app.cad2afe4.chunk.js","sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n/* eslint-disable import/no-unresolved */\nimport { GOOGLE_MAPS_WEB } from '@env';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { calculateLatLngDelta } from '../../utils/calculateLatLngDelta';\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const { width, height, position, children, center, coords, shape, interactive, onDragEnd } =\n    props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_WEB,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n\n  const onLoad = React.useCallback(async (component: GoogleMap) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = component;\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      // const location = await Location.getCurrentPositionAsync({});\n      // const lat = coords?.lat || location.coords.latitude;\n      // const lng = coords?.lng || location.coords.longitude;\n    } catch (error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const bounds = new window.google.maps.LatLngBounds();\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current?.fitBounds(bounds);\n    }\n  }, []);\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const delayedPanningTimer = React.useRef<ReturnType<typeof setTimeout>>();\n\n  const panDelayed = React.useCallback((lat: number, lng: number) => {\n    if (delayedPanningTimer) {\n      // clearTimeout(delayedPanningTimer.current);\n      // delayedPanningTimer.current = null;\n    }\n    return;\n    if (map.current?.panTo) {\n      console.log('PANNING', lat, lng);\n      map.current?.panTo?.({ lat, lng });\n\n      const latDelta = calculateLatLngDelta(lat, 0.5);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      const bounds = new window.google.maps.LatLngBounds(\n        { lat: lat - latDelta, lng: lng - latDelta },\n        { lat: lat + latDelta, lng: lng + latDelta }\n      );\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current?.fitBounds(bounds);\n    } else {\n      console.log('DELAYING PANNING TO ', lat, lng, map.current);\n      delayedPanningTimer.current = setTimeout(() => panDelayed(lat, lng), 500);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (center) {\n      console.log({ center, coords });\n      panDelayed(center.lat, center.lng);\n    }\n  }, [center, coords, panDelayed]);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  return !isLoaded ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        // provider={PROVIDER_GOOGLE}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          mapTypeControl: false,\n          zoomControl: false,\n          mapTypeId: 'satellite',\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from '../../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../../../components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: MAP_SIZE / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons name=\"airplane\" size={20} color=\"#ffffff\" />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function Wrapper({ children }: { children: React.ReactNode }) {\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type AnyResource = {\n  id: Scalars['ID'];\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateExtra */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateRigInspection */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteDropzone */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteLoad */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeletePlane */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteSlot */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteTicket */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  dropzoneUsers: DropzoneUserConnection;\n  extras: Array<Extra>;\n  federation: Federation;\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  isPublic: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  loads: LoadConnection;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  requestPublication: Scalars['Boolean'];\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['Int'];\n  userRoles: Array<UserRole>;\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUsersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  permissions?: Maybe<Array<Permission>>;\n  search?: Maybe<Scalars['String']>;\n  licensed?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  name: Scalars['String'];\n  banner?: Maybe<Scalars['String']>;\n  federationId: Scalars['Int'];\n  requestPublication?: Maybe<Scalars['Boolean']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  primaryColor?: Maybe<Scalars['String']>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  isCreditSystemEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['Int'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['Int'];\n  user: User;\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  expiresAt?: Maybe<Scalars['Int']>;\n  credits?: Maybe<Scalars['Float']>;\n  userRoleId?: Maybe<Scalars['Int']>;\n};\n\nexport type Extra = SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type ExtraInput = {\n  name?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  ticketTypeIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  id: Scalars['Int'];\n  state: LoadState;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of FinalizeLoad */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['Int'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FormTemplateInput = {\n  name?: Maybe<Scalars['String']>;\n  definition?: Maybe<Scalars['String']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n};\n\nexport type GhostInput = {\n  name: Scalars['String'];\n  email: Scalars['String'];\n  phone?: Maybe<Scalars['String']>;\n  exitWeight: Scalars['Float'];\n  dropzoneId: Scalars['Int'];\n  roleId: Scalars['Int'];\n  licenseId?: Maybe<Scalars['Int']>;\n  federationNumber?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of GrantPermission */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['Int'];\n  federation?: Maybe<Federation>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['Int'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['Int'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  isOpen?: Maybe<Scalars['Boolean']>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  pilotId?: Maybe<Scalars['Int']>;\n  planeId?: Maybe<Scalars['Int']>;\n  gcaId?: Maybe<Scalars['Int']>;\n  loadMasterId?: Maybe<Scalars['Int']>;\n  state?: Maybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** open */\n  Open = 'open',\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum ModerationRole {\n  /** user */\n  User = 'user',\n  /** support */\n  Support = 'support',\n  /** moderator */\n  Moderator = 'moderator',\n  /** administrator */\n  Administrator = 'administrator'\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteTicketType?: Maybe<DeleteTicketPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<UserRegisterPayload>;\n  userResendConfirmation?: Maybe<UserResendConfirmationPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordReset?: Maybe<UserSendPasswordResetPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userSignUp?: Maybe<UserSignUpPayload>;\n  userUpdatePassword?: Maybe<UserUpdatePasswordPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  email: Scalars['String'];\n  confirmUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSignUpArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmSuccessUrl?: Maybe<Scalars['String']>;\n  phone: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  name: Scalars['String'];\n  licenseId?: Maybe<Scalars['Int']>;\n  pushToken?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  currentPassword?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** system */\n  System = 'system',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** user_manifested */\n  UserManifested = 'user_manifested',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  title?: Maybe<Scalars['String']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: WalletInput;\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: WalletInput;\n  /** Total amount of the order */\n  amount: Scalars['Int'];\n  sellableItem?: Maybe<SellableItemInput>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport enum OrderState {\n  /** pending */\n  Pending = 'pending',\n  /** completed */\n  Completed = 'completed',\n  /** refunded */\n  Refunded = 'refunded',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  /** updateDropzone */\n  UpdateDropzone = 'updateDropzone',\n  /** deleteDropzone */\n  DeleteDropzone = 'deleteDropzone',\n  /** updateWeatherConditions */\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  /** createLoad */\n  CreateLoad = 'createLoad',\n  /** updateLoad */\n  UpdateLoad = 'updateLoad',\n  /** deleteLoad */\n  DeleteLoad = 'deleteLoad',\n  /** readLoad */\n  ReadLoad = 'readLoad',\n  /** createSlot */\n  CreateSlot = 'createSlot',\n  /** updateSlot */\n  UpdateSlot = 'updateSlot',\n  /** deleteSlot */\n  DeleteSlot = 'deleteSlot',\n  /** createUserSlot */\n  CreateUserSlot = 'createUserSlot',\n  /** createUserSlotWithSelf */\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  /** updateUserSlot */\n  UpdateUserSlot = 'updateUserSlot',\n  /** deleteUserSlot */\n  DeleteUserSlot = 'deleteUserSlot',\n  /** createStudentSlot */\n  CreateStudentSlot = 'createStudentSlot',\n  /** updateStudentSlot */\n  UpdateStudentSlot = 'updateStudentSlot',\n  /** deleteStudentSlot */\n  DeleteStudentSlot = 'deleteStudentSlot',\n  /** createTicketType */\n  CreateTicketType = 'createTicketType',\n  /** updateTicketType */\n  UpdateTicketType = 'updateTicketType',\n  /** deleteTicketType */\n  DeleteTicketType = 'deleteTicketType',\n  /** createExtra */\n  CreateExtra = 'createExtra',\n  /** updateExtra */\n  UpdateExtra = 'updateExtra',\n  /** deleteExtra */\n  DeleteExtra = 'deleteExtra',\n  /** readExtra */\n  ReadExtra = 'readExtra',\n  /** createPlane */\n  CreatePlane = 'createPlane',\n  /** updatePlane */\n  UpdatePlane = 'updatePlane',\n  /** deletePlane */\n  DeletePlane = 'deletePlane',\n  /** createRig */\n  CreateRig = 'createRig',\n  /** updateRig */\n  UpdateRig = 'updateRig',\n  /** deleteRig */\n  DeleteRig = 'deleteRig',\n  /** readRig */\n  ReadRig = 'readRig',\n  /** createDropzoneRig */\n  CreateDropzoneRig = 'createDropzoneRig',\n  /** updateDropzoneRig */\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  /** deleteDropzoneRig */\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  /** readDropzoneRig */\n  ReadDropzoneRig = 'readDropzoneRig',\n  /** readPermissions */\n  ReadPermissions = 'readPermissions',\n  /** updatePermissions */\n  UpdatePermissions = 'updatePermissions',\n  /** createPackjob */\n  CreatePackjob = 'createPackjob',\n  /** updatePackjob */\n  UpdatePackjob = 'updatePackjob',\n  /** deletePackjob */\n  DeletePackjob = 'deletePackjob',\n  /** readPackjob */\n  ReadPackjob = 'readPackjob',\n  /** createFormTemplate */\n  CreateFormTemplate = 'createFormTemplate',\n  /** updateFormTemplate */\n  UpdateFormTemplate = 'updateFormTemplate',\n  /** deleteFormTemplate */\n  DeleteFormTemplate = 'deleteFormTemplate',\n  /** readFormTemplate */\n  ReadFormTemplate = 'readFormTemplate',\n  /** readUser */\n  ReadUser = 'readUser',\n  /** updateUser */\n  UpdateUser = 'updateUser',\n  /** deleteUser */\n  DeleteUser = 'deleteUser',\n  /** createUser */\n  CreateUser = 'createUser',\n  /** actAsPilot */\n  ActAsPilot = 'actAsPilot',\n  /** actAsLoadMaster */\n  ActAsLoadMaster = 'actAsLoadMaster',\n  /** actAsGCA */\n  ActAsGca = 'actAsGCA',\n  /** actAsDZSO */\n  ActAsDzso = 'actAsDZSO',\n  /** actAsRigInspector */\n  ActAsRigInspector = 'actAsRigInspector',\n  /** createUserTransaction */\n  CreateUserTransaction = 'createUserTransaction',\n  /** readUserTransactions */\n  ReadUserTransactions = 'readUserTransactions',\n  /** grantPermission */\n  GrantPermission = 'grantPermission',\n  /** revokePermission */\n  RevokePermission = 'revokePermission'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots?: Maybe<Scalars['Int']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type PlaneInput = {\n  name?: Maybe<Scalars['String']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  hours?: Maybe<Scalars['Int']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get dropzone details */\n  dropzone: Dropzone;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get ticket addons for a dropzone */\n  extras: Array<Extra>;\n  /** Available federations */\n  federations: Array<Federation>;\n  /** Load base64 images as graphql */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load: Load;\n  /** Get loads */\n  loads: LoadConnection;\n  /** Get planes from a dropzone */\n  planes: Array<Plane>;\n  /** Get ticket types for a dropzone */\n  ticketTypes: Array<TicketType>;\n  userCheckPasswordToken: User;\n  userConfirmAccount: User;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  requestedPublication?: Maybe<Scalars['Boolean']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  allowedForUserId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  dropzoneId: Scalars['Int'];\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  dropzoneId: Scalars['Int'];\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryUserCheckPasswordTokenArgs = {\n  resetPasswordToken: Scalars['String'];\n  redirectUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryUserConfirmAccountArgs = {\n  confirmationToken: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  id?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of RevokePermission */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n  user?: Maybe<User>;\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\nexport type RigInput = {\n  name?: Maybe<Scalars['String']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  maintainedAt?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  userId?: Maybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  canopySize?: Maybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['Int'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type RigInspectionInput = {\n  dropzoneId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  definition?: Maybe<Scalars['String']>;\n  isOk?: Maybe<Scalars['Boolean']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type SellableItemInput = {\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  type: SellableItemTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum SellableItemTypes {\n  Pack = 'pack',\n  TicketType = 'ticketType',\n  Extra = 'extra',\n  Slot = 'slot'\n}\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  user?: Maybe<User>;\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUserId?: Maybe<Scalars['Int']>;\n  ticketTypeId?: Maybe<Scalars['Int']>;\n  jumpTypeId?: Maybe<Scalars['Int']>;\n  loadId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n  userGroup?: Maybe<Array<SlotUser>>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type SlotUser = {\n  id: Scalars['Int'];\n  exitWeight: Scalars['Float'];\n  rigId?: Maybe<Scalars['Int']>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type TicketTypeInput = {\n  currency?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n  altitude?: Maybe<Scalars['Int']>;\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  isTandem?: Maybe<Scalars['Boolean']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser: DropzoneUser;\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum TransactionStatus {\n  Reserved = 'reserved',\n  Completed = 'completed',\n  Cancelled = 'cancelled'\n}\n\nexport enum TransactionType {\n  Purchase = 'purchase',\n  Sale = 'sale',\n  Deposit = 'deposit',\n  Withdrawal = 'withdrawal',\n  Refund = 'refund'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  id: Scalars['Int'];\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzone */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateExtra */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  id: Scalars['Int'];\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateLoad */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateNotification */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  id: Scalars['Int'];\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdatePlane */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  permission: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRole */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  id: Scalars['Int'];\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateSlot */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  id: Scalars['Int'];\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateTicket */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateUser */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['Int'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federationId: Scalars['Int'];\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  licenseId?: Maybe<Scalars['Int']>;\n};\n\nexport type UserInput = {\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['String']>;\n  apfNumber?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  licenseId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n};\n\n/** Autogenerated return type of UserLogin */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserRegister */\nexport type UserRegisterPayload = {\n  __typename?: 'UserRegisterPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n};\n\n/** Autogenerated return type of UserResendConfirmation */\nexport type UserResendConfirmationPayload = {\n  __typename?: 'UserResendConfirmationPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated return type of UserSendPasswordReset */\nexport type UserSendPasswordResetPayload = {\n  __typename?: 'UserSendPasswordResetPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSignUp */\nexport type UserSignUpPayload = {\n  __typename?: 'UserSignUpPayload';\n  authenticatable?: Maybe<User>;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated return type of UserUpdatePassword */\nexport type UserUpdatePasswordPayload = {\n  __typename?: 'UserUpdatePasswordPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\nexport type WalletInput = {\n  /** Any model with an account, e.g DropzoneUser or Dropzone */\n  type: WalletableTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum WalletableTypes {\n  DropzoneUser = 'dropzoneUser',\n  Dropzone = 'dropzone'\n}\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['Int'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['Int'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  winds?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['Int']>;\n  jumpRun?: Maybe<Scalars['Int']>;\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['String']>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser, Transaction, TransactionType } from '../../../api/schema.d';\n\ntype Fields = Pick<Transaction, 'amount' | 'transactionType' | 'message'>;\n\ninterface IDropzoneEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Transaction[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    amount: {\n      value: null,\n      error: null,\n    },\n    transactionType: {\n      value: TransactionType.Deposit,\n      error: null,\n    },\n    message: {\n      value: '',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/credits',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      console.log({ field });\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<DropzoneUser | boolean>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\nexport type DropzoneFields = Pick<\n  Dropzone,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'isPublic'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n  | 'requestPublication'\n>;\n\ninterface IDropzoneEditState {\n  original: Dropzone | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: Dropzone[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    isPublic: {\n      value: false,\n      error: null,\n    },\n    requestPublication: {\n      value: false,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as Dropzone)[typedKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ntype Fields = Pick<DropzoneUser, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUser[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneUserEditState, action: PayloadAction<boolean | DropzoneUser>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Extra } from '../../../api/schema.d';\n\nexport type ExtraFields = Pick<Extra, 'name' | 'cost' | 'ticketTypes'>;\ninterface IExtraEditState {\n  original: Extra | null;\n  open: boolean;\n  fields: {\n    [K in keyof ExtraFields]-?: {\n      value: Extra[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IExtraEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    ticketTypes: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/extra',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IExtraEditState, action: PayloadAction<boolean | Extra>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.ticketTypes.value = action.payload.ticketTypes;\n        state.fields.cost.value = action.payload.cost;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: IExtraEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Load } from '../../../api/schema.d';\n\nexport type LoadFields = Pick<\n  Load,\n  'name' | 'gca' | 'dispatchAt' | 'isOpen' | 'loadMaster' | 'pilot' | 'maxSlots' | 'plane'\n>;\n\ninterface ILoadEditState {\n  original: Load | null;\n  open: boolean;\n  fields: {\n    [K in keyof LoadFields]-?: {\n      value: Load[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ILoadEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    gca: {\n      value: null,\n      error: null,\n    },\n    dispatchAt: {\n      value: null,\n      error: null,\n    },\n    isOpen: {\n      value: true,\n      error: null,\n    },\n    loadMaster: {\n      value: null,\n      error: null,\n    },\n    pilot: {\n      value: null,\n      error: null,\n    },\n    plane: {\n      value: null,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/load',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ILoadEditState, action: PayloadAction<boolean | Load>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ILoadEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Federation, User, DropzoneUser } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email' | 'license'> &\n  Pick<DropzoneUser, 'role'>;\n\ninterface IGhostEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (state: IGhostEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (state: IGhostEditState, action: PayloadAction<boolean | User>) => {\n      console.log('Setting open');\n      console.log(action.payload);\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Plane } from '../../../api/schema.d';\n\nexport type PlaneFields = Pick<\n  Plane,\n  'name' | 'registration' | 'minSlots' | 'maxSlots' | 'hours' | 'nextMaintenanceHours'\n>;\n\ninterface IPlaneEditState {\n  original: Plane | null;\n  open: boolean;\n  fields: {\n    [K in keyof PlaneFields]-?: {\n      value: Plane[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IPlaneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    registration: {\n      value: '',\n      error: null,\n    },\n    minSlots: {\n      value: 0,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n    hours: {\n      value: null,\n      error: null,\n    },\n    nextMaintenanceHours: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'Plane',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IPlaneEditState, action: PayloadAction<boolean | Plane>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.hours.value = action.payload.hours || 0;\n        state.fields.minSlots.value = action.payload.minSlots || 0;\n        state.fields.maxSlots.value = action.payload.maxSlots || 3;\n        state.fields.name.value = action.payload.name || '';\n        state.fields.registration.value = action.payload.registration || '';\n        state.fields.nextMaintenanceHours.value = action.payload.nextMaintenanceHours || 0;\n      }\n    },\n\n    reset: (state: IPlaneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig } from '../../../api/schema.d';\n\nexport type RigFields = Pick<\n  Rig,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: Rig | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: Rig[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | Rig>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        console.error('Failed to read rig inspection template', error.message, action.payload);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Slot } from '../../../api/schema.d';\n\nexport type ManifestUserFields = Pick<\n  Slot,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: Slot | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | Slot>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotUser, Slot, DropzoneUser, Rig } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = SlotUser & { rig?: Rig };\n\ninterface IFields extends Pick<Slot, 'jumpType' | 'load' | 'ticketType' | 'extras'> {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (state: ISlotEditState, action: PayloadAction<Slot[]>) => {\n      state.fields.users.value = action.payload.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUser[];\n\n      state.fields.jumpType.value = action.payload.find((i) => i)?.jumpType;\n      state.fields.load.value = action.payload.find((i) => i)?.load || null;\n      state.fields.extras.value = action.payload.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (state: ISlotEditState, action: PayloadAction<DropzoneUser[]>) => {\n      state.fields.users.value = action.payload.map<SlotUser>((dzUser) => ({\n        id: Number(dzUser.id),\n        rigId: Number(dzUser?.availableRigs?.find(({ id }) => id)?.id),\n        exitWeight: Number(dzUser?.user?.exitWeight),\n      })) as SlotUser[];\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketType } from '../../../api/schema.d';\n\nexport type TicketTypeFields = Pick<\n  TicketType,\n  'name' | 'cost' | 'isTandem' | 'allowManifestingSelf' | 'altitude' | 'extras'\n>;\n\ninterface ITicketTypeEditState {\n  original: TicketType | null;\n  open: boolean;\n  fields: {\n    [K in keyof TicketTypeFields]-?: {\n      value: TicketType[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ITicketTypeEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    altitude: {\n      value: 14000,\n      error: null,\n    },\n    allowManifestingSelf: {\n      value: false,\n      error: null,\n    },\n    isTandem: {\n      value: false,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ticketType',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ITicketTypeEditState, action: PayloadAction<boolean | TicketType>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.altitude.value = action.payload.altitude || 0;\n        state.fields.cost.value = action.payload.cost || 0;\n        state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: ITicketTypeEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser, Federation, User } from '../../../api/schema.d';\n\nexport type UserFields = Pick<\n  User,\n  'exitWeight' | 'rigs' | 'name' | 'phone' | 'email' | 'license' | 'apfNumber' | 'nickname'\n>;\n\ninterface IUserEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: User[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IUserEditState, action: PayloadAction<boolean | DropzoneUser>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload.user;\n        state.open = true;\n        state.federation.value =\n          action.payload.license?.federation || action.payload?.dropzone?.federation || null;\n        if (\n          state.federation.value &&\n          action.payload.user?.userFederations?.find(\n            ({ federation }) => federation.id === state.federation.value?.id\n          )?.uid\n        ) {\n          state.fields.apfNumber.value = action.payload.user?.userFederations?.find(\n            ({ federation }) => federation.id === state.federation.value?.id\n          )?.uid;\n        }\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as DropzoneUser).user[typedKey];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherCondition } from '../../../api/schema.d';\n\ntype Fields = Pick<\n  WeatherCondition,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherCondition | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherCondition>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherCondition)[typedKey];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig, User } from '../../../api/schema.d';\n\ninterface IUserWizardState {\n  open: boolean;\n  fields: {\n    skipRigSetup: {\n      value: boolean;\n      error: string | null;\n    };\n    user: {\n      value: User | null;\n      error: string | null;\n    };\n    rig: {\n      value: Rig | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserWizardState = {\n  open: false,\n  fields: {\n    user: {\n      value: null,\n      error: null,\n    },\n    skipRigSetup: {\n      value: false,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/userWizard',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IUserWizardState['fields']>(\n      state: IUserWizardState,\n      action: PayloadAction<[T, IUserWizardState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n    },\n    setFieldError: <T extends keyof IUserWizardState['fields']>(\n      state: IUserWizardState,\n      action: PayloadAction<[T, IUserWizardState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IUserWizardState, action: PayloadAction<boolean | User>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.fields = initialState.fields;\n      } else {\n        state.fields.user.value = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IUserWizardState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\ninterface IDropzoneWizardState {\n  open: boolean;\n  complete: boolean;\n  fields: {\n    dropzone: {\n      value: Dropzone | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  open: false,\n  complete: false,\n  fields: {\n    dropzone: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneWizard',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneWizardState['fields']>(\n      state: IDropzoneWizardState,\n      action: PayloadAction<[T, IDropzoneWizardState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n    },\n    setFieldError: <T extends keyof IDropzoneWizardState['fields']>(\n      state: IDropzoneWizardState,\n      action: PayloadAction<[T, IDropzoneWizardState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneWizardState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.fields = initialState.fields;\n      } else {\n        state.fields.dropzone.value = action.payload;\n        state.open = true;\n      }\n    },\n\n    complete: (state: IDropzoneWizardState, action: PayloadAction<boolean | undefined>) => {\n      state.complete = action.payload !== undefined ? action.payload : true;\n    },\n\n    reset: (state: IDropzoneWizardState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import * as credits from './credits/slice';\nimport * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as extra from './extra/slice';\nimport * as load from './load/slice';\nimport * as ghost from './ghost/slice';\nimport * as plane from './plane/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as ticketType from './ticket_type/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\nimport * as userWizard from '../dialogs/UserWizard/slice';\nimport * as dropzoneWizard from '../../screens/authenticated/dropzone_setup/slice';\n\nexport const initialState = {\n  credits: credits.initialState,\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  extra: extra.initialState,\n  ghost: ghost.initialState,\n  load: load.initialState,\n  plane: plane.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  ticketType: ticketType.initialState,\n  user: user.initialState,\n  userWizard: userWizard.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  credits: credits.default,\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  extra: extra.default,\n  ghost: ghost.default,\n  load: load.default,\n  plane: plane.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  ticketType: ticketType.default,\n  user: user.default,\n  userWizard: userWizard.default,\n  dropzoneWizard: dropzoneWizard.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUser[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (state: IManifestScreenState, action: PayloadAction<DropzoneUser[]>) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import * as users from './authenticated/users/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { Credential, User, Dropzone } from '../api/schema';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n    primary: '#333333',\n  },\n};\nconst CombinedDarkTheme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: '#333333',\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: User | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: Dropzone | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<User>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<Dropzone | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    toggleDarkMode: (state: IGlobalState) => {\n      state.isDarkMode = !state.isDarkMode;\n      state.theme = state.isDarkMode ? CombinedDarkTheme : CombinedDefaultTheme;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'warning';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationState {\n  queue: INotification[];\n}\n\nexport const initialState = { queue: [] } as INotificationState;\nexport default createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    hideSnackbar: (state: INotificationState) => {\n      const [, ...newQueue] = state.queue;\n      state.queue = newQueue;\n    },\n    showSnackbar: (state: INotificationState, action: PayloadAction<INotification>) => {\n      state.queue.push(action.payload);\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\nimport notificationSlice, {\n  initialState as initialStateNotification,\n} from '../components/notifications/slice';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  notifications: initialStateNotification,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  notifications: notificationSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  notifications: notificationSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport LottieView from 'lottie-react-native';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const dispatch = useAppDispatch();\n\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      setOverlay(true);\n    }\n  }, []);\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'New version installed' }));\n    }\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport { RetryLink } from '@apollo/client/link/retry';\nimport * as React from 'react';\nimport * as Update from 'expo-updates';\nimport Constants from 'expo-constants';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const httpBatchLink = React.useMemo(\n    () =>\n      new BatchHttpLink({\n        batchDebounce: true,\n        batchMax: 10,\n        uri:\n          Update.releaseChannel in Constants.manifest?.extra?.urls\n            ? Constants.manifest?.extra?.urls[Update.releaseChannel]\n            : Constants.manifest?.extra?.url,\n      }),\n    []\n  );\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Session expired`,\n              variant: 'error',\n            })\n          );\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`,\n                variant: 'error',\n              })\n            );\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `[Network error]: ${networkError}`,\n              variant: 'error',\n            })\n          );\n        }\n      }),\n    [dispatch]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link: errorLink.concat(authLink).concat(new RetryLink()).concat(httpBatchLink),\n        cache: new InMemoryCache(),\n      }),\n    [authLink, errorLink, httpBatchLink]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport capitalize from 'lodash/capitalize';\nimport LottieView from 'lottie-react-native';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport { useAppSelector, useAppDispatch } from '../../state';\nimport slice from './slice';\nimport usePalette from '../../hooks/usePalette';\nimport lottieDoneAnimation from '../../../assets/images/finished.json';\n\nconst { actions } = slice;\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\nconst Notifications = () => {\n  const state = useAppSelector((root) => root.notifications);\n  const dispatch = useAppDispatch();\n  const palette = usePalette();\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(\n    () => (state.queue.length ? state.queue[0] : null),\n    [state.queue]\n  );\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide: () => dispatch(actions.hideSnackbar()),\n        text1: capitalize(notification.variant),\n        text2: notification.message,\n        type: notification.variant || 'success',\n      });\n    }\n  }, [dispatch, notification]);\n\n  const variantStyle = {\n    info: { backgroundColor: palette.info },\n    success: { backgroundColor: palette.success },\n    error: { backgroundColor: palette.error },\n    warning: { backgroundColor: palette.warning },\n  };\n\n  return (\n    <>\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            onAnimationFinish={() => {\n              setAnimationState(AnimationState.waiting);\n              setTimeout(() => {\n                dispatch(actions.hideSnackbar());\n                setAnimationState(AnimationState.closed);\n              }, 200);\n            }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast\n        ref={(ref) => Toast.setRef(ref)}\n        autoHide\n        visibilityTime={4000}\n        position=\"bottom\"\n        type=\"success\"\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 420,\n    width: 420,\n  },\n});\nexport default Notifications;\n","import { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nconst options: LinkingOptions = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      confirm: {\n        path: '/confirm',\n      },\n      Authenticated: {\n        screens: {\n          HomeScreen: '/home',\n          LoadScreen: '/load/:load_id',\n          PackingScreen: '/packing',\n          ProfileScreen: '/user/:id',\n          SetupScreen: '/dropzone/setup',\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzonesScreen: '/dropzones',\n          CreateDropzoneScreen: '/dropzone/create',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport default options;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport { FieldError, Mutation } from './schema';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern: new RegExp(\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    ),\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  }\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: Mutation) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        onFieldError?.(`${fieldName}`, message);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          onError?.(err.message);\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { MutationUpdateUserArgs, UpdateUserPayload } from '../schema';\n\nconst MUTATION_UPDATE_USER = gql`\n  mutation UpdateUser(\n    $id: Int\n    $name: String\n    $phone: String\n    $email: String\n    $pushToken: String\n    $nickname: String\n    $licenseId: Int\n    $exitWeight: Float\n  ) {\n    updateUser(\n      input: {\n        id: $id\n        attributes: {\n          pushToken: $pushToken\n          name: $name\n          phone: $phone\n          email: $email\n          nickname: $nickname\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        pushToken\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        userFederations {\n          id\n          license {\n            id\n            name\n          }\n          federation {\n            id\n            name\n            slug\n          }\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateUserArgs['input']['attributes'],\n  UpdateUserPayload\n>(MUTATION_UPDATE_USER, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    phone: [isRequired('Phone number is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useMutationUpdateUser from './useMutationUpdateUser';\n\nexport const QUERY_DROPZONE = gql`\n  query QueryDropzone($dropzoneId: Int!, $earliestTimestamp: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n      lat\n      lng\n      name\n      primaryColor\n      secondaryColor\n      isPublic\n      requestPublication\n      planes {\n        id\n        name\n        registration\n      }\n      ticketTypes {\n        id\n        name\n      }\n\n      currentConditions {\n        id\n        jumpRun\n        temperature\n        offsetDirection\n        offsetMiles\n        winds {\n          altitude\n          speed\n          direction\n        }\n      }\n\n      currentUser {\n        id\n        credits\n        hasCredits\n        hasExitWeight\n        hasMembership\n        hasReserveInDate\n        hasRigInspection\n        hasLicense\n        permissions\n        expiresAt\n\n        user {\n          id\n          nickname\n          name\n          moderationRole\n        }\n\n        role {\n          id\n          name\n        }\n\n        rigInspections {\n          id\n          isOk\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          rig {\n            id\n          }\n        }\n\n        orders {\n          edges {\n            node {\n              id\n              title\n              state\n              createdAt\n              title\n              amount\n              buyer {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              seller {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              item {\n                title\n                cost\n              }\n              item {\n                title\n                cost\n\n                ... on Slot {\n                  id\n\n                  ticketType {\n                    id\n                    name\n                    cost\n                  }\n\n                  extras {\n                    id\n                    name\n                    cost\n                  }\n                }\n                ... on TicketType {\n                  id\n                }\n                ... on Extra {\n                  id\n                  name\n                }\n              }\n              receipts {\n                id\n                transactions {\n                  id\n                  message\n                  transactionType\n                  status\n                  createdAt\n                  amount\n                  sender {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                  receiver {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        availableRigs {\n          name\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          pushToken\n          image\n\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n            packingCard\n\n            user {\n              id\n            }\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n\n      loads(earliestTimestamp: $earliestTimestamp) {\n        edges {\n          node {\n            id\n            name\n            loadNumber\n            isOpen\n            maxSlots\n            state\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function useCurrentDropzone() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n\n  const currentDropzone = useQuery<Query>(QUERY_DROPZONE, {\n    variables: {\n      dropzoneId,\n      earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: () => null,\n  });\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const userId = currentDropzone?.data?.dropzone?.currentUser?.user?.id;\n    const remoteToken = currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken;\n    const localToken = pushToken;\n\n    if (!currentDropzone.loading && currentDropzone.called) {\n      if (localToken && localToken !== remoteToken && userId) {\n        mutationUpdateUser.mutate({\n          id: Number(userId),\n          pushToken: localToken,\n        });\n      }\n    }\n  }, [\n    pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.id,\n    currentDropzone.loading,\n    currentDropzone.called,\n    mutationUpdateUser,\n  ]);\n\n  return {\n    ...currentDropzone,\n    dropzone: currentDropzone?.data?.dropzone,\n    currentUser: currentDropzone?.data?.dropzone?.currentUser,\n  };\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions =  {}\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    id\n    name\n  }\n}\n    `;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    id\n    isOk\n    inspectedBy {\n      id\n      user {\n        id\n        name\n      }\n    }\n    rig {\n      id\n    }\n  }\n  orders {\n    edges {\n      node {\n        id\n        title\n        state\n        createdAt\n        title\n        amount\n        buyer {\n          __typename\n          ... on DropzoneUser {\n            id\n            user {\n              id\n              name\n            }\n          }\n          ... on Dropzone {\n            id\n            name\n          }\n        }\n        seller {\n          __typename\n          ... on DropzoneUser {\n            id\n            user {\n              id\n              name\n            }\n          }\n          ... on Dropzone {\n            id\n            name\n          }\n        }\n        item {\n          title\n          cost\n          ... on Slot {\n            id\n            ticketType {\n              id\n              name\n              cost\n            }\n            extras {\n              id\n              name\n              cost\n            }\n          }\n          ... on TicketType {\n            id\n          }\n          ... on Extra {\n            id\n            name\n          }\n        }\n        receipts {\n          id\n          transactions {\n            id\n            message\n            transactionType\n            status\n            createdAt\n            amount\n            sender {\n              ... on DropzoneUser {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n              ... on Dropzone {\n                id\n                name\n              }\n            }\n            receiver {\n              ... on DropzoneUser {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n              ... on Dropzone {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  availableRigs {\n    name\n    id\n    make\n    model\n    canopySize\n    serial\n    user {\n      id\n    }\n  }\n  license {\n    id\n    name\n  }\n  user {\n    id\n    name\n    moderationRole\n    nickname\n    exitWeight\n    email\n    phone\n    pushToken\n    image\n    rigs {\n      id\n      name\n      model\n      make\n      serial\n      canopySize\n      repackExpiresAt\n      packingCard\n      user {\n        id\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n    license {\n      id\n      name\n    }\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  lat\n  lng\n  name\n  primaryColor\n  secondaryColor\n  planes {\n    id\n    name\n    registration\n  }\n  ticketTypes {\n    id\n    name\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  currentConditions {\n    id\n    jumpRun\n    temperature\n    offsetDirection\n    offsetMiles\n    winds {\n      altitude\n      speed\n      direction\n    }\n  }\n  loads(earliestTimestamp: $earliestTimestamp) {\n    edges {\n      node {\n        id\n        name\n        loadNumber\n        isOpen\n        maxSlots\n        state\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\nexport const SlotFragmentDoc = gql`\n    fragment slot on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  dropzoneUser {\n    id\n    role {\n      id\n      name\n    }\n    user {\n      id\n      name\n      nickname\n      exitWeight\n      image\n      license {\n        id\n        name\n      }\n    }\n  }\n  ticketType {\n    id\n    name\n    altitude\n    isTandem\n    extras {\n      id\n      name\n      cost\n    }\n  }\n  jumpType {\n    id\n    name\n  }\n  extras {\n    id\n    name\n  }\n}\n    `;\nexport const LoadFragmentDoc = gql`\n    fragment load on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n  plane {\n    id\n    maxSlots\n    name\n  }\n  gca {\n    id\n    user {\n      id\n      name\n    }\n  }\n  pilot {\n    id\n    user {\n      id\n      name\n    }\n  }\n  loadMaster {\n    id\n    user {\n      id\n      name\n    }\n  }\n  slots {\n    ...slot\n  }\n}\n    ${SlotFragmentDoc}`;\nexport const TransactionFragmentDoc = gql`\n    fragment transaction on Transaction {\n  id\n  transactionType\n  amount\n  status\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const OrderFragmentDoc = gql`\n    fragment order on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  buyer {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    id\n    amountCents\n    createdAt\n    updatedAt\n    transactions {\n      ...transaction\n    }\n  }\n}\n    ${TransactionFragmentDoc}`;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: WalletInput!, $seller: WalletInput!, $dropzoneId: Int!, $title: String, $amount: Int!) {\n  createOrder(\n    input: {attributes: {dropzoneId: $dropzoneId, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...order\n    }\n  }\n}\n    ${OrderFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzoneId: // value for 'dropzoneId'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...load\n    }\n  }\n}\n    ${LoadFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federationId: Int!, $uid: String, $licenseId: Int) {\n  joinFederation(\n    input: {attributes: {federationId: $federationId, uid: $uid, licenseId: $licenseId}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federationId: // value for 'federationId'\n *      uid: // value for 'uid'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: Int!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const QueryDropzoneUserProfileDocument = gql`\n    query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    dropzoneUser(id: $dropzoneUserId) {\n      id\n      credits\n      expiresAt\n      permissions\n      role {\n        id\n        name\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n        image\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n          repackExpiresAt\n        }\n        jumpTypes {\n          id\n          name\n        }\n        license {\n          id\n          name\n          federation {\n            id\n            name\n          }\n        }\n      }\n      slots {\n        edges {\n          node {\n            id\n            createdAt\n            load {\n              id\n              name\n              loadNumber\n              dispatchAt\n              createdAt\n            }\n            jumpType {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useQueryDropzoneUserProfile__\n *\n * To run a query within a React component, call `useQueryDropzoneUserProfile` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzoneUserProfile` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzoneUserProfile({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useQueryDropzoneUserProfile(baseOptions: Apollo.QueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n      }\nexport function useQueryDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n        }\nexport type QueryDropzoneUserProfileHookResult = ReturnType<typeof useQueryDropzoneUserProfile>;\nexport type QueryDropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useQueryDropzoneUserProfileLazyQuery>;\nexport type QueryDropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        id\n        name\n      }\n      permissions\n    }\n  }\n}\n    `;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;","import * as React from 'react';\nimport { Permission } from '../api/schema.d';\nimport { useCurrentUserPermissionsLazyQuery } from '../api/reflection';\nimport { useAppSelector } from '../state';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [execute, { data }] = useCurrentUserPermissionsLazyQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      execute({\n        variables: {\n          dropzoneId: Number(currentDropzoneId),\n        },\n      });\n    }\n  }, [currentDropzoneId, execute]);\n\n  const permissions = data?.dropzone?.currentUser?.permissions || [];\n  return permissions?.includes(permission as Permission) || false;\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: DropzoneUser): void;\n}\n\nexport const QUERY_PERMISSION_USER = gql`\n  query QueryGCAUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PERMISSION_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: ['actAsGCA'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No gca'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"radio-handheld\"\n          selectedColor={color}\n          onPress={() => setMenuOpen(true)}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n        >\n          {value?.id ? value?.user?.name : 'No gca'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`gca-chip-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge?.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Slot, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\n\ninterface ILoadMasterChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: Slot[];\n  onSelect(user: DropzoneUser): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"shield-account\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No loadmaster'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-account\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No loadmaster'}\n        </Chip>\n      }\n    >\n      {slots?.map((slot) => (\n        <Menu.Item\n          key={`lm-chip-${slot.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (slot?.dropzoneUser) {\n              onSelect(slot.dropzoneUser);\n            }\n          }}\n          title={slot?.dropzoneUser?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: DropzoneUser | null;\n  onSelect(user: DropzoneUser): void;\n}\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryPilotUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n      permissions: ['actAsPilot'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No pilot'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No pilot'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`pilot-select-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Plane, Permission, Query } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPlaneChipSelect {\n  value?: Plane | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QueryChipPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"airplane-takeoff\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n      }}\n      textStyle={{\n        color,\n        fontSize: small ? 12 : undefined,\n      }}\n    >\n      {value?.name || 'No plane'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.name || 'No plane'}\n        </Chip>\n      }\n    >\n      {data?.planes?.map((plane) => (\n        <Menu.Item\n          key={`lm-plane-chip-${plane.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(plane as Plane);\n          }}\n          title={plane.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { TextInput, useTheme } from 'react-native-paper';\n\ninterface INumberFieldProps {\n  error?: boolean;\n  label?: string;\n  value?: number | null;\n  onChangeText(newValue: number): void;\n}\nexport default function NumberField(props: INumberFieldProps) {\n  const { onChangeText: onChangeValue, ...rest } = props;\n  const { value } = rest;\n  const theme = useTheme();\n\n  const onChangeText = React.useCallback(\n    (text: string) => {\n      if (/\\d/.test(text)) {\n        const [numbers] = text.match(/^\\-?\\d+/) || ['0'];\n        onChangeValue(Number(numbers));\n      }\n    },\n    [onChangeValue]\n  );\n  return (\n    <TextInput\n      {...rest}\n      {...{ onChangeText }}\n      value={`${value || 0}`}\n      mode=\"outlined\"\n      keyboardType=\"number-pad\"\n      right={\n        <TextInput.Affix\n          textStyle={{\n            height: '100%',\n          }}\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          text={\n            <View style={styles.chevrons}>\n              <TouchableOpacity\n                style={[\n                  styles.affixTopChevron,\n                  { borderColor: theme.colors.text, backgroundColor: theme.colors.surface },\n                ]}\n                onPress={() => onChangeValue?.((value || 0) + 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-up\" size={24} />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.affixBottomChevron, { backgroundColor: theme.colors.surface }]}\n                onPress={() => onChangeValue?.((value || 0) - 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-down\" size={24} />\n              </TouchableOpacity>\n            </View>\n          }\n        />\n      }\n      caretHidden={false}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  affixBottomChevron: {\n    width: 48,\n    height: 54 / 2,\n    alignItems: 'center',\n    borderLeftWidth: StyleSheet.hairlineWidth,\n  },\n  affixTopChevron: {\n    width: 48,\n    height: 54 / 2,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderLeftWidth: StyleSheet.hairlineWidth,\n    alignItems: 'center',\n  },\n  chevrons: {\n    width: 48,\n    height: 59,\n    paddingTop: 4,\n    marginRight: -10,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  },\n});\n","import { DocumentNode, useQuery } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport { Query } from './schema';\nimport { actions, useAppDispatch } from '../state';\n\nexport interface IAppQuery<Payload, InputType> {\n  data: Maybe<Payload>;\n  loading: boolean;\n  refetch(variables?: InputType): void;\n}\n\nexport interface IAppQueryProps<InputType> {\n  onError?(message: string): void;\n  pollInterval?: number;\n  showSnackbarErrors?: boolean;\n  variables?: InputType;\n}\n\nexport function createQuery<\n  Payload extends Maybe<Record<string, unknown>>,\n  InputType extends object\n>(\n  query: DocumentNode,\n  options: {\n    getPayload(query?: Query): Maybe<Payload>;\n  }\n) {\n  const { getPayload } = options;\n\n  return function useAppQuery(opts: IAppQueryProps<InputType>): IAppQuery<Payload, InputType> {\n    const { variables, pollInterval, onError } = opts;\n    const dispatch = useAppDispatch();\n\n    const { data, loading, refetch, error } = useQuery(query, {\n      variables,\n      pollInterval,\n    });\n\n    const transformedData = React.useMemo(() => getPayload(data), [data]);\n\n    React.useEffect(() => {\n      if (error?.message) {\n        if (opts.showSnackbarErrors !== false) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n\n        onError?.(error.message);\n      }\n    }, [opts.onError, error?.message, opts.showSnackbarErrors, onError, dispatch]);\n\n    return {\n      loading,\n      data: transformedData,\n      refetch,\n    };\n  };\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Chip } from 'react-native-paper';\n\ninterface IChipSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  icon?: string;\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction ChipSelect<T extends Record<string, unknown> | string>(props: IChipSelect<T>) {\n  const {\n    items,\n    selected,\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChangeSelected,\n    autoSelectFirst,\n  } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n      {items.map((item) => (\n        <Chip\n          key={JSON.stringify(item)}\n          mode=\"outlined\"\n          icon={!selected.some((value) => isEqual(item, value)) && icon ? icon : undefined}\n          style={{ margin: 1 }}\n          disabled={isDisabled?.(item) || false}\n          selected={isSelected ? isSelected(item) : selected.some((value) => isEqual(item, value))}\n          onPress={() =>\n            onChangeSelected(\n              selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n            )\n          }\n        >\n          {renderItemLabel(item)}\n        </Chip>\n      ))}\n    </View>\n  );\n}\n\nexport default React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof ChipSelect;\n","import * as React from 'react';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpType | null;\n  userId?: number | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: JumpType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  { jumpTypes: JumpType[]; allowedJumpTypes: JumpType[] },\n  {\n    dropzoneId: number;\n    userIds: number[];\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypes({\n    variables: {\n      userIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: Number(currentDropzoneId),\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={\n          uniqBy([...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])], ({ id }) => id) ||\n          []\n        }\n        selected={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { TicketType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketType | null;\n  onlyPublicTickets?: boolean;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: TicketType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES = gql`\n  query DropzoneUsersAllowedTicketTypes($dropzoneId: Int!, $onlyPublicTickets: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      ticketTypes(isPublic: $onlyPublicTickets) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst useTicketTypes = createQuery<\n  { ticketTypes: TicketType[] },\n  {\n    dropzoneId: number;\n    onlyPublicTickets?: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES, {\n  getPayload: (query) => ({\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n  }),\n});\n\nexport default function TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onSelect, onlyPublicTickets } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useTicketTypes({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={data?.ticketTypes || []}\n        selected={[value].filter(Boolean) as TicketType[]}\n        renderItemLabel={(ticketType) => ticketType?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useLazyQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { Badge, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Rig, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRigSelect {\n  dropzoneId?: number;\n  userId?: number;\n  value?: Rig | null;\n  tandem?: boolean;\n  autoSelectFirst?: boolean;\n  onSelect(rig: Rig): void;\n}\n\nfunction RigTitle(props: { rig: Rig }): JSX.Element {\n  const theme = useTheme();\n  const { rig } = props;\n  const name = rig?.name || `${rig?.make} ${rig?.model}`;\n\n  return (\n    <>\n      <Text>{`${name} (${rig?.canopySize} sqft)`}</Text>\n      {!rig.user ? (\n        <View\n          style={{\n            padding: 2,\n            paddingHorizontal: 4,\n            backgroundColor: theme.colors.accent,\n            borderRadius: 16,\n          }}\n        >\n          <Text style={{ fontSize: 10, color: 'white' }}>Dropzone rig</Text>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nconst QUERY_RIGS = gql`\n  query QueryAvailableRigs($dropzoneId: Int!, $userId: Int!, $isTandem: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n      dropzoneUser(userId: $userId) {\n        id\n        availableRigs(isTandem: $isTandem) {\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigSelect(props: IRigSelect) {\n  const { userId, value, autoSelectFirst, onSelect, dropzoneId, tandem } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [fetchRigs, { data }] = useLazyQuery<Query>(QUERY_RIGS, {\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (userId && dropzoneId) {\n      fetchRigs({\n        variables: {\n          dropzoneId: currentDropzoneId,\n          userId: Number(userId),\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [userId, dropzoneId, fetchRigs, currentDropzoneId, tandem]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.dropzone?.dropzoneUser?.availableRigs?.length) {\n      onSelect(data.dropzone.dropzoneUser.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.dropzone.dropzoneUser?.availableRigs, onSelect, value]);\n\n  return (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <TextInput\n          onTouchEnd={() => setMenuOpen(true)}\n          label=\"Select rig\"\n          value={\n            value\n              ? `${value?.name || `${value?.make} ${value?.model}`} (${value?.canopySize} sqft)`\n              : undefined\n          }\n          left={() => <List.Icon icon=\"parachute\" />}\n          editable={false}\n          mode=\"outlined\"\n        />\n      }\n    >\n      {data?.dropzone?.dropzoneUser?.availableRigs?.map((rig) => (\n        <Menu.Item\n          key={`rig-select-${rig.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(rig);\n          }}\n          style={{ width: '100%' }}\n          title={<RigTitle rig={rig} />}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { TextInput, HelperText, Divider, Chip, List } from 'react-native-paper';\nimport NumberField from '../../input/number_input/NumberField';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Permission } from '../../../api/schema.d';\nimport JumpTypeChipSelect from '../../input/chip_select/JumpTypeChipSelect';\nimport TicketTypeChipSelect from '../../input/chip_select/TicketTypeChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function ManifestForm() {\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.manifest);\n  React.useEffect(() => {\n    if (state.fields.dropzoneUser?.value) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.manifest.setField([\n            'exitWeight',\n            Number(state.fields.dropzoneUser?.value?.user?.exitWeight || 60),\n          ])\n        );\n      }\n\n      if (!state.fields.rig.value && state.fields.dropzoneUser.value.user?.rigs?.length) {\n        dispatch(\n          actions.forms.manifest.setField(['rig', state.fields.dropzoneUser?.value?.user.rigs[0]])\n        );\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.dropzoneUser.value,\n    state.fields.dropzoneUser.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.rig.value,\n  ]);\n\n  const isEdit = state?.original?.id;\n\n  const allowedToManifestOthers = useRestriction(\n    isEdit ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n\n  return (\n    <>\n      <JumpTypeChipSelect\n        value={state.fields.jumpType.value}\n        userId={Number(state?.fields?.dropzoneUser?.value?.user?.id) || null}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['jumpType', value]))}\n      />\n      <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n        {state.fields.jumpType.error || ''}\n      </HelperText>\n\n      <TicketTypeChipSelect\n        value={state.fields.ticketType.value}\n        onlyPublicTickets={!allowedToManifestOthers}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['ticketType', value]))}\n      />\n      <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n        {state.fields.ticketType.error || ''}\n      </HelperText>\n\n      {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n        <List.Subheader>Ticket addons</List.Subheader>\n      )}\n      <ScrollView horizontal style={styles.ticketAddons}>\n        {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n          <Chip\n            selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n            onPress={\n              state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                ? () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                      ])\n                    )\n                : () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        [...(state?.fields?.extras?.value || []), extra],\n                      ])\n                    )\n            }\n          >\n            {`${extra.name} ($${extra.cost})`}\n          </Chip>\n        ))}\n      </ScrollView>\n      <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n        {state.fields.extras.error || ''}\n      </HelperText>\n      <Divider />\n      {!state.fields.dropzoneUser ? null : (\n        <RigSelect\n          required\n          value={state.fields.rig.value}\n          userId={Number(state.fields.dropzoneUser?.value?.user?.id)}\n          dropzoneId={Number(currentDropzone?.dropzone?.id)}\n          onSelect={(value) => dispatch(actions.forms.manifest.setField(['rig', value]))}\n        />\n      )}\n      <HelperText type={state.fields.rig.error ? 'error' : 'info'}>\n        {state.fields.rig.error || ''}\n      </HelperText>\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.manifest.setField(['exitWeight', Number(newValue)]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      {!state.fields.ticketType.value?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger name\"\n            error={!!state.fields.passengerName.error}\n            value={state.fields.passengerName?.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerName', newValue]))\n            }\n          />\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger exit weight\"\n            error={!!state.fields.passengerExitWeight.error}\n            value={state.fields.passengerExitWeight.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerExitWeight', Number(newValue)]))\n            }\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotForm from '../../forms/manifest/ManifestForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOT = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $rigId: Int\n    $ticketTypeId: Int\n    $dropzoneUserId: Int\n    $exitWeight: Float\n    $passengerName: String\n    $passengerExitWeight: Float\n  ) {\n    createSlot(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          rigId: $rigId\n          ticketTypeId: $ticketTypeId\n          dropzoneUserId: $dropzoneUserId\n          exitWeight: $exitWeight\n          passengerExitWeight: $passengerExitWeight\n          passengerName: $passengerName\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      slot {\n        id\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n        exitWeight\n        load {\n          id\n          name\n          createdAt\n          dispatchAt\n          hasLanded\n          maxSlots\n          isFull\n          isOpen\n          plane {\n            id\n            name\n          }\n          gca {\n            id\n            user {\n              id\n              name\n            }\n          }\n          pilot {\n            id\n            user {\n              id\n              name\n            }\n          }\n          loadMaster {\n            id\n            user {\n              id\n              name\n            }\n          }\n          slots {\n            id\n            createdAt\n            user {\n              id\n              name\n            }\n            passengerName\n            passengerExitWeight\n            ticketType {\n              id\n              name\n              isTandem\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { onSuccess, open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlot, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOT);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlot({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          rigId: !state.fields.rig.value?.id ? null : Number(state.fields.rig.value?.id),\n          ticketTypeId: Number(state.fields.ticketType?.value?.id),\n          dropzoneUserId: Number(state.fields.dropzoneUser?.value?.id),\n          exitWeight: state.fields.exitWeight.value,\n          ...(!state.fields.ticketType.value?.isTandem\n            ? {}\n            : {\n                passengerName: state.fields.passengerName?.value,\n                passengerExitWeight: state.fields.passengerExitWeight?.value,\n              }),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifest.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifest.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifest.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifest.setFieldError(['ticketType', message]));\n          case 'rig':\n            return dispatch(actions.forms.manifest.setFieldError(['rig', message]));\n          case 'dropzone_user':\n            return dispatch(actions.forms.manifest.setFieldError(['dropzoneUser', message]));\n          case 'exit_weight':\n            return dispatch(actions.forms.manifest.setFieldError(['exitWeight', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlot?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlot?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlot?.fieldErrors?.length) {\n        onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlot,\n    onSuccess,\n    state.fields.dropzoneUser?.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.passengerExitWeight?.value,\n    state.fields.passengerName?.value,\n    state.fields.rig.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.ticketType.value?.isTandem,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} style={{ maxHeight: 500 }}>\n        <ProgressBar\n          indeterminate\n          visible={mutationData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>\n          {/* eslint-disable-next-line max-len */}\n          {`Manifest ${state?.fields?.dropzoneUser?.value?.user?.name} on ${state.fields.load?.value?.name}`}\n        </Dialog.Title>\n        <Dialog.ScrollArea>\n          <ScrollView>\n            <SlotForm />\n          </ScrollView>\n        </Dialog.ScrollArea>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.manifest.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          <Button onPress={onManifest}>Manifest</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Card,\n  TextInput,\n  ProgressBar,\n  Chip,\n  Divider,\n  List,\n  Button,\n} from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { DropzoneUser, Query, Rig } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport calculateWingLoading from '../../../utils/calculateWingLoading';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: number;\n  dropzoneId: number;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: Rig;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: Rig): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nconst QUERY_DROPZONE_USERS_MANIFEST_DETAILS = gql`\n  query QueryDropzoneUsersManifestDetails($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          license {\n            id\n            name\n          }\n          rigs {\n            id\n            name\n            make\n            model\n            canopySize\n          }\n        }\n        role {\n          id\n          name\n        }\n        user {\n          id\n          name\n          image\n        }\n      }\n    }\n  }\n`;\nconst useQueryDropzoneUsersDetails = createQuery<\n  Query['dropzone']['dropzoneUser'],\n  {\n    dropzoneId: number;\n    dropzoneUserId: number;\n  }\n>(QUERY_DROPZONE_USERS_MANIFEST_DETAILS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUser as DropzoneUser | null,\n});\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneId,\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { data, loading } = useQueryDropzoneUsersDetails({\n    variables: {\n      dropzoneUserId,\n      dropzoneId,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && data?.user?.exitWeight) {\n      onChangeExitWeight(Number(data.user.exitWeight));\n    }\n  }, [data?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={3}>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <Card.Title\n        title={data?.user.name}\n        left={() =>\n          data?.user?.image ? (\n            <Avatar.Image source={{ uri: data.user.image }} size={24} />\n          ) : (\n            <Avatar.Icon icon=\"account\" size={24} />\n          )\n        }\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"lock\" mode=\"outlined\" disabled>\n            {data?.role?.name}\n          </Chip>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {data?.license?.name}\n          </Chip>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip style={{ marginHorizontal: 1 }} icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n        </ScrollView>\n        <View style={styles.row}>\n          <View style={styles.rowFirst}>\n            <RigSelect\n              userId={dropzoneUserId}\n              dropzoneId={dropzoneId}\n              onSelect={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n            />\n          </View>\n          <View style={styles.rowLast}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              onChangeText={(num) => onChangeExitWeight(num)}\n              label=\"Exit weight (kg)\"\n            />\n          </View>\n        </View>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                  mode=\"outlined\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChangeText={(num) => onChangePassengerWeight?.(num)}\n                  label=\"Exit weight (kg)\"\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { HelperText, Divider, Chip, List, Card } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useRestriction from '../../../hooks/useRestriction';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType, Permission, TicketType } from '../../../api/schema.d';\n\nimport UserRigCard from './UserRigCard';\n\nconst QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!, $isPublic: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n\n      ticketTypes(isPublic: $isPublic) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  {\n    jumpTypes: JumpType[];\n    allowedJumpTypes: JumpType[];\n    ticketTypes: TicketType[];\n  },\n  {\n    dropzoneId: number;\n    userIds: number[];\n    isPublic: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypes({\n    variables: {\n      userIds: state.fields.users?.value?.map((slotUser) => slotUser.id) as number[],\n      dropzoneId: globalState.currentDropzoneId as number,\n      isPublic: canManifestOthers ? null : true,\n    },\n    onError: console.error,\n  });\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  return (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <Card elevation={2} style={{ marginBottom: 16, flexShrink: 1, marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={\n              uniqBy(\n                [...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n                ({ id }) => id\n              ) || []\n            }\n            selected={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n            renderItemLabel={(jumpType: JumpType) => jumpType.name}\n            isDisabled={(jumpType: JumpType) =>\n              !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n            }\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['jumpType', first as JumpType]))\n            }\n          />\n\n          <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n            {state.fields.jumpType.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n\n      <List.Subheader>Ticket</List.Subheader>\n      <Card elevation={2} style={{ marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={data?.ticketTypes || []}\n            selected={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n            renderItemLabel={(ticketType: TicketType) => ticketType.name}\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['ticketType', first as TicketType]))\n            }\n          />\n          <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n            {state.fields.ticketType.error || ''}\n          </HelperText>\n\n          {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n            <List.Subheader>Ticket addons</List.Subheader>\n          )}\n          <ScrollView horizontal style={styles.ticketAddons}>\n            {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n              <Chip\n                selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n                onPress={\n                  state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                    ? () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                          ])\n                        )\n                    : () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            [...(state?.fields?.extras?.value || []), extra],\n                          ])\n                        )\n                }\n              >\n                {`${extra.name} ($${extra.cost})`}\n              </Chip>\n            ))}\n          </ScrollView>\n          <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n            {state.fields.extras.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n      <Divider />\n\n      <List.Subheader>Group</List.Subheader>\n      {state.fields?.users?.value?.map((slotUser) => (\n        <UserRigCard\n          dropzoneId={globalState.currentDropzoneId as number}\n          dropzoneUserId={Number(slotUser.id)}\n          selectedRig={slotUser.rig || undefined}\n          exitWeight={slotUser.exitWeight}\n          onChangeExitWeight={(exitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n                ),\n              ])\n            )\n          }\n          onRemove={() =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n              ])\n            )\n          }\n          onChangeRig={(newRig) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id\n                    ? { ...slotUser, rigId: Number(newRig.id), rig: newRig }\n                    : user\n                ),\n              ])\n            )\n          }\n          {...{ isTandem }}\n          passengerName={slotUser.passengerName}\n          passengerWeight={slotUser.passengerExitWeight}\n          onChangePassengerName={(passengerName) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerName } : user\n                ),\n              ])\n            )\n          }\n          onChangePassengerWeight={(passengerExitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n                ),\n              ])\n            )\n          }\n        />\n      ))}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Paragraph, Title } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle }: INoResults) {\n  return (\n    <View style={styles.empty}>\n      <Title style={{ color }}>{title}</Title>\n      <Paragraph style={{ color, textAlign: 'center' }}>{subtitle}</Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Button, Checkbox, Divider, List, Searchbar } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport NoResults from '../../NoResults';\nimport { DropzoneUser, Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n              exitWeight\n            }\n\n            availableRigs {\n              id\n              name\n              make\n              model\n              canopySize\n              serial\n\n              user {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IUserListSelect {\n  onNext(): void;\n}\n\nexport default function UserListSelect(props: IUserListSelect) {\n  const { screens } = useAppSelector((root) => root);\n  const dispatch = useAppDispatch();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      search: searchText,\n    },\n  });\n\n  const { currentUser } = useCurrentDropzone();\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  return (\n    <>\n      <Searchbar value={searchText} onChangeText={setSearchText} placeholder=\"Search skydivers\" />\n      <View style={{ height: 380 }}>\n        <ScrollView contentContainerStyle={{ paddingTop: 16 }}>\n          {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n            <NoResults title=\"No users\" subtitle=\"\" />\n          )}\n\n          {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n            <React.Fragment key={`user-${edge?.node?.id || 0}`}>\n              <List.Item\n                style={{ width: '100%' }}\n                key={`user-${edge?.node?.id}`}\n                title={edge?.node?.user.name}\n                description={edge?.node?.role?.name}\n                left={() =>\n                  !edge?.node?.user?.image ? (\n                    <List.Icon icon=\"account\" />\n                  ) : (\n                    <Avatar.Image\n                      source={{ uri: edge?.node?.user.image }}\n                      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                      size={32}\n                    />\n                  )\n                }\n                right={() => (\n                  <Checkbox\n                    status={\n                      screens.manifest.selectedUsers\n                        ?.map<string>(({ id }) => id)\n                        .includes(edge?.node?.id as string)\n                        ? 'checked'\n                        : 'unchecked'\n                    }\n                  />\n                )}\n                disabled={\n                  // Dont allow removing current user if the user\n                  // can only manifest a group with themselves in it\n                  edge?.node?.user.id === currentUser?.id &&\n                  canManifestGroupWithSelfOnly &&\n                  !canManifestGroup\n                }\n                onPress={() => {\n                  dispatch(\n                    actions.screens.manifest.setSelected(\n                      screens.manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                        ? screens.manifest.selectedUsers?.filter(\n                            ({ id }) => id !== `${edge?.node?.id}`\n                          )\n                        : ([...screens.manifest.selectedUsers, edge?.node] as DropzoneUser[])\n                    )\n                  );\n                }}\n              />\n              <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n            </React.Fragment>\n          ))}\n        </ScrollView>\n      </View>\n      <Button\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n          props.onNext();\n        }}\n        style={styles.button}\n        mode=\"contained\"\n      >\n        Next\n      </Button>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  scrollView: {\n    height: 100,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\nimport UserListSelect from './UserListSelect';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const [tabIndex, setTabIndex] = React.useState(0);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        props.onClose();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    props,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={onClose}>\n        <View style={{ backgroundColor: 'white' }} testID=\"manifest-group-sheet\">\n          <View pointerEvents={(state.fields.users?.value?.length || 0) > 0 ? undefined : 'none'}>\n            <Tabs defaultIndex={tabIndex} mode=\"fixed\" onChangeIndex={setTabIndex}>\n              <TabScreen label=\"Create group\">\n                <View />\n              </TabScreen>\n              <TabScreen label=\"Configure jump\">\n                <View />\n              </TabScreen>\n            </Tabs>\n          </View>\n\n          {tabIndex === 0 ? (\n            <View style={styles.userListContainer}>\n              <UserListSelect onNext={() => setTabIndex(1)} />\n            </View>\n          ) : (\n            <ScrollView contentContainerStyle={{ paddingBottom: 200, flexGrow: 1 }}>\n              <ManifestGroupForm />\n              <View style={styles.buttonContainer}>\n                <Button\n                  onPress={onManifest}\n                  loading={mutationData.loading}\n                  mode=\"contained\"\n                  style={styles.button}\n                >\n                  Save\n                </Button>\n              </View>\n            </ScrollView>\n          )}\n        </View>\n      </Dialog>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: '100%',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Badge, Card, Chip, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ViewProps } from '../../../components/Themed';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlotCardProps {\n  slot: Slot;\n  style?: ViewProps['style'];\n  onPress?(slot: Slot): void;\n  onDelete?(slot: Slot): void;\n}\n\nexport default function SlotCard(props: ISlotCardProps) {\n  const { slot, onPress, onDelete, style } = props;\n  const theme = useTheme();\n\n  const hasPassenger = !!slot?.passengerName;\n  return (\n    <>\n      <Card\n        onPress={() => onPress?.(slot)}\n        elevation={3}\n        style={StyleSheet.flatten([styles.card, { marginBottom: hasPassenger ? -4 : 12 }, style])}\n      >\n        <Card.Title\n          title={slot?.dropzoneUser?.user.name || slot?.passengerName}\n          left={() =>\n            slot?.dropzoneUser?.user?.image ? (\n              <Avatar.Image\n                style={{ backgroundColor: theme.colors.surface }}\n                source={{ uri: slot?.dropzoneUser?.user.image }}\n                size={24}\n              />\n            ) : (\n              <Avatar.Icon\n                style={{ backgroundColor: theme.colors.surface }}\n                color={theme.dark ? theme.colors.text : theme.colors.primary}\n                icon=\"account\"\n                size={40}\n              />\n            )\n          }\n          right={() =>\n            !onDelete ? null : (\n              <Badge\n                style={{ marginTop: -45, marginRight: -5 }}\n                onPress={(e) => {\n                  e.preventDefault();\n                  onDelete?.(slot);\n                }}\n              >\n                -\n              </Badge>\n            )\n          }\n        />\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"lock\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.role?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"ticket-account\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.license?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"human-handsup\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.jumpType?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"arrow-up-bold\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.ticketType?.name}\n          </Chip>\n          {!slot.wingLoading ? null : (\n            <Chip\n              style={styles.chip}\n              textStyle={styles.chipText}\n              icon=\"escalator-down\"\n              mode=\"outlined\"\n              disabled\n            >\n              {slot.wingLoading.toFixed(2)}\n            </Chip>\n          )}\n        </Card.Content>\n      </Card>\n      {!slot?.passengerName ? null : (\n        <>\n          <View\n            style={{\n              width: '100%',\n              height: 30,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <MaterialCommunityIcons color={theme.colors.onSurface} name=\"link-variant\" size={30} />\n          </View>\n          <Card\n            style={StyleSheet.flatten([\n              { margin: 12, marginTop: -4, height: 150, width: '100%' },\n              style,\n            ])}\n            elevation={3}\n          >\n            <Card.Title\n              title={slot?.passengerName}\n              left={() => (\n                <Avatar.Icon\n                  icon=\"account-supervisor\"\n                  color={theme.dark ? theme.colors.text : theme.colors.primary}\n                  style={{ backgroundColor: theme.colors.surface }}\n                  size={40}\n                />\n              )}\n            />\n            <Card.Content>\n              <Text style={styles.passengerTitle}>P A S S E N G E R</Text>\n            </Card.Content>\n          </Card>\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  chip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  infoChip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  chipText: {\n    fontSize: 12,\n  },\n  passengerChip: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  passengerTitle: {\n    fontSize: 30,\n    opacity: 0.5,\n    alignSelf: 'center',\n    width: '100%',\n    textAlign: 'center',\n    color: '#CCCCCC',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema';\n\nconst MUTATION_UPDATE_LOAD = gql`\n  mutation UpdateLoad(\n    $id: Int!\n    $pilotId: Int\n    $gcaId: Int\n    $planeId: Int\n    $isOpen: Boolean\n    $loadMasterId: Int\n    $dispatchAt: Int\n    $hasLanded: Boolean\n  ) {\n    updateLoad(\n      input: {\n        id: $id\n        attributes: {\n          pilotId: $pilotId\n          gcaId: $gcaId\n          planeId: $planeId\n          isOpen: $isOpen\n          loadMasterId: $loadMasterId\n          dispatchAt: $dispatchAt\n          hasLanded: $hasLanded\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        createdAt\n        loadNumber\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          exitWeight\n\n          passengerName\n          passengerExitWeight\n\n          user {\n            id\n            name\n          }\n          ticketType {\n            id\n            name\n            altitude\n            isTandem\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(MUTATION_UPDATE_LOAD, {\n  getPayload: (result) => result.updateLoad,\n  fieldErrorMap: {\n    pilotId: 'pilot',\n    gcaId: 'gca',\n    planeId: 'plane',\n    loadMasterId: 'loadMaster',\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal } from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\n\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nimport { Load, Permission, LoadState } from '../../../api/schema.d';\nimport { useFinalizeLoadMutation } from '../../../api/reflection';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../../state';\n\ninterface ILoadActionButtonProps {\n  load: Load;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () => null,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const onManifest = React.useCallback(() => {\n    if (!currentUser?.hasLicense) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You need to select a license on your user profile',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasMembership) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your membership is out of date',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasExitWeight) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Update your exit weight on your profile before manifesting',\n          variant: 'warning',\n        })\n      );\n    }\n\n    if (!currentUser?.hasCredits) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You have no credits on your account',\n          variant: 'warning',\n        })\n      );\n    }\n\n    dispatch(actions.forms.manifest.setOpen(true));\n    dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n    dispatch(actions.forms.manifest.setField(['load', load]));\n    return null;\n  }, [currentUser, dispatch, load]);\n\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const createCallAction = React.useCallback(\n    (minutes: number | null) => () => {\n      setExpanded(false);\n      updateCall(minutes);\n    },\n    [updateCall]\n  );\n\n  const callActions = [\n    {\n      label: '20 minute call',\n      onPress: createCallAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createCallAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createCallAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const manifestActions = [\n    !showManifestButton\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => onManifest(),\n        },\n    !showGroupIcon\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createCallAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: () =>\n            mutationFinalizeLoad({\n              variables: { id: Number(load.id), state: LoadState.Cancelled },\n            }),\n        },\n    ![LoadState.Cancelled].includes(load.state)\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: () => onLanded(),\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n});\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, IconButton, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useAppSelector } from '../../../state';\nimport { Load } from '../../../api/schema';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: Load;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, onEdit, canEdit, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.surface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          {load?.dispatchAt && isAfter(load.dispatchAt * 1000, new Date()) ? (\n            <Countdown end={new Date(load.dispatchAt * 1000)} variant=\"light\" size={80} />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"shield-airplane\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 48,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          <>\n            <View\n              style={{ flex }}\n              // eslint-disable-next-line react/no-array-index-key\n              key={`info-grid-${i}`}\n            >\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_LOAD = gql`\n  query QueryLoad($id: Int!) {\n    load(id: $id) {\n      id\n      name\n      createdAt\n      dispatchAt\n      hasLanded\n      loadNumber\n      isFull\n      state\n      isOpen\n      weight\n      maxSlots\n      availableSlots\n      occupiedSlots\n      plane {\n        id\n        maxSlots\n        name\n      }\n      gca {\n        id\n        user {\n          id\n          name\n        }\n      }\n      pilot {\n        id\n        user {\n          id\n          name\n        }\n      }\n      loadMaster {\n        id\n        user {\n          id\n          name\n        }\n      }\n      slots {\n        id\n        createdAt\n        exitWeight\n        passengerName\n        passengerExitWeight\n        wingLoading\n        dropzoneUser {\n          id\n          role {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n          user {\n            id\n            name\n            exitWeight\n            license {\n              id\n              name\n            }\n          }\n        }\n        ticketType {\n          id\n          name\n          altitude\n          isTandem\n\n          extras {\n            id\n            name\n            cost\n          }\n        }\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['load'],\n  {\n    id: number;\n  }\n>(QUERY_LOAD, {\n  getPayload: (query) => query?.load,\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { DeleteSlotInput, DeleteSlotPayload } from '../schema';\n\nconst MUTATION_DELETE_SLOT = gql`\n  mutation DeleteSlot($id: Int!) {\n    deleteSlot(input: { id: $id }) {\n      slot {\n        id\n\n        dropzoneUser {\n          id\n          user {\n            id\n            name\n          }\n        }\n        load {\n          id\n          availableSlots\n          isOpen\n          weight\n          slots {\n            id\n            createdAt\n            exitWeight\n\n            passengerName\n            passengerExitWeight\n\n            user {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n              altitude\n              isTandem\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<DeleteSlotInput, DeleteSlotPayload>(MUTATION_DELETE_SLOT, {\n  getPayload: (result) => result.deleteSlot,\n});\n","import * as React from 'react';\nimport { Dimensions, RefreshControl, useWindowDimensions } from 'react-native';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { Card } from 'react-native-paper';\n\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../components/chips/PilotChip';\nimport PlaneChip from '../../../components/chips/PlaneChip';\nimport ManifestUserSheet from '../../../components/dialogs/ManifestUser/ManifestUser';\nimport ManifestGroupSheet from '../../../components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from '../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser, LoadState } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotCard from './SlotCard';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\nimport useQueryLoad from '../../../api/hooks/useQueryLoad';\nimport useMutationDeleteSlot from '../../../api/hooks/useMutationDeleteSlot';\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\n\nfunction AvailableSlotCard({ width }: { width: number }) {\n  return (\n    <Card\n      style={{\n        height: 150,\n        opacity: 0.5,\n        margin: 12,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      elevation={3}\n    >\n      <Card.Title\n        title=\"Available\"\n        style={{ alignSelf: 'center', justifyContent: 'center', flex: 1 }}\n        titleStyle={{ textAlign: 'center' }}\n      />\n    </Card>\n  );\n}\n\nfunction SlotSkeleton({ width }: { width: number }) {\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 150,\n        width,\n        margin: 12,\n      }}\n      layout={[{ key: 'user-card-container', height: 150, width }]}\n    />\n  );\n}\n\nexport default function LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const route = useRoute<{ key: string; name: string; params: { load: Load } }>();\n\n  const {\n    data: detailedLoad,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(route.params.load.id),\n    },\n    pollInterval: 30000,\n  });\n\n  const load = detailedLoad || route.params.load;\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const navigation = useNavigation();\n\n  const slots: (Slot | 2)[] = Array.from({\n    length: (load?.slots?.length || 0) + (load?.availableSlots || 0),\n  }).map((_, index) => ((load?.slots?.length || 0) > index ? (load.slots as Slot[])[index] : 2));\n\n  const maxSlots = load?.maxSlots || load?.plane?.maxSlots || 0;\n  const occupiedSlots = maxSlots - (load?.availableSlots || 0);\n\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 364;\n  const padding = 24;\n  const numColumns = Math.floor(width / (cardWidth + padding)) || 1;\n  let contentWidth = (cardWidth + padding) * numColumns + padding;\n  contentWidth = width < contentWidth ? width : contentWidth;\n\n  const initialLoading = !detailedLoad?.slots?.length && loading;\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.background }}>\n      <Header load={load}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ marginVertical: 8 }}>\n          <PlaneChip\n            value={load?.plane}\n            onSelect={async (plane) => {\n              if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'warning',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <GCAChip\n            value={load?.gca}\n            onSelect={updateGCA}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <PilotChip\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <LoadMasterChip\n            value={load?.loadMaster}\n            slots={load.slots || []}\n            onSelect={updateLoadMaster}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n        </ScrollView>\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      <FlatList\n        testID=\"slots\"\n        keyExtractor={(item, idx) => `slot-${item?.id || idx}`}\n        style={{ flex: 1, height: Dimensions.get('window').height }}\n        contentContainerStyle={{\n          width: contentWidth,\n          alignSelf: 'center',\n          justifyContent: 'space-evenly',\n          paddingBottom: 100,\n        }}\n        numColumns={numColumns}\n        horizontal={false}\n        data={!initialLoading ? slots : [1, 1, 1, 1, 1, 1, 1, 1]}\n        refreshing={loading}\n        onRefresh={refetch}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n        renderItem={({ item: node, index }) => {\n          if (node === 1) {\n            return <SlotSkeleton width={cardWidth} />;\n          }\n\n          return node === 2 ? (\n            <AvailableSlotCard key={`empty-slot-${index}`} width={cardWidth} />\n          ) : (\n            <SlotCard\n              style={{ width: cardWidth }}\n              key={`slot-${node.id}`}\n              slot={node}\n              onDelete={\n                (currentUser?.id === node?.dropzoneUser?.id && canRemoveSelf) || canRemoveOthers\n                  ? onDeleteSlot\n                  : undefined\n              }\n              onPress={(slot) => {\n                const slotGroup = load?.slots?.filter(\n                  ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n                );\n                const onSlotGroupPress = () => {\n                  if (slotGroup) {\n                    dispatch(actions.forms.manifestGroup.reset());\n                    dispatch(actions.forms.manifestGroup.setFromSlots(slotGroup));\n                    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n                    navigation.navigate('ManifestGroupScreen');\n                  }\n                };\n                const onSlotPress = () => {\n                  dispatch(actions.forms.manifest.setOpen(slot));\n                  dispatch(actions.forms.manifest.setField(['load', load]));\n                };\n\n                if (slot.user?.id === currentUser?.id) {\n                  if (canEditSelf) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress();\n                    } else {\n                      onSlotPress();\n                    }\n                  }\n                } else if (canEditOthers) {\n                  if (slotGroup?.length) {\n                    onSlotGroupPress();\n                  } else {\n                    onSlotPress();\n                  }\n                }\n              }}\n            />\n          );\n        }}\n      />\n      <ActionButton load={load} />\n      <ManifestUserSheet\n        open={forms.manifest.open}\n        onClose={() => dispatch(actions.forms.manifest.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.manifest.setOpen(false));\n        }}\n      />\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  return (\n    <WizardContext.Provider\n      value={{\n        index,\n        count,\n        setIndex: (idx) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          ref.current?.scrollToIndex({ index: idx, animated: true });\n        },\n      }}\n    >\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              console.log('onNext with index', index);\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"position\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds}\n        keyExtractor={({ item }, index) => `wind.${index}`}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../../components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport JumpRunSelector from '../../../../components/input/jump_run_select/JumpRunSelect';\n\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport JumpRunSelector from '../../../components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    dispatch,\n  ]);\n\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../components/forms/weather_conditions/WeatherConditionForm';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [mutationCreateWeatherConditions, state, dropzoneId, navigation, dispatch]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() => navigation.navigate('JumpRunScreen')}\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload conditions from MarkSchulz.net\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, Button } from 'react-native-paper';\nimport { View, StyleSheet } from 'react-native';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  return (\n    <View style={styles.warning}>\n      <Paragraph style={{ color: 'white', flex: 7 / 10, flexGrow: 2 }}>{title}</Paragraph>\n      {!action ? null : (\n        <Button onPress={action} style={{ flex: 1 / 10, flexShrink: 1 }}>\n          Fix\n        </Button>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning title=\"Your reserve repack is due. You cannot manifest if your repack is out of date.\" />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 32,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, Badge, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { DrawerActions } from '@react-navigation/native';\nimport { Query } from '../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\nimport SetupWarning from './SetupWarning';\n\nconst QUERY_CURRENT_USER = gql`\n  query QueryDropzone($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      isCreditSystemEnabled\n\n      currentUser {\n        id\n        credits\n        expiresAt\n\n        rigInspections {\n          id\n          rig {\n            id\n            repackExpiresAt\n          }\n        }\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { navigation, previous, scene, hideWarnings } = props;\n  const { currentDropzoneId, palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [loadData, { data, loading }] = useLazyQuery<Query>(QUERY_CURRENT_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      loadData();\n    }\n  }, [loadData, currentDropzoneId]);\n\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {previous ? (\n          <Appbar.BackAction\n            onPress={navigation.goBack}\n            color={theme.dark ? palette.primary.dark : palette.primary.main}\n          />\n        ) : (\n          <IconButton\n            color={theme.dark ? palette.primary.dark : palette.primary.main}\n            icon=\"menu\"\n            size={32}\n            onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n          />\n        )}\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold', color: palette.primary.main }}\n        />\n\n        {scene.descriptor.options.headerRight ? (\n          scene.descriptor.options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{ backgroundColor: palette.accent.main }}\n            mode=\"flat\"\n            textStyle={{ color: palette.surface }}\n          >{`$${data?.dropzone?.currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={data?.dropzone?.currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!data?.dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!data?.dropzone?.currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!data?.dropzone?.currentUser?.expiresAt &&\n            data?.dropzone?.currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!data?.dropzone?.currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = data.dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!data?.dropzone?.currentUser?.rigInspections?.length}\n          isRigSetUp={!!data?.dropzone?.currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            const currentUser = data?.dropzone?.currentUser;\n\n            if (currentUser) {\n              dispatch(actions.forms.user.setOpen(currentUser));\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOpen(currentUser.user.rigs[0]));\n              }\n\n              dispatch(actions.forms.userWizard.setOpen(currentUser.user));\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List } from 'react-native-paper';\n\nimport { Text, View } from '../../../components/Themed';\nimport usePalette from '../../../hooks/usePalette';\n\ninterface IGetStartedProps {\n  hasPlanes: boolean;\n  hasTicketTypes: boolean;\n  isPublic: boolean;\n}\nexport default function GetStarted({ hasPlanes, hasTicketTypes, isPublic }: IGetStartedProps) {\n  const palette = usePalette();\n\n  return (\n    <View style={{ width: '70%' }}>\n      <Text style={styles.title}>Set up dropzone</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <List.Item\n        title=\"Create dropzone\"\n        left={() => <List.Icon color={palette.success} icon=\"check\" />}\n      />\n      <List.Item\n        title=\"Add a plane\"\n        left={() =>\n          !hasPlanes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n      <List.Item\n        title=\"Configure jump tickets\"\n        left={() =>\n          !hasTicketTypes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Plane, DropzoneUser, LoadState } from '../../../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../../state';\nimport { errorColor, warningColor } from '../../../../../constants/Colors';\nimport Countdown from '../Countdown';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  load: Load;\n  onPress(): void;\n}\n\nexport default function LoadCard(props: ILoadCardSmall) {\n  const { load: initialRecord, onPress } = props;\n  const dispatch = useAppDispatch();\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    pollInterval: 30000,\n  });\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 2,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load?.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={[styles.cardContent]}>\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap', backgroundColor: 'transparent' }}>\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              if ((load?.occupiedSlots || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.occupiedSlots || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'warning',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport {\n  Button,\n  Card,\n  DataTable,\n  IconButton,\n  Menu,\n  Paragraph,\n  ProgressBar,\n  Text,\n} from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { useNavigation } from '@react-navigation/native';\nimport useCurrentDropzone from '../../../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser } from '../../../../../api/schema.d';\nimport useRestriction from '../../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../../state';\nimport SwipeActions from '../../../../../components/layout/SwipeActions';\nimport LoadingCard from '../Small/Loading';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport useMutationDeleteSlot from '../../../../../api/hooks/useMutationDeleteSlot';\n\ninterface ILoadCardLarge {\n  load: Load;\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: Slot[]): void;\n  onSlotPress(slot: Slot): void;\n  onManifest(): void;\n}\n\nexport default function LoadCard(props: ILoadCardLarge) {\n  const {\n    load: initialRecord,\n    onManifest,\n    onManifestGroup,\n    controlsVisible,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    // pollInterval: 30000,\n  });\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load?.id) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    if (!load?.id) {\n      return;\n    }\n    await mutationUpdateLoad.mutate({\n      id: Number(load.id),\n      hasLanded: true,\n    });\n  }, [load?.id, mutationUpdateLoad]);\n\n  const navigation = useNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Text>{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || mutationUpdateLoad.loading || mutationDeleteSlot.loading}\n        color={state.theme.colors.accent}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n          <ScrollView\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: `You need to take ${diff} people off the load to fit on this plane`,\n                      variant: 'warning',\n                    })\n                  );\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip value={load?.gca} onSelect={updateGCA} />\n            <PilotChip value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <DataTable>\n          <DataTable.Header style={{ width: '100%' }}>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Jump type</DataTable.Title>\n            <DataTable.Title numeric>Altitude</DataTable.Title>\n          </DataTable.Header>\n          {load?.slots?.map((slot) => {\n            const slotGroup = load?.slots?.filter(\n              ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n            );\n            const isCurrentUser = slot?.user?.id === currentUser?.id;\n\n            return (\n              <SwipeActions\n                disabled={(isCurrentUser && !canRemoveSelf) || (!isCurrentUser && !canRemoveOthers)}\n                key={`slot-${slot.id}`}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: () => onDeleteSlot(slot),\n                }}\n              >\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  onPress={() => {\n                    if (slot.user?.id === currentUser?.id) {\n                      if (canEditSelf) {\n                        if (slotGroup?.length) {\n                          onSlotGroupPress(slotGroup);\n                        } else {\n                          onSlotPress(slot);\n                        }\n                      }\n                    } else if (canEditOthers) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  }}\n                  pointerEvents=\"none\"\n                >\n                  <DataTable.Cell>\n                    <Paragraph style={styles.slotText}>{slot?.dropzoneUser?.user?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n\n                {slot?.ticketType?.isTandem && (\n                  <DataTable.Row\n                    testID=\"slot-row\"\n                    disabled={!!load?.hasLanded}\n                    pointerEvents=\"none\"\n                  >\n                    <DataTable.Cell>\n                      <Paragraph style={styles.slotText}>{slot?.passengerName}</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>Passenger</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>\n                        {(slot?.ticketType?.altitude || 14000) / 1000}k\n                      </Paragraph>\n                    </DataTable.Cell>\n                  </DataTable.Row>\n                )}\n              </SwipeActions>\n            );\n          })}\n          {Array.from({ length: load?.availableSlots || 0 }, (v, i) => i).map((i) => (\n            <DataTable.Row\n              key={`${load?.id}-empty-slot-${i}`}\n              testID=\"slot-row\"\n              onPress={() => navigation.navigate('LoadScreen', { load })}\n            >\n              <DataTable.Cell>\n                <Paragraph style={styles.slotText}>- Available -</Paragraph>\n              </DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button mode=\"outlined\" onPress={() => updateCall(null)} testID=\"dispatch-cancel\">\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              onDismiss={() => setDispatchOpen(false)}\n              visible={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <Menu.Item\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a load master before this load can be finalized',\n                      variant: 'warning',\n                    })\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a pilot before this load can be finalized',\n                      variant: 'warning',\n                    })\n                  );\n                }\n                return onLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  slotText: {\n    fontSize: 12,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateLoadPayload, LoadInput } from '../schema';\n\nconst MUTATION_CREATE_LOAD = gql`\n  mutation CreateLoad(\n    $name: String\n    $pilotId: Int\n    $gcaId: Int\n    $maxSlots: Int!\n    $planeId: Int\n    $isOpen: Boolean\n  ) {\n    createLoad(\n      input: {\n        attributes: {\n          name: $name\n          pilotId: $pilotId\n          gcaId: $gcaId\n          maxSlots: $maxSlots\n          planeId: $planeId\n          isOpen: $isOpen\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        loadNumber\n        occupiedSlots\n        availableSlots\n        maxSlots\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        maxSlots\n        isOpen\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<LoadInput, CreateLoadPayload>(MUTATION_CREATE_LOAD, {\n  getPayload: (result) => result.createLoad,\n  validates: {\n    maxSlots: [\n      isRequired('lease specify amount of allowed jumpers'),\n      isNumeric('Please enter a valid number'),\n    ],\n    planeId: [isRequired('What plane is flying this load?')],\n    gcaId: [isRequired('You must have a GCA for this load')],\n  },\n  fieldErrorMap: {\n    planeId: 'plane',\n    gcaId: 'gca',\n  },\n});\n","import slice from './slice';\nimport Notifications from './Notifications';\n\nconst { actions } = slice;\n\nexport { actions };\nexport default Notifications;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['dropzone']['dropzoneUsers'],\n  {\n    dropzoneId: number;\n    permissions: string[];\n  }\n>(QUERY_DROPZONE_USERS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUsers,\n});\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport useQueryDropzoneUsers from '../../../api/hooks/useQueryDropzoneUsers';\nimport { DropzoneUser } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IDropzoneUserChipSelect {\n  value?: DropzoneUser | null;\n  label: string;\n  icon?: string;\n  requiredPermissions: string[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(dzuser: DropzoneUser): void;\n}\n\nexport default function DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const { label, requiredPermissions, icon, value, onLoadingStateChanged, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQueryDropzoneUsers({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: requiredPermissions,\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]) => (first ? onSelect(first) : null),\n    [onSelect]\n  );\n  const getItemLabel = React.useCallback((dzUser) => dzUser?.user.name, []);\n  const isSelected = React.useCallback((item) => item.id === value?.id, [value?.id]);\n  const selected = React.useMemo(() => [value].filter(Boolean) as DropzoneUser[], [value]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUser>\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={uniqBy(data?.edges?.map((edge) => edge?.node) || [], 'id') as DropzoneUser[]}\n        selected={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChangeSelected={onChangeSelected}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Plane, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: Plane | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QuerySelectPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onSelect, onLoadingStateChanged } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<Plane>\n        autoSelectFirst\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        selected={[value].filter(Boolean) as Plane[]}\n        renderItemLabel={(plane: Plane) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChangeSelected={([first]) => (first ? onSelect(first as Plane) : null)}\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DropzoneUserChipSelect from '../../input/chip_select/DropzoneUserChipSelect';\nimport PlaneChipSelect from '../../input/chip_select/PlaneChipSelect';\n\nexport default function LoadForm() {\n  const state = useAppSelector((root) => root.forms.load);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        placeholder=\"Optional\"\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.load.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'e.g Starcrest load, Tandem load'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.load.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error || ''}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelect\n          value={state.fields.plane.value}\n          onSelect={(value) => {\n            dispatch(actions.forms.load.setField(['plane', value]));\n            dispatch(actions.forms.load.setField(['maxSlots', value.maxSlots]));\n          }}\n        />\n        <HelperText type={state.fields.plane.error ? 'error' : 'info'}>\n          {state.fields.plane.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"GCA\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['gca', dzUser]))}\n          value={state.fields.gca.value || null}\n          requiredPermissions={['actAsGCA']}\n        />\n        <HelperText type={state.fields.gca.error ? 'error' : 'info'}>\n          {state.fields.gca.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"Pilot\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['pilot', dzUser]))}\n          value={state.fields.pilot.value || null}\n          requiredPermissions={['actAsPilot']}\n        />\n        <HelperText type={state.fields.pilot.error ? 'error' : 'info'}>\n          {state.fields.pilot.error || ''}\n        </HelperText>\n\n        <Divider style={{ marginVertical: 8 }} />\n\n        <Checkbox.Item\n          label=\"Allow public manifesting\"\n          status={state.fields.isOpen.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.load.setField(['isOpen', !state.fields.isOpen.value]))\n          }\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nexport default function DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, buttonAction, title, loading, open, children } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} dismissable={false} style={{ maxWidth: 500, alignSelf: 'center' }}>\n        <ProgressBar indeterminate visible={loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>{title}</Dialog.Title>\n        <Dialog.Content pointerEvents=\"box-none\">\n          <Dialog.ScrollArea>\n            <ScrollView>{children}</ScrollView>\n          </Dialog.ScrollArea>\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={buttonAction}>{buttonLabel}</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\n\nimport useMutationCreateLoad from '../../api/hooks/useMutationCreateLoad';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { actions as snackbar } from '../notifications';\n\nimport { Load } from '../../api/schema';\nimport LoadForm from '../forms/load/LoadForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport { LoadFields } from '../forms/load/slice';\n\ninterface ILoadDialog {\n  open: boolean;\n  onClose(): void;\n  onSuccess(load: Load): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, onClose, onSuccess } = props;\n  const state = useAppSelector((root) => root.forms.load);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const dispatch = useAppDispatch();\n  const createLoad = useMutationCreateLoad({\n    onSuccess: (payload) => {\n      dispatch(\n        snackbar.showSnackbar({\n          message: `Load ${payload?.load?.name} created`,\n          variant: 'success',\n        })\n      );\n\n      if (payload?.load) {\n        onSuccess(payload?.load);\n      }\n      dispatch(actions.forms.load.reset());\n      requestAnimationFrame(() => dispatch(actions.forms.load.setOpen(false)));\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.load.setFieldError([field as keyof LoadFields, message])),\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  const onSave = React.useCallback(() => {\n    const variables = {\n      isOpen: !!state.fields.isOpen.value,\n      name: state.fields.name.value,\n      dropzoneId: currentDropzoneId,\n      maxSlots: state.fields.maxSlots.value || null,\n      planeId: Number(state.fields.plane.value?.id) || null,\n      gcaId: Number(state.fields.gca.value?.id) || null,\n      pilotId: Number(state.fields.pilot.value?.id) || null,\n    };\n    createLoad.mutate(variables);\n  }, [\n    createLoad,\n    currentDropzoneId,\n    state.fields.gca.value?.id,\n    state.fields.isOpen.value,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.pilot.value?.id,\n    state.fields.plane.value?.id,\n  ]);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={createLoad.loading}\n      title=\"New Load\"\n    >\n      <LoadForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport { useNavigation } from '@react-navigation/native';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport weatherBackground from '../../../../../assets/images/weather.png';\nimport nightBackground from '../../../../../assets/images/night.png';\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\nimport { actions, useAppDispatch } from '../../../../state';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { Permission } from '../../../../api/schema.d';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const { dropzone, loading, called } = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? new Date(dropzone?.currentConditions?.createdAt * 1000)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={() => {\n          if (canUpdate && dropzone?.currentConditions) {\n            dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n            navigation.navigate('WindScreen');\n          }\n        }}\n      >\n        <ImageBackground\n          source={theme.dark ? nightBackground : weatherBackground}\n          style={{ ...StyleSheet.absoluteFillObject }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, -80],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'center' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onPress={() => {\n                        if (dropzone?.currentConditions && canUpdate) {\n                          dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n                          navigation.navigate('JumpRunScreen');\n                        }\n                      }}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    marginHorizontal: 16,\n    // height: 200,\n    overflow: 'hidden',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    flexDirection: 'column',\n  },\n  jumpRun: {\n    width: 105,\n    height: 105,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Dimensions, RefreshControl, StyleSheet, useWindowDimensions } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, Menu, ProgressBar, useTheme } from 'react-native-paper';\n\nimport NoResults from '../../../components/NoResults';\nimport { View } from '../../../components/Themed';\nimport { Load, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport GetStarted from './GetStarted';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport LoadDialog from '../../../components/dialogs/Load';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const { dropzone, currentUser, loading, refetch, fetchMore } = useCurrentDropzone();\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const hasPlanes = !!dropzone?.planes?.length;\n  const hasTicketTypes = !!dropzone?.ticketTypes?.length;\n  const isPublic = !!dropzone?.isPublic;\n  const isSetupComplete = hasPlanes && hasTicketTypes;\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      dispatch(actions.global.setPrimaryColor(dropzone.secondaryColor));\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n\n  const onManifest = React.useCallback(\n    (load: Load) => {\n      if (!currentUser?.hasLicense) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You need to select a license on your user profile',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasMembership) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your membership is out of date',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasRigInspection) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs to be inspected before manifesting',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasReserveInDate) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs a reserve repack',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasExitWeight) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Update your exit weight on your profile before manifesting',\n            variant: 'warning',\n          })\n        );\n      }\n\n      if (!currentUser?.hasCredits) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You have no credits on your account',\n            variant: 'warning',\n          })\n        );\n      }\n\n      dispatch(actions.forms.manifest.setOpen(true));\n      dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n      dispatch(actions.forms.manifest.setField(['load', load]));\n      return null;\n    },\n    [currentUser, dispatch]\n  );\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 335 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const loads = dropzone?.loads?.edges || [];\n  const initialLoading = !loads?.length && loading;\n\n  const theme = useTheme();\n  return (\n    <View style={{ flex: 1, backgroundColor: theme.colors.background }}>\n      <ProgressBar visible={loading} indeterminate color={state.theme.colors.accent} />\n\n      <View style={styles.container}>\n        {!initialLoading && !isSetupComplete ? (\n          <GetStarted {...{ hasPlanes, hasTicketTypes, isPublic }} />\n        ) : (\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              height: Dimensions.get('window').height,\n            }}\n          >\n            <FlatList\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults title=\"No loads so far today\" subtitle=\"How's the weather?\" />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n                backgroundColor: theme.colors.background,\n              }}\n              testID=\"loads\"\n              keyExtractor={({ item }, idx) => `load-small-${item?.node?.id || idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n                backgroundColor: theme.colors.background,\n              }}\n              numColumns={numColumns}\n              data={initialLoading ? [1, 1, 1, 1, 1] : loads}\n              refreshControl={\n                <RefreshControl refreshing={loading} onRefresh={() => fetchMore({})} />\n              }\n              renderItem={({ item: edge, index }) => {\n                // 1 means loading, because null and undefined\n                // get filtered out\n                if (edge === 1) {\n                  return manifestScreen.display === 'list' ? (\n                    <LoadingCardLarge key={`loading-card-${index}`} />\n                  ) : (\n                    <LoadingCardSmall key={`loading-card-${index}`} />\n                  );\n                }\n                return manifestScreen.display === 'list' ? (\n                  <LoadCardLarge\n                    controlsVisible={false}\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onSlotPress={(slot) => {\n                      if (edge?.node) {\n                        dispatch(actions.forms.manifest.setOpen(slot));\n                        dispatch(actions.forms.manifest.setField(['load', edge.node]));\n                      }\n                    }}\n                    onSlotGroupPress={(slots) => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setFromSlots(slots));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                      navigation.navigate('ManifestGroupScreen');\n                    }}\n                    onManifest={() => {\n                      onManifest(edge.node);\n                    }}\n                    onManifestGroup={() => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setOpen(true));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                    }}\n                  />\n                ) : (\n                  <LoadCardSmall\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onPress={() => navigation.navigate('LoadScreen', { load: edge.node })}\n                  />\n                );\n              }}\n            />\n          </View>\n        )}\n        {canCreateLoad && isSetupComplete && (\n          <FAB\n            style={styles.fab}\n            small\n            icon=\"plus\"\n            onPress={() => dispatch(actions.forms.load.setOpen(true))}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n          visible={isDisplayOptionsOpen}\n          onDismiss={() => setDisplayOptionsOpen(false)}\n        >\n          <Menu.Item\n            title=\"Show expanded cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'cards' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <Menu.Item\n            title=\"Show compact cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'list' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n\n      <LoadDialog\n        onSuccess={() => {\n          dispatch(actions.forms.load.setOpen(false));\n          refetch();\n        }}\n        open={forms.load.open}\n        onClose={() => dispatch(actions.forms.load.setOpen(false))}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { omit } from 'lodash';\nimport { Button, Card, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../../components/forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestGroupScreen {\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateMultipleSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupScreen(props: IManifestGroupScreen) {\n  const { onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const navigation = useNavigation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onSuccess?.();\n        navigation.navigate('Manifest', { screen: 'DropzoneScreen' });\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    navigation,\n    onSuccess,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <ProgressBar\n        indeterminate\n        visible={mutationData.loading}\n        color={globalState.theme.colors.accent}\n      />\n      <Card.Title\n        // eslint-disable-next-line max-len\n        title={`Manifest ${state?.fields?.users?.value?.length} jumpers on Load #${state.fields.load?.value?.loadNumber}`}\n      />\n      <ManifestGroupForm />\n      <Button\n        mode=\"contained\"\n        style={{ width: '100%', marginVertical: 16 }}\n        onPress={() => onManifest()}\n        loading={mutationData.loading}\n      >\n        Save\n      </Button>\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Checkbox, Divider, FAB, List, ProgressBar } from 'react-native-paper';\n\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { DropzoneUser, Query } from '../../../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupUserSelectScreen() {\n  const global = useAppSelector((root) => root.global);\n  const manifest = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: manifest.searchText,\n    },\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (manifest.isSearchVisible) {\n      dispatch(actions.screens.manifest.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, manifest.isSearchVisible]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 0 }}>\n        {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n          <NoResults title=\"No users\" subtitle=\"\" />\n        )}\n\n        {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n          <>\n            <List.Item\n              style={{ width: '100%' }}\n              key={`user-${edge?.node?.id}`}\n              title={edge?.node?.user.name}\n              description={edge?.node?.role?.name}\n              left={() =>\n                !edge?.node?.user?.image ? (\n                  <List.Icon icon=\"account\" />\n                ) : (\n                  <Avatar.Image\n                    source={{ uri: edge?.node?.user.image }}\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={32}\n                  />\n                )\n              }\n              right={() => (\n                <Checkbox.Android\n                  status={\n                    manifest.selectedUsers?.map(({ id }) => id).includes(edge?.node?.id || '')\n                      ? 'checked'\n                      : 'unchecked'\n                  }\n                />\n              )}\n              onPress={() =>\n                dispatch(\n                  actions.screens.manifest.setSelected(\n                    manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                      ? manifest.selectedUsers?.filter(({ id }) => id !== `${edge?.node?.id}`)\n                      : [...manifest.selectedUsers, edge?.node as DropzoneUser]\n                  )\n                )\n              }\n            />\n            <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n          </>\n        ))}\n      </ScrollableScreen>\n      <FAB\n        style={styles.fab}\n        small\n        visible={manifest.selectedUsers.length > 0}\n        icon=\"check\"\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(manifest.selectedUsers));\n          navigation.setParams({ select: false });\n          dispatch(actions.screens.manifest.setSearchVisible(false));\n          dispatch(actions.screens.manifest.setSelected([]));\n          navigation.navigate('ManifestGroupScreen');\n        }}\n        label=\"Next\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\n\ninterface IDatepicker {\n  label: string;\n  timestamp: number;\n  disabled?: boolean;\n  onChange(timestamp: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, timestamp, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Menu\n        onDismiss={() => setOpen(false)}\n        visible={open}\n        anchor={\n          <List.Item\n            onPress={() => setOpen(true)}\n            disabled={!!disabled}\n            title={label}\n            description={timestamp ? format(timestamp * 1000, 'yyyy/MM/dd') : 'No date selected'}\n            left={() => <List.Icon icon=\"calendar\" />}\n          />\n        }\n      >\n        <DayPicker\n          selectedDays={timestamp ? [new Date(timestamp * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </Menu>\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport { Query, UserRole } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRoleSelect {\n  value?: UserRole | null;\n  required?: boolean;\n  disabled?: boolean;\n  onSelect(jt: UserRole): void;\n}\n\nconst QUERY_ROLES = gql`\n  query RolesQuery($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles(selectable: true) {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const { onSelect, disabled, required, value } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useQuery<Query>(QUERY_ROLES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  return (\n    <>\n      <List.Subheader style={{ paddingLeft: 0 }}>Access level</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={!disabled && isMenuOpen}\n        anchor={\n          <List.Item\n            left={() => <List.Icon icon=\"lock\" />}\n            onPress={\n              disabled\n                ? undefined\n                : () => {\n                    setMenuOpen(true);\n                  }\n            }\n            title={value?.name?.replace('_', ' ')?.toUpperCase() || 'Access level'}\n            description={!required ? 'Optional' : null}\n          />\n        }\n      >\n        {data?.dropzone?.roles?.map((role) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(role);\n            }}\n            title={role.name?.replace('_', ' ').toUpperCase() || '-'}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n        required\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Mutation } from '../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUser): void;\n}\n\nconst MUTATION_EDIT_DROPZONE_USER = gql`\n  mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n    updateDropzoneUser(\n      input: { id: $dropzoneUserId, attributes: { userRoleId: $userRoleId, expiresAt: $expiresAt } }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      dropzoneUser {\n        id\n        credits\n        expiresAt\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationUpdateDropzoneUser, createData] = useMutation<Mutation>(\n    MUTATION_EDIT_DROPZONE_USER\n  );\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        props.onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    props,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n        <Dialog.Content>\n          <DropzoneUserForm />\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.dropzoneUser.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, HelperText, Divider, DataTable } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport { TransactionType } from '../../../api/schema.d';\nimport NumberField from '../../input/number_input/NumberField';\n\nexport default function CreditsForm() {\n  const state = useAppSelector((root) => root.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = state.original?.credits || 0;\n  const amount = state.fields.amount.value || 0;\n\n  const subtotal =\n    state.fields.transactionType.value === TransactionType.Deposit\n      ? amount + currentCredits\n      : amount - currentCredits;\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Message\"\n        error={!!state.fields.message.error}\n        value={state.fields.message.value?.toString() || ''}\n        onChangeText={(newValue: string) =>\n          dispatch(actions.forms.credits.setField(['message', newValue]))\n        }\n      />\n      <HelperText type={state.fields.message.error ? 'error' : 'info'}>\n        {state.fields.message.error || ''}\n      </HelperText>\n      {state.fields.transactionType.value === 'deposit' ? (\n        <View>\n          <NumberField\n            label=\"Add amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Deposit</DataTable.Title>\n              <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      ) : (\n        <View>\n          <NumberField\n            label=\"Withdraw amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Withdraw</DataTable.Title>\n              <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsForm from '../../forms/credits/CreditsForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_TRANSACTION = gql`\n  mutation CreatrTransaction(\n    $message: String\n    $status: String\n    $amount: Float\n    $dropzoneUserId: Int\n  ) {\n    createTransaction(\n      input: {\n        attributes: {\n          amount: $amount\n          dropzoneUserId: $dropzoneUserId\n          message: $message\n          status: $status\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      transaction {\n        id\n        amount\n        message\n\n        dropzoneUser {\n          id\n          credits\n\n          transactions {\n            edges {\n              node {\n                id\n                status\n                amount\n                createdAt\n                message\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.credits);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateTransaction, createData] = useMutation<Mutation>(\n    MUTATION_CREATE_TRANSACTION\n  );\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(actions.forms.credits.setFieldError(['amount', 'You must specify an amount']));\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.amount.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationCreateTransaction({\n        variables: {\n          amount: state.fields.amount.value,\n          message: state.fields.message.value,\n          status: state.fields.status.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = state.original?.id ? response.data?.updateRig : response.data?.createRig;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'amount':\n            return dispatch(actions.forms.credits.setFieldError(['amount', message]));\n          case 'message':\n            return dispatch(actions.forms.credits.setFieldError(['message', message]));\n          case 'status':\n            return dispatch(actions.forms.credits.setFieldError(['status', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        props.onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateTransaction,\n    props,\n    state.fields.amount.value,\n    state.fields.message.value,\n    state.fields.status.value,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <CreditsForm />\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.credits.reset());\n              onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('Manufacturer is required')],\n    model: [isRequired('Model is required')],\n    serial: [isRequired('Serial number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema';\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateRig(\n    $id: Int!\n    $name: String\n    $make: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $packingCard: String\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    updateRig(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          make: $make\n          packingCard: $packingCard\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n        packingCard\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(MUTATION_UPDATE_RIG, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'You can give your equipment a nickname'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Make\"\n        error={!!state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n      <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n        {state.fields.make.error || 'e.g Javelin, Mirage'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Model\"\n        error={!!state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Serial\"\n        error={!!state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n      <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n        {state.fields.serial.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Current canopy size\"\n        error={!!state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.canopySize.error ? 'error' : 'info'}>\n        {state.fields.canopySize.error || 'Size of canopy in container'}\n      </HelperText>\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          selected={[state.fields.rigType?.value || 'sport']}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField(['rigType', rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateRig.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    } else {\n      await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { License, Query } from '../../../api/schema.d';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: License | null;\n  federationId?: number | null;\n  onSelect(jt: License): void;\n}\n\nconst QUERY_LICENSES = gql`\n  query Licenses($federationId: Int) {\n    licenses(federationId: $federationId) {\n      id\n      name\n\n      federation {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useQuery<Query>(QUERY_LICENSES, {\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<License>\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        selected={[value].filter(Boolean) as License[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { List, Menu, TextInput } from 'react-native-paper';\nimport { Federation, Query } from '../../../api/schema.d';\n\ninterface IFederationSelect {\n  value?: Federation | null;\n  onSelect(jt: Federation): void;\n}\n\nconst QUERY_FEDERATIONS = gql`\n  query Federations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\nexport default function FederationSelect(props: IFederationSelect) {\n  const { value, onSelect } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n\n  const { data } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onSelect(data.federations[0]);\n    }\n  }, [data?.federations, onSelect, value]);\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={isMenuOpen}\n        anchor={\n          <TouchableOpacity\n            onPress={() => {\n              setMenuOpen(true);\n            }}\n          >\n            <TextInput\n              mode=\"outlined\"\n              disabled\n              style={{ minWidth: 200 }}\n              value={value?.name || 'Please select federation'}\n            />\n          </TouchableOpacity>\n        }\n      >\n        {data?.federations?.map((federation) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(federation);\n            }}\n            title={federation.name || '-'}\n            key={`federation-select-${federation.id}`}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(actions.forms.user.setField(['exitWeight', state.original.exitWeight || '60']));\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Nickname\"\n        error={!!state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Phone\"\n        error={!!state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        onChangeText={(num) =>\n          dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))\n        }\n        label=\"Exit weight (kg)\"\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useCurrentDropzone from './useCurrentDropzone';\n\nexport const QUERY_DROPZONE_USER = gql`\n  query QueryDropzoneUser($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n        rigInspections {\n          id\n          isOk\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          rig {\n            id\n          }\n        }\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n            }\n          }\n        }\n\n        orders {\n          edges {\n            node {\n              id\n              state\n              createdAt\n              amount\n              title\n              buyer {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              seller {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              item {\n                title\n                cost\n\n                ... on Slot {\n                  id\n\n                  ticketType {\n                    id\n                    name\n                    cost\n                  }\n\n                  extras {\n                    id\n                    name\n                    cost\n                  }\n                }\n                ... on TicketType {\n                  id\n                }\n                ... on Extra {\n                  id\n                  name\n                }\n              }\n              receipts {\n                id\n                transactions {\n                  id\n                  transactionType\n                  status\n                  createdAt\n                  amount\n                  message\n                  sender {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                  receiver {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        license {\n          id\n          name\n        }\n        user {\n          id\n          name\n          nickname\n          exitWeight\n          email\n          phone\n          image\n          moderationRole\n          rigs {\n            id\n            packingCard\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id?: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const currentDropzone = useCurrentDropzone();\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id || Number(currentDropzone?.data?.dropzone?.currentUser?.id),\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser:\n      !id || id === Number(currentDropzone?.data?.dropzone?.currentUser?.id)\n        ? currentDropzone?.data?.dropzone?.currentUser\n        : dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import * as React from 'react';\nimport { startOfDay } from 'date-fns';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport useCurrentDropzone, { QUERY_DROPZONE } from '../../api/hooks/useCurrentDropzone';\nimport { QUERY_DROPZONE_USER } from '../../api/hooks/useDropzoneUser';\nimport { useJoinFederationMutation } from '../../api/reflection';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId: number;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const currentDropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [joinFederation] = useJoinFederationMutation();\n  const currentDropzone = useCurrentDropzone();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Profile has been updated`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    mutation: {\n      refetchQueries: [\n        {\n          query: QUERY_DROPZONE,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      id: Number(state.original?.id),\n      name: state.fields.name.value,\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    if (\n      (state.fields.license.value?.id &&\n        state.original?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !==\n          state.original?.userFederations?.find(\n            ({ federation }) => federation.id === currentDropzone.dropzone?.federation?.id\n          )?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federationId: Number(state.fields.license.value?.federation?.id),\n          uid: state.fields?.apfNumber?.value,\n          licenseId: state.fields.license.value?.id ? Number(state.fields.license.value?.id) : null,\n        },\n      });\n    }\n  }, [\n    currentDropzone.dropzone?.federation?.id,\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.license?.id,\n    state.original?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Menu,\n  Paragraph,\n  Title,\n  TouchableRipple,\n} from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { DropzoneUser, Permission } from '../../../../api/schema.d';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUser;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, onEdit, canEdit, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.onSurface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            {!dropzoneUser?.user?.image ? (\n              <Avatar.Icon size={80} icon=\"account\" />\n            ) : (\n              <Avatar.Image\n                size={80}\n                source={{ uri: dropzoneUser?.user.image }}\n                style={{ backgroundColor: palette.primary.light }}\n              />\n            )}\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            onDismiss={() => setContactOpen(false)}\n            visible={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USER_PROFILE = gql`\n  query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n\n        slots {\n          edges {\n            node {\n              id\n              createdAt\n              load {\n                id\n                name\n                loadNumber\n                dispatchAt\n                createdAt\n              }\n              jumpType {\n                id\n                name\n              }\n              ticketType {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_PROFILE, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser: dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    actAsDZSO: 'shield-cross',\n    actAsGCA: 'radio-handheld',\n    actAsLoadMaster: 'shield-account',\n    actAsPilot: 'shield-airplane',\n    actAsRigInspector: 'shield-search',\n  }[type];\n\n  const label = {\n    actAsDZSO: 'DZSO',\n    actAsGCA: 'GCA',\n    actAsLoadMaster: 'Load Master',\n    actAsPilot: 'Pilot',\n    actAsRigInspector: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            icon={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { RevokePermissionPayload } from '../schema';\n\nexport const MUTATION_REVOKE_PERMISSION = gql`\n  mutation RevokePermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    revokePermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  RevokePermissionPayload\n>(MUTATION_REVOKE_PERMISSION, {\n  getPayload: (result) => result.revokePermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { GrantPermissionPayload } from '../schema';\n\nexport const MUTATION_GRANT_PERMISSION = gql`\n  mutation GrantPermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    grantPermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  GrantPermissionPayload\n>(MUTATION_GRANT_PERMISSION, {\n  getPayload: (result) => result.grantPermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import { useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport startOfDay from 'date-fns/startOfDay';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { QUERY_DROPZONE_USERS } from '../../../../api/hooks/useQueryDropzoneUsers';\nimport { QUERY_PERMISSION_USER } from '../../../../components/chips/GcaChip';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { DropzoneUser, Permission, Query } from '../../../../api/schema.d';\n\nimport { QUERY_DROPZONE } from '../../../../api/hooks/useCurrentDropzone';\n// eslint-disable-next-line max-len\nimport { QUERY_DROPZONE_USER_PROFILE } from '../../../../api/hooks/useDropzoneUserProfile';\nimport Badge, { IBadgeProps } from '../../../../components/Badge';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport useMutationRevokePermission from '../../../../api/hooks/useMutationRevokePermission';\nimport useMutationGrantPermission from '../../../../api/hooks/useMutationGrantPermission';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUser;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const revokePermission = useMutationRevokePermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission revoked' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QUERY_DROPZONE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(route.params.userId),\n          },\n        },\n      ],\n    },\n  });\n  const grantPermission = useMutationGrantPermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission granted' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QUERY_DROPZONE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(route.params.userId),\n          },\n        },\n      ],\n    },\n  });\n\n  const badges = permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const shouldShowBadge = (permission: Permission) =>\n    canGrantPermission || badges.includes(permission);\n\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revokePermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const updatedList = (c?.dropzone?.dropzoneUsers?.edges || []).filter(\n                          (edge) => edge?.node?.id !== dropzoneUser?.id\n                        );\n\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        });\n\n                        return {\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        };\n                      },\n                    }\n                  )\n                : grantPermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const current = c?.dropzone?.dropzoneUsers?.edges || [];\n                        const shouldUpdate = !!current.find(\n                          (edge) => edge?.node?.id === dropzoneUser?.id\n                        );\n\n                        const updatedGcaList = shouldUpdate\n                          ? [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []).map((edge) =>\n                                edge?.node?.id !== dropzoneUser?.id\n                                  ? edge\n                                  : {\n                                      ...edge,\n                                      node: {\n                                        ...edge?.node,\n                                        ...data?.grantPermission?.dropzoneUser,\n                                      },\n                                    }\n                              ),\n                            ]\n                          : [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []),\n                              {\n                                node: data?.grantPermission?.dropzoneUser,\n                              },\n                            ];\n                        const newData = {\n                          ...c,\n                          dropzone: {\n                            ...c?.dropzone,\n                            dropzoneUsers: {\n                              edges: updatedGcaList,\n                            },\n                          },\n                        };\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            dropzoneId: Number(state.currentDropzoneId),\n                            permissions: [permission],\n                          },\n                          data: newData,\n                        });\n\n                        return {\n                          data: newData,\n                        };\n                      },\n                    }\n                  )\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlot {\n  slot: Slot;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 0,\n              right: 8,\n            }}\n          >\n            {format((slot?.load?.dispatchAt || slot.createdAt) * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`Load #${slot.load.loadNumber}`}\n            description={slot.ticketType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text style={[styles.jumpType, { color: theme.colors.onSurface }]}>\n                  {slot.jumpType?.name}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  flex: 1,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <MaterialCommunityIcons\n                  color={theme.colors.text}\n                  name=\"parachute-outline\"\n                  size={36}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  jumpType: { fontSize: 24, marginLeft: 4, fontWeight: '100', textAlign: 'center' },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 4, paddingBottom: 4 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Platform, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Card, Divider, List, ProgressBar, useTheme } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport * as ImagePicker from 'expo-image-picker';\n\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Mutation, Permission } from '../../../api/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport DropzoneUserDialog from '../../../components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport EditUserSheet from '../../../components/dialogs/User';\n\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n// eslint-disable-next-line max-len\nimport useDropzoneUserProfile from '../../../api/hooks/useDropzoneUserProfile';\nimport useRestriction from '../../../hooks/useRestriction';\n\nimport PermissionBadges from './UserInfo/PermissionBadges';\n\nimport SlotCard from './SlotCard';\n\nconst MUTATION_UPDATE_IMAGE = gql`\n  mutation UpdateUserImage($id: Int, $image: String) {\n    updateUser(input: { id: $id, attributes: { image: $image } }) {\n      user {\n        id\n        name\n        exitWeight\n        email\n        image\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        userFederations {\n          id\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const isSelf = currentUser?.id === route.params.userId;\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUserProfile(\n    Number(route.params.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const [mutationUpdateUser] = useMutation<Mutation>(MUTATION_UPDATE_IMAGE);\n\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      // Upload image\n      await mutationUpdateUser({\n        variables: {\n          id: Number(dropzoneUser?.user?.id),\n          image: `data:image/jpeg;base64,${result.base64}`,\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.user?.id, mutationUpdateUser]);\n\n  const badges = dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const theme = useTheme();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 0.75 }}\n      style={StyleSheet.absoluteFill}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      <ScrollableScreen\n        style={{ backgroundColor: state.theme.colors.background }}\n        contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n      >\n        {!dropzoneUser ? null : (\n          <Header\n            dropzoneUser={dropzoneUser}\n            canEdit={isSelf}\n            onEdit={() => {\n              if (dropzoneUser?.user) {\n                dispatch(actions.forms.user.setOpen(dropzoneUser));\n              }\n            }}\n            onPressAvatar={onPickImage}\n          >\n            <PermissionBadges {...{ dropzoneUser, permissions: badges }} />\n            <InfoGrid\n              style={{ height: 80 }}\n              items={[\n                {\n                  title: 'Funds',\n                  value: `$${dropzoneUser?.credits || 0}`,\n                  onPress: () => {\n                    if (dropzoneUser && canAddTransaction) {\n                      dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                    }\n                  },\n                },\n                {\n                  title: 'License',\n                  value: `${dropzoneUser?.license?.name || '-'}`,\n                },\n                {\n                  title: 'Exit weight',\n                  value: Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                },\n              ]}\n            />\n            <Divider style={styles.divider} />\n          </Header>\n        )}\n        <View style={{ width: '100%' }}>\n          <List.Subheader>Manage</List.Subheader>\n          <Card style={{ margin: 8, marginRight: 8 }} elevation={1}>\n            {isSelf ? (\n              <>\n                <List.Item\n                  style={{ width: '100%', padding: 0 }}\n                  title=\"Setup Wizard\"\n                  left={() => <List.Icon icon=\"account-convert\" />}\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() => {\n                    if (dropzoneUser) {\n                      dispatch(actions.forms.user.setOpen(dropzoneUser));\n                      if (dropzoneUser?.user?.rigs?.length) {\n                        dispatch(actions.forms.rig.setOpen(dropzoneUser.user.rigs[0]));\n                      }\n\n                      dispatch(actions.forms.userWizard.setOpen(dropzoneUser.user));\n                    }\n                  }}\n                />\n                <Divider style={{ width: '100%' }} />\n              </>\n            ) : null}\n            {canUpdateUsers ? (\n              <>\n                <List.Item\n                  style={{ width: '100%', padding: 0 }}\n                  title=\"Access and Membership\"\n                  left={() => <List.Icon icon=\"lock\" />}\n                  onPress={() =>\n                    dropzoneUser ? dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser)) : null\n                  }\n                />\n                <Divider style={{ width: '100%' }} />\n              </>\n            ) : null}\n            {isSelf || canViewOthersTransactions ? (\n              <>\n                <List.Item\n                  style={{ width: '100%', padding: 0 }}\n                  title=\"Transactions\"\n                  left={() => <List.Icon icon=\"cash\" />}\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('TransactionsScreen', { userId: dropzoneUser?.id })\n                  }\n                />\n                <Divider style={{ width: '100%' }} />\n              </>\n            ) : null}\n            <List.Item\n              style={{ width: '100%', padding: 0 }}\n              title=\"Equipment\"\n              left={() => <List.Icon icon=\"parachute\" />}\n              right={() => <List.Icon icon=\"chevron-right\" />}\n              onPress={() => navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id })}\n            />\n          </Card>\n        </View>\n\n        <View style={{ width: '100%' }}>\n          <List.Subheader>History</List.Subheader>\n          <Card style={{ margin: 8, marginHorizontal: 0 }} elevation={1}>\n            {dropzoneUser?.slots?.edges?.map((edge) =>\n              edge?.node ? (\n                <SlotCard\n                  slot={edge.node}\n                  onPress={() => {\n                    navigation.navigate('LoadScreen', { load: edge.node });\n                  }}\n                />\n              ) : null\n            )}\n          </Card>\n        </View>\n      </ScrollableScreen>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n\n      <DropzoneUserDialog\n        onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n        onSuccess={(user) => {\n          dispatch(actions.forms.dropzoneUser.setOpen(false));\n          if (currentUser?.id === dropzoneUser?.id) {\n            dispatch(actions.global.setUser(user.user));\n            refetch();\n          }\n        }}\n        open={forms.dropzoneUser.open}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n\n      <EditUserSheet\n        dropzoneUserId={Number(dropzoneUser?.id)}\n        onClose={() => dispatch(actions.forms.user.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.user.setOpen(false));\n        }}\n        open={forms.user.open}\n      />\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONE_USER_NOTIFICATIONS = gql`\n  query QueryNotifications($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      currentUser {\n        id\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n              sentBy {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n\n              resource {\n                ... on Load {\n                  id\n                  loadNumber\n                  dispatchAt\n                  state\n                }\n                ... on Transaction {\n                  id\n                  amount\n                  message\n                  status\n                }\n\n                ... on Slot {\n                  id\n                  load {\n                    id\n                    loadNumber\n                    dispatchAt\n                    state\n                  }\n                }\n\n                ... on Rig {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                  rigInspections(dropzoneId: $dropzoneId) {\n                    id\n                    createdAt\n                    inspectedBy {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                  }\n                }\n\n                ... on RigInspection {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useNotifications() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const query = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_NOTIFICATIONS, {\n    variables: {\n      dropzoneId,\n    },\n    pollInterval: 30000,\n  });\n\n  return {\n    ...query,\n    notifications: query?.data?.dropzone?.currentUser.notifications,\n  };\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from '../../../../state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: number;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(timestamp * 1000, { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Slot } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: (notification.resource as Slot).load },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useNavigation } from '@react-navigation/native';\nimport { Load, Notification } from '../../../../api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: notification.resource as Load },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Rig } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('RigInspectionScreen', {\n              rig: (notification.resource as Rig).id,\n              dropzoneUserId: (notification.resource as Rig).user?.id,\n            })\n          : navigation.navigate('Manifest', {\n              screen: 'Profile',\n              params: {\n                screen: 'ProfileScreen',\n              },\n            })\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport NotificationCard from './NotificationCard';\nimport { Notification } from '../../../../api/schema.d';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from '../../../state';\nimport useNotifications from '../../../api/hooks/useNotifications';\nimport { NotificationType } from '../../../api/schema.d';\nimport NoResults from '../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\n/* const MUTATION_MARK_AS_SEEN = gql`\n  mutation MarkAsSeen($id: Int) {\n    updateNotification(input: { id: $id, attributes: { isSeen: true } }) {\n      notification {\n        id\n        isSeen\n        message\n        notificationType\n        receivedBy {\n          notifications {\n            edges {\n              node {\n                id\n                message\n                isSeen\n                notificationType\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n*/\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { notifications, loading, refetch } = useNotifications();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      {notifications?.edges?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n        </View>\n      )}\n      <FlatList\n        data={notifications?.edges}\n        numColumns={1}\n        style={{\n          flex: 1,\n        }}\n        renderItem={({ item: edge }) => {\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return <BoardingCallNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.UserManifested:\n              return <ManifestedCard key={edge.node.id} notification={edge.node} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return <RigInspectionNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return <PermissionNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.PublicationRequested:\n              return <PublicationRequestNotification key={edge.node.id} notification={edge.node} />;\n            default:\n              return null;\n          }\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string;\n  name: string;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text label={initals} {...rest} />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n      size={32}\n      {...rest}\n    />\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Dropzone, DropzoneUser, Order } from '../../../api/schema';\nimport UserAvatar from '../../../components/UserAvatar';\n\ninterface IOrder {\n  order: Order;\n  dropzoneUser?: DropzoneUser | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    (order.buyer?.__typename === 'DropzoneUser' && (order.buyer as DropzoneUser))?.id ===\n    dropzoneUser?.id\n      ? 'cash-minus'\n      : 'cash-plus';\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Card.Content style={styles.orderContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {format(order?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`#${order.id} ${order.title}`}\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            descriptionStyle={styles.orderDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                {showAvatar ? (\n                  <UserAvatar\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={30}\n                    name={\n                      (order?.buyer as DropzoneUser)?.user?.name ||\n                      (order?.buyer as Dropzone).name ||\n                      ''\n                    }\n                    image={\n                      (order?.buyer as DropzoneUser).user?.image ||\n                      (order?.buyer as Dropzone).banner ||\n                      undefined\n                    }\n                  />\n                ) : (\n                  <MaterialCommunityIcons\n                    color={\n                      // eslint-disable-next-line no-underscore-dangle\n                      '__typename' in order.buyer &&\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                      // @ts-ignore\n                      order.buyer.__typename === 'DropzoneUser' &&\n                      (order.buyer as DropzoneUser)?.id === dropzoneUser?.id\n                        ? '#FF1414'\n                        : successColor\n                    }\n                    name={icon}\n                    size={36}\n                    style={{ marginHorizontal: 16 }}\n                  />\n                )}\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  ${order.amount}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet, Platform } from 'react-native';\nimport { Avatar, Card, Chip, Divider, Menu, ProgressBar, useTheme } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/core';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nimport useMutationUpdateRig from '../../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { errorColor, successColor } from '../../../constants/Colors';\n\nimport { DropzoneUser, Permission, Rig, RigInspection } from '../../../api/schema.d';\n\nexport interface IRigCardProps {\n  rig: Rig;\n  dropzoneUser?: DropzoneUser | null;\n  rigInspection?: RigInspection;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      dispatch(\n        actions.notifications.showSnackbar({ message: 'Image uploaded', variant: 'success' })\n      );\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'Upload failed', variant: 'error' }));\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result.base64}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.user?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          onDismiss={() => setPackingCardMenuOpen(false)}\n          visible={isPackingCardMenuOpen}\n          style={{ marginTop: 12 }}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <Menu.Item\n            title=\"Upload new\"\n            icon=\"camera\"\n            style={{ paddingVertical: 0 }}\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <Menu.Item\n                title=\"View\"\n                icon=\"eye\"\n                style={{ paddingVertical: 0 }}\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rig,\n              dropzoneUserId: Number(dropzoneUser?.id),\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Permission } from '../../../api/schema.d';\nimport RigDialog from '../../../components/dialogs/Rig';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigCard from './RigCard';\n\nexport default function ProfileScreen() {\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const navigation = useNavigation();\n\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        style={styles.fab}\n        visible={canUpdateUser}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { List, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const { data } = useCurrentDropzone();\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  return (\n    <ScrollableScreen>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            onPress={() =>\n              navigation.navigate('UpdateDropzoneScreen', {\n                dropzone: data?.dropzone,\n              })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n        <List.Item\n          title=\"Permissions\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() => navigation.navigate('DropzonePermissionScreen')}\n        />\n        <List.Item\n          title=\"Aircrafts\"\n          onPress={() => navigation.navigate('PlanesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() => navigation.navigate('DropzoneRigsScreen')}\n        />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() => navigation.navigate('RigInspectionTemplateScreen')}\n        />\n        <List.Item\n          title=\"Master Log\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"View historic data for daily operations\"\n          onPress={() => navigation.navigate('DropzoneMasterLogScreen')}\n        />\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          title=\"Ticket types\"\n          onPress={() => navigation.navigate('TicketTypesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <List.Item\n          title=\"Ticket add-ons\"\n          onPress={() => navigation.navigate('ExtrasScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { MutationCreateTicketTypeArgs, CreateTicketPayload } from '../schema';\n\nconst MUTATION_CREATE_TICKET_TYPE = gql`\n  mutation CreateTicketType(\n    $name: String\n    $cost: Float\n    $dropzoneId: Int!\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    createTicketType(\n      input: {\n        attributes: {\n          name: $name\n          cost: $cost\n          dropzoneId: $dropzoneId\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extraIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  MutationCreateTicketTypeArgs['input']['attributes'],\n  CreateTicketPayload\n>(MUTATION_CREATE_TICKET_TYPE, {\n  getPayload: (result) => result.createTicketType,\n  fieldErrorMap: {\n    extraIds: 'extras',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price')],\n    altitude: [isRequired('Altitude must be specified'), isNumeric('Altitude must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateTicketTypeArgs, UpdateTicketPayload } from '../schema';\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketType(\n    $id: Int!\n    $name: String\n    $cost: Float\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    updateTicketType(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          cost: $cost\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extrasIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateTicketTypeArgs['input']['attributes'],\n  UpdateTicketPayload\n>(MUTATION_UPDATE_TICKET_TYPE, {\n  getPayload: (result) => result.updateTicketType,\n  fieldErrorMap: {\n    id: 'original',\n    extraIds: 'extras',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Menu, List, Divider } from 'react-native-paper';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Extra, Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nconst QUERY_EXTRAS = gql`\n  query QueryExtras($dropzoneId: Int!) {\n    extras(dropzoneId: $dropzoneId) {\n      id\n      cost\n      name\n\n      ticketTypes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst ALTITUDE_LABEL_MAP: { [key: string]: string } = {\n  '14000': 'Height',\n  '4000': 'Hop n Pop',\n};\n\nexport default function TicketTypeForm() {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const { data } = useQuery<Query>(QUERY_EXTRAS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ticketType.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'Name of the ticket users will see'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ticketType.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || 'Base cost without extra ticket addons'}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <Menu\n          onDismiss={() => setAltitudeMenuOpen(false)}\n          visible={altitudeMenuOpen}\n          style={{ position: 'absolute', right: '10%', left: '10%', flex: 1 }}\n          anchor={\n            <List.Item\n              onPress={() => {\n                setAltitudeMenuOpen(true);\n              }}\n              title={\n                state.fields.altitude.value &&\n                state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                  ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                  : 'Custom'\n              }\n              style={{ width: '100%', flex: 1 }}\n              right={() => (\n                <List.Icon\n                  icon={\n                    state.fields.altitude.value &&\n                    state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                      ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                      : 'pencil-plus'\n                  }\n                />\n              )}\n            />\n          }\n        >\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Hop n Pop\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Height\"\n            right={() => <List.Icon icon=\"airplane-takeoff\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Other\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n        </Menu>\n\n        {(!state.fields.altitude.value || ![4000, 14000].includes(state.fields.altitude.value)) && (\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Custom altitude\"\n            error={!!state.fields.altitude.error}\n            value={state.fields.altitude?.value?.toString()}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n            }\n          />\n        )}\n\n        <Checkbox.Item\n          label=\"Tandem\"\n          style={{ width: '100%' }}\n          status={state.fields.isTandem.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.ticketType.setField(['isTandem', !state.fields.isTandem.value]))\n          }\n        />\n        <HelperText type={state.fields.isTandem.error ? 'error' : 'info'}>\n          {state.fields.isTandem.error ||\n            'Allow also manifesting a passenger when using this ticket type'}\n        </HelperText>\n\n        <Checkbox.Item\n          label=\"Public manifesting\"\n          style={{ width: '100%' }}\n          status={state.fields.allowManifestingSelf.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(\n              actions.forms.ticketType.setField([\n                'allowManifestingSelf',\n                !state.fields.allowManifestingSelf.value,\n              ])\n            )\n          }\n        />\n\n        <HelperText type={state.fields.allowManifestingSelf.error ? 'error' : 'info'}>\n          {state.fields.allowManifestingSelf.error ||\n            'Allow users to manifest themselves with this ticket'}\n        </HelperText>\n\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        {data?.extras.map((extra) => (\n          <Checkbox.Item\n            key={`extra-${extra.id}`}\n            label={extra.name || ''}\n            status={\n              state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.ticketType.setField([\n                  'extras',\n                  state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                    ? state.fields.extras.value?.filter(({ id }) => id !== extra.id)\n                    : [...(state.fields.extras?.value as Required<Extra[]>), extra],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useIsFocused } from '@react-navigation/core';\nimport useMutationCreateTicketType from '../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../api/hooks/useMutationUpdateTicketType';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport TicketTypeForm from '../forms/ticket_type/TicketTypeForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { TicketTypeFields } from '../forms/ticket_type/slice';\n\ninterface ITicketTypeDialog {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const createTicketType = useMutationCreateTicketType({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Saved`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.ticketType.reset());\n      onClose();\n    },\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateTicketType = useMutationUpdateTicketType({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved`,\n            variant: 'success',\n          })\n        );\n        dispatch(actions.forms.ticketType.reset());\n        onClose();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (isFocused) {\n      dispatch(actions.forms.ticketType.reset());\n    }\n  }, [dispatch, isFocused]);\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateTicketType.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    } else {\n      await createTicketType.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    }\n  }, [\n    createTicketType,\n    currentDropzone?.dropzone?.id,\n    state.fields.allowManifestingSelf.value,\n    state.fields.altitude.value,\n    state.fields.cost.value,\n    state.fields.extras?.value,\n    state.fields.isTandem.value,\n    state.fields.name.value,\n    state.original?.id,\n    updateTicketType,\n  ]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket' : 'New ticket'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={() => {\n        onClose();\n      }}\n      loading={createTicketType.loading || updateTicketType.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useRoute } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport TicketTypesDialog from '../../../components/dialogs/TicketType';\nimport SwipeActions from '../../../components/layout/SwipeActions';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      ticketTypes {\n        id\n        cost\n        currency\n        name\n        altitude\n        allowManifestingSelf\n\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketTypePublic($id: Int!, $allowManifestingSelf: Boolean) {\n    updateTicketType(\n      input: { id: $id, attributes: { allowManifestingSelf: $allowManifestingSelf } }\n    ) {\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        isTandem\n        extras {\n          id\n          name\n          cost\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_DELETE_TICKET_TYPE = gql`\n  mutation DeleteTicketType($id: Int!) {\n    deleteTicketType(input: { id: $id }) {\n      ticketType {\n        id\n        dropzone {\n          id\n          ticketTypes {\n            id\n            cost\n            currency\n            name\n            altitude\n            allowManifestingSelf\n\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n      errors\n    }\n  }\n`;\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const form = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const { data, loading, refetch } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const route = useRoute();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n  const [mutationUpdateTicketType] = useMutation<Mutation>(MUTATION_UPDATE_TICKET_TYPE);\n  const [mutationDeleteTicketType] = useMutation<Mutation>(MUTATION_DELETE_TICKET_TYPE);\n\n  React.useEffect(() => {\n    if (route.name === 'TicketTypesScreen') {\n      refetch();\n    }\n  }, [refetch, route.name]);\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.ticketTypes?.map((ticketType) => (\n          <SwipeActions\n            rightAction={{\n              label: 'Delete',\n              backgroundColor: 'red',\n              onPress: async () => {\n                const { data: result } = await mutationDeleteTicketType({\n                  variables: { id: Number(ticketType.id) },\n                });\n\n                if (result?.deleteTicketType?.errors?.length) {\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: result?.deleteTicketType?.errors[0],\n                      variant: 'error',\n                    })\n                  );\n                }\n              },\n            }}\n          >\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setOpen(ticketType));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n              <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n              <DataTable.Cell numeric>\n                <Switch\n                  onValueChange={() => {\n                    mutationUpdateTicketType({\n                      variables: {\n                        id: Number(ticketType.id),\n                        allowManifestingSelf: !ticketType.allowManifestingSelf,\n                      },\n                    });\n                  }}\n                  value={!!ticketType.allowManifestingSelf}\n                />\n              </DataTable.Cell>\n            </DataTable.Row>\n          </SwipeActions>\n        ))}\n      </DataTable>\n\n      <FAB\n        style={styles.fab}\n        small\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.ticketType.setOpen(true))}\n        label=\"New ticket type\"\n      />\n      <TicketTypesDialog\n        open={form.open}\n        onClose={() => dispatch(actions.forms.ticketType.setOpen(false))}\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs, UpdateDropzonePayload } from '../schema';\n\nconst MUTATION_UPDATE_DROPZONE = gql`\n  mutation UpdateDropzone(\n    $id: Int!\n    $name: String!\n    $requestPublication: Boolean\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n    $isCreditSystemEnabled: Boolean\n    $isPublic: Boolean\n  ) {\n    updateDropzone(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          banner: $banner\n          lat: $lat\n          lng: $lng\n          requestPublication: $requestPublication\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          isCreditSystemEnabled: $isCreditSystemEnabled\n          isPublic: $isPublic\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n        primaryColor\n        secondaryColor\n        isCreditSystemEnabled\n\n        planes {\n          id\n          name\n        }\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  UpdateDropzonePayload\n>(MUTATION_UPDATE_DROPZONE, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\nimport SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={SliderComponent}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n  secondaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor, secondaryColor } = props;\n  const { theme } = useAppSelector((root) => root.global);\n  const primaryLight = color(primaryColor).lighten(0.6).hex();\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: secondaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: primaryLight }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\n\ninterface IWebPreview {\n  primaryColor?: string;\n  secondaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor, secondaryColor } = props;\n  const primaryLight = color(primaryColor).lighten(0.6).hex();\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: secondaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: primaryLight }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: primaryLight }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value.lng === null || value.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      defaultZoom={3}\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        props.onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, TextInput, HelperText, Card, List, Checkbox } from 'react-native-paper';\nimport { getDocumentAsync } from 'expo-document-picker';\nimport { useQuery, gql } from '@apollo/client';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport ColorPicker from '../../input/colorpicker';\nimport { Query } from '../../../api/schema';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport { warningColor } from '../../../constants/Colors';\n\nconst QUERY_FEDERATIONS = gql`\n  query QueryFederations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useQuery<Query>(QUERY_FEDERATIONS);\n  const { currentUser } = useCurrentDropzone();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await getDocumentAsync({\n        multiple: false,\n        type: 'image',\n      })) as { uri: string };\n\n      dispatch(actions.forms.dropzone.setField(['banner', result.uri as string]));\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch]);\n\n  console.log(state.fields);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Banner\" />\n          <Card.Cover\n            source={{\n              uri: state.fields.banner.value || 'https://picsum.photos/700',\n            }}\n            resizeMode=\"cover\"\n            style={{ width: '100%' }}\n          />\n          <Card.Actions style={{ justifyContent: 'flex-end' }}>\n            <Button onPress={onPickImage}>Upload</Button>\n          </Card.Actions>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview\n              primaryColor={state.fields.primaryColor.value || '#000000'}\n              secondaryColor={state.fields.secondaryColor.value || '#FFFFFF'}\n            />\n\n            <WebPreview\n              primaryColor={state.fields.primaryColor.value || '#000000'}\n              secondaryColor={state.fields.secondaryColor.value || '#FFFFFF'}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Accent color\"\n          helperText=\"Accent color is used for highlights, like buttons and loading bars\"\n          error={state.fields.secondaryColor.error}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['secondaryColor', color]));\n            dispatch(actions.global.setAccentColor(color));\n          }}\n          value={state.fields.secondaryColor.value || '#FFFFFF'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title={\n              state?.original?.requestPublication && !state.original?.isPublic\n                ? 'Awaiting review'\n                : 'Request Publication'\n            }\n            description={\n              state?.original?.requestPublication && !state.original?.isPublic\n                ? 'You will be contacted to verify the legitimacy of your dropzone before your dropzone is publicly available. This is to prevent illegitimate actors on the platform. Thank you for your patience and understanding.'\n                : 'Your dropzone will not be visible to other users until it is published. You can request a review to publish your dropzone, and may be contacted for verification on the email or phone number on your profile.'\n            }\n            descriptionNumberOfLines={10}\n            onPress={() => {\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'requestPublication',\n                  !state.fields.requestPublication?.value,\n                ])\n              );\n              if (state.fields.isPublic) {\n                dispatch(\n                  actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic?.value])\n                );\n              }\n            }}\n            left={(iconProps) => {\n              const extraProps = {\n                icon: undefined as IconSource | undefined,\n                color: undefined as string | undefined,\n              };\n\n              if (state.fields.requestPublication?.value) {\n                extraProps.icon = 'upload';\n              }\n\n              if (state.original?.requestPublication && state.fields.requestPublication?.value) {\n                extraProps.color = warningColor;\n                extraProps.icon = 'progress-upload';\n              }\n\n              if (state.original?.isPublic && state.fields?.isPublic.value) {\n                extraProps.icon = 'check';\n              }\n\n              if (!extraProps.icon) {\n                return <View style={{ width: 56, height: 56 }} />;\n              }\n\n              console.log({\n                extraProps,\n                public: state.fields.isPublic.value,\n                requestPublic: state.fields.requestPublication.value,\n              });\n              return <List.Icon {...iconProps} {...extraProps} />;\n            }}\n          />\n          {currentUser?.user?.moderationRole === 'administrator' &&\n          state?.original?.requestPublication ? (\n            <Card.Actions>\n              <Button\n                onPress={() => dispatch(actions.forms.dropzone.setField(['isPublic', false]))}\n              >\n                Decline\n              </Button>\n              <Button onPress={() => dispatch(actions.forms.dropzone.setField(['isPublic', true]))}>\n                Accept\n              </Button>\n            </Card.Actions>\n          ) : null}\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ProgressBar } from 'react-native-paper';\nimport { gql } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useMutationUpdateDropzone from '../../../api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { Dropzone } from '../../../api/schema';\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{ key: string; name: string; params: { dropzone: Dropzone } }>();\n  const { dropzone } = route.params;\n  const navigation = useNavigation();\n\n  const { data, currentUser, loading } = useCurrentDropzone();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(data.dropzone));\n    }\n  }, [data?.dropzone, data?.dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n    onSuccess: (payload) => {\n      dispatch(\n        actions.global.setDropzone({\n          ...(globalState.currentDropzone || {}),\n          ...(payload.dropzone as Dropzone),\n        })\n      );\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Your settings have been saved`,\n          variant: 'success',\n        })\n      );\n      navigation.goBack();\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n      requestPublication,\n      isPublic,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federationId: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n          isPublic:\n            isPublic?.value !== undefined &&\n            currentUser?.user.moderationRole &&\n            currentUser?.user.moderationRole !== 'user'\n              ? !!isPublic?.value\n              : null,\n          requestPublication: !!requestPublication?.value,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n    return null;\n  }, [\n    state.fields,\n    dispatch,\n    mutationUpdateDropzone,\n    dropzone?.id,\n    currentUser?.user.moderationRole,\n  ]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <ScrollableScreen\n        style={{ backgroundColor: '#f4f5f5' }}\n        contentContainerStyle={styles.content}\n      >\n        <DropzoneForm loading={loading} />\n        <View style={styles.fields}>\n          <Button\n            mode=\"contained\"\n            disabled={mutationUpdateDropzone.loading}\n            onPress={onSave}\n            loading={mutationUpdateDropzone.loading}\n          >\n            Save\n          </Button>\n        </View>\n      </ScrollableScreen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: 500,\n    padding: 48,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function DropzoneForm() {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value}\n        onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Registration\"\n        error={!!state.fields.registration.error}\n        value={state.fields.registration.value}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['registration', newValue]))\n        }\n      />\n      <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n        {state.fields.registration.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"hours\"\n        error={!!state.fields.hours.error}\n        value={state.fields.hours?.value?.toString()}\n        placeholder=\"Optional\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['hours', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.hours.error ? 'error' : 'info'}>\n        {state.fields.hours.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Min slots\"\n        error={!!state.fields.minSlots.error}\n        value={state.fields.minSlots.value?.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['minSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.minSlots.error ? 'error' : 'info'}>\n        {state.fields.minSlots.error || 'Minimum tickets required to send it'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Max slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error ||\n          'Maximum amount of jumpers who can be manifested on one load'}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    width: '100%',\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\n\nimport { Mutation } from '../../api/schema';\nimport PlaneForm from '../forms/plane/PlaneForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        ...plane\n\n        dropzone {\n          id\n          planes {\n            ...plane\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n  fragment plane on Plane {\n    id\n    name\n    registration\n    minSlots\n    maxSlots\n    hours\n    nextMaintenanceHours\n\n    dropzone {\n      id\n      name\n      planes {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n      }\n    }\n  }\n`;\n\ninterface IPlaneDialogProps {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function CreatePlaneScreen(props: IPlaneDialogProps) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  const [mutationCreatePlane, create] = useMutation<Mutation>(MUTATION_CREATE_PLANE);\n  const [mutationUpdatePlane, update] = useMutation<Mutation>(MUTATION_UPDATE_PLANE);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.registration.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['registration', 'Registration is too short']));\n    }\n\n    if (!state.fields.maxSlots.value) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['maxSlots', 'Max slots must be specified']));\n    }\n\n    return !hasError;\n  }, [\n    dispatch,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.registration.value,\n  ]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots, hours, nextMaintenanceHours } = state.fields;\n\n    const mutation = state.original?.id ? mutationUpdatePlane : mutationCreatePlane;\n\n    if (validate()) {\n      try {\n        const result = await mutation({\n          variables: {\n            ...(state.original?.id\n              ? { id: Number(state.original.id) }\n              : { dropzoneId: Number(currentDropzone?.dropzone?.id) }),\n            name: name.value,\n            registration: registration.value,\n            minSlots: minSlots.value,\n            maxSlots: maxSlots.value,\n            hours: hours.value,\n            nextMaintenanceHours: nextMaintenanceHours.value,\n          },\n        });\n\n        const payload = state.original?.id ? result?.data?.updatePlane : result?.data?.createPlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'hours':\n                return dispatch(actions.forms.plane.setFieldError(['hours', message]));\n              case 'next_maintenance_hours':\n                return dispatch(\n                  actions.forms.plane.setFieldError(['nextMaintenanceHours', message])\n                );\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n    onClose,\n    state.fields,\n    state.original?.id,\n    validate,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n  const onDialogClose = React.useCallback(() => {\n    onClose();\n    dispatch(actions.forms.plane.reset());\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSave}\n      loading={create.loading || update.loading}\n      onClose={onDialogClose}\n    >\n      <PlaneForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PlaneDialog from '../../../components/dialogs/Plane';\nimport useRestriction from '../../../hooks/useRestriction';\nimport SwipeActions from '../../../components/layout/SwipeActions';\n\nconst QUERY_PLANES = gql`\n  query QueryPlanes($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      planes {\n        id\n        name\n        registration\n        hours\n        minSlots\n        maxSlots\n        nextMaintenanceHours\n        createdAt\n      }\n    }\n  }\n`;\n\nconst MUTATION_DELETE_PLANE = gql`\n  mutation DeletePlane($id: Int!) {\n    deletePlane(input: { id: $id }) {\n      errors\n      plane {\n        id\n        dropzone {\n          id\n          planes {\n            name\n            registration\n            hours\n            minSlots\n            maxSlots\n            nextMaintenanceHours\n            createdAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.forms.plane);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n    },\n  });\n\n  const [deletePlane] = useMutation<Mutation>(MUTATION_DELETE_PLANE);\n  const dispatch = useAppDispatch();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n\n  return (\n    <>\n      <ScrollableScreen\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n      >\n        <ProgressBar visible={loading} color={global.theme.colors.accent} />\n\n        {data?.dropzone?.planes?.length ? null : (\n          <NoResults\n            title=\"No planes?\"\n            subtitle=\"You need to have at least one plane to manifest loads\"\n          />\n        )}\n\n        {!data?.dropzone?.planes?.length ? null : (\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Name</DataTable.Title>\n              <DataTable.Title numeric>Registration</DataTable.Title>\n              <DataTable.Title numeric>Slots</DataTable.Title>\n            </DataTable.Header>\n            {data?.dropzone?.planes?.map((plane) => (\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: async () => {\n                    const { data: result } = await deletePlane({\n                      variables: { id: Number(plane.id) },\n                    });\n\n                    if (result?.deletePlane?.errors?.length) {\n                      dispatch(\n                        actions.notifications.showSnackbar({\n                          message: result.deletePlane.errors[0],\n                          variant: 'error',\n                        })\n                      );\n                    }\n                  },\n                }}\n              >\n                <DataTable.Row\n                  pointerEvents=\"none\"\n                  onPress={() => {\n                    dispatch(actions.forms.plane.setOpen(plane));\n                  }}\n                >\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            ))}\n          </DataTable>\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreatePlane}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.plane.setOpen(true))}\n          label=\"New plane\"\n        />\n      </ScrollableScreen>\n      <PlaneDialog open={state.open} onClose={() => dispatch(actions.forms.plane.setOpen(false))} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List, TextInput } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          mode=\"outlined\"\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChangeText={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          value={value as string}\n          mode=\"outlined\"\n          onChangeText={(text) => onChange({ ...config, value: text as string })}\n          label={config.label || ''}\n          keyboardType=\"number-pad\"\n          style={{ marginVertical: 8 }}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          timestamp={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"delete\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from '../../../components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_RIG_INSPECTION = gql`\n  query RigInspection($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_FORM = gql`\n  mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n    updateFormTemplate(\n      input: { id: $formId, attributes: { dropzoneId: $dropzoneId, definition: $definition } }\n    ) {\n      formTemplate {\n        id\n        name\n        definition\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const { data } = useQuery<Query>(QUERY_RIG_INSPECTION, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useMutation<Mutation>(MUTATION_UPDATE_FORM);\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(actions.forms.rigInspectionTemplate.setOpen(data.dropzone.rigInspectionTemplate));\n    }\n  }, [data?.dropzone.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Template saved',\n          variant: 'success',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <Card style={{ width: '100%' }}>\n        <Card.Title title=\"Rig Inspection Form Template\" />\n\n        <Card.Content>\n          <RigInspectionTemplateForm />\n        </Card.Content>\n\n        <Card.Actions>\n          <Button\n            disabled={!canEdit}\n            mode=\"contained\"\n            loading={mutation.loading}\n            onPress={() => updateForm()}\n            style={{ width: '100%' }}\n          >\n            Save template\n          </Button>\n        </Card.Actions>\n      </Card>\n    </ScrollableScreen>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_DROPZONE_RIGS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigs {\n        id\n        name\n        make\n        isPublic\n        model\n        serial\n        rigType\n        repackExpiresAt\n        canopySize\n        packValue\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateDropzoneRig($id: Int!, $isPublic: Boolean) {\n    updateRig(input: { id: $id, attributes: { isPublic: $isPublic } }) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        isPublic\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        dropzone {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            isPublic\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_RIGS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useMutation<Mutation>(MUTATION_UPDATE_RIG);\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    dispatch(\n                      actions.notifications.showSnackbar({\n                        message: result?.updateRig.errors[0],\n                        variant: 'error',\n                      })\n                    );\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Mutation, Permission, UserRole } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: UserRole;\n  permissionName: string;\n}\n\nconst MUTATION_UPDATE_ROLE = gql`\n  mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n    updateRole(input: { id: $roleId, permission: $permissionName, enabled: $enabled }) {\n      role {\n        id\n        name\n        permissions\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useMutation<Mutation>(MUTATION_UPDATE_ROLE);\n  const dispatch = useAppDispatch();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) =>\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'error',\n                  })\n                )\n              );\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport { Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PermissionListItem from '../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        flexGrow: 1,\n        paddingHorizontal: 16,\n      }}\n      layout={[\n        {\n          key: 'first',\n          height: 175,\n          marginTop: 70,\n          marginBottom: 35,\n          width: '100%',\n        },\n        { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n      ]}\n    />\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Manifesting\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket types\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket addons\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Query } from '../../../api/schema.d';\nimport DatePicker from '../../../components/input/date_picker/DatePicker';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: Int!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            dropzoneUser {\n              id\n              license {\n                id\n                name\n              }\n            }\n            user {\n              id\n              name\n              license {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          timestamp={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, List } from 'react-native-paper';\nimport { xor } from 'lodash';\nimport { Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_TICKET_TYPES = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    ticketTypes(dropzoneId: $dropzoneId) {\n      id\n      cost\n      currency\n      name\n      allowManifestingSelf\n\n      extras {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function ExtraForm() {\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const { data } = useQuery<Query>(QUERY_TICKET_TYPES, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.extra.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.extra.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || ''}\n      </HelperText>\n\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        {data?.ticketTypes.map((ticket) => (\n          <Checkbox.Item\n            label={ticket.name || ''}\n            status={\n              state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.extra.setField([\n                  'ticketTypes',\n                  state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                    ? state.fields.ticketTypes.value?.filter(({ id }) => id !== ticket.id)\n                    : [...(state.fields.ticketTypes.value || []), ticket],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { gql, useMutation } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { actions as snackbar } from '../../../components/notifications';\n\nimport { Mutation, Extra } from '../../../api/schema';\nimport ExtraForm from '../../../components/forms/extra/ExtraForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        id\n        name\n\n        ticketTypes {\n          id\n          name\n          cost\n          altitude\n          allowManifestingSelf\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateExtraScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n  const route = useRoute<{ key: string; name: string; params: { extra: Extra } }>();\n  const { extra } = route.params;\n\n  React.useEffect(() => {\n    dispatch(actions.forms.extra.setOpen(extra));\n  }, [dispatch, extra, extra.id]);\n\n  const [mutationUpdateExtra, data] = useMutation<Mutation>(MUTATION_UPDATE_EXTRA);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (Number(state.fields.cost.value) < 0) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['cost', 'Price must be a number']));\n    }\n\n    return !hasError;\n  }, [state.fields, dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, cost, ticketTypes } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationUpdateExtra({\n          variables: {\n            id: Number(state.original?.id),\n            dropzoneId: Number(currentDropzone?.dropzone?.id),\n            name: name.value,\n            cost: cost.value,\n            ticketTypeIds: ticketTypes.value?.map(({ id }) => id),\n          },\n        });\n\n        if (result.data?.updateExtra?.extra) {\n          dispatch(snackbar.showSnackbar({ message: `Saved`, variant: 'success' }));\n          navigation.goBack();\n        }\n      } catch (error) {\n        dispatch(snackbar.showSnackbar({ message: error.message, variant: 'error' }));\n      }\n    }\n  }, [\n    state.fields,\n    state.original?.id,\n    validate,\n    mutationUpdateExtra,\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 48 }}>\n      <MaterialCommunityIcons\n        name=\"ticket-percent\"\n        size={100}\n        color=\"#999999\"\n        style={{ alignSelf: 'center' }}\n      />\n      <ExtraForm />\n      <View style={styles.fields}>\n        <Button mode=\"contained\" disabled={data.loading} onPress={onSave} loading={data.loading}>\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { ExtraInput, CreateExtraPayload } from '../schema';\n\nconst MUTATION_CREATE_EXTRA = gql`\n  mutation CreateExtra($name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n    createExtra(\n      input: {\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<ExtraInput, CreateExtraPayload>(MUTATION_CREATE_EXTRA, {\n  getPayload: (result) => result.createExtra,\n  fieldErrorMap: {\n    ticketTypeIds: 'ticketTypes',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price'), isNumeric('Price must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { ExtraInput, UpdateExtraPayload } from '../schema';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & ExtraInput, UpdateExtraPayload>(\n  MUTATION_UPDATE_EXTRA,\n  {\n    getPayload: (result) => result.updateExtra,\n    fieldErrorMap: {\n      id: 'original',\n      ticketTypeIds: 'ticketTypes',\n    },\n  }\n);\n","import * as React from 'react';\nimport useMutationCreateExtra from '../../api/hooks/useMutationCreateExtra';\nimport useMutationUpdateExtra from '../../api/hooks/useMutationUpdateExtra';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport ExtraForm from '../forms/extra/ExtraForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { ExtraFields } from '../forms/extra/slice';\n\ninterface ITicketTypeExtraDialog {\n  open: boolean;\n  onClose(): void;\n}\nexport default function TicketTypeExtraDialog(props: ITicketTypeExtraDialog) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const createExtra = useMutationCreateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateExtra = useMutationUpdateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    if (state?.original?.id) {\n      updateExtra.mutate({\n        id: Number(state.original.id),\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    } else {\n      createExtra.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    }\n  }, [\n    createExtra,\n    currentDropzone?.dropzone?.id,\n    state.fields.cost.value,\n    state.fields.name.value,\n    state.fields.ticketTypes.value,\n    state.original?.id,\n    updateExtra,\n  ]);\n\n  const snapPoints = React.useMemo(() => [300, 500], []);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket addon' : 'New ticket addon'}\n      open={open}\n      onClose={onClose}\n      loading={createExtra.loading || updateExtra.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      snapPoints={snapPoints}\n    >\n      <ExtraForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { View } from '../../../components/Themed';\nimport { Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport TicketTypeExtraDialog from '../../../components/dialogs/TicketTypeExtra';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryExtra($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      extras {\n        id\n        cost\n        name\n        ticketTypes {\n          id\n          altitude\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function ExtrasScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const globalState = useAppSelector((root) => root.global);\n  const formState = useAppSelector((root) => root.forms.extra);\n  const { data, loading } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.accent} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.dropzone?.extras?.map((extra) => (\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.extra.setOpen(extra));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.dropzone?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.extra.setOpen(true))}\n          label=\"New ticket addon\"\n        />\n      </View>\n      <TicketTypeExtraDialog\n        open={formState.open}\n        onClose={() => dispatch(actions.forms.extra.setOpen(false))}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Transaction } from '../../../api/schema';\n\ninterface ITransaction {\n  transaction: Transaction;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {transaction?.createdAt && format(transaction?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport LottieView from 'lottie-react-native';\nimport { successColor } from '../../../constants/Colors';\nimport { Dropzone, DropzoneUser, Order, Receipt, Wallet } from '../../../api/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport UserAvatar from '../../../components/UserAvatar';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport lottieTicketAnimation from '../../../../assets/images/ticket.json';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: Receipt;\n  index: number;\n  order: Order;\n}\n\nfunction ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const { currentUser } = useCurrentDropzone();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | Dropzone | DropzoneUser) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        .filter((transaction) => isUser(transaction.receiver))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\nexport default function OrderScreen() {\n  const route = useRoute<{ key: string; name: string; params: { order: Order } }>();\n  const theme = useTheme();\n  const { order } = route.params;\n\n  console.log('Order', route.params);\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                }}\n              >{`Order #${order.id}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                }}\n              >\n                {order.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name || (order?.seller as Dropzone)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport { useDropzoneTransactionsLazyQuery } from '../../../api/reflection';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const [fetchTransactions, { data }] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({ variables: { dropzoneId: state.currentDropzoneId } });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            showAvatar\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider } from 'react-native-paper';\nimport { KeyboardAvoidingView } from 'react-native';\nimport RigInspectionForm from '../../../components/forms/rig_inspection/RigInspectionForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone, { QUERY_DROPZONE } from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Query, Rig, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { QUERY_DROPZONE_USER } from '../../../api/hooks/useDropzoneUser';\nimport RigCard from '../equipment/RigCard';\n\nconst QUERY_RIG_INSPECTIONS = gql`\n  query RigInspections($dropzoneUserId: Int, $dropzoneId: Int!, $userId: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n\n      dropzoneUser(id: $dropzoneUserId, userId: $userId) {\n        id\n        rigInspections {\n          id\n          isOk\n          definition\n          rig {\n            id\n            name\n          }\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          formTemplate {\n            id\n            name\n            definition\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_CREATE_RIG_INSPECTION = gql`\n  mutation CreateRigInspection($dropzoneId: Int, $rigId: Int, $isOk: Boolean, $definition: String) {\n    createRigInspection(\n      input: {\n        attributes: { dropzoneId: $dropzoneId, rigId: $rigId, isOk: $isOk, definition: $definition }\n      }\n    ) {\n      rigInspection {\n        id\n        isOk\n        definition\n        dropzoneUser {\n          id\n          rigInspections {\n            id\n            isOk\n            rig {\n              id\n            }\n            inspectedBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n          }\n        }\n        inspectedBy {\n          id\n          user {\n            id\n            name\n          }\n        }\n        rig {\n          id\n          name\n          make\n          model\n        }\n\n        formTemplate {\n          id\n          definition\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{\n    key: string;\n    name: string;\n    params: { rig: Rig; dropzoneUserId: number; userId: number };\n  }>();\n  const { rig, dropzoneUserId, userId } = route.params;\n  const { data, refetch } = useQuery<Query>(QUERY_RIG_INSPECTIONS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      dropzoneUserId,\n      userId,\n    },\n  });\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    refetch();\n  }, [isFocused, refetch]);\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useMutation<Mutation>(\n    MUTATION_CREATE_RIG_INSPECTION\n  );\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = data?.dropzone?.dropzoneUser?.rigInspections?.some(\n      (inspection) => inspection.rig?.id?.toString() === rig.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = data?.dropzone?.dropzoneUser?.rigInspections?.find(\n        (record) => record.rig?.id === rig.id\n      );\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          data?.dropzone.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    data?.dropzone?.dropzoneUser?.rigInspections,\n    data?.dropzone.rigInspectionTemplate?.definition,\n    dispatch,\n    rig.id,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzoneId: Number(currentDropzone?.dropzone?.id),\n          rigId: Number(rig.id),\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<Query>({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: QUERY_DROPZONE,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: QUERY_DROPZONE,\n              variables: {\n                dropzoneId: Number(currentDropzone?.dropzone?.id),\n                earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            ...result?.dropzone,\n            dropzoneUser: {\n              ...result?.dropzone?.dropzoneUser,\n              rigInspections: [\n                ...(result?.dropzone?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Rig inspection saved',\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig.id,\n    state.fields,\n    state.ok,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <KeyboardAvoidingView\n        behavior=\"position\"\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          maxWidth: 400,\n          backgroundColor: 'transparent',\n        }}\n      >\n        <RigCard rig={rig} />\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={data?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            <RigInspectionForm />\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) === data?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { Dropzone, DropzoneUser, Order, Slot } from '../../api/schema.d';\nimport { useAppSelector } from '../../state';\nimport LoadScreen from '../../screens/authenticated/load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from '../../screens/authenticated/weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from '../../screens/authenticated/weather_conditions/JumpRunScreen';\nimport WindScreen from '../../screens/authenticated/weather_conditions/WindScreen';\nimport AppBar from '../AppBar';\n\nimport ManifestScreen from '../../screens/authenticated/manifest/ManifestScreen';\nimport ManifestGroupScreen from '../../screens/authenticated/manifest/ManifestGroupScreen';\n// eslint-disable-next-line max-len\nimport ManifestGroupUserSelectScreen from '../../screens/authenticated/manifest/ManifestGroupUserSelectScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\n// Settings\nimport SettingsScreen from '../../screens/authenticated/settings/SettingsScreen';\nimport TicketTypeSettingsScreen from '../../screens/authenticated/ticket_types/TicketTypesScreen';\nimport UpdateDropzoneScreen from '../../screens/authenticated/dropzones/UpdateDropzoneScreen';\nimport PlanesScreen from '../../screens/authenticated/planes/PlanesScreen';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateScreen from '../../screens/authenticated/settings/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from '../../screens/authenticated/settings/DropzoneRigsScreen';\n// eslint-disable-next-line max-len\nimport DropzonePermissionScreen from '../../screens/authenticated/settings/DropzonePermissionScreen';\nimport DropzoneMasterLogScreen from '../../screens/authenticated/settings/DropzoneMasterLogScreen';\nimport UpdateExtraScreen from '../../screens/authenticated/extras/UpdateExtraScreen';\nimport ExtrasScreen from '../../screens/authenticated/extras/ExtrasScreen';\nimport OrderScreen from '../../screens/authenticated/transactions/OrderScreen';\nimport DropzoneTransactionsScreen from '../../screens/authenticated/transactions/DropzoneTransactionsScreen';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\n\nexport type IManifestTabParams = {\n  DropzoneScreen: undefined;\n  LoadScreen: undefined;\n  ManifestGroupUserSelectScreen: undefined;\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  JumpRunScreen: undefined;\n  Settings: undefined;\n  Profile: undefined;\n  ManifestGroupScreen: {\n    users?: DropzoneUser[];\n    slots?: Slot[];\n    loadId?: number;\n  };\n\n  ProfileScreen: {\n    userId: string;\n  };\n  NotificationsScreen: undefined;\n  EquipmentScreen: undefined;\n  TransactionsScreen: undefined;\n\n  SettingsScreen: undefined;\n  UpdateDropzoneScreen: { dropzone: Dropzone };\n  TicketTypeSettingsScreen: undefined;\n  PlanesScreen: undefined;\n  PlaneScreen: undefined;\n  TicketTypesScreen: undefined;\n  UpdateExtraScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  DropzonePermissionScreen: undefined;\n  DropzoneMasterLogScreen: undefined;\n  RigInspectionScreen: undefined;\n  DropzoneTransactionsScreen: undefined;\n  OrderScreen: {\n    order: Order;\n  };\n};\n\nconst Manifest = createStackNavigator<IManifestTabParams>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n  const { currentUser } = useCurrentDropzone();\n\n  return (\n    <Manifest.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Manifest.Screen\n        name=\"DropzoneScreen\"\n        component={ManifestScreen}\n        options={{ title: 'Manifest' }}\n      />\n      <Manifest.Screen\n        name=\"WeatherConditionsScreen\"\n        component={WeatherConditionsScreen}\n        options={{ headerShown: false }}\n      />\n      <Manifest.Screen\n        name=\"WindScreen\"\n        component={WindScreen}\n        options={{ title: 'Winds Aloft' }}\n      />\n      <Manifest.Screen\n        name=\"JumpRunScreen\"\n        component={JumpRunScreen}\n        options={{ title: 'Jump Run' }}\n      />\n      <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n      <Manifest.Screen\n        name=\"ManifestGroupScreen\"\n        component={ManifestGroupScreen}\n        options={{ title: 'Manifest group' }}\n      />\n      <Manifest.Screen\n        name=\"ManifestGroupUserSelectScreen\"\n        component={ManifestGroupUserSelectScreen}\n        options={{ title: 'Select users' }}\n      />\n\n      {/* PROFILE */}\n      <Manifest.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'Profile' }}\n        initialParams={{\n          userId: currentUser?.id,\n        }}\n      />\n      <Manifest.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n      <Manifest.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n      <Manifest.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Account History' }}\n      />\n\n      <Manifest.Screen name=\"OrderScreen\" component={OrderScreen} options={{ title: 'Order' }} />\n\n      <Manifest.Screen\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n        options={{ title: 'Settings' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateDropzoneScreen\"\n        component={UpdateDropzoneScreen}\n        options={{ title: 'Basic settings' }}\n      />\n      <Manifest.Screen name=\"PlanesScreen\" component={PlanesScreen} options={{ title: 'Planes' }} />\n      <Manifest.Screen\n        name=\"TicketTypesScreen\"\n        component={TicketTypeSettingsScreen}\n        options={{ title: 'Ticket types' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateExtraScreen\"\n        component={UpdateExtraScreen}\n        options={{ title: 'Update ticket add-on' }}\n      />\n      <Manifest.Screen\n        name=\"ExtrasScreen\"\n        component={ExtrasScreen}\n        options={{ title: 'Ticket add-ons' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionTemplateScreen\"\n        component={RigInspectionTemplateScreen}\n        options={{ title: 'Rig Inspection Form' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig Inspection' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneRigsScreen\"\n        component={DropzoneRigsScreen}\n        options={{ title: 'Dropzone rigs' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneTransactionsScreen\"\n        component={DropzoneTransactionsScreen}\n        options={{ title: 'Order Activity' }}\n      />\n      <Manifest.Screen\n        name=\"DropzonePermissionScreen\"\n        component={DropzonePermissionScreen}\n        options={{ title: 'Permissions' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneMasterLogScreen\"\n        component={DropzoneMasterLogScreen}\n        options={{ title: 'Master log' }}\n      />\n    </Manifest.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport NumberField from '../../input/number_input/NumberField';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.ghost.setField([\n            'exitWeight',\n            state.original.exitWeight?.toString() || '60',\n          ])\n        );\n      }\n\n      if (!state.fields.license.value && state.original?.license?.id) {\n        if (state.original.license.federation) {\n          dispatch(actions.forms.ghost.setFederation(state.original.license.federation));\n        }\n        dispatch(actions.forms.ghost.setField(['license', state.original.license]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.license.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={Number(state.fields.exitWeight?.value)}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue?.toString()]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onSelect={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostPayload, MutationCreateGhostArgs } from '../schema';\n\nconst MUTATION_CREATE_GHOST = gql`\n  mutation CreateGhost(\n    $name: String!\n    $phone: String\n    $email: String!\n    $federationNumber: String\n    $roleId: Int!\n    $licenseId: Int\n    $dropzoneId: Int!\n    $exitWeight: Float!\n  ) {\n    createGhost(\n      input: {\n        attributes: {\n          roleId: $roleId\n          federationNumber: $federationNumber\n          name: $name\n          phone: $phone\n          email: $email\n          dropzoneId: $dropzoneId\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n\n        jumpTypes {\n          id\n          name\n        }\n        userFederations {\n          id\n          license {\n            id\n            name\n          }\n          federation {\n            id\n            name\n            slug\n          }\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationCreateGhostArgs['input']['attributes'], CreateGhostPayload>(\n  MUTATION_CREATE_GHOST,\n  {\n    getPayload: (result) => result.createGhost,\n    validates: {\n      exitWeight: [\n        isRequired('Exit weight must be provided'),\n        isNumeric('Please enter a valid number'),\n      ],\n      email: [\n        isRequired('Please provide a valid email address'),\n        isEmail('Please provide a valid email address'),\n      ],\n      name: [isRequired('Name is required')],\n\n      roleId: [isRequired('You must select a role')],\n    },\n    fieldErrorMap: {\n      license: 'licenseId',\n      exit_weight: 'exitWeight',\n      role: 'roleId',\n    },\n  }\n);\n","import * as React from 'react';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => {\n      requestAnimationFrame(() => {\n        onSuccess();\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `${payload?.user?.name} has been added to your dropzone`,\n            variant: 'success',\n          })\n        );\n      });\n    },\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n    },\n\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    mutationCreateGhost.mutate({\n      dropzoneId: globalState.currentDropzoneId as number,\n      name: state.fields.name.value || '',\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: Number(state.fields.exitWeight.value),\n      email: state.fields.email.value || '',\n      roleId: Number(state.fields.role.value?.id),\n    });\n  }, [\n    mutationCreateGhost,\n    globalState.currentDropzoneId,\n    state.fields.name.value,\n    state.fields.license.value?.id,\n    state.fields.phone.value,\n    state.fields.exitWeight.value,\n    state.fields.email.value,\n    state.fields.role.value?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport NoResults from '../../../components/NoResults';\nimport { Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport CreateGhostDialog from '../../../components/dialogs/Ghost';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 36, width: 36, marginHorizontal: 12, borderRadius: 36 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: state.searchText,\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = data?.dropzone?.dropzoneUsers?.edges || [];\n  const initialLoading = !users?.length && loading;\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList\n        data={initialLoading ? [1, 1, 1, 11, 1, 1, 1, 1] : users}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: Number(global.currentDropzoneId),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={({ item }, idx) => `user-${item?.node?.id || idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%', alignSelf: 'center' }}\n        renderItem={({ item: edge }) =>\n          edge === 1 ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${edge?.node?.id}`}\n              style={{ margin: 0, marginVertical: 0, borderRadius: 2, width: '100%' }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={edge?.node?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={edge?.node?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !edge?.node?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={36}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: edge?.node?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={36}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('UserProfileScreen', {\n                      userId: edge?.node?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={styles.fab}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.ghost.setOpen(true))}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from '../../../state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  previous,\n  scene,\n  onSearch,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold' }}\n        />\n      )}\n      <MaterialIcons\n        name=\"search\"\n        onPress={() => setSearchVisible(!searchVisible)}\n        color=\"#FFFFFF\"\n        size={24}\n        style={styles.icon}\n      />\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport { Rig } from '../../api/schema';\n\nimport UsersScreen from '../../screens/authenticated/users/UsersScreen';\nimport SearchableAppBar from '../../screens/authenticated/users/AppBar';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\nexport type ISettingsTabParams = {\n  UsersScreen: {\n    select?: boolean;\n    loadId: number;\n    onSelect?(): void;\n  };\n  RigInspectionScreen: { dropzoneUserId: number; rig: Rig };\n  UserProfileScreen: undefined;\n  TransactionsScreen: undefined;\n  EquipmentScreen: undefined;\n};\n\nconst Settings = createStackNavigator<ISettingsTabParams>();\n\nexport default function SettingsTab() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Settings.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => (\n          <SearchableAppBar\n            {...props}\n            searchText={searchText}\n            searchVisible={isSearchVisible}\n            setSearchVisible={(visible) =>\n              dispatch(actions.screens.users.setSearchVisible(visible))\n            }\n            onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n          />\n        ),\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Settings.Screen\n        name=\"UsersScreen\"\n        component={UsersScreen}\n        options={{ title: 'Dropzone users' }}\n      />\n      <Settings.Screen\n        name=\"UserProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'User' }}\n      />\n      <Settings.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Inspection' }}\n      />\n      <Settings.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Transactions' }}\n      />\n      <Settings.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n    </Settings.Navigator>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from '../AppBar';\n\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\n\nexport type IProfileTabParams = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n};\n\nconst Profile = createStackNavigator<IProfileTabParams>();\n\nexport default function Notifications() {\n  return (\n    <Profile.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} hideWarnings />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"NotificationsScreen\"\n    >\n      <Profile.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n\n      <Profile.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig inspection' }}\n      />\n    </Profile.Navigator>\n  );\n}\n","import * as React from 'react';\n\nexport default () => <></>;\n","import {\n  BottomTabBarOptions,\n  BottomTabBarProps,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Appearance, Platform, StyleSheet, Text } from 'react-native';\nimport type { TabsConfig, BubbleTabBarItemConfig } from '@gorhom/animated-tabbar';\nimport Animated from 'react-native-reanimated';\n\nimport { useAppSelector } from '../state';\nimport ManifestTab from './tabs/manifest';\nimport UsersTab from './tabs/users';\nimport NotificationsTab from './tabs/notifications';\n\nimport useRestriction from '../hooks/useRestriction';\nimport { Permission } from '../api/schema.d';\n\nimport AnimatedTabBar from './AnimatedTabBar';\n\nexport type IAuthenticatedTabParams = {\n  Manifest: undefined;\n  Profile: undefined;\n  Packing: undefined;\n  Users: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n};\n\nconst BottomTab = createBottomTabNavigator<IAuthenticatedTabParams>();\n\nconst AnimatedIcon = Animated.createAnimatedComponent(MaterialCommunityIcons);\nexport default function AuthenticatedTabBar() {\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  const canViewUsers = useRestriction(Permission.ReadUser);\n\n  const tabConfig = React.useMemo(\n    () => ({\n      labelStyle: {\n        color: theme.dark ? theme.colors.onSurface : palette.surface,\n      },\n      icon: {\n        activeColor: palette.surface,\n        inactiveColor: palette.primary.dark,\n      },\n      background: {\n        activeColor: palette.primary.main,\n        inactiveColor: theme.colors.surface,\n      },\n    }),\n    [\n      palette.primary.dark,\n      palette.primary.main,\n      palette.surface,\n      theme.colors.onSurface,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n  const tabs: TabsConfig<BubbleTabBarItemConfig> = React.useMemo(\n    () => ({\n      Manifest: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"airplane\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Notifications: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"bell-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Users: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"account-group-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n    }),\n    [tabConfig]\n  );\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Manifest\"\n      {...Platform.select({\n        web: {},\n        ios: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n        android: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: '#FFFFFF',\n        inactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.primary,\n        activeBackgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary,\n        inactiveTintColor: '#CCCCCC',\n        showLabel: Platform.OS !== 'web',\n        adaptive: true,\n        style: {\n          backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n          borderTopWidth: StyleSheet.hairlineWidth,\n          borderTopColor: '#CCCCCC',\n        },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Manifest\"\n        component={ManifestTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Manifest\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"airplane\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: false,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Notifications\"\n        component={NotificationsTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Notifications\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"bell\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: true,\n        }}\n      />\n      {canViewUsers && (\n        <BottomTab.Screen\n          name=\"Users\"\n          component={UsersTab}\n          options={{\n            tabBarLabel: ({ focused, color }) =>\n              !focused ? null : (\n                <Text\n                  style={[\n                    styles.label,\n                    { color: isDarkMode && focused ? theme.colors.primary : color },\n                  ]}\n                >\n                  Users\n                </Text>\n              ),\n            tabBarIcon: ({ size, color, focused }) => (\n              <MaterialCommunityIcons\n                {...{ size, color }}\n                name=\"account-group\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size }}\n                color={isDarkMode && focused ? theme.colors.primary : color}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n      )}\n    </BottomTab.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, FlatList, Dimensions, View } from 'react-native';\nimport { Card, Title, FAB, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Query } from '../../../api/schema.d';\n\nimport NoResults from '../../../components/NoResults';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONES);\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={data?.dropzones?.edges || []}\n        numColumns={2}\n        refreshing={loading}\n        onRefresh={() => refetch()}\n        style={{ flex: 1, width: '100%' }}\n        contentContainerStyle={{\n          flexGrow: 1,\n          width: '100%',\n          paddingBottom: 100,\n        }}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" color=\"#FFFFFF\" />\n        )}\n        renderItem={({ item }) => {\n          return (\n            <Card\n              style={{\n                width: Dimensions.get('window').width / 2 - 32,\n                margin: 8,\n              }}\n              onPress={async () => {\n                if (item?.node) {\n                  const shouldPushRoute = !!globalState.currentDropzoneId;\n                  dispatch(actions.global.setDropzone(item.node));\n\n                  if (shouldPushRoute) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    navigation.replace('Authenticated', {\n                      screen: 'HomeScreen',\n                    });\n                  }\n                }\n              }}\n            >\n              {item?.node?.banner ? (\n                <Card.Cover source={{ uri: item?.node?.banner as string }} />\n              ) : (\n                <View\n                  style={[\n                    styles.dzIcon,\n                    { backgroundColor: item?.node?.primaryColor || undefined },\n                  ]}\n                >\n                  <Avatar.Icon\n                    style={{ backgroundColor: item?.node?.secondaryColor || undefined }}\n                    icon=\"airplane-takeoff\"\n                  />\n                </View>\n              )}\n\n              <Card.Content>\n                <Title>{item?.node?.name}</Title>\n              </Card.Content>\n            </Card>\n          );\n        }}\n      />\n\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('DropzoneSetupScreen');\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzonePayload } from '../schema';\n\nexport const MUTATION_CREATE_DROPZONE = gql`\n  mutation CreateDropzone(\n    $name: String!\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n  ) {\n    createDropzone(\n      input: {\n        attributes: {\n          name: $name\n          banner: $banner\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          lat: $lat\n          lng: $lng\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federationId: number;\n    primaryColor: string | null;\n    secondaryColor: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  CreateDropzonePayload\n>(MUTATION_CREATE_DROPZONE, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federationId: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\n\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport useMutationCreateDropzone from '../../../api/hooks/useMutationCreateDropzone';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nexport default function CreateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  const createDropzone = useMutationCreateDropzone({\n    onError: (e: string) =>\n      dispatch(actions.notifications.showSnackbar({ message: e, variant: 'error' })),\n    onFieldError: (field, error) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as string, error])),\n    // eslint-disable-next-line max-len\n    onSuccess: (payload) =>\n      payload?.dropzone && dispatch(actions.global.setDropzone(payload.dropzone)),\n  });\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 32 }}>\n      <DropzoneForm loading={createDropzone.loading} />\n      <View style={styles.fields}>\n        <Button\n          mode=\"contained\"\n          disabled={createDropzone.loading}\n          loading={createDropzone.loading}\n          onPress={() =>\n            createDropzone.mutate({\n              name: state.fields.name.value || '',\n              banner: state.fields.banner.value,\n              federationId: Number(state.fields.federation.value?.id),\n              lat: state.fields.lat.value || null,\n              lng: state.fields.lng.value || null,\n              secondaryColor: state.fields.secondaryColor.value || null,\n              primaryColor: state.fields.primaryColor.value || null,\n            })\n          }\n        >\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport CreateDropzoneScreen from '../screens/authenticated/dropzones/CreateDropzoneScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"Dropzones\"\n    >\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n      <Stack.Screen name=\"CreateDropzoneScreen\" component={CreateDropzoneScreen} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, StyleSheet } from 'react-native';\nimport { Button, HelperText, TextInput } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { View } from '../../../components/Themed';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Mutation } from '../../../api/schema';\nimport { primaryColor } from '../../../constants/Colors';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNGs are allowed\nimport logo from '../../../../assets/images/logo.png';\n\nconst MUTATION_LOG_IN = gql`\n  mutation UserLogin($email: String!, $password: String!) {\n    userLogin(email: $email, password: $password) {\n      authenticatable {\n        id\n        email\n        name\n        phone\n        createdAt\n        updatedAt\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useMutation<Mutation>(MUTATION_LOG_IN);\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: e.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [dispatch, mutationLogin, state.fields.email.value, state.fields.password.value]);\n\n  return (\n    <View style={styles.container}>\n      <Image source={logo} style={{ height: 300, width: '100%' }} resizeMode=\"contain\" />\n      <KeyboardAvoidingView style={styles.fields} behavior=\"padding\">\n        <TextInput\n          label=\"Email\"\n          mode=\"outlined\"\n          value={state.fields.email.value}\n          onChangeText={(newValue) => {\n            dispatch(actions.screens.login.setEmail(newValue));\n          }}\n        />\n        <HelperText type=\"error\">{state.fields.email.error || ' '}</HelperText>\n\n        <TextInput\n          label=\"Password\"\n          mode=\"outlined\"\n          value={state.fields.password.value}\n          secureTextEntry\n          onChangeText={(newValue) => {\n            dispatch(actions.screens.login.setPassword(newValue));\n          }}\n          onSubmitEditing={onLogin}\n          error={!!state.fields.password.error}\n        />\n        <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={onLogin}\n          loading={data.loading}\n        >\n          Log in\n        </Button>\n\n        <Button\n          labelStyle={styles.textButtonLabel}\n          style={styles.textButton}\n          onPress={() => navigation.navigate('SignUpScreen')}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  textButton: {\n    marginTop: 10,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    color: '#FFFFFF',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserSignUpArgs, UserSignUpPayload } from '../schema';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserSignUpArgs, UserSignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userSignUp,\n  fieldErrorMap: {\n    license: 'licenseId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, StyleSheet } from 'react-native';\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'A confirmation link has been sent to your email',\n          variant: 'success',\n        })\n      );\n\n      navigation.navigate('LoginScreen');\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView style={styles.fields} behavior=\"position\">\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value}\n          onChangeText={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Email\"\n          error={!!state.fields.email.error}\n          value={state.fields.email.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['email', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Repeat password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport LoginScreen from '../screens/unauthenticated/login/LoginScreen';\nimport SignUpScreen from '../screens/unauthenticated/signup/SignUpScreen';\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator();\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport FederationSelect from '../../../../components/input/dropdown_select/FederationSelect';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction NameAndFederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Basic information\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n        </Card>\n        <Card style={styles.card}>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default NameAndFederationWizardSceen;\n","import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { calculateLatLngDelta } from '../../../../utils/calculateLatLngDelta';\nimport Map from '../../../../components/map/Map';\n\nfunction LocationWizardStep(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        console.log(status);\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    console.log({ visible });\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n\n  return (\n    <WizardScreen\n      disableScroll\n      style={styles.container}\n      containerStyle={{ paddingHorizontal: 0 }}\n      {...props}\n    >\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <Text style={styles.title}>Pick location</Text>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 140,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction AircraftWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.plane);\n  const [minSlots, setMinSlots] = React.useState(state?.fields?.minSlots?.value || 0);\n  const [maxSlots, setMaxSlots] = React.useState(state?.fields?.maxSlots?.value || 0);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Aircraft\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Information</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Name\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value}\n            onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n          />\n          <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n            {state.fields.name.error || ''}\n          </HelperText>\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Registration\"\n            error={!!state.fields.registration.error}\n            value={state.fields.registration.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.plane.setField(['registration', newValue]))\n            }\n          />\n          <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n            {state.fields.registration.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Minimum slots</List.Subheader>\n            <Text style={styles.cardValue}>{minSlots || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={maxSlots || 34}\n              step={1}\n              value={minSlots}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onValueChange={(value) => setMinSlots(value)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.plane.setField(['minSlots', minSlots]))\n              }\n            />\n          </View>\n\n          <HelperText type={state.fields.minSlots?.error ? 'error' : 'info'}>\n            {state.fields.minSlots?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Max slots</List.Subheader>\n            <Text style={styles.cardValue}>{maxSlots || 34}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={2}\n              maximumValue={34}\n              step={1}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              value={maxSlots}\n              onValueChange={(value) => setMaxSlots(value)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.plane.setField(['maxSlots', Number(maxSlots)]))\n              }\n            />\n          </View>\n\n          <HelperText type={state.fields.maxSlots?.error ? 'error' : 'info'}>\n            {state.fields.maxSlots?.error || 'Max available slots on this aircraft'}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 4 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default AircraftWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { PhonePreview, WebPreview } from '../../../../components/theme_preview';\nimport ColorPicker from '../../../../components/input/colorpicker';\n\nfunction ReserveRepackWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Branding\">\n      <View style={styles.content}>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview\n            primaryColor={state.fields.primaryColor.value || '#000000'}\n            secondaryColor={state.fields.secondaryColor.value || '#ffffff'}\n          />\n\n          <WebPreview\n            primaryColor={state.fields.primaryColor.value || '#000000'}\n            secondaryColor={state.fields.secondaryColor.value || '#ffffff'}\n          />\n        </View>\n\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n\n        <ColorPicker\n          title=\"Accent color\"\n          helperText=\"Accent color is used for highlights, like buttons and loading bars\"\n          error={state.fields.secondaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['secondaryColor', color]))}\n          value={state.fields.secondaryColor.value || '#FFFFFF'}\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default ReserveRepackWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { useAppSelector } from '../../../../state';\nimport { Permission, Query } from '../../../../api/schema.d';\nimport PermissionListItem from '../../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzonePermissions($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\ninterface IPermissionWizardScreen extends IWizardScreenProps {\n  permission: Permission;\n  title: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useLazyQuery<Query>(QUERY_DROPZONE_PERMISSIONS);\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          dropzoneId: Number(dropzoneForm.original.id),\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <Card>\n            <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n              {data?.dropzone?.roles?.map((role) => (\n                <PermissionListItem\n                  permissionName={permission}\n                  role={role}\n                  title={capitalize(role?.name?.replace(/_/, ' '))}\n                />\n              ))}\n            </Card.Content>\n          </Card>\n        )}\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n    marginBottom: 16,\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, Menu, Paragraph, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n\nfunction TicketTypeWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [price, setPrice] = React.useState(0);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Tickets\">\n      <Paragraph style={styles.paragraph}>You can add more tickets later under Settings</Paragraph>\n\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['name', newValue]))\n            }\n          />\n          <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n            {state.fields.name.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Price</List.Subheader>\n            <Text style={styles.cardValue}>${price || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={500}\n              step={1}\n              value={price}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onSlidingComplete={() => dispatch(actions.forms.ticketType.setField(['cost', price]))}\n              onValueChange={setPrice}\n            />\n          </View>\n\n          <HelperText type={state.fields.cost?.error ? 'error' : 'info'}>\n            {state.fields.cost?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            contentStyle={{ width: 300 }}\n            anchor={\n              <TouchableOpacity onPress={() => setAltitudeMenuOpen(true)}>\n                <View style={styles.cardTitle}>\n                  <List.Subheader>Altitude</List.Subheader>\n                  <Text style={styles.cardValue}>\n                    {state.fields.altitude.value &&\n                    [4000, 14000].includes(state.fields.altitude.value)\n                      ? {\n                          '14000': 'Height',\n                          '4000': 'Hop n Pop',\n                        }[state.fields.altitude.value.toString() as '14000' | '4000']\n                      : 'Custom'}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            }\n          >\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Hop n Pop\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Height\"\n              right={() => <List.Icon icon=\"airplane-takeoff\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Other\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n          </Menu>\n\n          {(!state.fields.altitude.value ||\n            ![4000, 14000].includes(state.fields.altitude.value)) && (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Custom altitude\"\n              error={!!state.fields.altitude.error}\n              value={state.fields.altitude?.value?.toString()}\n              onChangeText={(newValue) =>\n                dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n              }\n            />\n          )}\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  paragraph: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    // fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    marginHorizontal: 16,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default TicketTypeWizardScreen;\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreatePlanePayload } from '../schema';\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    registration: string;\n    dropzoneId: number;\n    minSlots: number;\n    maxSlots: number;\n    hours?: number;\n    nextMaintenanceHours?: number;\n  },\n  CreatePlanePayload\n>(MUTATION_CREATE_PLANE, {\n  getPayload: (result) => result.createPlane,\n  fieldErrorMap: {\n    dropzone: 'dropzoneId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    registration: [isRequired('Registration is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdatePlaneArgs, UpdatePlanePayload } from '../schema';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdatePlaneArgs['input']['attributes'],\n  UpdatePlanePayload\n>(MUTATION_UPDATE_PLANE, {\n  getPayload: (result) => result.updatePlane,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DropzoneFields } from '../../../components/forms/dropzone/slice';\nimport { PlaneFields } from '../../../components/forms/plane/slice';\nimport { TicketTypeFields } from '../../../components/forms/ticket_type/slice';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport NameAndFederationStep from './steps/Name';\nimport LocationStep from './steps/Location';\nimport AircraftStep from './steps/Aircraft';\nimport ThemingStep from './steps/Theming';\nimport PermissionStep from './steps/Permissions';\nimport TicketTypeStep from './steps/TicketType';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useMutationCreateDropzone from '../../../api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from '../../../api/hooks/useMutationUpdateDropzone';\nimport useMutationCreatePlane from '../../../api/hooks/useMutationCreatePlane';\nimport useMutationUpdatePlane from '../../../api/hooks/useMutationUpdatePlane';\nimport useMutationCreateTicketType from '../../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../../api/hooks/useMutationUpdateTicketType';\nimport { Permission } from '../../../api/schema.d';\n\nfunction DropzoneSetupScreen() {\n  const aircraft = useAppSelector((root) => root.forms.plane);\n  const ticket = useAppSelector((root) => root.forms.ticketType);\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const mutationCreatePlane = useMutationCreatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationUpdatePlane = useMutationUpdatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationCreateTicketType = useMutationCreateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n  const mutationUpdateTicketType = useMutationUpdateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n\n  const onBasicInfoNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void): Promise<void> => {\n      if (!dropzone.fields.name.value) {\n        dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n        return;\n      }\n      if (!dropzone.fields.federation.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError([\n            'federation',\n            'Your dropzone must have an associated organization',\n          ])\n        );\n        return;\n      }\n\n      setIndex(index + 1);\n    },\n    [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]\n  );\n\n  const onThemingNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!dropzone.fields.primaryColor.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n        );\n        return;\n      }\n      if (!dropzone.fields.secondaryColor.value) {\n        dispatch(\n          actions.forms.dropzone.setFieldError(['secondaryColor', 'Please pick an accent color'])\n        );\n        return;\n      }\n      console.log(dropzone.fields);\n\n      // Create or update dropzone\n      const result = !dropzone.original?.id\n        ? await mutationCreateDropzone.mutate({\n            federationId: Number(dropzone.fields.federation.value?.id),\n            name: dropzone.fields.name.value || '',\n            banner: '',\n            primaryColor: dropzone.fields.primaryColor.value,\n            secondaryColor: dropzone.fields.secondaryColor.value,\n            lat: dropzone.fields.lat.value as number,\n            lng: dropzone.fields.lng.value as number,\n          })\n        : await mutationUpdateDropzone.mutate({\n            id: Number(dropzone.original.id),\n            federationId: Number(dropzone.fields.federation.value?.id),\n            name: dropzone.fields.name.value || '',\n            primaryColor: dropzone.fields.primaryColor.value,\n            secondaryColor: dropzone.fields.secondaryColor.value,\n            lat: dropzone.fields.lat.value,\n            lng: dropzone.fields.lng.value,\n            banner: '',\n          });\n\n      if (!result?.errors?.length && result?.dropzone?.id) {\n        dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n        dispatch(actions.global.setDropzone(result?.dropzone));\n        if (result.dropzone.primaryColor) {\n          dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n        }\n        if (result.dropzone.secondaryColor) {\n          dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n        }\n        setIndex(index + 1);\n      }\n    },\n    [\n      dispatch,\n      dropzone.fields,\n      dropzone.original?.id,\n      mutationCreateDropzone,\n      mutationUpdateDropzone,\n    ]\n  );\n\n  const onAircraftNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!aircraft.fields.name.value) {\n        dispatch(actions.forms.plane.setFieldError(['name', 'You must name your aircraft']));\n        return;\n      }\n      if (!aircraft.fields.registration.value) {\n        dispatch(\n          actions.forms.plane.setFieldError([\n            'registration',\n            'Please provide aircraft registration',\n          ])\n        );\n        return;\n      }\n\n      // Create or update dropzone\n      const result = !aircraft.original?.id\n        ? await mutationCreatePlane.mutate({\n            dropzoneId: Number(dropzone?.original?.id),\n            name: aircraft.fields.name.value,\n            registration: aircraft.fields.registration.value,\n            minSlots: Number(aircraft.fields.minSlots.value),\n            maxSlots: Number(aircraft.fields.maxSlots.value),\n          })\n        : await mutationUpdatePlane.mutate({\n            id: Number(aircraft.original.id),\n            name: aircraft.fields.name.value,\n            registration: aircraft.fields.registration.value,\n            minSlots: aircraft.fields.minSlots.value,\n            maxSlots: aircraft.fields.maxSlots.value,\n          });\n\n      if (!result?.errors?.length && result?.plane?.id) {\n        dispatch(actions.forms.plane.setOpen(result?.plane));\n        setIndex(index + 1);\n      }\n    },\n    [\n      aircraft.fields.maxSlots.value,\n      aircraft.fields.minSlots.value,\n      aircraft.fields.name.value,\n      aircraft.fields.registration.value,\n      aircraft.original?.id,\n      dispatch,\n      dropzone?.original?.id,\n      mutationCreatePlane,\n      mutationUpdatePlane,\n    ]\n  );\n\n  const onTicketTypeNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      if (!ticket.fields.name.value) {\n        dispatch(actions.forms.ticketType.setFieldError(['name', 'You must name your ticket']));\n        return;\n      }\n\n      if (!ticket.fields.cost.value) {\n        dispatch(actions.forms.ticketType.setFieldError(['cost', 'Tickets must have a price']));\n        return;\n      }\n\n      // Create or update dropzone\n      const result = !ticket.original?.id\n        ? await mutationCreateTicketType.mutate({\n            dropzoneId: Number(dropzone.original?.id),\n            name: ticket.fields.name.value,\n            cost: ticket.fields.cost.value,\n            altitude: ticket.fields.altitude.value,\n            isTandem: false,\n            allowManifestingSelf: true,\n          })\n        : await mutationUpdateTicketType.mutate({\n            id: Number(ticket.original.id),\n            name: ticket.fields.name.value,\n            cost: ticket.fields.cost.value,\n            altitude: ticket.fields.altitude.value,\n            isTandem: false,\n            allowManifestingSelf: true,\n          });\n\n      if (!result?.errors?.length && result?.ticketType?.id) {\n        dispatch(actions.forms.ticketType.setOpen(result.ticketType));\n        setIndex(index + 1);\n      }\n    },\n    [\n      ticket.fields.name.value,\n      ticket.fields.cost.value,\n      ticket.fields.altitude.value,\n      ticket.original?.id,\n      mutationCreateTicketType,\n      dropzone.original?.id,\n      mutationUpdateTicketType,\n      dispatch,\n    ]\n  );\n\n  return (\n    <Wizard>\n      <NameAndFederationStep\n        onBack={() => {\n          dispatch(actions.forms.dropzoneWizard.setOpen(false));\n          dispatch(actions.forms.dropzoneWizard.reset());\n          dispatch(actions.forms.ticketType.setOpen(false));\n          dispatch(actions.forms.plane.setOpen(false));\n          dispatch(actions.forms.dropzone.setOpen(false));\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.goBack();\n        }}\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onNext={onBasicInfoNext}\n      />\n      <LocationStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => setIndex(idx + 1)}\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n      />\n\n      <ThemingStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onThemingNext}\n        loading={mutationCreateDropzone.loading || mutationUpdateDropzone.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <AircraftStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onAircraftNext}\n        loading={mutationCreatePlane.loading || mutationUpdatePlane.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <TicketTypeStep\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={onTicketTypeNext}\n        loading={mutationCreateTicketType.loading || mutationUpdateTicketType.loading}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <PermissionStep\n        title=\"Who can manifest?\"\n        permission={Permission.CreateSlot}\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => setIndex(idx + 1)}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <PermissionStep\n        title=\"Manifest other people?\"\n        permission={Permission.CreateUserSlot}\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={(idx, setIndex) => {\n          setIndex(idx + 1);\n        }}\n        nextButtonLabel=\"Next\"\n        backButtonLabel=\"Back\"\n      />\n      <WizardCompleteStep\n        title=\"Setup complete\"\n        subtitle=\"You can configure settings under the Settings screen\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(idx, setIndex) => setIndex(idx - 1)}\n        onNext={() => {\n          dispatch(actions.global.setDropzone(dropzone.original));\n          if (dropzone.fields.primaryColor.value) {\n            dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n          }\n          if (dropzone.fields.secondaryColor.value) {\n            dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n          }\n          dispatch(actions.global.setDropzone(dropzone.original));\n\n          dispatch(actions.forms.dropzoneWizard.setOpen(false));\n          dispatch(actions.forms.dropzoneWizard.reset());\n          dispatch(actions.forms.ticketType.setOpen(false));\n          dispatch(actions.forms.plane.setOpen(false));\n          dispatch(actions.forms.dropzone.setOpen(false));\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.dropzone.reset());\n\n          // Set complete-flag to force navigation from dropzone screen\n          dispatch(actions.forms.dropzoneWizard.complete());\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          navigation.replace('Authenticated', { screen: 'HomeScreen' });\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { account_confirmation_success?: string };\n  }>();\n\n  return route?.params?.account_confirmation_success === 'true' ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong. Please contact support</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#FF0000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    color: '#FFFFFF',\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    color: '#FFFFFF',\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query, QueryDropzonesArgs } from '../schema';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<Query['dropzones'], QueryDropzonesArgs>(QUERY_DROPZONES, {\n  getPayload: (query) => query?.dropzones,\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport {\n  DrawerActions,\n  getFocusedRouteNameFromRoute,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport InfoGrid from '../../screens/authenticated/load/InfoGrid';\nimport useRestriction from '../../hooks/useRestriction';\nimport { Permission } from '../../api/schema.d';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport useQueryDropzones from '../../api/hooks/useQueryDropzones';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { currentUser, dropzone, loading } = useCurrentDropzone();\n  const { data } = useQueryDropzones({\n    variables: {\n      isPublic: true,\n    },\n    onError: (err) => console.error(err),\n  });\n\n  const navigation = useNavigation();\n  const route = useRoute();\n  const routeName = getFocusedRouteNameFromRoute(route);\n  const navState = navigation.dangerouslyGetState();\n  const subNavState = navState.routes[navState.index].state;\n  // eslint-disable-next-line\n  // @ts-ignore\n  const subNavRoutes = subNavState?.routes[subNavState?.index];\n  const subNavSubState = subNavRoutes?.state;\n  let subRouteName = subNavState && getFocusedRouteNameFromRoute(subNavRoutes);\n  subRouteName = subRouteName || subNavSubState?.routes[0].name;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'Authenticated',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'ProfileScreen',\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(subRouteName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'ManifestScreen',\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Profile\"\n            active={subRouteName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ProfileScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={subRouteName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'EquipmentScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={subRouteName === 'Notifications'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Notifications',\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={subRouteName === 'TransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'TransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n        <Drawer.Section title=\"Dropzone\">\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={subRouteName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'DropzoneTransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'Authenticated',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'SettingsScreen',\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Switch dropzone\">\n          {data?.edges?.map((edge) => (\n            <Drawer.Item\n              key={`${edge?.node?.id}-dz`}\n              label={edge?.node?.name || ''}\n              icon=\"map-marker\"\n              active={dropzone?.id === edge?.node?.id}\n              onPress={() => {\n                if (edge?.node) {\n                  dispatch(actions.global.setDropzone(edge.node));\n                  navigation.navigate('Authenticated', {\n                    screen: 'Authenticated',\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('DropzoneSetupScreen');\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport AuthenticatedRoutes from './Authenticated';\nimport LimboRoutes from './LimboRoutes';\nimport UnauthenticatedRoutes from './Unauthenticated';\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport DropzoneSetupScreen from '../screens/authenticated/dropzone_setup/DropzoneSetupScreen';\nimport ConfirmUserScreen from '../screens/unauthenticated/signup/ConfirmUserScreen';\nimport DrawerMenu from './drawer/Drawer';\n\nexport type TRootNavigatorRouteParams = {\n  Authenticated: undefined;\n  Unauthenticated: undefined;\n  // eslint-disable-next-line camelcase\n  confirm: { account_confirmation_success?: boolean };\n  Dropzones: undefined;\n  DropzonesScreen: undefined;\n  DropzoneSetupScreen: undefined;\n  NotFound: undefined;\n};\n\nexport type TDrawerNavigatorRouteParams = {\n  Authenticated: undefined;\n  Profile: undefined;\n  Settings: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<TRootNavigatorRouteParams>();\nconst Drawer = createDrawerNavigator<TDrawerNavigatorRouteParams>();\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\">\n            {() => (\n              <Drawer.Navigator drawerContent={() => <DrawerMenu />}>\n                <Drawer.Screen name=\"Authenticated\" component={AuthenticatedRoutes} />\n              </Drawer.Navigator>\n            )}\n          </Stack.Screen>\n        ) : (\n          <Stack.Screen name=\"Dropzones\" component={LimboRoutes} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={UnauthenticatedRoutes} />\n      )}\n      <Stack.Screen name=\"DropzoneSetupScreen\" component={DropzoneSetupScreen} />\n      <Stack.Screen name=\"confirm\" component={ConfirmUserScreen} />\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, TextInput } from 'react-native-paper';\nimport LicenseChipSelect from '../../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../../input/dropdown_select/FederationSelect';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction FederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Select affiliation\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <FederationSelect\n            value={state?.fields?.license?.value?.federation || state.federation.value}\n            onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n          />\n          <HelperText type={state.federation.error ? 'error' : 'info'}>\n            {state.federation.error || ''}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card}>\n          <TextInput\n            value={state.fields?.apfNumber?.value || ''}\n            mode=\"outlined\"\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n            }\n            label={`${state.federation.value?.name} ID`}\n          />\n          <HelperText type={state.federation.error ? 'error' : 'info'}>\n            {state.federation.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, TextInput } from 'react-native-paper';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction UserInfoScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"About you\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <TextInput\n            value={state.fields?.name?.value || ''}\n            mode=\"outlined\"\n            onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n            label=\"Full name\"\n          />\n          <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n            {state.fields.name.error || ''}\n          </HelperText>\n        </Card>\n        <Card style={styles.card}>\n          <TextInput\n            value={state.fields?.nickname?.value || ''}\n            mode=\"outlined\"\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.user.setField(['nickname', newValue]))\n            }\n            label=\"Nickname\"\n          />\n          <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n            {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default UserInfoScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText } from 'react-native-paper';\nimport LicenseChipSelect from '../../../input/chip_select/LicenseChipSelect';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction FederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"What license do you have?\">\n      <View style={styles.content}>\n        <Card style={{ padding: 16 }}>\n          {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n            <>\n              <LicenseChipSelect\n                value={state.fields.license.value}\n                federationId={Number(\n                  state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n                )}\n                onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n              />\n              <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n                {state.fields.license.error || ''}\n              </HelperText>\n            </>\n          )}\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n});\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, HelperText, List, Menu, TextInput } from 'react-native-paper';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction RigWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"What're you jumping?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Container manufacturer</List.Subheader>\n          <Menu\n            onDismiss={() => setMenuOpen(false)}\n            visible={isMenuOpen}\n            anchor={\n              <TouchableOpacity onPress={() => setMenuOpen(true)}>\n                <TextInput\n                  pointerEvents=\"box-only\"\n                  style={styles.field}\n                  mode=\"outlined\"\n                  error={!!state.fields.make.error}\n                  value={isOtherMake ? 'Other' : state.fields.make.value || 'Select manufacturer'}\n                  disabled\n                />\n              </TouchableOpacity>\n            }\n          >\n            {[\n              'Icon',\n              'Javelin',\n              'Mirage',\n              'Vector',\n              'PA (Talon)',\n              'Infinity',\n              'Parachutes de France',\n              'Parachute Systems',\n              'Racer',\n            ].map((make) => (\n              <Menu.Item\n                onPress={() => {\n                  setMenuOpen(false);\n                  dispatch(actions.forms.rig.setField(['make', make]));\n                  setIsOtherMake(false);\n                }}\n                title={make}\n              />\n            ))}\n            <Menu.Item\n              onPress={() => {\n                setMenuOpen(false);\n                dispatch(actions.forms.rig.setField(['make', '']));\n                setIsOtherMake(true);\n              }}\n              title=\"Other\"\n            />\n          </Menu>\n          {!isOtherMake ? null : (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          )}\n\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n\n          <List.Subheader>Model</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card}>\n          <List.Subheader>Serial number</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n            {state.fields.serial.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 16, marginVertical: 16 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from '../../../input/date_picker/DatePicker';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction ReserveRepackWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Next reserve repack?\">\n      <View style={styles.content}>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction FederationWizardSceen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Do you have a rig?\">\n      <View style={styles.content}>\n        <Card\n          style={[\n            styles.card,\n            state.fields.skipRigSetup.value === false ? styles.active : undefined,\n          ]}\n          onPress={() => dispatch(actions.forms.userWizard.setField(['skipRigSetup', false]))}\n        >\n          <Card.Title title=\"I have my own rig\" />\n        </Card>\n\n        <Card\n          style={[\n            styles.card,\n            state.fields.skipRigSetup.value === true ? styles.active : undefined,\n          ]}\n          onPress={() => dispatch(actions.forms.userWizard.setField(['skipRigSetup', true]))}\n        >\n          <Card.Title title=\"I dont have a rig\" />\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 16,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Card, HelperText, List, Paragraph } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { ceil } from 'lodash';\nimport WizardScreen, { IWizardScreenProps } from '../../../wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\n\nfunction WingloadingWizardScreen(props: IWizardScreenProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [canopySize, setCanopySize] = React.useState(rigForm.fields.canopySize.value || 120);\n  const [weight, setWeight] = React.useState(Number(userForm.fields.exitWeight.value) || 120);\n\n  React.useEffect(() => {\n    if (rigForm.fields.canopySize.value) {\n      setCanopySize(rigForm.fields.canopySize.value);\n    }\n  }, [rigForm.fields.canopySize.value]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Your wingloading\">\n      <View style={styles.content}>\n        <Card>\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <View style={styles.wingLoadingCardLeft}>\n              <Avatar.Text\n                label={ceil(\n                  (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                    (rigForm.fields.canopySize.value || 150),\n                  2\n                ).toString()}\n                size={100}\n                style={styles.wingLoading}\n              />\n            </View>\n            <View style={styles.wingLoadingCardRight}>\n              <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n              <Paragraph>\n                Your wingloading is an indicator of your descent rate under canopy\n              </Paragraph>\n            </View>\n          </Card.Content>\n        </Card>\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Your exit weight</List.Subheader>\n            <Text style={styles.cardValue}>{weight || 50}kg</Text>\n          </View>\n          <Slider\n            style={styles.sliderControl}\n            minimumValue={50}\n            maximumValue={160}\n            step={0.5}\n            minimumTrackTintColor=\"#FF1414\"\n            maximumTrackTintColor=\"#000000\"\n            onSlidingComplete={() =>\n              dispatch(actions.forms.user.setField(['exitWeight', weight.toString()]))\n            }\n            value={weight}\n            onValueChange={(w) => setWeight(w)}\n          />\n          <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n            {userForm.fields.exitWeight?.error || \"Your weight in kg's with all equipment on\"}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Canopy size</List.Subheader>\n            <Text style={styles.cardValue}>{canopySize || 120}ft</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={34}\n              maximumValue={350}\n              step={1}\n              value={canopySize || 120}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onValueChange={(size) => setCanopySize(size)}\n              onSlidingComplete={() =>\n                dispatch(actions.forms.rig.setField(['canopySize', canopySize]))\n              }\n            />\n          </View>\n\n          <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n            {userForm.fields.exitWeight?.error || 'Size of your main canopy in square feet'}\n          </HelperText>\n        </Card>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Portal, Modal } from 'react-native-paper';\nimport Wizard from '../../wizard/Wizard';\nimport WizardCompleteStep from '../../wizard/WizardCompleteStep';\nimport FederationStep from './steps/Federation';\nimport UserInfoStep from './steps/UserInfo';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { useJoinFederationMutation } from '../../../api/reflection';\nimport useMutationUpdateUser from '../../../api/hooks/useMutationUpdateUser';\nimport useMutationUpdateRig from '../../../api/hooks/useMutationUpdateRig';\nimport useMutationCreateRig from '../../../api/hooks/useMutationCreateRig';\nimport { UserFields } from '../../forms/user/slice';\nimport { RigFields } from '../../forms/rig/slice';\nimport { License } from '../../../api/schema.d';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.forms.userWizard);\n  const dispatch = useAppDispatch();\n\n  const [joinFederation, mutationJoinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const mutationUpdateRig = useMutationUpdateRig({\n    onSuccess: () => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, value])),\n  });\n  const mutationCreateRig = useMutationCreateRig({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, value])),\n  });\n\n  const onUserInfoNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n        dispatch(\n          actions.forms.user.setFieldError([\n            'name',\n            'Please enter your full name, including surname',\n          ])\n        );\n        return false;\n      }\n\n      // Update user license\n      try {\n        await mutationUpdateUser.mutate({\n          id: Number(userForm.original?.id),\n          nickname: userForm.fields.nickname.value,\n          name: userForm.fields.name.value,\n        });\n        return setIndex(index + 1);\n      } catch (_) {\n        console.log(_);\n        return false;\n      }\n    },\n    [\n      dispatch,\n      mutationUpdateUser,\n      userForm.fields.name.value,\n      userForm.fields.nickname.value,\n      userForm.original?.id,\n    ]\n  );\n\n  const onFederationNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (\n        userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n        !userForm.fields.apfNumber.value\n      ) {\n        dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n        return false;\n      }\n\n      // Update user license\n      try {\n        if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n          const mutationResult = await joinFederation({\n            variables: {\n              uid: userForm.fields.apfNumber.value,\n              federationId: Number(userForm.federation?.value?.id),\n            },\n          });\n          console.log({ data: mutationResult.data?.joinFederation });\n          const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n          if (license) {\n            dispatch(actions.forms.user.setField(['license', license as License]));\n          }\n        }\n        return setIndex(index + 1);\n      } catch (e) {\n        console.log('Error');\n        console.log(e);\n        return false;\n      }\n    },\n    [\n      dispatch,\n      joinFederation,\n      userForm.federation.value?.id,\n      userForm.federation.value?.name,\n      userForm.fields.apfNumber.value,\n    ]\n  );\n\n  const onLicenseNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!userForm.fields.license?.value?.id) {\n        dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n        return false;\n      }\n\n      // Update user license\n      try {\n        const response = await joinFederation({\n          variables: {\n            federationId: Number(userForm.federation?.value?.id),\n            licenseId: Number(userForm.fields.license?.value?.id),\n          },\n        });\n        console.log({ data: response.data?.joinFederation });\n        return setIndex(index + 1);\n      } catch (_) {\n        console.log('Failed');\n        return false;\n      }\n    },\n    [dispatch, joinFederation, userForm.federation?.value?.id, userForm.fields.license?.value?.id]\n  );\n\n  const onRigNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.make?.value) {\n        dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n        return;\n      }\n\n      if (!rigForm.fields.model?.value) {\n        dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n        return;\n      }\n\n      // Create user rig\n      try {\n        const rig = !rigForm.original?.id\n          ? await mutationCreateRig.mutate({\n              make: rigForm.fields.make.value,\n              model: rigForm.fields.model.value,\n              serial: rigForm.fields.serial.value,\n              userId: Number(userForm.original?.id),\n            })\n          : await mutationUpdateRig.mutate({\n              id: Number(rigForm.original?.id),\n              make: rigForm.fields.make.value,\n              model: rigForm.fields.model.value,\n              serial: rigForm.fields.serial.value,\n              userId: Number(userForm.original?.id),\n            });\n\n        if (rig?.rig) {\n          dispatch(actions.forms.rig.setOpen(rig.rig));\n        }\n        setIndex(index + 1);\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    [\n      rigForm.fields.make.value,\n      rigForm.fields.model.value,\n      rigForm.fields.serial.value,\n      rigForm.original?.id,\n      dispatch,\n      mutationCreateRig,\n      userForm.original?.id,\n      mutationUpdateRig,\n    ]\n  );\n\n  const onReserveRepackNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        return false;\n      }\n\n      // Update repack expiry date\n      try {\n        const rig = await mutationUpdateRig.mutate({\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        });\n        if (rig?.rig) {\n          dispatch(actions.forms.rig.setOpen(rig.rig));\n        }\n        return setIndex(index + 1);\n      } catch (_) {\n        return false;\n      }\n    },\n    [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]\n  );\n\n  const onWingloadingNext = React.useCallback(\n    async (index: number, setIndex: (idx: number) => void) => {\n      // Validate\n      if (!rigForm.fields.canopySize?.value) {\n        dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n        return false;\n      }\n\n      if (!userForm.fields.exitWeight?.value) {\n        dispatch(\n          actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight'])\n        );\n        return false;\n      }\n\n      // Update repack expiry date\n      try {\n        await mutationUpdateRig.mutate({\n          id: Number(rigForm.original?.id),\n          canopySize: rigForm.fields.canopySize.value,\n        });\n        await mutationUpdateUser.mutate({\n          id: Number(userForm.original?.id),\n          exitWeight: Number(userForm.fields.exitWeight?.value),\n        });\n\n        setIndex(index + 1);\n      } catch (e) {\n        console.error(e);\n      }\n      return null;\n    },\n    [\n      rigForm.fields.canopySize.value,\n      rigForm.original?.id,\n      userForm.fields.exitWeight?.value,\n      userForm.original?.id,\n      dispatch,\n      mutationUpdateRig,\n      mutationUpdateUser,\n    ]\n  );\n\n  return (\n    <Portal>\n      <Modal\n        visible={state.open}\n        dismissable={false}\n        style={styles.modal}\n        contentContainerStyle={{ height: '100%' }}\n      >\n        <Wizard>\n          <UserInfoStep\n            backButtonLabel=\"Cancel\"\n            nextButtonLabel=\"Next\"\n            onBack={() => {\n              dispatch(actions.forms.userWizard.setOpen(false));\n              dispatch(actions.forms.user.setOpen(false));\n              dispatch(actions.forms.rig.setOpen(false));\n              dispatch(actions.forms.userWizard.reset());\n              dispatch(actions.forms.user.reset());\n              dispatch(actions.forms.rig.reset());\n            }}\n            loading={mutationUpdateUser.loading}\n            onNext={onUserInfoNext}\n          />\n          <FederationStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            loading={mutationUpdateUser.loading || mutationJoinFederation.loading}\n            onNext={onFederationNext}\n          />\n          <LicenseStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            loading={mutationUpdateUser.loading || mutationJoinFederation.loading}\n            onNext={onLicenseNext}\n          />\n          <AskForRigStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel={state.fields.skipRigSetup.value ? 'Done' : 'Next'}\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={(index, setIndex) => {\n              if (state.fields.skipRigSetup.value === true) {\n                setIndex(index + 4);\n              } else {\n                setIndex(index + 1);\n              }\n            }}\n          />\n          <RigStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onNext={onRigNext}\n          />\n          <ReserveRepackStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={onReserveRepackNext}\n          />\n          <WingloadingStep\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Next\"\n            loading={\n              mutationUpdateUser.loading || mutationUpdateRig.loading || mutationCreateRig.loading\n            }\n            onBack={(index, setIndex) => {\n              setIndex(index - 1);\n            }}\n            onNext={onWingloadingNext}\n          />\n\n          <WizardCompleteStep\n            title=\"You're all set!\"\n            subtitle=\"You can configure your settings on the profile page\"\n            backButtonLabel=\"Back\"\n            nextButtonLabel=\"Done\"\n            onBack={(index, setIndex) => {\n              if (state.fields.skipRigSetup.value === true) {\n                setIndex(index - 4);\n              } else {\n                setIndex(index - 1);\n              }\n            }}\n            onNext={() => {\n              dispatch(actions.forms.userWizard.setOpen(false));\n              dispatch(actions.forms.user.setOpen(false));\n              dispatch(actions.forms.rig.setOpen(false));\n              dispatch(actions.forms.userWizard.reset());\n              dispatch(actions.forms.user.reset());\n              dispatch(actions.forms.rig.reset());\n            }}\n          />\n        </Wizard>\n      </Modal>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modal: {\n    ...StyleSheet.absoluteFillObject,\n    paddingLeft: 0,\n    marginLeft: 0,\n    marginBottom: 0,\n    marginTop: 0,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    backgroundColor: 'red',\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    flex: 1,\n    alignItems: 'center',\n  },\n});\n\nexport default UserWizardScreen;\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider as MaterialProvider, ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { Appearance, Linking, Platform, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { registerRootComponent } from 'expo';\nimport URI from 'urijs';\nimport Wrapper from './EntrypointWrapper';\n\nimport AppUpdate from './components/app_update/AppUpdate';\n\nimport Apollo from './api/Apollo';\nimport { store, persistor, useAppSelector, useAppDispatch } from './state/store';\nimport ImageViewer from './components/dialogs/ImageViewer/ImageViewer';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport NotificationArea from './components/notifications/Notifications';\nimport LinkingConfiguration from './navigation/Routes';\nimport RootNavigator from './navigation/RootNavigator';\nimport { actions } from './state';\nimport UserWizardScreen from './components/dialogs/UserWizard/UserWizardScreen';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestForegroundPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nfunction Content() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = (link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  };\n\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  React.useEffect(() => {\n    if (isDarkMode && !state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else if (!isDarkMode && state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else {\n      dispatch(actions.global.setPrimaryColor(state.theme.colors.primary));\n    }\n  }, [dispatch, isDarkMode, state.isDarkMode, state.theme.colors.primary]);\n\n  React.useEffect(() => {\n    if (Platform.OS === 'web') {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: notification.request.content.body,\n            variant: 'warning',\n          })\n        );\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      console.log(response);\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch]);\n\n  return (\n    <AppUpdate>\n      <React.Suspense\n        fallback={\n          <View style={{ flex: 1, flexGrow: 1 }}>\n            <ProgressBar indeterminate color={state?.theme?.colors?.accent} visible />\n          </View>\n        }\n      >\n        <Apollo>\n          <MaterialProvider theme={state.theme}>\n            <SafeAreaProvider>\n              <ImageViewer />\n              <NavigationContainer\n                linking={LinkingConfiguration}\n                theme={state.theme as unknown as never}\n              >\n                <Wrapper>\n                  <RootNavigator />\n                </Wrapper>\n              </NavigationContainer>\n\n              <StatusBar />\n              <UserWizardScreen />\n              <NotificationArea />\n            </SafeAreaProvider>\n          </MaterialProvider>\n        </Apollo>\n      </React.Suspense>\n    </AppUpdate>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default registerRootComponent(App);\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        // console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n"],"sourceRoot":""}