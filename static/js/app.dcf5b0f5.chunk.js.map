{"version":3,"sources":["app/components/map/Map.web.tsx","app/utils/calculateCoordinatesByAngle.ts","assets/images/weather.png","assets/images/night.png","app/screens/authenticated/manifest/Weather/JumpRun.tsx","assets/images/logo-black.png","assets/images/logo.png","assets/fonts/SpaceMono-Regular.ttf","assets/images/pattern.png","app/PaperDatesPolyfill.ts","app/EntrypointWrapper.web.tsx","app/api/schema.d.ts","app/components/LottieView.web.tsx","app/components/forms/credits/slice.tsx","app/screens/authenticated/dropzone_wizard/slice.tsx","app/components/forms/dropzone/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/extra/slice.tsx","app/components/forms/load/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/plane/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/ticket_type/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/users/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/authenticated/user_wizard/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/components/notifications/slice.ts","app/state/store.ts","app/components/app_update/AppUpdate.tsx","app/api/Apollo.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/components/notifications/Notifications.tsx","app/navigation/Routes.ts","app/screens/NotFoundScreen.tsx","app/api/reflection.tsx","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateUser.ts","app/api/hooks/useCurrentDropzone.ts","app/hooks/useRestriction.ts","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/input/number_input/NumberField.tsx","app/api/createQuery.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/components/forms/manifest/ManifestForm.tsx","app/components/dialogs/ManifestUser/ManifestUser.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/components/dialogs/ManifestGroup/UserListSelect.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/load/SlotCard.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/screens/authenticated/load/ActionButton.tsx","app/screens/authenticated/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/load/Header.tsx","app/screens/authenticated/load/InfoGrid.tsx","app/api/hooks/useQueryLoad.ts","app/api/hooks/useMutationDeleteSlot.ts","app/screens/authenticated/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/layout/ScrollableScreen.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/weather_conditions/WindScreen.tsx","app/navigation/SetupWarning.tsx","app/navigation/AppBar.tsx","app/hooks/usePalette.ts","app/screens/authenticated/manifest/GetStarted.tsx","app/screens/authenticated/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/manifest/LoadCard/Small/Card.tsx","app/components/layout/SwipeActions.tsx","app/screens/authenticated/manifest/LoadCard/Large/Card.tsx","app/api/hooks/useMutationCreateLoad.ts","app/components/notifications/index.ts","app/api/hooks/useQueryDropzoneUsers.ts","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/forms/load/LoadForm.tsx","app/components/layout/DialogOrSheet.web.tsx","app/components/dialogs/Load.tsx","app/screens/authenticated/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/manifest/ManifestScreen.tsx","app/utils/checkDropzoneSetupComplete.ts","app/screens/authenticated/manifest/ManifestGroupScreen.tsx","app/screens/authenticated/manifest/ManifestGroupUserSelectScreen.tsx","app/api/hooks/useDropzoneUserProfile.ts","app/components/Badge.tsx","app/api/hooks/useMutationRevokePermission.ts","app/api/hooks/useMutationGrantPermission.ts","app/screens/authenticated/profile/UserInfo/PermissionBadges.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/components/forms/credits/CreditsForm.tsx","app/components/dialogs/CreditsDialog/Credits.web.tsx","app/api/hooks/useMutationCreateRig.ts","app/api/hooks/useMutationUpdateRig.tsx","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/forms/user/UserForm.tsx","app/api/hooks/useDropzoneUser.ts","app/components/dialogs/User.tsx","app/screens/authenticated/profile/UserInfo/Header.tsx","app/screens/authenticated/profile/UserInfo/InfoGrid.tsx","app/screens/authenticated/profile/SlotCard.tsx","app/screens/authenticated/profile/ProfileScreen.tsx","app/api/hooks/useNotifications.ts","app/screens/authenticated/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/NotificationsScreen.tsx","app/components/UserAvatar.tsx","app/screens/authenticated/transactions/OrderCard.tsx","app/screens/authenticated/transactions/TransactionsScreen.tsx","app/screens/authenticated/equipment/RigCard.tsx","app/screens/authenticated/equipment/EquipmentScreen.tsx","app/screens/authenticated/settings/SettingsScreen.tsx","app/api/hooks/useMutationCreateTicketType.ts","app/api/hooks/useMutationUpdateTicketType.ts","app/components/forms/ticket_type/TicketTypeForm.tsx","app/components/dialogs/TicketType.tsx","app/screens/authenticated/ticket_types/TicketTypesScreen.tsx","app/api/hooks/useMutationUpdateDropzone.ts","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/dropzones/UpdateDropzoneScreen.tsx","app/components/forms/plane/PlaneForm.tsx","app/components/dialogs/Plane.tsx","app/screens/authenticated/planes/PlanesScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/settings/RigInspectionTemplateScreen.tsx","app/screens/authenticated/settings/DropzoneRigsScreen.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/authenticated/settings/DropzonePermissionScreen.tsx","app/screens/authenticated/settings/DropzoneMasterLogScreen.tsx","app/components/forms/extra/ExtraForm.tsx","app/screens/authenticated/extras/UpdateExtraScreen.tsx","app/api/hooks/useMutationCreateExtra.ts","app/api/hooks/useMutationUpdateExtra.ts","app/components/dialogs/TicketTypeExtra.tsx","app/screens/authenticated/extras/ExtrasScreen.tsx","app/screens/authenticated/transactions/TransactionCard.tsx","app/screens/authenticated/transactions/OrderScreen.tsx","app/screens/authenticated/transactions/DropzoneTransactionsScreen.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/screens/authenticated/rig/RigInspectionScreen.tsx","app/navigation/tabs/manifest.tsx","app/components/forms/ghost/GhostForm.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/users/UsersScreen.tsx","app/screens/authenticated/users/AppBar.tsx","app/navigation/tabs/users.tsx","app/navigation/tabs/notifications.tsx","app/navigation/AnimatedTabBar.web.tsx","app/navigation/Authenticated.tsx","app/screens/authenticated/dropzones/DropzonesScreen.tsx","app/navigation/LimboRoutes.tsx","app/components/GradientText.web.tsx","app/components/navigation_wizard/Step.tsx","app/components/navigation_wizard/Dots.tsx","app/components/navigation_wizard/Wizard.tsx","app/utils/checkPasswordComplexity.ts","app/components/input/PasswordComplexityIndicator.tsx","app/screens/unauthenticated/signup/wizard/steps/Password.tsx","app/screens/unauthenticated/signup/wizard/steps/Email.tsx","app/screens/unauthenticated/signup/wizard/steps/PasswordConfirmation.tsx","app/screens/unauthenticated/signup/wizard/steps/Done.tsx","app/screens/unauthenticated/signup/wizard/SignupWizard.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/hooks/useMutationSignUp.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/screens/unauthenticated/login/RecoverPasswordScreen/steps/Email.tsx","app/screens/unauthenticated/login/RecoverPasswordScreen/steps/Done.tsx","app/screens/unauthenticated/login/RecoverPasswordScreen/index.ts","app/screens/unauthenticated/login/RecoverPasswordScreen/RecoverPasswordScreen.tsx","app/navigation/Unauthenticated.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationCreatePlane.tsx","app/api/hooks/useMutationUpdatePlane.tsx","app/screens/authenticated/dropzone_wizard/steps/Name.tsx","app/components/input/card_select/CardSelect.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/screens/authenticated/dropzone_wizard/steps/Federation.tsx","app/utils/calculateLatLngDelta.ts","app/components/input/search/AddressSearchBar.tsx","app/screens/authenticated/dropzone_wizard/steps/Location.web.tsx","app/screens/authenticated/dropzone_wizard/steps/Aircraft.tsx","app/screens/authenticated/dropzone_wizard/steps/Theming.tsx","app/screens/authenticated/dropzone_wizard/steps/Done.tsx","app/screens/authenticated/dropzone_wizard/steps/Permissions.tsx","app/screens/authenticated/dropzone_wizard/steps/TicketType.tsx","app/screens/authenticated/dropzone_wizard/DropzoneWizard.tsx","app/screens/authenticated/user_wizard/steps/Federation.tsx","app/screens/authenticated/user_wizard/steps/FederationNumber.tsx","app/screens/authenticated/user_wizard/steps/RealName.tsx","app/screens/authenticated/user_wizard/steps/Nickname.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/screens/authenticated/user_wizard/steps/License.tsx","app/screens/authenticated/user_wizard/steps/Rig.tsx","app/screens/authenticated/user_wizard/steps/ReserveRepack.tsx","app/screens/authenticated/user_wizard/steps/AskForRig.tsx","app/screens/authenticated/user_wizard/steps/Wingloading.tsx","app/screens/authenticated/user_wizard/steps/Done.tsx","app/screens/authenticated/user_wizard/UserWizardScreen.tsx","app/screens/unauthenticated/signup/ConfirmUserScreen.tsx","app/screens/unauthenticated/login/ChangePasswordScreen/steps/Done.tsx","app/screens/unauthenticated/login/ChangePasswordScreen/steps/Password.tsx","app/screens/unauthenticated/login/ChangePasswordScreen/steps/PasswordConfirmation.tsx","app/screens/unauthenticated/login/ChangePasswordScreen/index.ts","app/screens/unauthenticated/login/ChangePasswordScreen/ChangePasswordScreen.tsx","app/api/hooks/useQueryDropzones.ts","app/navigation/drawer/Drawer.tsx","app/navigation/RootNavigator.tsx","app/Entrypoint.tsx","app/hooks/useCachedResources.ts"],"names":["DEFAULT_COORDS","lat","lng","Map","props","width","height","position","children","_coords","center","coords","shape","interactive","onDragEnd","useJsApiLoader","googleMapsApiKey","id","isLoaded","containerStyle","loadError","mapStyle","map","React","onLoad","component","a","async","current","Location","status","console","log","error","bounds","window","google","maps","LatLngBounds","fitBounds","panTo","onUnmount","rootLayout","setRootLayout","isFocused","useIsFocused","onLayout","nativeEvent","layout","style","borderRadius","undefined","overflow","top","y","left","x","pointerEvents","ref","mapTypeId","MapTypeId","HYBRID","mapContainerStyle","options","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","getPointOnCircle","opts","degrees","radius","offsetX","offsetY","Math","sin","PI","cos","module","exports","Dimensions","get","styles","StyleSheet","create","container","paddingHorizontal","alignItems","paddingLeft","paddingRight","degreeLabel","textAlign","textShadowColor","textShadowRadius","textShadowOffset","fontSize","color","content","flexDirection","iconContainer","borderWidth","borderStyle","borderColor","alignSelf","justifyContent","MAP_SIZE","CENTER_Y","CENTER_X","jumpRun","originX","originY","origin","setOrigin","opacity","Animated","Value","planePosition","planeAnimation","loop","timing","duration","toValue","useNativeDriver","resetBeforeIteration","onMountRotatableView","event","start","animate","stop","reset","planeStartPosition","View","transform","rotate","backgroundColor","interpolate","inputRange","outputRange","scaleX","translateY","name","size","Text","round","b","isEqual","Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","Wrapper","absoluteFill","LoadState","ModerationRole","NotificationType","OrderState","Permission","SellableItemTypes","TransactionStatus","TransactionType","WalletableTypes","LottieView","DropzoneWizardStep","initialState","original","open","fields","amount","value","transactionType","Deposit","message","createSlice","reducers","setField","state","action","payload","field","setFieldError","setOpen","federation","secondaryColor","primaryColor","banner","isCreditSystemEnabled","isPublic","requestPublication","Object","keys","forEach","key","payloadKey","typedKey","setOriginal","role","expiresAt","cost","ticketTypes","gca","dispatchAt","isOpen","loadMaster","pilot","plane","maxSlots","exitWeight","email","phone","license","setFederation","registration","minSlots","hours","nextMaintenanceHours","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","idx","setFields","JSON","parse","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","passengerName","passengerExitWeight","users","setFromSlots","slot","Number","rigId","find","i","setDropzoneUsers","dzUser","availableRigs","user","altitude","allowManifestingSelf","isTandem","apfNumber","nickname","rigs","dropzone","userFederations","uid","temperature","exitSpotMiles","offsetDirection","winds","credits","extra","ghost","rigInspection","rigInspectionTemplate","manifest","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","currentIndex","completed","Name","Federation","Aircraft","Tickets","Branding","setIndex","complete","skipRigSetup","login","signup","dropzoneWizard","userWizard","image","close","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","expoPushToken","theme","palette","main","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setPermissions","setPrimaryColor","darken","hex","lighten","setAccentColor","setDropzone","toggleDarkMode","logout","queue","hideSnackbar","newQueue","showSnackbar","last","push","persistConfig","storage","default","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","notifications","notificationSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppUpdate","overlay","setOverlay","loading","setLoading","animation","dispatch","onUpdate","play","Update","isNew","isUpdateAvailable","isAvailable","flex","blur","intensity","title","source","Button","disabled","button","mode","onPress","absoluteFillObject","fontWeight","bottom","Apollo","httpBatchLink","Constants","environment","BatchHttpLink","batchDebounce","batchMax","uri","urls","url","root","errorLink","onError","graphQLErrors","networkError","operation","response","some","extensions","code","variant","process","EXPO_ENV","locations","path","nodes","stringify","authLink","setContext","_","headers","accessToken","Authorization","tokenType","client","ApolloClient","link","concat","RetryLink","cache","InMemoryCache","ApolloProvider","ImageViewer","mainSrc","onCloseRequest","AnimationState","slice","Notifications","successAnimation","closed","animationState","setAnimationState","notification","length","opening","Toast","show","onHide","text1","capitalize","text2","type","autoPlay","speed","onAnimationFinish","waiting","setTimeout","lottieDoneAnimation","setRef","autoHide","visibilityTime","prefixes","Linking","config","confirm","ChangePasswordScreen","Authenticated","HomeScreen","LoadScreen","PackingScreen","ProfileScreen","SetupScreen","Limbo","DropzonesScreen","CreateDropzoneScreen","Unauthenticated","LoginScreen","SignUpScreen","NotFoundScreen","navigation","TouchableOpacity","replace","linkText","padding","marginTop","paddingVertical","defaultOptions","DropzoneUserProfileFragmentDoc","gql","DropzoneEssentialsFragmentDoc","DropzoneDetailedFragmentDoc","CurrentUserEssentialsFragmentDoc","UserEssentialsFragmentDoc","TransactionEssentialsFragmentDoc","OrderEssentialsFragmentDoc","CurrentUserDetailedFragmentDoc","DropzoneExtensiveFragmentDoc","SlotFragmentDoc","LoadFragmentDoc","RigEssentialsFragmentDoc","UserRigDetailedFragmentDoc","ConfirmUserDocument","CreateOrderDocument","CreateRigDocument","FinalizeLoadDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","RecoverPasswordDocument","UpdateLostPasswordDocument","UpdateRigDocument","UserSignUpDocument","QueryDropzoneDocument","DropzoneTransactionsDocument","AddressToLocationDocument","CurrentUserPermissionsDocument","isRequired","pattern","isEmail","RegExp","isNumeric","validates","callback","createMutation","mutation","getPayload","fieldErrorMap","validators","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","variables","mopts","hasErrors","variable","validator","test","validate","result","data","fieldErrors","errors","requestAnimationFrame","updateUser","licenseId","useCurrentDropzone","dropzoneId","pushToken","useQuery","earliestTimestamp","startOfDay","Date","getTime","fetchPolicy","mutationUpdateUser","useMutationUpdateUser","userId","remoteToken","localToken","called","useRestriction","permission","useCurrentUserPermissionsLazyQuery","execute","includes","QUERY_PERMISSION_USER","GCAChip","small","assignedColor","onSelect","useTheme","onSurface","isMenuOpen","setMenuOpen","UpdateLoad","Menu","onDismiss","visible","anchor","Chip","icon","selectedColor","marginHorizontal","textStyle","dropzoneUsers","edges","edge","Item","node","LoadMasterChip","slots","allowed","QUERY_DROPZONE_USERS","PilotChip","QUERY_PLANES","PlaneChip","planes","NumberField","onChangeValue","onChangeText","rest","match","numbers","TextInput","keyboardType","right","Affix","chevrons","affixTopChevron","surface","MaterialCommunityIcons","affixBottomChevron","caretHidden","borderLeftWidth","hairlineWidth","borderBottomWidth","paddingTop","marginRight","createQuery","query","pollInterval","refetch","transformedData","showSnackbarErrors","items","selected","isSelected","isDisabled","renderItemLabel","onChangeSelected","autoSelectFirst","flexWrap","margin","xorBy","previous","next","pick","ChipSelectSkeleton","rows","isLoading","marginBottom","marginVertical","useAllowedJumpTypes","allowedJumpTypes","jumpTypes","JumpTypeChipSelect","onLoadingStateChanged","userIds","filter","Boolean","Subheader","uniqBy","first","useTicketTypes","TicketTypeChipSelect","onlyPublicTickets","RigTitle","QUERY_RIGS","RigSelect","tandem","useLazyQuery","fetchRigs","onTouchEnd","label","Icon","editable","ManifestForm","allowedToManifestOthers","UpdateUserSlot","CreateUserSlot","HelperText","ScrollView","horizontal","ticketAddons","Divider","newValue","toString","MUTATION_CREATE_SLOT","ManifestUserDialog","globalState","mutationCreateSlot","mutationData","onManifest","jumpTypeId","extraIds","loadId","ticketTypeId","dropzoneUserId","createSlot","Portal","Dialog","maxWidth","ProgressBar","indeterminate","Title","ScrollArea","Actions","onClose","useQueryDropzoneUsersDetails","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","Card","elevation","Image","Content","toFixed","row","rowFirst","rowLast","num","SlotForm","canManifestOthers","slotUser","flexShrink","newRig","useThemeColor","colorName","colorFromProps","Colors","lightColor","darkColor","otherProps","NoResults","subtitle","empty","Paragraph","fab","UserListSelect","search","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","Searchbar","placeholder","contentContainerStyle","description","Checkbox","onNext","scrollView","MUTATION_CREATE_SLOTS","mutationCreateSlots","tabIndex","setTabIndex","userGroup","slotUserWithRig","omit","createSlots","testID","defaultIndex","onChangeIndex","userListContainer","paddingBottom","flexGrow","buttonContainer","contentContainer","sheet","sheetHeader","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","SlotCard","onDelete","hasPassenger","flatten","card","Badge","e","preventDefault","infoChip","chipText","wingLoading","chip","passengerTitle","passengerChip","updateLoad","pilotId","gcaId","planeId","loadMasterId","ActionButton","isExpanded","setExpanded","useFinalizeLoadMutation","mutationFinalizeLoad","mutationUpdateLoad","useMutationUpdateLoad","updateCall","minutes","dispatchTime","addMinutes","ceil","BoardingCall","Open","updateLoadState","onLanded","Landed","hasLicense","hasMembership","hasExitWeight","hasCredits","canUpdateLoad","canManifestSelf","CreateSlot","isFull","showManifestButton","showGroupIcon","createCallAction","callActions","manifestActions","workflowActions","Cancelled","InFlight","buttonActions","FAB","Group","fabStyle","marginLeft","onStateChange","CountdownCircleTimer","select","ios","then","android","web","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","UserHeader","onEdit","canEdit","LinearGradient","IconButton","avatarContainer","isAfter","titleContainer","loadNumber","paragraph","InfoGrid","divider","titleStyle","bold","descriptionStyle","verticalDivider","deleteSlot","AvailableSlotCard","SlotSkeleton","route","useRoute","useQueryLoad","params","detailedLoad","mutationDeleteSlot","useMutationDeleteSlot","onDeleteSlot","updatePilot","updateGCA","updatePlane","updateLoadMaster","lm","canEditSelf","UpdateSlot","canEditOthers","canRemoveSelf","DeleteSlot","canRemoveOthers","DeleteUserSlot","useNavigation","Array","from","availableSlots","occupiedSlots","useWindowDimensions","numColumns","floor","contentWidth","initialLoading","showsHorizontalScrollIndicator","weight","keyExtractor","refreshing","onRefresh","refreshControl","RefreshControl","renderItem","slotGroup","groupNumber","onSlotGroupPress","navigate","onSlotPress","WizardPagination","paginationIndex","icons","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","count","Wizard","Provider","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","wizardScreen","buttonBack","buttons","WizardScreen","onBack","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","scrollTo","ScrollableScreen","minHeight","WizardCompleteStep","createWeatherCondition","WindRow","direction","onChange","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","minWidth","altitudeOption","alt","strengthCard","onBlur","newSpeed","textField","directionCard","newDir","CARD_STYLE","textAlignVertical","lineHeight","borderBottomLeftRadius","borderBottomRightRadius","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","KeyboardAvoidingView","behavior","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","set","cardTitle","cardValue","slider","sliderControl","wingLoadingCardLeft","wingLoadingCardRight","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","JumpRunSelector","latitude","longitude","isDragging","setDragging","rotation","onGestureEvent","setValue","currentCoordinates","angle","onBegan","onEnded","maxHeight","zIndex","bottomDegreeLabel","textInput","location","setLocation","setUsersLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","Winds","goBack","JumpRun","JumpRunScreen","WindScreen","labelStyle","Warning","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","join","QUERY_CURRENT_USER","AppBar","scene","hideWarnings","loadData","Appbar","Header","BackAction","DrawerActions","toggleDrawer","descriptor","headerRight","tintColor","isRigInspected","rigInspections","inspection","isRepackInDate","usePalette","GetStarted","hasPlanes","hasTicketTypes","separator","LoadingCard","LoadCard","initialRecord","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","smallChip","smallChipText","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","translateX","useNativeAnimations","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","hasLanded","DataTable","numeric","isCurrentUser","Row","Cell","slotText","v","differenceInMinutes","createLoad","DropzoneUserChipSelect","requiredPermissions","useQueryDropzoneUsers","getItemLabel","PlaneChipSelect","LoadForm","DialogOrSheet","buttonLabel","buttonAction","dismissable","LoadDialog","useMutationCreateLoad","snackbar","snapPoints","onSave","WeatherBoard","conditions","currentConditions","date","createdAt","canUpdate","UpdateWeatherConditions","hasWeatherConditions","easing","Easing","inOut","ease","onLongPress","ImageBackground","nightBackground","weatherBackground","resizeMode","cell","FontAwesome","format","windboard","header","orderBy","noData","noDataLabel","ManifestScreen","manifestScreen","setup","isDisplayOptionsOpen","setDisplayOptionsOpen","isSetupCheckComplete","fetchMore","dropzoneWizardIndex","values","isComplete","checkDropzoneSetupComplete","setOptions","isSetupComplete","canCreateLoad","CreateLoad","hasRigInspection","hasReserveInDate","cardWidth","loads","ListHeaderComponent","ListEmptyComponent","ManifestGroupScreen","screen","ManifestGroupUserSelectScreen","Android","setParams","QUERY_DROPZONE_USER_PROFILE","innerChip","iconName","ActAsDzso","ActAsGca","ActAsLoadMaster","ActAsPilot","ActAsRigInspector","revokePermission","permissionName","grantPermission","PermissionBadges","canGrantPermission","GrantPermission","useMutationRevokePermission","refetchQueries","useMutationGrantPermission","badges","shouldShowBadge","update","c","readQuery","updatedList","writeQuery","shouldUpdate","updatedGcaList","newData","DatePicker","timestamp","selectedDays","onDayClick","QUERY_ROLES","RoleSelect","required","toUpperCase","roles","DropzoneUserForm","canUpdateRole","newRole","time","MUTATION_EDIT_DROPZONE_USER","DropzoneUserDialog","useApolloClient","getCachedUser","readFragment","fragment","identify","mutationUpdateDropzoneUser","createData","userRoleId","updateDropzoneUser","CreditsForm","currentCredits","subtotal","useCreateOrderMutation","mutationCreateOrder","seller","Dropzone","DropzoneUser","buyer","createOrder","newIndex","createRig","updateRig","RigForm","showTypeSelect","canCreateRigs","CreateRig","RigDialog","useMutationUpdateRig","useMutationCreateRig","onDialogClose","QUERY_LICENSES","LicenseChipSelect","federationId","licenses","QUERY_FEDERATIONS","FederationSelect","federations","QUERY_DROPZONE_USER","useDropzoneUser","UpdateUserDialog","joinFederation","parseFloat","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","textColor","primaryDark","TouchableRipple","openURL","transaction","transactionContent","Caption","transactionTitle","transactionDescription","avatarIcon","MUTATION_UPDATE_IMAGE","isSelf","useDropzoneUserProfile","ImagePicker","onPickImage","mediaTypes","Images","allowsEditing","aspect","quality","base64","canAddTransaction","CreateUserTransaction","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","onCloseRigForm","onUserSheetClose","windowDimensions","wrappingHeaderItemWidth","wrappingHeader","wrappingHeaderItem","chipTitle","QUERY_DROPZONE_USER_NOTIFICATIONS","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","addSuffix","ManifestedNotification","initial","resource","BoardingCallNotification","getIcon","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","useNotifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","UserAvatar","initals","split","n","OrderCard","order","showAvatar","__typename","orderContent","orderTitle","orderDescription","TransactionsScreen","firstName","flatList","orders","RigCard","onSuccessfulImageUpload","isUploading","setUploading","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","textRow","inspectedBy","insp","isOk","SettingsScreen","canUpdateDropzone","UpdateDropzone","canUpdateRigInspectionTemplate","UpdateFormTemplate","Section","createTicketType","updateTicketType","QUERY_EXTRAS","ALTITUDE_LABEL_MAP","TicketTypeForm","TicketTypeDialog","useMutationCreateTicketType","useMutationUpdateTicketType","QUERY_TICKET_TYPE","MUTATION_UPDATE_TICKET_TYPE","MUTATION_DELETE_TICKET_TYPE","TicketTypesScreen","form","mutationUpdateTicketType","mutationDeleteTicketType","canCreateTicketTypes","CreateTicketType","deleteTicketType","Switch","onValueChange","updateDropzone","ColorPickerDialog","sliderComponent","SliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","colorBox","ColorPicker","helperText","isCustomColor","isDialogOpen","setDialogOpen","Surface","manipulate","MaterialIcons","previewContainer","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","previewTabBar","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","PhonePreview","WebPreview","markerFixed","myLocation","LocationWizardStep","markerSize","labelSize","setCenter","region","isAnimating","setAnimating","fadeOut","fadeIn","setCoordinateFade","defaultZoom","onDragStart","r","DropzoneForm","outsideLoading","getDocumentAsync","multiple","skeletonCard","Cover","Phone","Web","skeletonCardColorPicker","skeletonCardCheckbox","descriptionNumberOfLines","iconProps","extraProps","moderationRole","subheader","UpdateDropzoneScreen","mutationUpdateDropzone","useMutationUpdateDropzone","hasError","MUTATION_UPDATE_PLANE","MUTATION_CREATE_PLANE","CreatePlaneScreen","mutationCreatePlane","mutationUpdatePlane","createPlane","MUTATION_DELETE_PLANE","PlanesScreen","deletePlane","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","RigInspectionItem","canInspect","valueType","RigInspectionTemplateForm","newItem","setNewItem","fabOpen","setFabOpen","QUERY_RIG_INSPECTION","MUTATION_UPDATE_FORM","RigInspectionTemplateScreen","mutationUpdateForm","updateForm","formId","QUERY_DROPZONE_RIGS","MUTATION_UPDATE_RIG","DropzoneRigsScreen","rigForm","mutationUpdateRig","updateData","canCreateRig","CreateDropzoneRig","MUTATION_UPDATE_ROLE","PermissionListItem","canChangePermissions","mutationUpdatePermission","roleId","optimisticResponse","updateRole","QUERY_DROPZONE_PERMISSIONS","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","masterLog","QUERY_TICKET_TYPES","ExtraForm","ticket","MUTATION_UPDATE_EXTRA","UpdateExtraScreen","mutationUpdateExtra","ticketTypeIds","updateExtra","createExtra","TicketTypeExtraDialog","useMutationCreateExtra","useMutationUpdateExtra","ExtrasScreen","formState","canCreateExtras","CreateExtra","TransactionCard","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","rightStyle","receipts","useDropzoneTransactionsLazyQuery","fetchTransactions","RigInspectionForm","QUERY_RIG_INSPECTIONS","MUTATION_CREATE_RIG_INSPECTION","RigInspectionScreen","mutationCreateRigInspection","record","createRigInspection","mutationResult","currentDz","ins","Manifest","createStackNavigator","ManifestTab","Navigator","screenOptions","headerShown","headerStyleInterpolator","HeaderStyleInterpolators","forUIKit","cardStyle","Screen","initialParams","NotificationsScreen","EquipmentScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","createGhost","exit_weight","CreateGhostDialog","mutationCreateGhost","useMutationCreateGhost","UserCardSkeleton","UsersScreen","ghostForm","canCreateUser","CreateUser","inputContainer","input","onSearch","searchVisible","autoFocus","Settings","SettingsTab","Profile","initialRouteName","BottomTab","createBottomTabNavigator","AnimatedIcon","createAnimatedComponent","AuthenticatedTabBar","Appearance","getColorScheme","canViewUsers","ReadUser","tabConfig","activeColor","inactiveColor","tabs","animatedFocus","iconActive","Users","tabBar","preset","inactiveOpacity","inactiveScale","tabBarOptions","activeTintColor","inactiveBackgroundColor","backdrop","activeBackgroundColor","inactiveTintColor","showLabel","adaptive","borderTopWidth","borderTopColor","tabBarLabel","focused","tabBarIcon","unmountOnBlur","NotificationsTab","UsersTab","QUERY_DROPZONES","SafeAreaView","FlatList","dropzones","shouldPushRoute","dzIcon","Stack","GradientText","Fields","fieldContent","Step","hideContentUntilNavigatedTo","dots","Dots","activeDot","inactiveDot","WizardRoot","WizardModal","steps","transitionSpec","TransitionSpecs","TransitionIOSSpec","forFade","cardStyleInterpolator","layouts","overlayStyle","screenProps","nextIndex","nextIndexFactor","backIndexFactor","PasswordStrength","entropy","minimumEntropy","calculateComplexity","charsetLength","character","getPasswordStrength","passwordEntropy","weak","strong","checkPasswordComplexity","indicator","indicatorInactive","indicatorWeak","indicatorOk","indicatorStrong","PasswordStep","strength","indicatorStyle","textContentType","secureTextEntry","passwordRules","PasswordComplexityIndicator","EmailStep","newText","PasswordConfirmationStep","DoneStep","SignupWizard","useUserSignUpMutation","onSignUp","validateEmail","Error","validatePassword","onClickSignUp","userSignUp","MUTATION_LOG_IN","mutationLogin","onLogin","emailRegex","userLogin","authenticatable","logo","onSubmitEditing","textButtonLabel","textButton","forgotPassword","SignupScreen","useMutationSignUp","RecoverPasswordScreen","useRecoverPasswordMutation","onRecover","onClickRecover","redirectUrl","userSendPasswordReset","createDropzone","active","itemSelected","FederationCardSelect","degreesToRadians","calculateLatLngDelta","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","AddressSearchBar","suggestions","setSuggestions","useAddressToLocationLazyQuery","fetchLocation","fetchSuggestions","fetchSuggestionsDebounced","debounce","geocode","onPickResult","formattedString","allowFontScaling","numberOfLines","suggestion","latitudeDelta","longitudeDelta","autocomplete","AircraftWizardScreen","setMaxSlots","minimumValue","maximumValue","step","minimumTrackTintColor","maximumTrackTintColor","onSlidingComplete","ThemingStep","Done","PermissionWizardScreen","dropzoneForm","queryRoles","TicketTypeWizardScreen","price","setPrice","DropzoneSetupScreen","aircraft","mutationCreateDropzone","useMutationCreateDropzone","useMutationCreatePlane","useMutationUpdatePlane","mutationCreateTicketType","onNameNext","onFederationNext","onThemingNext","camelize","onAircraftNext","onTicketTypeNext","NameStep","FederationStep","LocationStep","AircraftStep","TicketTypeStep","stepProps","FederationWizardSceen","RealName","UserInfoScreen","LicenseCardSelect","RigWizardScreen","isOtherMake","setIsOtherMake","ReserveRepackStep","AskForRigStep","WingloadingWizardScreen","userForm","setCanopySize","setWeight","w","UserWizardScreen","useUpdateRigMutation","useCreateRigMutation","mutationCreateRig","onNicknameNext","toLowerCase","userFederation","onFederationNumberNext","onLicenseNext","onRigNext","onReserveRepackNext","onWingloadingNext","RealNameStep","NicknameStep","FederationNumberStep","LicenseStep","RigStep","WingloadingStep","errorIcon","ConfirmUserScreen","useConfirmUserMutation","confirmUser","setError","token","userConfirmRegistrationWithToken","catch","useUpdateLostPasswordMutation","updatePassword","onChangePassword","userUpdatePasswordWithToken","DrawerMenu","useQueryDropzones","routeName","getFocusedRouteNameFromRoute","navState","dangerouslyGetState","subNavState","routes","subNavRoutes","subNavSubState","subRouteName","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","closeDrawer","profileHeader","Drawer","createDrawerNavigator","RootNavigator","drawerContent","AuthenticatedRoutes","LimboRoutes","UnauthenticatedRoutes","UserSetupWizard","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","Sentry","dsn","SENTRY_DSN","enableInExpoDevelopment","debug","googleMapsIos","googleMapsAndroid","googleMapsWeb","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","isDevice","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","registerForPushNotificationsAsync","request","body","addEventListener","removeEventListener","fallback","NavigationContainer","linking","LinkingConfiguration","StatusBar","Geocoder","init","setGoogleApiKey","registerRootComponent","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","fontsLoaded","SplashScreen","Ionicons","font","useCachedResources","ActivityIndicator"],"mappings":"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","file":"static/js/app.dcf5b0f5.chunk.js","sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, StyleSheet, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n/* eslint-disable import/no-unresolved */\nimport { GOOGLE_MAPS_WEB } from '@env';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { useIsFocused } from '@react-navigation/core';\nimport { calculateLatLngDelta } from '../../utils/calculateLatLngDelta';\n\n// Used if user location cant be used and we have no other fallback\n// This points to Brisbane:\nconst DEFAULT_COORDS = { lat: -27.4705, lng: 153.026 };\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const {\n    width,\n    height,\n    position,\n    children,\n    center,\n    coords: _coords,\n    shape,\n    interactive,\n    onDragEnd,\n  } = props;\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_WEB,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n  const coords = _coords || DEFAULT_COORDS;\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        // const location = await Location.getCurrentPositionAsync({});\n        // const lat = coords?.lat || location.coords.latitude;\n        // const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        console.log({ error });\n      } finally {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds(coords);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n        map.current?.panTo?.(coords);\n      }\n    },\n    [coords]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  const isFocused = useIsFocused();\n\n  return !isLoaded || !isFocused ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        ref={map}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        mapTypeId={google.maps.MapTypeId.HYBRID}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          center: coords,\n          mapTypeControl: false,\n          mapTypeId: google.maps.MapTypeId.HYBRID,\n          zoomControl: false,\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from '../../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../../../components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: MAP_SIZE / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons name=\"airplane\" size={20} color=\"#ffffff\" />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","module.exports = __webpack_public_path__ + \"static/media/logo-black.36bb8461.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/pattern.9f57eead.png\";","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function Wrapper({ children }: { children: React.ReactNode }) {\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type AnyResource = {\n  id: Scalars['ID'];\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateExtra */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateRigInspection */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteDropzone */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteLoad */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeletePlane */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteSlot */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  id: Scalars['Int'];\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of DeleteTicket */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  dropzoneUsers: DropzoneUserConnection;\n  extras: Array<Extra>;\n  federation: Federation;\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  isPublic: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  loads: LoadConnection;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  requestPublication: Scalars['Boolean'];\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['Int'];\n  userRoles: Array<UserRole>;\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUsersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  permissions?: Maybe<Array<Permission>>;\n  search?: Maybe<Scalars['String']>;\n  licensed?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  name: Scalars['String'];\n  banner?: Maybe<Scalars['String']>;\n  federationId: Scalars['Int'];\n  requestPublication?: Maybe<Scalars['Boolean']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  primaryColor?: Maybe<Scalars['String']>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  isCreditSystemEnabled?: Maybe<Scalars['Boolean']>;\n};\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['Int'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['Int'];\n  user: User;\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  expiresAt?: Maybe<Scalars['Int']>;\n  credits?: Maybe<Scalars['Float']>;\n  userRoleId?: Maybe<Scalars['Int']>;\n};\n\nexport type Extra = SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type ExtraInput = {\n  name?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  ticketTypeIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  id: Scalars['Int'];\n  state: LoadState;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of FinalizeLoad */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['Int'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type FormTemplateInput = {\n  name?: Maybe<Scalars['String']>;\n  definition?: Maybe<Scalars['String']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n};\n\nexport type GeocodedLocation = {\n  __typename?: 'GeocodedLocation';\n  formattedString?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  lat?: Maybe<Scalars['Float']>;\n  lng: Scalars['Float'];\n};\n\nexport type GhostInput = {\n  name: Scalars['String'];\n  email: Scalars['String'];\n  phone?: Maybe<Scalars['String']>;\n  exitWeight: Scalars['Float'];\n  dropzoneId: Scalars['Int'];\n  roleId: Scalars['Int'];\n  licenseId?: Maybe<Scalars['Int']>;\n  federationNumber?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of GrantPermission */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['Int'];\n  federation?: Maybe<Federation>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['Int'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['Int'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  isOpen?: Maybe<Scalars['Boolean']>;\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  pilotId?: Maybe<Scalars['Int']>;\n  planeId?: Maybe<Scalars['Int']>;\n  gcaId?: Maybe<Scalars['Int']>;\n  loadMasterId?: Maybe<Scalars['Int']>;\n  state?: Maybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** open */\n  Open = 'open',\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum ModerationRole {\n  /** user */\n  User = 'user',\n  /** support */\n  Support = 'support',\n  /** moderator */\n  Moderator = 'moderator',\n  /** administrator */\n  Administrator = 'administrator'\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteTicketType?: Maybe<DeleteTicketPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<UserRegisterPayload>;\n  userResendConfirmation?: Maybe<UserResendConfirmationPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordReset?: Maybe<UserSendPasswordResetPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userSignUp?: Maybe<UserSignUpPayload>;\n  userUpdatePassword?: Maybe<UserUpdatePasswordPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  email: Scalars['String'];\n  confirmUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserSignUpArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  confirmSuccessUrl?: Maybe<Scalars['String']>;\n  phone: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  name: Scalars['String'];\n  licenseId?: Maybe<Scalars['Int']>;\n  pushToken?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  currentPassword?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** system */\n  System = 'system',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** user_manifested */\n  UserManifested = 'user_manifested',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  title?: Maybe<Scalars['String']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: WalletInput;\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: WalletInput;\n  /** Total amount of the order */\n  amount: Scalars['Int'];\n  sellableItem?: Maybe<SellableItemInput>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport enum OrderState {\n  /** pending */\n  Pending = 'pending',\n  /** completed */\n  Completed = 'completed',\n  /** refunded */\n  Refunded = 'refunded',\n  /** cancelled */\n  Cancelled = 'cancelled'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  /** updateDropzone */\n  UpdateDropzone = 'updateDropzone',\n  /** deleteDropzone */\n  DeleteDropzone = 'deleteDropzone',\n  /** updateWeatherConditions */\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  /** createLoad */\n  CreateLoad = 'createLoad',\n  /** updateLoad */\n  UpdateLoad = 'updateLoad',\n  /** deleteLoad */\n  DeleteLoad = 'deleteLoad',\n  /** readLoad */\n  ReadLoad = 'readLoad',\n  /** createSlot */\n  CreateSlot = 'createSlot',\n  /** createDoubleSlot */\n  CreateDoubleSlot = 'createDoubleSlot',\n  /** updateSlot */\n  UpdateSlot = 'updateSlot',\n  /** deleteSlot */\n  DeleteSlot = 'deleteSlot',\n  /** createUserSlot */\n  CreateUserSlot = 'createUserSlot',\n  /** createUserDoubleSlot */\n  CreateUserDoubleSlot = 'createUserDoubleSlot',\n  /** createUserSlotWithSelf */\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  /** updateUserSlot */\n  UpdateUserSlot = 'updateUserSlot',\n  /** deleteUserSlot */\n  DeleteUserSlot = 'deleteUserSlot',\n  /** createStudentSlot */\n  CreateStudentSlot = 'createStudentSlot',\n  /** updateStudentSlot */\n  UpdateStudentSlot = 'updateStudentSlot',\n  /** deleteStudentSlot */\n  DeleteStudentSlot = 'deleteStudentSlot',\n  /** createTicketType */\n  CreateTicketType = 'createTicketType',\n  /** updateTicketType */\n  UpdateTicketType = 'updateTicketType',\n  /** deleteTicketType */\n  DeleteTicketType = 'deleteTicketType',\n  /** createExtra */\n  CreateExtra = 'createExtra',\n  /** updateExtra */\n  UpdateExtra = 'updateExtra',\n  /** deleteExtra */\n  DeleteExtra = 'deleteExtra',\n  /** readExtra */\n  ReadExtra = 'readExtra',\n  /** createPlane */\n  CreatePlane = 'createPlane',\n  /** updatePlane */\n  UpdatePlane = 'updatePlane',\n  /** deletePlane */\n  DeletePlane = 'deletePlane',\n  /** createRig */\n  CreateRig = 'createRig',\n  /** updateRig */\n  UpdateRig = 'updateRig',\n  /** deleteRig */\n  DeleteRig = 'deleteRig',\n  /** readRig */\n  ReadRig = 'readRig',\n  /** createDropzoneRig */\n  CreateDropzoneRig = 'createDropzoneRig',\n  /** updateDropzoneRig */\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  /** deleteDropzoneRig */\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  /** readDropzoneRig */\n  ReadDropzoneRig = 'readDropzoneRig',\n  /** readPermissions */\n  ReadPermissions = 'readPermissions',\n  /** updatePermissions */\n  UpdatePermissions = 'updatePermissions',\n  /** createPackjob */\n  CreatePackjob = 'createPackjob',\n  /** updatePackjob */\n  UpdatePackjob = 'updatePackjob',\n  /** deletePackjob */\n  DeletePackjob = 'deletePackjob',\n  /** readPackjob */\n  ReadPackjob = 'readPackjob',\n  /** createFormTemplate */\n  CreateFormTemplate = 'createFormTemplate',\n  /** updateFormTemplate */\n  UpdateFormTemplate = 'updateFormTemplate',\n  /** deleteFormTemplate */\n  DeleteFormTemplate = 'deleteFormTemplate',\n  /** readFormTemplate */\n  ReadFormTemplate = 'readFormTemplate',\n  /** readUser */\n  ReadUser = 'readUser',\n  /** updateUser */\n  UpdateUser = 'updateUser',\n  /** deleteUser */\n  DeleteUser = 'deleteUser',\n  /** createUser */\n  CreateUser = 'createUser',\n  /** actAsPilot */\n  ActAsPilot = 'actAsPilot',\n  /** actAsLoadMaster */\n  ActAsLoadMaster = 'actAsLoadMaster',\n  /** actAsGCA */\n  ActAsGca = 'actAsGCA',\n  /** actAsDZSO */\n  ActAsDzso = 'actAsDZSO',\n  /** actAsRigInspector */\n  ActAsRigInspector = 'actAsRigInspector',\n  /** createUserTransaction */\n  CreateUserTransaction = 'createUserTransaction',\n  /** readUserTransactions */\n  ReadUserTransactions = 'readUserTransactions',\n  /** grantPermission */\n  GrantPermission = 'grantPermission',\n  /** revokePermission */\n  RevokePermission = 'revokePermission'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots?: Maybe<Scalars['Int']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type PlaneInput = {\n  name?: Maybe<Scalars['String']>;\n  minSlots?: Maybe<Scalars['Int']>;\n  maxSlots?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  hours?: Maybe<Scalars['Int']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get dropzone details */\n  dropzone: Dropzone;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get ticket addons for a dropzone */\n  extras: Array<Extra>;\n  /** Available federations */\n  federations: Array<Federation>;\n  /** Find location by searching */\n  geocode?: Maybe<GeocodedLocation>;\n  /** Load base64 images as graphql */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load: Load;\n  /** Get loads */\n  loads: LoadConnection;\n  /** Get planes from a dropzone */\n  planes: Array<Plane>;\n  /** Get ticket types for a dropzone */\n  ticketTypes: Array<TicketType>;\n  userCheckPasswordToken: User;\n  userConfirmAccount: User;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  requestedPublication?: Maybe<Scalars['Boolean']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryGeocodeArgs = {\n  search: Scalars['String'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  allowedForUserId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  dropzoneId: Scalars['Int'];\n  earliestTimestamp?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  dropzoneId: Scalars['Int'];\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type QueryUserCheckPasswordTokenArgs = {\n  resetPasswordToken: Scalars['String'];\n  redirectUrl?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryUserConfirmAccountArgs = {\n  confirmationToken: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  id?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  permission: Permission;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of RevokePermission */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['Int'];\n  dropzone?: Maybe<Dropzone>;\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n  user?: Maybe<User>;\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['Int'];\n};\n\nexport type RigInput = {\n  name?: Maybe<Scalars['String']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  packValue?: Maybe<Scalars['Int']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  maintainedAt?: Maybe<Scalars['Int']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  userId?: Maybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: Maybe<Scalars['String']>;\n  isPublic?: Maybe<Scalars['Boolean']>;\n  canopySize?: Maybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['Int'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type RigInspectionInput = {\n  dropzoneId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  definition?: Maybe<Scalars['String']>;\n  isOk?: Maybe<Scalars['Boolean']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type SellableItemInput = {\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  type: SellableItemTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum SellableItemTypes {\n  Pack = 'pack',\n  TicketType = 'ticketType',\n  Extra = 'extra',\n  Slot = 'slot'\n}\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  user?: Maybe<User>;\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUserId?: Maybe<Scalars['Int']>;\n  ticketTypeId?: Maybe<Scalars['Int']>;\n  jumpTypeId?: Maybe<Scalars['Int']>;\n  loadId?: Maybe<Scalars['Int']>;\n  rigId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n  userGroup?: Maybe<Array<SlotUser>>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type SlotUser = {\n  id: Scalars['Int'];\n  exitWeight: Scalars['Float'];\n  rigId?: Maybe<Scalars['Int']>;\n  passengerName?: Maybe<Scalars['String']>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\nexport type TicketTypeInput = {\n  currency?: Maybe<Scalars['String']>;\n  cost?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n  altitude?: Maybe<Scalars['Int']>;\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  dropzoneId?: Maybe<Scalars['Int']>;\n  isTandem?: Maybe<Scalars['Boolean']>;\n  extraIds?: Maybe<Array<Scalars['Int']>>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['Int'];\n  dropzoneUser: DropzoneUser;\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['Int'];\n};\n\nexport enum TransactionStatus {\n  Reserved = 'reserved',\n  Completed = 'completed',\n  Cancelled = 'cancelled'\n}\n\nexport enum TransactionType {\n  Purchase = 'purchase',\n  Sale = 'sale',\n  Deposit = 'deposit',\n  Withdrawal = 'withdrawal',\n  Refund = 'refund'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  id: Scalars['Int'];\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzone */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateExtra */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  id: Scalars['Int'];\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateLoad */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateNotification */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  id: Scalars['Int'];\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdatePlane */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  permission: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateRole */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  id: Scalars['Int'];\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateSlot */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  id: Scalars['Int'];\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateTicket */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  id?: Maybe<Scalars['Int']>;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UpdateUser */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['Int'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['Int'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federationId: Scalars['Int'];\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  licenseId?: Maybe<Scalars['Int']>;\n};\n\nexport type UserInput = {\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['String']>;\n  apfNumber?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  licenseId?: Maybe<Scalars['Int']>;\n  exitWeight?: Maybe<Scalars['Float']>;\n};\n\n/** Autogenerated return type of UserLogin */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserRegister */\nexport type UserRegisterPayload = {\n  __typename?: 'UserRegisterPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n};\n\n/** Autogenerated return type of UserResendConfirmation */\nexport type UserResendConfirmationPayload = {\n  __typename?: 'UserResendConfirmationPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['Int'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['Int'];\n};\n\n/** Autogenerated return type of UserSendPasswordReset */\nexport type UserSendPasswordResetPayload = {\n  __typename?: 'UserSendPasswordResetPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserSignUp */\nexport type UserSignUpPayload = {\n  __typename?: 'UserSignUpPayload';\n  authenticatable?: Maybe<User>;\n  /** Authentication credentials. Null if after signUp resource is not active for authentication (e.g. Email confirmation required). */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated return type of UserUpdatePassword */\nexport type UserUpdatePasswordPayload = {\n  __typename?: 'UserUpdatePasswordPayload';\n  authenticatable: User;\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n  startDate?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: Maybe<Scalars['String']>;\n  before?: Maybe<Scalars['String']>;\n  first?: Maybe<Scalars['Int']>;\n  last?: Maybe<Scalars['Int']>;\n};\n\nexport type WalletInput = {\n  /** Any model with an account, e.g DropzoneUser or Dropzone */\n  type: WalletableTypes;\n  /** ID of the record */\n  id: Scalars['ID'];\n};\n\nexport enum WalletableTypes {\n  DropzoneUser = 'dropzoneUser',\n  Dropzone = 'dropzone'\n}\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['Int'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['Int'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  winds?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['Int']>;\n  jumpRun?: Maybe<Scalars['Int']>;\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['String']>;\n  dropzoneId: Scalars['Int'];\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser, Transaction, TransactionType } from '../../../api/schema.d';\n\ntype Fields = Pick<Transaction, 'amount' | 'transactionType' | 'message'>;\n\ninterface IDropzoneEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Transaction[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    amount: {\n      value: null,\n      error: null,\n    },\n    transactionType: {\n      value: TransactionType.Deposit,\n      error: null,\n    },\n    message: {\n      value: '',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/credits',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<DropzoneUser | boolean>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from 'app/api/schema.d';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Dropzone } from '../../../api/schema.d';\n\nexport type DropzoneFields = Pick<\n  Dropzone,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'isPublic'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n  | 'requestPublication'\n>;\n\ninterface IDropzoneEditState {\n  original: Dropzone | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: Dropzone[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    isPublic: {\n      value: false,\n      error: null,\n    },\n    requestPublication: {\n      value: false,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (state: IDropzoneEditState, action: PayloadAction<boolean | Dropzone>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as Dropzone)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<Dropzone>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as Dropzone)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ntype Fields = Pick<DropzoneUser, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUser | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUser[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IDropzoneUserEditState, action: PayloadAction<boolean | DropzoneUser>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Extra } from '../../../api/schema.d';\n\nexport type ExtraFields = Pick<Extra, 'name' | 'cost' | 'ticketTypes'>;\ninterface IExtraEditState {\n  original: Extra | null;\n  open: boolean;\n  fields: {\n    [K in keyof ExtraFields]-?: {\n      value: Extra[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IExtraEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    ticketTypes: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/extra',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IExtraEditState, action: PayloadAction<boolean | Extra>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.ticketTypes.value = action.payload.ticketTypes;\n        state.fields.cost.value = action.payload.cost;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: IExtraEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Load } from '../../../api/schema.d';\n\nexport type LoadFields = Pick<\n  Load,\n  'name' | 'gca' | 'dispatchAt' | 'isOpen' | 'loadMaster' | 'pilot' | 'maxSlots' | 'plane'\n>;\n\ninterface ILoadEditState {\n  original: Load | null;\n  open: boolean;\n  fields: {\n    [K in keyof LoadFields]-?: {\n      value: Load[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ILoadEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    gca: {\n      value: null,\n      error: null,\n    },\n    dispatchAt: {\n      value: null,\n      error: null,\n    },\n    isOpen: {\n      value: true,\n      error: null,\n    },\n    loadMaster: {\n      value: null,\n      error: null,\n    },\n    pilot: {\n      value: null,\n      error: null,\n    },\n    plane: {\n      value: null,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/load',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ILoadEditState, action: PayloadAction<boolean | Load>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ILoadEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Federation, User, DropzoneUser } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email' | 'license'> &\n  Pick<DropzoneUser, 'role'>;\n\ninterface IGhostEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (state: IGhostEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (state: IGhostEditState, action: PayloadAction<boolean | User>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Plane } from '../../../api/schema.d';\n\nexport type PlaneFields = Pick<\n  Plane,\n  'name' | 'registration' | 'minSlots' | 'maxSlots' | 'hours' | 'nextMaintenanceHours'\n>;\n\ninterface IPlaneEditState {\n  original: Plane | null;\n  open: boolean;\n  fields: {\n    [K in keyof PlaneFields]-?: {\n      value: Plane[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IPlaneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    registration: {\n      value: '',\n      error: null,\n    },\n    minSlots: {\n      value: 0,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n    hours: {\n      value: null,\n      error: null,\n    },\n    nextMaintenanceHours: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'Plane',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IPlaneEditState, action: PayloadAction<boolean | Plane>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.hours.value = action.payload.hours || 0;\n        state.fields.minSlots.value = action.payload.minSlots || 0;\n        state.fields.maxSlots.value = action.payload.maxSlots || 3;\n        state.fields.name.value = action.payload.name || '';\n        state.fields.registration.value = action.payload.registration || '';\n        state.fields.nextMaintenanceHours.value = action.payload.nextMaintenanceHours || 0;\n      }\n    },\n\n    setOriginal: (state: IPlaneEditState, action: PayloadAction<Plane>) => {\n      state.original = action.payload;\n      state.open = true;\n      state.fields.hours.value = action.payload.hours || 0;\n      state.fields.minSlots.value = action.payload.minSlots || 0;\n      state.fields.maxSlots.value = action.payload.maxSlots || 3;\n      state.fields.name.value = action.payload.name || '';\n      state.fields.registration.value = action.payload.registration || '';\n      state.fields.nextMaintenanceHours.value = action.payload.nextMaintenanceHours || 0;\n    },\n\n    reset: (state: IPlaneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Rig } from '../../../api/schema.d';\n\nexport type RigFields = Pick<\n  Rig,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: Rig | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: Rig[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | Rig>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<Rig>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        console.error('Failed to read rig inspection template', error.message, action.payload);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Slot } from '../../../api/schema.d';\n\nexport type ManifestUserFields = Pick<\n  Slot,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: Slot | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | Slot>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotUser, Slot, DropzoneUser, Rig } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = SlotUser & { rig?: Rig };\n\ninterface IFields extends Pick<Slot, 'jumpType' | 'load' | 'ticketType' | 'extras'> {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (state: ISlotEditState, action: PayloadAction<Slot[]>) => {\n      state.fields.users.value = action.payload.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUser[];\n\n      state.fields.jumpType.value = action.payload.find((i) => i)?.jumpType;\n      state.fields.load.value = action.payload.find((i) => i)?.load || null;\n      state.fields.extras.value = action.payload.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (state: ISlotEditState, action: PayloadAction<DropzoneUser[]>) => {\n      state.fields.users.value = action.payload.map<SlotUser>((dzUser) => ({\n        id: Number(dzUser.id),\n        rigId: Number(dzUser?.availableRigs?.find(({ id }) => id)?.id),\n        exitWeight: Number(dzUser?.user?.exitWeight),\n      })) as SlotUser[];\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = action.payload[typedKey as typeof payloadKey];\n          }\n        });\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketType } from '../../../api/schema.d';\n\nexport type TicketTypeFields = Pick<\n  TicketType,\n  'name' | 'cost' | 'isTandem' | 'allowManifestingSelf' | 'altitude' | 'extras'\n>;\n\ninterface ITicketTypeEditState {\n  original: TicketType | null;\n  open: boolean;\n  fields: {\n    [K in keyof TicketTypeFields]-?: {\n      value: TicketType[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ITicketTypeEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    altitude: {\n      value: 14000,\n      error: null,\n    },\n    allowManifestingSelf: {\n      value: false,\n      error: null,\n    },\n    isTandem: {\n      value: false,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ticketType',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (state: ITicketTypeEditState, action: PayloadAction<TicketType>) => {\n      state.original = action.payload;\n      state.open = true;\n      state.fields.altitude.value = action.payload.altitude || 0;\n      state.fields.cost.value = action.payload.cost || 0;\n      state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n      state.fields.name.value = action.payload.name || '';\n    },\n\n    setOpen: (state: ITicketTypeEditState, action: PayloadAction<boolean | TicketType>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.altitude.value = action.payload.altitude || 0;\n        state.fields.cost.value = action.payload.cost || 0;\n        state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: ITicketTypeEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser, Federation, User } from '../../../api/schema.d';\n\nexport type UserFields = Pick<\n  User,\n  'exitWeight' | 'rigs' | 'name' | 'phone' | 'email' | 'license' | 'apfNumber' | 'nickname'\n>;\n\ninterface IUserEditState {\n  original: User | null;\n  open: boolean;\n  federation: {\n    value: Federation | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: User[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<Federation>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (state: IUserEditState, action: PayloadAction<DropzoneUser>) => {\n      state.original = action.payload.user;\n      state.federation.value =\n        action.payload.license?.federation || action.payload?.dropzone?.federation || null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        state.fields.apfNumber.value = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid;\n      }\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneUser).user[typedKey];\n        }\n      });\n    },\n\n    setOpen: (state: IUserEditState, action: PayloadAction<boolean | DropzoneUser>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload.user;\n        state.open = true;\n        state.federation.value =\n          action.payload.license?.federation || action.payload?.dropzone?.federation || null;\n        if (\n          state.federation.value &&\n          action.payload.user?.userFederations?.find(\n            ({ federation }) => federation.id === state.federation.value?.id\n          )?.uid\n        ) {\n          state.fields.apfNumber.value = action.payload.user?.userFederations?.find(\n            ({ federation }) => federation.id === state.federation.value?.id\n          )?.uid;\n        }\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as DropzoneUser).user[typedKey];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherCondition } from '../../../api/schema.d';\n\ntype Fields = Pick<\n  WeatherCondition,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherCondition | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherCondition>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherCondition)[typedKey];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as credits from './credits/slice';\nimport * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as extra from './extra/slice';\nimport * as load from './load/slice';\nimport * as ghost from './ghost/slice';\nimport * as plane from './plane/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as ticketType from './ticket_type/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  credits: credits.initialState,\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  extra: extra.initialState,\n  ghost: ghost.initialState,\n  load: load.initialState,\n  plane: plane.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  ticketType: ticketType.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  credits: credits.default,\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  extra: extra.default,\n  ghost: ghost.default,\n  load: load.default,\n  plane: plane.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  ticketType: ticketType.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUser } from '../../../api/schema.d';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUser[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (state: IManifestScreenState, action: PayloadAction<DropzoneUser[]>) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserWizardState {\n  skipRigSetup: boolean;\n}\n\nexport const initialState: IUserWizardState = {\n  skipRigSetup: false,\n};\n\nexport default createSlice({\n  name: 'screens/userWizard',\n  initialState,\n  reducers: {\n    skipRigSetup: (state: IUserWizardState, action: PayloadAction<boolean>) => {\n      state.skipRigSetup = action.payload;\n    },\n  },\n});\n","import * as users from './authenticated/users/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './authenticated/dropzone_wizard/slice';\nimport * as userWizard from './authenticated/user_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  userWizard: userWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n  userWizard: userWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport { Credential, User, Dropzone } from '../api/schema';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: User | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: Dropzone | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<User>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<Dropzone | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    toggleDarkMode: (state: IGlobalState) => {\n      state.isDarkMode = !state.isDarkMode;\n      state.theme = state.isDarkMode ? CombinedDarkTheme : CombinedDefaultTheme;\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport isEqual from 'lodash/isEqual';\nimport last from 'lodash/last';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationState {\n  queue: INotification[];\n}\n\nexport const initialState = { queue: [] } as INotificationState;\nexport default createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    hideSnackbar: (state: INotificationState) => {\n      const [, ...newQueue] = state.queue;\n      state.queue = newQueue;\n    },\n    showSnackbar: (state: INotificationState, action: PayloadAction<INotification>) => {\n      if (!isEqual(last(state.queue), action.payload)) {\n        state.queue.push(action.payload);\n      }\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\nimport notificationSlice, {\n  initialState as initialStateNotification,\n} from '../components/notifications/slice';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  notifications: initialStateNotification,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  notifications: notificationSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  notifications: notificationSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport LottieView from '../LottieView';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const dispatch = useAppDispatch();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'New version installed' }));\n    }\n  }, [dispatch]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web') {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport { RetryLink } from '@apollo/client/link/retry';\nimport * as React from 'react';\nimport * as Update from 'expo-updates';\nimport Constants from 'expo-constants';\nimport { Platform } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const httpBatchLink = React.useMemo(() => {\n    console.log('Environment', Constants.manifest?.extra);\n    console.log('Release channel', Update.releaseChannel);\n    const environment =\n      Platform.OS === 'web' ? Constants.manifest?.extra?.environment : Update.releaseChannel;\n    return new BatchHttpLink({\n      batchDebounce: true,\n      batchMax: 10,\n      uri:\n        environment in Constants.manifest?.extra?.urls\n          ? Constants.manifest?.extra?.urls[environment]\n          : Constants.manifest?.extra?.url,\n    });\n  }, []);\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Session expired`,\n              variant: 'error',\n            })\n          );\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`,\n                variant: 'error',\n              })\n            );\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `[Network error]: ${networkError}`,\n              variant: 'error',\n            })\n          );\n        }\n      }),\n    [dispatch]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link: errorLink.concat(authLink).concat(new RetryLink()).concat(httpBatchLink),\n        cache: new InMemoryCache(),\n      }),\n    [authLink, errorLink, httpBatchLink]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import * as React from 'react';\nimport capitalize from 'lodash/capitalize';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport { useAppSelector, useAppDispatch } from '../../state';\nimport LottieView from '../LottieView';\nimport slice from './slice';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\n\nconst { actions } = slice;\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\nconst Notifications = () => {\n  const state = useAppSelector((root) => root.notifications);\n  const dispatch = useAppDispatch();\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(\n    () => (state.queue.length ? state.queue[0] : null),\n    [state.queue]\n  );\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide: () => dispatch(actions.hideSnackbar()),\n        text1: capitalize(notification.variant),\n        text2: notification.message,\n        type: notification.variant || 'success',\n      });\n    }\n  }, [dispatch, notification]);\n\n  return (\n    <>\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            onAnimationFinish={() => {\n              setAnimationState(AnimationState.waiting);\n              setTimeout(() => {\n                dispatch(actions.hideSnackbar());\n                setAnimationState(AnimationState.closed);\n              }, 200);\n            }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast\n        ref={(ref) => Toast.setRef(ref)}\n        autoHide\n        visibilityTime={4000}\n        position=\"bottom\"\n        type=\"success\"\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300,\n  },\n});\nexport default Notifications;\n","import { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nconst options: LinkingOptions = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      confirm: {\n        path: '/confirm',\n      },\n      ChangePasswordScreen: {\n        path: '/change-password',\n      },\n      Authenticated: {\n        screens: {\n          HomeScreen: '/home',\n          LoadScreen: '/load/:load_id',\n          PackingScreen: '/packing',\n          ProfileScreen: '/user/:id',\n          SetupScreen: '/dropzone/setup',\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzonesScreen: '/dropzones',\n          CreateDropzoneScreen: '/dropzone/create',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport default options;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions =  {}\nexport const DropzoneUserProfileFragmentDoc = gql`\n    fragment dropzoneUserProfile on DropzoneUser {\n  id\n  credits\n  expiresAt\n  permissions\n  role {\n    id\n    name\n  }\n  user {\n    id\n    name\n    exitWeight\n    email\n    phone\n    image\n    rigs {\n      id\n      name\n      model\n      make\n      serial\n      canopySize\n      repackExpiresAt\n    }\n    jumpTypes {\n      id\n      name\n    }\n    license {\n      id\n      name\n      federation {\n        id\n        name\n      }\n    }\n  }\n  slots {\n    edges {\n      node {\n        id\n        createdAt\n        load {\n          id\n          name\n          loadNumber\n          dispatchAt\n          createdAt\n        }\n        jumpType {\n          id\n          name\n        }\n        ticketType {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    `;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  lat\n  lng\n  name\n  primaryColor\n  secondaryColor\n  isPublic\n  requestPublication\n  planes {\n    id\n    name\n    registration\n  }\n  ticketTypes {\n    id\n    name\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  currentConditions {\n    id\n    jumpRun\n    temperature\n    offsetDirection\n    offsetMiles\n    winds {\n      altitude\n      speed\n      direction\n    }\n  }\n  loads(earliestTimestamp: $earliestTimestamp) {\n    edges {\n      node {\n        id\n        name\n        loadNumber\n        isOpen\n        maxSlots\n        state\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    id\n    name\n  }\n}\n    `;\nexport const UserEssentialsFragmentDoc = gql`\n    fragment userEssentials on User {\n  id\n  name\n  nickname\n  phone\n  email\n  exitWeight\n  moderationRole\n}\n    `;\nexport const TransactionEssentialsFragmentDoc = gql`\n    fragment transactionEssentials on Transaction {\n  id\n  transactionType\n  amount\n  status\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const OrderEssentialsFragmentDoc = gql`\n    fragment orderEssentials on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  createdAt\n  buyer {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    id\n    amountCents\n    createdAt\n    updatedAt\n    transactions {\n      ...transactionEssentials\n    }\n  }\n}\n    ${TransactionEssentialsFragmentDoc}`;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  user {\n    ...userEssentials\n  }\n  rigInspections {\n    id\n    isOk\n    inspectedBy {\n      id\n      user {\n        id\n        name\n      }\n    }\n    rig {\n      id\n    }\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  availableRigs {\n    name\n    id\n    make\n    model\n    canopySize\n    serial\n    user {\n      id\n    }\n  }\n  license {\n    id\n    name\n  }\n  user {\n    id\n    name\n    exitWeight\n    email\n    phone\n    pushToken\n    image\n    rigs {\n      id\n      name\n      model\n      make\n      serial\n      canopySize\n      repackExpiresAt\n      packingCard\n      user {\n        id\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n    license {\n      id\n      name\n    }\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}\n${UserEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const SlotFragmentDoc = gql`\n    fragment slot on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  dropzoneUser {\n    id\n    role {\n      id\n      name\n    }\n    user {\n      id\n      name\n      nickname\n      exitWeight\n      image\n      license {\n        id\n        name\n      }\n    }\n  }\n  ticketType {\n    id\n    name\n    altitude\n    isTandem\n    extras {\n      id\n      name\n      cost\n    }\n  }\n  jumpType {\n    id\n    name\n  }\n  extras {\n    id\n    name\n  }\n}\n    `;\nexport const LoadFragmentDoc = gql`\n    fragment load on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n  plane {\n    id\n    maxSlots\n    name\n  }\n  gca {\n    id\n    user {\n      id\n      name\n    }\n  }\n  pilot {\n    id\n    user {\n      id\n      name\n    }\n  }\n  loadMaster {\n    id\n    user {\n      id\n      name\n    }\n  }\n  slots {\n    ...slot\n  }\n}\n    ${SlotFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n}\n    `;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  user {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: WalletInput!, $seller: WalletInput!, $dropzoneId: Int!, $title: String, $amount: Int!) {\n  createOrder(\n    input: {attributes: {dropzoneId: $dropzoneId, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...orderEssentials\n    }\n  }\n}\n    ${OrderEssentialsFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzoneId: // value for 'dropzoneId'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...load\n    }\n  }\n}\n    ${LoadFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federationId: Int!, $uid: String, $licenseId: Int) {\n  joinFederation(\n    input: {attributes: {federationId: $federationId, uid: $uid, licenseId: $licenseId}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federationId: // value for 'federationId'\n *      uid: // value for 'uid'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const RecoverPasswordDocument = gql`\n    mutation RecoverPassword($email: String!, $redirectUrl: String!) {\n  userSendPasswordReset(email: $email, redirectUrl: $redirectUrl) {\n    message\n  }\n}\n    `;\nexport type RecoverPasswordMutationFn = Apollo.MutationFunction<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\n\n/**\n * __useRecoverPasswordMutation__\n *\n * To run a mutation, you first call `useRecoverPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRecoverPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [recoverPasswordMutation, { data, loading, error }] = useRecoverPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      redirectUrl: // value for 'redirectUrl'\n *   },\n * });\n */\nexport function useRecoverPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>(RecoverPasswordDocument, options);\n      }\nexport type RecoverPasswordMutationHookResult = ReturnType<typeof useRecoverPasswordMutation>;\nexport type RecoverPasswordMutationResult = Apollo.MutationResult<Operation.RecoverPasswordMutation>;\nexport type RecoverPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation UpdateLostPassword($password: String!, $passwordConfirmation: String!, $token: String!) {\n  userUpdatePasswordWithToken(\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    resetPasswordToken: $token\n  ) {\n    authenticatable {\n      ...userEssentials\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    ${UserEssentialsFragmentDoc}`;\nexport type UpdateLostPasswordMutationFn = Apollo.MutationFunction<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, options);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = Apollo.MutationResult<Operation.UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userSignUp(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const QueryDropzoneDocument = gql`\n    query QueryDropzone($dropzoneId: Int!, $earliestTimestamp: Int) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useQueryDropzone__\n *\n * To run a query within a React component, call `useQueryDropzone` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzone` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzone({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      earliestTimestamp: // value for 'earliestTimestamp'\n *   },\n * });\n */\nexport function useQueryDropzone(baseOptions: Apollo.QueryHookOptions<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>(QueryDropzoneDocument, options);\n      }\nexport function useQueryDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>(QueryDropzoneDocument, options);\n        }\nexport type QueryDropzoneHookResult = ReturnType<typeof useQueryDropzone>;\nexport type QueryDropzoneLazyQueryHookResult = ReturnType<typeof useQueryDropzoneLazyQuery>;\nexport type QueryDropzoneQueryResult = Apollo.QueryResult<Operation.QueryDropzoneQuery, Operation.QueryDropzoneQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: Int!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const QueryDropzoneUserProfileDocument = gql`\n    query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    dropzoneUser(id: $dropzoneUserId) {\n      ...dropzoneUserProfile\n    }\n  }\n}\n    ${DropzoneUserProfileFragmentDoc}`;\n\n/**\n * __useQueryDropzoneUserProfile__\n *\n * To run a query within a React component, call `useQueryDropzoneUserProfile` and pass it any options that fit your needs.\n * When your component renders, `useQueryDropzoneUserProfile` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useQueryDropzoneUserProfile({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useQueryDropzoneUserProfile(baseOptions: Apollo.QueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n      }\nexport function useQueryDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>(QueryDropzoneUserProfileDocument, options);\n        }\nexport type QueryDropzoneUserProfileHookResult = ReturnType<typeof useQueryDropzoneUserProfile>;\nexport type QueryDropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useQueryDropzoneUserProfileLazyQuery>;\nexport type QueryDropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.QueryDropzoneUserProfileQuery, Operation.QueryDropzoneUserProfileQueryVariables>;\nexport const AddressToLocationDocument = gql`\n    query AddressToLocation($search: String!) {\n  geocode(search: $search) {\n    formattedString\n    id\n    lat\n    lng\n  }\n}\n    `;\n\n/**\n * __useAddressToLocationQuery__\n *\n * To run a query within a React component, call `useAddressToLocationQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressToLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressToLocationQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useAddressToLocationQuery(baseOptions: Apollo.QueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n      }\nexport function useAddressToLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n        }\nexport type AddressToLocationQueryHookResult = ReturnType<typeof useAddressToLocationQuery>;\nexport type AddressToLocationLazyQueryHookResult = ReturnType<typeof useAddressToLocationLazyQuery>;\nexport type AddressToLocationQueryResult = Apollo.QueryResult<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: Int!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        id\n        name\n      }\n      permissions\n    }\n  }\n}\n    `;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport { FieldError, Mutation } from './schema';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern: new RegExp(\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    ),\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  }\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: Mutation) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        onFieldError?.(`${fieldName}`, message);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          onError?.(err.message);\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { MutationUpdateUserArgs, UpdateUserPayload } from '../schema';\n\nconst MUTATION_UPDATE_USER = gql`\n  mutation UpdateUser(\n    $id: Int\n    $name: String\n    $phone: String\n    $email: String\n    $pushToken: String\n    $nickname: String\n    $licenseId: Int\n    $exitWeight: Float\n  ) {\n    updateUser(\n      input: {\n        id: $id\n        attributes: {\n          pushToken: $pushToken\n          name: $name\n          phone: $phone\n          email: $email\n          nickname: $nickname\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        pushToken\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        userFederations {\n          id\n          license {\n            id\n            name\n          }\n          federation {\n            id\n            name\n            slug\n          }\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateUserArgs['input']['attributes'],\n  UpdateUserPayload\n>(MUTATION_UPDATE_USER, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    phone: [isRequired('Phone number is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport { QueryDropzoneDocument } from '../reflection';\nimport useMutationUpdateUser from './useMutationUpdateUser';\n\nexport default function useCurrentDropzone() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n\n  const currentDropzone = useQuery<Query>(QueryDropzoneDocument, {\n    variables: {\n      dropzoneId,\n      earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: () => null,\n  });\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const userId = currentDropzone?.data?.dropzone?.currentUser?.user?.id;\n    const remoteToken = currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken;\n    const localToken = pushToken;\n\n    if (!currentDropzone.loading && currentDropzone.called) {\n      if (localToken && localToken !== remoteToken && userId) {\n        mutationUpdateUser.mutate({\n          id: Number(userId),\n          pushToken: localToken,\n        });\n      }\n    }\n  }, [\n    pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.pushToken,\n    currentDropzone?.data?.dropzone?.currentUser?.user?.id,\n    currentDropzone.loading,\n    currentDropzone.called,\n    mutationUpdateUser,\n  ]);\n\n  return {\n    ...currentDropzone,\n    dropzone: currentDropzone?.data?.dropzone,\n    currentUser: currentDropzone?.data?.dropzone?.currentUser,\n  };\n}\n","import * as React from 'react';\nimport { Permission } from '../api/schema.d';\nimport { useCurrentUserPermissionsLazyQuery } from '../api/reflection';\nimport { useAppSelector } from '../state';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [execute, { data }] = useCurrentUserPermissionsLazyQuery({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      execute({\n        variables: {\n          dropzoneId: Number(currentDropzoneId),\n        },\n      });\n    }\n  }, [currentDropzoneId, execute]);\n\n  const permissions = data?.dropzone?.currentUser?.permissions || [];\n  return permissions?.includes(permission as Permission) || false;\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: DropzoneUser): void;\n}\n\nexport const QUERY_PERMISSION_USER = gql`\n  query QueryGCAUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PERMISSION_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: ['actAsGCA'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No gca'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"radio-handheld\"\n          selectedColor={color}\n          onPress={() => setMenuOpen(true)}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n        >\n          {value?.id ? value?.user?.name : 'No gca'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`gca-chip-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge?.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Slot, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\n\ninterface ILoadMasterChipSelect {\n  value?: DropzoneUser | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: Slot[];\n  onSelect(user: DropzoneUser): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"shield-account\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No loadmaster'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-account\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No loadmaster'}\n        </Chip>\n      }\n    >\n      {slots?.map((slot) => (\n        <Menu.Item\n          key={`lm-chip-${slot.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (slot?.dropzoneUser) {\n              onSelect(slot.dropzoneUser);\n            }\n          }}\n          title={slot?.dropzoneUser?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Query, DropzoneUser, Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: DropzoneUser | null;\n  onSelect(user: DropzoneUser): void;\n}\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryPilotUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n      permissions: ['actAsPilot'],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"radio-handheld\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n        borderColor: color || undefined,\n      }}\n      textStyle={{ color, fontSize: small ? 12 : undefined }}\n    >\n      {value?.user?.name || 'No pilot'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"shield-airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => setMenuOpen(true)}\n        >\n          {value?.id ? value?.user?.name : 'No pilot'}\n        </Chip>\n      }\n    >\n      {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n        <Menu.Item\n          key={`pilot-select-${edge?.node?.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            if (edge?.node) {\n              onSelect(edge.node);\n            }\n          }}\n          title={edge?.node?.user?.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Chip, Menu, useTheme } from 'react-native-paper';\nimport { Plane, Permission, Query } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IPlaneChipSelect {\n  value?: Plane | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QueryChipPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  return !allowed ? (\n    <Chip\n      mode=\"outlined\"\n      icon=\"airplane-takeoff\"\n      selectedColor={color}\n      style={{\n        marginHorizontal: 4,\n        backgroundColor,\n        height: small ? 25 : undefined,\n        alignItems: 'center',\n      }}\n      textStyle={{\n        color,\n        fontSize: small ? 12 : undefined,\n      }}\n    >\n      {value?.name || 'No plane'}\n    </Chip>\n  ) : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"airplane\"\n          selectedColor={color}\n          style={{\n            marginHorizontal: 4,\n            backgroundColor,\n            height: small ? 25 : undefined,\n            alignItems: 'center',\n            borderColor: color || undefined,\n          }}\n          textStyle={{ color, fontSize: small ? 12 : undefined }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {value?.name || 'No plane'}\n        </Chip>\n      }\n    >\n      {data?.planes?.map((plane) => (\n        <Menu.Item\n          key={`lm-plane-chip-${plane.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(plane as Plane);\n          }}\n          title={plane.name}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { TextInput, useTheme } from 'react-native-paper';\n\ninterface INumberFieldProps {\n  error?: boolean;\n  label?: string;\n  value?: number | null;\n  onChangeText(newValue: number): void;\n}\nexport default function NumberField(props: INumberFieldProps) {\n  const { onChangeText: onChangeValue, ...rest } = props;\n  const { value } = rest;\n  const theme = useTheme();\n\n  const onChangeText = React.useCallback(\n    (text: string) => {\n      if (/\\d/.test(text)) {\n        const [numbers] = text.match(/^\\-?\\d+/) || ['0'];\n        onChangeValue(Number(numbers));\n      }\n    },\n    [onChangeValue]\n  );\n  return (\n    <TextInput\n      {...rest}\n      {...{ onChangeText }}\n      value={`${value || 0}`}\n      mode=\"outlined\"\n      keyboardType=\"number-pad\"\n      right={\n        <TextInput.Affix\n          textStyle={{\n            height: '100%',\n          }}\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          text={\n            <View style={styles.chevrons}>\n              <TouchableOpacity\n                style={[\n                  styles.affixTopChevron,\n                  { borderColor: theme.colors.text, backgroundColor: theme.colors.surface },\n                ]}\n                onPress={() => onChangeValue?.((value || 0) + 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-up\" size={24} />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.affixBottomChevron, { backgroundColor: theme.colors.surface }]}\n                onPress={() => onChangeValue?.((value || 0) - 1)}\n              >\n                <MaterialCommunityIcons name=\"chevron-down\" size={24} />\n              </TouchableOpacity>\n            </View>\n          }\n        />\n      }\n      caretHidden={false}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  affixBottomChevron: {\n    width: 48,\n    height: 54 / 2,\n    alignItems: 'center',\n    borderLeftWidth: StyleSheet.hairlineWidth,\n  },\n  affixTopChevron: {\n    width: 48,\n    height: 54 / 2,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderLeftWidth: StyleSheet.hairlineWidth,\n    alignItems: 'center',\n  },\n  chevrons: {\n    width: 48,\n    height: 59,\n    paddingTop: 4,\n    marginRight: -10,\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  },\n});\n","import { DocumentNode, useQuery } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport { Query } from './schema';\nimport { actions, useAppDispatch } from '../state';\n\nexport interface IAppQuery<Payload, InputType> {\n  data: Maybe<Payload>;\n  loading: boolean;\n  refetch(variables?: InputType): void;\n}\n\nexport interface IAppQueryProps<InputType> {\n  onError?(message: string): void;\n  pollInterval?: number;\n  showSnackbarErrors?: boolean;\n  variables?: InputType;\n}\n\nexport function createQuery<\n  Payload extends Maybe<Record<string, unknown>>,\n  InputType extends object\n>(\n  query: DocumentNode,\n  options: {\n    getPayload(query?: Query): Maybe<Payload>;\n  }\n) {\n  const { getPayload } = options;\n\n  return function useAppQuery(opts: IAppQueryProps<InputType>): IAppQuery<Payload, InputType> {\n    const { variables, pollInterval, onError } = opts;\n    const dispatch = useAppDispatch();\n\n    const { data, loading, refetch, error } = useQuery(query, {\n      variables,\n      pollInterval,\n    });\n\n    const transformedData = React.useMemo(() => getPayload(data), [data]);\n\n    React.useEffect(() => {\n      if (error?.message) {\n        if (opts.showSnackbarErrors !== false) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n\n        onError?.(error.message);\n      }\n    }, [opts.onError, error?.message, opts.showSnackbarErrors, onError, dispatch]);\n\n    return {\n      loading,\n      data: transformedData,\n      refetch,\n    };\n  };\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Chip } from 'react-native-paper';\n\ninterface IChipSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  icon?: string;\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction ChipSelect<T extends Record<string, unknown> | string>(props: IChipSelect<T>) {\n  const {\n    items,\n    selected,\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChangeSelected,\n    autoSelectFirst,\n  } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n      {items.map((item) => (\n        <Chip\n          key={JSON.stringify(item)}\n          mode=\"outlined\"\n          icon={!selected.some((value) => isEqual(item, value)) && icon ? icon : undefined}\n          style={{ margin: 1 }}\n          disabled={isDisabled?.(item) || false}\n          selected={isSelected ? isSelected(item) : selected.some((value) => isEqual(item, value))}\n          onPress={() =>\n            onChangeSelected(\n              selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n            )\n          }\n        >\n          {renderItemLabel(item)}\n        </Chip>\n      ))}\n    </View>\n  );\n}\n\nexport default React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof ChipSelect;\n","import * as React from 'react';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpType | null;\n  userId?: number | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: JumpType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  { jumpTypes: JumpType[]; allowedJumpTypes: JumpType[] },\n  {\n    dropzoneId: number;\n    userIds: number[];\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypes({\n    variables: {\n      userIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: Number(currentDropzoneId),\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={\n          uniqBy([...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])], ({ id }) => id) ||\n          []\n        }\n        selected={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { TicketType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketType | null;\n  onlyPublicTickets?: boolean;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: TicketType): void;\n}\n\nexport const QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES = gql`\n  query DropzoneUsersAllowedTicketTypes($dropzoneId: Int!, $onlyPublicTickets: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      ticketTypes(isPublic: $onlyPublicTickets) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst useTicketTypes = createQuery<\n  { ticketTypes: TicketType[] },\n  {\n    dropzoneId: number;\n    onlyPublicTickets?: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_TICKET_TYPES, {\n  getPayload: (query) => ({\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n  }),\n});\n\nexport default function TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onSelect, onlyPublicTickets } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useTicketTypes({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={data?.ticketTypes || []}\n        selected={[value].filter(Boolean) as TicketType[]}\n        renderItemLabel={(ticketType) => ticketType?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useLazyQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Rig, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRigSelect {\n  dropzoneId?: number;\n  userId?: number;\n  value?: Rig | null;\n  tandem?: boolean;\n  autoSelectFirst?: boolean;\n  onSelect(rig: Rig): void;\n}\n\nfunction RigTitle(props: { rig: Rig }): JSX.Element {\n  const theme = useTheme();\n  const { rig } = props;\n  const name = rig?.name || `${rig?.make} ${rig?.model}`;\n\n  return (\n    <>\n      <Text>{`${name} (${rig?.canopySize} sqft)`}</Text>\n      {!rig.user ? (\n        <View\n          style={{\n            padding: 2,\n            paddingHorizontal: 4,\n            backgroundColor: theme.colors.accent,\n            borderRadius: 16,\n          }}\n        >\n          <Text style={{ fontSize: 10, color: 'white' }}>Dropzone rig</Text>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nconst QUERY_RIGS = gql`\n  query QueryAvailableRigs($dropzoneId: Int!, $userId: Int!, $isTandem: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n      dropzoneUser(userId: $userId) {\n        id\n        availableRigs(isTandem: $isTandem) {\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigSelect(props: IRigSelect) {\n  const { userId, value, autoSelectFirst, onSelect, dropzoneId, tandem } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const [fetchRigs, { data }] = useLazyQuery<Query>(QUERY_RIGS, {\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (userId && dropzoneId) {\n      fetchRigs({\n        variables: {\n          dropzoneId: currentDropzoneId,\n          userId: Number(userId),\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [userId, dropzoneId, fetchRigs, currentDropzoneId, tandem]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.dropzone?.dropzoneUser?.availableRigs?.length) {\n      onSelect(data.dropzone.dropzoneUser.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.dropzone.dropzoneUser?.availableRigs, onSelect, value]);\n\n  return (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <TextInput\n          onTouchEnd={() => setMenuOpen(true)}\n          label=\"Select rig\"\n          value={\n            value\n              ? `${value?.name || `${value?.make} ${value?.model}`} (${value?.canopySize} sqft)`\n              : undefined\n          }\n          left={() => <List.Icon icon=\"parachute\" />}\n          editable={false}\n          mode=\"outlined\"\n        />\n      }\n    >\n      {data?.dropzone?.dropzoneUser?.availableRigs?.map((rig) => (\n        <Menu.Item\n          key={`rig-select-${rig.id}`}\n          onPress={() => {\n            setMenuOpen(false);\n            onSelect(rig);\n          }}\n          style={{ width: '100%' }}\n          title={<RigTitle rig={rig} />}\n        />\n      ))}\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { TextInput, HelperText, Divider, Chip, List } from 'react-native-paper';\nimport NumberField from '../../input/number_input/NumberField';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Permission } from '../../../api/schema.d';\nimport JumpTypeChipSelect from '../../input/chip_select/JumpTypeChipSelect';\nimport TicketTypeChipSelect from '../../input/chip_select/TicketTypeChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function ManifestForm() {\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.manifest);\n  React.useEffect(() => {\n    if (state.fields.dropzoneUser?.value) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.manifest.setField([\n            'exitWeight',\n            Number(state.fields.dropzoneUser?.value?.user?.exitWeight || 60),\n          ])\n        );\n      }\n\n      if (!state.fields.rig.value && state.fields.dropzoneUser.value.user?.rigs?.length) {\n        dispatch(\n          actions.forms.manifest.setField(['rig', state.fields.dropzoneUser?.value?.user.rigs[0]])\n        );\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.dropzoneUser.value,\n    state.fields.dropzoneUser.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.rig.value,\n  ]);\n\n  const isEdit = state?.original?.id;\n\n  const allowedToManifestOthers = useRestriction(\n    isEdit ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n\n  return (\n    <>\n      <JumpTypeChipSelect\n        value={state.fields.jumpType.value}\n        userId={Number(state?.fields?.dropzoneUser?.value?.id) || null}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['jumpType', value]))}\n      />\n      <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n        {state.fields.jumpType.error || ''}\n      </HelperText>\n\n      <TicketTypeChipSelect\n        value={state.fields.ticketType.value}\n        onlyPublicTickets={!allowedToManifestOthers}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['ticketType', value]))}\n      />\n      <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n        {state.fields.ticketType.error || ''}\n      </HelperText>\n\n      {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n        <List.Subheader>Ticket addons</List.Subheader>\n      )}\n      <ScrollView horizontal style={styles.ticketAddons}>\n        {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n          <Chip\n            selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n            onPress={\n              state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                ? () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                      ])\n                    )\n                : () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        [...(state?.fields?.extras?.value || []), extra],\n                      ])\n                    )\n            }\n          >\n            {`${extra.name} ($${extra.cost})`}\n          </Chip>\n        ))}\n      </ScrollView>\n      <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n        {state.fields.extras.error || ''}\n      </HelperText>\n      <Divider />\n      {!state.fields.dropzoneUser ? null : (\n        <RigSelect\n          value={state.fields.rig.value}\n          userId={Number(state.fields.dropzoneUser?.value?.user?.id)}\n          dropzoneId={Number(currentDropzone?.dropzone?.id)}\n          onSelect={(value) => dispatch(actions.forms.manifest.setField(['rig', value]))}\n        />\n      )}\n      <HelperText type={state.fields.rig.error ? 'error' : 'info'}>\n        {state.fields.rig.error || ''}\n      </HelperText>\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.manifest.setField(['exitWeight', Number(newValue)]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      {!state.fields.ticketType.value?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger name\"\n            error={!!state.fields.passengerName.error}\n            value={state.fields.passengerName?.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerName', newValue]))\n            }\n          />\n\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Passenger exit weight\"\n            error={!!state.fields.passengerExitWeight.error}\n            value={state.fields.passengerExitWeight.value?.toString() || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerExitWeight', Number(newValue)]))\n            }\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotForm from '../../forms/manifest/ManifestForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOT = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $rigId: Int\n    $ticketTypeId: Int\n    $dropzoneUserId: Int\n    $exitWeight: Float\n    $passengerName: String\n    $passengerExitWeight: Float\n  ) {\n    createSlot(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          rigId: $rigId\n          ticketTypeId: $ticketTypeId\n          dropzoneUserId: $dropzoneUserId\n          exitWeight: $exitWeight\n          passengerExitWeight: $passengerExitWeight\n          passengerName: $passengerName\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      slot {\n        id\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n        exitWeight\n        load {\n          id\n          name\n          createdAt\n          dispatchAt\n          hasLanded\n          maxSlots\n          isFull\n          isOpen\n          plane {\n            id\n            name\n          }\n          gca {\n            id\n            user {\n              id\n              name\n            }\n          }\n          pilot {\n            id\n            user {\n              id\n              name\n            }\n          }\n          loadMaster {\n            id\n            user {\n              id\n              name\n            }\n          }\n          slots {\n            id\n            createdAt\n            user {\n              id\n              name\n            }\n            passengerName\n            passengerExitWeight\n            ticketType {\n              id\n              name\n              isTandem\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { onSuccess, open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlot, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOT);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlot({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          rigId: !state.fields.rig.value?.id ? null : Number(state.fields.rig.value?.id),\n          ticketTypeId: Number(state.fields.ticketType?.value?.id),\n          dropzoneUserId: Number(state.fields.dropzoneUser?.value?.id),\n          exitWeight: state.fields.exitWeight.value,\n          ...(!state.fields.ticketType.value?.isTandem\n            ? {}\n            : {\n                passengerName: state.fields.passengerName?.value,\n                passengerExitWeight: state.fields.passengerExitWeight?.value,\n              }),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifest.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifest.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifest.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifest.setFieldError(['ticketType', message]));\n          case 'rig':\n            return dispatch(actions.forms.manifest.setFieldError(['rig', message]));\n          case 'dropzone_user':\n            return dispatch(actions.forms.manifest.setFieldError(['dropzoneUser', message]));\n          case 'exit_weight':\n            return dispatch(actions.forms.manifest.setFieldError(['exitWeight', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlot?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlot?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlot?.fieldErrors?.length) {\n        onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlot,\n    onSuccess,\n    state.fields.dropzoneUser?.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.passengerExitWeight?.value,\n    state.fields.passengerName?.value,\n    state.fields.rig.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.ticketType.value?.isTandem,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} style={{ maxWidth: 500, alignSelf: 'center' }}>\n        <ProgressBar\n          indeterminate\n          visible={mutationData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>\n          {/* eslint-disable-next-line max-len */}\n          {`Manifest ${state?.fields?.dropzoneUser?.value?.user?.name} on ${state.fields.load?.value?.name}`}\n        </Dialog.Title>\n        <Dialog.ScrollArea>\n          <ScrollView>\n            <SlotForm />\n          </ScrollView>\n        </Dialog.ScrollArea>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.manifest.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          <Button onPress={onManifest}>Manifest</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Card,\n  TextInput,\n  ProgressBar,\n  Chip,\n  Divider,\n  List,\n  Button,\n} from 'react-native-paper';\nimport { createQuery } from '../../../api/createQuery';\nimport { DropzoneUser, Query, Rig } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport calculateWingLoading from '../../../utils/calculateWingLoading';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: number;\n  dropzoneId: number;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: Rig;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: Rig): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nconst QUERY_DROPZONE_USERS_MANIFEST_DETAILS = gql`\n  query QueryDropzoneUsersManifestDetails($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          license {\n            id\n            name\n          }\n          rigs {\n            id\n            name\n            make\n            model\n            canopySize\n          }\n        }\n        role {\n          id\n          name\n        }\n        user {\n          id\n          name\n          image\n        }\n      }\n    }\n  }\n`;\nconst useQueryDropzoneUsersDetails = createQuery<\n  Query['dropzone']['dropzoneUser'],\n  {\n    dropzoneId: number;\n    dropzoneUserId: number;\n  }\n>(QUERY_DROPZONE_USERS_MANIFEST_DETAILS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUser as DropzoneUser | null,\n});\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneId,\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { data, loading } = useQueryDropzoneUsersDetails({\n    variables: {\n      dropzoneUserId,\n      dropzoneId,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && data?.user?.exitWeight) {\n      onChangeExitWeight(Number(data.user.exitWeight));\n    }\n  }, [data?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={3}>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <Card.Title\n        title={data?.user.name}\n        left={() =>\n          data?.user?.image ? (\n            <Avatar.Image source={{ uri: data.user.image }} size={24} />\n          ) : (\n            <Avatar.Icon icon=\"account\" size={24} />\n          )\n        }\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"lock\" mode=\"outlined\" disabled>\n            {data?.role?.name}\n          </Chip>\n          <Chip style={{ marginHorizontal: 1 }} icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {data?.license?.name}\n          </Chip>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip style={{ marginHorizontal: 1 }} icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n        </ScrollView>\n        <View style={styles.row}>\n          <View style={styles.rowFirst}>\n            <RigSelect\n              userId={dropzoneUserId}\n              dropzoneId={dropzoneId}\n              onSelect={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n            />\n          </View>\n          <View style={styles.rowLast}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              onChangeText={(num) => onChangeExitWeight(num)}\n              label=\"Exit weight (kg)\"\n            />\n          </View>\n        </View>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                  mode=\"outlined\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChangeText={(num) => onChangePassengerWeight?.(num)}\n                  label=\"Exit weight (kg)\"\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { HelperText, Divider, Chip, List, Card } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useRestriction from '../../../hooks/useRestriction';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport { createQuery } from '../../../api/createQuery';\nimport { JumpType, Permission, TicketType } from '../../../api/schema.d';\n\nimport UserRigCard from './UserRigCard';\n\nconst QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES = gql`\n  query DropzoneUsersAllowedJumpTypes($dropzoneId: Int!, $userIds: [Int!]!, $isPublic: Boolean) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      allowedJumpTypes(userId: $userIds) {\n        id\n        name\n      }\n\n      ticketTypes(isPublic: $isPublic) {\n        id\n        name\n        cost\n        isTandem\n\n        extras {\n          id\n          cost\n          name\n        }\n      }\n    }\n    jumpTypes {\n      id\n      name\n    }\n  }\n`;\n\nconst useAllowedJumpTypes = createQuery<\n  {\n    jumpTypes: JumpType[];\n    allowedJumpTypes: JumpType[];\n    ticketTypes: TicketType[];\n  },\n  {\n    dropzoneId: number;\n    userIds: number[];\n    isPublic: boolean | null;\n  }\n>(QUERY_DROPZONE_USERS_ALLOWED_JUMP_TYPES, {\n  getPayload: (query) => ({\n    allowedJumpTypes: query?.dropzone?.allowedJumpTypes || [],\n    ticketTypes: query?.dropzone?.ticketTypes || [],\n    jumpTypes: query?.jumpTypes || [],\n  }),\n});\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypes({\n    variables: {\n      userIds: state.fields.users?.value?.map((slotUser) => slotUser.id) as number[],\n      dropzoneId: globalState.currentDropzoneId as number,\n      isPublic: canManifestOthers ? null : true,\n    },\n    onError: console.error,\n  });\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  return (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <Card elevation={2} style={{ marginBottom: 16, flexShrink: 1, marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={\n              uniqBy(\n                [...(data?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n                ({ id }) => id\n              ) || []\n            }\n            selected={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n            renderItemLabel={(jumpType: JumpType) => jumpType.name}\n            isDisabled={(jumpType: JumpType) =>\n              !data?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n            }\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['jumpType', first as JumpType]))\n            }\n          />\n\n          <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n            {state.fields.jumpType.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n\n      <List.Subheader>Ticket</List.Subheader>\n      <Card elevation={2} style={{ marginHorizontal: 16 }}>\n        <Card.Content>\n          <ChipSelect\n            autoSelectFirst\n            items={data?.ticketTypes || []}\n            selected={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n            renderItemLabel={(ticketType: TicketType) => ticketType.name}\n            onChangeSelected={([first]) =>\n              dispatch(actions.forms.manifestGroup.setField(['ticketType', first as TicketType]))\n            }\n          />\n          <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n            {state.fields.ticketType.error || ''}\n          </HelperText>\n\n          {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n            <List.Subheader>Ticket addons</List.Subheader>\n          )}\n          <ScrollView horizontal style={styles.ticketAddons}>\n            {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n              <Chip\n                selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n                onPress={\n                  state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                    ? () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                          ])\n                        )\n                    : () =>\n                        dispatch(\n                          actions.forms.manifestGroup.setField([\n                            'extras',\n                            [...(state?.fields?.extras?.value || []), extra],\n                          ])\n                        )\n                }\n              >\n                {`${extra.name} ($${extra.cost})`}\n              </Chip>\n            ))}\n          </ScrollView>\n          <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n            {state.fields.extras.error || ''}\n          </HelperText>\n        </Card.Content>\n      </Card>\n      <Divider />\n\n      <List.Subheader>Group</List.Subheader>\n      {state.fields?.users?.value?.map((slotUser) => (\n        <UserRigCard\n          dropzoneId={globalState.currentDropzoneId as number}\n          dropzoneUserId={Number(slotUser.id)}\n          selectedRig={slotUser.rig || undefined}\n          exitWeight={slotUser.exitWeight}\n          onChangeExitWeight={(exitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n                ),\n              ])\n            )\n          }\n          onRemove={() =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n              ])\n            )\n          }\n          onChangeRig={(newRig) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id\n                    ? { ...slotUser, rigId: Number(newRig.id), rig: newRig }\n                    : user\n                ),\n              ])\n            )\n          }\n          {...{ isTandem }}\n          passengerName={slotUser.passengerName}\n          passengerWeight={slotUser.passengerExitWeight}\n          onChangePassengerName={(passengerName) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerName } : user\n                ),\n              ])\n            )\n          }\n          onChangePassengerWeight={(passengerExitWeight) =>\n            dispatch(\n              actions.forms.manifestGroup.setField([\n                'users',\n                state.fields.users.value?.map((user) =>\n                  user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n                ),\n              ])\n            )\n          }\n        />\n      ))}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Paragraph, Title } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle }: INoResults) {\n  return (\n    <View style={styles.empty}>\n      <Title style={{ color }}>{title}</Title>\n      <Paragraph style={{ color, textAlign: 'center' }}>{subtitle}</Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Button, Checkbox, Divider, List, Searchbar } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport NoResults from '../../NoResults';\nimport { DropzoneUser, Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n              exitWeight\n            }\n\n            availableRigs {\n              id\n              name\n              make\n              model\n              canopySize\n              serial\n\n              user {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IUserListSelect {\n  onNext(): void;\n}\n\nexport default function UserListSelect(props: IUserListSelect) {\n  const { screens } = useAppSelector((root) => root);\n  const dispatch = useAppDispatch();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      search: searchText,\n    },\n  });\n\n  const { currentUser } = useCurrentDropzone();\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  return (\n    <>\n      <Searchbar value={searchText} onChangeText={setSearchText} placeholder=\"Search skydivers\" />\n      <View style={{ height: 380 }}>\n        <ScrollView contentContainerStyle={{ paddingTop: 16 }}>\n          {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n            <NoResults title=\"No users\" subtitle=\"\" />\n          )}\n\n          {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n            <React.Fragment key={`user-${edge?.node?.id || 0}`}>\n              <List.Item\n                style={{ width: '100%' }}\n                key={`user-${edge?.node?.id}`}\n                title={edge?.node?.user.name}\n                description={edge?.node?.role?.name}\n                left={() =>\n                  !edge?.node?.user?.image ? (\n                    <List.Icon icon=\"account\" />\n                  ) : (\n                    <Avatar.Image\n                      source={{ uri: edge?.node?.user.image }}\n                      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                      size={32}\n                    />\n                  )\n                }\n                right={() => (\n                  <Checkbox\n                    status={\n                      screens.manifest.selectedUsers\n                        ?.map<string>(({ id }) => id)\n                        .includes(edge?.node?.id as string)\n                        ? 'checked'\n                        : 'unchecked'\n                    }\n                  />\n                )}\n                disabled={\n                  // Dont allow removing current user if the user\n                  // can only manifest a group with themselves in it\n                  edge?.node?.user.id === currentUser?.id &&\n                  canManifestGroupWithSelfOnly &&\n                  !canManifestGroup\n                }\n                onPress={() => {\n                  dispatch(\n                    actions.screens.manifest.setSelected(\n                      screens.manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                        ? screens.manifest.selectedUsers?.filter(\n                            ({ id }) => id !== `${edge?.node?.id}`\n                          )\n                        : ([...screens.manifest.selectedUsers, edge?.node] as DropzoneUser[])\n                    )\n                  );\n                }}\n              />\n              <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n            </React.Fragment>\n          ))}\n        </ScrollView>\n      </View>\n      <Button\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n          props.onNext();\n        }}\n        style={styles.button}\n        mode=\"contained\"\n      >\n        Next\n      </Button>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  scrollView: {\n    height: 100,\n  },\n});\n","import { gql, useMutation } from '@apollo/client';\nimport { omit } from 'lodash';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\nimport UserListSelect from './UserListSelect';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const [tabIndex, setTabIndex] = React.useState(0);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        props.onClose();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    props,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={onClose}>\n        <View style={{ backgroundColor: 'white' }} testID=\"manifest-group-sheet\">\n          <View pointerEvents={(state.fields.users?.value?.length || 0) > 0 ? undefined : 'none'}>\n            <Tabs defaultIndex={tabIndex} mode=\"fixed\" onChangeIndex={setTabIndex}>\n              <TabScreen label=\"Create group\">\n                <View />\n              </TabScreen>\n              <TabScreen label=\"Configure jump\">\n                <View />\n              </TabScreen>\n            </Tabs>\n          </View>\n\n          {tabIndex === 0 ? (\n            <View style={styles.userListContainer}>\n              <UserListSelect onNext={() => setTabIndex(1)} />\n            </View>\n          ) : (\n            <ScrollView contentContainerStyle={{ paddingBottom: 200, flexGrow: 1 }}>\n              <ManifestGroupForm />\n              <View style={styles.buttonContainer}>\n                <Button\n                  onPress={onManifest}\n                  loading={mutationData.loading}\n                  mode=\"contained\"\n                  style={styles.button}\n                >\n                  Save\n                </Button>\n              </View>\n            </ScrollView>\n          )}\n        </View>\n      </Dialog>\n    </Portal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: '100%',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Badge, Card, Chip, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ViewProps } from '../../../components/Themed';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlotCardProps {\n  slot: Slot;\n  style?: ViewProps['style'];\n  onPress?(slot: Slot): void;\n  onDelete?(slot: Slot): void;\n}\n\nexport default function SlotCard(props: ISlotCardProps) {\n  const { slot, onPress, onDelete, style } = props;\n  const theme = useTheme();\n\n  const hasPassenger = !!slot?.passengerName;\n  return (\n    <>\n      <Card\n        onPress={() => onPress?.(slot)}\n        elevation={3}\n        style={StyleSheet.flatten([styles.card, { marginBottom: hasPassenger ? -4 : 12 }, style])}\n      >\n        <Card.Title\n          title={slot?.dropzoneUser?.user.name || slot?.passengerName}\n          left={() =>\n            slot?.dropzoneUser?.user?.image ? (\n              <Avatar.Image\n                style={{ backgroundColor: theme.colors.surface }}\n                source={{ uri: slot?.dropzoneUser?.user.image }}\n                size={24}\n              />\n            ) : (\n              <Avatar.Icon\n                style={{ backgroundColor: theme.colors.surface }}\n                color={theme.dark ? theme.colors.text : theme.colors.primary}\n                icon=\"account\"\n                size={40}\n              />\n            )\n          }\n          right={() =>\n            !onDelete ? null : (\n              <Badge\n                style={{ marginTop: -45, marginRight: -5 }}\n                onPress={(e) => {\n                  e.preventDefault();\n                  onDelete?.(slot);\n                }}\n              >\n                -\n              </Badge>\n            )\n          }\n        />\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"lock\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.role?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"ticket-account\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.dropzoneUser?.license?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"human-handsup\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.jumpType?.name}\n          </Chip>\n          <Chip\n            style={styles.infoChip}\n            textStyle={styles.chipText}\n            icon=\"arrow-up-bold\"\n            mode=\"outlined\"\n            disabled\n          >\n            {slot?.ticketType?.name}\n          </Chip>\n          {!slot.wingLoading ? null : (\n            <Chip\n              style={styles.chip}\n              textStyle={styles.chipText}\n              icon=\"escalator-down\"\n              mode=\"outlined\"\n              disabled\n            >\n              {slot.wingLoading.toFixed(2)}\n            </Chip>\n          )}\n        </Card.Content>\n      </Card>\n      {!slot?.passengerName ? null : (\n        <>\n          <View\n            style={{\n              width: '100%',\n              height: 30,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <MaterialCommunityIcons color={theme.colors.onSurface} name=\"link-variant\" size={30} />\n          </View>\n          <Card\n            style={StyleSheet.flatten([\n              { margin: 12, marginTop: -4, height: 150, width: '100%' },\n              style,\n            ])}\n            elevation={3}\n          >\n            <Card.Title\n              title={slot?.passengerName}\n              left={() => (\n                <Avatar.Icon\n                  icon=\"account-supervisor\"\n                  color={theme.dark ? theme.colors.text : theme.colors.primary}\n                  style={{ backgroundColor: theme.colors.surface }}\n                  size={40}\n                />\n              )}\n            />\n            <Card.Content>\n              <Text style={styles.passengerTitle}>P A S S E N G E R</Text>\n            </Card.Content>\n          </Card>\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  chip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  infoChip: {\n    margin: 2,\n    height: 25,\n    padding: 0,\n    alignItems: 'center',\n  },\n  chipText: {\n    fontSize: 12,\n  },\n  passengerChip: {\n    margin: 12,\n    height: 150,\n    width: '100%',\n  },\n  passengerTitle: {\n    fontSize: 30,\n    opacity: 0.5,\n    alignSelf: 'center',\n    width: '100%',\n    textAlign: 'center',\n    color: '#CCCCCC',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema';\n\nconst MUTATION_UPDATE_LOAD = gql`\n  mutation UpdateLoad(\n    $id: Int!\n    $pilotId: Int\n    $gcaId: Int\n    $planeId: Int\n    $isOpen: Boolean\n    $loadMasterId: Int\n    $dispatchAt: Int\n    $hasLanded: Boolean\n  ) {\n    updateLoad(\n      input: {\n        id: $id\n        attributes: {\n          pilotId: $pilotId\n          gcaId: $gcaId\n          planeId: $planeId\n          isOpen: $isOpen\n          loadMasterId: $loadMasterId\n          dispatchAt: $dispatchAt\n          hasLanded: $hasLanded\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        createdAt\n        loadNumber\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          exitWeight\n\n          passengerName\n          passengerExitWeight\n\n          user {\n            id\n            name\n          }\n          ticketType {\n            id\n            name\n            altitude\n            isTandem\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(MUTATION_UPDATE_LOAD, {\n  getPayload: (result) => result.updateLoad,\n  fieldErrorMap: {\n    pilotId: 'pilot',\n    gcaId: 'gca',\n    planeId: 'plane',\n    loadMasterId: 'loadMaster',\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal } from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\n\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nimport { Load, Permission, LoadState } from '../../../api/schema.d';\nimport { useFinalizeLoadMutation } from '../../../api/reflection';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../../state';\n\ninterface ILoadActionButtonProps {\n  load: Load;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () => null,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [mutationUpdateLoad, load]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const onManifest = React.useCallback(() => {\n    if (!currentUser?.hasLicense) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You need to select a license on your user profile',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasMembership) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your membership is out of date',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasExitWeight) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Update your exit weight on your profile before manifesting',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasCredits) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You have no credits on your account',\n          variant: 'info',\n        })\n      );\n    }\n\n    dispatch(actions.forms.manifest.setOpen(true));\n    dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n    dispatch(actions.forms.manifest.setField(['load', load]));\n    return null;\n  }, [currentUser, dispatch, load]);\n\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const createCallAction = React.useCallback(\n    (minutes: number | null) => () => {\n      setExpanded(false);\n      updateCall(minutes);\n    },\n    [updateCall]\n  );\n\n  const callActions = [\n    {\n      label: '20 minute call',\n      onPress: createCallAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createCallAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createCallAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const manifestActions = [\n    !showManifestButton\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => onManifest(),\n        },\n    !showGroupIcon\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createCallAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: () =>\n            mutationFinalizeLoad({\n              variables: { id: Number(load.id), state: LoadState.Cancelled },\n            }),\n        },\n    ![LoadState.Cancelled].includes(load.state)\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: () => onLanded(),\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n});\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, IconButton, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useAppSelector } from '../../../state';\nimport { Load } from '../../../api/schema';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: Load;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, onEdit, canEdit, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.surface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          {load?.dispatchAt && isAfter(load.dispatchAt * 1000, new Date()) ? (\n            <Countdown\n              end={new Date(load.dispatchAt * 1000)}\n              variant={theme.dark ? 'light' : 'dark'}\n              size={80}\n            />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"shield-airplane\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 48,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          <>\n            <View\n              style={{ flex }}\n              // eslint-disable-next-line react/no-array-index-key\n              key={`info-grid-${i}`}\n            >\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_LOAD = gql`\n  query QueryLoad($id: Int!) {\n    load(id: $id) {\n      id\n      name\n      createdAt\n      dispatchAt\n      hasLanded\n      loadNumber\n      isFull\n      state\n      isOpen\n      weight\n      maxSlots\n      availableSlots\n      occupiedSlots\n      plane {\n        id\n        maxSlots\n        name\n      }\n      gca {\n        id\n        user {\n          id\n          name\n        }\n      }\n      pilot {\n        id\n        user {\n          id\n          name\n        }\n      }\n      loadMaster {\n        id\n        user {\n          id\n          name\n        }\n      }\n      slots {\n        id\n        createdAt\n        exitWeight\n        passengerName\n        passengerExitWeight\n        wingLoading\n        dropzoneUser {\n          id\n          role {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n          user {\n            id\n            name\n            exitWeight\n            license {\n              id\n              name\n            }\n          }\n        }\n        ticketType {\n          id\n          name\n          altitude\n          isTandem\n\n          extras {\n            id\n            name\n            cost\n          }\n        }\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['load'],\n  {\n    id: number;\n  }\n>(QUERY_LOAD, {\n  getPayload: (query) => query?.load,\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { DeleteSlotInput, DeleteSlotPayload } from '../schema';\n\nconst MUTATION_DELETE_SLOT = gql`\n  mutation DeleteSlot($id: Int!) {\n    deleteSlot(input: { id: $id }) {\n      slot {\n        id\n\n        dropzoneUser {\n          id\n          user {\n            id\n            name\n          }\n        }\n        load {\n          id\n          availableSlots\n          isOpen\n          weight\n          slots {\n            id\n            createdAt\n            exitWeight\n\n            passengerName\n            passengerExitWeight\n\n            user {\n              id\n              name\n            }\n            ticketType {\n              id\n              name\n              altitude\n              isTandem\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<DeleteSlotInput, DeleteSlotPayload>(MUTATION_DELETE_SLOT, {\n  getPayload: (result) => result.deleteSlot,\n});\n","import * as React from 'react';\nimport { Dimensions, RefreshControl, useWindowDimensions } from 'react-native';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { Card } from 'react-native-paper';\n\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../components/chips/PilotChip';\nimport PlaneChip from '../../../components/chips/PlaneChip';\nimport ManifestUserSheet from '../../../components/dialogs/ManifestUser/ManifestUser';\nimport ManifestGroupSheet from '../../../components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from '../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser, LoadState } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotCard from './SlotCard';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\nimport useQueryLoad from '../../../api/hooks/useQueryLoad';\nimport useMutationDeleteSlot from '../../../api/hooks/useMutationDeleteSlot';\nimport useMutationUpdateLoad from '../../../api/hooks/useMutationUpdateLoad';\n\nfunction AvailableSlotCard({ width }: { width: number }) {\n  return (\n    <Card\n      style={{\n        height: 150,\n        opacity: 0.5,\n        margin: 12,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n      elevation={3}\n    >\n      <Card.Title\n        title=\"Available\"\n        style={{ alignSelf: 'center', justifyContent: 'center', flex: 1 }}\n        titleStyle={{ textAlign: 'center' }}\n      />\n    </Card>\n  );\n}\n\nfunction SlotSkeleton({ width }: { width: number }) {\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 150,\n        width,\n        margin: 12,\n      }}\n      layout={[{ key: 'user-card-container', height: 150, width }]}\n    />\n  );\n}\n\nexport default function LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const route = useRoute<{ key: string; name: string; params: { load: Load } }>();\n\n  const {\n    data: detailedLoad,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(route.params.load.id),\n    },\n    pollInterval: 30000,\n  });\n\n  const load = detailedLoad || route.params.load;\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [mutationUpdateLoad, load.id]\n  );\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const navigation = useNavigation();\n\n  const slots: (Slot | 2)[] = Array.from({\n    length: (load?.slots?.length || 0) + (load?.availableSlots || 0),\n  }).map((_, index) => ((load?.slots?.length || 0) > index ? (load.slots as Slot[])[index] : 2));\n\n  const maxSlots = load?.maxSlots || load?.plane?.maxSlots || 0;\n  const occupiedSlots = maxSlots - (load?.availableSlots || 0);\n\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 364;\n  const padding = 24;\n  const numColumns = Math.floor(width / (cardWidth + padding)) || 1;\n  let contentWidth = (cardWidth + padding) * numColumns + padding;\n  contentWidth = width < contentWidth ? width : contentWidth;\n\n  const initialLoading = !detailedLoad?.slots?.length && loading;\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.background }}>\n      <Header load={load}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ marginVertical: 8 }}>\n          <PlaneChip\n            value={load?.plane}\n            onSelect={async (plane) => {\n              if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'info',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <GCAChip\n            value={load?.gca}\n            onSelect={updateGCA}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <PilotChip\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n          <LoadMasterChip\n            value={load?.loadMaster}\n            slots={load.slots || []}\n            onSelect={updateLoadMaster}\n            small\n            backgroundColor=\"transparent\"\n            color={palette.primary.dark}\n          />\n        </ScrollView>\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      <FlatList\n        testID=\"slots\"\n        keyExtractor={(item, idx) => `slot-${item?.id || idx}`}\n        style={{ flex: 1, height: Dimensions.get('window').height }}\n        contentContainerStyle={{\n          width: contentWidth,\n          alignSelf: 'center',\n          justifyContent: 'space-evenly',\n          paddingBottom: 100,\n        }}\n        numColumns={numColumns}\n        horizontal={false}\n        data={!initialLoading ? slots : [1, 1, 1, 1, 1, 1, 1, 1]}\n        refreshing={loading}\n        onRefresh={refetch}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n        renderItem={({ item: node, index }) => {\n          if (node === 1) {\n            return <SlotSkeleton width={cardWidth} />;\n          }\n\n          return node === 2 ? (\n            <AvailableSlotCard key={`empty-slot-${index}`} width={cardWidth} />\n          ) : (\n            <SlotCard\n              style={{ width: cardWidth }}\n              key={`slot-${node.id}`}\n              slot={node}\n              onDelete={\n                (currentUser?.id === node?.dropzoneUser?.id && canRemoveSelf) || canRemoveOthers\n                  ? onDeleteSlot\n                  : undefined\n              }\n              onPress={(slot) => {\n                const slotGroup = load?.slots?.filter(\n                  ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n                );\n                const onSlotGroupPress = () => {\n                  if (slotGroup) {\n                    dispatch(actions.forms.manifestGroup.reset());\n                    dispatch(actions.forms.manifestGroup.setFromSlots(slotGroup));\n                    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n                    navigation.navigate('ManifestGroupScreen');\n                  }\n                };\n                const onSlotPress = () => {\n                  dispatch(actions.forms.manifest.setOpen(slot));\n                  dispatch(actions.forms.manifest.setField(['load', load]));\n                };\n\n                if (slot.user?.id === currentUser?.id) {\n                  if (canEditSelf) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress();\n                    } else {\n                      onSlotPress();\n                    }\n                  }\n                } else if (canEditOthers) {\n                  if (slotGroup?.length) {\n                    onSlotGroupPress();\n                  } else {\n                    onSlotPress();\n                  }\n                }\n              }}\n            />\n          );\n        }}\n      />\n      <ActionButton load={load} />\n      <ManifestUserSheet\n        open={forms.manifest.open}\n        onClose={() => dispatch(actions.forms.manifest.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.manifest.setOpen(false));\n        }}\n      />\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  return (\n    <WizardContext.Provider\n      value={{\n        index,\n        count,\n        setIndex: (idx) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          ref.current?.scrollToIndex({ index: idx, animated: true });\n        },\n      }}\n    >\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              console.log('onNext with index', index);\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"position\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds}\n        keyExtractor={({ item }, index) => `wind.${index}`}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../../components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from '../../../../components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport JumpRunSelector from '../../../../components/input/jump_run_select/JumpRunSelect';\n\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from '../../../components/wizard/Wizard';\nimport WizardCompleteStep from '../../../components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport JumpRunSelector from '../../../components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    dispatch,\n  ]);\n\n  const { dropzone } = useCurrentDropzone();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from '../../../api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from '../../../components/forms/weather_conditions/WeatherConditionForm';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [mutationCreateWeatherConditions, state, dropzoneId, navigation, dispatch]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() => navigation.navigate('JumpRunScreen')}\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload conditions from MarkSchulz.net\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, Button } from 'react-native-paper';\nimport { View, StyleSheet } from 'react-native';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  return (\n    <View style={styles.warning}>\n      <Paragraph style={{ color: 'white', flex: 7 / 10, flexGrow: 2 }}>{title}</Paragraph>\n      {!action ? null : (\n        <Button onPress={action} style={{ flex: 1 / 10, flexShrink: 1 }}>\n          Fix\n        </Button>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning title=\"Your reserve repack is due. You cannot manifest if your repack is out of date.\" />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 32,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { DrawerActions } from '@react-navigation/native';\nimport { Query } from '../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\nimport SetupWarning from './SetupWarning';\n\nconst QUERY_CURRENT_USER = gql`\n  query QueryDropzone($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      isCreditSystemEnabled\n\n      currentUser {\n        id\n        credits\n        expiresAt\n\n        rigInspections {\n          id\n          rig {\n            id\n            repackExpiresAt\n          }\n        }\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { navigation, previous, scene, hideWarnings } = props;\n  const { currentDropzoneId, palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [loadData, { data, loading }] = useLazyQuery<Query>(QUERY_CURRENT_USER, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n\n  React.useEffect(() => {\n    if (currentDropzoneId) {\n      loadData();\n    }\n  }, [loadData, currentDropzoneId]);\n\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {previous ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton\n            icon=\"menu\"\n            size={32}\n            onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n          />\n        )}\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold' }}\n        />\n\n        {scene.descriptor.options.headerRight ? (\n          scene.descriptor.options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{ backgroundColor: palette.accent.main }}\n            mode=\"flat\"\n            textStyle={{ color: palette.surface }}\n          >{`$${data?.dropzone?.currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={data?.dropzone?.currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!data?.dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!data?.dropzone?.currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!data?.dropzone?.currentUser?.expiresAt &&\n            data?.dropzone?.currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!data?.dropzone?.currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = data.dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!data?.dropzone?.currentUser?.rigInspections?.length}\n          isRigSetUp={!!data?.dropzone?.currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            const currentUser = data?.dropzone?.currentUser;\n            console.log('opening setup wizard');\n            if (currentUser) {\n              dispatch(actions.forms.user.setOriginal(currentUser));\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n              }\n\n              navigation.navigate('UserSetupWizard');\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List } from 'react-native-paper';\n\nimport { Text, View } from '../../../components/Themed';\nimport usePalette from '../../../hooks/usePalette';\n\ninterface IGetStartedProps {\n  hasPlanes: boolean;\n  hasTicketTypes: boolean;\n  isPublic: boolean;\n}\nexport default function GetStarted({ hasPlanes, hasTicketTypes, isPublic }: IGetStartedProps) {\n  const palette = usePalette();\n\n  return (\n    <View style={{ width: '70%' }}>\n      <Text style={styles.title}>Set up dropzone</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <List.Item\n        title=\"Create dropzone\"\n        left={() => <List.Icon color={palette.success} icon=\"check\" />}\n      />\n      <List.Item\n        title=\"Add a plane\"\n        left={() =>\n          !hasPlanes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n      <List.Item\n        title=\"Configure jump tickets\"\n        left={() =>\n          !hasTicketTypes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { Load, Plane, DropzoneUser, LoadState } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport useQueryLoad from 'app/api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from 'app/api/hooks/useMutationUpdateLoad';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  load: Load;\n  onPress(): void;\n}\n\nexport default function LoadCard(props: ILoadCardSmall) {\n  const { load: initialRecord, onPress } = props;\n  const dispatch = useAppDispatch();\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    pollInterval: 30000,\n  });\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 2,\n        minWidth: 300,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load?.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <View style={{ flexDirection: 'row', flexWrap: 'nowrap', backgroundColor: 'transparent' }}>\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              if ((load?.occupiedSlots || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.occupiedSlots || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'info',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport {\n  Button,\n  Card,\n  DataTable,\n  IconButton,\n  Menu,\n  Paragraph,\n  ProgressBar,\n  Text,\n} from 'react-native-paper';\nimport addMinutes from 'date-fns/addMinutes';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { useNavigation } from '@react-navigation/native';\nimport useCurrentDropzone from '../../../../../api/hooks/useCurrentDropzone';\nimport GCAChip from '../../../../../components/chips/GcaChip';\nimport LoadMasterChip from '../../../../../components/chips/LoadMasterChip';\nimport PilotChip from '../../../../../components/chips/PilotChip';\nimport PlaneChip from '../../../../../components/chips/PlaneChip';\n\nimport { View } from '../../../../../components/Themed';\nimport { Load, Permission, Plane, Slot, DropzoneUser } from '../../../../../api/schema.d';\nimport useRestriction from '../../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../../state';\nimport SwipeActions from '../../../../../components/layout/SwipeActions';\nimport LoadingCard from '../Small/Loading';\nimport useQueryLoad from '../../../../../api/hooks/useQueryLoad';\nimport useMutationUpdateLoad from '../../../../../api/hooks/useMutationUpdateLoad';\nimport useMutationDeleteSlot from '../../../../../api/hooks/useMutationDeleteSlot';\n\ninterface ILoadCardLarge {\n  load: Load;\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: Slot[]): void;\n  onSlotPress(slot: Slot): void;\n  onManifest(): void;\n}\n\nexport default function LoadCard(props: ILoadCardLarge) {\n  const {\n    load: initialRecord,\n    onManifest,\n    onManifestGroup,\n    controlsVisible,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n\n  const {\n    data: load,\n    loading,\n    refetch,\n  } = useQueryLoad({\n    variables: {\n      id: Number(initialRecord.id),\n    },\n    showSnackbarErrors: true,\n    // pollInterval: 30000,\n  });\n  const currentDropzone = useCurrentDropzone();\n  const { currentUser } = currentDropzone;\n\n  const mutationUpdateLoad = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n  const mutationDeleteSlot = useMutationDeleteSlot({\n    onSuccess: (payload) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `${payload.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: Slot) => {\n      await mutationDeleteSlot.mutate({\n        id: Number(slot.id),\n      });\n    },\n    [mutationDeleteSlot]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        pilotId: Number(pilot.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        gcaId: Number(gca.id),\n      });\n    },\n    [mutationUpdateLoad, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: Plane) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        planeId: Number(plane.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: DropzoneUser) => {\n      if (!load?.id) {\n        return;\n      }\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        loadMasterId: Number(lm.id),\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const updateCall = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load?.id) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n      await mutationUpdateLoad.mutate({\n        id: Number(load.id),\n        dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null,\n      });\n    },\n    [load?.id, mutationUpdateLoad]\n  );\n\n  const onLanded = React.useCallback(async () => {\n    if (!load?.id) {\n      return;\n    }\n    await mutationUpdateLoad.mutate({\n      id: Number(load.id),\n      hasLanded: true,\n    });\n  }, [load?.id, mutationUpdateLoad]);\n\n  const navigation = useNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Text>{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || mutationUpdateLoad.loading || mutationDeleteSlot.loading}\n        color={state.theme.colors.accent}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n          <ScrollView\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: `You need to take ${diff} people off the load to fit on this plane`,\n                      variant: 'info',\n                    })\n                  );\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip value={load?.gca} onSelect={updateGCA} />\n            <PilotChip value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <DataTable>\n          <DataTable.Header style={{ width: '100%' }}>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Jump type</DataTable.Title>\n            <DataTable.Title numeric>Altitude</DataTable.Title>\n          </DataTable.Header>\n          {load?.slots?.map((slot) => {\n            const slotGroup = load?.slots?.filter(\n              ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n            );\n            const isCurrentUser = slot?.user?.id === currentUser?.id;\n\n            return (\n              <SwipeActions\n                disabled={(isCurrentUser && !canRemoveSelf) || (!isCurrentUser && !canRemoveOthers)}\n                key={`slot-${slot.id}`}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: () => onDeleteSlot(slot),\n                }}\n              >\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  onPress={() => {\n                    if (slot.user?.id === currentUser?.id) {\n                      if (canEditSelf) {\n                        if (slotGroup?.length) {\n                          onSlotGroupPress(slotGroup);\n                        } else {\n                          onSlotPress(slot);\n                        }\n                      }\n                    } else if (canEditOthers) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  }}\n                  pointerEvents=\"none\"\n                >\n                  <DataTable.Cell>\n                    <Paragraph style={styles.slotText}>{slot?.dropzoneUser?.user?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n\n                {slot?.ticketType?.isTandem && (\n                  <DataTable.Row\n                    testID=\"slot-row\"\n                    disabled={!!load?.hasLanded}\n                    pointerEvents=\"none\"\n                  >\n                    <DataTable.Cell>\n                      <Paragraph style={styles.slotText}>{slot?.passengerName}</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>Passenger</Paragraph>\n                    </DataTable.Cell>\n                    <DataTable.Cell numeric>\n                      <Paragraph style={styles.slotText}>\n                        {(slot?.ticketType?.altitude || 14000) / 1000}k\n                      </Paragraph>\n                    </DataTable.Cell>\n                  </DataTable.Row>\n                )}\n              </SwipeActions>\n            );\n          })}\n          {Array.from({ length: load?.availableSlots || 0 }, (v, i) => i).map((i) => (\n            <DataTable.Row\n              key={`${load?.id}-empty-slot-${i}`}\n              testID=\"slot-row\"\n              onPress={() => navigation.navigate('LoadScreen', { load })}\n            >\n              <DataTable.Cell>\n                <Paragraph style={styles.slotText}>- Available -</Paragraph>\n              </DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n              <DataTable.Cell numeric>-</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button mode=\"outlined\" onPress={() => updateCall(null)} testID=\"dispatch-cancel\">\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              onDismiss={() => setDispatchOpen(false)}\n              visible={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <Menu.Item\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <Menu.Item\n                onPress={() => {\n                  setDispatchOpen(false);\n                  updateCall(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a load master before this load can be finalized',\n                      variant: 'info',\n                    })\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a pilot before this load can be finalized',\n                      variant: 'info',\n                    })\n                  );\n                }\n                return onLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  slotText: {\n    fontSize: 12,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateLoadPayload, LoadInput } from '../schema';\n\nconst MUTATION_CREATE_LOAD = gql`\n  mutation CreateLoad(\n    $name: String\n    $pilotId: Int\n    $gcaId: Int\n    $maxSlots: Int!\n    $planeId: Int\n    $isOpen: Boolean\n  ) {\n    createLoad(\n      input: {\n        attributes: {\n          name: $name\n          pilotId: $pilotId\n          gcaId: $gcaId\n          maxSlots: $maxSlots\n          planeId: $planeId\n          isOpen: $isOpen\n        }\n      }\n    ) {\n      load {\n        id\n        name\n        loadNumber\n        occupiedSlots\n        availableSlots\n        maxSlots\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        maxSlots\n        isOpen\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<LoadInput, CreateLoadPayload>(MUTATION_CREATE_LOAD, {\n  getPayload: (result) => result.createLoad,\n  validates: {\n    maxSlots: [\n      isRequired('lease specify amount of allowed jumpers'),\n      isNumeric('Please enter a valid number'),\n    ],\n    planeId: [isRequired('What plane is flying this load?')],\n    gcaId: [isRequired('You must have a GCA for this load')],\n  },\n  fieldErrorMap: {\n    planeId: 'plane',\n    gcaId: 'gca',\n  },\n});\n","import slice from './slice';\nimport Notifications from './Notifications';\n\nconst { actions } = slice;\n\nexport { actions };\nexport default Notifications;\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsers($dropzoneId: Int!, $permissions: [Permission!]) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<\n  Query['dropzone']['dropzoneUsers'],\n  {\n    dropzoneId: number;\n    permissions: string[];\n  }\n>(QUERY_DROPZONE_USERS, {\n  getPayload: (query) => query?.dropzone?.dropzoneUsers,\n});\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport useQueryDropzoneUsers from '../../../api/hooks/useQueryDropzoneUsers';\nimport { DropzoneUser } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IDropzoneUserChipSelect {\n  value?: DropzoneUser | null;\n  label: string;\n  icon?: string;\n  requiredPermissions: string[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(dzuser: DropzoneUser): void;\n}\n\nexport default function DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const { label, requiredPermissions, icon, value, onLoadingStateChanged, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQueryDropzoneUsers({\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n      permissions: requiredPermissions,\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]) => (first ? onSelect(first) : null),\n    [onSelect]\n  );\n  const getItemLabel = React.useCallback((dzUser) => dzUser?.user.name, []);\n  const isSelected = React.useCallback((item) => item.id === value?.id, [value?.id]);\n  const selected = React.useMemo(() => [value].filter(Boolean) as DropzoneUser[], [value]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUser>\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={uniqBy(data?.edges?.map((edge) => edge?.node) || [], 'id') as DropzoneUser[]}\n        selected={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChangeSelected={onChangeSelected}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Plane, Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: Plane | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: Plane): void;\n}\n\nconst QUERY_PLANES = gql`\n  query QuerySelectPlanes($dropzoneId: Int!) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onSelect, onLoadingStateChanged } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: currentDropzoneId,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<Plane>\n        autoSelectFirst\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        selected={[value].filter(Boolean) as Plane[]}\n        renderItemLabel={(plane: Plane) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChangeSelected={([first]) => (first ? onSelect(first as Plane) : null)}\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DropzoneUserChipSelect from '../../input/chip_select/DropzoneUserChipSelect';\nimport PlaneChipSelect from '../../input/chip_select/PlaneChipSelect';\n\nexport default function LoadForm() {\n  const state = useAppSelector((root) => root.forms.load);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        placeholder=\"Optional\"\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.load.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'e.g Starcrest load, Tandem load'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.load.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error || ''}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelect\n          value={state.fields.plane.value}\n          onSelect={(value) => {\n            dispatch(actions.forms.load.setField(['plane', value]));\n            dispatch(actions.forms.load.setField(['maxSlots', value.maxSlots]));\n          }}\n        />\n        <HelperText type={state.fields.plane.error ? 'error' : 'info'}>\n          {state.fields.plane.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"GCA\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['gca', dzUser]))}\n          value={state.fields.gca.value || null}\n          requiredPermissions={['actAsGCA']}\n        />\n        <HelperText type={state.fields.gca.error ? 'error' : 'info'}>\n          {state.fields.gca.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"Pilot\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['pilot', dzUser]))}\n          value={state.fields.pilot.value || null}\n          requiredPermissions={['actAsPilot']}\n        />\n        <HelperText type={state.fields.pilot.error ? 'error' : 'info'}>\n          {state.fields.pilot.error || ''}\n        </HelperText>\n\n        <Divider style={{ marginVertical: 8 }} />\n\n        <Checkbox.Item\n          label=\"Allow public manifesting\"\n          status={state.fields.isOpen.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.load.setField(['isOpen', !state.fields.isOpen.value]))\n          }\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nexport default function DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, buttonAction, title, loading, open, children } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} dismissable={false} style={{ maxWidth: 500, alignSelf: 'center' }}>\n        <ProgressBar indeterminate visible={loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>{title}</Dialog.Title>\n        <Dialog.Content pointerEvents=\"box-none\">\n          <Dialog.ScrollArea>\n            <ScrollView>{children}</ScrollView>\n          </Dialog.ScrollArea>\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={buttonAction}>{buttonLabel}</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\n\nimport useMutationCreateLoad from '../../api/hooks/useMutationCreateLoad';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { actions as snackbar } from '../notifications';\n\nimport { Load } from '../../api/schema';\nimport LoadForm from '../forms/load/LoadForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport { LoadFields } from '../forms/load/slice';\n\ninterface ILoadDialog {\n  open: boolean;\n  onClose(): void;\n  onSuccess(load: Load): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, onClose, onSuccess } = props;\n  const state = useAppSelector((root) => root.forms.load);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const dispatch = useAppDispatch();\n  const createLoad = useMutationCreateLoad({\n    onSuccess: (payload) => {\n      dispatch(\n        snackbar.showSnackbar({\n          message: `Load ${payload?.load?.name} created`,\n          variant: 'success',\n        })\n      );\n\n      if (payload?.load) {\n        onSuccess(payload?.load);\n      }\n      dispatch(actions.forms.load.reset());\n      requestAnimationFrame(() => dispatch(actions.forms.load.setOpen(false)));\n    },\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.load.setFieldError([field as keyof LoadFields, message])),\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  const onSave = React.useCallback(() => {\n    const variables = {\n      isOpen: !!state.fields.isOpen.value,\n      name: state.fields.name.value,\n      dropzoneId: currentDropzoneId,\n      maxSlots: state.fields.maxSlots.value || null,\n      planeId: Number(state.fields.plane.value?.id) || null,\n      gcaId: Number(state.fields.gca.value?.id) || null,\n      pilotId: Number(state.fields.pilot.value?.id) || null,\n    };\n    createLoad.mutate(variables);\n  }, [\n    createLoad,\n    currentDropzoneId,\n    state.fields.gca.value?.id,\n    state.fields.isOpen.value,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.pilot.value?.id,\n    state.fields.plane.value?.id,\n  ]);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={createLoad.loading}\n      title=\"New Load\"\n    >\n      <LoadForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport { useNavigation } from '@react-navigation/native';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport weatherBackground from '../../../../../assets/images/weather.png';\nimport nightBackground from '../../../../../assets/images/night.png';\nimport useCurrentDropzone from '../../../../api/hooks/useCurrentDropzone';\nimport { actions, useAppDispatch } from '../../../../state';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { Permission } from '../../../../api/schema.d';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const { dropzone, loading, called } = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? new Date(dropzone?.currentConditions?.createdAt * 1000)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={() => {\n          if (canUpdate && dropzone?.currentConditions) {\n            dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n            navigation.navigate('WindScreen');\n          }\n        }}\n      >\n        <ImageBackground\n          source={theme.dark ? nightBackground : weatherBackground}\n          style={{ ...StyleSheet.absoluteFillObject }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, -80],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'center' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onPress={() => {\n                        if (dropzone?.currentConditions && canUpdate) {\n                          dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n                          navigation.navigate('JumpRunScreen');\n                        }\n                      }}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    marginHorizontal: 16,\n    // height: 200,\n    overflow: 'hidden',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    flexDirection: 'column',\n  },\n  jumpRun: {\n    width: 105,\n    height: 105,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'react-native-skeleton-content';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Dimensions, RefreshControl, StyleSheet, useWindowDimensions } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, Menu, ProgressBar, useTheme } from 'react-native-paper';\nimport checkDropzoneSetupComplete from 'app/utils/checkDropzoneSetupComplete';\n\nimport NoResults from '../../../components/NoResults';\nimport { View } from '../../../components/Themed';\nimport { Load, Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport GetStarted from './GetStarted';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport LoadDialog from '../../../components/dialogs/Load';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const setup = useAppSelector((root) => root.screens.dropzoneWizard);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const [isSetupCheckComplete, setSetupCheckComplete] = React.useState(false);\n  const { dropzone, currentUser, loading, refetch, fetchMore } = useCurrentDropzone();\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (dropzone && isFocused) {\n      const dropzoneWizardIndex = checkDropzoneSetupComplete(dropzone);\n      console.log({ dropzoneWizardIndex });\n\n      if (dropzoneWizardIndex) {\n        dispatch(actions.screens.dropzoneWizard.setIndex(dropzoneWizardIndex));\n        dispatch(actions.forms.dropzone.setOriginal(dropzone));\n        if (dropzone?.planes?.length) {\n          dispatch(actions.forms.plane.setOriginal(dropzone.planes[0]));\n        }\n        if (dropzone?.ticketTypes?.length) {\n          dispatch(actions.forms.ticketType.setOriginal(dropzone.ticketTypes[0]));\n        }\n        navigation.navigate('DropzoneSetupScreen');\n      }\n    }\n  }, [dispatch, dropzone, isFocused, navigation, setup.completed, isSetupCheckComplete]);\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const hasPlanes = !!dropzone?.planes?.length;\n  const hasTicketTypes = !!dropzone?.ticketTypes?.length;\n  const isPublic = !!dropzone?.isPublic;\n  const isSetupComplete = hasPlanes && hasTicketTypes;\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      dispatch(actions.global.setPrimaryColor(dropzone.secondaryColor));\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n\n  const onManifest = React.useCallback(\n    (load: Load) => {\n      if (!currentUser?.hasLicense) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You need to select a license on your user profile',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasMembership) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your membership is out of date',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasRigInspection) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs to be inspected before manifesting',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasReserveInDate) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Your rig needs a reserve repack',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasExitWeight) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'Update your exit weight on your profile before manifesting',\n            variant: 'info',\n          })\n        );\n      }\n\n      if (!currentUser?.hasCredits) {\n        return dispatch(\n          actions.notifications.showSnackbar({\n            message: 'You have no credits on your account',\n            variant: 'info',\n          })\n        );\n      }\n\n      dispatch(actions.forms.manifest.setOpen(true));\n      dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n      dispatch(actions.forms.manifest.setField(['load', load]));\n      return null;\n    },\n    [currentUser, dispatch]\n  );\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const loads = dropzone?.loads?.edges || [];\n  const initialLoading = !loads?.length && loading;\n\n  const theme = useTheme();\n  return (\n    <View style={{ flex: 1, backgroundColor: theme.colors.background }}>\n      <ProgressBar visible={loading} indeterminate color={state.theme.colors.accent} />\n\n      <View style={styles.container}>\n        {!initialLoading && !isSetupComplete ? (\n          <GetStarted {...{ hasPlanes, hasTicketTypes, isPublic }} />\n        ) : (\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              height: Dimensions.get('window').height,\n            }}\n          >\n            <FlatList\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults title=\"No loads so far today\" subtitle=\"How's the weather?\" />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n                backgroundColor: theme.colors.background,\n              }}\n              testID=\"loads\"\n              keyExtractor={({ item }, idx) => `load-small-${item?.node?.id || idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n                backgroundColor: theme.colors.background,\n              }}\n              numColumns={numColumns}\n              data={initialLoading ? [1, 1, 1, 1, 1] : loads}\n              refreshControl={\n                <RefreshControl refreshing={loading} onRefresh={() => fetchMore({})} />\n              }\n              renderItem={({ item: edge, index }) => {\n                // 1 means loading, because null and undefined\n                // get filtered out\n                if (edge === 1) {\n                  return manifestScreen.display === 'list' ? (\n                    <LoadingCardLarge key={`loading-card-${index}`} />\n                  ) : (\n                    <LoadingCardSmall key={`loading-card-${index}`} />\n                  );\n                }\n                return manifestScreen.display === 'list' ? (\n                  <LoadCardLarge\n                    controlsVisible={false}\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onSlotPress={(slot) => {\n                      if (edge?.node) {\n                        dispatch(actions.forms.manifest.setOpen(slot));\n                        dispatch(actions.forms.manifest.setField(['load', edge.node]));\n                      }\n                    }}\n                    onSlotGroupPress={(slots) => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setFromSlots(slots));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                      navigation.navigate('ManifestGroupScreen');\n                    }}\n                    onManifest={() => {\n                      onManifest(edge.node);\n                    }}\n                    onManifestGroup={() => {\n                      dispatch(actions.forms.manifestGroup.reset());\n                      dispatch(actions.forms.manifestGroup.setOpen(true));\n                      dispatch(actions.forms.manifestGroup.setField(['load', edge.node]));\n                    }}\n                  />\n                ) : (\n                  <LoadCardSmall\n                    key={`load-${edge.node.id}`}\n                    load={edge.node}\n                    onPress={() => navigation.navigate('LoadScreen', { load: edge.node })}\n                  />\n                );\n              }}\n            />\n          </View>\n        )}\n        {canCreateLoad && isSetupComplete && (\n          <FAB\n            style={styles.fab}\n            small\n            icon=\"plus\"\n            onPress={() => dispatch(actions.forms.load.setOpen(true))}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n          visible={isDisplayOptionsOpen}\n          onDismiss={() => setDisplayOptionsOpen(false)}\n        >\n          <Menu.Item\n            title=\"Show expanded cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'cards' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <Menu.Item\n            title=\"Show compact cards\"\n            titleStyle={{\n              fontWeight: manifestScreen.display === 'list' ? 'normal' : 'bold',\n            }}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n\n      <LoadDialog\n        onSuccess={() => {\n          dispatch(actions.forms.load.setOpen(false));\n          refetch();\n        }}\n        open={forms.load.open}\n        onClose={() => dispatch(actions.forms.load.setOpen(false))}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import { Dropzone } from 'app/api/schema.d';\nimport { DropzoneWizardStep } from 'app/screens/authenticated/dropzone_wizard/slice';\n\nexport default function checkDropzoneSetupComplete(dropzone: Dropzone) {\n  const completed = {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  };\n\n  let currentIndex;\n  if (dropzone?.ticketTypes?.length) {\n    completed[DropzoneWizardStep.Tickets] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Tickets;\n  }\n\n  if (dropzone.planes?.length) {\n    completed[DropzoneWizardStep.Aircraft] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Aircraft;\n  }\n\n  if (dropzone?.primaryColor) {\n    completed[DropzoneWizardStep.Branding] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Branding;\n  }\n  if (dropzone.lat && dropzone.lng) {\n    completed[DropzoneWizardStep.Location] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Location;\n  }\n\n  if (dropzone.federation?.id) {\n    completed[DropzoneWizardStep.Federation] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Federation;\n  }\n\n  if (dropzone.name) {\n    completed[DropzoneWizardStep.Name] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Name;\n  }\n\n  if (Object.values(completed).some((isComplete) => !isComplete)) {\n    return currentIndex;\n  }\n  return false;\n}\n","import { gql, useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { omit } from 'lodash';\nimport { Button, Card, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Mutation } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../../components/forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestGroupScreen {\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOTS = gql`\n  mutation CreateMultipleSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $ticketTypeId: Int\n    $userGroup: [SlotUser!]!\n  ) {\n    createSlots(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          ticketTypeId: $ticketTypeId\n          userGroup: $userGroup\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n\n      load {\n        id\n        name\n        loadNumber\n        createdAt\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          user {\n            id\n            name\n          }\n          passengerName\n          passengerExitWeight\n          ticketType {\n            id\n            name\n            isTandem\n            altitude\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupScreen(props: IManifestGroupScreen) {\n  const { onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateSlots, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOTS);\n  const navigation = useNavigation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          ticketTypeId: Number(state.fields.ticketType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          userGroup: state.fields.users.value?.map((slotUserWithRig) =>\n            omit(slotUserWithRig, ['rig'])\n          ),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onSuccess?.();\n        navigation.navigate('Manifest', { screen: 'DropzoneScreen' });\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationCreateSlots,\n    navigation,\n    onSuccess,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.users.value,\n    validate,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <ProgressBar\n        indeterminate\n        visible={mutationData.loading}\n        color={globalState.theme.colors.accent}\n      />\n      <Card.Title\n        // eslint-disable-next-line max-len\n        title={`Manifest ${state?.fields?.users?.value?.length} jumpers on Load #${state.fields.load?.value?.loadNumber}`}\n      />\n      <ManifestGroupForm />\n      <Button\n        mode=\"contained\"\n        style={{ width: '100%', marginVertical: 16 }}\n        onPress={() => onManifest()}\n        loading={mutationData.loading}\n      >\n        Save\n      </Button>\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Checkbox, Divider, FAB, List, ProgressBar } from 'react-native-paper';\n\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { DropzoneUser, Query } from '../../../api/schema';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search, licensed: true) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestGroupUserSelectScreen() {\n  const global = useAppSelector((root) => root.global);\n  const manifest = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n\n  const { data, loading } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: manifest.searchText,\n    },\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (manifest.isSearchVisible) {\n      dispatch(actions.screens.manifest.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, manifest.isSearchVisible]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 0 }}>\n        {!data?.dropzone?.dropzoneUsers?.edges?.length && (\n          <NoResults title=\"No users\" subtitle=\"\" />\n        )}\n\n        {data?.dropzone?.dropzoneUsers?.edges?.map((edge) => (\n          <>\n            <List.Item\n              style={{ width: '100%' }}\n              key={`user-${edge?.node?.id}`}\n              title={edge?.node?.user.name}\n              description={edge?.node?.role?.name}\n              left={() =>\n                !edge?.node?.user?.image ? (\n                  <List.Icon icon=\"account\" />\n                ) : (\n                  <Avatar.Image\n                    source={{ uri: edge?.node?.user.image }}\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={32}\n                  />\n                )\n              }\n              right={() => (\n                <Checkbox.Android\n                  status={\n                    manifest.selectedUsers?.map(({ id }) => id).includes(edge?.node?.id || '')\n                      ? 'checked'\n                      : 'unchecked'\n                  }\n                />\n              )}\n              onPress={() =>\n                dispatch(\n                  actions.screens.manifest.setSelected(\n                    manifest.selectedUsers?.find(({ id }) => id === `${edge?.node?.id}`)\n                      ? manifest.selectedUsers?.filter(({ id }) => id !== `${edge?.node?.id}`)\n                      : [...manifest.selectedUsers, edge?.node as DropzoneUser]\n                  )\n                )\n              }\n            />\n            <Divider style={{ width: '100%' }} key={`divider-${edge?.node?.id}`} />\n          </>\n        ))}\n      </ScrollableScreen>\n      <FAB\n        style={styles.fab}\n        small\n        visible={manifest.selectedUsers.length > 0}\n        icon=\"check\"\n        onPress={() => {\n          dispatch(actions.forms.manifestGroup.setDropzoneUsers(manifest.selectedUsers));\n          navigation.setParams({ select: false });\n          dispatch(actions.screens.manifest.setSearchVisible(false));\n          dispatch(actions.screens.manifest.setSelected([]));\n          navigation.navigate('ManifestGroupScreen');\n        }}\n        label=\"Next\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nexport const QUERY_DROPZONE_USER_PROFILE = gql`\n  query QueryDropzoneUserProfile($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n\n        license {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n          image\n          rigs {\n            id\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n\n        slots {\n          edges {\n            node {\n              id\n              createdAt\n              load {\n                id\n                name\n                loadNumber\n                dispatchAt\n                createdAt\n              }\n              jumpType {\n                id\n                name\n              }\n              ticketType {\n                id\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_PROFILE, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser: dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { GlyphMap } from '@expo/vector-icons/build/createIconSet';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    [Permission.ActAsDzso]: 'shield-cross',\n    [Permission.ActAsGca]: 'radio-handheld',\n    [Permission.ActAsLoadMaster]: 'shield-account',\n    [Permission.ActAsPilot]: 'shield-airplane',\n    [Permission.ActAsRigInspector]: 'shield-search',\n  }[type];\n\n  const label = {\n    [Permission.ActAsDzso]: 'DZSO',\n    [Permission.ActAsGca]: 'GCA',\n    [Permission.ActAsLoadMaster]: 'Load Master',\n    [Permission.ActAsPilot]: 'Pilot',\n    [Permission.ActAsRigInspector]: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { RevokePermissionPayload } from '../schema';\n\nexport const MUTATION_REVOKE_PERMISSION = gql`\n  mutation RevokePermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    revokePermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  RevokePermissionPayload\n>(MUTATION_REVOKE_PERMISSION, {\n  getPayload: (result) => result.revokePermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { GrantPermissionPayload } from '../schema';\n\nexport const MUTATION_GRANT_PERMISSION = gql`\n  mutation GrantPermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n    grantPermission(input: { id: $dropzoneUserId, permission: $permissionName }) {\n      dropzoneUser {\n        id\n        permissions\n        user {\n          id\n          name\n        }\n        role {\n          id\n          name\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    dropzoneUserId: number;\n    permissionName: string;\n  },\n  GrantPermissionPayload\n>(MUTATION_GRANT_PERMISSION, {\n  getPayload: (result) => result.grantPermission,\n  validates: {\n    permissionName: [isRequired('Permission name is required')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport startOfDay from 'date-fns/startOfDay';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { QUERY_DROPZONE_USERS } from 'app/api/hooks/useQueryDropzoneUsers';\nimport { QUERY_PERMISSION_USER } from 'app/components/chips/GcaChip';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUser, Permission, Query } from 'app/api/schema.d';\n\nimport { QueryDropzoneDocument } from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport { QUERY_DROPZONE_USER_PROFILE } from 'app/api/hooks/useDropzoneUserProfile';\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useMutationRevokePermission from 'app/api/hooks/useMutationRevokePermission';\nimport useMutationGrantPermission from 'app/api/hooks/useMutationGrantPermission';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUser;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const revokePermission = useMutationRevokePermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission revoked' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QueryDropzoneDocument,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(dropzoneUser.id),\n          },\n        },\n      ],\n    },\n  });\n  const grantPermission = useMutationGrantPermission({\n    onSuccess: (payload) => {\n      dispatch(actions.notifications.showSnackbar({ message: 'Permission granted' }));\n    },\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    mutation: {\n      refetchQueries: [\n        {\n          query: QueryDropzoneDocument,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER_PROFILE,\n          variables: {\n            dropzoneId: state.currentDropzoneId,\n            dropzoneUserId: Number(dropzoneUser.id),\n          },\n        },\n      ],\n    },\n  });\n\n  const badges = permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const shouldShowBadge = (permission: Permission) =>\n    canGrantPermission || badges.includes(permission);\n\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revokePermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const updatedList = (c?.dropzone?.dropzoneUsers?.edges || []).filter(\n                          (edge) => edge?.node?.id !== dropzoneUser?.id\n                        );\n\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        });\n\n                        return {\n                          data: {\n                            ...c,\n                            dropzone: {\n                              ...c?.dropzone,\n                              dropzoneUsers: {\n                                edges: updatedList,\n                              },\n                            },\n                          },\n                        };\n                      },\n                    }\n                  )\n                : grantPermission.mutate(\n                    {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                    {\n                      refetchQueries: [\n                        {\n                          query: QUERY_DROPZONE_USERS,\n                          variables: {\n                            dropzoneId: state.currentDropzoneId,\n                            permissions: [permission],\n                          },\n                        },\n                      ],\n                      update: async (client, { data }) => {\n                        const c = client.readQuery<Query>({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            permissions: [permission],\n                            dropzoneId: Number(state.currentDropzoneId),\n                          },\n                        });\n\n                        const current = c?.dropzone?.dropzoneUsers?.edges || [];\n                        const shouldUpdate = !!current.find(\n                          (edge) => edge?.node?.id === dropzoneUser?.id\n                        );\n\n                        const updatedGcaList = shouldUpdate\n                          ? [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []).map((edge) =>\n                                edge?.node?.id !== dropzoneUser?.id\n                                  ? edge\n                                  : {\n                                      ...edge,\n                                      node: {\n                                        ...edge?.node,\n                                        ...data?.grantPermission?.dropzoneUser,\n                                      },\n                                    }\n                              ),\n                            ]\n                          : [\n                              ...(c?.dropzone?.dropzoneUsers?.edges || []),\n                              {\n                                node: data?.grantPermission?.dropzoneUser,\n                              },\n                            ];\n                        const newData = {\n                          ...c,\n                          dropzone: {\n                            ...c?.dropzone,\n                            dropzoneUsers: {\n                              edges: updatedGcaList,\n                            },\n                          },\n                        };\n                        client.writeQuery({\n                          query: QUERY_PERMISSION_USER,\n                          variables: {\n                            dropzoneId: Number(state.currentDropzoneId),\n                            permissions: [permission],\n                          },\n                          data: newData,\n                        });\n\n                        return {\n                          data: newData,\n                        };\n                      },\n                    }\n                  )\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\n\ninterface IDatepicker {\n  label: string;\n  timestamp: number;\n  disabled?: boolean;\n  onChange(timestamp: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, timestamp, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Menu\n        onDismiss={() => setOpen(false)}\n        visible={open}\n        anchor={\n          <List.Item\n            onPress={() => setOpen(true)}\n            disabled={!!disabled}\n            title={label}\n            description={timestamp ? format(timestamp * 1000, 'yyyy/MM/dd') : 'No date selected'}\n            left={() => <List.Icon icon=\"calendar\" />}\n          />\n        }\n      >\n        <DayPicker\n          selectedDays={timestamp ? [new Date(timestamp * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </Menu>\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Menu } from 'react-native-paper';\nimport { Query, UserRole } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\n\ninterface IRoleSelect {\n  value?: UserRole | null;\n  required?: boolean;\n  disabled?: boolean;\n  onSelect(jt: UserRole): void;\n}\n\nconst QUERY_ROLES = gql`\n  query RolesQuery($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles(selectable: true) {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const { onSelect, disabled, required, value } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useQuery<Query>(QUERY_ROLES, {\n    variables: {\n      dropzoneId: Number(currentDropzoneId),\n    },\n  });\n  return (\n    <>\n      <List.Subheader style={{ paddingLeft: 0 }}>Access level</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={!disabled && isMenuOpen}\n        anchor={\n          <List.Item\n            left={() => <List.Icon icon=\"lock\" />}\n            onPress={\n              disabled\n                ? undefined\n                : () => {\n                    setMenuOpen(true);\n                  }\n            }\n            title={value?.name?.replace('_', ' ')?.toUpperCase() || 'Access level'}\n            description={!required ? 'Optional' : null}\n          />\n        }\n      >\n        {data?.dropzone?.roles?.map((role) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(role);\n            }}\n            title={role.name?.replace('_', ' ').toUpperCase() || '-'}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n        required\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { gql, useApolloClient, useMutation } from '@apollo/client';\nimport PermissionBadges from 'app/screens/authenticated/profile/UserInfo/PermissionBadges';\nimport * as React from 'react';\nimport { Button, Dialog, List, Portal, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Mutation, Permission } from 'app/api/schema.d';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { DropzoneUserProfileFragmentDoc } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUser): void;\n}\n\nconst MUTATION_EDIT_DROPZONE_USER = gql`\n  mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n    updateDropzoneUser(\n      input: { id: $dropzoneUserId, attributes: { userRoleId: $userRoleId, expiresAt: $expiresAt } }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      dropzoneUser {\n        id\n        credits\n        expiresAt\n        role {\n          id\n          name\n        }\n\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const client = useApolloClient();\n  const getCachedUser = React.useCallback(\n    () =>\n      !state.original\n        ? null\n        : client.readFragment<DropzoneUserProfileFragment>({\n            fragment: DropzoneUserProfileFragmentDoc,\n            id: client.cache.identify(state.original!),\n          }),\n    [client, state.original]\n  );\n  const [mutationUpdateDropzoneUser, createData] = useMutation<Mutation>(\n    MUTATION_EDIT_DROPZONE_USER\n  );\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        props.onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    props,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open}>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n        <Dialog.Content>\n          <DropzoneUserForm />\n          {state.original && getCachedUser() ? (\n            <>\n              <List.Subheader style={{ paddingLeft: 0 }}>Acting permissions</List.Subheader>\n              <PermissionBadges\n                dropzoneUser={getCachedUser() as DropzoneUser}\n                permissions={\n                  (getCachedUser() as DropzoneUser).permissions?.filter((name) =>\n                    /^actAs/.test(name)\n                  ) as Permission[]\n                }\n              />\n            </>\n          ) : null}\n        </Dialog.Content>\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.dropzoneUser.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, HelperText, Divider, DataTable } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport { TransactionType } from '../../../api/schema.d';\nimport NumberField from '../../input/number_input/NumberField';\n\nexport default function CreditsForm() {\n  const state = useAppSelector((root) => root.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = state.original?.credits || 0;\n  const amount = state.fields.amount.value || 0;\n\n  const subtotal =\n    state.fields.transactionType.value === TransactionType.Deposit\n      ? amount + currentCredits\n      : amount - currentCredits;\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Message\"\n        error={!!state.fields.message.error}\n        value={state.fields.message.value?.toString() || ''}\n        onChangeText={(newValue: string) =>\n          dispatch(actions.forms.credits.setField(['message', newValue]))\n        }\n      />\n      <HelperText type={state.fields.message.error ? 'error' : 'info'}>\n        {state.fields.message.error || ''}\n      </HelperText>\n      {state.fields.transactionType.value === 'deposit' ? (\n        <View>\n          <NumberField\n            label=\"Add amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Deposit</DataTable.Title>\n              <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      ) : (\n        <View>\n          <NumberField\n            label=\"Withdraw amount\"\n            error={!!state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.credits.setField(['amount', newValue]))\n            }\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Withdraw</DataTable.Title>\n              <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Button, Dialog, Portal, ProgressBar } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { useCreateOrderMutation } from '../../../api/reflection';\nimport { DropzoneUser, TransactionType, WalletableTypes } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsForm from '../../forms/credits/CreditsForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUser;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.credits);\n  const globalState = useAppSelector((root) => root.global);\n  const [mutationCreateOrder, createData] = useCreateOrderMutation();\n  const global = useAppSelector((root) => root.global);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(actions.forms.credits.setFieldError(['amount', 'You must specify an amount']));\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.amount.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n\n    if (!dropzoneUser?.id || state.fields.amount.value === null || !global.currentDropzoneId) {\n      return;\n    }\n\n    try {\n      const response = await mutationCreateOrder({\n        variables: {\n          amount: state.fields.amount.value,\n          title:\n            state.fields.message.value ||\n            `${\n              state.fields.transactionType.value === TransactionType.Deposit\n                ? 'Added funds'\n                : 'Withdrew funds'\n            }`,\n          seller:\n            state.fields.transactionType.value !== TransactionType.Deposit\n              ? {\n                  type: WalletableTypes.Dropzone,\n                  id: `${global.currentDropzoneId}`,\n                }\n              : {\n                  type: WalletableTypes.DropzoneUser,\n                  id: dropzoneUser.id,\n                },\n          buyer:\n            state.fields.transactionType.value === TransactionType.Deposit\n              ? {\n                  type: WalletableTypes.Dropzone,\n                  id: `${global.currentDropzoneId}`,\n                }\n              : {\n                  type: WalletableTypes.DropzoneUser,\n                  id: dropzoneUser.id,\n                },\n          dropzoneId: Number(global.currentDropzoneId),\n        },\n      });\n      const { data: result } = response;\n\n      result?.createOrder?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'amount':\n            return dispatch(actions.forms.credits.setFieldError(['amount', message]));\n          case 'message':\n            return dispatch(actions.forms.credits.setFieldError(['message', message]));\n          case 'status':\n            return dispatch(actions.forms.credits.setFieldError(['status', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.createOrder?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.createOrder?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.createOrder?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        props.onSuccess();\n      }\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    validate,\n    dropzoneUser?.id,\n    state.fields.amount.value,\n    state.fields.message.value,\n    state.fields.transactionType.value,\n    global.currentDropzoneId,\n    mutationCreateOrder,\n    dispatch,\n    props,\n  ]);\n\n  return (\n    <Portal>\n      <Dialog visible={!!open} style={{ maxWidth: 500, alignSelf: 'center' }}>\n        <View>\n          <Tabs\n            defaultIndex={0} // default = 0\n            onChangeIndex={(newIndex) => {\n              dispatch(\n                actions.forms.credits.setField([\n                  'transactionType',\n                  newIndex === 1 ? 'withdrawal' : 'deposit',\n                ])\n              );\n            }}\n            mode=\"fixed\"\n          >\n            <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n              <View />\n            </TabScreen>\n            <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n              <View />\n            </TabScreen>\n          </Tabs>\n        </View>\n        <ProgressBar\n          indeterminate\n          visible={createData.loading}\n          color={globalState.theme.colors.accent}\n        />\n        <Dialog.Content>\n          <CreditsForm />\n        </Dialog.Content>\n\n        <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n          <Button\n            onPress={() => {\n              dispatch(actions.forms.credits.reset());\n              onClose();\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button onPress={onSave}>Save</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('Manufacturer is required')],\n    model: [isRequired('Model is required')],\n    serial: [isRequired('Serial number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'You can give your equipment a nickname'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Make\"\n        error={!!state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n      <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n        {state.fields.make.error || 'e.g Javelin, Mirage'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Model\"\n        error={!!state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Serial\"\n        error={!!state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n      <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n        {state.fields.serial.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Current canopy size\"\n        error={!!state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.canopySize.error ? 'error' : 'info'}>\n        {state.fields.canopySize.error || 'Size of canopy in container'}\n      </HelperText>\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          selected={[state.fields.rigType?.value || 'sport']}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField(['rigType', rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateRig.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    } else {\n      await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { License, Query } from '../../../api/schema.d';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: License | null;\n  federationId?: number | null;\n  onSelect(jt: License): void;\n}\n\nconst QUERY_LICENSES = gql`\n  query Licenses($federationId: Int) {\n    licenses(federationId: $federationId) {\n      id\n      name\n\n      federation {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useQuery<Query>(QUERY_LICENSES, {\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<License>\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        selected={[value].filter(Boolean) as License[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { List, Menu, TextInput } from 'react-native-paper';\nimport { Federation, Query } from '../../../api/schema.d';\n\ninterface IFederationSelect {\n  value?: Federation | null;\n  onSelect(jt: Federation): void;\n}\n\nconst QUERY_FEDERATIONS = gql`\n  query Federations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\nexport default function FederationSelect(props: IFederationSelect) {\n  const { value, onSelect } = props;\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n\n  const { data } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onSelect(data.federations[0]);\n    }\n  }, [data?.federations, onSelect, value]);\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={isMenuOpen}\n        anchor={\n          <TouchableOpacity\n            onPress={() => {\n              setMenuOpen(true);\n            }}\n          >\n            <TextInput\n              mode=\"outlined\"\n              disabled\n              style={{ minWidth: 200 }}\n              value={value?.name || 'Please select federation'}\n            />\n          </TouchableOpacity>\n        }\n      >\n        {data?.federations?.map((federation) => (\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              onSelect(federation);\n            }}\n            title={federation.name || '-'}\n            key={`federation-select-${federation.id}`}\n          />\n        ))}\n      </Menu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(actions.forms.user.setField(['exitWeight', state.original.exitWeight || '60']));\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Nickname\"\n        error={!!state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Phone\"\n        error={!!state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        onChangeText={(num) =>\n          dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))\n        }\n        label=\"Exit weight (kg)\"\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\nimport useCurrentDropzone from './useCurrentDropzone';\n\nexport const QUERY_DROPZONE_USER = gql`\n  query QueryDropzoneUser($dropzoneId: Int!, $dropzoneUserId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUser(id: $dropzoneUserId) {\n        id\n        credits\n        expiresAt\n        permissions\n\n        role {\n          id\n          name\n        }\n        rigInspections {\n          id\n          isOk\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          rig {\n            id\n          }\n        }\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n            }\n          }\n        }\n\n        orders {\n          edges {\n            node {\n              id\n              state\n              createdAt\n              amount\n              title\n              buyer {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              seller {\n                __typename\n                ... on DropzoneUser {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                }\n                ... on Dropzone {\n                  id\n                  name\n                }\n              }\n              item {\n                title\n                cost\n\n                ... on Slot {\n                  id\n\n                  ticketType {\n                    id\n                    name\n                    cost\n                  }\n\n                  extras {\n                    id\n                    name\n                    cost\n                  }\n                }\n                ... on TicketType {\n                  id\n                }\n                ... on Extra {\n                  id\n                  name\n                }\n              }\n              receipts {\n                id\n                transactions {\n                  id\n                  transactionType\n                  status\n                  createdAt\n                  amount\n                  message\n                  sender {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                  receiver {\n                    ... on DropzoneUser {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                    ... on Dropzone {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        license {\n          id\n          name\n        }\n        user {\n          id\n          name\n          nickname\n          exitWeight\n          email\n          phone\n          image\n          moderationRole\n          rigs {\n            id\n            packingCard\n            name\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n            federation {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id?: number) {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const currentDropzone = useCurrentDropzone();\n\n  const dropzoneUser = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER, {\n    variables: {\n      dropzoneId,\n      dropzoneUserId: id || Number(currentDropzone?.data?.dropzone?.currentUser?.id),\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser:\n      !id || id === Number(currentDropzone?.data?.dropzone?.currentUser?.id)\n        ? currentDropzone?.data?.dropzone?.currentUser\n        : dropzoneUser?.data?.dropzone?.dropzoneUser,\n  };\n}\n","import * as React from 'react';\nimport { startOfDay } from 'date-fns';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { QUERY_DROPZONE_USER } from '../../api/hooks/useDropzoneUser';\nimport { useJoinFederationMutation, QueryDropzoneDocument } from '../../api/reflection';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId: number;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const currentDropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [joinFederation] = useJoinFederationMutation();\n  const currentDropzone = useCurrentDropzone();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Profile has been updated`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    mutation: {\n      refetchQueries: [\n        {\n          query: QueryDropzoneDocument,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n          },\n        },\n        {\n          query: QUERY_DROPZONE_USER,\n          variables: {\n            dropzoneId: currentDropzoneId,\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      id: Number(state.original?.id),\n      name: state.fields.name.value,\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    if (\n      (state.fields.license.value?.id &&\n        state.original?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !==\n          state.original?.userFederations?.find(\n            ({ federation }) => federation.id === currentDropzone.dropzone?.federation?.id\n          )?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federationId: Number(state.fields.license.value?.federation?.id),\n          uid: state.fields?.apfNumber?.value,\n          licenseId: state.fields.license.value?.id ? Number(state.fields.license.value?.id) : null,\n        },\n      });\n    }\n  }, [\n    currentDropzone.dropzone?.federation?.id,\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.license?.id,\n    state.original?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Menu,\n  Paragraph,\n  Title,\n  TouchableRipple,\n} from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport useRestriction from '../../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../../state';\nimport { DropzoneUser, Permission } from '../../../../api/schema.d';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUser;\n  canEdit?: boolean;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n  onEdit?(): void;\n}\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, onEdit, canEdit, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.actions}>\n        {!canEdit ? null : (\n          <IconButton\n            icon=\"pencil\"\n            size={20}\n            color={theme.colors.onSurface}\n            onPress={() => (onEdit ? onEdit() : null)}\n          />\n        )}\n      </View>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3 }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            {!dropzoneUser?.user?.image ? (\n              <Avatar.Icon size={80} icon=\"account\" />\n            ) : (\n              <Avatar.Image\n                size={80}\n                source={{ uri: dropzoneUser?.user.image }}\n                style={{ backgroundColor: palette.primary.light }}\n              />\n            )}\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            onDismiss={() => setContactOpen(false)}\n            visible={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <Menu.Item\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Slot } from '../../../api/schema';\n\ninterface ISlot {\n  slot: Slot;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 0,\n              right: 8,\n            }}\n          >\n            {format((slot?.load?.dispatchAt || slot.createdAt) * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`Load #${slot.load.loadNumber}`}\n            description={slot.ticketType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text style={[styles.jumpType, { color: theme.colors.onSurface }]}>\n                  {slot.jumpType?.name}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  flex: 1,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <MaterialCommunityIcons\n                  color={theme.colors.text}\n                  name=\"parachute-outline\"\n                  size={36}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  jumpType: { fontSize: 24, marginLeft: 4, fontWeight: '100', textAlign: 'center' },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 4, paddingBottom: 4 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { useMutation } from '@apollo/client';\nimport * as React from 'react';\nimport { Platform, RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Card, Divider, List, ProgressBar } from 'react-native-paper';\nimport gql from 'graphql-tag';\nimport * as ImagePicker from 'expo-image-picker';\nimport Skeleton from 'react-native-skeleton-content';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Mutation, Permission } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from 'app/components/dialogs/CreditsDialog/Credits';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\n// eslint-disable-next-line max-len\nimport useDropzoneUserProfile from 'app/api/hooks/useDropzoneUserProfile';\nimport useRestriction from 'app/hooks/useRestriction';\n\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\nimport PermissionBadges from './UserInfo/PermissionBadges';\n\nimport SlotCard from './SlotCard';\n\nconst MUTATION_UPDATE_IMAGE = gql`\n  mutation UpdateUserImage($id: Int, $image: String) {\n    updateUser(input: { id: $id, attributes: { image: $image } }) {\n      user {\n        id\n        name\n        exitWeight\n        email\n        image\n        phone\n        rigs {\n          id\n          name\n          model\n          make\n          serial\n          canopySize\n        }\n        jumpTypes {\n          id\n          name\n        }\n        userFederations {\n          id\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const isSelf = currentUser?.id === route.params.userId;\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUserProfile(\n    Number(route.params.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const [mutationUpdateUser] = useMutation<Mutation>(MUTATION_UPDATE_IMAGE);\n\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      // Upload image\n      await mutationUpdateUser({\n        variables: {\n          id: Number(dropzoneUser?.user?.id),\n          image: `data:image/jpeg;base64,${result.base64}`,\n        },\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.user?.id, mutationUpdateUser]);\n\n  const badges = dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || [];\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const windowDimensions = useWindowDimensions();\n  const wrappingHeaderItemWidth =\n    windowDimensions.width > 600 ? windowDimensions.width / 2 : windowDimensions.width;\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      <ScrollableScreen\n        style={{ backgroundColor: state.theme.colors.background }}\n        contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n      >\n        <View style={styles.wrappingHeader}>\n          <View style={{ width: wrappingHeaderItemWidth }}>\n            {!dropzoneUser ? (\n              <Skeleton\n                key=\"profile-header\"\n                containerStyle={{\n                  height: 256,\n                  width: '100%',\n                }}\n                isLoading\n                layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n              />\n            ) : (\n              <Header\n                dropzoneUser={dropzoneUser}\n                canEdit={isSelf}\n                onEdit={() => {\n                  if (dropzoneUser?.user) {\n                    dispatch(actions.forms.user.setOpen(dropzoneUser));\n                  }\n                }}\n                onPressAvatar={onPickImage}\n              >\n                <PermissionBadges {...{ dropzoneUser, permissions: badges }} />\n                <InfoGrid\n                  style={{ height: 80 }}\n                  items={[\n                    {\n                      title: 'Funds',\n                      value: `$${dropzoneUser?.credits || 0}`,\n                      onPress: () => {\n                        if (dropzoneUser && canAddTransaction) {\n                          dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                        }\n                      },\n                    },\n                    {\n                      title: 'License',\n                      value: `${dropzoneUser?.license?.name || '-'}`,\n                    },\n                    {\n                      title: 'Exit weight',\n                      value: Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                    },\n                  ]}\n                />\n                <Divider style={styles.divider} />\n              </Header>\n            )}\n          </View>\n          <View style={{ width: wrappingHeaderItemWidth }}>\n            {windowDimensions.width === wrappingHeaderItemWidth ? (\n              <List.Subheader>Manage</List.Subheader>\n            ) : null}\n            <Card\n              style={{\n                minHeight: windowDimensions.width === wrappingHeaderItemWidth ? undefined : 256,\n                paddingTop: 8,\n              }}\n              elevation={1}\n            >\n              {isSelf ? (\n                <>\n                  <List.Item\n                    style={{ width: '100%', padding: 0 }}\n                    title=\"Setup Wizard\"\n                    left={() => <List.Icon icon=\"account-convert\" />}\n                    right={() => <List.Icon icon=\"chevron-right\" />}\n                    onPress={() => {\n                      if (dropzoneUser) {\n                        dispatch(actions.forms.user.setOriginal(dropzoneUser));\n                        if (dropzoneUser?.user?.rigs?.length) {\n                          dispatch(actions.forms.rig.setOriginal(dropzoneUser.user.rigs[0]));\n                        }\n                        navigation.navigate('UserSetupWizard');\n                      }\n                    }}\n                  />\n                  <Divider style={{ width: '100%' }} />\n                </>\n              ) : null}\n              {canUpdateUsers ? (\n                <>\n                  <List.Item\n                    style={{ width: '100%', padding: 0 }}\n                    title=\"Access and Membership\"\n                    left={() => <List.Icon icon=\"lock\" />}\n                    onPress={() =>\n                      dropzoneUser\n                        ? dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser))\n                        : null\n                    }\n                  />\n                  <Divider style={{ width: '100%' }} />\n                </>\n              ) : null}\n              {isSelf || canViewOthersTransactions ? (\n                <>\n                  <List.Item\n                    style={{ width: '100%', padding: 0 }}\n                    title=\"Transactions\"\n                    left={() => <List.Icon icon=\"cash\" />}\n                    right={() => <List.Icon icon=\"chevron-right\" />}\n                    onPress={() =>\n                      navigation.navigate('TransactionsScreen', { userId: dropzoneUser?.id })\n                    }\n                  />\n                  <Divider style={{ width: '100%' }} />\n                </>\n              ) : null}\n              <List.Item\n                style={{ width: '100%', padding: 0 }}\n                title=\"Equipment\"\n                left={() => <List.Icon icon=\"parachute\" />}\n                right={() => <List.Icon icon=\"chevron-right\" />}\n                onPress={() => navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id })}\n              />\n            </Card>\n          </View>\n        </View>\n        <View style={{ width: '100%' }}>\n          <List.Subheader>History</List.Subheader>\n          <Card style={{ margin: 8, marginHorizontal: 0 }} elevation={1}>\n            {dropzoneUser?.slots?.edges?.map((edge) =>\n              edge?.node ? (\n                <SlotCard\n                  slot={edge.node}\n                  onPress={() => {\n                    navigation.navigate('LoadScreen', { load: edge.node });\n                  }}\n                />\n              ) : null\n            )}\n          </Card>\n        </View>\n      </ScrollableScreen>\n\n      <RigDialog\n        onClose={onCloseRigForm}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n\n      <DropzoneUserDialog\n        onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n        onSuccess={(user) => {\n          dispatch(actions.forms.dropzoneUser.setOpen(false));\n          if (currentUser?.id === dropzoneUser?.id) {\n            dispatch(actions.global.setUser(user.user));\n            refetch();\n          }\n        }}\n        open={forms.dropzoneUser.open}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n\n      <EditUserSheet\n        dropzoneUserId={Number(dropzoneUser?.id)}\n        onClose={onUserSheetClose}\n        onSuccess={() => {\n          dispatch(actions.forms.user.setOpen(false));\n        }}\n        open={forms.user.open}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useAppSelector } from '../../state';\nimport { Query } from '../schema';\n\nconst QUERY_DROPZONE_USER_NOTIFICATIONS = gql`\n  query QueryNotifications($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      currentUser {\n        id\n\n        notifications {\n          edges {\n            node {\n              id\n              message\n              notificationType\n              createdAt\n              sentBy {\n                id\n                user {\n                  id\n                  name\n                }\n              }\n\n              resource {\n                ... on Load {\n                  id\n                  loadNumber\n                  dispatchAt\n                  state\n                }\n                ... on Transaction {\n                  id\n                  amount\n                  message\n                  status\n                }\n\n                ... on Slot {\n                  id\n                  load {\n                    id\n                    loadNumber\n                    dispatchAt\n                    state\n                  }\n                }\n\n                ... on Rig {\n                  id\n                  user {\n                    id\n                    name\n                  }\n                  rigInspections(dropzoneId: $dropzoneId) {\n                    id\n                    createdAt\n                    inspectedBy {\n                      id\n                      user {\n                        id\n                        name\n                      }\n                    }\n                  }\n                }\n\n                ... on RigInspection {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Returns current user if no ID is provided\nexport default function useNotifications() {\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n\n  const query = useQuery<Pick<Query, 'dropzone'>>(QUERY_DROPZONE_USER_NOTIFICATIONS, {\n    variables: {\n      dropzoneId,\n    },\n    pollInterval: 30000,\n  });\n\n  return {\n    ...query,\n    notifications: query?.data?.dropzone?.currentUser.notifications,\n  };\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from '../../../../state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: number;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(timestamp * 1000, { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Slot } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: (notification.resource as Slot).load },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useNavigation } from '@react-navigation/native';\nimport { Load, Notification } from '../../../../api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { load: notification.resource as Load },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport NotificationCard from './NotificationCard';\nimport { Notification, Rig } from '../../../../api/schema';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('RigInspectionScreen', {\n              rig: (notification.resource as Rig).id,\n              dropzoneUserId: (notification.resource as Rig).user?.id,\n            })\n          : navigation.navigate('Manifest', {\n              screen: 'Profile',\n              params: {\n                screen: 'ProfileScreen',\n              },\n            })\n      }\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from '../../../../api/schema';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport NotificationCard from './NotificationCard';\nimport { Notification } from '../../../../api/schema.d';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from '../../../state';\nimport useNotifications from '../../../api/hooks/useNotifications';\nimport { NotificationType } from '../../../api/schema.d';\nimport NoResults from '../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\n/* const MUTATION_MARK_AS_SEEN = gql`\n  mutation MarkAsSeen($id: Int) {\n    updateNotification(input: { id: $id, attributes: { isSeen: true } }) {\n      notification {\n        id\n        isSeen\n        message\n        notificationType\n        receivedBy {\n          notifications {\n            edges {\n              node {\n                id\n                message\n                isSeen\n                notificationType\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n*/\n\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { notifications, loading, refetch } = useNotifications();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n      {notifications?.edges?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n        </View>\n      )}\n      <FlatList\n        data={notifications?.edges}\n        numColumns={1}\n        style={{\n          flex: 1,\n        }}\n        renderItem={({ item: edge }) => {\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return <BoardingCallNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.UserManifested:\n              return <ManifestedCard key={edge.node.id} notification={edge.node} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return <RigInspectionNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return <PermissionNotification key={edge.node.id} notification={edge.node} />;\n            case NotificationType.PublicationRequested:\n              return <PublicationRequestNotification key={edge.node.id} notification={edge.node} />;\n            default:\n              return null;\n          }\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string;\n  name: string;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text label={initals} {...rest} />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      style={{ alignSelf: 'center', marginHorizontal: 12 }}\n      size={32}\n      {...rest}\n    />\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Dropzone, DropzoneUser, Order } from '../../../api/schema';\nimport UserAvatar from '../../../components/UserAvatar';\n\ninterface IOrder {\n  order: Order;\n  dropzoneUser?: DropzoneUser | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    (order.buyer?.__typename === 'DropzoneUser' && (order.buyer as DropzoneUser))?.id ===\n    dropzoneUser?.id\n      ? 'cash-minus'\n      : 'cash-plus';\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Card.Content style={styles.orderContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {format(order?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            title={`#${order.id} ${order.title}`}\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            descriptionStyle={styles.orderDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                {showAvatar ? (\n                  <UserAvatar\n                    style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                    size={30}\n                    name={\n                      (order?.buyer as DropzoneUser)?.user?.name ||\n                      (order?.buyer as Dropzone).name ||\n                      ''\n                    }\n                    image={\n                      (order?.buyer as DropzoneUser).user?.image ||\n                      (order?.buyer as Dropzone).banner ||\n                      undefined\n                    }\n                  />\n                ) : (\n                  <MaterialCommunityIcons\n                    color={\n                      // eslint-disable-next-line no-underscore-dangle\n                      '__typename' in order.buyer &&\n                      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                      // @ts-ignore\n                      order.buyer.__typename === 'DropzoneUser' &&\n                      (order.buyer as DropzoneUser)?.id === dropzoneUser?.id\n                        ? '#FF1414'\n                        : successColor\n                    }\n                    name={icon}\n                    size={36}\n                    style={{ marginHorizontal: 16 }}\n                  />\n                )}\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  ${order.amount}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet, Platform } from 'react-native';\nimport { Avatar, Card, Chip, Divider, Menu, ProgressBar, useTheme } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/core';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nimport useMutationUpdateRig from '../../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { errorColor, successColor } from '../../../constants/Colors';\n\nimport { DropzoneUser, Permission, Rig, RigInspection } from '../../../api/schema.d';\n\nexport interface IRigCardProps {\n  rig: Rig;\n  dropzoneUser?: DropzoneUser | null;\n  rigInspection?: RigInspection;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      dispatch(\n        actions.notifications.showSnackbar({ message: 'Image uploaded', variant: 'success' })\n      );\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'Upload failed', variant: 'error' }));\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          console.error('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.1,\n        base64: true,\n      })) as { base64: string };\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result.base64}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.user?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          onDismiss={() => setPackingCardMenuOpen(false)}\n          visible={isPackingCardMenuOpen}\n          style={{ marginTop: 12 }}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <Menu.Item\n            title=\"Upload new\"\n            icon=\"camera\"\n            style={{ paddingVertical: 0 }}\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <Menu.Item\n                title=\"View\"\n                icon=\"eye\"\n                style={{ paddingVertical: 0 }}\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rig,\n              dropzoneUserId: Number(dropzoneUser?.id),\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Permission } from '../../../api/schema.d';\nimport RigDialog from '../../../components/dialogs/Rig';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigCard from './RigCard';\n\nexport default function ProfileScreen() {\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const navigation = useNavigation();\n\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/);\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        style={styles.fab}\n        visible={canUpdateUser}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { List, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const { data } = useCurrentDropzone();\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  return (\n    <ScrollableScreen>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            onPress={() =>\n              navigation.navigate('UpdateDropzoneScreen', {\n                dropzone: data?.dropzone,\n              })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n        <List.Item\n          title=\"Permissions\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() => navigation.navigate('DropzonePermissionScreen')}\n        />\n        <List.Item\n          title=\"Aircrafts\"\n          onPress={() => navigation.navigate('PlanesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() => navigation.navigate('DropzoneRigsScreen')}\n        />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() => navigation.navigate('RigInspectionTemplateScreen')}\n        />\n        <List.Item\n          title=\"Master Log\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          description=\"View historic data for daily operations\"\n          onPress={() => navigation.navigate('DropzoneMasterLogScreen')}\n        />\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          title=\"Ticket types\"\n          onPress={() => navigation.navigate('TicketTypesScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <List.Item\n          title=\"Ticket add-ons\"\n          onPress={() => navigation.navigate('ExtrasScreen')}\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { MutationCreateTicketTypeArgs, CreateTicketPayload } from '../schema';\n\nconst MUTATION_CREATE_TICKET_TYPE = gql`\n  mutation CreateTicketType(\n    $name: String\n    $cost: Float\n    $dropzoneId: Int!\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    createTicketType(\n      input: {\n        attributes: {\n          name: $name\n          cost: $cost\n          dropzoneId: $dropzoneId\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extraIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  MutationCreateTicketTypeArgs['input']['attributes'],\n  CreateTicketPayload\n>(MUTATION_CREATE_TICKET_TYPE, {\n  getPayload: (result) => result.createTicketType,\n  fieldErrorMap: {\n    extraIds: 'extras',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price')],\n    altitude: [isRequired('Altitude must be specified'), isNumeric('Altitude must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateTicketTypeArgs, UpdateTicketPayload } from '../schema';\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketType(\n    $id: Int!\n    $name: String\n    $cost: Float\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    updateTicketType(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          cost: $cost\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extraIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateTicketTypeArgs['input']['attributes'],\n  UpdateTicketPayload\n>(MUTATION_UPDATE_TICKET_TYPE, {\n  getPayload: (result) => result.updateTicketType,\n  fieldErrorMap: {\n    id: 'original',\n    extraIds: 'extras',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, Menu, List, Divider } from 'react-native-paper';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Extra, Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nconst QUERY_EXTRAS = gql`\n  query QueryExtras($dropzoneId: Int!) {\n    extras(dropzoneId: $dropzoneId) {\n      id\n      cost\n      name\n\n      ticketTypes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst ALTITUDE_LABEL_MAP: { [key: string]: string } = {\n  '14000': 'Height',\n  '4000': 'Hop n Pop',\n};\n\nexport default function TicketTypeForm() {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const { data } = useQuery<Query>(QUERY_EXTRAS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ticketType.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || 'Name of the ticket users will see'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ticketType.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || 'Base cost without extra ticket addons'}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <Menu\n          onDismiss={() => setAltitudeMenuOpen(false)}\n          visible={altitudeMenuOpen}\n          style={{ position: 'absolute', right: '10%', left: '10%', flex: 1 }}\n          anchor={\n            <List.Item\n              onPress={() => {\n                setAltitudeMenuOpen(true);\n              }}\n              title={\n                state.fields.altitude.value &&\n                state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                  ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                  : 'Custom'\n              }\n              style={{ width: '100%', flex: 1 }}\n              right={() => (\n                <List.Icon\n                  icon={\n                    state.fields.altitude.value &&\n                    state.fields.altitude.value.toString() in ALTITUDE_LABEL_MAP\n                      ? ALTITUDE_LABEL_MAP[state.fields.altitude.value.toString()]\n                      : 'pencil-plus'\n                  }\n                />\n              )}\n            />\n          }\n        >\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Hop n Pop\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Height\"\n            right={() => <List.Icon icon=\"airplane-takeoff\" />}\n          />\n          <List.Item\n            onPress={() => {\n              dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n              setAltitudeMenuOpen(false);\n            }}\n            title=\"Other\"\n            right={() => <List.Icon icon=\"parachute\" />}\n          />\n        </Menu>\n\n        {(!state.fields.altitude.value || ![4000, 14000].includes(state.fields.altitude.value)) && (\n          <TextInput\n            style={styles.field}\n            mode=\"outlined\"\n            label=\"Custom altitude\"\n            error={!!state.fields.altitude.error}\n            value={state.fields.altitude?.value?.toString()}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n            }\n          />\n        )}\n\n        <Checkbox.Item\n          label=\"Tandem\"\n          style={{ width: '100%' }}\n          status={state.fields.isTandem.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.ticketType.setField(['isTandem', !state.fields.isTandem.value]))\n          }\n        />\n        <HelperText type={state.fields.isTandem.error ? 'error' : 'info'}>\n          {state.fields.isTandem.error ||\n            'Allow also manifesting a passenger when using this ticket type'}\n        </HelperText>\n\n        <Checkbox.Item\n          label=\"Public manifesting\"\n          style={{ width: '100%' }}\n          status={state.fields.allowManifestingSelf.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(\n              actions.forms.ticketType.setField([\n                'allowManifestingSelf',\n                !state.fields.allowManifestingSelf.value,\n              ])\n            )\n          }\n        />\n\n        <HelperText type={state.fields.allowManifestingSelf.error ? 'error' : 'info'}>\n          {state.fields.allowManifestingSelf.error ||\n            'Allow users to manifest themselves with this ticket'}\n        </HelperText>\n\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        {data?.extras.map((extra) => (\n          <Checkbox.Item\n            key={`extra-${extra.id}`}\n            label={extra.name || ''}\n            status={\n              state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.ticketType.setField([\n                  'extras',\n                  state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                    ? state.fields.extras.value?.filter(({ id }) => id !== extra.id)\n                    : [...(state.fields.extras?.value as Required<Extra[]>), extra],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useIsFocused } from '@react-navigation/core';\nimport useMutationCreateTicketType from '../../api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from '../../api/hooks/useMutationUpdateTicketType';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport TicketTypeForm from '../forms/ticket_type/TicketTypeForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { TicketTypeFields } from '../forms/ticket_type/slice';\n\ninterface ITicketTypeDialog {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n\n  const createTicketType = useMutationCreateTicketType({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Saved`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.ticketType.reset());\n      onClose();\n    },\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateTicketType = useMutationUpdateTicketType({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved`,\n            variant: 'success',\n          })\n        );\n        dispatch(actions.forms.ticketType.reset());\n        onClose();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (isFocused) {\n      dispatch(actions.forms.ticketType.reset());\n    }\n  }, [dispatch, isFocused]);\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateTicketType.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    } else {\n      await createTicketType.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    }\n  }, [\n    createTicketType,\n    currentDropzone?.dropzone?.id,\n    state.fields.allowManifestingSelf.value,\n    state.fields.altitude.value,\n    state.fields.cost.value,\n    state.fields.extras?.value,\n    state.fields.isTandem.value,\n    state.fields.name.value,\n    state.original?.id,\n    updateTicketType,\n  ]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket' : 'New ticket'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={() => {\n        onClose();\n      }}\n      loading={createTicketType.loading || updateTicketType.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useRoute } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport TicketTypesDialog from '../../../components/dialogs/TicketType';\nimport SwipeActions from '../../../components/layout/SwipeActions';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      ticketTypes {\n        id\n        cost\n        currency\n        name\n        altitude\n        allowManifestingSelf\n\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_TICKET_TYPE = gql`\n  mutation UpdateTicketTypePublic($id: Int!, $allowManifestingSelf: Boolean) {\n    updateTicketType(\n      input: { id: $id, attributes: { allowManifestingSelf: $allowManifestingSelf } }\n    ) {\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        isTandem\n        extras {\n          id\n          name\n          cost\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_DELETE_TICKET_TYPE = gql`\n  mutation DeleteTicketType($id: Int!) {\n    deleteTicketType(input: { id: $id }) {\n      ticketType {\n        id\n        dropzone {\n          id\n          ticketTypes {\n            id\n            cost\n            currency\n            name\n            altitude\n            allowManifestingSelf\n\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n      errors\n    }\n  }\n`;\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const form = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const { data, loading, refetch } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const route = useRoute();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n  const [mutationUpdateTicketType] = useMutation<Mutation>(MUTATION_UPDATE_TICKET_TYPE);\n  const [mutationDeleteTicketType] = useMutation<Mutation>(MUTATION_DELETE_TICKET_TYPE);\n\n  React.useEffect(() => {\n    if (route.name === 'TicketTypesScreen') {\n      refetch();\n    }\n  }, [refetch, route.name]);\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.ticketTypes?.map((ticketType) => (\n          <SwipeActions\n            rightAction={{\n              label: 'Delete',\n              backgroundColor: 'red',\n              onPress: async () => {\n                const { data: result } = await mutationDeleteTicketType({\n                  variables: { id: Number(ticketType.id) },\n                });\n\n                if (result?.deleteTicketType?.errors?.length) {\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: result?.deleteTicketType?.errors[0],\n                      variant: 'error',\n                    })\n                  );\n                }\n              },\n            }}\n          >\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setOpen(ticketType));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n              <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n              <DataTable.Cell numeric>\n                <Switch\n                  onValueChange={() => {\n                    mutationUpdateTicketType({\n                      variables: {\n                        id: Number(ticketType.id),\n                        allowManifestingSelf: !ticketType.allowManifestingSelf,\n                      },\n                    });\n                  }}\n                  value={!!ticketType.allowManifestingSelf}\n                />\n              </DataTable.Cell>\n            </DataTable.Row>\n          </SwipeActions>\n        ))}\n      </DataTable>\n\n      <FAB\n        style={styles.fab}\n        small\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.ticketType.setOpen(true))}\n        label=\"New ticket type\"\n      />\n      <TicketTypesDialog\n        open={form.open}\n        onClose={() => dispatch(actions.forms.ticketType.setOpen(false))}\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs, UpdateDropzonePayload } from '../schema';\n\nconst MUTATION_UPDATE_DROPZONE = gql`\n  mutation UpdateDropzone(\n    $id: Int!\n    $name: String!\n    $requestPublication: Boolean\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n    $isCreditSystemEnabled: Boolean\n    $isPublic: Boolean\n  ) {\n    updateDropzone(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          banner: $banner\n          lat: $lat\n          lng: $lng\n          requestPublication: $requestPublication\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          isCreditSystemEnabled: $isCreditSystemEnabled\n          isPublic: $isPublic\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n        primaryColor\n        secondaryColor\n        isCreditSystemEnabled\n\n        planes {\n          id\n          name\n        }\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  UpdateDropzonePayload\n>(MUTATION_UPDATE_DROPZONE, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\nimport SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={SliderComponent}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport color from 'color';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value.lng === null || value.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      defaultZoom={3}\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        props.onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, TextInput, HelperText, Card, List, Checkbox } from 'react-native-paper';\nimport { getDocumentAsync } from 'expo-document-picker';\nimport { useQuery, gql } from '@apollo/client';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport ColorPicker from '../../input/colorpicker';\nimport { Query } from '../../../api/schema';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport { warningColor } from '../../../constants/Colors';\n\nconst QUERY_FEDERATIONS = gql`\n  query QueryFederations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useQuery<Query>(QUERY_FEDERATIONS);\n  const { currentUser } = useCurrentDropzone();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = (await getDocumentAsync({\n        multiple: false,\n        type: 'image',\n      })) as { uri: string };\n\n      dispatch(actions.forms.dropzone.setField(['banner', result.uri as string]));\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch]);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Banner\" />\n          <Card.Cover\n            source={{\n              uri: state.fields.banner.value || 'https://picsum.photos/700',\n            }}\n            resizeMode=\"cover\"\n            style={{ width: '100%' }}\n          />\n          <Card.Actions style={{ justifyContent: 'flex-end' }}>\n            <Button onPress={onPickImage}>Upload</Button>\n          </Card.Actions>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n            <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            title={\n              state?.original?.requestPublication && !state.original?.isPublic\n                ? 'Awaiting review'\n                : 'Request Publication'\n            }\n            description={\n              state?.original?.requestPublication && !state.original?.isPublic\n                ? 'You will be contacted to verify the legitimacy of your dropzone before your dropzone is publicly available. This is to prevent illegitimate actors on the platform. Thank you for your patience and understanding.'\n                : 'Your dropzone will not be visible to other users until it is published. You can request a review to publish your dropzone, and may be contacted for verification on the email or phone number on your profile.'\n            }\n            descriptionNumberOfLines={10}\n            onPress={() => {\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'requestPublication',\n                  !state.fields.requestPublication?.value,\n                ])\n              );\n              if (state.fields.isPublic) {\n                dispatch(\n                  actions.forms.dropzone.setField(['isPublic', !state.fields.isPublic?.value])\n                );\n              }\n            }}\n            left={(iconProps) => {\n              const extraProps = {\n                icon: undefined as IconSource | undefined,\n                color: undefined as string | undefined,\n              };\n\n              if (state.fields.requestPublication?.value) {\n                extraProps.icon = 'upload';\n              }\n\n              if (state.original?.requestPublication && state.fields.requestPublication?.value) {\n                extraProps.color = warningColor;\n                extraProps.icon = 'progress-upload';\n              }\n\n              if (state.original?.isPublic && state.fields?.isPublic.value) {\n                extraProps.icon = 'check';\n              }\n\n              if (extraProps.icon) {\n                return <List.Icon {...iconProps} {...extraProps} />;\n              }\n              return <View style={{ width: 56, height: 56 }} />;\n            }}\n          />\n          {currentUser?.user?.moderationRole === 'administrator' &&\n          state?.original?.requestPublication ? (\n            <Card.Actions>\n              <Button\n                onPress={() => dispatch(actions.forms.dropzone.setField(['isPublic', false]))}\n              >\n                Decline\n              </Button>\n              <Button onPress={() => dispatch(actions.forms.dropzone.setField(['isPublic', true]))}>\n                Accept\n              </Button>\n            </Card.Actions>\n          ) : null}\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ProgressBar } from 'react-native-paper';\nimport { gql } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useMutationUpdateDropzone from '../../../api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { Dropzone } from '../../../api/schema';\nimport DropzoneForm from '../../../components/forms/dropzone/DropzoneForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{ key: string; name: string; params: { dropzone: Dropzone } }>();\n  const { dropzone } = route.params;\n  const navigation = useNavigation();\n\n  const { data, currentUser, loading } = useCurrentDropzone();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(data.dropzone));\n    }\n  }, [data?.dropzone, data?.dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n    onSuccess: (payload) => {\n      dispatch(\n        actions.global.setDropzone({\n          ...(globalState.currentDropzone || {}),\n          ...(payload.dropzone as Dropzone),\n        })\n      );\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Your settings have been saved`,\n          variant: 'success',\n        })\n      );\n      navigation.goBack();\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n      requestPublication,\n      isPublic,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federationId: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n          isPublic:\n            isPublic?.value !== undefined &&\n            currentUser?.user.moderationRole &&\n            currentUser?.user.moderationRole !== 'user'\n              ? !!isPublic?.value\n              : null,\n          requestPublication: !!requestPublication?.value,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n    return null;\n  }, [\n    state.fields,\n    dispatch,\n    mutationUpdateDropzone,\n    dropzone?.id,\n    currentUser?.user.moderationRole,\n  ]);\n\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.accent} visible={loading} />\n      <ScrollableScreen\n        style={{ backgroundColor: '#f4f5f5' }}\n        contentContainerStyle={styles.content}\n      >\n        <DropzoneForm loading={loading} />\n        <View style={styles.fields}>\n          <Button\n            mode=\"contained\"\n            disabled={mutationUpdateDropzone.loading}\n            onPress={onSave}\n            loading={mutationUpdateDropzone.loading}\n          >\n            Save\n          </Button>\n        </View>\n      </ScrollableScreen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: 500,\n    padding: 48,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { TextInput, HelperText } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function DropzoneForm() {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Registration\"\n        error={!!state.fields.registration.error}\n        value={state.fields.registration?.value || ''}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['registration', newValue]))\n        }\n      />\n      <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n        {state.fields.registration.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"hours\"\n        error={!!state.fields.hours.error}\n        value={state.fields.hours?.value?.toString()}\n        placeholder=\"Optional\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['hours', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.hours.error ? 'error' : 'info'}>\n        {state.fields.hours.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Min slots\"\n        error={!!state.fields.minSlots.error}\n        value={state.fields.minSlots.value?.toString()}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['minSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.minSlots.error ? 'error' : 'info'}>\n        {state.fields.minSlots.error || 'Minimum tickets required to send it'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Max slots\"\n        error={!!state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.plane.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.maxSlots.error ? 'error' : 'info'}>\n        {state.fields.maxSlots.error ||\n          'Maximum amount of jumpers who can be manifested on one load'}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    width: '100%',\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\n\nimport { Mutation } from '../../api/schema';\nimport PlaneForm from '../forms/plane/PlaneForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      plane {\n        ...plane\n\n        dropzone {\n          id\n          planes {\n            ...plane\n          }\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n  fragment plane on Plane {\n    id\n    name\n    registration\n    minSlots\n    maxSlots\n    hours\n    nextMaintenanceHours\n\n    dropzone {\n      id\n      name\n      planes {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n      }\n    }\n  }\n`;\n\ninterface IPlaneDialogProps {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function CreatePlaneScreen(props: IPlaneDialogProps) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  const [mutationCreatePlane, create] = useMutation<Mutation>(MUTATION_CREATE_PLANE);\n  const [mutationUpdatePlane, update] = useMutation<Mutation>(MUTATION_UPDATE_PLANE);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.registration.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['registration', 'Registration is too short']));\n    }\n\n    if (!state.fields.maxSlots.value) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['maxSlots', 'Max slots must be specified']));\n    }\n\n    return !hasError;\n  }, [\n    dispatch,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.registration.value,\n  ]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots, hours, nextMaintenanceHours } = state.fields;\n\n    const mutation = state.original?.id ? mutationUpdatePlane : mutationCreatePlane;\n\n    if (validate()) {\n      try {\n        const result = await mutation({\n          variables: {\n            ...(state.original?.id\n              ? { id: Number(state.original.id) }\n              : { dropzoneId: Number(currentDropzone?.dropzone?.id) }),\n            name: name.value,\n            registration: registration.value,\n            minSlots: minSlots.value,\n            maxSlots: maxSlots.value,\n            hours: hours.value,\n            nextMaintenanceHours: nextMaintenanceHours.value,\n          },\n        });\n\n        const payload = state.original?.id ? result?.data?.updatePlane : result?.data?.createPlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'hours':\n                return dispatch(actions.forms.plane.setFieldError(['hours', message]));\n              case 'next_maintenance_hours':\n                return dispatch(\n                  actions.forms.plane.setFieldError(['nextMaintenanceHours', message])\n                );\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n    onClose,\n    state.fields,\n    state.original?.id,\n    validate,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n  const onDialogClose = React.useCallback(() => {\n    onClose();\n    dispatch(actions.forms.plane.reset());\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSave}\n      loading={create.loading || update.loading}\n      onClose={onDialogClose}\n    >\n      <PlaneForm />\n    </DialogOrSheet>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PlaneDialog from '../../../components/dialogs/Plane';\nimport useRestriction from '../../../hooks/useRestriction';\nimport SwipeActions from '../../../components/layout/SwipeActions';\n\nconst QUERY_PLANES = gql`\n  query QueryPlanes($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      planes {\n        id\n        name\n        registration\n        hours\n        minSlots\n        maxSlots\n        nextMaintenanceHours\n        createdAt\n      }\n    }\n  }\n`;\n\nconst MUTATION_DELETE_PLANE = gql`\n  mutation DeletePlane($id: Int!) {\n    deletePlane(input: { id: $id }) {\n      errors\n      plane {\n        id\n        dropzone {\n          id\n          planes {\n            name\n            registration\n            hours\n            minSlots\n            maxSlots\n            nextMaintenanceHours\n            createdAt\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.forms.plane);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n    },\n  });\n\n  const [deletePlane] = useMutation<Mutation>(MUTATION_DELETE_PLANE);\n  const dispatch = useAppDispatch();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n\n  return (\n    <>\n      <ScrollableScreen\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n      >\n        <ProgressBar visible={loading} color={global.theme.colors.accent} />\n\n        {data?.dropzone?.planes?.length ? null : (\n          <NoResults\n            title=\"No planes?\"\n            subtitle=\"You need to have at least one plane to manifest loads\"\n          />\n        )}\n\n        {!data?.dropzone?.planes?.length ? null : (\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Name</DataTable.Title>\n              <DataTable.Title numeric>Registration</DataTable.Title>\n              <DataTable.Title numeric>Slots</DataTable.Title>\n            </DataTable.Header>\n            {data?.dropzone?.planes?.map((plane) => (\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: async () => {\n                    const { data: result } = await deletePlane({\n                      variables: { id: Number(plane.id) },\n                    });\n\n                    if (result?.deletePlane?.errors?.length) {\n                      dispatch(\n                        actions.notifications.showSnackbar({\n                          message: result.deletePlane.errors[0],\n                          variant: 'error',\n                        })\n                      );\n                    }\n                  },\n                }}\n              >\n                <DataTable.Row\n                  pointerEvents=\"none\"\n                  onPress={() => {\n                    dispatch(actions.forms.plane.setOpen(plane));\n                  }}\n                >\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            ))}\n          </DataTable>\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreatePlane}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.plane.setOpen(true))}\n          label=\"New plane\"\n        />\n      </ScrollableScreen>\n      <PlaneDialog open={state.open} onClose={() => dispatch(actions.forms.plane.setOpen(false))} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List, TextInput } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          mode=\"outlined\"\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChangeText={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          value={value as string}\n          mode=\"outlined\"\n          onChangeText={(text) => onChange({ ...config, value: text as string })}\n          label={config.label || ''}\n          keyboardType=\"number-pad\"\n          style={{ marginVertical: 8 }}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          timestamp={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"delete\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from '../../../components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nconst QUERY_RIG_INSPECTION = gql`\n  query RigInspection($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_FORM = gql`\n  mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n    updateFormTemplate(\n      input: { id: $formId, attributes: { dropzoneId: $dropzoneId, definition: $definition } }\n    ) {\n      formTemplate {\n        id\n        name\n        definition\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n  const { data } = useQuery<Query>(QUERY_RIG_INSPECTION, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useMutation<Mutation>(MUTATION_UPDATE_FORM);\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(actions.forms.rigInspectionTemplate.setOpen(data.dropzone.rigInspectionTemplate));\n    }\n  }, [data?.dropzone.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Template saved',\n          variant: 'success',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <Card style={{ width: '100%' }}>\n        <Card.Title title=\"Rig Inspection Form Template\" />\n\n        <Card.Content>\n          <RigInspectionTemplateForm />\n        </Card.Content>\n\n        <Card.Actions>\n          <Button\n            disabled={!canEdit}\n            mode=\"contained\"\n            loading={mutation.loading}\n            onPress={() => updateForm()}\n            style={{ width: '100%' }}\n          >\n            Save template\n          </Button>\n        </Card.Actions>\n      </Card>\n    </ScrollableScreen>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport { Mutation, Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport RigDialog from '../../../components/dialogs/Rig';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_DROPZONE_RIGS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      rigs {\n        id\n        name\n        make\n        isPublic\n        model\n        serial\n        rigType\n        repackExpiresAt\n        canopySize\n        packValue\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_RIG = gql`\n  mutation UpdateDropzoneRig($id: Int!, $isPublic: Boolean) {\n    updateRig(input: { id: $id, attributes: { isPublic: $isPublic } }) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        isPublic\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        dropzone {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            isPublic\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_RIGS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useMutation<Mutation>(MUTATION_UPDATE_RIG);\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.accent} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    dispatch(\n                      actions.notifications.showSnackbar({\n                        message: result?.updateRig.errors[0],\n                        variant: 'error',\n                      })\n                    );\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Mutation, Permission, UserRole } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { actions, useAppDispatch } from '../../state';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: UserRole;\n  permissionName: string;\n}\n\nconst MUTATION_UPDATE_ROLE = gql`\n  mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n    updateRole(input: { id: $roleId, permission: $permissionName, enabled: $enabled }) {\n      role {\n        id\n        name\n        permissions\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useMutation<Mutation>(MUTATION_UPDATE_ROLE);\n  const dispatch = useAppDispatch();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) =>\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'error',\n                  })\n                )\n              );\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport { Query } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport PermissionListItem from '../../../components/permissions/PermissionListItem';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzoneRigs($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(state.currentDropzoneId),\n    },\n  });\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        flexGrow: 1,\n        paddingHorizontal: 16,\n      }}\n      layout={[\n        {\n          key: 'first',\n          height: 175,\n          marginTop: 70,\n          marginBottom: 35,\n          width: '100%',\n        },\n        { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n        { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n      ]}\n    />\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Manifesting\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket types\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Ticket addons\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\">\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport { Query } from '../../../api/schema.d';\nimport DatePicker from '../../../components/input/date_picker/DatePicker';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: Int!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            dropzoneUser {\n              id\n              license {\n                id\n                name\n              }\n            }\n            user {\n              id\n              name\n              license {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          timestamp={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Checkbox, List } from 'react-native-paper';\nimport { Query } from '../../../api/schema';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst QUERY_TICKET_TYPES = gql`\n  query QueryTicketType($dropzoneId: Int!) {\n    ticketTypes(dropzoneId: $dropzoneId) {\n      id\n      cost\n      currency\n      name\n      allowManifestingSelf\n\n      extras {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function ExtraForm() {\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useCurrentDropzone();\n  const { data } = useQuery<Query>(QUERY_TICKET_TYPES, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.extra.setField(['name', newValue]))}\n      />\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ''}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Price\"\n        error={!!state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.extra.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || ''}\n      </HelperText>\n\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        {data?.ticketTypes.map((ticket) => (\n          <Checkbox.Item\n            label={ticket.name || ''}\n            status={\n              state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.extra.setField([\n                  'ticketTypes',\n                  state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                    ? state.fields.ticketTypes.value?.filter(({ id }) => id !== ticket.id)\n                    : [...(state.fields.ticketTypes.value || []), ticket],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { gql, useMutation } from '@apollo/client';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { View } from '../../../components/Themed';\nimport { actions as snackbar } from '../../../components/notifications';\n\nimport { Mutation, Extra } from '../../../api/schema';\nimport ExtraForm from '../../../components/forms/extra/ExtraForm';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        id\n        name\n\n        ticketTypes {\n          id\n          name\n          cost\n          altitude\n          allowManifestingSelf\n        }\n      }\n    }\n  }\n`;\n\nexport default function UpdateExtraScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n  const route = useRoute<{ key: string; name: string; params: { extra: Extra } }>();\n  const { extra } = route.params;\n\n  React.useEffect(() => {\n    dispatch(actions.forms.extra.setOpen(extra));\n  }, [dispatch, extra, extra.id]);\n\n  const [mutationUpdateExtra, data] = useMutation<Mutation>(MUTATION_UPDATE_EXTRA);\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value?.length || 0) < 3) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (Number(state.fields.cost.value) < 0) {\n      hasError = true;\n      dispatch(actions.forms.extra.setFieldError(['cost', 'Price must be a number']));\n    }\n\n    return !hasError;\n  }, [state.fields, dispatch]);\n\n  const onSave = React.useCallback(async () => {\n    const { name, cost, ticketTypes } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationUpdateExtra({\n          variables: {\n            id: Number(state.original?.id),\n            dropzoneId: Number(currentDropzone?.dropzone?.id),\n            name: name.value,\n            cost: cost.value,\n            ticketTypeIds: ticketTypes.value?.map(({ id }) => id),\n          },\n        });\n\n        if (result.data?.updateExtra?.extra) {\n          dispatch(snackbar.showSnackbar({ message: `Saved`, variant: 'success' }));\n          navigation.goBack();\n        }\n      } catch (error) {\n        dispatch(snackbar.showSnackbar({ message: error.message, variant: 'error' }));\n      }\n    }\n  }, [\n    state.fields,\n    state.original?.id,\n    validate,\n    mutationUpdateExtra,\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ paddingHorizontal: 48 }}>\n      <MaterialCommunityIcons\n        name=\"ticket-percent\"\n        size={100}\n        color=\"#999999\"\n        style={{ alignSelf: 'center' }}\n      />\n      <ExtraForm />\n      <View style={styles.fields}>\n        <Button mode=\"contained\" disabled={data.loading} onPress={onSave} loading={data.loading}>\n          Save\n        </Button>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { ExtraInput, CreateExtraPayload } from '../schema';\n\nconst MUTATION_CREATE_EXTRA = gql`\n  mutation CreateExtra($name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n    createExtra(\n      input: {\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<ExtraInput, CreateExtraPayload>(MUTATION_CREATE_EXTRA, {\n  getPayload: (result) => result.createExtra,\n  fieldErrorMap: {\n    ticketTypeIds: 'ticketTypes',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price'), isNumeric('Price must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { ExtraInput, UpdateExtraPayload } from '../schema';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & ExtraInput, UpdateExtraPayload>(\n  MUTATION_UPDATE_EXTRA,\n  {\n    getPayload: (result) => result.updateExtra,\n    fieldErrorMap: {\n      id: 'original',\n      ticketTypeIds: 'ticketTypes',\n    },\n  }\n);\n","import * as React from 'react';\nimport useMutationCreateExtra from '../../api/hooks/useMutationCreateExtra';\nimport useMutationUpdateExtra from '../../api/hooks/useMutationUpdateExtra';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport ExtraForm from '../forms/extra/ExtraForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { ExtraFields } from '../forms/extra/slice';\n\ninterface ITicketTypeExtraDialog {\n  open: boolean;\n  onClose(): void;\n}\nexport default function TicketTypeExtraDialog(props: ITicketTypeExtraDialog) {\n  const { open, onClose } = props;\n  const currentDropzone = useCurrentDropzone();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const createExtra = useMutationCreateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateExtra = useMutationUpdateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    if (state?.original?.id) {\n      updateExtra.mutate({\n        id: Number(state.original.id),\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    } else {\n      createExtra.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    }\n  }, [\n    createExtra,\n    currentDropzone?.dropzone?.id,\n    state.fields.cost.value,\n    state.fields.name.value,\n    state.fields.ticketTypes.value,\n    state.original?.id,\n    updateExtra,\n  ]);\n\n  const snapPoints = React.useMemo(() => [300, 500], []);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket addon' : 'New ticket addon'}\n      open={open}\n      onClose={onClose}\n      loading={createExtra.loading || updateExtra.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      snapPoints={snapPoints}\n    >\n      <ExtraForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { View } from '../../../components/Themed';\nimport { Permission, Query } from '../../../api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport NoResults from '../../../components/NoResults';\nimport TicketTypeExtraDialog from '../../../components/dialogs/TicketTypeExtra';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useRestriction from '../../../hooks/useRestriction';\n\nconst QUERY_TICKET_TYPE = gql`\n  query QueryExtra($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      extras {\n        id\n        cost\n        name\n        ticketTypes {\n          id\n          altitude\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default function ExtrasScreen() {\n  const currentDropzone = useCurrentDropzone();\n  const globalState = useAppSelector((root) => root.global);\n  const formState = useAppSelector((root) => root.forms.extra);\n  const { data, loading } = useQuery<Query>(QUERY_TICKET_TYPE, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n    },\n  });\n  const dispatch = useAppDispatch();\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.accent} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.dropzone?.extras?.map((extra) => (\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.extra.setOpen(extra));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.dropzone?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={styles.fab}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.extra.setOpen(true))}\n          label=\"New ticket addon\"\n        />\n      </View>\n      <TicketTypeExtraDialog\n        open={formState.open}\n        onClose={() => dispatch(actions.forms.extra.setOpen(false))}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from '../../../constants/Colors';\nimport { Transaction } from '../../../api/schema';\n\ninterface ITransaction {\n  transaction: Transaction;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n            }}\n          >\n            {transaction?.createdAt && format(transaction?.createdAt * 1000, 'Mo MMM, h:mm aaa')}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { Dropzone, DropzoneUser, Order, Receipt, Wallet } from '../../../api/schema.d';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\nimport UserAvatar from '../../../components/UserAvatar';\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport lottieTicketAnimation from '../../../../assets/images/ticket.json';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: Receipt;\n  index: number;\n  order: Order;\n}\n\nfunction ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const { currentUser } = useCurrentDropzone();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | Dropzone | DropzoneUser) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        .filter((transaction) => isUser(transaction.receiver))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\nexport default function OrderScreen() {\n  const route = useRoute<{ key: string; name: string; params: { order: Order } }>();\n  const theme = useTheme();\n  const { order } = route.params;\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                }}\n              >{`Order #${order.id}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                }}\n              >\n                {order.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name || (order?.seller as Dropzone)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport CreditsSheet from '../../../components/dialogs/CreditsDialog/Credits';\n\nimport useCurrentDropzone from '../../../api/hooks/useCurrentDropzone';\nimport useDropzoneUser from '../../../api/hooks/useDropzoneUser';\nimport { useDropzoneTransactionsLazyQuery } from '../../../api/reflection';\nimport OrderCard from './OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useCurrentDropzone();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUser(\n    Number(route?.params?.userId) || Number(currentUser?.id)\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({ variables: { dropzoneId: state.currentDropzoneId } });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && <ProgressBar color={state.theme.colors.accent} indeterminate visible={loading} />}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            onPress={() => navigation.navigate('OrderScreen', { order: item.node })}\n            order={item?.node}\n            showAvatar\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { useMutation, useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, Paragraph } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform, View } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { QueryDropzoneDocument } from 'app/api/reflection';\nimport useCurrentDropzone from 'app/api/hooks/useCurrentDropzone';\nimport { Mutation, Query, Rig, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { QUERY_DROPZONE_USER } from 'app/api/hooks/useDropzoneUser';\nimport RigCard from '../equipment/RigCard';\n\nconst QUERY_RIG_INSPECTIONS = gql`\n  query RigInspections($dropzoneUserId: Int, $dropzoneId: Int!, $userId: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n\n      rigInspectionTemplate {\n        id\n        name\n        definition\n      }\n\n      dropzoneUser(id: $dropzoneUserId, userId: $userId) {\n        id\n        rigInspections {\n          id\n          isOk\n          definition\n          rig {\n            id\n            name\n          }\n          inspectedBy {\n            id\n            user {\n              id\n              name\n            }\n          }\n          formTemplate {\n            id\n            name\n            definition\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_CREATE_RIG_INSPECTION = gql`\n  mutation CreateRigInspection($dropzoneId: Int, $rigId: Int, $isOk: Boolean, $definition: String) {\n    createRigInspection(\n      input: {\n        attributes: { dropzoneId: $dropzoneId, rigId: $rigId, isOk: $isOk, definition: $definition }\n      }\n    ) {\n      rigInspection {\n        id\n        isOk\n        definition\n        dropzoneUser {\n          id\n          rigInspections {\n            id\n            isOk\n            rig {\n              id\n            }\n            inspectedBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n          }\n        }\n        inspectedBy {\n          id\n          user {\n            id\n            name\n          }\n        }\n        rig {\n          id\n          name\n          make\n          model\n        }\n\n        formTemplate {\n          id\n          definition\n        }\n      }\n      fieldErrors {\n        field\n        message\n      }\n      errors\n    }\n  }\n`;\n\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const currentDropzone = useCurrentDropzone();\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<{\n    key: string;\n    name: string;\n    params: { rig: Rig; dropzoneUserId: number; userId: number };\n  }>();\n  const { rig, dropzoneUserId, userId } = route.params;\n  const { data, refetch } = useQuery<Query>(QUERY_RIG_INSPECTIONS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.dropzone?.id),\n      dropzoneUserId,\n      userId,\n    },\n  });\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    refetch();\n  }, [isFocused, refetch]);\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useMutation<Mutation>(\n    MUTATION_CREATE_RIG_INSPECTION\n  );\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = data?.dropzone?.dropzoneUser?.rigInspections?.some(\n      (inspection) => inspection.rig?.id?.toString() === rig.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = data?.dropzone?.dropzoneUser?.rigInspections?.find(\n        (record) => record.rig?.id === rig.id\n      );\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          data?.dropzone.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    data?.dropzone?.dropzoneUser?.rigInspections,\n    data?.dropzone.rigInspectionTemplate?.definition,\n    dispatch,\n    rig.id,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzoneId: Number(currentDropzone?.dropzone?.id),\n          rigId: Number(rig.id),\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<Query>({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: QueryDropzoneDocument,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: QueryDropzoneDocument,\n              variables: {\n                dropzoneId: Number(currentDropzone?.dropzone?.id),\n                earliestTimestamp: startOfDay(new Date()).getTime() / 1000,\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            ...result?.dropzone,\n            dropzoneUser: {\n              ...result?.dropzone?.dropzoneUser,\n              rigInspections: [\n                ...(result?.dropzone?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: QUERY_DROPZONE_USER,\n            variables: {\n              dropzoneId: Number(currentDropzone?.dropzone?.id),\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Rig inspection saved',\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: error.message,\n          variant: 'error',\n        })\n      );\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig.id,\n    state.fields,\n    state.ok,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          maxWidth: 400,\n          backgroundColor: 'transparent',\n        }}\n      >\n        <RigCard rig={rig} />\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={data?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            {canInspect ? null : (\n              <Paragraph>\n                You need Rig Inspector permissions to update this form, but you can still view it.\n              </Paragraph>\n            )}\n            <View style={{ flex: 1, flexGrow: 1, opacity: canInspect ? 1.0 : 0.6 }}>\n              <RigInspectionForm />\n            </View>\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) === data?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport { Dropzone, DropzoneUser, Order, Slot } from '../../api/schema.d';\nimport { useAppSelector } from '../../state';\nimport LoadScreen from '../../screens/authenticated/load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from '../../screens/authenticated/weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from '../../screens/authenticated/weather_conditions/JumpRunScreen';\nimport WindScreen from '../../screens/authenticated/weather_conditions/WindScreen';\nimport AppBar from '../AppBar';\n\nimport ManifestScreen from '../../screens/authenticated/manifest/ManifestScreen';\nimport ManifestGroupScreen from '../../screens/authenticated/manifest/ManifestGroupScreen';\n// eslint-disable-next-line max-len\nimport ManifestGroupUserSelectScreen from '../../screens/authenticated/manifest/ManifestGroupUserSelectScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\n// Settings\nimport SettingsScreen from '../../screens/authenticated/settings/SettingsScreen';\nimport TicketTypeSettingsScreen from '../../screens/authenticated/ticket_types/TicketTypesScreen';\nimport UpdateDropzoneScreen from '../../screens/authenticated/dropzones/UpdateDropzoneScreen';\nimport PlanesScreen from '../../screens/authenticated/planes/PlanesScreen';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateScreen from '../../screens/authenticated/settings/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from '../../screens/authenticated/settings/DropzoneRigsScreen';\n// eslint-disable-next-line max-len\nimport DropzonePermissionScreen from '../../screens/authenticated/settings/DropzonePermissionScreen';\nimport DropzoneMasterLogScreen from '../../screens/authenticated/settings/DropzoneMasterLogScreen';\nimport UpdateExtraScreen from '../../screens/authenticated/extras/UpdateExtraScreen';\nimport ExtrasScreen from '../../screens/authenticated/extras/ExtrasScreen';\nimport OrderScreen from '../../screens/authenticated/transactions/OrderScreen';\nimport DropzoneTransactionsScreen from '../../screens/authenticated/transactions/DropzoneTransactionsScreen';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\n\nexport type IManifestTabParams = {\n  DropzoneScreen: undefined;\n  LoadScreen: undefined;\n  ManifestGroupUserSelectScreen: undefined;\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  JumpRunScreen: undefined;\n  Settings: undefined;\n  Profile: undefined;\n  ManifestGroupScreen: {\n    users?: DropzoneUser[];\n    slots?: Slot[];\n    loadId?: number;\n  };\n\n  ProfileScreen: {\n    userId: string;\n  };\n  NotificationsScreen: undefined;\n  EquipmentScreen: undefined;\n  TransactionsScreen: undefined;\n\n  SettingsScreen: undefined;\n  UpdateDropzoneScreen: { dropzone: Dropzone };\n  TicketTypeSettingsScreen: undefined;\n  PlanesScreen: undefined;\n  PlaneScreen: undefined;\n  TicketTypesScreen: undefined;\n  UpdateExtraScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  DropzonePermissionScreen: undefined;\n  DropzoneMasterLogScreen: undefined;\n  RigInspectionScreen: undefined;\n  DropzoneTransactionsScreen: undefined;\n  OrderScreen: {\n    order: Order;\n  };\n};\n\nconst Manifest = createStackNavigator<IManifestTabParams>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n  const { currentUser } = useCurrentDropzone();\n\n  return (\n    <Manifest.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Manifest.Screen\n        name=\"DropzoneScreen\"\n        component={ManifestScreen}\n        options={{ title: 'Manifest' }}\n      />\n      <Manifest.Screen\n        name=\"WeatherConditionsScreen\"\n        component={WeatherConditionsScreen}\n        options={{ headerShown: false }}\n      />\n      <Manifest.Screen\n        name=\"WindScreen\"\n        component={WindScreen}\n        options={{ title: 'Winds Aloft' }}\n      />\n      <Manifest.Screen\n        name=\"JumpRunScreen\"\n        component={JumpRunScreen}\n        options={{ title: 'Jump Run' }}\n      />\n      <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n      <Manifest.Screen\n        name=\"ManifestGroupScreen\"\n        component={ManifestGroupScreen}\n        options={{ title: 'Manifest group' }}\n      />\n      <Manifest.Screen\n        name=\"ManifestGroupUserSelectScreen\"\n        component={ManifestGroupUserSelectScreen}\n        options={{ title: 'Select users' }}\n      />\n\n      {/* PROFILE */}\n      <Manifest.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'Profile' }}\n        initialParams={{\n          userId: currentUser?.id,\n        }}\n      />\n      <Manifest.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n      <Manifest.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n      <Manifest.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Account History' }}\n      />\n\n      <Manifest.Screen name=\"OrderScreen\" component={OrderScreen} options={{ title: 'Order' }} />\n\n      <Manifest.Screen\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n        options={{ title: 'Settings' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateDropzoneScreen\"\n        component={UpdateDropzoneScreen}\n        options={{ title: 'Basic settings' }}\n      />\n      <Manifest.Screen name=\"PlanesScreen\" component={PlanesScreen} options={{ title: 'Planes' }} />\n      <Manifest.Screen\n        name=\"TicketTypesScreen\"\n        component={TicketTypeSettingsScreen}\n        options={{ title: 'Ticket types' }}\n      />\n      <Manifest.Screen\n        name=\"UpdateExtraScreen\"\n        component={UpdateExtraScreen}\n        options={{ title: 'Update ticket add-on' }}\n      />\n      <Manifest.Screen\n        name=\"ExtrasScreen\"\n        component={ExtrasScreen}\n        options={{ title: 'Ticket add-ons' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionTemplateScreen\"\n        component={RigInspectionTemplateScreen}\n        options={{ title: 'Rig Inspection Form' }}\n      />\n      <Manifest.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig Inspection' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneRigsScreen\"\n        component={DropzoneRigsScreen}\n        options={{ title: 'Dropzone rigs' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneTransactionsScreen\"\n        component={DropzoneTransactionsScreen}\n        options={{ title: 'Order Activity' }}\n      />\n      <Manifest.Screen\n        name=\"DropzonePermissionScreen\"\n        component={DropzonePermissionScreen}\n        options={{ title: 'Permissions' }}\n      />\n      <Manifest.Screen\n        name=\"DropzoneMasterLogScreen\"\n        component={DropzoneMasterLogScreen}\n        options={{ title: 'Master log' }}\n      />\n    </Manifest.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { TextInput, HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport NumberField from '../../input/number_input/NumberField';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.ghost.setField([\n            'exitWeight',\n            state.original.exitWeight?.toString() || '60',\n          ])\n        );\n      }\n\n      if (!state.fields.license.value && state.original?.license?.id) {\n        if (state.original.license.federation) {\n          dispatch(actions.forms.ghost.setFederation(state.original.license.federation));\n        }\n        dispatch(actions.forms.ghost.setField(['license', state.original.license]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.license.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={!!state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Email\"\n        error={!!state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <HelperText type={state.fields.email.error ? 'error' : 'info'}>\n        {state.fields.email.error || ' '}\n      </HelperText>\n\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={!!state.fields.exitWeight.error}\n        value={Number(state.fields.exitWeight?.value)}\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue?.toString()]))\n        }\n      />\n\n      <HelperText type={state.fields.exitWeight.error ? 'error' : 'info'}>\n        {state.fields.exitWeight.error || ''}\n      </HelperText>\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onSelect={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostPayload, MutationCreateGhostArgs } from '../schema';\n\nconst MUTATION_CREATE_GHOST = gql`\n  mutation CreateGhost(\n    $name: String!\n    $phone: String\n    $email: String!\n    $federationNumber: String\n    $roleId: Int!\n    $licenseId: Int\n    $dropzoneId: Int!\n    $exitWeight: Float!\n  ) {\n    createGhost(\n      input: {\n        attributes: {\n          roleId: $roleId\n          federationNumber: $federationNumber\n          name: $name\n          phone: $phone\n          email: $email\n          dropzoneId: $dropzoneId\n          licenseId: $licenseId\n          exitWeight: $exitWeight\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      user {\n        id\n        name\n        exitWeight\n        email\n        phone\n\n        jumpTypes {\n          id\n          name\n        }\n        userFederations {\n          id\n          license {\n            id\n            name\n          }\n          federation {\n            id\n            name\n            slug\n          }\n        }\n        license {\n          id\n          name\n\n          federation {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationCreateGhostArgs['input']['attributes'], CreateGhostPayload>(\n  MUTATION_CREATE_GHOST,\n  {\n    getPayload: (result) => result.createGhost,\n    validates: {\n      exitWeight: [\n        isRequired('Exit weight must be provided'),\n        isNumeric('Please enter a valid number'),\n      ],\n      email: [\n        isRequired('Please provide a valid email address'),\n        isEmail('Please provide a valid email address'),\n      ],\n      name: [isRequired('Name is required')],\n\n      roleId: [isRequired('You must select a role')],\n    },\n    fieldErrorMap: {\n      license: 'licenseId',\n      exit_weight: 'exitWeight',\n      role: 'roleId',\n    },\n  }\n);\n","import * as React from 'react';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => {\n      requestAnimationFrame(() => {\n        onSuccess();\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `${payload?.user?.name} has been added to your dropzone`,\n            variant: 'success',\n          })\n        );\n      });\n    },\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n    },\n\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    mutationCreateGhost.mutate({\n      dropzoneId: globalState.currentDropzoneId as number,\n      name: state.fields.name.value || '',\n      licenseId: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: Number(state.fields.exitWeight.value),\n      email: state.fields.email.value || '',\n      roleId: Number(state.fields.role.value?.id),\n    });\n  }, [\n    mutationCreateGhost,\n    globalState.currentDropzoneId,\n    state.fields.name.value,\n    state.fields.license.value?.id,\n    state.fields.phone.value,\n    state.fields.exitWeight.value,\n    state.fields.email.value,\n    state.fields.role.value?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport NoResults from '../../../components/NoResults';\nimport { Permission, Query } from '../../../api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport useRestriction from '../../../hooks/useRestriction';\nimport CreateGhostDialog from '../../../components/dialogs/Ghost';\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsersSearch($dropzoneId: Int!, $search: String) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(search: $search) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              image\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 36, width: 36, marginHorizontal: 12, borderRadius: 36 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(global.currentDropzoneId),\n      search: state.searchText,\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const navigation = useNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = data?.dropzone?.dropzoneUsers?.edges || [];\n  const initialLoading = !users?.length && loading;\n\n  return (\n    <>\n      <ProgressBar indeterminate color={global.theme.colors.accent} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList\n        data={initialLoading ? [1, 1, 1, 11, 1, 1, 1, 1] : users}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: Number(global.currentDropzoneId),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={({ item }, idx) => `user-${item?.node?.id || idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%', alignSelf: 'center' }}\n        renderItem={({ item: edge }) =>\n          edge === 1 ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${edge?.node?.id}`}\n              style={{ margin: 0, marginVertical: 0, borderRadius: 2, width: '100%' }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={edge?.node?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={edge?.node?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !edge?.node?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={36}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: edge?.node?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={36}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('UserProfileScreen', {\n                      userId: edge?.node?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={styles.fab}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.ghost.setOpen(true))}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from '../../../state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  previous,\n  scene,\n  onSearch,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content\n          title={scene.descriptor.options.title}\n          titleStyle={{ fontWeight: 'bold' }}\n        />\n      )}\n      <MaterialIcons\n        name=\"search\"\n        onPress={() => setSearchVisible(!searchVisible)}\n        color=\"#FFFFFF\"\n        size={24}\n        style={styles.icon}\n      />\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport { Rig } from '../../api/schema';\n\nimport UsersScreen from '../../screens/authenticated/users/UsersScreen';\nimport SearchableAppBar from '../../screens/authenticated/users/AppBar';\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport ProfileScreen from '../../screens/authenticated/profile/ProfileScreen';\nimport TransactionsScreen from '../../screens/authenticated/transactions/TransactionsScreen';\nimport EquipmentScreen from '../../screens/authenticated/equipment/EquipmentScreen';\n\nexport type ISettingsTabParams = {\n  UsersScreen: {\n    select?: boolean;\n    loadId: number;\n    onSelect?(): void;\n  };\n  RigInspectionScreen: { dropzoneUserId: number; rig: Rig };\n  UserProfileScreen: undefined;\n  TransactionsScreen: undefined;\n  EquipmentScreen: undefined;\n};\n\nconst Settings = createStackNavigator<ISettingsTabParams>();\n\nexport default function SettingsTab() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Settings.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => (\n          <SearchableAppBar\n            {...props}\n            searchText={searchText}\n            searchVisible={isSearchVisible}\n            setSearchVisible={(visible) =>\n              dispatch(actions.screens.users.setSearchVisible(visible))\n            }\n            onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n          />\n        ),\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Settings.Screen\n        name=\"UsersScreen\"\n        component={UsersScreen}\n        options={{ title: 'Dropzone users' }}\n      />\n      <Settings.Screen\n        name=\"UserProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: 'User' }}\n      />\n      <Settings.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Inspection' }}\n      />\n      <Settings.Screen\n        name=\"TransactionsScreen\"\n        component={TransactionsScreen}\n        options={{ title: 'Transactions' }}\n      />\n      <Settings.Screen\n        name=\"EquipmentScreen\"\n        component={EquipmentScreen}\n        options={{ title: 'Equipment' }}\n      />\n    </Settings.Navigator>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from '../AppBar';\n\nimport RigInspectionScreen from '../../screens/authenticated/rig/RigInspectionScreen';\nimport NotificationsScreen from '../../screens/authenticated/notifications/NotificationsScreen';\n\nexport type IProfileTabParams = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n};\n\nconst Profile = createStackNavigator<IProfileTabParams>();\n\nexport default function Notifications() {\n  return (\n    <Profile.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) => <AppBar {...props} hideWarnings />,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"NotificationsScreen\"\n    >\n      <Profile.Screen\n        name=\"NotificationsScreen\"\n        component={NotificationsScreen}\n        options={{ title: 'Notifications' }}\n      />\n\n      <Profile.Screen\n        name=\"RigInspectionScreen\"\n        component={RigInspectionScreen}\n        options={{ title: 'Rig inspection' }}\n      />\n    </Profile.Navigator>\n  );\n}\n","import * as React from 'react';\n\nexport default () => <></>;\n","import {\n  BottomTabBarOptions,\n  BottomTabBarProps,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Appearance, Platform, StyleSheet, Text } from 'react-native';\nimport type { TabsConfig, BubbleTabBarItemConfig } from '@gorhom/animated-tabbar';\nimport Animated from 'react-native-reanimated';\n\nimport { useAppSelector } from '../state';\nimport ManifestTab from './tabs/manifest';\nimport UsersTab from './tabs/users';\nimport NotificationsTab from './tabs/notifications';\n\nimport useRestriction from '../hooks/useRestriction';\nimport { Permission } from '../api/schema.d';\n\nimport AnimatedTabBar from './AnimatedTabBar';\n\nexport type IAuthenticatedTabParams = {\n  Manifest: undefined;\n  Profile: undefined;\n  Packing: undefined;\n  Users: undefined;\n  Notifications: undefined;\n  Settings: undefined;\n};\n\nconst BottomTab = createBottomTabNavigator<IAuthenticatedTabParams>();\n\nconst AnimatedIcon = Animated.createAnimatedComponent(MaterialCommunityIcons);\nexport default function AuthenticatedTabBar() {\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  const canViewUsers = useRestriction(Permission.ReadUser);\n\n  const tabConfig = React.useMemo(\n    () => ({\n      labelStyle: {\n        color: theme.dark ? theme.colors.onSurface : palette.surface,\n      },\n      icon: {\n        activeColor: palette.surface,\n        inactiveColor: palette.primary.dark,\n      },\n      background: {\n        // activeColor: palette.primary.main,\n        activeColor: palette.placeholder,\n        inactiveColor: theme.colors.surface,\n      },\n    }),\n    [\n      palette.placeholder,\n      palette.primary.dark,\n      palette.surface,\n      theme.colors.onSurface,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n  const tabs: TabsConfig<BubbleTabBarItemConfig> = React.useMemo(\n    () => ({\n      Manifest: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"airplane\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Notifications: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"bell-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n      Users: {\n        ...tabConfig,\n        icon: {\n          ...tabConfig.icon,\n          component: ({ animatedFocus, size, color }) => (\n            <AnimatedIcon\n              name=\"account-group-outline\"\n              style={[styles.icon, animatedFocus ? styles.iconActive : undefined]}\n              {...{ size, color: color as unknown as string }}\n            />\n          ),\n        },\n      },\n    }),\n    [tabConfig]\n  );\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Manifest\"\n      {...Platform.select({\n        web: {},\n        ios: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n        android: {\n          tabBar: (props: BottomTabBarProps<BottomTabBarOptions>) => (\n            <AnimatedTabBar\n              preset=\"bubble\"\n              tabs={tabs}\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              animation=\"iconWithLabelOnFocus\"\n              inactiveOpacity={0.25}\n              inactiveScale={0.5}\n              {...props}\n            />\n          ),\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n        activeBackgroundColor: theme.colors.surface,\n        inactiveTintColor: '#CCCCCC',\n        showLabel: Platform.OS !== 'web',\n        adaptive: true,\n        style: {\n          backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n          borderTopWidth: StyleSheet.hairlineWidth,\n          borderTopColor: '#CCCCCC',\n        },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Manifest\"\n        component={ManifestTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Manifest\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"airplane\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: false,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Notifications\"\n        component={NotificationsTab}\n        options={{\n          tabBarLabel: ({ focused, color }) =>\n            !focused ? null : (\n              <Text\n                style={[\n                  styles.label,\n                  { color: isDarkMode && focused ? theme.colors.primary : color },\n                ]}\n              >\n                Notifications\n              </Text>\n            ),\n          tabBarIcon: ({ focused, color, size }) => (\n            <MaterialCommunityIcons\n              name=\"bell\"\n              style={[styles.icon, focused ? styles.iconActive : undefined]}\n              {...{ size }}\n              color={isDarkMode && focused ? theme.colors.primary : color}\n            />\n          ),\n          unmountOnBlur: true,\n        }}\n      />\n      {canViewUsers && (\n        <BottomTab.Screen\n          name=\"Users\"\n          component={UsersTab}\n          options={{\n            tabBarLabel: ({ focused, color }) =>\n              !focused ? null : (\n                <Text\n                  style={[\n                    styles.label,\n                    { color: isDarkMode && focused ? theme.colors.primary : color },\n                  ]}\n                >\n                  Users\n                </Text>\n              ),\n            tabBarIcon: ({ size, color, focused }) => (\n              <MaterialCommunityIcons\n                {...{ size, color }}\n                name=\"account-group\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size }}\n                color={isDarkMode && focused ? theme.colors.primary : color}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n      )}\n    </BottomTab.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet, FlatList, Dimensions, View } from 'react-native';\nimport { Card, Title, FAB, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Query } from '../../../api/schema.d';\n\nimport NoResults from '../../../components/NoResults';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONES);\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={data?.dropzones?.edges || []}\n        numColumns={2}\n        refreshing={loading}\n        onRefresh={() => refetch()}\n        style={{ flex: 1, width: '100%' }}\n        contentContainerStyle={{\n          flexGrow: 1,\n          width: '100%',\n          paddingBottom: 100,\n        }}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item }) => {\n          return (\n            <Card\n              style={{\n                width: Dimensions.get('window').width / 2 - 32,\n                margin: 8,\n              }}\n              onPress={async () => {\n                if (item?.node) {\n                  const shouldPushRoute = !!globalState.currentDropzoneId;\n                  dispatch(actions.global.setDropzone(item.node));\n\n                  if (shouldPushRoute) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    navigation.replace('Authenticated', {\n                      screen: 'HomeScreen',\n                    });\n                  }\n                }\n              }}\n            >\n              {item?.node?.banner ? (\n                <Card.Cover source={{ uri: item?.node?.banner as string }} />\n              ) : (\n                <View\n                  style={[\n                    styles.dzIcon,\n                    { backgroundColor: item?.node?.primaryColor || undefined },\n                  ]}\n                >\n                  <Avatar.Icon\n                    style={{ backgroundColor: item?.node?.secondaryColor || undefined }}\n                    icon=\"airplane-takeoff\"\n                  />\n                </View>\n              )}\n\n              <Card.Content>\n                <Title>{item?.node?.name}</Title>\n              </Card.Content>\n            </Card>\n          );\n        }}\n      />\n\n      <FAB\n        style={styles.fab}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('DropzoneSetupScreen');\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"Dropzones\"\n    >\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n  index: number;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, hideContentUntilNavigatedTo } = props;\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <View style={styles.container}>\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <ScrollView style={{ flex: 1 }} contentContainerStyle={styles.content}>\n        {children}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dots: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport usePalette from 'app/hooks/usePalette';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","import * as React from 'react';\nimport {\n  createStackNavigator,\n  HeaderStyleInterpolators,\n  TransitionSpecs,\n} from '@react-navigation/stack';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\nimport ScrollableScreen from '../layout/ScrollableScreen';\n\nconst WizardRoot = createStackNavigator();\nconst WizardModal = createStackNavigator();\n\nexport interface IWizardProps {\n  name: string;\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  // How many screens ahead to jump onNext, default: 1\n  nextIndexFactor?: number;\n  backIndexFactor?: number;\n  onNext?(): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\nexport function Content(props: IWizardProps) {\n  const { name, steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigation();\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <KeyboardAvoidingView\n        style={styles.content}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <WizardRoot.Navigator\n          screenOptions={{\n            headerShown: false,\n            transitionSpec: {\n              open: TransitionSpecs.TransitionIOSSpec,\n              close: TransitionSpecs.TransitionIOSSpec,\n            },\n            headerStyleInterpolator: HeaderStyleInterpolators.forFade,\n            cardStyleInterpolator: ({ current, next, layouts }) => {\n              return {\n                cardStyle: {\n                  backgroundColor: 'transparent',\n                  transform: [\n                    {\n                      translateX: current.progress.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layouts.screen.width, 0],\n                      }),\n                    },\n                    {\n                      scale: next\n                        ? next.progress.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [1, 0.9],\n                          })\n                        : 1,\n                    },\n                  ],\n                },\n                overlayStyle: {\n                  opacity: current.progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 0.5],\n                  }),\n                },\n              };\n            },\n          }}\n        >\n          {steps.map((definition, index) => {\n            if (!definition) {\n              return null;\n            }\n            const { component: Step } = definition;\n            return (\n              <WizardRoot.Screen name={`${name}${index}`}>\n                {(screenProps) => <Step {...screenProps} {...{ index }} />}\n              </WizardRoot.Screen>\n            );\n          })}\n        </WizardRoot.Navigator>\n        <View style={styles.actions}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            onPress={async () => {\n              try {\n                const nextIndex = steps[currentIndex]?.nextIndexFactor || 1;\n                if (steps[currentIndex]?.onNext) {\n                  setLoading(true);\n                  await steps[currentIndex]?.onNext?.();\n                }\n                if (currentIndex === steps.length - 1) {\n                  navigation.goBack();\n                } else {\n                  navigation.navigate(`${name}${currentIndex + nextIndex}`);\n                  setIndex(currentIndex + nextIndex);\n                }\n              } catch {\n                return undefined;\n              } finally {\n                setLoading(false);\n              }\n\n              return undefined;\n            }}\n            style={[styles.next, { backgroundColor: palette.placeholder }]}\n            mode=\"contained\"\n          >\n            {currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n          </Button>\n          <Button\n            disabled={loading}\n            mode=\"text\"\n            onPress={async () => {\n              const backIndexFactor = steps[currentIndex]?.backIndexFactor || 1;\n              steps[currentIndex]?.onBack?.();\n              if (currentIndex === 0) {\n                navigation.goBack();\n              } else {\n                navigation.navigate(`${name}${currentIndex - backIndexFactor}`);\n                setIndex(currentIndex - backIndexFactor || 0);\n              }\n              return undefined;\n            }}\n          >\n            Back\n          </Button>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nexport function Wizard(props: IWizardProps) {\n  const { name } = props;\n  return (\n    <WizardModal.Navigator mode=\"modal\" screenOptions={{ headerShown: false }}>\n      <WizardModal.Screen {...{ name }}>{() => <Content {...props} />}</WizardModal.Screen>\n    </WizardModal.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default Wizard;\n","// Calculate password entropy for what would otherwise be\n// the minimum required entropy:\n// - 1 uppercase (26)\n// - 1 lowercase (26)\n// - 1 digit (10)\nconst entropy = {\n  uppercase: 26,\n  lowercase: 26,\n  digit: 10,\n  specials: 32,\n};\n\nexport const minimumEntropy = (entropy.uppercase + entropy.lowercase + entropy.digit) ** 10;\n\nexport function calculateComplexity(password: string) {\n  const charsetLength = [\n    password.split('').some((character) => /[A-Z]/.test(character)) ? entropy.uppercase : 0,\n    password.split('').some((character) => /[a-z]/.test(character)) ? entropy.lowercase : 0,\n    password.split('').some((character) => /[0-9]/.test(character)) ? entropy.digit : 0,\n    password.split('').some((character) => /\\W/.test(character)) ? entropy.specials : 0,\n  ].reduce((a, b) => a + b, 0);\n  return charsetLength ** password.length;\n}\n\nexport enum PasswordStrength {\n  weak,\n  ok,\n  strong,\n}\n\nexport function getPasswordStrength(password: string) {\n  const passwordEntropy = calculateComplexity(password);\n\n  if (passwordEntropy < minimumEntropy) {\n    return PasswordStrength.weak;\n  }\n\n  if (passwordEntropy > minimumEntropy && passwordEntropy < minimumEntropy * 3) {\n    return PasswordStrength.ok;\n  }\n  return PasswordStrength.strong;\n}\n\nexport default function checkPasswordComplexity(password: string) {\n  const passwordEntropy = calculateComplexity(password);\n\n  return Number(passwordEntropy - minimumEntropy) > 0;\n}\n","import { errorColor, successColor, warningColor } from 'app/constants/Colors';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { PasswordStrength } from '../../utils/checkPasswordComplexity';\n\ninterface IPasswordComplexityIndicatorProps {\n  strength: PasswordStrength;\n}\nfunction PasswordStep(props: IPasswordComplexityIndicatorProps) {\n  const { strength } = props;\n\n  const indicatorStyle = [styles.indicatorWeak, styles.indicatorOk, styles.indicatorStrong];\n\n  return (\n    <>\n      <Text style={styles.title}>{['Weak', 'Acceptable', 'Strong'][strength]}</Text>\n      <View style={styles.indicator}>\n        <View style={indicatorStyle[strength]} />\n        {[PasswordStrength.weak].includes(strength) ? (\n          <View style={[styles.indicatorInactive, { flex: 1 / 3 }]} />\n        ) : null}\n        {[PasswordStrength.weak, PasswordStrength.ok].includes(strength) ? (\n          <View\n            style={[\n              styles.indicatorInactive,\n              { flex: strength === PasswordStrength.weak ? 1 / 3 : 1 / 2 },\n            ]}\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n    marginTop: 8,\n  },\n  indicator: {\n    flexDirection: 'row',\n    height: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginTop: 8,\n  },\n  indicatorInactive: {\n    backgroundColor: '#AAA',\n  },\n  indicatorWeak: {\n    flex: 1 / 3,\n    backgroundColor: errorColor,\n  },\n  indicatorOk: {\n    flex: 2 / 3,\n    backgroundColor: warningColor,\n  },\n  indicatorStrong: {\n    backgroundColor: successColor,\n    flex: 1,\n  },\n});\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport { getPasswordStrength } from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={Boolean(fields.password.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={getPasswordStrength(fields.password.value)} />\n        <HelperText type=\"error\">{fields.password.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type=\"error\">{fields.email.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={Boolean(fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type=\"error\">{fields.passwordConfirmation.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const validateEmail = React.useCallback(async () => {\n    const pattern =\n      // eslint-disable-next-line max-len\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      dispatch(actions.screens.signup.setFieldError(['email', 'Please enter a valid email']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.email.value]);\n\n  const validatePassword = React.useCallback(async () => {\n    if (!checkPasswordComplexity(state.fields.password.value)) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onClickSignUp = React.useCallback(async () => {\n    if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n      dispatch(\n        actions.screens.signup.setFieldError(['passwordConfirmation', 'Password doesnt match'])\n      );\n      throw new Error('Password mismatch');\n    }\n    try {\n      const result = await onSignUp({\n        variables: {\n          pushToken: globalState.expoPushToken,\n          email: state.fields.email.value,\n          name: state.fields.name.value,\n          exitWeight: state.fields.exitWeight.value,\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          licenseId: Number(state.fields.license?.value?.id) || null,\n          phone: state.fields.phone.value,\n        },\n      });\n\n      if (result?.data?.userSignUp?.fieldErrors?.length) {\n        result?.data?.userSignUp?.fieldErrors?.forEach(({ field, message }) => {\n          switch (field) {\n            case 'email':\n              dispatch(actions.screens.signup.setFieldError(['email', message]));\n              throw new Error('Email error');\n            case 'password':\n              dispatch(actions.screens.signup.setFieldError(['password', message]));\n              throw new Error('Password error');\n            case 'passwordConfirmation':\n              dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', message]));\n              throw new Error('Email error');\n            default:\n              return undefined;\n          }\n        });\n      }\n    } catch (e) {\n      dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    globalState.expoPushToken,\n    onSignUp,\n    state.fields.email.value,\n    state.fields.exitWeight.value,\n    state.fields.license?.value?.id,\n    state.fields.name.value,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    state.fields.phone.value,\n  ]);\n\n  return (\n    <Wizard\n      dots\n      name=\"SignupWizard\"\n      steps={[\n        { onNext: validateEmail, component: EmailStep },\n        { onNext: validatePassword, component: PasswordStep },\n        { onNext: onClickSignUp, component: PasswordConfirmationStep },\n        { component: DoneStep },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport {\n  Image,\n  ImageBackground,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  Text,\n} from 'react-native';\nimport { Card, Button, HelperText, TextInput } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Mutation } from '../../../api/schema';\nimport { primaryColor } from '../../../constants/Colors';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNGs are allowed\nimport logo from '../../../../assets/images/logo-black.png';\n\nconst MUTATION_LOG_IN = gql`\n  mutation UserLogin($email: String!, $password: String!) {\n    userLogin(email: $email, password: $password) {\n      authenticatable {\n        id\n        email\n        name\n        phone\n        createdAt\n        updatedAt\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useMutation<Mutation>(MUTATION_LOG_IN);\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: e.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [dispatch, mutationLogin, state.fields.email.value, state.fields.password.value]);\n\n  return (\n    <ImageBackground\n      // eslint-disable-next-line global-require\n      source={require('assets/images/pattern.png')}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      <Image source={logo} style={{ height: 300, width: '100%' }} resizeMode=\"contain\" />\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Card style={{ padding: 16, borderRadius: 8 }} elevation={3}>\n          <Card.Content>\n            <TextInput\n              label=\"Email\"\n              mode=\"outlined\"\n              value={state.fields.email.value}\n              onChangeText={(newValue) => {\n                dispatch(actions.screens.login.setEmail(newValue));\n              }}\n            />\n            <HelperText type=\"error\">{state.fields.email.error}</HelperText>\n\n            <TextInput\n              label=\"Password\"\n              mode=\"outlined\"\n              value={state.fields.password.value}\n              secureTextEntry\n              onChangeText={(newValue) => {\n                dispatch(actions.screens.login.setPassword(newValue));\n              }}\n              onSubmitEditing={onLogin}\n              error={!!state.fields.password.error}\n            />\n\n            <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n            <Button\n              mode=\"contained\"\n              labelStyle={styles.buttonLabel}\n              style={styles.button}\n              onPress={onLogin}\n              loading={data.loading}\n            >\n              Log in\n            </Button>\n\n            <Button\n              labelStyle={styles.textButtonLabel}\n              style={styles.textButton}\n              onPress={() => navigation.navigate('SignUpWizard')}\n            >\n              Sign up\n            </Button>\n            <TouchableOpacity onPress={() => navigation.navigate('RecoverPasswordScreen')}>\n              <Text style={styles.forgotPassword}>Forgot your password?</Text>\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </KeyboardAvoidingView>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  forgotPassword: {\n    color: 'rgb(50, 50, 50)',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserSignUpArgs, UserSignUpPayload } from '../schema';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserSignUpArgs, UserSignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userSignUp,\n  fieldErrorMap: {\n    license: 'licenseId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'A confirmation link has been sent to your email',\n          variant: 'success',\n        })\n      );\n\n      navigation.navigate('LoginScreen');\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value}\n          onChangeText={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Email\"\n          error={!!state.fields.email.error}\n          value={state.fields.email.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['email', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"outlined\"\n          label=\"Repeat password\"\n          error={Boolean(state.fields.password.error || state.fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type=\"error\">{fields.email.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>We've sent you a link to restore your password.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import RecoverPasswordScreen from './RecoverPasswordScreen';\n\nexport default RecoverPasswordScreen;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useRecoverPasswordMutation } from 'app/api/reflection';\nimport EmailStep from './steps/Email';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n\n  const [onRecover] = useRecoverPasswordMutation();\n\n  const onClickRecover = React.useCallback(async () => {\n    try {\n      const result = await onRecover({\n        variables: {\n          email: state.fields.email.value,\n          redirectUrl: '',\n        },\n      });\n      console.log(result?.data?.userSendPasswordReset?.message);\n    } catch (e) {\n      dispatch(actions.screens.signup.setFieldError(['email', e.message]));\n      throw new Error();\n    }\n  }, [dispatch, onRecover, state.fields.email.value]);\n\n  return (\n    <Wizard\n      dots\n      name=\"RecoverPasswordWizard\"\n      steps={[{ onNext: onClickRecover, component: EmailStep }, { component: DoneStep }]}\n    />\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport SignupWizard from 'app/screens/unauthenticated/signup/wizard/SignupWizard';\nimport LoginScreen from '../screens/unauthenticated/login/LoginScreen';\nimport SignUpScreen from '../screens/unauthenticated/signup/SignUpScreen';\nimport RecoverPasswordScreen from '../screens/unauthenticated/login/RecoverPasswordScreen';\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator();\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      mode=\"modal\"\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n      <Stack.Screen name=\"SignUpWizard\" component={SignupWizard} />\n      <Stack.Screen name=\"RecoverPasswordScreen\" component={RecoverPasswordScreen} />\n    </Stack.Navigator>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzonePayload } from '../schema';\n\nexport const MUTATION_CREATE_DROPZONE = gql`\n  mutation CreateDropzone(\n    $name: String!\n    $banner: String\n    $federationId: Int!\n    $lat: Float\n    $lng: Float\n    $primaryColor: String\n    $secondaryColor: String\n  ) {\n    createDropzone(\n      input: {\n        attributes: {\n          name: $name\n          banner: $banner\n          federationId: $federationId\n          primaryColor: $primaryColor\n          secondaryColor: $secondaryColor\n          lat: $lat\n          lng: $lng\n        }\n      }\n    ) {\n      dropzone {\n        id\n        name\n        banner\n\n        federation {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federationId: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  CreateDropzonePayload\n>(MUTATION_CREATE_DROPZONE, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federationId: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreatePlanePayload } from '../schema';\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    registration: string;\n    dropzoneId: number;\n    minSlots: number;\n    maxSlots: number;\n    hours?: number;\n    nextMaintenanceHours?: number;\n  },\n  CreatePlanePayload\n>(MUTATION_CREATE_PLANE, {\n  getPayload: (result) => result.createPlane,\n  fieldErrorMap: {\n    dropzone: 'dropzoneId',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    registration: [isRequired('Registration is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdatePlaneArgs, UpdatePlanePayload } from '../schema';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdatePlaneArgs['input']['attributes'],\n  UpdatePlanePayload\n>(MUTATION_UPDATE_PLANE, {\n  getPayload: (result) => result.updatePlane,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Federation, Query } from '../../../api/schema.d';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: Federation | null;\n  onSelect(jt: Federation): void;\n}\n\nconst QUERY_FEDERATIONS = gql`\n  query Federations {\n    federations {\n      id\n      name\n    }\n  }\n`;\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useQuery<Query>(QUERY_FEDERATIONS);\n\n  return (\n    <CardSelect<Federation>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as Federation[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, List, Searchbar } from 'react-native-paper';\nimport debounce from 'lodash/debounce';\nimport { GeocodedLocation } from 'app/api/schema.d';\nimport { first } from 'lodash';\nimport { useAddressToLocationLazyQuery } from 'app/api/reflection';\n\ninterface IAddressSearchBarProps {\n  value: string;\n  autocomplete?: boolean;\n  selectedLocation?: GeocodedLocation;\n  onChange(value: string): void;\n  onSelect(value: GeocodedLocation): void;\n}\nexport default function AddressSearchBar(props: IAddressSearchBarProps) {\n  const { value, onChange: onChangeText, onSelect } = props;\n  const [suggestions, setSuggestions] = React.useState<GeocodedLocation[]>([]);\n  const [selected, setSelected] = React.useState<GeocodedLocation>();\n  const [fetchLocation, { data, loading }] = useAddressToLocationLazyQuery();\n\n  const fetchSuggestions = React.useCallback(\n    (search: string) => {\n      fetchLocation({\n        variables: {\n          search,\n        },\n      });\n    },\n    [fetchLocation]\n  );\n\n  const fetchSuggestionsDebounced = React.useMemo(\n    () => debounce<typeof fetchSuggestions>(fetchSuggestions),\n    [fetchSuggestions]\n  );\n\n  React.useEffect(() => {\n    if (data?.geocode) {\n      setSuggestions([data.geocode]);\n    }\n  }, [data?.geocode]);\n\n  React.useEffect(() => {\n    if (value && value?.length > 4) {\n      fetchSuggestionsDebounced(value);\n    } else if (!value) {\n      setSuggestions([]);\n    }\n  }, [value, fetchSuggestionsDebounced]);\n\n  const onPickResult = React.useCallback(\n    (location: GeocodedLocation) => {\n      onSelect(location);\n      onChangeText(location.formattedString || '');\n      setSuggestions([]);\n      setSelected(location);\n    },\n    [onChangeText, onSelect]\n  );\n\n  return (\n    <View style={{ width: '100%', borderRadius: 3, backgroundColor: 'white' }}>\n      <Searchbar\n        {...{ value, onChangeText }}\n        allowFontScaling\n        numberOfLines={1}\n        onSubmitEditing={() => {\n          if (first(suggestions)) {\n            onPickResult(first(suggestions) as GeocodedLocation);\n          }\n        }}\n      />\n      {suggestions\n        ?.filter((suggestion) => suggestion.formattedString !== selected?.formattedString)\n        .map((item) => {\n          return (\n            <>\n              <Divider />\n              <List.Item\n                title={item.formattedString}\n                onPress={() => {\n                  onPickResult(item);\n                }}\n              />\n            </>\n          );\n        })}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport Map from 'app/components/map/Map';\nimport AddressSearchBar from 'app/components/input/search/AddressSearchBar';\nimport { useIsFocused } from '@react-navigation/core';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const [searchText, setSearchText] = React.useState('');\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <Step {...props} title=\"Location\" hideContentUntilNavigatedTo>\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <View style={{ width: 300, display: 'none', alignSelf: 'flex-start', marginLeft: 32 }}>\n          <AddressSearchBar\n            value={searchText}\n            onChange={setSearchText}\n            autocomplete\n            onSelect={(item) => {\n              dispatch(actions.forms.dropzone.setField(['lat', item.lat]));\n              dispatch(actions.forms.dropzone.setField(['lng', item.lng]));\n            }}\n          />\n        </View>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 32,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction AircraftWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.plane);\n  const [minSlots, setMinSlots] = React.useState(state?.fields?.minSlots?.value || 0);\n  const [maxSlots, setMaxSlots] = React.useState(state?.fields?.maxSlots?.value || 0);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Aircraft\">\n      <Fields>\n        <List.Subheader>Information</List.Subheader>\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Registration\"\n          error={!!state.fields.registration.error}\n          value={state.fields.registration.value || ''}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.plane.setField(['registration', newValue]))\n          }\n        />\n        <HelperText type={state.fields.registration.error ? 'error' : 'info'}>\n          {state.fields.registration.error || ''}\n        </HelperText>\n\n        <View style={styles.cardTitle}>\n          <List.Subheader>Max slots</List.Subheader>\n          <Text style={styles.cardValue}>{maxSlots || 34}</Text>\n        </View>\n\n        <View style={styles.slider}>\n          <Slider\n            style={styles.sliderControl}\n            minimumValue={2}\n            maximumValue={34}\n            step={1}\n            minimumTrackTintColor=\"#FF1414\"\n            maximumTrackTintColor=\"#000000\"\n            value={maxSlots}\n            onValueChange={(value) => setMaxSlots(value)}\n            onSlidingComplete={() =>\n              dispatch(actions.forms.plane.setField(['maxSlots', Number(maxSlots)]))\n            }\n          />\n        </View>\n\n        <HelperText type={state.fields.maxSlots?.error ? 'error' : 'info'}>\n          {state.fields.maxSlots?.error || 'Max available slots on this aircraft'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 4 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default AircraftWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { Card } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission, Query } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\n\nconst QUERY_DROPZONE_PERMISSIONS = gql`\n  query QueryDropzonePermissions($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      roles {\n        id\n        name\n        permissions\n      }\n    }\n  }\n`;\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useLazyQuery<Query>(QUERY_DROPZONE_PERMISSIONS);\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          dropzoneId: Number(dropzoneForm.original.id),\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Card, HelperText, List, Menu, Paragraph, TextInput } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction TicketTypeWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [price, setPrice] = React.useState(0);\n\n  return (\n    <Step {...props} title=\"Tickets\">\n      <Fields>\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Name\"\n          error={!!state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.ticketType.setField(['name', newValue]))\n          }\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n\n        <Card style={styles.card} elevation={3}>\n          <View style={styles.cardTitle}>\n            <List.Subheader>Price</List.Subheader>\n            <Text style={styles.cardValue}>${price || 0}</Text>\n          </View>\n\n          <View style={styles.slider}>\n            <Slider\n              style={styles.sliderControl}\n              minimumValue={0}\n              maximumValue={500}\n              step={1}\n              value={price}\n              minimumTrackTintColor=\"#FF1414\"\n              maximumTrackTintColor=\"#000000\"\n              onSlidingComplete={() => dispatch(actions.forms.ticketType.setField(['cost', price]))}\n              onValueChange={setPrice}\n            />\n          </View>\n\n          <HelperText type={state.fields.cost?.error ? 'error' : 'info'}>\n            {state.fields.cost?.error ||\n              'How many slots are required to be filled to dispatch a load with this aircraft'}\n          </HelperText>\n        </Card>\n\n        <Card style={styles.card} elevation={3}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            contentStyle={{ width: 300 }}\n            anchor={\n              <TouchableOpacity onPress={() => setAltitudeMenuOpen(true)}>\n                <View style={styles.cardTitle}>\n                  <List.Subheader>Altitude</List.Subheader>\n                  <Text style={styles.cardValue}>\n                    {state.fields.altitude.value &&\n                    [4000, 14000].includes(state.fields.altitude.value)\n                      ? {\n                          '14000': 'Height',\n                          '4000': 'Hop n Pop',\n                        }[state.fields.altitude.value.toString() as '14000' | '4000']\n                      : 'Custom'}\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            }\n          >\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 4000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Hop n Pop\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 14000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Height\"\n              right={() => <List.Icon icon=\"airplane-takeoff\" />}\n            />\n            <List.Item\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setField(['altitude', 7000]));\n                setAltitudeMenuOpen(false);\n              }}\n              title=\"Other\"\n              right={() => <List.Icon icon=\"parachute\" />}\n            />\n          </Menu>\n\n          {(!state.fields.altitude.value ||\n            ![4000, 14000].includes(state.fields.altitude.value)) && (\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Custom altitude\"\n              error={!!state.fields.altitude.error}\n              value={state.fields.altitude?.value?.toString()}\n              onChangeText={(newValue) =>\n                dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n              }\n            />\n          )}\n        </Card>\n        <Paragraph style={styles.paragraph}>\n          You can add more tickets later under Settings\n        </Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  paragraph: {\n    marginBottom: 8,\n    fontWeight: 'bold',\n    // fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    // marginHorizontal: 16,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default TicketTypeWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { PlaneFields } from 'app/components/forms/plane/slice';\nimport { TicketTypeFields } from 'app/components/forms/ticket_type/slice';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport useMutationCreatePlane from 'app/api/hooks/useMutationCreatePlane';\nimport useMutationUpdatePlane from 'app/api/hooks/useMutationUpdatePlane';\nimport useMutationCreateTicketType from 'app/api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from 'app/api/hooks/useMutationUpdateTicketType';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport AircraftStep from './steps/Aircraft';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport TicketTypeStep from './steps/TicketType';\n\nfunction DropzoneSetupScreen() {\n  const aircraft = useAppSelector((root) => root.forms.plane);\n  const ticket = useAppSelector((root) => root.forms.ticketType);\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const mutationCreatePlane = useMutationCreatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationUpdatePlane = useMutationUpdatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationCreateTicketType = useMutationCreateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n  const mutationUpdateTicketType = useMutationUpdateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onThemingNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federationId: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federationId: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            break;\n          case 'federationId':\n            navigation.goBack();\n            navigation.goBack();\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            break;\n          case 'name':\n            navigation.goBack();\n            navigation.goBack();\n            navigation.goBack();\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            break;\n          case 'lat':\n          case 'lng':\n            navigation.goBack();\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n    navigation,\n  ]);\n\n  const onAircraftNext = React.useCallback(async () => {\n    if (!aircraft.fields.name.value) {\n      dispatch(actions.forms.plane.setFieldError(['name', 'You must name your aircraft']));\n      throw new Error();\n    }\n    if (!aircraft.fields.registration.value) {\n      dispatch(\n        actions.forms.plane.setFieldError(['registration', 'Please provide aircraft registration'])\n      );\n      throw new Error();\n    }\n\n    // Create or update dropzone\n    const result = !aircraft.original?.id\n      ? await mutationCreatePlane.mutate({\n          dropzoneId: Number(dropzone?.original?.id),\n          name: aircraft.fields.name.value,\n          registration: aircraft.fields.registration.value,\n          minSlots: Number(aircraft.fields.minSlots.value),\n          maxSlots: Number(aircraft.fields.maxSlots.value),\n        })\n      : await mutationUpdatePlane.mutate({\n          id: Number(aircraft.original.id),\n          name: aircraft.fields.name.value,\n          registration: aircraft.fields.registration.value,\n          minSlots: aircraft.fields.minSlots.value,\n          maxSlots: aircraft.fields.maxSlots.value,\n        });\n\n    if (!result?.errors?.length && result?.plane?.id) {\n      dispatch(actions.forms.plane.setOpen(result?.plane));\n    } else {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (field) {\n          case 'registration':\n            dispatch(actions.forms.plane.setFieldError(['registration', message]));\n            break;\n          case 'name':\n            dispatch(actions.forms.plane.setFieldError(['name', message]));\n            break;\n          case 'maxSlots':\n            dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    aircraft.fields.maxSlots.value,\n    aircraft.fields.minSlots.value,\n    aircraft.fields.name.value,\n    aircraft.fields.registration.value,\n    aircraft.original?.id,\n    dispatch,\n    dropzone?.original?.id,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n  ]);\n\n  const onTicketTypeNext = React.useCallback(async () => {\n    if (!ticket.fields.name.value) {\n      dispatch(actions.forms.ticketType.setFieldError(['name', 'You must name your ticket']));\n      throw new Error();\n    }\n\n    if (!ticket.fields.cost.value) {\n      dispatch(actions.forms.ticketType.setFieldError(['cost', 'Tickets must have a price']));\n      throw new Error();\n    }\n\n    // Create or update dropzone\n    const result = !ticket.original?.id\n      ? await mutationCreateTicketType.mutate({\n          dropzoneId: Number(dropzone.original?.id),\n          name: ticket.fields.name.value,\n          cost: ticket.fields.cost.value,\n          altitude: ticket.fields.altitude.value,\n          isTandem: false,\n          allowManifestingSelf: true,\n        })\n      : await mutationUpdateTicketType.mutate({\n          id: Number(ticket.original.id),\n          name: ticket.fields.name.value,\n          cost: ticket.fields.cost.value,\n          altitude: ticket.fields.altitude.value,\n          isTandem: false,\n          allowManifestingSelf: true,\n        });\n\n    if (!result?.errors?.length && result?.ticketType?.id) {\n      dispatch(actions.forms.ticketType.setOpen(result.ticketType));\n    } else {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (field) {\n          case 'cost':\n            dispatch(actions.forms.ticketType.setFieldError(['cost', message]));\n            break;\n          case 'name':\n            dispatch(actions.forms.ticketType.setFieldError(['name', message]));\n            break;\n          case 'altitude':\n            dispatch(actions.forms.ticketType.setFieldError(['altitude', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    ticket.fields.name.value,\n    ticket.fields.cost.value,\n    ticket.fields.altitude.value,\n    ticket.original?.id,\n    mutationCreateTicketType,\n    dropzone.original?.id,\n    mutationUpdateTicketType,\n    dispatch,\n  ]);\n\n  return (\n    <Wizard\n      dots\n      name=\"DropzoneWizard\"\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.ticketType.setOpen(false));\n            dispatch(actions.forms.plane.setOpen(false));\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.ticketType.reset());\n            dispatch(actions.forms.plane.reset());\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: onThemingNext },\n        { component: AircraftStep, onNext: onAircraftNext },\n        { component: TicketTypeStep, onNext: onTicketTypeNext },\n        {\n          component: (stepProps) => (\n            <PermissionStep {...stepProps} permission={Permission.CreateSlot} title=\"Manifest\" />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.ticketType.setOpen(false));\n            dispatch(actions.forms.plane.setOpen(false));\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.ticketType.reset());\n            dispatch(actions.forms.plane.reset());\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            navigation.replace('Authenticated', { screen: 'HomeScreen' });\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, TextInput } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title={`${state.federation?.value?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <TextInput\n          value={state.fields?.apfNumber?.value || ''}\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n          }\n          label={`${state.federation.value?.name} ID`}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RealName(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <TextInput\n          value={state.fields?.name?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction UserInfoScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <TextInput\n          value={state.fields?.nickname?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n          {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default UserInfoScreen;\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { License, Query } from '../../../api/schema.d';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: License | null;\n  federationId?: number | null;\n  onSelect(jt: License): void;\n}\n\nconst QUERY_LICENSES = gql`\n  query Licenses($federationId: Int) {\n    licenses(federationId: $federationId) {\n      id\n      name\n\n      federation {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useQuery<Query>(QUERY_LICENSES, {\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<License>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as License[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseCardSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default FederationStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { HelperText, Menu, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Menu\n          onDismiss={() => setMenuOpen(false)}\n          visible={isMenuOpen}\n          anchor={\n            <TouchableOpacity onPress={() => setMenuOpen(true)}>\n              <TextInput\n                pointerEvents=\"box-only\"\n                style={styles.field}\n                mode=\"outlined\"\n                error={!!state.fields.make.error}\n                value={isOtherMake ? 'Other' : state.fields.make.value || 'Select manufacturer'}\n                disabled\n              />\n            </TouchableOpacity>\n          }\n        >\n          {[\n            'Icon',\n            'Javelin',\n            'Mirage',\n            'Vector',\n            'PA (Talon)',\n            'Infinity',\n            'Parachutes de France',\n            'Parachute Systems',\n            'Racer',\n          ].map((make) => (\n            <Menu.Item\n              onPress={() => {\n                setMenuOpen(false);\n                setIsOtherMake(false);\n                dispatch(actions.forms.rig.setField(['make', make]));\n              }}\n              title={make}\n            />\n          ))}\n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              dispatch(actions.forms.rig.setField(['make', '']));\n              setIsOtherMake(true);\n            }}\n            title=\"Other\"\n          />\n        </Menu>\n        {!isOtherMake ? null : (\n          <TextInput\n            style={styles.field}\n            mode=\"flat\"\n            label=\"Other manufacturer\"\n            error={!!state.fields.make.error}\n            value={state.fields.make.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n          />\n        )}\n\n        <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n          {state.fields.make.error || ''}\n        </HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Model\"\n          error={!!state.fields.model.error}\n          value={state.fields.model.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n        />\n        <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n          {state.fields.model.error || 'e.g G4.1'}\n        </HelperText>\n\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Serial number\"\n          error={!!state.fields.serial.error}\n          value={state.fields.serial.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n        />\n        <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n          {state.fields.serial.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 16, marginVertical: 16 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <CardSelect\n          items={[\n            { value: false, label: 'I have my own rig' },\n            { value: true, label: 'I dont have my own rig' },\n          ]}\n          renderItemLabel={({ label }) => label}\n          onChangeSelected={(options) =>\n            dispatch(actions.screens.userWizard.skipRigSetup(options[0].value))\n          }\n          isSelected={({ value }) => value === state.skipRigSetup}\n          selected={[\n            state.skipRigSetup\n              ? { value: true, label: 'I dont have my own rig' }\n              : { value: false, label: 'I have my own rig' },\n          ]}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Avatar, Card, HelperText, List, Paragraph } from 'react-native-paper';\nimport Slider from '@react-native-community/slider';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [canopySize, setCanopySize] = React.useState(rigForm.fields.canopySize.value || 120);\n  const [weight, setWeight] = React.useState(Number(userForm.fields.exitWeight.value) || 120);\n\n  React.useEffect(() => {\n    if (rigForm.fields.canopySize.value) {\n      setCanopySize(rigForm.fields.canopySize.value);\n    }\n  }, [rigForm.fields.canopySize.value]);\n\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil(\n                (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                  (rigForm.fields.canopySize.value || 150),\n                2\n              ).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>\n              Your wingloading is an indicator of your descent rate under canopy\n            </Paragraph>\n          </View>\n        </View>\n        <View style={styles.cardTitle}>\n          <List.Subheader>Your exit weight</List.Subheader>\n          <Text style={styles.cardValue}>{weight || 50}kg</Text>\n        </View>\n        <Slider\n          style={styles.sliderControl}\n          minimumValue={50}\n          maximumValue={160}\n          step={0.5}\n          minimumTrackTintColor=\"#FF1414\"\n          maximumTrackTintColor=\"#000000\"\n          onSlidingComplete={() =>\n            dispatch(actions.forms.user.setField(['exitWeight', weight.toString()]))\n          }\n          value={weight}\n          onValueChange={(w) => setWeight(w)}\n        />\n        <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n          {userForm.fields.exitWeight?.error || \"Your weight in kg's with all equipment on\"}\n        </HelperText>\n\n        <View style={styles.cardTitle}>\n          <List.Subheader>Canopy size</List.Subheader>\n          <Text style={styles.cardValue}>{canopySize || 120}ft</Text>\n        </View>\n\n        <View style={styles.slider}>\n          <Slider\n            style={styles.sliderControl}\n            minimumValue={34}\n            maximumValue={350}\n            step={1}\n            value={canopySize || 120}\n            minimumTrackTintColor=\"#FF1414\"\n            maximumTrackTintColor=\"#000000\"\n            onValueChange={(size) => setCanopySize(size)}\n            onSlidingComplete={() =>\n              dispatch(actions.forms.rig.setField(['canopySize', canopySize]))\n            }\n          />\n        </View>\n\n        <HelperText type={userForm.fields.exitWeight?.error ? 'error' : 'info'}>\n          {userForm.fields.exitWeight?.error || 'Size of your main canopy in square feet'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/navigation_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  useJoinFederationMutation,\n  useCreateRigMutation,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport useMutationUpdateUser from 'app/api/hooks/useMutationUpdateUser';\nimport { UserFields } from 'app/components/forms/user/slice';\nimport { License, Rig } from 'app/api/schema.d';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  const [joinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (e) => true,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const [mutationUpdateRig] = useUpdateRigMutation();\n  const [mutationCreateRig] = useCreateRigMutation();\n\n  const onNameNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n      dispatch(\n        actions.forms.user.setFieldError(['name', 'Please enter your full name, including surname'])\n      );\n      throw new Error();\n    }\n  }, [dispatch, userForm.fields.name.value]);\n\n  const onNicknameNext = React.useCallback(async () => {\n    // Update user license\n    const result = await mutationUpdateUser.mutate({\n      id: Number(userForm.original?.id),\n      nickname: userForm.fields.nickname.value,\n      name: userForm.fields.name.value,\n    });\n\n    if (result?.errors) {\n      throw new Error();\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.name.value,\n    userForm.fields.nickname.value,\n    userForm.original?.id,\n  ]);\n\n  const onFederationNext = React.useCallback(async () => {\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          federationId: Number(userForm.federation?.value?.id),\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [dispatch, joinFederation, userForm.federation.value?.id, userForm.federation.value?.name]);\n\n  const onFederationNumberNext = React.useCallback(async () => {\n    // Validate\n    if (\n      userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n      !userForm.fields.apfNumber.value\n    ) {\n      dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n      throw new Error();\n    }\n\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          uid: userForm.fields.apfNumber.value,\n          federationId: Number(userForm.federation?.value?.id),\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation.value?.id,\n    userForm.federation.value?.name,\n    userForm.fields.apfNumber.value,\n  ]);\n\n  const onLicenseNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.license?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n      throw new Error();\n    }\n\n    try {\n      const response = await joinFederation({\n        variables: {\n          federationId: Number(userForm.federation?.value?.id),\n          licenseId: Number(userForm.fields.license?.value?.id),\n        },\n      });\n      if (response.data?.joinFederation?.errors) {\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation?.value?.id,\n    userForm.fields.license?.value?.id,\n  ]);\n\n  const onRigNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.make?.value) {\n      dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n      throw new Error();\n    }\n\n    if (!rigForm.fields.model?.value) {\n      dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n      throw new Error();\n    }\n\n    // Create user rig\n    try {\n      if (!rigForm.original?.id) {\n        const response = await mutationCreateRig({\n          variables: {\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.id),\n          },\n        });\n        if (response?.data?.createRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.createRig?.rig as Rig));\n        }\n      } else {\n        const response = await mutationUpdateRig({\n          variables: {\n            id: Number(rigForm.original?.id),\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.id),\n          },\n        });\n        if (response?.data?.updateRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.updateRig?.rig as Rig));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    rigForm.fields.make.value,\n    rigForm.fields.model.value,\n    rigForm.fields.serial.value,\n    rigForm.original?.id,\n    dispatch,\n    mutationCreateRig,\n    userForm.original?.id,\n    mutationUpdateRig,\n  ]);\n\n  const onReserveRepackNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.repackExpiresAt?.value) {\n      dispatch(\n        actions.forms.rig.setFieldError([\n          'repackExpiresAt',\n          \"Select repack date, even if it's in the past\",\n        ])\n      );\n      throw new Error();\n    }\n\n    // Update repack expiry date\n    const { data } = await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n      },\n    });\n    if (data?.updateRig?.rig) {\n      dispatch(actions.forms.rig.setOriginal(data?.updateRig?.rig as Rig));\n    }\n  }, [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]);\n\n  const onWingloadingNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.canopySize?.value) {\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n      throw new Error();\n    }\n\n    if (!userForm.fields.exitWeight?.value) {\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight']));\n      throw new Error();\n    }\n\n    await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        canopySize: rigForm.fields.canopySize.value,\n      },\n    });\n    await mutationUpdateUser.mutate({\n      id: Number(userForm.original?.id),\n      exitWeight: Number(userForm.fields.exitWeight?.value),\n    });\n  }, [\n    rigForm.fields.canopySize.value,\n    rigForm.original?.id,\n    userForm.fields.exitWeight?.value,\n    userForm.original?.id,\n    dispatch,\n    mutationUpdateRig,\n    mutationUpdateUser,\n  ]);\n\n  return (\n    <Wizard\n      name=\"UserWizard\"\n      dots\n      steps={[\n        {\n          component: RealNameStep,\n          onNext: onNameNext,\n          onBack: () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n        { component: NicknameStep, onNext: onNicknameNext },\n        { component: FederationStep, onNext: onFederationNext },\n        userForm.federation?.value?.id && userForm?.federation?.value?.name?.toLowerCase() === 'apf'\n          ? { component: FederationNumberStep, onNext: onFederationNumberNext }\n          : null,\n        { component: LicenseStep, onNext: onLicenseNext },\n        { component: AskForRigStep },\n        state?.skipRigSetup ? null : { component: RigStep, onNext: onRigNext },\n        state?.skipRigSetup ? null : { component: ReserveRepackStep, onNext: onReserveRepackNext },\n        state?.skipRigSetup ? null : { component: WingloadingStep, onNext: onWingloadingNext },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n      ].filter(Boolean)}\n    />\n  );\n}\n\nexport default UserWizardScreen;\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('DropzonesScreen');\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../../assets/images/finished-2.json';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Password changed\">\n      <Fields>\n        <LottieView\n          loop={false}\n          autoPlay\n          speed={1.2}\n          style={{ height: 300, width: 300 }}\n          source={lottieDoneAnimation as unknown as string}\n        />\n        <Paragraph>Your password has been changed. You can now log in again.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport { getPasswordStrength } from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={Boolean(fields.password.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={getPasswordStrength(fields.password.value)} />\n        <HelperText type=\"error\">{fields.password.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { HelperText, TextInput } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={Boolean(fields.passwordConfirmation.error)}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type=\"error\">{fields.passwordConfirmation.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import RecoverPasswordScreen from './ChangePasswordScreen';\n\nexport default RecoverPasswordScreen;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUpdateLostPasswordMutation } from 'app/api/reflection';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\nimport { User } from 'app/api/schema.d';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport DoneStep from './steps/Done';\nimport PasswordStep from './steps/Password';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n\n  const [updatePassword] = useUpdateLostPasswordMutation();\n\n  const onChangePassword = React.useCallback(async () => {\n    try {\n      if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n        throw new Error('Password mismatch. Did you type exactly the same password?');\n      }\n      if (!route.params?.token) {\n        throw new Error('Security token missing - try clicking the link in the email again');\n      }\n      const result = await updatePassword({\n        variables: {\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          token: route.params.token,\n        },\n      });\n\n      if (result?.data?.userUpdatePasswordWithToken?.authenticatable) {\n        dispatch(\n          actions.global.setUser(result.data.userUpdatePasswordWithToken.authenticatable as User)\n        );\n        return;\n      }\n      if (result.errors?.length) {\n        throw new Error(result.errors[0].message);\n      }\n      throw new Error('Password change failed');\n    } catch (e) {\n      dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    route.params?.token,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    updatePassword,\n  ]);\n\n  const navigation = useNavigation();\n\n  const validatePassword = React.useCallback(async () => {\n    if (!checkPasswordComplexity(state.fields.password.value)) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Password too weak');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  return (\n    <Wizard\n      dots\n      name=\"ChangePasswordWizard\"\n      steps={[\n        { onBack: navigation.goBack, onNext: validatePassword, component: PasswordStep },\n        { onNext: onChangePassword, component: PasswordConfirmationStep },\n        { component: DoneStep },\n      ]}\n    />\n  );\n}\n","import gql from 'graphql-tag';\nimport { createQuery } from '../createQuery';\nimport { Query, QueryDropzonesArgs } from '../schema';\n\nconst QUERY_DROPZONES = gql`\n  query QueryDropzones {\n    dropzones {\n      edges {\n        node {\n          id\n          name\n          primaryColor\n          secondaryColor\n          banner\n          ticketTypes {\n            id\n            name\n            cost\n            allowManifestingSelf\n            currency\n          }\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createQuery<Query['dropzones'], QueryDropzonesArgs>(QUERY_DROPZONES, {\n  getPayload: (query) => query?.dropzones,\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport {\n  DrawerActions,\n  getFocusedRouteNameFromRoute,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'react-native-skeleton-content';\nimport InfoGrid from '../../screens/authenticated/load/InfoGrid';\nimport useRestriction from '../../hooks/useRestriction';\nimport { Permission } from '../../api/schema.d';\nimport useCurrentDropzone from '../../api/hooks/useCurrentDropzone';\nimport useQueryDropzones from '../../api/hooks/useQueryDropzones';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { currentUser, dropzone, loading } = useCurrentDropzone();\n  const { data } = useQueryDropzones({\n    variables: {\n      isPublic: true,\n    },\n    onError: (err) => console.error(err),\n  });\n\n  const navigation = useNavigation();\n  const route = useRoute();\n  const routeName = getFocusedRouteNameFromRoute(route);\n  const navState = navigation.dangerouslyGetState();\n  const subNavState = navState.routes[navState.index].state;\n  // eslint-disable-next-line\n  // @ts-ignore\n  const subNavRoutes = subNavState?.routes[subNavState?.index];\n  const subNavSubState = subNavRoutes?.state;\n  let subRouteName = subNavState && getFocusedRouteNameFromRoute(subNavRoutes);\n  subRouteName = subRouteName || subNavSubState?.routes[0].name;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'Authenticated',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'ProfileScreen',\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(subRouteName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'ManifestScreen',\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Profile\"\n            active={subRouteName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ProfileScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={subRouteName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'EquipmentScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={subRouteName === 'Notifications'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Notifications',\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={subRouteName === 'TransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'TransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n        <Drawer.Section title=\"Dropzone\">\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={subRouteName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'Authenticated',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'DropzoneTransactionsScreen',\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'Authenticated',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'SettingsScreen',\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Switch dropzone\">\n          {data?.edges?.map((edge) => (\n            <Drawer.Item\n              key={`${edge?.node?.id}-dz`}\n              label={edge?.node?.name || ''}\n              icon=\"map-marker\"\n              active={dropzone?.id === edge?.node?.id}\n              onPress={() => {\n                if (edge?.node) {\n                  dispatch(actions.global.setDropzone(edge.node));\n                  navigation.navigate('Authenticated', {\n                    screen: 'Authenticated',\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('DropzoneSetupScreen');\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport AuthenticatedRoutes from './Authenticated';\nimport LimboRoutes from './LimboRoutes';\nimport UnauthenticatedRoutes from './Unauthenticated';\nimport DropzonesScreen from '../screens/authenticated/dropzones/DropzonesScreen';\nimport DropzoneSetupScreen from '../screens/authenticated/dropzone_wizard/DropzoneWizard';\nimport UserSetupWizard from '../screens/authenticated/user_wizard/UserWizardScreen';\nimport ConfirmUserScreen from '../screens/unauthenticated/signup/ConfirmUserScreen';\nimport ChangePasswordScreen from '../screens/unauthenticated/login/ChangePasswordScreen';\nimport DrawerMenu from './drawer/Drawer';\n\nexport type TRootNavigatorRouteParams = {\n  Authenticated: undefined;\n  Unauthenticated: undefined;\n  // eslint-disable-next-line camelcase\n  confirm: { token?: string };\n  ChangePasswordScreen: { token?: string };\n  Dropzones: undefined;\n  DropzonesScreen: undefined;\n  DropzoneSetupScreen: undefined;\n  UserSetupWizard: undefined;\n  NotFound: undefined;\n};\n\nexport type TDrawerNavigatorRouteParams = {\n  Authenticated: undefined;\n  Profile: undefined;\n  Settings: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<TRootNavigatorRouteParams>();\nconst Drawer = createDrawerNavigator<TDrawerNavigatorRouteParams>();\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\">\n            {() => (\n              <Drawer.Navigator drawerContent={() => <DrawerMenu />}>\n                <Drawer.Screen name=\"Authenticated\" component={AuthenticatedRoutes} />\n              </Drawer.Navigator>\n            )}\n          </Stack.Screen>\n        ) : (\n          <Stack.Screen name=\"Dropzones\" component={LimboRoutes} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={UnauthenticatedRoutes} />\n      )}\n      <Stack.Screen name=\"DropzoneSetupScreen\" component={DropzoneSetupScreen} />\n      <Stack.Screen name=\"UserSetupWizard\" component={UserSetupWizard} />\n      <Stack.Screen name=\"confirm\" component={ConfirmUserScreen} />\n      <Stack.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} />\n      <Stack.Screen name=\"DropzonesScreen\" component={DropzonesScreen} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider as MaterialProvider, ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { Appearance, Linking, Platform, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { registerRootComponent } from 'expo';\nimport * as Sentry from 'sentry-expo';\nimport URI from 'urijs';\nimport Geocoder from 'react-native-geocoding';\nimport { setGoogleApiKey } from 'expo-location';\n/* eslint-disable import/no-unresolved */\nimport './PaperDatesPolyfill';\nimport Wrapper from './EntrypointWrapper';\n\nimport AppUpdate from './components/app_update/AppUpdate';\n\nimport Apollo from './api/Apollo';\nimport { store, persistor, useAppSelector, useAppDispatch } from './state/store';\nimport ImageViewer from './components/dialogs/ImageViewer/ImageViewer';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport NotificationArea from './components/notifications/Notifications';\nimport LinkingConfiguration from './navigation/Routes';\nimport RootNavigator from './navigation/RootNavigator';\nimport { actions } from './state';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  enableInExpoDevelopment: true,\n  debug: true,\n});\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nconst googleMapsApiKey = Platform.select({\n  ios: Constants.manifest?.extra?.googleMapsIos,\n  android: Constants.manifest?.extra?.googleMapsAndroid,\n  web: Constants.manifest?.extra?.googleMapsWeb,\n});\n\nGeocoder.init(googleMapsApiKey);\nsetGoogleApiKey(googleMapsApiKey);\n\nfunction Content() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = (link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  };\n\n  const isDarkMode = Appearance.getColorScheme() === 'dark';\n\n  React.useEffect(() => {\n    if (isDarkMode && !state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else if (!isDarkMode && state.isDarkMode) {\n      dispatch(actions.global.toggleDarkMode());\n    } else {\n      dispatch(actions.global.setPrimaryColor(state.theme.colors.primary));\n    }\n  }, [dispatch, isDarkMode, state.isDarkMode, state.theme.colors.primary]);\n\n  React.useEffect(() => {\n    if (Platform.OS === 'web') {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: notification.request.content.body,\n            variant: 'info',\n          })\n        );\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      console.log({ notification: response });\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch]);\n\n  return (\n    <AppUpdate>\n      <React.Suspense\n        fallback={\n          <View style={{ flex: 1, flexGrow: 1 }}>\n            <ProgressBar indeterminate color={state?.theme?.colors?.accent} visible />\n          </View>\n        }\n      >\n        <Apollo>\n          <MaterialProvider theme={state.theme}>\n            <SafeAreaProvider>\n              <ImageViewer />\n              <NavigationContainer\n                linking={LinkingConfiguration}\n                theme={state.theme as unknown as never}\n              >\n                <Wrapper>\n                  <RootNavigator />\n                </Wrapper>\n              </NavigationContainer>\n\n              <StatusBar />\n              <NotificationArea />\n            </SafeAreaProvider>\n          </MaterialProvider>\n        </Apollo>\n      </React.Suspense>\n    </AppUpdate>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default registerRootComponent(App);\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        // console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n"],"sourceRoot":""}