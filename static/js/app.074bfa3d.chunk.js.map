{"version":3,"sources":["assets/fonts/SpaceMono-Regular.ttf","webpack:///./app/screens/authenticated/overview/statistics/LoadsByDay.css?0258","app/screens/authenticated/overview/statistics/LoadsByDay.css","app/entrypoint/bootstrap/PaperDatesPolyfill.ts","app/constants/expo.ts","app/entrypoint/bootstrap/GoogleMaps.ts","app/entrypoint/bootstrap/Notifications.tsx","app/components/app_signal/AppSignalClient.tsx","app/components/app_signal/AppSignalContext.tsx","app/components/app_signal/AppSignalFallbackBoundary.tsx","app/components/LottieView.web.tsx","app/components/app_signal/ErrorScreen.tsx","app/components/app_signal/AppSignalBoundary.tsx","app/components/app_signal/AppSignalProvider.tsx","app/api/reflection.tsx","app/api/crud/factory.tsx","app/api/crud/useDropzone.tsx","app/api/schema.d.ts","app/components/forms/credits/slice.tsx","app/screens/wizards/dropzone_wizard/slice.tsx","app/components/forms/dropzone/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/extra/slice.tsx","app/components/forms/load/slice.tsx","app/components/forms/ghost/slice.tsx","app/components/forms/plane/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/ticket_type/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/user/user_list/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/dropzone/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/wizards/user_wizard/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/components/notifications/slice.ts","app/state/store.ts","app/components/app_signal/AppSignalTagger.tsx","app/components/app_signal/AppSignalLink.tsx","app/api/Apollo.tsx","app/entrypoint/EntrypointWrapper.web.tsx","app/api/crud/useDropzones.tsx","app/components/input/time_picker/TimePicker.tsx","app/hooks/useRestriction.ts","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/api/crud/useLoad.tsx","app/api/crud/useManifest.tsx","app/entrypoint/providers/Dropzones.tsx","app/entrypoint/providers/PushNotificationProvider.tsx","app/entrypoint/providers/ThemeProvider.web.tsx","app/entrypoint/providers/AppUpdate.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/components/notifications/Notifications.tsx","app/screens/NotFoundScreen.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/screens/limbo/dropzone_select/DropzoneCard.tsx","app/screens/limbo/dropzone_select/DropzonesScreen.tsx","app/screens/limbo/routes.tsx","app/components/GradientText.web.tsx","app/components/navigation_wizard/Step.tsx","app/components/navigation_wizard/Dots.tsx","app/components/navigation_wizard/Wizard.tsx","app/utils/checkPasswordComplexity.ts","app/components/input/text/TextField.tsx","app/components/input/PasswordComplexityIndicator.tsx","app/screens/unauthenticated/signup/wizard/steps/Password.tsx","app/screens/unauthenticated/signup/wizard/steps/Email.tsx","app/screens/unauthenticated/signup/wizard/steps/PasswordConfirmation.tsx","app/screens/unauthenticated/signup/wizard/steps/Done.tsx","app/screens/unauthenticated/signup/wizard/SignupWizard.tsx","app/components/Divider.tsx","app/screens/unauthenticated/login/FacebookButton.web.tsx","app/screens/unauthenticated/login/AppleButton.web.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/api/hooks/useMutationSignUp.tsx","app/components/layout/ScrollableScreen.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/screens/unauthenticated/routes.tsx","app/components/carousel_wizard/Step.tsx","app/components/carousel_wizard/Dots.tsx","app/components/carousel_wizard/Wizard.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationUpdateDropzone.ts","app/api/hooks/useMutationCreatePlane.tsx","app/api/hooks/useMutationUpdatePlane.tsx","app/api/hooks/useMutationCreateTicketType.ts","app/api/hooks/useMutationUpdateTicketType.ts","app/screens/wizards/dropzone_wizard/steps/Name.tsx","app/components/input/card_select/CardSelect.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/screens/wizards/dropzone_wizard/steps/Federation.tsx","app/utils/calculateLatLngDelta.ts","app/components/map/Map.web.tsx","app/components/input/search/AddressSearchBar.tsx","app/screens/wizards/dropzone_wizard/steps/Location.web.tsx","app/components/input/number_input/NumberField.web.tsx","app/screens/wizards/dropzone_wizard/steps/Aircraft.tsx","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/screens/wizards/dropzone_wizard/steps/Theming.tsx","app/screens/wizards/dropzone_wizard/steps/Done.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/wizards/dropzone_wizard/steps/Permissions.tsx","app/components/UserAvatar.tsx","app/components/UserAvatar.web.old.tsx","app/components/popover/Menu.web.tsx","app/components/input/select/Select.web.tsx","app/components/input/dropdown_select/AltitudeSelect.tsx","app/screens/wizards/dropzone_wizard/steps/TicketType.tsx","app/hooks/useImagePicker.ts","app/screens/wizards/dropzone_wizard/steps/Logo.tsx","app/screens/wizards/dropzone_wizard/DropzoneWizard.tsx","app/api/hooks/useMutationUpdateUser.ts","app/screens/wizards/user_wizard/steps/Federation.tsx","app/screens/wizards/user_wizard/steps/FederationNumber.tsx","app/screens/wizards/user_wizard/steps/RealName.tsx","app/screens/wizards/user_wizard/steps/Nickname.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/screens/wizards/user_wizard/steps/License.tsx","app/screens/wizards/user_wizard/steps/Rig.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/screens/wizards/user_wizard/steps/ReserveRepack.tsx","app/screens/wizards/user_wizard/steps/AskForRig.tsx","app/screens/wizards/user_wizard/steps/Wingloading.tsx","app/screens/wizards/user_wizard/steps/Done.tsx","app/screens/wizards/user_wizard/steps/Avatar.tsx","app/screens/wizards/user_wizard/UserWizardScreen.tsx","app/screens/wizards/recover_password/steps/Email.tsx","app/screens/wizards/recover_password/steps/Done.tsx","app/screens/wizards/recover_password/RecoverPasswordScreen.tsx","app/screens/wizards/confirm_user/ConfirmUserScreen.tsx","app/screens/wizards/change_password/steps/Done.tsx","app/screens/wizards/change_password/steps/Password.tsx","app/screens/wizards/change_password/steps/PasswordConfirmation.tsx","app/screens/wizards/change_password/ChangePasswordScreen.tsx","app/components/Skeleton.web.tsx","app/components/chips/Chip.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/forms/ghost/GhostForm.tsx","app/components/layout/DialogOrSheet.web.tsx","app/api/hooks/useMutationCreateGhost.ts","app/components/dialogs/Ghost.tsx","app/screens/authenticated/user/useUserNavigation.ts","app/screens/authenticated/user/user_list/UsersScreen.tsx","app/screens/authenticated/user/user_list/AppBar.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/api/hooks/useMutationUpdateRig.tsx","app/screens/authenticated/user/equipment/RigCard.tsx","app/screens/authenticated/user/rig_inspection/RigInspectionScreen.tsx","app/components/Badge.tsx","app/api/utils/createErrorHandler.ts","app/screens/authenticated/user/profile/UserInfo/PermissionBadges.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/components/forms/credits/CreditsForm.tsx","app/components/dialogs/CreditsDialog/Credits.web.tsx","app/api/hooks/useMutationCreateRig.ts","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/forms/user/UserForm.tsx","app/components/dialogs/User.tsx","app/api/hooks/useDropzoneUserProfile.ts","app/hooks/navigation/useProfileWizard.tsx","app/screens/authenticated/user/profile/UserInfo/Header.tsx","app/screens/authenticated/user/profile/UserInfo/InfoGrid.tsx","app/screens/authenticated/user/profile/UserActions.tsx","app/screens/authenticated/user/profile/SlotCard.tsx","app/screens/authenticated/user/profile/tabs/JumpHistory.tsx","app/components/orders/OrderCard.tsx","app/screens/authenticated/user/profile/tabs/index.tsx","app/screens/authenticated/user/profile/tabs/Transactions.tsx","app/screens/authenticated/user/profile/tabs/Equipment.tsx","app/screens/authenticated/user/profile/ProfileScreen.tsx","app/screens/authenticated/user/orders/OrdersScreen.tsx","app/screens/authenticated/user/equipment/EquipmentScreen.tsx","app/screens/authenticated/user/order_receipt/TransactionCard.tsx","app/screens/authenticated/user/order_receipt/ReceiptCard.tsx","app/screens/authenticated/user/order_receipt/OrderScreen.tsx","app/screens/authenticated/user/routes.tsx","app/screens/wizards/routes.tsx","app/screens/authenticated/dropzone/load/InfoGrid.tsx","app/components/drawer/Drawer.tsx","app/components/appbar/SetupWarning.tsx","app/components/appbar/AppBar.tsx","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/components/forms/manifest/ManifestForm.tsx","app/components/dialogs/ManifestUser/ManifestUser.web.tsx","app/components/autocomplete/DropzoneUserAutocomplete.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/layout/SwipeActions.tsx","app/components/slots_table/UserRow.tsx","app/components/slots_table/DragAndDrop/DraggableRow.web.tsx","app/components/slots_table/DragAndDrop/DroppableSlot.web.tsx","app/utils/generateColor.ts","app/components/forms/manifest_group/GroupPicker.tsx","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/dropzone/load/ActionButton.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/dropzone/load/Header.tsx","app/components/slots_table/AvailableRow.web.tsx","app/components/slots_table/Table.tsx","app/screens/authenticated/dropzone/load/views/TableView.tsx","app/screens/authenticated/dropzone/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/utils/calculateCoordinatesByAngle.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/dropzone/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/dropzone/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/useAuthenticatedNavigation.ts","app/screens/authenticated/dropzone/weather_conditions/WindScreen.tsx","app/components/notifications/index.ts","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/forms/load/LoadForm.tsx","app/components/dialogs/Load.tsx","app/hooks/useManifestValidator.ts","app/components/slots_table/DragAndDrop/DraggingRow.web.tsx","app/components/slots_table/DragAndDrop/DragDropSlotProvider.web.tsx","app/hooks/usePalette.ts","app/components/GetStarted.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Card.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Card.tsx","app/screens/authenticated/dropzone/manifest/Weather/JumpRun.tsx","app/screens/authenticated/dropzone/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/dropzone/manifest/SetupProfileCard.tsx","app/screens/authenticated/dropzone/manifest/ManifestScreen.tsx","app/utils/checkDropzoneSetupComplete.ts","app/screens/authenticated/configuration/settings_menu/SettingsMenuScreen.tsx","app/components/forms/ticket_type/TicketTypeForm.tsx","app/components/dialogs/TicketType.tsx","app/screens/authenticated/configuration/ticket_types/TicketTypesScreen.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/configuration/dropzone_settings/DropzoneSettingsScreen.tsx","app/components/forms/plane/PlaneForm.tsx","app/components/dialogs/Plane.tsx","app/screens/authenticated/configuration/aircrafts/AircraftsScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/configuration/rig_inspection_template/RigInspectionTemplateScreen.tsx","app/screens/authenticated/configuration/rigs/DropzoneRigsScreen.tsx","app/screens/authenticated/configuration/permissions/PermissionsScreen.tsx","app/screens/authenticated/configuration/master_log/MasterLogScreen.tsx","app/screens/authenticated/configuration/transactions/DropzoneTransactionsScreen.tsx","app/api/hooks/useMutationCreateExtra.ts","app/api/hooks/useMutationUpdateExtra.ts","app/components/forms/extra/ExtraForm.tsx","app/components/dialogs/TicketTypeExtra.tsx","app/screens/authenticated/configuration/extras/ExtrasScreen.tsx","app/screens/authenticated/configuration/routes.tsx","app/screens/authenticated/dropzone/routes.tsx","app/screens/authenticated/notifications/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/useNotificationNavigation.ts","app/screens/authenticated/notifications/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/notifications/NotificationsScreen.tsx","app/screens/authenticated/notifications/routes.tsx","app/screens/authenticated/overview/statistics/Stats.tsx","app/screens/authenticated/overview/statistics/LoadsByDay.web.tsx","app/screens/authenticated/overview/DropzonesTable.tsx","app/constants/ChartConfig.ts","app/screens/authenticated/overview/statistics/JumpTypePieChart.tsx","app/screens/authenticated/overview/AdminOverview.tsx","app/components/activity/Feed.web.tsx","app/components/activity/Container.tsx","app/screens/authenticated/overview/DropzoneOverview.tsx","app/screens/authenticated/overview/routes.tsx","app/screens/authenticated/TabBar.web.tsx","app/screens/authenticated/routes.tsx","app/screens/drawers/UserDrawer.tsx","app/screens/routes.tsx","app/entrypoint/Entrypoint.tsx","app/entrypoint/hooks/useAppearance.tsx","app/entrypoint/hooks/useRouteChange.tsx","app/entrypoint/index.ts","app/entrypoint/hooks/useCachedResources.ts","index.js","assets/images/logo-black.png","assets/images/logo-white.png","assets/images/webb-dark.png","assets/images/pattern.png","assets/images/logo.png","assets/images/night.png","assets/images/weather.png"],"names":["module","exports","api","content","__esModule","default","i","options","locals","___CSS_LOADER_API_IMPORT___","push","Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","config","Constants","manifest","extra","manifest2","expoClient","googleMapsApiKey","select","ios","googleMapsIos","android","googleMapsAndroid","web","googleMapsWeb","Geocoder","init","setGoogleApiKey","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","AppSignalClient","Appsignal","key","ExpoManifest","appSignalApiKey","namespace","revision","expoConfig","version","ignoreErrors","INITIAL_TAGS","platform","currentDropzoneId","currentDropzone","currentUserId","currentUser","INITIAL_CONTEXT","appSignal","tags","setTags","noop","AppSignalContext","React","useAppSignalContext","ErrorBoundary","props","state","error","undefined","errorInfo","console","this","Fallback","fallback","children","LottieView","ErrorScreen","isDetailsVisible","setDetailsVisible","reloading","setReloading","onToggleDetails","onReloadApp","window","location","reload","reloadAsync","useWindowDimensions","height","width","SafeAreaView","style","position","top","left","alignItems","justifyContent","Card","minHeight","maxWidth","marginHorizontal","Title","title","subtitle","titleStyle","textAlign","subtitleStyle","Content","source","twigBreakAnimation","autoPlay","loop","HelperText","type","message","maxHeight","stack","Actions","Button","compact","onPress","disabled","loading","mode","AppSignalBoundary","instance","errorBoundaryRef","current","ref","AppSignalProvider","use","AppSignalWindowEvents","AppSignalCurrentPath","onUpdateTags","newTags","value","onTagsChanged","span","isEqual","addDecorator","Provider","defaultOptions","RoleEssentialsFragmentDoc","gql","LicenseEssentialsFragmentDoc","UserEssentialsFragmentDoc","DropzoneUserEssentialsFragmentDoc","ActivityEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","LoadEssentialsFragmentDoc","TicketTypeEssentialsFragmentDoc","JumpTypeEssentialsFragmentDoc","SlotEssentialsFragmentDoc","RigEssentialsFragmentDoc","PlaneEssentialsFragmentDoc","ActivityDetailsFragmentDoc","FederationEssentialsFragmentDoc","LicenseDetailsFragmentDoc","UserFederationEssentialsFragmentDoc","UserRigDetailedFragmentDoc","UserDetailedFragmentDoc","DropzoneUserDetailsFragmentDoc","RigInspectionEssentialsFragmentDoc","TransactionEssentialsFragmentDoc","ReceiptEssentialsFragmentDoc","OrderEssentialsFragmentDoc","SlotDetailsFragmentDoc","UserSlotDetailsFragmentDoc","DropzoneUserProfileFragmentDoc","DropzoneStatisticsEssentialsFragmentDoc","DropzoneStatisticsFragmentDoc","WeatherConditionEssentialsFragmentDoc","DropzoneDetailedFragmentDoc","CurrentUserEssentialsFragmentDoc","CurrentUserFragmentDoc","CurrentUserDetailedFragmentDoc","DropzoneExtensiveFragmentDoc","TicketTypeExtraEssentialsFragmentDoc","TicketTypeExtraDetailedFragmentDoc","RigInspectionDetailedFragmentDoc","RigInspectionMutationEssentialsFragmentDoc","RoleDetailedFragmentDoc","LoadDetailsFragmentDoc","SlotExhaustiveFragmentDoc","ArchivePlaneDocument","ArchiveTicketTypeDocument","ArchiveUserDocument","ConfirmUserDocument","CreateDropzoneDocument","CreateLoadDocument","CreateOrderDocument","CreatePlaneDocument","CreateRigDocument","CreateRigInspectionDocument","CreateGhostDocument","DeleteSlotDocument","FinalizeLoadDocument","GrantPermissionDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","Apollo","LoginDocument","LoginWithFacebookDocument","ManifestGroupDocument","useManifestGroupMutation","ManifestUserDocument","useManifestUserMutation","MoveSlotDocument","RecoverPasswordDocument","RevokePermissionDocument","UpdateDropzoneDocument","UpdateDropzoneUserDocument","UpdateLoadDocument","UpdateLostPasswordDocument","UpdatePlaneDocument","UpdateRigDocument","useUpdateRigMutation","UpdateRigInspectionTemplateDocument","UpdateRoleDocument","UpdateTicketTypeDocument","UpdateUserDocument","useUpdateUserMutation","UpdateVisibilityDocument","UserSignUpDocument","ActivityDetailsDocument","DropzoneDocument","DropzoneStatisticsDocument","DropzonesStatisticsDocument","DropzoneRigsDocument","DropzonePermissionsDocument","DropzoneTransactionsDocument","DropzoneUsersDocument","useDropzoneUsersQuery","DropzoneUsersDetailedDocument","DropzoneUserProfileDocument","useDropzoneUserProfileQuery","useDropzoneUserProfileLazyQuery","DropzonesDocument","TicketTypeExtrasDocument","useTicketTypeExtrasQuery","FederationsDocument","useFederationsQuery","AddressToLocationDocument","AllowedJumpTypesDocument","useAllowedJumpTypesQuery","LicensesDocument","useLicensesQuery","LoadDocument","LoadsDocument","NotificationsDocument","PlanesDocument","usePlanesQuery","CurrentUserPermissionsDocument","RigInspectionTemplateDocument","useRigInspectionTemplateQuery","AvailableRigsDocument","RolesDocument","useRolesQuery","AllowedTicketTypesDocument","TicketTypesDocument","useTicketTypesQuery","uninitializedHandler","args","createCRUDContext","useHook","INITIAL_STATE","Context","rest","useContext","DropzoneState","DropzoneStateEvent","EventAccessLevel","EventAction","EventLevel","LoadState","ModerationRole","NotificationType","OrderState","Permission","TransactionStatus","TransactionType","vars","variables","dropzoneId","query","useDropzoneQuery","initialFetchPolicy","skip","permissionsVariables","permissions","useCurrentUserPermissionsQuery","refetch","fetchMore","data","called","queryVariables","dropzone","DropzoneProvider","useDropzoneContext","DropzoneWizardStep","initialState","original","open","fields","amount","transactionType","Deposit","createSlice","name","reducers","setField","action","payload","field","setFieldError","setOpen","reset","federation","lat","lng","secondaryColor","primaryColor","banner","isCreditSystemEnabled","status","Public","Object","keys","forEach","payloadKey","typedKey","setOriginal","role","expiresAt","cost","ticketTypes","gca","dispatchAt","isOpen","loadMaster","pilot","plane","maxSlots","exitWeight","email","phone","license","setFederation","user","registration","minSlots","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","map","idx","setFields","JSON","parse","log","Error","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","passengerName","passengerExitWeight","groupNumber","users","setFromSlots","slots","slot","id","Number","rigId","find","setDropzoneUsers","xorBy","dzUser","autoSelectedRig","rigs","length","first","availableRigs","avatar","image","altitude","allowManifestingSelf","isTandem","apfNumber","nickname","userFederations","uid","userFederation","debug","jumpRun","temperature","exitSpotMiles","offsetDirection","winds","credits","ghost","rigInspection","rigInspectionTemplate","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","currentIndex","completed","Name","Federation","Location","Aircraft","Tickets","Branding","setIndex","complete","skipRigSetup","login","signup","dropzoneWizard","userWizard","close","successColor","infoColor","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","fonts","fontFamily","fontWeight","thin","medium","regular","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","credentials","expoPushToken","currentRouteName","theme","palette","main","accent","isDarkMode","setCredentials","setUser","setExpoPushToken","setCurrentRouteName","setPermissions","setPrimaryColor","color","darken","hex","lighten","setAccentColor","setDropzone","setAppearance","merge","logout","queue","hideSnackbar","newQueue","showSnackbar","last","persistConfig","storage","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","notifications","notificationSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","AppSignalSessionTagProvider","currentDropzoneUser","sessionTags","toString","currentSessionTags","pick","DEFAULT_OPTIONS","breadcrumbs","includeQuery","includeResponse","includeVariables","excludeOperation","excludeError","isServerError","getDefinition","operation","definitions","q","kind","createBreadCrumb","category","operationName","timestamp","Math","floor","Date","getTime","metadata","createAppSignalErrorLink","client","createErrorLink","errors","graphQLErrors","response","ignore","filteredErrors","filter","breadcrumb","loc","body","print","stringify","result","statusCode","addBreadcrumb","sendError","join","e","AppSignalBreadcrumbLink","forward","Observable","originalObserver","subscription","subscribe","next","omit","unsubscribe","ApolloLink","ERROR_CODE_WHITELIST","httpBatchLink","Update","environment","uri","urls","url","BatchHttpLink","batchDebounce","batchMax","root","dispatch","errorLink","onError","networkError","some","extensions","code","variant","process","EXPO_ENV","locations","path","nodes","authLink","setContext","_","headers","accessToken","Authorization","tokenType","useAppSignal","appSignalLink","from","createAppSignalLink","includes","link","ApolloClient","cache","InMemoryCache","typePolicies","Event","relayStylePagination","DropzoneUsers","Loads","ApolloProvider","EntrypointWrapper","View","StyleSheet","absoluteFill","useDropzonesQuery","useUpdateVisibilityMutation","updateVisibilityMutation","updateVisibility","event","fieldErrors","dropzones","edges","edge","node","DropzonesProvider","useDropzonesContext","TimePicker","label","onChange","onDismissSingle","onConfirm","date","timestampLabel","format","Item","description","Icon","icon","Modal","visible","hours","DateTime","fromSeconds","local","toSeconds","hour","minutes","minute","locale","onDismiss","time","set","toJSDate","useRestriction","permission","isRequired","pattern","isEmail","isNumeric","validates","callback","createMutation","mutation","getPayload","fieldErrorMap","validators","opts","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","flat","msg","startCase","mopts","hasErrors","x","variable","validator","test","validate","requestAnimationFrame","updateLoad","useLoadQuery","isTimePickerVisible","setTimePickerVisible","closeTimePicker","openTimePicker","mutationManifestUser","useFinalizeLoadMutation","mutationFinalizeLoad","update","useMutationUpdateLoad","loadNumber","manifestUser","validatedPayload","yup","shape","required","nullable","validateSync","createSlot","ValidationError","dispatchInMinutes","dispatchTime","plus","toISO","BoardingCall","Open","updateLoadState","updatePilot","updateGCA","updatePlane","diff","updateLoadMaster","lm","markAsLanded","Landed","cancel","Cancelled","canDispatchAircraft","UpdateLoad","createAircraftDispatchAction","dispatchAtTime","timepicker","useLoadContext","CustomCallTimePicker","setTime","setLoading","onSubmit","then","Dialog","dismissable","LoadProvider","withLoad","Component","useLoadsQuery","utc","toISODate","useMoveSlotMutation","moveSlotMutation","useDeleteSlotMutation","deleteSlotMutation","manifestGroupMutation","manifestUserMutation","useCreateLoadMutation","createLoadMutation","canCreateLoad","CreateLoad","canDeleteOwnSlot","DeleteSlot","canDeleteSlot","DeleteUserSlot","canManifestSelf","CreateSlot","canManifestOthers","CreateUserSlot","canUpdateSlot","UpdateSlot","canUpdateOwnSlot","UpdateUserSlot","updateQuery","moveSlot","sourceLoad","mutationVariables","refetchQueries","targetLoad","loads","createSlots","deleteSlot","createLoad","prev","__typename","ManifestProvider","useManifestContext","token","isDevice","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","lightColor","PushNotifications","pushToken","notificationListener","responseListener","onOutsideLink","intendedRoute","URI","updateUser","Device","registerForPushNotificationsAsync","notification","request","Linking","addEventListener","removeEventListener","remoteToken","muiTheme","createTheme","secondary","paper","surface","common","white","black","onSurface","matchMedia","addListener","matches","ThemeProvider","AppUpdate","fontsLoaded","overlay","setOverlay","animation","onUpdate","play","isNew","isUpdateAvailable","isAvailable","flex","styles","blur","intensity","Text","button","create","absoluteFillObject","fontSize","bottom","borderColor","borderRadius","ImageViewer","mainSrc","onCloseRequest","AnimationState","slice","successAnimation","closed","animationState","setAnimationState","opening","Toast","show","onHide","text1","pointerEvents","speed","onAnimationFinish","waiting","setTimeout","lottieDoneAnimation","autoHide","visibilityTime","NotFoundScreen","navigation","container","TouchableOpacity","replace","linkText","backgroundColor","padding","marginTop","paddingVertical","useThemeColor","colorName","colorFromProps","Colors","darkColor","otherProps","NoResults","useTheme","flatten","empty","Paragraph","fab","margin","right","alignSelf","DropzonesScreen","globalState","useNavigation","nameLines","split","lines","Color","desaturate","textColor","shouldPushRoute","StackActions","screen","params","cardContainer","ImageBackground","numberOfLines","size","svgContainer","substr","adjustsFontSizeToFit","allowFontScaling","overflow","fontStyle","FlatList","numColumns","refreshing","keyExtractor","onRefresh","flatlist","contentContainerStyle","ListEmptyComponent","renderItem","FAB","small","navigate","flexGrow","paddingBottom","dzIcon","Stack","createStackNavigator","Limbo","Navigator","screenOptions","headerShown","cardStyle","initialRouteName","Screen","component","GradientText","opacity","Fields","KeyboardAvoidingView","behavior","fieldContent","Step","hideContentUntilNavigatedTo","useIsFocused","flexDirection","dots","minWidth","paddingLeft","Dots","count","Array","activeDot","inactiveDot","marginLeft","marginRight","WizardRoot","WizardModal","steps","transitionSpec","TransitionSpecs","TransitionIOSSpec","headerStyleInterpolator","HeaderStyleInterpolators","forFade","cardStyleInterpolator","layouts","transform","translateX","progress","interpolate","inputRange","outputRange","scale","overlayStyle","nextIndex","nextIndexFactor","onNext","goBack","placeholder","backIndexFactor","onBack","Wizard","presentation","PasswordStrength","checkPasswordComplexity","passwordStrength","TooWeak","minDiversity","minLength","Weak","Acceptable","Strong","TextField","helperText","setText","onChangeText","TextInput","marginBottom","indicator","indicatorInactive","indicatorWeak","indicatorOk","indicatorStrong","PasswordStep","strength","indicatorStyle","textContentType","secureTextEntry","passwordRules","newValue","PasswordComplexityIndicator","EmailStep","newText","PasswordConfirmationStep","DoneStep","SignupWizard","useUserSignUpMutation","onSignUp","validateEmail","RegExp","validatePassword","onClickSignUp","licenseId","userRegister","Divider","divider","marginVertical","useLoginWithFacebook","useLoginWithFacebookMutation","onLoginWithFacebook","loginWithFacebook","authenticatable","FacebookButton","appId","reAuthenticate","autoLoad","buttonStyle","onFailure","textButton","AppleButton","LoginScreen","useLoginMutation","mutationLogin","loginWithFacebookMutation","loginWithApple","loginWithAppleMutation","onLogin","emailRegex","hasError","userLogin","backgroundDark","backgroundLight","resizeMode","Image","logoLight","logoDark","logo","card","elevation","animationContainer","loadingAnimation","onSubmitEditing","labelStyle","forgotPasswordDark","forgotPassword","textButtonLabel","paddingTop","paddingHorizontal","borderWidth","ScrollView","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","SignupScreen","useMutationSignUp","ScrollableScreen","buttonLabel","separator","Unauthenticated","SignUpScreen","carouselRef","getCurrentIndex","scrollTo","modeConfig","parallaxScrollingScale","parallaxScrollingOffset","pagingEnabled","enabled","panGestureHandlerProps","activeOffsetX","onSnapToItem","createDropzone","updateDropzone","createPlane","createTicketType","extraIds","updateTicketType","active","items","selected","isSelected","renderItemLabel","onChangeSelected","autoSelectFirst","itemSelected","previous","FederationCardSelect","onSelect","federations","Boolean","degreesToRadians","degrees","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","DEFAULT_COORDS","Map","_coords","center","coords","interactive","onDragEnd","isLoaded","useJsApiLoader","containerStyle","mapStyle","onLoad","bounds","google","maps","LatLngBounds","fitBounds","panTo","onUnmount","rootLayout","setRootLayout","isFocused","onLayout","nativeEvent","layout","y","mapTypeId","MapTypeId","HYBRID","mapContainerStyle","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","AddressSearchBar","suggestions","setSuggestions","useAddressToLocationLazyQuery","fetchLocation","fetchSuggestions","search","fetchSuggestionsDebounced","debounce","geocode","onPickResult","formattedString","Searchbar","suggestion","NumberFieldType","titleContainer","textShadowColor","textShadowRadius","textShadowOffset","markerFixed","zIndex","myLocation","LocationWizardStep","setCenter","setUsersLocation","longitude","Animated","Value","region","latitudeDelta","longitudeDelta","fadeOut","timing","duration","toValue","useNativeDriver","fadeIn","setCoordinateFade","start","isDragging","setDragging","onDragStart","r","stop","autocomplete","toFixed","adornments","Cash","CanopySize","Weight","muiVariants","outlined","NumberField","onChangeValue","target","FormControl","sx","m","fullWidth","InputProps","endAdornment","InputAdornment","startAdornment","FormHelperText","cardTitle","cardValue","slider","sliderControl","wingLoading","wingLoadingCardLeft","wingLoadingCardRight","AircraftWizardScreen","Subheader","previewContainer","hairlineWidth","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","borderTopRightRadius","borderTopLeftRadius","previewTabBar","borderBottomRightRadius","borderBottomLeftRadius","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","colorBox","PhonePreview","Surface","WebPreview","ColorPickerDialog","onClose","Portal","sliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","ColorPicker","isCustomColor","isDialogOpen","setDialogOpen","flexWrap","TouchableRipple","manipulate","ThemingStep","Phone","Web","Done","PermissionListItem","permissionName","canChangePermissions","GrantPermission","useUpdateRoleMutation","mutationUpdatePermission","Switch","onValueChange","roleId","optimisticResponse","updateRole","PermissionWizardScreen","dropzoneForm","useDropzonePermissionsLazyQuery","queryRoles","roles","capitalize","UserAvatar","initals","n","stringToColor","string","hash","charCodeAt","initials","Avatar","bgcolor","src","MenuItem","bold","testID","onClick","data-testid","ListItemIcon","ListItemAvatar","ListItemText","Menu","anchor","anchorEl","setAnchorEl","currentTarget","anchorOrigin","vertical","horizontal","transformOrigin","Select","compare","renderAnchor","onOpen","selectedOption","option","createSelectHandler","showAvatars","openMenu","InputLabel","labelId","SelectDisplayProps","val","AltitudeSelect","altitudeSelect","paragraph","TicketTypeWizardScreen","useImagePicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","base64","avatarContainer","Logo","pickImage","onPickImage","DropzoneSetupScreen","aircraft","ticket","mutationCreateDropzone","useMutationCreateDropzone","mutationUpdateDropzone","useMutationUpdateDropzone","mutationCreatePlane","useMutationCreatePlane","mutationUpdatePlane","useMutationUpdatePlane","mutationCreateTicketType","useMutationCreateTicketType","mutationUpdateTicketType","useMutationUpdateTicketType","onComplete","onNameNext","onFederationNext","onLogoNext","camelize","wizard","onAircraftNext","onTicketTypeNext","Promise","resolve","NameStep","FederationStep","LocationStep","LogoStep","AircraftStep","TicketTypeStep","stepProps","FederationWizardSceen","toUpperCase","RealName","UserInfoScreen","LicenseCardSelect","federationId","licenses","RigWizardScreen","isOtherMake","setIsOtherMake","concat","DatePicker","selectedDays","onDayClick","ReserveRepackStep","AskForRigStep","paddingRight","WingloadingWizardScreen","rigForm","userForm","ceil","AvatarStep","UserWizardScreen","useRoute","joinFederation","mutationUpdateUser","useMutationUpdateUser","mutationUpdateRig","useCreateRigMutation","mutationCreateRig","onNicknameNext","toLowerCase","mutationResult","onFederationNumberNext","onLicenseNext","onRigNext","userId","updateRig","createRig","onReserveRepackNext","onWingloadingNext","onImageNext","RealNameStep","NicknameStep","FederationNumberStep","LicenseStep","RigStep","WingloadingStep","useRecoverPasswordMutation","onRecover","onClickRecover","redirectUrl","errorIcon","ConfirmUserScreen","route","useConfirmUserMutation","confirmUser","setError","userConfirmRegistrationWithToken","catch","useUpdateLostPasswordMutation","updatePassword","onChangePassword","userUpdatePasswordWithToken","onFinished","defaultColors","ThemedSkeleton","boneColor","negate","rgb","highlightColor","Chip","assignedColor","chipStyle","iconStyles","selectedColor","iconProps","textStyle","allowEmpty","isDisabled","isItemSelected","LicenseChipSelect","FederationSelect","RoleSelect","a","b","GhostForm","ticketAddons","noPadding","borderBottomWidth","defaultPadding","DialogOrSheet","disablePadding","buttonAction","Drawer","PaperProps","ProgressBar","indeterminate","Typography","IconButton","createGhost","CreateGhostDialog","mutationCreateGhost","useMutationCreateGhost","onSave","snapPoints","useUserNavigation","UserCardSkeleton","isLoading","loadingFragment","hasCredits","walletId","hasExitWeight","hasLicense","hasMembership","UsersScreen","ghostForm","fetchPolicy","canCreateUser","CreateUser","dropzoneUsers","initialLoading","fill","refreshControl","RefreshControl","descriptionStyle","inputContainer","input","AppBar","onSearch","back","searchVisible","Appbar","Header","BackAction","autoFocus","RigInspectionItem","canInspect","ActAsRigInspector","valueType","Checkbox","Android","RigInspectionForm","RigCard","onSuccessfulImageUpload","isUploading","setUploading","useMutationUpdateRig","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","owner","textRow","chip","inspectedBy","dropzoneUserId","innerChip","RigInspectionScreen","rigInspectionQuery","useCreateRigInspectionMutation","mutationCreateRigInspection","rigInspections","inspection","record","isOk","createRigInspection","readQuery","currentDz","earliestTimestamp","startOfDay","toISOString","writeQuery","ins","newData","Badge","iconName","ActAsDzso","ActAsGca","ActAsLoadMaster","ActAsPilot","mutationHandlers","onCompleted","values","entry","PermissionBadges","canGrantPermission","useRevokePermissionMutation","c","updatedList","revoke","useGrantPermissionMutation","updatedGcaList","grantPermission","grant","badges","shouldShowBadge","showsHorizontalScrollIndicator","DropzoneUserForm","canUpdateRole","newRole","DropzoneUserDialog","useApolloClient","getCachedUser","readFragment","fragment","fragmentName","identify","useUpdateDropzoneUserMutation","mutationUpdateDropzoneUser","createData","userRoleId","updateDropzoneUser","CreditsForm","currentCredits","subtotal","DataTable","Row","Cell","numeric","useCreateOrderMutation","mutationCreateOrder","seller","buyer","createOrder","scrollable","defaultIndex","onChangeIndex","newIndex","RigForm","showTypeSelect","canCreateRigs","CreateRig","keyboardType","RigDialog","useMutationCreateRig","d","onDialogClose","SlotForm","num","UpdateUserDialog","parseFloat","selectedLicenseFederation","slug","useDropzoneUser","getProfile","useProfileWizard","badgesInitials","UserHeader","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","primaryDark","actingPermissions","str","openURL","Caption","InfoGrid","verticalDivider","UserActionsButton","fabOpen","setFabOpen","rootNavigator","onClickSetupWizard","onClickAccessAndMembership","onClickTransactions","onClickEquipment","onClickAddFunds","onClickEdit","isSelf","canAddTransaction","CreateUserTransaction","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","canDeleteUsers","DeleteUser","useArchiveUserMutation","deleteUser","onDeleteUser","Alert","alert","fabActions","Group","fabStyle","onStateChange","SlotCard","transaction","transactionContent","transactionTitle","transactionDescription","avatarIcon","JumpHistoryTab","tabIndex","currentTabIndex","sections","groupBy","parseISO","createdAt","t","differenceInDays","formatDistance","addSuffix","enAU","easing","loadId","OrderCard","order","showAvatar","isSelfBuyer","fromISO","toLocaleString","DATETIME_SHORT","orderContent","orderTitle","orderDescription","ProfileTabs","TransactionsTab","orders","startOf","diffNow","Duration","fromDurationLike","days","DATE_MED_WITH_WEEKDAY","toRelative","round","hasSame","orderId","EquipmentTab","insp","ProfileTab","Funds","Equipment","Jumps","TabBar","disableSwipe","ProfileScreen","useDropzoneUserProfile","headerRight","setOptions","onCloseRigForm","onUserSheetClose","openWizard","getContent","ListHeaderComponent","wrappingHeader","wrappingHeaderItem","chipTitle","lineHeight","textAlignVertical","OrdersScreen","firstName","SectionList","renderSectionHeader","section","flatList","EquipmentScreen","getIcon","TransactionCard","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","rightStyle","receipts","Users","Routes","header","initialParams","OrderReceiptScreen","Wizards","DropzoneWizardScreen","RecoverPasswordScreen","ChangePasswordScreen","User","DrawerMenu","routeName","canUpdateDropzone","UpdateDropzone","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","canUpdateRigInspectionTemplate","UpdateFormTemplate","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","Section","moderationRole","DrawerActions","closeDrawer","profileHeader","Warning","contrast","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","hideWarnings","openDrawer","tintColor","isRigInspected","isRepackInDate","GCAChip","allowed","LoadMasterChip","PilotChip","PlaneChip","planes","ChipSelectSkeleton","rows","JumpTypeChipSelect","onLoadingStateChanged","allowedForDropzoneUserIds","uniqBy","allowedJumpTypes","jumpTypes","TicketTypeChipSelect","onlyPublicTickets","useAllowedTicketTypesQuery","RigSelect","tandem","useAvailableRigsLazyQuery","fetchRigs","ManifestForm","allowedToManifestOthers","ManifestUserDialog","_onClose","mutationCreateSlot","mutationData","portal","usePortal","removePortal","onManifest","StyledTextField","styled","shouldForwardProp","prop","p","borderBottomColor","DropzoneUserAutocomplete","useDropzoneUsersLazyQuery","searchUsers","licensed","getOptionLabel","sort","localeCompare","nextValue","Autocomplete","renderInput","disableUnderline","onInputChange","inputValue","popupIcon","clearIcon","renderOption","menuItemProps","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","row","rowFirst","rowLast","SwipeActions","rightAction","Swipeable","renderRightActions","dragX","childrenContainerStyle","useNativeAnimations","SlotFields","DraggableRow","rowProps","useDraggable","slotId","setNodeRef","listeners","attributes","className","DroppableSlot","rowIndex","useDroppable","isOver","GROUP_COLORS","hsl","random","UserRow","onDeletePress","onSlotGroupPress","onSlotPress","canEditSelf","canEditOthers","canRemoveSelf","canRemoveOthers","slotGroup","isCurrentUser","isNumber","borderLeftWidth","borderLeftColor","hasLanded","avatarCell","nameCell","slotText","License","licenseCell","Rig","rigCell","WingLoading","wingLoadingCell","JumpType","jumpTypeCell","TicketType","ticketCell","Altitude","altitudeCell","tandemPassengerNameCell","tandemInfoCell","GroupPicker","availableGroups","createChangeHandler","sortedUniq","gap","UserCard","slotUser","newRig","ManifestGroupForm","isPublic","createToggleTicketAddonHandler","firstUser","mutationCreateSlots","userGroup","fetchProfile","onSelectUser","profile","wrapper","Toolbar","Fade","in","LinearProgress","buttonContainer","contentContainer","userListContainer","sheet","sheetHeader","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ActionButton","isExpanded","setExpanded","canUpdateLoad","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","isFull","showManifestButton","showGroupIcon","callActions","isToday","isSameDay","manifestActions","workflowActions","InFlight","buttonActions","CountdownCircleTimer","Countdown","end","difference","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","RenderBadges","renderBadges","LinearGradient","isAfter","AvailableRow","useCallback","SlotsTable","onAvailableSlotPress","rowStyles","th","availableSlots","LoadScreen","numFields","occupiedSlots","onDeleteSlot","weight","LoadScreenWrapper","WizardPagination","paginationIndex","icons","Dimensions","get","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","wizardScreen","buttonBack","buttons","WizardScreen","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","WizardCompleteStep","createWeatherCondition","WindRow","direction","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","altitudeOption","alt","strengthCard","onBlur","newSpeed","match","numbers","textField","directionCard","newDir","CARD_STYLE","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","getPointOnCircle","radius","offsetX","offsetY","sin","JumpRunSelector","MAP_SIZE","originX","originY","origin","setOrigin","rotation","planePosition","planeAnimation","resetBeforeIteration","onGestureEvent","setValue","currentCoordinates","angle","onMountRotatableView","planeStartPosition","onBegan","onEnded","iconContainer","rotate","translateY","degreeLabel","bottomDegreeLabel","borderStyle","textInput","setLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","Winds","JumpRun","JumpRunScreen","useAuthenticatedNavigation","WindScreen","DropzoneUserChipSelect","requiredPermissions","getItemLabel","PlaneChipSelect","LoadForm","LoadDialog","submitting","setSubmitting","snackbar","schema","isTrue","hasRigInspection","hasReserveInDate","DraggingRow","DragDropWrapper","draggedItem","setDraggedItem","over","sourceSlot","targetSlot","usePalette","GetStarted","hasPlanes","hasTicketTypes","LoadingCard","smallChip","smallChipText","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","deletingSlot","setDeletingSlot","differenceInMinutes","planeIcon","CENTER_Y","CENTER_X","animate","scaleX","WeatherBoard","conditions","currentConditions","canUpdate","UpdateWeatherConditions","hasWeatherConditions","Easing","inOut","ease","onEditWindboard","onEditJumprun","defaultBackground","nightBackground","weatherBackground","onLongPress","cell","FontAwesome","windboard","orderBy","noData","noDataLabel","SetupProfileCard","setupProfileCardFragment","ManifestScreen","manifestScreen","setup","isDisplayOptionsOpen","setDisplayOptionsOpen","isSetupCheckComplete","canManifest","abortEarly","useManifestValidator","dropzoneWizardIndex","isComplete","checkDropzoneSetupComplete","isSetupComplete","cardWidth","contentWidth","SettingsScreen","onChangeVisibility","Archived","Private","InReview","RequestPublication","Unpublish","Publish","descriptionNumberOfLines","TicketTypeForm","TicketTypeDialog","TicketTypesScreen","form","useUpdateTicketTypeMutation","useArchiveTicketTypeMutation","mutationDeleteTicketType","canCreateTicketTypes","CreateTicketType","archiveTicketType","markerSize","labelSize","isAnimating","setAnimating","DropzoneForm","outsideLoading","skeletonCard","imagePickLight","imagePickDark","skeletonCardColorPicker","skeletonCardCheckbox","subheader","UpdateDropzoneScreen","isDirty","CreatePlaneScreen","useCreatePlaneMutation","useUpdatePlaneMutation","onUpdatePlane","onCreate","PlanesScreen","useArchivePlaneMutation","deletePlane","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","RigInspectionTemplateForm","newItem","setNewItem","onTouchEnd","RigInspectionTemplateScreen","canEdit","useUpdateRigInspectionTemplateMutation","mutationUpdateForm","updateForm","formId","DropzoneRigsScreen","useDropzoneRigsQuery","updateData","canCreateRig","CreateDropzoneRig","DropzonePermissionScreen","Accordion","QUERY_MASTER_LOG","DropzoneMasterLogScreen","setTimestamp","useQuery","masterLog","TransactionsScreen","useDropzoneTransactionsLazyQuery","fetchTransactions","createExtra","ticketTypeIds","updateExtra","ExtraForm","TicketTypeExtraDialog","useMutationCreateExtra","useMutationUpdateExtra","ExtrasScreen","formState","canCreateExtras","CreateExtra","Configuration","SettingsTab","SettingsMenuScreen","DropzoneSettingsScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","Manifest","ManifestTab","forUIKit","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","ManifestedNotification","resource","initial","BoardingCallNotification","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","NotificationScreen","useNotificationsLazyQuery","getNotifications","fetchNotifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","Notification","NotificationsScreen","Stats","cols","columns","dimensions","setDimensions","itemWidth","cardHeight","statistic","valueText","labelText","lineBreakMode","LoadsByDay","startTime","showMonthLabels","classForValue","titleForValue","startDate","subDays","endDate","stateEvent","Archive","DropzoneTableRow","createdCell","statusCell","loadsCell","statistics","loadsCount","usersCell","activeUserCount","DropzonesTable","alwaysBounceVertical","controls","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","backgroundGradientFromOpacity","backgroundGradientToOpacity","barPercentage","useShadowColorFromDataset","TimeRange","JUMP_TYPE_COLORS","cam","ws","hnp","hp","fs","freefly","sortBy","stat","legendFontColor","legendFontSize","accessor","absolute","AdminOverviewPage","selectedTimeRange","setTimeRange","timeRange","subMonths","endTime","createTimeRangeHandler","range","selectedDropzones","setSelectedDropzones","useDropzonesStatisticsQuery","summedStatistics","revenueCents","sumBy","revenueCentsCount","cancelledLoadsCount","slotsCount","pilotCount","dzsoCount","gcaCount","totalUserCount","inactiveUserCount","loadCountByDay","slotsByJumpType","stickyHeaderIndices","ThreeMonths","SixMonths","Year","turnaround","dispatchedLoadsCard","jumpTypesCard","table","AdminOverviewPageWrapper","LEVEL_COLORS","Debug","Info","FeedItem","expanded","details","level","createdBy","levelCell","messageCell","Feed","onFetchMore","onEndReached","onEndReachedThreshold","ActivityFeedContainer","accessLevels","levels","canViewAdminActivity","ViewAdminActivity","canViewSystemActivity","ViewSystemActivity","canViewUserActivity","ViewUserActivity","useActivityDetailsLazyQuery","getActivity","activity","pageInfo","hasNextPage","endCursor","after","onChangeEventLevel","newLevels","onChangeAccessLevel","newAccessLevels","Admin","System","DashboardPage","canViewRevenue","ViewStatistics","canViewStatistics","ViewRevenue","activityVariables","setActivityVariables","onChangeActivityVariables","useDropzoneStatisticsQuery","Overview","OverviewTab","DashboardScreen","OverviewScreen","AnimatedTabBarNavigator","AuthenticatedTabBar","isAdmin","canViewUsers","ReadUser","canViewDashboard","tabBarActiveTintColor","tabBarInactiveBackgroundColor","backdrop","tabBarActiveBackgroundColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","borderTopWidth","borderTopColor","appearance","tabBarBackground","topPadding","shadow","bottomPadding","tabBarOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","tabBarIcon","focused","iconActive","unmountOnBlur","NotificationsTab","UsersTab","createDrawerNavigator","DrawerNavigator","drawerContent","drawerType","Authenticated","prefixes","LeftDrawer","AircraftScreen","MasterLogScreen","AircraftsScreen","PermissionScreen","UserListScreen","DropzoneSelectScreen","SignUpWizard","RootNavigator","listener","Appearance","addChangeListener","colorScheme","handler","remove","useAppearanceListener","onRouteChange","s","getPathFromState","reverse","screenName","useRouteChange","NavigationContainer","linking","LinkingConfiguration","StatusBar","App","Entrypoint","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","Roboto_400Regular","roboto","Roboto_500Medium","Roboto_700Bold","Ionicons","font","MaterialCommunityIcons","MaterialIcons","SplashScreen","loadResourcesAndDataAsync","useCachedResources","ActivityIndicator","registerRootComponent"],"mappings":"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","file":"static/js/app.074bfa3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!./LoadsByDay.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".none {\\n  fill: #CCC;\\n}\\n\\n.few {\\n  fill: #00AA00;\\n}\\n\\n.many {\\n  fill: #008800;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import Constants from 'expo-constants';\n\nconst config = Constants.manifest?.extra || Constants.manifest2?.extra?.expoClient?.extra;\n\nexport default config;\n","import config from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nimport Geocoder from 'react-native-geocoding';\nimport { setGoogleApiKey } from 'expo-location';\n\nconst googleMapsApiKey = Platform.select({\n  ios: config?.googleMapsIos,\n  android: config?.googleMapsAndroid,\n  web: config?.googleMapsWeb,\n});\n\nGeocoder.init(googleMapsApiKey);\nsetGoogleApiKey(googleMapsApiKey);\n","import * as Notifications from 'expo-notifications';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n","import Appsignal from '@appsignal/javascript';\nimport Constants from 'expo-constants';\nimport ExpoManifest from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nconst AppSignalClient = new Appsignal({\n  key: ExpoManifest?.extra?.appSignalApiKey,\n  namespace: Platform.OS,\n  revision: Constants.expoConfig?.version,\n  ignoreErrors: [],\n});\n\nexport default AppSignalClient;\n","import Appsignal from '@appsignal/javascript';\nimport noop from 'lodash/noop';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport AppSignalClient from './AppSignalClient';\n\nexport interface IAppSignalDefaultTags {\n  platform: string;\n  currentDropzoneId: string;\n  currentUserId: string;\n  currentDropzone: string;\n  currentUser: string;\n}\nexport interface IAppSignalContext {\n  appSignal: Appsignal;\n  tags: { [key: string]: string } & IAppSignalDefaultTags;\n  setTags(tags: Partial<IAppSignalDefaultTags> | { [key: string]: string }): void;\n}\n\nexport const INITIAL_TAGS = {\n  platform: Platform.OS,\n  currentDropzoneId: 'Unknown',\n  currentDropzone: 'Unknown',\n  currentUserId: 'Unknown',\n  currentUser: 'Unknown',\n};\n\nexport const INITIAL_CONTEXT: IAppSignalContext = {\n  appSignal: AppSignalClient,\n  tags: INITIAL_TAGS,\n  setTags: noop,\n};\n\nconst AppSignalContext = React.createContext(INITIAL_CONTEXT);\n\nexport function useAppSignalContext() {\n  return React.useContext(AppSignalContext);\n}\n\nexport default AppSignalContext;\n","import * as React from 'react';\n\ninterface IDefaultErrorBoundaryProps {\n  fallback: React.ComponentType<{ error?: Error | null }>;\n  children: React.ReactNode;\n}\n\ninterface IDefaultErrorBoundaryState {\n  error?: Error;\n}\nexport default class ErrorBoundary extends React.Component<\n  IDefaultErrorBoundaryProps,\n  IDefaultErrorBoundaryState\n> {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  public componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // eslint-disable-next-line no-console\n    console.error(error, errorInfo);\n  }\n\n  public render() {\n    const { fallback: Fallback, children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return <Fallback {...{ error }} />;\n    }\n    return children;\n  }\n}\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import * as React from 'react';\nimport { reloadAsync } from 'expo-updates';\nimport { Button, Card, HelperText } from 'react-native-paper';\nimport { Platform, SafeAreaView, useWindowDimensions } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport LottieView from '../LottieView';\nimport twigBreakAnimation from '../../../assets/images/error-twig-break.json';\n\ninterface IErrorScreenProps {\n  error?: Error | null;\n}\nexport default function ErrorScreen(props: IErrorScreenProps) {\n  const { error } = props;\n  const [isDetailsVisible, setDetailsVisible] = React.useState(false);\n  const [reloading, setReloading] = React.useState(false);\n  const onToggleDetails = React.useCallback(\n    () => setDetailsVisible(!isDetailsVisible),\n    [isDetailsVisible]\n  );\n\n  const onReloadApp = React.useCallback(async () => {\n    try {\n      setReloading(true);\n\n      if (Platform.OS === 'web') {\n        window.location.reload();\n      } else {\n        await reloadAsync();\n      }\n    } finally {\n      setReloading(false);\n    }\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <SafeAreaView\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Card style={{ width: '100%', minHeight: 250, maxWidth: 450, marginHorizontal: 16 }}>\n        <Card.Title\n          title=\"That's a bug\"\n          subtitle=\"This error has been uploaded for review\"\n          titleStyle={{ textAlign: 'center' }}\n          subtitleStyle={{ textAlign: 'center' }}\n        />\n        <Card.Content style={{ alignItems: 'center' }}>\n          <LottieView\n            // eslint-disable-next-line global-require\n            source={twigBreakAnimation}\n            autoPlay\n            loop={false}\n            style={{\n              height: Platform.OS === 'web' ? 300 : 150,\n              width: Platform.OS === 'web' ? 300 : 150,\n            }}\n          />\n          {!error ? null : (\n            <>\n              <HelperText type=\"error\">{error?.message}</HelperText>\n              {isDetailsVisible ? (\n                <ScrollView style={{ maxHeight: 300 }}>\n                  <HelperText type=\"error\">{error.stack}</HelperText>\n                </ScrollView>\n              ) : null}\n            </>\n          )}\n        </Card.Content>\n        <Card.Actions style={{ justifyContent: 'space-between' }}>\n          <Button compact onPress={onToggleDetails}>\n            {isDetailsVisible ? 'Hide' : 'Show'} details\n          </Button>\n          <Button\n            disabled={reloading}\n            loading={reloading}\n            compact\n            mode=\"outlined\"\n            onPress={onReloadApp}\n          >\n            Reload\n          </Button>\n        </Card.Actions>\n      </Card>\n    </SafeAreaView>\n  );\n}\n","import * as React from 'react';\nimport { ErrorBoundary } from '@appsignal/react';\nimport { useAppSignalContext } from './AppSignalContext';\nimport DefaultErrorBoundary from './AppSignalFallbackBoundary';\nimport ErrorScreen from './ErrorScreen';\n\nfunction AppSignalBoundary(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { appSignal: instance, tags } = useAppSignalContext();\n\n  const errorBoundaryRef = React.useRef<ErrorBoundary>(null);\n  // Render children until we have an instance ready and use a\n  // default error boundary to catch it in the meantime and still\n  // display the fallback page\n  if (!instance) {\n    return <DefaultErrorBoundary fallback={ErrorScreen}>{children}</DefaultErrorBoundary>;\n  }\n  return (\n    <ErrorBoundary\n      {...{ instance, tags }}\n      fallback={() => (\n        <ErrorScreen error={errorBoundaryRef.current?.state?.error as Error | undefined} />\n      )}\n      ref={errorBoundaryRef}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport default AppSignalBoundary;\n","import { plugin as AppSignalCurrentPath } from '@appsignal/plugin-path-decorator';\nimport { plugin as AppSignalWindowEvents } from '@appsignal/plugin-window-events';\nimport * as React from 'react';\nimport type { JSSpan } from '@appsignal/types';\nimport isEqual from 'lodash/isEqual';\nimport AppSignalClient from './AppSignalClient';\nimport AppSignalBoundary from './AppSignalBoundary';\nimport AppSignalContext, {\n  IAppSignalContext,\n  IAppSignalDefaultTags,\n  INITIAL_CONTEXT,\n  INITIAL_TAGS,\n} from './AppSignalContext';\n\nexport default function AppSignalProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [tags, setTags] = React.useState<IAppSignalDefaultTags & { [key: string]: string }>(\n    INITIAL_CONTEXT.tags\n  );\n  React.useEffect(() => {\n    AppSignalClient.use(AppSignalWindowEvents);\n    AppSignalClient.use(AppSignalCurrentPath);\n  }, []);\n\n  const onUpdateTags = React.useCallback(\n    (newTags: Partial<IAppSignalDefaultTags>) => {\n      setTags({ ...tags, ...newTags });\n    },\n    [tags]\n  );\n\n  const value: IAppSignalContext = React.useMemo(\n    () => ({ appSignal: AppSignalClient, tags, setTags: onUpdateTags }),\n    [tags, onUpdateTags]\n  );\n\n  const onTagsChanged = React.useCallback(\n    (span: JSSpan) => {\n      if (isEqual(tags, INITIAL_TAGS)) {\n        return span;\n      }\n      return span.setTags(tags);\n    },\n    [tags]\n  );\n\n  React.useEffect(() => {\n    AppSignalClient?.addDecorator(onTagsChanged);\n  }, [onTagsChanged]);\n\n  return (\n    <AppSignalContext.Provider {...{ value }}>\n      <AppSignalBoundary>{children}</AppSignalBoundary>\n    </AppSignalContext.Provider>\n  );\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport const RoleEssentialsFragmentDoc = gql`\n    fragment roleEssentials on UserRole {\n  id\n  name\n  dropzoneId\n}\n    `;\nexport const LicenseEssentialsFragmentDoc = gql`\n    fragment licenseEssentials on License {\n  id\n  name\n}\n    `;\nexport const UserEssentialsFragmentDoc = gql`\n    fragment userEssentials on User {\n  id\n  name\n  nickname\n  phone\n  email\n  exitWeight\n  moderationRole\n  image\n  apfNumber\n}\n    `;\nexport const DropzoneUserEssentialsFragmentDoc = gql`\n    fragment dropzoneUserEssentials on DropzoneUser {\n  id\n  walletId\n  expiresAt\n  hasCredits\n  hasMembership\n  hasLicense\n  hasExitWeight\n  role {\n    ...roleEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n  user {\n    ...userEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}\n${UserEssentialsFragmentDoc}`;\nexport const ActivityEssentialsFragmentDoc = gql`\n    fragment activityEssentials on Event {\n  action\n  id\n  level\n  message\n  details\n  createdAt\n  createdBy {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  walletId\n  lat\n  lng\n  name\n  status: state\n  primaryColor\n  secondaryColor\n  banner\n  isCreditSystemEnabled\n  createdAt\n}\n    `;\nexport const LoadEssentialsFragmentDoc = gql`\n    fragment loadEssentials on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n}\n    `;\nexport const TicketTypeEssentialsFragmentDoc = gql`\n    fragment ticketTypeEssentials on TicketType {\n  id\n  name\n  altitude\n  cost\n  isTandem\n  allowManifestingSelf\n  extras {\n    id\n    name\n    cost\n  }\n}\n    `;\nexport const JumpTypeEssentialsFragmentDoc = gql`\n    fragment jumpTypeEssentials on JumpType {\n  id\n  name\n}\n    `;\nexport const SlotEssentialsFragmentDoc = gql`\n    fragment slotEssentials on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  groupNumber\n  cost\n  ticketType {\n    ...ticketTypeEssentials\n  }\n  jumpType {\n    ...jumpTypeEssentials\n  }\n  extras {\n    id\n    name\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${JumpTypeEssentialsFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n  isPublic\n  owner {\n    id\n    name\n  }\n  dropzone {\n    id\n  }\n}\n    `;\nexport const PlaneEssentialsFragmentDoc = gql`\n    fragment planeEssentials on Plane {\n  id\n  minSlots\n  maxSlots\n  name\n  registration\n}\n    `;\nexport const ActivityDetailsFragmentDoc = gql`\n    fragment activityDetails on Event {\n  ...activityEssentials\n  resource {\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n    ... on DropzoneUser {\n      ...dropzoneUserEssentials\n    }\n    ... on Load {\n      ...loadEssentials\n    }\n    ... on Slot {\n      ...slotEssentials\n    }\n    ... on Rig {\n      ...rigEssentials\n    }\n    ... on Plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}`;\nexport const FederationEssentialsFragmentDoc = gql`\n    fragment federationEssentials on Federation {\n  id\n  name\n  slug\n}\n    `;\nexport const LicenseDetailsFragmentDoc = gql`\n    fragment licenseDetails on License {\n  ...licenseEssentials\n  federation {\n    ...federationEssentials\n  }\n}\n    ${LicenseEssentialsFragmentDoc}\n${FederationEssentialsFragmentDoc}`;\nexport const UserFederationEssentialsFragmentDoc = gql`\n    fragment userFederationEssentials on UserFederation {\n  id\n  uid\n  federation {\n    ...federationEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}`;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  owner {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const UserDetailedFragmentDoc = gql`\n    fragment userDetailed on User {\n  ...userEssentials\n  userFederations {\n    ...userFederationEssentials\n  }\n  rigs {\n    ...userRigDetailed\n  }\n}\n    ${UserEssentialsFragmentDoc}\n${UserFederationEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const DropzoneUserDetailsFragmentDoc = gql`\n    fragment dropzoneUserDetails on DropzoneUser {\n  ...dropzoneUserEssentials\n  credits\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...userDetailed\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${UserDetailedFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const RigInspectionEssentialsFragmentDoc = gql`\n    fragment rigInspectionEssentials on RigInspection {\n  id\n  isOk\n  definition\n  inspectedBy {\n    ...dropzoneUserEssentials\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TransactionEssentialsFragmentDoc = gql`\n    fragment transactionEssentials on Transaction {\n  id\n  transactionType\n  amount\n  status\n  createdAt\n  message\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const ReceiptEssentialsFragmentDoc = gql`\n    fragment receiptEssentials on Receipt {\n  id\n  amountCents\n  createdAt\n  updatedAt\n  transactions {\n    ...transactionEssentials\n  }\n}\n    ${TransactionEssentialsFragmentDoc}`;\nexport const OrderEssentialsFragmentDoc = gql`\n    fragment orderEssentials on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  createdAt\n  buyer {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      id\n      name\n      banner\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    ...receiptEssentials\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${ReceiptEssentialsFragmentDoc}`;\nexport const SlotDetailsFragmentDoc = gql`\n    fragment slotDetails on Slot {\n  ...slotEssentials\n  rig {\n    ...rigEssentials\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n  }\n}\n    ${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}`;\nexport const UserSlotDetailsFragmentDoc = gql`\n    fragment userSlotDetails on Slot {\n  ...slotDetails\n  load {\n    ...loadEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${LoadEssentialsFragmentDoc}`;\nexport const DropzoneUserProfileFragmentDoc = gql`\n    fragment dropzoneUserProfile on DropzoneUser {\n  ...dropzoneUserDetails\n  permissions\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  slots {\n    edges {\n      node {\n        ...userSlotDetails\n      }\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${UserSlotDetailsFragmentDoc}`;\nexport const DropzoneStatisticsEssentialsFragmentDoc = gql`\n    fragment dropzoneStatisticsEssentials on Statistics {\n  id\n  activeUserCount\n  totalUserCount\n  slotsByJumpType(timeRange: $timeRange) {\n    name\n    count\n  }\n  slotsCount(timeRange: $timeRange)\n  cancelledLoadsCount(timeRange: $timeRange)\n  dzsoCount\n  finalizedLoadsCount(timeRange: $timeRange)\n  gcaCount\n  pilotCount\n  inactiveUserCount\n  loadsCount(timeRange: $timeRange)\n  loadCountByDay(timeRange: $timeRange) {\n    date\n    count\n  }\n  revenueCentsCount(timeRange: $timeRange)\n  rigInspectorCount\n}\n    `;\nexport const DropzoneStatisticsFragmentDoc = gql`\n    fragment dropzoneStatistics on Dropzone {\n  ...dropzoneEssentials\n  statistics {\n    ...dropzoneStatisticsEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${DropzoneStatisticsEssentialsFragmentDoc}`;\nexport const WeatherConditionEssentialsFragmentDoc = gql`\n    fragment weatherConditionEssentials on WeatherCondition {\n  id\n  jumpRun\n  temperature\n  offsetDirection\n  offsetMiles\n  createdAt\n  exitSpotMiles\n  winds {\n    temperature\n    altitude\n    speed\n    direction\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  planes {\n    ...planeEssentials\n  }\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n  currentConditions {\n    ...weatherConditionEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}\n${WeatherConditionEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  walletId\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    ...roleEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const CurrentUserFragmentDoc = gql`\n    fragment currentUser on User {\n  ...userDetailed\n  dropzoneUsers {\n    ...dropzoneUserDetails\n  }\n  pushToken\n}\n    ${UserDetailedFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}`;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...currentUser\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${CurrentUserFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const TicketTypeExtraEssentialsFragmentDoc = gql`\n    fragment ticketTypeExtraEssentials on Extra {\n  id\n  name\n  createdAt\n  cost\n}\n    `;\nexport const TicketTypeExtraDetailedFragmentDoc = gql`\n    fragment ticketTypeExtraDetailed on Extra {\n  ...ticketTypeExtraEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeExtraEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const RigInspectionDetailedFragmentDoc = gql`\n    fragment rigInspectionDetailed on RigInspection {\n  ...rigInspectionEssentials\n  rig {\n    ...userRigDetailed\n  }\n}\n    ${RigInspectionEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const RigInspectionMutationEssentialsFragmentDoc = gql`\n    fragment rigInspectionMutationEssentials on RigInspection {\n  ...rigInspectionDetailed\n  formTemplate {\n    id\n    definition\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n    rigInspections {\n      ...rigInspectionEssentials\n    }\n  }\n}\n    ${RigInspectionDetailedFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\nexport const RoleDetailedFragmentDoc = gql`\n    fragment roleDetailed on UserRole {\n  ...roleEssentials\n  permissions\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const LoadDetailsFragmentDoc = gql`\n    fragment loadDetails on Load {\n  ...loadEssentials\n  plane {\n    ...planeEssentials\n  }\n  gca {\n    ...dropzoneUserEssentials\n  }\n  pilot {\n    ...dropzoneUserEssentials\n  }\n  loadMaster {\n    ...dropzoneUserEssentials\n  }\n  slots {\n    ...slotDetails\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${SlotDetailsFragmentDoc}`;\nexport const SlotExhaustiveFragmentDoc = gql`\n    fragment slotExhaustive on Slot {\n  ...slotDetails\n  dropzoneUser {\n    ...dropzoneUserDetails\n  }\n  load {\n    ...loadDetails\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}\n${LoadDetailsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const ArchivePlaneDocument = gql`\n    mutation ArchivePlane($id: Int!) {\n  deletePlane(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type ArchivePlaneMutationFn = Apollo.MutationFunction<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\n\n/**\n * __useArchivePlaneMutation__\n *\n * To run a mutation, you first call `useArchivePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchivePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archivePlaneMutation, { data, loading, error }] = useArchivePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchivePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>(ArchivePlaneDocument, options);\n      }\nexport type ArchivePlaneMutationHookResult = ReturnType<typeof useArchivePlaneMutation>;\nexport type ArchivePlaneMutationResult = Apollo.MutationResult<Operation.ArchivePlaneMutation>;\nexport type ArchivePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\nexport const ArchiveRigDocument = gql`\n    mutation ArchiveRig($id: Int!) {\n  archiveRig(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    rig {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport type ArchiveRigMutationFn = Apollo.MutationFunction<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\n\n/**\n * __useArchiveRigMutation__\n *\n * To run a mutation, you first call `useArchiveRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveRigMutation, { data, loading, error }] = useArchiveRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>(ArchiveRigDocument, options);\n      }\nexport type ArchiveRigMutationHookResult = ReturnType<typeof useArchiveRigMutation>;\nexport type ArchiveRigMutationResult = Apollo.MutationResult<Operation.ArchiveRigMutation>;\nexport type ArchiveRigMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\nexport const ArchiveTicketTypeDocument = gql`\n    mutation ArchiveTicketType($id: Int!) {\n  archiveTicketType(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    ticketType {\n      ...ticketTypeEssentials\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\nexport type ArchiveTicketTypeMutationFn = Apollo.MutationFunction<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\n\n/**\n * __useArchiveTicketTypeMutation__\n *\n * To run a mutation, you first call `useArchiveTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveTicketTypeMutation, { data, loading, error }] = useArchiveTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>(ArchiveTicketTypeDocument, options);\n      }\nexport type ArchiveTicketTypeMutationHookResult = ReturnType<typeof useArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationResult = Apollo.MutationResult<Operation.ArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\nexport const ArchiveUserDocument = gql`\n    mutation ArchiveUser($id: Int!) {\n  deleteUser(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserEssentials\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type ArchiveUserMutationFn = Apollo.MutationFunction<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\n\n/**\n * __useArchiveUserMutation__\n *\n * To run a mutation, you first call `useArchiveUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserMutation, { data, loading, error }] = useArchiveUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>(ArchiveUserDocument, options);\n      }\nexport type ArchiveUserMutationHookResult = ReturnType<typeof useArchiveUserMutation>;\nexport type ArchiveUserMutationResult = Apollo.MutationResult<Operation.ArchiveUserMutation>;\nexport type ArchiveUserMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateDropzoneDocument = gql`\n    mutation CreateDropzone($name: String!, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String) {\n  createDropzone(\n    input: {attributes: {name: $name, banner: $banner, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, lat: $lat, lng: $lng}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type CreateDropzoneMutationFn = Apollo.MutationFunction<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\n\n/**\n * __useCreateDropzoneMutation__\n *\n * To run a mutation, you first call `useCreateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createDropzoneMutation, { data, loading, error }] = useCreateDropzoneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *   },\n * });\n */\nexport function useCreateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>(CreateDropzoneDocument, options);\n      }\nexport type CreateDropzoneMutationHookResult = ReturnType<typeof useCreateDropzoneMutation>;\nexport type CreateDropzoneMutationResult = Apollo.MutationResult<Operation.CreateDropzoneMutation>;\nexport type CreateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\nexport const CreateLoadDocument = gql`\n    mutation CreateLoad($name: String, $pilot: Int, $gca: Int, $maxSlots: Int, $plane: Int, $state: LoadState) {\n  createLoad(\n    input: {attributes: {name: $name, pilot: $pilot, gca: $gca, maxSlots: $maxSlots, plane: $plane, state: $state}}\n  ) {\n    load {\n      ...loadDetails\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type CreateLoadMutationFn = Apollo.MutationFunction<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\n\n/**\n * __useCreateLoadMutation__\n *\n * To run a mutation, you first call `useCreateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createLoadMutation, { data, loading, error }] = useCreateLoadMutation({\n *   variables: {\n *      name: // value for 'name'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      maxSlots: // value for 'maxSlots'\n *      plane: // value for 'plane'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useCreateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>(CreateLoadDocument, options);\n      }\nexport type CreateLoadMutationHookResult = ReturnType<typeof useCreateLoadMutation>;\nexport type CreateLoadMutationResult = Apollo.MutationResult<Operation.CreateLoadMutation>;\nexport type CreateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: ID!, $seller: ID!, $dropzone: ID!, $title: String, $amount: Float!) {\n  createOrder(\n    input: {attributes: {dropzone: $dropzone, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...orderEssentials\n    }\n  }\n}\n    ${OrderEssentialsFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzone: // value for 'dropzone'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreatePlaneDocument = gql`\n    mutation CreatePlane($name: String!, $registration: String!, $dropzoneId: Int!, $minSlots: Int!, $maxSlots: Int!, $hours: Int, $nextMaintenanceHours: Int) {\n  createPlane(\n    input: {attributes: {name: $name, registration: $registration, dropzoneId: $dropzoneId, minSlots: $minSlots, maxSlots: $maxSlots, hours: $hours, nextMaintenanceHours: $nextMaintenanceHours}}\n  ) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        planes {\n          ...planeEssentials\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type CreatePlaneMutationFn = Apollo.MutationFunction<Operation.CreatePlaneMutation, Operation.CreatePlaneMutationVariables>;\n\n/**\n * __useCreatePlaneMutation__\n *\n * To run a mutation, you first call `useCreatePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreatePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createPlaneMutation, { data, loading, error }] = useCreatePlaneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      registration: // value for 'registration'\n *      dropzoneId: // value for 'dropzoneId'\n *      minSlots: // value for 'minSlots'\n *      maxSlots: // value for 'maxSlots'\n *      hours: // value for 'hours'\n *      nextMaintenanceHours: // value for 'nextMaintenanceHours'\n *   },\n * });\n */\nexport function useCreatePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreatePlaneMutation, Operation.CreatePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreatePlaneMutation, Operation.CreatePlaneMutationVariables>(CreatePlaneDocument, options);\n      }\nexport type CreatePlaneMutationHookResult = ReturnType<typeof useCreatePlaneMutation>;\nexport type CreatePlaneMutationResult = Apollo.MutationResult<Operation.CreatePlaneMutation>;\nexport type CreatePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.CreatePlaneMutation, Operation.CreatePlaneMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const CreateRigInspectionDocument = gql`\n    mutation CreateRigInspection($dropzone: ID, $rig: ID, $isOk: Boolean, $definition: String) {\n  createRigInspection(\n    input: {attributes: {dropzone: $dropzone, rig: $rig, isOk: $isOk, definition: $definition}}\n  ) {\n    rigInspection {\n      ...rigInspectionMutationEssentials\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${RigInspectionMutationEssentialsFragmentDoc}`;\nexport type CreateRigInspectionMutationFn = Apollo.MutationFunction<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\n\n/**\n * __useCreateRigInspectionMutation__\n *\n * To run a mutation, you first call `useCreateRigInspectionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigInspectionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigInspectionMutation, { data, loading, error }] = useCreateRigInspectionMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      rig: // value for 'rig'\n *      isOk: // value for 'isOk'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useCreateRigInspectionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>(CreateRigInspectionDocument, options);\n      }\nexport type CreateRigInspectionMutationHookResult = ReturnType<typeof useCreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationResult = Apollo.MutationResult<Operation.CreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\nexport const CreateGhostDocument = gql`\n    mutation CreateGhost($name: String!, $phone: String, $email: String!, $federationNumber: String, $role: Int!, $license: Int, $dropzone: Int!, $exitWeight: Float!) {\n  createGhost(\n    input: {attributes: {role: $role, federationNumber: $federationNumber, name: $name, phone: $phone, email: $email, dropzone: $dropzone, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    user {\n      ...userDetailed\n    }\n  }\n}\n    ${UserDetailedFragmentDoc}`;\nexport type CreateGhostMutationFn = Apollo.MutationFunction<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\n\n/**\n * __useCreateGhostMutation__\n *\n * To run a mutation, you first call `useCreateGhostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateGhostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createGhostMutation, { data, loading, error }] = useCreateGhostMutation({\n *   variables: {\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      federationNumber: // value for 'federationNumber'\n *      role: // value for 'role'\n *      license: // value for 'license'\n *      dropzone: // value for 'dropzone'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useCreateGhostMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>(CreateGhostDocument, options);\n      }\nexport type CreateGhostMutationHookResult = ReturnType<typeof useCreateGhostMutation>;\nexport type CreateGhostMutationResult = Apollo.MutationResult<Operation.CreateGhostMutation>;\nexport type CreateGhostMutationOptions = Apollo.BaseMutationOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\nexport const DeleteSlotDocument = gql`\n    mutation DeleteSlot($id: Int!) {\n  deleteSlot(input: {id: $id}) {\n    slot {\n      ...slotExhaustive\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type DeleteSlotMutationFn = Apollo.MutationFunction<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\n\n/**\n * __useDeleteSlotMutation__\n *\n * To run a mutation, you first call `useDeleteSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteSlotMutation, { data, loading, error }] = useDeleteSlotMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>(DeleteSlotDocument, options);\n      }\nexport type DeleteSlotMutationHookResult = ReturnType<typeof useDeleteSlotMutation>;\nexport type DeleteSlotMutationResult = Apollo.MutationResult<Operation.DeleteSlotMutation>;\nexport type DeleteSlotMutationOptions = Apollo.BaseMutationOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const GrantPermissionDocument = gql`\n    mutation GrantPermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n  grantPermission(input: {id: $dropzoneUserId, permission: $permissionName}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type GrantPermissionMutationFn = Apollo.MutationFunction<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\n\n/**\n * __useGrantPermissionMutation__\n *\n * To run a mutation, you first call `useGrantPermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useGrantPermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [grantPermissionMutation, { data, loading, error }] = useGrantPermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useGrantPermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>(GrantPermissionDocument, options);\n      }\nexport type GrantPermissionMutationHookResult = ReturnType<typeof useGrantPermissionMutation>;\nexport type GrantPermissionMutationResult = Apollo.MutationResult<Operation.GrantPermissionMutation>;\nexport type GrantPermissionMutationOptions = Apollo.BaseMutationOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federation: ID!, $uid: String, $license: ID) {\n  joinFederation(\n    input: {attributes: {federation: $federation, uid: $uid, license: $license}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federation: // value for 'federation'\n *      uid: // value for 'uid'\n *      license: // value for 'license'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  userLogin(email: $email, password: $password) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<Operation.LoginMutation, Operation.LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginMutation, Operation.LoginMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginMutation, Operation.LoginMutationVariables>(LoginDocument, options);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<Operation.LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<Operation.LoginMutation, Operation.LoginMutationVariables>;\nexport const LoginWithAppleDocument = gql`\n    mutation LoginWithApple($token: String!, $userIdentity: String!, $pushToken: String) {\n  loginWithApple(\n    token: $token\n    userIdentity: $userIdentity\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithAppleMutationFn = Apollo.MutationFunction<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\n\n/**\n * __useLoginWithAppleMutation__\n *\n * To run a mutation, you first call `useLoginWithAppleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithAppleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithAppleMutation, { data, loading, error }] = useLoginWithAppleMutation({\n *   variables: {\n *      token: // value for 'token'\n *      userIdentity: // value for 'userIdentity'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithAppleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>(LoginWithAppleDocument, options);\n      }\nexport type LoginWithAppleMutationHookResult = ReturnType<typeof useLoginWithAppleMutation>;\nexport type LoginWithAppleMutationResult = Apollo.MutationResult<Operation.LoginWithAppleMutation>;\nexport type LoginWithAppleMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\nexport const LoginWithFacebookDocument = gql`\n    mutation LoginWithFacebook($token: String!, $pushToken: String) {\n  loginWithFacebook(\n    token: $token\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithFacebookMutationFn = Apollo.MutationFunction<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\n\n/**\n * __useLoginWithFacebookMutation__\n *\n * To run a mutation, you first call `useLoginWithFacebookMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithFacebookMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithFacebookMutation, { data, loading, error }] = useLoginWithFacebookMutation({\n *   variables: {\n *      token: // value for 'token'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithFacebookMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>(LoginWithFacebookDocument, options);\n      }\nexport type LoginWithFacebookMutationHookResult = ReturnType<typeof useLoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationResult = Apollo.MutationResult<Operation.LoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\nexport const ManifestGroupDocument = gql`\n    mutation ManifestGroup($jumpType: ID, $extras: [ID!], $load: ID, $ticketType: ID, $groupNumber: Int, $userGroup: [SlotUser!]!) {\n  createSlots(\n    input: {attributes: {jumpType: $jumpType, groupNumber: $groupNumber, extras: $extras, load: $load, ticketType: $ticketType, userGroup: $userGroup}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type ManifestGroupMutationFn = Apollo.MutationFunction<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\n\n/**\n * __useManifestGroupMutation__\n *\n * To run a mutation, you first call `useManifestGroupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestGroupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestGroupMutation, { data, loading, error }] = useManifestGroupMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      ticketType: // value for 'ticketType'\n *      groupNumber: // value for 'groupNumber'\n *      userGroup: // value for 'userGroup'\n *   },\n * });\n */\nexport function useManifestGroupMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>(ManifestGroupDocument, options);\n      }\nexport type ManifestGroupMutationHookResult = ReturnType<typeof useManifestGroupMutation>;\nexport type ManifestGroupMutationResult = Apollo.MutationResult<Operation.ManifestGroupMutation>;\nexport type ManifestGroupMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\nexport const ManifestUserDocument = gql`\n    mutation ManifestUser($jumpType: ID, $extras: [ID!], $load: ID, $rig: ID, $ticketType: ID, $dropzoneUser: ID, $exitWeight: Float, $passengerName: String, $groupNumber: Int, $passengerExitWeight: Float) {\n  createSlot(\n    input: {attributes: {jumpType: $jumpType, extras: $extras, load: $load, rig: $rig, groupNumber: $groupNumber, ticketType: $ticketType, dropzoneUser: $dropzoneUser, exitWeight: $exitWeight, passengerExitWeight: $passengerExitWeight, passengerName: $passengerName}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    slot {\n      ...slotExhaustive\n    }\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type ManifestUserMutationFn = Apollo.MutationFunction<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\n\n/**\n * __useManifestUserMutation__\n *\n * To run a mutation, you first call `useManifestUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestUserMutation, { data, loading, error }] = useManifestUserMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      rig: // value for 'rig'\n *      ticketType: // value for 'ticketType'\n *      dropzoneUser: // value for 'dropzoneUser'\n *      exitWeight: // value for 'exitWeight'\n *      passengerName: // value for 'passengerName'\n *      groupNumber: // value for 'groupNumber'\n *      passengerExitWeight: // value for 'passengerExitWeight'\n *   },\n * });\n */\nexport function useManifestUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>(ManifestUserDocument, options);\n      }\nexport type ManifestUserMutationHookResult = ReturnType<typeof useManifestUserMutation>;\nexport type ManifestUserMutationResult = Apollo.MutationResult<Operation.ManifestUserMutation>;\nexport type ManifestUserMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\nexport const MoveSlotDocument = gql`\n    mutation MoveSlot($sourceSlot: Int!, $targetSlot: Int, $targetLoad: Int!) {\n  moveSlot(\n    input: {sourceSlot: $sourceSlot, targetSlot: $targetSlot, targetLoad: $targetLoad}\n  ) {\n    loads {\n      ...loadDetails\n    }\n    errors\n    fieldErrors {\n      field\n      message\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type MoveSlotMutationFn = Apollo.MutationFunction<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\n\n/**\n * __useMoveSlotMutation__\n *\n * To run a mutation, you first call `useMoveSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMoveSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [moveSlotMutation, { data, loading, error }] = useMoveSlotMutation({\n *   variables: {\n *      sourceSlot: // value for 'sourceSlot'\n *      targetSlot: // value for 'targetSlot'\n *      targetLoad: // value for 'targetLoad'\n *   },\n * });\n */\nexport function useMoveSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>(MoveSlotDocument, options);\n      }\nexport type MoveSlotMutationHookResult = ReturnType<typeof useMoveSlotMutation>;\nexport type MoveSlotMutationResult = Apollo.MutationResult<Operation.MoveSlotMutation>;\nexport type MoveSlotMutationOptions = Apollo.BaseMutationOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\nexport const RecoverPasswordDocument = gql`\n    mutation RecoverPassword($email: String!, $redirectUrl: String!) {\n  userSendPasswordResetWithToken(email: $email, redirectUrl: $redirectUrl) {\n    message\n  }\n}\n    `;\nexport type RecoverPasswordMutationFn = Apollo.MutationFunction<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\n\n/**\n * __useRecoverPasswordMutation__\n *\n * To run a mutation, you first call `useRecoverPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRecoverPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [recoverPasswordMutation, { data, loading, error }] = useRecoverPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      redirectUrl: // value for 'redirectUrl'\n *   },\n * });\n */\nexport function useRecoverPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>(RecoverPasswordDocument, options);\n      }\nexport type RecoverPasswordMutationHookResult = ReturnType<typeof useRecoverPasswordMutation>;\nexport type RecoverPasswordMutationResult = Apollo.MutationResult<Operation.RecoverPasswordMutation>;\nexport type RecoverPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const RevokePermissionDocument = gql`\n    mutation RevokePermission($dropzoneUserId: Int!, $permissionName: Permission!) {\n  revokePermission(input: {id: $dropzoneUserId, permission: $permissionName}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type RevokePermissionMutationFn = Apollo.MutationFunction<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\n\n/**\n * __useRevokePermissionMutation__\n *\n * To run a mutation, you first call `useRevokePermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRevokePermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [revokePermissionMutation, { data, loading, error }] = useRevokePermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useRevokePermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>(RevokePermissionDocument, options);\n      }\nexport type RevokePermissionMutationHookResult = ReturnType<typeof useRevokePermissionMutation>;\nexport type RevokePermissionMutationResult = Apollo.MutationResult<Operation.RevokePermissionMutation>;\nexport type RevokePermissionMutationOptions = Apollo.BaseMutationOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\nexport const UpdateDropzoneDocument = gql`\n    mutation UpdateDropzone($id: Int!, $name: String!, $requestPublication: Boolean, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String, $isCreditSystemEnabled: Boolean, $isPublic: Boolean) {\n  updateDropzone(\n    input: {id: $id, attributes: {name: $name, banner: $banner, lat: $lat, lng: $lng, requestPublication: $requestPublication, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, isCreditSystemEnabled: $isCreditSystemEnabled, isPublic: $isPublic}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type UpdateDropzoneMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\n\n/**\n * __useUpdateDropzoneMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneMutation, { data, loading, error }] = useUpdateDropzoneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      requestPublication: // value for 'requestPublication'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *      isCreditSystemEnabled: // value for 'isCreditSystemEnabled'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useUpdateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>(UpdateDropzoneDocument, options);\n      }\nexport type UpdateDropzoneMutationHookResult = ReturnType<typeof useUpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\nexport const UpdateDropzoneUserDocument = gql`\n    mutation UpdateDropzoneUser($userRoleId: Int, $expiresAt: Int, $dropzoneUserId: Int) {\n  updateDropzoneUser(\n    input: {id: $dropzoneUserId, attributes: {userRoleId: $userRoleId, expiresAt: $expiresAt}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateDropzoneUserMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\n\n/**\n * __useUpdateDropzoneUserMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneUserMutation, { data, loading, error }] = useUpdateDropzoneUserMutation({\n *   variables: {\n *      userRoleId: // value for 'userRoleId'\n *      expiresAt: // value for 'expiresAt'\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *   },\n * });\n */\nexport function useUpdateDropzoneUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>(UpdateDropzoneUserDocument, options);\n      }\nexport type UpdateDropzoneUserMutationHookResult = ReturnType<typeof useUpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\nexport const UpdateExtraDocument = gql`\n    mutation UpdateExtra($id: Int!, $name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n  updateExtra(\n    input: {id: $id, attributes: {name: $name, ticketTypeIds: $ticketTypeIds, cost: $cost, dropzoneId: $dropzoneId}}\n  ) {\n    extra {\n      ...ticketTypeExtraDetailed\n    }\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\nexport type UpdateExtraMutationFn = Apollo.MutationFunction<Operation.UpdateExtraMutation, Operation.UpdateExtraMutationVariables>;\n\n/**\n * __useUpdateExtraMutation__\n *\n * To run a mutation, you first call `useUpdateExtraMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateExtraMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateExtraMutation, { data, loading, error }] = useUpdateExtraMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      ticketTypeIds: // value for 'ticketTypeIds'\n *      cost: // value for 'cost'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateExtraMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateExtraMutation, Operation.UpdateExtraMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateExtraMutation, Operation.UpdateExtraMutationVariables>(UpdateExtraDocument, options);\n      }\nexport type UpdateExtraMutationHookResult = ReturnType<typeof useUpdateExtraMutation>;\nexport type UpdateExtraMutationResult = Apollo.MutationResult<Operation.UpdateExtraMutation>;\nexport type UpdateExtraMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateExtraMutation, Operation.UpdateExtraMutationVariables>;\nexport const UpdateLoadDocument = gql`\n    mutation UpdateLoad($id: Int!, $pilot: Int, $gca: Int, $plane: Int, $loadMaster: Int, $dispatchAt: ISO8601DateTime) {\n  updateLoad(\n    input: {id: $id, attributes: {pilot: $pilot, gca: $gca, plane: $plane, loadMaster: $loadMaster, dispatchAt: $dispatchAt}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type UpdateLoadMutationFn = Apollo.MutationFunction<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\n\n/**\n * __useUpdateLoadMutation__\n *\n * To run a mutation, you first call `useUpdateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLoadMutation, { data, loading, error }] = useUpdateLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      plane: // value for 'plane'\n *      loadMaster: // value for 'loadMaster'\n *      dispatchAt: // value for 'dispatchAt'\n *   },\n * });\n */\nexport function useUpdateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>(UpdateLoadDocument, options);\n      }\nexport type UpdateLoadMutationHookResult = ReturnType<typeof useUpdateLoadMutation>;\nexport type UpdateLoadMutationResult = Apollo.MutationResult<Operation.UpdateLoadMutation>;\nexport type UpdateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation UpdateLostPassword($password: String!, $passwordConfirmation: String!, $token: String!) {\n  userUpdatePasswordWithToken(\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    resetPasswordToken: $token\n  ) {\n    authenticatable {\n      ...userEssentials\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    ${UserEssentialsFragmentDoc}`;\nexport type UpdateLostPasswordMutationFn = Apollo.MutationFunction<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, options);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = Apollo.MutationResult<Operation.UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\nexport const UpdatePlaneDocument = gql`\n    mutation UpdatePlane($id: Int!, $name: String!, $registration: String!, $minSlots: Int!, $maxSlots: Int!, $hours: Int, $nextMaintenanceHours: Int) {\n  updatePlane(\n    input: {id: $id, attributes: {name: $name, registration: $registration, minSlots: $minSlots, maxSlots: $maxSlots, hours: $hours, nextMaintenanceHours: $nextMaintenanceHours}}\n  ) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        name\n        planes {\n          id\n          name\n          registration\n          minSlots\n          maxSlots\n          hours\n          nextMaintenanceHours\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type UpdatePlaneMutationFn = Apollo.MutationFunction<Operation.UpdatePlaneMutation, Operation.UpdatePlaneMutationVariables>;\n\n/**\n * __useUpdatePlaneMutation__\n *\n * To run a mutation, you first call `useUpdatePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdatePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updatePlaneMutation, { data, loading, error }] = useUpdatePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      registration: // value for 'registration'\n *      minSlots: // value for 'minSlots'\n *      maxSlots: // value for 'maxSlots'\n *      hours: // value for 'hours'\n *      nextMaintenanceHours: // value for 'nextMaintenanceHours'\n *   },\n * });\n */\nexport function useUpdatePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdatePlaneMutation, Operation.UpdatePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdatePlaneMutation, Operation.UpdatePlaneMutationVariables>(UpdatePlaneDocument, options);\n      }\nexport type UpdatePlaneMutationHookResult = ReturnType<typeof useUpdatePlaneMutation>;\nexport type UpdatePlaneMutationResult = Apollo.MutationResult<Operation.UpdatePlaneMutation>;\nexport type UpdatePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdatePlaneMutation, Operation.UpdatePlaneMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $isPublic: Boolean, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, isPublic: $isPublic, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      isPublic: // value for 'isPublic'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UpdateRigInspectionTemplateDocument = gql`\n    mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n  updateFormTemplate(\n    input: {id: $formId, attributes: {dropzoneId: $dropzoneId, definition: $definition}}\n  ) {\n    formTemplate {\n      id\n      name\n      definition\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRigInspectionTemplateMutationFn = Apollo.MutationFunction<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\n\n/**\n * __useUpdateRigInspectionTemplateMutation__\n *\n * To run a mutation, you first call `useUpdateRigInspectionTemplateMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigInspectionTemplateMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigInspectionTemplateMutation, { data, loading, error }] = useUpdateRigInspectionTemplateMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      formId: // value for 'formId'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useUpdateRigInspectionTemplateMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>(UpdateRigInspectionTemplateDocument, options);\n      }\nexport type UpdateRigInspectionTemplateMutationHookResult = ReturnType<typeof useUpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationResult = Apollo.MutationResult<Operation.UpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\nexport const UpdateRoleDocument = gql`\n    mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n  updateRole(input: {id: $roleId, permission: $permissionName, enabled: $enabled}) {\n    role {\n      id\n      name\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRoleMutationFn = Apollo.MutationFunction<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\n\n/**\n * __useUpdateRoleMutation__\n *\n * To run a mutation, you first call `useUpdateRoleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRoleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRoleMutation, { data, loading, error }] = useUpdateRoleMutation({\n *   variables: {\n *      roleId: // value for 'roleId'\n *      permissionName: // value for 'permissionName'\n *      enabled: // value for 'enabled'\n *   },\n * });\n */\nexport function useUpdateRoleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>(UpdateRoleDocument, options);\n      }\nexport type UpdateRoleMutationHookResult = ReturnType<typeof useUpdateRoleMutation>;\nexport type UpdateRoleMutationResult = Apollo.MutationResult<Operation.UpdateRoleMutation>;\nexport type UpdateRoleMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\nexport const UpdateTicketTypeDocument = gql`\n    mutation UpdateTicketType($id: Int!, $name: String, $cost: Float, $altitude: Int, $allowManifestingSelf: Boolean, $isTandem: Boolean, $extraIds: [Int!]) {\n  updateTicketType(\n    input: {id: $id, attributes: {name: $name, cost: $cost, altitude: $altitude, allowManifestingSelf: $allowManifestingSelf, isTandem: $isTandem, extraIds: $extraIds}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      ...ticketTypeEssentials\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        ...dropzoneEssentials\n        ticketTypes {\n          ...ticketTypeEssentials\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}`;\nexport type UpdateTicketTypeMutationFn = Apollo.MutationFunction<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\n\n/**\n * __useUpdateTicketTypeMutation__\n *\n * To run a mutation, you first call `useUpdateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketTypeMutation, { data, loading, error }] = useUpdateTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      cost: // value for 'cost'\n *      altitude: // value for 'altitude'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *      isTandem: // value for 'isTandem'\n *      extraIds: // value for 'extraIds'\n *   },\n * });\n */\nexport function useUpdateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>(UpdateTicketTypeDocument, options);\n      }\nexport type UpdateTicketTypeMutationHookResult = ReturnType<typeof useUpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationResult = Apollo.MutationResult<Operation.UpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\nexport const UpdateUserDocument = gql`\n    mutation UpdateUser($dropzoneUser: Int, $name: String, $phone: String, $email: String, $image: String, $pushToken: String, $nickname: String, $license: Int, $exitWeight: Float) {\n  updateUser(\n    input: {dropzoneUser: $dropzoneUser, attributes: {pushToken: $pushToken, name: $name, phone: $phone, email: $email, image: $image, nickname: $nickname, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateUserMutationFn = Apollo.MutationFunction<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      dropzoneUser: // value for 'dropzoneUser'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      image: // value for 'image'\n *      pushToken: // value for 'pushToken'\n *      nickname: // value for 'nickname'\n *      license: // value for 'license'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useUpdateUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>(UpdateUserDocument, options);\n      }\nexport type UpdateUserMutationHookResult = ReturnType<typeof useUpdateUserMutation>;\nexport type UpdateUserMutationResult = Apollo.MutationResult<Operation.UpdateUserMutation>;\nexport type UpdateUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\nexport const UpdateVisibilityDocument = gql`\n    mutation UpdateVisibility($dropzone: ID!, $event: DropzoneStateEvent!) {\n  updateVisibility(input: {dropzone: $dropzone, event: $event}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzone {\n      ...dropzoneDetailed\n    }\n  }\n}\n    ${DropzoneDetailedFragmentDoc}`;\nexport type UpdateVisibilityMutationFn = Apollo.MutationFunction<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\n\n/**\n * __useUpdateVisibilityMutation__\n *\n * To run a mutation, you first call `useUpdateVisibilityMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateVisibilityMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateVisibilityMutation, { data, loading, error }] = useUpdateVisibilityMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      event: // value for 'event'\n *   },\n * });\n */\nexport function useUpdateVisibilityMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>(UpdateVisibilityDocument, options);\n      }\nexport type UpdateVisibilityMutationHookResult = ReturnType<typeof useUpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationResult = Apollo.MutationResult<Operation.UpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userRegister(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const ActivityDocument = gql`\n    query Activity($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!]) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n  ) {\n    edges {\n      node {\n        ...activityEssentials\n      }\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}`;\n\n/**\n * __useActivityQuery__\n *\n * To run a query within a React component, call `useActivityQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *   },\n * });\n */\nexport function useActivityQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n      }\nexport function useActivityLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n        }\nexport type ActivityQueryHookResult = ReturnType<typeof useActivityQuery>;\nexport type ActivityLazyQueryHookResult = ReturnType<typeof useActivityLazyQuery>;\nexport type ActivityQueryResult = Apollo.QueryResult<Operation.ActivityQuery, Operation.ActivityQueryVariables>;\nexport const ActivityDetailsDocument = gql`\n    query ActivityDetails($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!], $after: String) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n    after: $after\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ...activityDetails\n      }\n    }\n  }\n}\n    ${ActivityDetailsFragmentDoc}`;\n\n/**\n * __useActivityDetailsQuery__\n *\n * To run a query within a React component, call `useActivityDetailsQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityDetailsQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useActivityDetailsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n      }\nexport function useActivityDetailsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n        }\nexport type ActivityDetailsQueryHookResult = ReturnType<typeof useActivityDetailsQuery>;\nexport type ActivityDetailsLazyQueryHookResult = ReturnType<typeof useActivityDetailsLazyQuery>;\nexport type ActivityDetailsQueryResult = Apollo.QueryResult<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>;\nexport const CurrentUserDocument = gql`\n    query CurrentUser {\n  currentUser {\n    ...currentUser\n  }\n}\n    ${CurrentUserFragmentDoc}`;\n\n/**\n * __useCurrentUserQuery__\n *\n * To run a query within a React component, call `useCurrentUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentUserQuery(baseOptions?: Apollo.QueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n      }\nexport function useCurrentUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n        }\nexport type CurrentUserQueryHookResult = ReturnType<typeof useCurrentUserQuery>;\nexport type CurrentUserLazyQueryHookResult = ReturnType<typeof useCurrentUserLazyQuery>;\nexport type CurrentUserQueryResult = Apollo.QueryResult<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>;\nexport const DropzoneDocument = gql`\n    query Dropzone($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useDropzoneQuery__\n *\n * To run a query within a React component, call `useDropzoneQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n      }\nexport function useDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n        }\nexport type DropzoneQueryHookResult = ReturnType<typeof useDropzoneQuery>;\nexport type DropzoneLazyQueryHookResult = ReturnType<typeof useDropzoneLazyQuery>;\nexport type DropzoneQueryResult = Apollo.QueryResult<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>;\nexport const DropzoneStatisticsDocument = gql`\n    query DropzoneStatistics($dropzoneId: ID!, $timeRange: TimeRangeInput) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneStatistics\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzoneStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzoneStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneStatisticsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      timeRange: // value for 'timeRange'\n *   },\n * });\n */\nexport function useDropzoneStatisticsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n      }\nexport function useDropzoneStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n        }\nexport type DropzoneStatisticsQueryHookResult = ReturnType<typeof useDropzoneStatisticsQuery>;\nexport type DropzoneStatisticsLazyQueryHookResult = ReturnType<typeof useDropzoneStatisticsLazyQuery>;\nexport type DropzoneStatisticsQueryResult = Apollo.QueryResult<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>;\nexport const DropzonesStatisticsDocument = gql`\n    query DropzonesStatistics($timeRange: TimeRangeInput, $after: String) {\n  dropzones(after: $after) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...dropzoneStatistics\n      }\n    }\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzonesStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzonesStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesStatisticsQuery({\n *   variables: {\n *      timeRange: // value for 'timeRange'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzonesStatisticsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n      }\nexport function useDropzonesStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n        }\nexport type DropzonesStatisticsQueryHookResult = ReturnType<typeof useDropzonesStatisticsQuery>;\nexport type DropzonesStatisticsLazyQueryHookResult = ReturnType<typeof useDropzonesStatisticsLazyQuery>;\nexport type DropzonesStatisticsQueryResult = Apollo.QueryResult<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>;\nexport const DropzoneRigsDocument = gql`\n    query DropzoneRigs($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneRigsQuery__\n *\n * To run a query within a React component, call `useDropzoneRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneRigsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n      }\nexport function useDropzoneRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n        }\nexport type DropzoneRigsQueryHookResult = ReturnType<typeof useDropzoneRigsQuery>;\nexport type DropzoneRigsLazyQueryHookResult = ReturnType<typeof useDropzoneRigsLazyQuery>;\nexport type DropzoneRigsQueryResult = Apollo.QueryResult<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>;\nexport const DropzonePermissionsDocument = gql`\n    query DropzonePermissions($id: ID!) {\n  dropzone(id: $id) {\n    ...dropzoneEssentials\n    roles {\n      ...roleDetailed\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${RoleDetailedFragmentDoc}`;\n\n/**\n * __useDropzonePermissionsQuery__\n *\n * To run a query within a React component, call `useDropzonePermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonePermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonePermissionsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzonePermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n      }\nexport function useDropzonePermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n        }\nexport type DropzonePermissionsQueryHookResult = ReturnType<typeof useDropzonePermissionsQuery>;\nexport type DropzonePermissionsLazyQueryHookResult = ReturnType<typeof useDropzonePermissionsLazyQuery>;\nexport type DropzonePermissionsQueryResult = Apollo.QueryResult<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: ID!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const DropzoneUsersDocument = gql`\n    query DropzoneUsers($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n      }\nexport function useDropzoneUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n        }\nexport type DropzoneUsersQueryHookResult = ReturnType<typeof useDropzoneUsersQuery>;\nexport type DropzoneUsersLazyQueryHookResult = ReturnType<typeof useDropzoneUsersLazyQuery>;\nexport type DropzoneUsersQueryResult = Apollo.QueryResult<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>;\nexport const DropzoneUsersDetailedDocument = gql`\n    query DropzoneUsersDetailed($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersDetailedQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n      }\nexport function useDropzoneUsersDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n        }\nexport type DropzoneUsersDetailedQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedQuery>;\nexport type DropzoneUsersDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedLazyQuery>;\nexport type DropzoneUsersDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>;\nexport const DropzoneUserDocument = gql`\n    query DropzoneUser($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUserQuery__\n *\n * To run a query within a React component, call `useDropzoneUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n      }\nexport function useDropzoneUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n        }\nexport type DropzoneUserQueryHookResult = ReturnType<typeof useDropzoneUserQuery>;\nexport type DropzoneUserLazyQueryHookResult = ReturnType<typeof useDropzoneUserLazyQuery>;\nexport type DropzoneUserQueryResult = Apollo.QueryResult<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>;\nexport const DropzoneUserDetailedDocument = gql`\n    query DropzoneUserDetailed($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserDetails\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useDropzoneUserDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUserDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserDetailedQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n      }\nexport function useDropzoneUserDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n        }\nexport type DropzoneUserDetailedQueryHookResult = ReturnType<typeof useDropzoneUserDetailedQuery>;\nexport type DropzoneUserDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUserDetailedLazyQuery>;\nexport type DropzoneUserDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>;\nexport const DropzoneUserProfileDocument = gql`\n    query DropzoneUserProfile($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserProfile\n  }\n}\n    ${DropzoneUserProfileFragmentDoc}`;\n\n/**\n * __useDropzoneUserProfileQuery__\n *\n * To run a query within a React component, call `useDropzoneUserProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserProfileQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserProfileQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n      }\nexport function useDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n        }\nexport type DropzoneUserProfileQueryHookResult = ReturnType<typeof useDropzoneUserProfileQuery>;\nexport type DropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useDropzoneUserProfileLazyQuery>;\nexport type DropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>;\nexport const DropzonesDocument = gql`\n    query Dropzones($state: [DropzoneState!]) {\n  dropzones(state: $state) {\n    edges {\n      node {\n        ...dropzoneEssentials\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzonesQuery__\n *\n * To run a query within a React component, call `useDropzonesQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesQuery({\n *   variables: {\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useDropzonesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n      }\nexport function useDropzonesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n        }\nexport type DropzonesQueryHookResult = ReturnType<typeof useDropzonesQuery>;\nexport type DropzonesLazyQueryHookResult = ReturnType<typeof useDropzonesLazyQuery>;\nexport type DropzonesQueryResult = Apollo.QueryResult<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>;\nexport const TicketTypeExtrasDocument = gql`\n    query TicketTypeExtras($dropzoneId: ID!) {\n  extras(dropzone: $dropzoneId) {\n    ...ticketTypeExtraDetailed\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\n\n/**\n * __useTicketTypeExtrasQuery__\n *\n * To run a query within a React component, call `useTicketTypeExtrasQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypeExtrasQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypeExtrasQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useTicketTypeExtrasQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n      }\nexport function useTicketTypeExtrasLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n        }\nexport type TicketTypeExtrasQueryHookResult = ReturnType<typeof useTicketTypeExtrasQuery>;\nexport type TicketTypeExtrasLazyQueryHookResult = ReturnType<typeof useTicketTypeExtrasLazyQuery>;\nexport type TicketTypeExtrasQueryResult = Apollo.QueryResult<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>;\nexport const FederationsDocument = gql`\n    query Federations {\n  federations {\n    ...federationEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}`;\n\n/**\n * __useFederationsQuery__\n *\n * To run a query within a React component, call `useFederationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useFederationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFederationsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useFederationsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n      }\nexport function useFederationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n        }\nexport type FederationsQueryHookResult = ReturnType<typeof useFederationsQuery>;\nexport type FederationsLazyQueryHookResult = ReturnType<typeof useFederationsLazyQuery>;\nexport type FederationsQueryResult = Apollo.QueryResult<Operation.FederationsQuery, Operation.FederationsQueryVariables>;\nexport const AddressToLocationDocument = gql`\n    query AddressToLocation($search: String!) {\n  geocode(search: $search) {\n    formattedString\n    id\n    lat\n    lng\n  }\n}\n    `;\n\n/**\n * __useAddressToLocationQuery__\n *\n * To run a query within a React component, call `useAddressToLocationQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressToLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressToLocationQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useAddressToLocationQuery(baseOptions: Apollo.QueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n      }\nexport function useAddressToLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n        }\nexport type AddressToLocationQueryHookResult = ReturnType<typeof useAddressToLocationQuery>;\nexport type AddressToLocationLazyQueryHookResult = ReturnType<typeof useAddressToLocationLazyQuery>;\nexport type AddressToLocationQueryResult = Apollo.QueryResult<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>;\nexport const JumpTypesDocument = gql`\n    query JumpTypes($allowedForDropzoneUserIds: [Int!]) {\n  jumpTypes(dropzoneUsers: $allowedForDropzoneUserIds) {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}`;\n\n/**\n * __useJumpTypesQuery__\n *\n * To run a query within a React component, call `useJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useJumpTypesQuery({\n *   variables: {\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *   },\n * });\n */\nexport function useJumpTypesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n      }\nexport function useJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n        }\nexport type JumpTypesQueryHookResult = ReturnType<typeof useJumpTypesQuery>;\nexport type JumpTypesLazyQueryHookResult = ReturnType<typeof useJumpTypesLazyQuery>;\nexport type JumpTypesQueryResult = Apollo.QueryResult<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>;\nexport const AllowedJumpTypesDocument = gql`\n    query AllowedJumpTypes($dropzoneId: ID!, $allowedForDropzoneUserIds: [Int!]!, $isPublic: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    allowedJumpTypes(userId: $allowedForDropzoneUserIds) {\n      ...jumpTypeEssentials\n    }\n    ticketTypes(isPublic: $isPublic) {\n      ...ticketTypeEssentials\n    }\n  }\n  jumpTypes {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedJumpTypesQuery__\n *\n * To run a query within a React component, call `useAllowedJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedJumpTypesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useAllowedJumpTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n      }\nexport function useAllowedJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n        }\nexport type AllowedJumpTypesQueryHookResult = ReturnType<typeof useAllowedJumpTypesQuery>;\nexport type AllowedJumpTypesLazyQueryHookResult = ReturnType<typeof useAllowedJumpTypesLazyQuery>;\nexport type AllowedJumpTypesQueryResult = Apollo.QueryResult<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>;\nexport const LicensesDocument = gql`\n    query Licenses($federationId: Int) {\n  licenses(federationId: $federationId) {\n    ...licenseDetails\n  }\n}\n    ${LicenseDetailsFragmentDoc}`;\n\n/**\n * __useLicensesQuery__\n *\n * To run a query within a React component, call `useLicensesQuery` and pass it any options that fit your needs.\n * When your component renders, `useLicensesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLicensesQuery({\n *   variables: {\n *      federationId: // value for 'federationId'\n *   },\n * });\n */\nexport function useLicensesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n      }\nexport function useLicensesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n        }\nexport type LicensesQueryHookResult = ReturnType<typeof useLicensesQuery>;\nexport type LicensesLazyQueryHookResult = ReturnType<typeof useLicensesLazyQuery>;\nexport type LicensesQueryResult = Apollo.QueryResult<Operation.LicensesQuery, Operation.LicensesQueryVariables>;\nexport const LoadDocument = gql`\n    query Load($id: ID!) {\n  load(id: $id) {\n    ...loadDetails\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadQuery__\n *\n * To run a query within a React component, call `useLoadQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n      }\nexport function useLoadLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n        }\nexport type LoadQueryHookResult = ReturnType<typeof useLoadQuery>;\nexport type LoadLazyQueryHookResult = ReturnType<typeof useLoadLazyQuery>;\nexport type LoadQueryResult = Apollo.QueryResult<Operation.LoadQuery, Operation.LoadQueryVariables>;\nexport const LoadsDocument = gql`\n    query Loads($date: ISO8601Date, $dropzone: ID!) {\n  loads(date: $date, dropzone: $dropzone) {\n    edges {\n      node {\n        ...loadEssentials\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}`;\n\n/**\n * __useLoadsQuery__\n *\n * To run a query within a React component, call `useLoadsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadsQuery({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *   },\n * });\n */\nexport function useLoadsQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n      }\nexport function useLoadsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n        }\nexport type LoadsQueryHookResult = ReturnType<typeof useLoadsQuery>;\nexport type LoadsLazyQueryHookResult = ReturnType<typeof useLoadsLazyQuery>;\nexport type LoadsQueryResult = Apollo.QueryResult<Operation.LoadsQuery, Operation.LoadsQueryVariables>;\nexport const NotificationsDocument = gql`\n    query Notifications($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    currentUser {\n      id\n      notifications {\n        edges {\n          node {\n            id\n            message\n            notificationType\n            createdAt\n            sentBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n            resource {\n              ... on Load {\n                ...loadEssentials\n              }\n              ... on Transaction {\n                id\n                amount\n                message\n                status\n              }\n              ... on Slot {\n                ...slotEssentials\n              }\n              ... on Rig {\n                ...rigEssentials\n                rigInspections(dropzoneId: $dropzoneId) {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              ... on RigInspection {\n                ...rigInspectionEssentials\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\n\n/**\n * __useNotificationsQuery__\n *\n * To run a query within a React component, call `useNotificationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useNotificationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNotificationsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useNotificationsQuery(baseOptions: Apollo.QueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n      }\nexport function useNotificationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n        }\nexport type NotificationsQueryHookResult = ReturnType<typeof useNotificationsQuery>;\nexport type NotificationsLazyQueryHookResult = ReturnType<typeof useNotificationsLazyQuery>;\nexport type NotificationsQueryResult = Apollo.QueryResult<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>;\nexport const PlanesDocument = gql`\n    query Planes($dropzoneId: ID!) {\n  planes(dropzone: $dropzoneId) {\n    ...planeEssentials\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\n\n/**\n * __usePlanesQuery__\n *\n * To run a query within a React component, call `usePlanesQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlanesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlanesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function usePlanesQuery(baseOptions: Apollo.QueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n      }\nexport function usePlanesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n        }\nexport type PlanesQueryHookResult = ReturnType<typeof usePlanesQuery>;\nexport type PlanesLazyQueryHookResult = ReturnType<typeof usePlanesLazyQuery>;\nexport type PlanesQueryResult = Apollo.QueryResult<Operation.PlanesQuery, Operation.PlanesQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        ...roleEssentials\n      }\n      permissions\n    }\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;\nexport const RigInspectionTemplateDocument = gql`\n    query RigInspectionTemplate($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigInspectionTemplate {\n      id\n      name\n      definition\n    }\n  }\n}\n    `;\n\n/**\n * __useRigInspectionTemplateQuery__\n *\n * To run a query within a React component, call `useRigInspectionTemplateQuery` and pass it any options that fit your needs.\n * When your component renders, `useRigInspectionTemplateQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRigInspectionTemplateQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useRigInspectionTemplateQuery(baseOptions: Apollo.QueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n      }\nexport function useRigInspectionTemplateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n        }\nexport type RigInspectionTemplateQueryHookResult = ReturnType<typeof useRigInspectionTemplateQuery>;\nexport type RigInspectionTemplateLazyQueryHookResult = ReturnType<typeof useRigInspectionTemplateLazyQuery>;\nexport type RigInspectionTemplateQueryResult = Apollo.QueryResult<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>;\nexport const AvailableRigsDocument = gql`\n    query AvailableRigs($dropzoneUserId: Int!, $isTandem: Boolean, $loadId: Int) {\n  availableRigs(\n    dropzoneUser: $dropzoneUserId\n    isTandem: $isTandem\n    loadId: $loadId\n  ) {\n    ...userRigDetailed\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\n\n/**\n * __useAvailableRigsQuery__\n *\n * To run a query within a React component, call `useAvailableRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAvailableRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAvailableRigsQuery({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      isTandem: // value for 'isTandem'\n *      loadId: // value for 'loadId'\n *   },\n * });\n */\nexport function useAvailableRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n      }\nexport function useAvailableRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n        }\nexport type AvailableRigsQueryHookResult = ReturnType<typeof useAvailableRigsQuery>;\nexport type AvailableRigsLazyQueryHookResult = ReturnType<typeof useAvailableRigsLazyQuery>;\nexport type AvailableRigsQueryResult = Apollo.QueryResult<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>;\nexport const RolesDocument = gql`\n    query Roles($dropzoneId: ID!, $selectable: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    roles(selectable: $selectable) {\n      ...roleDetailed\n    }\n  }\n}\n    ${RoleDetailedFragmentDoc}`;\n\n/**\n * __useRolesQuery__\n *\n * To run a query within a React component, call `useRolesQuery` and pass it any options that fit your needs.\n * When your component renders, `useRolesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRolesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      selectable: // value for 'selectable'\n *   },\n * });\n */\nexport function useRolesQuery(baseOptions: Apollo.QueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n      }\nexport function useRolesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n        }\nexport type RolesQueryHookResult = ReturnType<typeof useRolesQuery>;\nexport type RolesLazyQueryHookResult = ReturnType<typeof useRolesLazyQuery>;\nexport type RolesQueryResult = Apollo.QueryResult<Operation.RolesQuery, Operation.RolesQueryVariables>;\nexport const AllowedTicketTypesDocument = gql`\n    query AllowedTicketTypes($dropzone: ID!, $onlyPublicTickets: Boolean) {\n  dropzone(id: $dropzone) {\n    id\n    ticketTypes(isPublic: $onlyPublicTickets) {\n      ...ticketTypeEssentials\n      extras {\n        id\n        cost\n        name\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedTicketTypesQuery__\n *\n * To run a query within a React component, call `useAllowedTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      onlyPublicTickets: // value for 'onlyPublicTickets'\n *   },\n * });\n */\nexport function useAllowedTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n      }\nexport function useAllowedTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n        }\nexport type AllowedTicketTypesQueryHookResult = ReturnType<typeof useAllowedTicketTypesQuery>;\nexport type AllowedTicketTypesLazyQueryHookResult = ReturnType<typeof useAllowedTicketTypesLazyQuery>;\nexport type AllowedTicketTypesQueryResult = Apollo.QueryResult<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>;\nexport const TicketTypesDocument = gql`\n    query TicketTypes($dropzone: ID!, $allowManifestingSelf: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $allowManifestingSelf) {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useTicketTypesQuery__\n *\n * To run a query within a React component, call `useTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *   },\n * });\n */\nexport function useTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n      }\nexport function useTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n        }\nexport type TicketTypesQueryHookResult = ReturnType<typeof useTicketTypesQuery>;\nexport type TicketTypesLazyQueryHookResult = ReturnType<typeof useTicketTypesLazyQuery>;\nexport type TicketTypesQueryResult = Apollo.QueryResult<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>;","/* eslint-disable no-console */\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { FieldError } from '../schema.d';\n\nexport type InferArguments<Func> = Func extends (arg: infer Argument) => unknown ? Argument : never;\ntype CRUDHook<Args extends object, Value extends object> = (args: Args) => Value;\ntype InferHookArguments<Hook> = Hook extends CRUDHook<infer Arguments, object> ? Arguments : never;\n\nexport const uninitializedHandler = async (args?: unknown) => undefined as unknown;\n\n// Streamline mutation results\nexport interface IMutationSuccessResponse<T> {\n  note: T;\n}\n\nexport interface IMutationFailureResponse {\n  fieldErrors?: FieldError[];\n  error?: string;\n}\n\nexport type TMutationResponse<MutationSuccessResponse extends { [key: string]: object }> =\n  | MutationSuccessResponse\n  | IMutationFailureResponse;\n\nconst DEBUG_PROVIDERS = false;\n/**\n * Create a context for the CRUD operations\n * to allow using it further down the tree without\n * remounting the same hooks\n *\n * Usage:\n * createCRUDContext<typeof useHook>({ onUpdate: noop, onDelete: noop })\n */\nexport default function createCRUDContext<\n  Args extends object,\n  Value extends object,\n  Hook extends CRUDHook<Args, Value>\n>(useHook: Hook, INITIAL_STATE: ReturnType<Hook>) {\n  const Context = React.createContext<ReturnType<Hook>>(INITIAL_STATE);\n\n  function Provider(props: React.PropsWithChildren<InferHookArguments<Hook>>) {\n    const { children, ...rest } = props;\n    const value = useHook(rest as InferHookArguments<Hook>) as ReturnType<Hook>;\n    const old = React.useRef<typeof value>(value);\n\n    // Leaving these in for debugging if needed later,\n    // just flip DEBUG_PROVIDERS to true\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        console.debug(useHook.name, 'mounted');\n        return () => {\n          console.debug(useHook.name, 'unmounted');\n        };\n      }\n      return undefined;\n    }, []);\n\n    // Print debugging information\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        if (JSON.stringify(value) !== JSON.stringify(old.current)) {\n          console.debug(useHook.name, '[CRUD Hook] Re-rendering because of state change: ', {\n            old: old.current,\n            new: value,\n          });\n          console.debug(useHook.name, '[CRUD Hook] Previous: ', old.current);\n          console.debug(useHook.name, '[CRUD Hook] Current: ', value);\n          difference(Object.values(old.current), Object.values(value)).forEach((key) => {\n            console.debug('DIFF IN ', key);\n          });\n          old.current = value;\n        }\n      }\n    }, [value]);\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext() {\n    return React.useContext(Context);\n  }\n\n  return { Provider: React.memo(Provider, isEqual), useContext, Context, INITIAL_STATE };\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useCurrentUserPermissionsQuery, useDropzoneQuery } from '../reflection';\nimport { CurrentUserPermissionsQueryVariables, DropzoneQueryVariables } from '../operations';\nimport createCRUDContext, { uninitializedHandler } from './factory';\n\nexport default function useDropzone(vars: Partial<DropzoneQueryVariables>) {\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const query = useDropzoneQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !variables?.dropzoneId,\n  });\n\n  const permissionsVariables = React.useMemo(\n    () => ({ dropzoneId: variables?.dropzoneId }),\n    [variables?.dropzoneId]\n  );\n\n  const permissions = useCurrentUserPermissionsQuery({\n    variables: permissionsVariables as CurrentUserPermissionsQueryVariables,\n    skip: !permissionsVariables?.dropzoneId,\n  });\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      permissions: permissions?.data?.dropzone?.currentUser?.permissions || [],\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      dropzone: data?.dropzone,\n      currentUser: data?.dropzone?.currentUser,\n    }),\n    [\n      variables,\n      loading,\n      called,\n      permissions?.data?.dropzone?.currentUser?.permissions,\n      refetch,\n      queryVariables?.dropzoneId,\n      fetchMore,\n      data?.dropzone,\n    ]\n  );\n}\n\nconst { Provider: DropzoneProvider, useContext: useDropzoneContext } = createCRUDContext(\n  useDropzone,\n  {\n    permissions: [],\n    called: false,\n    loading: false,\n    dropzone: null,\n    currentUser: undefined,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  }\n);\n\nexport { DropzoneProvider, useDropzoneContext, useDropzone };\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** An ISO 8601-encoded date */\n  ISO8601Date: any;\n  /** An ISO 8601-encoded datetime */\n  ISO8601DateTime: any;\n};\n\nexport type AnyResource = {\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of Apple. */\nexport type ApplePayload = {\n  __typename?: 'ApplePayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone. */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateExtra. */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost. */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad. */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder. */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane. */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateRigInspection. */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig. */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot. */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots. */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket. */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition. */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteDropzone. */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteLoad. */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeletePlane. */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteRig */\nexport type DeleteRigInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteRig. */\nexport type DeleteRigPayload = {\n  __typename?: 'DeleteRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteSlot. */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteTicket. */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of DeleteUser */\nexport type DeleteUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the dropzone user to delete */\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteUser. */\nexport type DeleteUserPayload = {\n  __typename?: 'DeleteUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  extras: Array<Extra>;\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  state: DropzoneState;\n  statistics: Statistics;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userRoles: Array<UserRole>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: InputMaybe<Scalars['Int']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  banner?: InputMaybe<Scalars['String']>;\n  federation: Scalars['Int'];\n  isCreditSystemEnabled?: InputMaybe<Scalars['Boolean']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  lat?: InputMaybe<Scalars['Float']>;\n  lng?: InputMaybe<Scalars['Float']>;\n  name: Scalars['String'];\n  primaryColor?: InputMaybe<Scalars['String']>;\n  requestPublication?: InputMaybe<Scalars['Boolean']>;\n  secondaryColor?: InputMaybe<Scalars['String']>;\n};\n\nexport enum DropzoneState {\n  Archived = 'archived',\n  Demo = 'demo',\n  InReview = 'in_review',\n  Private = 'private',\n  Public = 'public'\n}\n\nexport enum DropzoneStateEvent {\n  /** archive */\n  Archive = 'archive',\n  /** demo */\n  Demo = 'demo',\n  /** publish */\n  Publish = 'publish',\n  /** request_publication */\n  RequestPublication = 'request_publication',\n  /** unpublish */\n  Unpublish = 'unpublish'\n}\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['ISO8601DateTime'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['ISO8601DateTime'];\n  user: User;\n  userFederation?: Maybe<UserFederation>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  credits?: InputMaybe<Scalars['Float']>;\n  expiresAt?: InputMaybe<Scalars['Int']>;\n  userRoleId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Event = {\n  __typename?: 'Event';\n  action?: Maybe<EventAction>;\n  createdAt?: Maybe<Scalars['ISO8601DateTime']>;\n  createdBy?: Maybe<DropzoneUser>;\n  details?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  level?: Maybe<EventLevel>;\n  message?: Maybe<Scalars['String']>;\n  resource?: Maybe<AnyResource>;\n};\n\nexport enum EventAccessLevel {\n  /** admin */\n  Admin = 'admin',\n  /** system */\n  System = 'system',\n  /** user */\n  User = 'user'\n}\n\nexport enum EventAction {\n  /** assigned */\n  Assigned = 'assigned',\n  /** confirmed */\n  Confirmed = 'confirmed',\n  /** created */\n  Created = 'created',\n  /** deleted */\n  Deleted = 'deleted',\n  /** updated */\n  Updated = 'updated'\n}\n\n/** The connection type for Event. */\nexport type EventConnection = {\n  __typename?: 'EventConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EventEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Event>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type EventEdge = {\n  __typename?: 'EventEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Event>;\n};\n\nexport enum EventLevel {\n  /** debug */\n  Debug = 'debug',\n  /** error */\n  Error = 'error',\n  /** info */\n  Info = 'info'\n}\n\nexport type Extra = SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type ExtraInput = {\n  cost?: InputMaybe<Scalars['Float']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  ticketTypeIds?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Autogenerated return type of Facebook. */\nexport type FacebookPayload = {\n  __typename?: 'FacebookPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  licenses?: Maybe<Array<License>>;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  state: LoadState;\n};\n\n/** Autogenerated return type of FinalizeLoad. */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FormTemplateInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type GeocodedLocation = {\n  __typename?: 'GeocodedLocation';\n  formattedString?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  lat?: Maybe<Scalars['Float']>;\n  lng: Scalars['Float'];\n};\n\nexport type GhostInput = {\n  dropzone: Scalars['Int'];\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  federationNumber?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  phone?: InputMaybe<Scalars['String']>;\n  role: Scalars['Int'];\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of GrantPermission. */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation. */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['ISO8601DateTime'];\n  federation?: Maybe<Federation>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  guid: Scalars['ID'];\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['ISO8601DateTime'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: InputMaybe<Scalars['ISO8601DateTime']>;\n  gca?: InputMaybe<Scalars['Int']>;\n  loadMaster?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  pilot?: InputMaybe<Scalars['Int']>;\n  plane?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** open */\n  Open = 'open'\n}\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum ModerationRole {\n  /** administrator */\n  Administrator = 'administrator',\n  /** moderator */\n  Moderator = 'moderator',\n  /** support */\n  Support = 'support',\n  /** user */\n  User = 'user'\n}\n\n/** Autogenerated input type of MoveSlot */\nexport type MoveSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  sourceSlot: Scalars['Int'];\n  targetLoad: Scalars['Int'];\n  targetSlot?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of MoveSlot. */\nexport type MoveSlotPayload = {\n  __typename?: 'MoveSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  loads?: Maybe<Array<Load>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  archiveRig?: Maybe<DeleteRigPayload>;\n  archiveTicketType?: Maybe<DeleteTicketPayload>;\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteUser?: Maybe<DeleteUserPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  loginWithApple?: Maybe<ApplePayload>;\n  loginWithFacebook?: Maybe<FacebookPayload>;\n  moveSlot?: Maybe<MoveSlotPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  updateVisibility?: Maybe<UpdateVisibilityPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<SignUpPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationArchiveRigArgs = {\n  input: DeleteRigInput;\n};\n\n\nexport type MutationArchiveTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input: DeleteUserInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationLoginWithAppleArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n  userIdentity: Scalars['String'];\n};\n\n\nexport type MutationLoginWithFacebookArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\n\nexport type MutationMoveSlotArgs = {\n  input: MoveSlotInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUpdateVisibilityArgs = {\n  input: UpdateVisibilityInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  phone: Scalars['String'];\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  confirmUrl: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** system */\n  System = 'system',\n  /** user_manifested */\n  UserManifested = 'user_manifested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  /** Total amount of the order */\n  amount: Scalars['Float'];\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: Scalars['ID'];\n  dropzone: Scalars['ID'];\n  /** Item to attach to order */\n  sellableItem?: InputMaybe<Scalars['ID']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: Scalars['ID'];\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport enum OrderState {\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** completed */\n  Completed = 'completed',\n  /** pending */\n  Pending = 'pending',\n  /** refunded */\n  Refunded = 'refunded'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  ActAsDzso = 'actAsDZSO',\n  ActAsGca = 'actAsGCA',\n  ActAsLoadMaster = 'actAsLoadMaster',\n  ActAsPilot = 'actAsPilot',\n  ActAsRigInspector = 'actAsRigInspector',\n  CreateDoubleSlot = 'createDoubleSlot',\n  CreateDropzoneRig = 'createDropzoneRig',\n  CreateExtra = 'createExtra',\n  CreateFormTemplate = 'createFormTemplate',\n  CreateLoad = 'createLoad',\n  CreatePackjob = 'createPackjob',\n  CreatePlane = 'createPlane',\n  CreateRig = 'createRig',\n  CreateSlot = 'createSlot',\n  CreateStudentSlot = 'createStudentSlot',\n  CreateTicketType = 'createTicketType',\n  CreateUser = 'createUser',\n  CreateUserDoubleSlot = 'createUserDoubleSlot',\n  CreateUserSlot = 'createUserSlot',\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  CreateUserTransaction = 'createUserTransaction',\n  DeleteDropzone = 'deleteDropzone',\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  DeleteExtra = 'deleteExtra',\n  DeleteFormTemplate = 'deleteFormTemplate',\n  DeleteLoad = 'deleteLoad',\n  DeletePackjob = 'deletePackjob',\n  DeletePlane = 'deletePlane',\n  DeleteRig = 'deleteRig',\n  DeleteSlot = 'deleteSlot',\n  DeleteStudentSlot = 'deleteStudentSlot',\n  DeleteTicketType = 'deleteTicketType',\n  DeleteUser = 'deleteUser',\n  DeleteUserSlot = 'deleteUserSlot',\n  GrantPermission = 'grantPermission',\n  ReadDropzoneRig = 'readDropzoneRig',\n  ReadExtra = 'readExtra',\n  ReadFormTemplate = 'readFormTemplate',\n  ReadLoad = 'readLoad',\n  ReadPackjob = 'readPackjob',\n  ReadPermissions = 'readPermissions',\n  ReadRig = 'readRig',\n  ReadUser = 'readUser',\n  ReadUserTransactions = 'readUserTransactions',\n  RevokePermission = 'revokePermission',\n  UndeleteDropzone = 'undeleteDropzone',\n  UndeleteDropzoneRig = 'undeleteDropzoneRig',\n  UndeleteExtra = 'undeleteExtra',\n  UndeletePlane = 'undeletePlane',\n  UndeleteRig = 'undeleteRig',\n  UndeleteStudentSlot = 'undeleteStudentSlot',\n  UndeleteTicketType = 'undeleteTicketType',\n  UndeleteUser = 'undeleteUser',\n  UndeleteUserSlot = 'undeleteUserSlot',\n  UpdateDropzone = 'updateDropzone',\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  UpdateExtra = 'updateExtra',\n  UpdateFormTemplate = 'updateFormTemplate',\n  UpdateLoad = 'updateLoad',\n  UpdatePackjob = 'updatePackjob',\n  UpdatePermissions = 'updatePermissions',\n  UpdatePlane = 'updatePlane',\n  UpdateRig = 'updateRig',\n  UpdateSlot = 'updateSlot',\n  UpdateStudentSlot = 'updateStudentSlot',\n  UpdateTicketType = 'updateTicketType',\n  UpdateUser = 'updateUser',\n  UpdateUserSlot = 'updateUserSlot',\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  ViewAdminActivity = 'viewAdminActivity',\n  ViewRevenue = 'viewRevenue',\n  ViewStatistics = 'viewStatistics',\n  ViewSystemActivity = 'viewSystemActivity',\n  ViewUserActivity = 'viewUserActivity'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots: Scalars['Int'];\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type PlaneInput = {\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  hours?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  minSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nextMaintenanceHours?: InputMaybe<Scalars['Int']>;\n  registration?: InputMaybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get all Activity Events for a dropzone (or all dropzones) */\n  activity: EventConnection;\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  /** Currently authenticated user */\n  currentUser?: Maybe<User>;\n  /** Get dropzone details */\n  dropzone?: Maybe<Dropzone>;\n  /** Get a specific user at a dropzone */\n  dropzoneUser?: Maybe<DropzoneUser>;\n  /** Search users at a dropzone */\n  dropzoneUsers?: Maybe<DropzoneUserConnection>;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get all ticket type extras */\n  extras: Array<Extra>;\n  /** Get all available federations */\n  federations: Array<Federation>;\n  /** Find location by searching */\n  geocode?: Maybe<GeocodedLocation>;\n  /** Get Base64 images via GraphQL */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load?: Maybe<Load>;\n  /** Get all loads */\n  loads: LoadConnection;\n  /** Get Aircrafts for a dropzone */\n  planes?: Maybe<Array<Plane>>;\n  /** Get ticket types for a dropzone */\n  ticketTypes?: Maybe<Array<TicketType>>;\n};\n\n\nexport type QueryActivityArgs = {\n  accessLevels?: InputMaybe<Array<EventAccessLevel>>;\n  actions?: InputMaybe<Array<EventAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  createdBy?: InputMaybe<Array<Scalars['ID']>>;\n  dropzone?: InputMaybe<Array<Scalars['ID']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  levels?: InputMaybe<Array<EventLevel>>;\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type QueryAvailableRigsArgs = {\n  dropzoneUser: Scalars['Int'];\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  licensed?: InputMaybe<Scalars['Boolean']>;\n  permissions?: InputMaybe<Array<Permission>>;\n  search?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<Array<DropzoneState>>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzone?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryGeocodeArgs = {\n  search: Scalars['String'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  dropzoneUsers?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  date?: InputMaybe<Scalars['ISO8601Date']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  dropzone: Scalars['ID'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition. */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of RevokePermission. */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  owner?: Maybe<User>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['ID'];\n};\n\nexport type RigInput = {\n  canopySize?: InputMaybe<Scalars['Int']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  maintainedAt?: InputMaybe<Scalars['Int']>;\n  make?: InputMaybe<Scalars['String']>;\n  model?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  packValue?: InputMaybe<Scalars['Int']>;\n  packingCard?: InputMaybe<Scalars['String']>;\n  repackExpiresAt?: InputMaybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: InputMaybe<Scalars['String']>;\n  serial?: InputMaybe<Scalars['String']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type RigInspectionInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzone?: InputMaybe<Scalars['ID']>;\n  isOk?: InputMaybe<Scalars['Boolean']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of SignUp. */\nexport type SignUpPayload = {\n  __typename?: 'SignUpPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  extras?: InputMaybe<Array<Scalars['ID']>>;\n  groupNumber?: InputMaybe<Scalars['Int']>;\n  jumpType?: InputMaybe<Scalars['ID']>;\n  load?: InputMaybe<Scalars['ID']>;\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n  userGroup?: InputMaybe<Array<SlotUser>>;\n};\n\nexport type SlotUser = {\n  exitWeight: Scalars['Float'];\n  id: Scalars['Int'];\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Statistics = {\n  __typename?: 'Statistics';\n  activeUserCount: Scalars['Int'];\n  cancelledLoadsCount: Scalars['Int'];\n  dzsoCount: Scalars['Int'];\n  finalizedLoadsCount: Scalars['Int'];\n  gcaCount: Scalars['Int'];\n  id: Scalars['ID'];\n  inactiveUserCount: Scalars['Int'];\n  /** Get the number of loads dispatched per day */\n  loadCountByDay?: Maybe<Array<StatisticsByDate>>;\n  loadsCount: Scalars['Int'];\n  pilotCount: Scalars['Int'];\n  revenueCentsCount: Scalars['Int'];\n  rigInspectorCount: Scalars['Int'];\n  /** Get the number of slots by jump type */\n  slotsByJumpType?: Maybe<Array<StatisticsByName>>;\n  slotsCount: Scalars['Int'];\n  totalUserCount: Scalars['Int'];\n};\n\n\nexport type StatisticsCancelledLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsFinalizedLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadCountByDayArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsRevenueCentsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsByJumpTypeArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\nexport type StatisticsByDate = {\n  __typename?: 'StatisticsByDate';\n  count: Scalars['Int'];\n  date: Scalars['ISO8601Date'];\n};\n\nexport type StatisticsByName = {\n  __typename?: 'StatisticsByName';\n  count: Scalars['Int'];\n  name: Scalars['String'];\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type TicketTypeInput = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  altitude?: InputMaybe<Scalars['Int']>;\n  cost?: InputMaybe<Scalars['Float']>;\n  currency?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  extraIds?: InputMaybe<Array<Scalars['Int']>>;\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type TimeRangeInput = {\n  endTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n  startTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser: DropzoneUser;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum TransactionStatus {\n  Cancelled = 'cancelled',\n  Completed = 'completed',\n  Reserved = 'reserved'\n}\n\nexport enum TransactionType {\n  Deposit = 'deposit',\n  Purchase = 'purchase',\n  Refund = 'refund',\n  Sale = 'sale',\n  Withdrawal = 'withdrawal'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateDropzone. */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser. */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateExtra. */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate. */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateLoad. */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateNotification. */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdatePlane. */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection. */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig. */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  enabled: Scalars['Boolean'];\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Scalars['String'];\n};\n\n/** Autogenerated return type of UpdateRole. */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateSlot. */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateTicket. */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateUser. */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateVisibility */\nexport type UpdateVisibilityInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  event: DropzoneStateEvent;\n};\n\n/** Autogenerated return type of UpdateVisibility. */\nexport type UpdateVisibilityPayload = {\n  __typename?: 'UpdateVisibilityPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  licenses?: Maybe<Array<License>>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken. */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federation: Scalars['ID'];\n  license?: InputMaybe<Scalars['ID']>;\n  /** User Federation ID, e.g APF number */\n  uid?: InputMaybe<Scalars['String']>;\n};\n\nexport type UserInput = {\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserLogin. */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout. */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken. */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken. */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken. */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['ISO8601DateTime'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  dropzoneId: Scalars['Int'];\n  exitSpotMiles?: InputMaybe<Scalars['Int']>;\n  jumpRun?: InputMaybe<Scalars['Int']>;\n  offsetDirection?: InputMaybe<Scalars['String']>;\n  offsetMiles?: InputMaybe<Scalars['Int']>;\n  temperature?: InputMaybe<Scalars['Int']>;\n  winds?: InputMaybe<Scalars['String']>;\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserDetailsFragment } from 'app/api/operations';\nimport { Transaction, TransactionType } from '../../../api/schema.d';\n\ntype Fields = Pick<Transaction, 'amount' | 'transactionType' | 'message'>;\n\ninterface IDropzoneEditState {\n  original: DropzoneUserDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Transaction[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    amount: {\n      value: null,\n      error: null,\n    },\n    transactionType: {\n      value: TransactionType.Deposit,\n      error: null,\n    },\n    message: {\n      value: '',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/credits',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<DropzoneUserDetailsFragment | boolean>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n      }\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneDetailedFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { DropzoneState } from 'app/api/schema.d';\n\nexport type DropzoneFields = Pick<\n  DropzoneDetailedFragment,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'status'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: DropzoneExtensiveFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: DropzoneDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    status: {\n      value: DropzoneState.Public,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<boolean | DropzoneExtensiveFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<DropzoneExtensiveFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<DropzoneUserEssentialsFragment, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUserEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUserEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IDropzoneUserEditState,\n      action: PayloadAction<boolean | DropzoneUserEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.role.value = action.payload.role;\n        state.fields.expiresAt.value = action.payload.expiresAt;\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketTypeExtraDetailedFragment } from 'app/api/operations';\n\nexport type ExtraFields = Pick<TicketTypeExtraDetailedFragment, 'name' | 'cost' | 'ticketTypes'>;\ninterface IExtraEditState {\n  original: TicketTypeExtraDetailedFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ExtraFields]-?: {\n      value: TicketTypeExtraDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IExtraEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    ticketTypes: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/extra',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IExtraEditState['fields']>(\n      state: IExtraEditState,\n      action: PayloadAction<[T, IExtraEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IExtraEditState,\n      action: PayloadAction<boolean | TicketTypeExtraDetailedFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.ticketTypes.value = action.payload.ticketTypes;\n        state.fields.cost.value = action.payload.cost;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: IExtraEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nexport type LoadFields = Pick<\n  LoadDetailsFragment,\n  'name' | 'gca' | 'dispatchAt' | 'isOpen' | 'loadMaster' | 'pilot' | 'maxSlots' | 'plane'\n>;\n\ninterface ILoadEditState {\n  original: LoadDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof LoadFields]-?: {\n      value: LoadDetailsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ILoadEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    gca: {\n      value: null,\n      error: null,\n    },\n    dispatchAt: {\n      value: null,\n      error: null,\n    },\n    isOpen: {\n      value: true,\n      error: null,\n    },\n    loadMaster: {\n      value: null,\n      error: null,\n    },\n    pilot: {\n      value: null,\n      error: null,\n    },\n    plane: {\n      value: null,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/load',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ILoadEditState['fields']>(\n      state: ILoadEditState,\n      action: PayloadAction<[T, ILoadEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: ILoadEditState, action: PayloadAction<boolean | LoadDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.dispatchAt.value = action.payload.dispatchAt;\n        state.fields.gca.value = action.payload.gca;\n        state.fields.isOpen.value = action.payload.isOpen;\n        state.fields.loadMaster.value = action.payload.loadMaster;\n        state.fields.maxSlots.value = action.payload.maxSlots;\n        state.fields.name.value = action.payload.name;\n        state.fields.pilot.value = action.payload.pilot;\n        state.fields.plane.value = action.payload.plane;\n      }\n    },\n\n    reset: (state: ILoadEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\nimport { User } from '../../../api/schema.d';\n\nexport type GhostFields = Pick<User, 'exitWeight' | 'name' | 'phone' | 'email'> &\n  Pick<DropzoneUserDetailsFragment, 'role' | 'license'>;\n\ninterface IGhostEditState {\n  original: UserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof GhostFields]-?: {\n      value: GhostFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IGhostEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    role: {\n      value: null,\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ghost',\n  initialState,\n  reducers: {\n    setFederation: (\n      state: IGhostEditState,\n      action: PayloadAction<FederationEssentialsFragment>\n    ) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IGhostEditState['fields']>(\n      state: IGhostEditState,\n      action: PayloadAction<[T, IGhostEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IGhostEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload.user;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license' || typedKey === 'role') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IGhostEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\n\nexport type PlaneFields = Omit<PlaneEssentialsFragment, 'id' | '__typename'>;\n\ninterface IPlaneEditState {\n  original: PlaneEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof PlaneFields]-?: {\n      value: PlaneEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IPlaneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    registration: {\n      value: '',\n      error: null,\n    },\n    minSlots: {\n      value: 0,\n      error: null,\n    },\n    maxSlots: {\n      value: 4,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'Plane',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields.name.error = null;\n    },\n    setFieldError: <T extends keyof IPlaneEditState['fields']>(\n      state: IPlaneEditState,\n      action: PayloadAction<[T, IPlaneEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IPlaneEditState, action: PayloadAction<boolean | PlaneEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.minSlots.value = action.payload.minSlots || 0;\n        state.fields.maxSlots.value = action.payload.maxSlots || 3;\n        state.fields.name.value = action.payload.name || '';\n        state.fields.registration.value = action.payload.registration || '';\n      }\n    },\n\n    setOriginal: (state: IPlaneEditState, action: PayloadAction<PlaneEssentialsFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      state.fields.minSlots.value = action.payload.minSlots || 0;\n      state.fields.maxSlots.value = action.payload.maxSlots || 3;\n      state.fields.name.value = action.payload.name || '';\n      state.fields.registration.value = action.payload.registration || '';\n    },\n\n    reset: (state: IPlaneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RigEssentialsFragment } from 'app/api/operations';\n\nexport type RigFields = Pick<\n  RigEssentialsFragment,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: RigEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: RigEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | RigEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.make.value = action.payload.make;\n        state.fields.name.value = action.payload.name;\n        state.fields.model.value = action.payload.model;\n        state.fields.serial.value = action.payload.serial;\n        state.fields.repackExpiresAt.value = action.payload.repackExpiresAt;\n        state.fields.canopySize.value = action.payload.canopySize;\n        state.fields.rigType.value = action.payload.rigType;\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<RigEssentialsFragment>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        if (error instanceof Error) {\n          console.error('Failed to read rig inspection template', error.message, action.payload);\n        }\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotDetailsFragment, SlotExhaustiveFragment } from 'app/api/operations';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: SlotDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | SlotDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.rig.value = action.payload.rig;\n        state.fields.ticketType.value = action.payload.ticketType;\n        state.fields.dropzoneUser.value = action.payload.dropzoneUser;\n        state.fields.exitWeight.value = action.payload.exitWeight;\n        state.fields.passengerName.value = action.payload.passengerName;\n        state.fields.passengerExitWeight.value = action.payload.passengerExitWeight;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserProfileFragment,\n  LoadDetailsFragment,\n  RigEssentialsFragment,\n  SlotDetailsFragment,\n} from 'app/api/operations';\nimport { first, xorBy } from 'lodash';\nimport { SlotUser } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = Omit<SlotUser, 'rig'> & {\n  rigId?: number;\n  rig?: RigEssentialsFragment;\n  avatar?: string;\n  name?: string;\n};\n\ninterface IFields\n  extends Pick<\n    SlotDetailsFragment & { load: LoadDetailsFragment },\n    'jumpType' | 'load' | 'ticketType' | 'extras' | 'groupNumber'\n  > {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    groupNumber: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (\n      state: ISlotEditState,\n      action: PayloadAction<{ load: LoadDetailsFragment; slots: SlotDetailsFragment[] }>\n    ) => {\n      state.fields.users.value = action.payload.slots.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        rig: slot.rig,\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUserWithRig[];\n\n      state.fields.jumpType.value = action.payload.slots.find((i) => i)?.jumpType;\n      state.fields.groupNumber.value = action.payload.slots.find((i) => i)?.groupNumber || null;\n      state.fields.load.value = action.payload.load;\n      state.fields.extras.value = action.payload.slots.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (\n      state: ISlotEditState,\n      action: PayloadAction<DropzoneUserProfileFragment[]>\n    ) => {\n      state.fields.users.value = xorBy(\n        state.fields.users.value,\n        action.payload?.map((dzUser) => {\n          const autoSelectedRig = dzUser?.user?.rigs?.length\n            ? first(dzUser.user.rigs)\n            : first(dzUser.availableRigs);\n          return {\n            id: Number(dzUser.id),\n            rigId: autoSelectedRig?.id ? Number(autoSelectedRig.id) : null,\n            rig: autoSelectedRig,\n            name: dzUser.user.name,\n            avatar: dzUser.user.image,\n            exitWeight: Number(dzUser?.user?.exitWeight),\n          };\n        }) as SlotUserWithRig[],\n        'id'\n      );\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.load.value = action.payload.load;\n        state.fields.users.value = action.payload.users;\n        state.fields.ticketType.value = action.payload.ticketType;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\n\nexport type TicketTypeFields = Pick<\n  TicketTypeEssentialsFragment,\n  'name' | 'cost' | 'isTandem' | 'allowManifestingSelf' | 'altitude' | 'extras'\n>;\n\ninterface ITicketTypeEditState {\n  original: TicketTypeEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof TicketTypeFields]-?: {\n      value: TicketTypeEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ITicketTypeEditState = {\n  original: null,\n  open: false,\n  fields: {\n    name: {\n      value: '',\n      error: null,\n    },\n    cost: {\n      value: null,\n      error: null,\n    },\n    altitude: {\n      value: 14000,\n      error: null,\n    },\n    allowManifestingSelf: {\n      value: false,\n      error: null,\n    },\n    isTandem: {\n      value: false,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/ticketType',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ITicketTypeEditState['fields']>(\n      state: ITicketTypeEditState,\n      action: PayloadAction<[T, ITicketTypeEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (\n      state: ITicketTypeEditState,\n      action: PayloadAction<TicketTypeEssentialsFragment>\n    ) => {\n      state.original = action.payload;\n      state.open = true;\n      state.fields.altitude.value = action.payload.altitude || 0;\n      state.fields.cost.value = action.payload.cost || 0;\n      state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n      state.fields.name.value = action.payload.name || '';\n    },\n\n    setOpen: (\n      state: ITicketTypeEditState,\n      action: PayloadAction<boolean | TicketTypeEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.altitude.value = action.payload.altitude || 0;\n        state.fields.cost.value = action.payload.cost || 0;\n        state.fields.allowManifestingSelf.value = action.payload.allowManifestingSelf || false;\n        state.fields.name.value = action.payload.name || '';\n      }\n    },\n\n    reset: (state: ITicketTypeEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  CurrentUserDetailedFragment,\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\n\nexport type UserFields = Pick<\n  UserDetailedFragment & { license?: LicenseDetailsFragment },\n  | 'exitWeight'\n  | 'rigs'\n  | 'name'\n  | 'phone'\n  | 'email'\n  | 'apfNumber'\n  | 'nickname'\n  | 'license'\n  | 'image'\n>;\n\ninterface IUserEditState {\n  original: DropzoneUserDetailsFragment | CurrentUserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: UserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    image: {\n      value: null,\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<FederationEssentialsFragment>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (\n      state: IUserEditState,\n      action: PayloadAction<DropzoneUserDetailsFragment | CurrentUserDetailedFragment>\n    ) => {\n      state.original = action.payload;\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[typedKey];\n        } else {\n          state.fields[payloadKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n            payloadKey\n          ];\n        }\n      });\n      state.federation.value =\n        action.payload.license?.federation ||\n        action.payload?.user?.userFederations?.find((i) => i)?.federation ||\n        null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        const userFederation = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        );\n        state.fields.apfNumber.value = userFederation?.uid;\n        state.fields.license.value =\n          state.fields.license.value || userFederation?.license || state?.original?.license;\n        console.debug('SET APF NUMBER TO ', state.fields.apfNumber.value);\n      }\n    },\n\n    setOpen: (\n      state: IUserEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherConditionEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<\n  WeatherConditionEssentialsFragment,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherConditionEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherConditionEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherConditionEssentialsFragment)[\n                typedKey\n              ];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as credits from './credits/slice';\nimport * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as extra from './extra/slice';\nimport * as load from './load/slice';\nimport * as ghost from './ghost/slice';\nimport * as plane from './plane/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as ticketType from './ticket_type/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  credits: credits.initialState,\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  extra: extra.initialState,\n  ghost: ghost.initialState,\n  load: load.initialState,\n  plane: plane.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  ticketType: ticketType.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  credits: credits.default,\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  extra: extra.default,\n  ghost: ghost.default,\n  load: load.default,\n  plane: plane.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  ticketType: ticketType.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUserEssentialsFragment[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (\n      state: IManifestScreenState,\n      action: PayloadAction<DropzoneUserEssentialsFragment[]>\n    ) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserWizardState {\n  skipRigSetup: boolean;\n}\n\nexport const initialState: IUserWizardState = {\n  skipRigSetup: false,\n};\n\nexport default createSlice({\n  name: 'screens/userWizard',\n  initialState,\n  reducers: {\n    skipRigSetup: (state: IUserWizardState, action: PayloadAction<boolean>) => {\n      state.skipRigSetup = action.payload;\n    },\n  },\n});\n","import * as users from './authenticated/user/user_list/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/dropzone/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './wizards/dropzone_wizard/slice';\nimport * as userWizard from './wizards/user_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  userWizard: userWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n  userWizard: userWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport merge from 'lodash/merge';\nimport { DropzoneExtensiveFragment, UserDetailedFragment } from '../api/operations';\nimport { Credential } from '../api/schema.d';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' },\n  },\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme: Theme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' as const },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' as const },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' as const },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' as const },\n  },\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: UserDetailedFragment | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: DropzoneExtensiveFragment | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  currentRouteName: string;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  expoPushToken: null,\n  currentRouteName: '',\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      state.credentials = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<UserDetailedFragment>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setCurrentRouteName: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.currentRouteName = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<DropzoneExtensiveFragment | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n      console.debug('Setting id', action?.payload?.id);\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAppearance: (state: IGlobalState, action: PayloadAction<'light' | 'dark'>): IGlobalState => {\n      const current = state.isDarkMode ? 'dark' : 'light';\n      state.isDarkMode = action.payload === 'dark';\n\n      console.log('Setting appearance to', action.payload);\n      if (current === action.payload) {\n        return state;\n      }\n      state.theme = merge(\n        {},\n        action.payload === 'dark' ? CombinedDarkTheme : CombinedDefaultTheme,\n        {\n          colors: {\n            primary: state.currentDropzone?.primaryColor || CombinedDarkTheme.colors.primary,\n            accent: state.currentDropzone?.secondaryColor || CombinedDarkTheme.colors.accent,\n          },\n        }\n      );\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n      return state;\n    },\n    logout: (state: IGlobalState) => {\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport isEqual from 'lodash/isEqual';\nimport last from 'lodash/last';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationState {\n  queue: INotification[];\n}\n\nexport const initialState = { queue: [] } as INotificationState;\nexport default createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    hideSnackbar: (state: INotificationState) => {\n      const [, ...newQueue] = state.queue;\n      state.queue = newQueue;\n    },\n    showSnackbar: (state: INotificationState, action: PayloadAction<INotification>) => {\n      if (!isEqual(last(state.queue), action.payload)) {\n        state.queue.push(action.payload);\n      }\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\nimport notificationSlice, {\n  initialState as initialStateNotification,\n} from '../components/notifications/slice';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  notifications: initialStateNotification,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  notifications: notificationSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  notifications: notificationSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { useAppSelector } from 'app/state';\nimport { Platform } from 'react-native';\nimport { useAppSignalContext, INITIAL_TAGS } from './AppSignalContext';\n\nfunction AppSignalSessionTagProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n\n  // This can be undefined here because this bondary\n  // is rendered at the top of the app to catch errors\n  // outside of GraphQL as wele\n  const { dropzone, currentUser: currentDropzoneUser } = useDropzoneContext();\n  const { currentRouteName, currentUser, currentDropzoneId } = useAppSelector(\n    (state) => state.global\n  );\n  const { tags, setTags } = useAppSignalContext();\n\n  const sessionTags: { [key: string]: string } = React.useMemo(\n    () => ({\n      ...INITIAL_TAGS,\n      currentDropzoneId: (dropzone?.id || currentDropzoneId || 'Unknown')?.toString(),\n      currentDropzone: dropzone?.name || 'Unknown',\n      currentRouteName: currentRouteName || 'Unknown',\n      currentUser: (currentDropzoneUser?.id || currentUser?.id || 'Unknown')?.toString(),\n      platform: Platform.OS as string,\n    }),\n    [\n      currentDropzoneId,\n      currentDropzoneUser?.id,\n      currentRouteName,\n      currentUser?.id,\n      dropzone?.id,\n      dropzone?.name,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Update tags only if they're different\n    const currentSessionTags = pick(tags, Object.keys(sessionTags));\n    if (!isEqual(currentSessionTags, sessionTags)) {\n      // Prevent this component from resetting tags when the GraphQL store\n      // gets wiped on an error:\n      if (isEqual(tags, INITIAL_TAGS) || !isEqual({ ...tags, ...sessionTags }, INITIAL_TAGS)) {\n        setTags(sessionTags);\n      }\n    }\n  }, [sessionTags, setTags, tags]);\n\n  return children as JSX.Element;\n}\n\nexport default AppSignalSessionTagProvider;\n","import { ApolloLink, FetchResult, NextLink, Operation, ServerError } from '@apollo/client';\nimport { ErrorResponse, onError as createErrorLink } from '@apollo/client/link/error';\nimport { Observable } from 'zen-observable-ts';\nimport AppSignal from '@appsignal/javascript';\nimport type { Breadcrumb } from '@appsignal/types';\nimport { GraphQLError, OperationDefinitionNode, print } from 'graphql';\nimport { omit } from 'lodash';\n\nexport interface IAppSignalLinkOptions {\n  breadcrumbs: {\n    includeQuery?: boolean;\n    includeResponse?: boolean;\n    includeVariables?: boolean;\n  };\n  excludeOperation?(operation: Operation): boolean;\n  excludeError?(error: GraphQLError): boolean;\n  ignore?(errors: ErrorResponse): boolean;\n}\n\nconst DEFAULT_OPTIONS: IAppSignalLinkOptions = {\n  breadcrumbs: {\n    includeQuery: false,\n    includeResponse: false,\n    includeVariables: false,\n  },\n  excludeOperation: () => false,\n  excludeError: () => false,\n};\n\nfunction isServerError(error: unknown): error is ServerError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'response' in error &&\n    'result' in error &&\n    'statusCode' in error\n  );\n}\n\nfunction getDefinition(operation: Operation): OperationDefinitionNode {\n  return operation.query.definitions.find(\n    (q) => q.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode;\n}\n\nfunction createBreadCrumb(operation: Operation): Breadcrumb {\n  const definition = getDefinition(operation);\n  const operationName = definition.name?.value;\n  return {\n    message: operationName,\n    category: `graphql.${definition.operation}`,\n    action: operation.operationName,\n    timestamp: Math.floor(new Date().getTime() / 1000),\n    metadata: {},\n  };\n}\n\nfunction createAppSignalErrorLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions = DEFAULT_OPTIONS\n): ApolloLink {\n  return createErrorLink((errors) => {\n    const { graphQLErrors, operation, response } = errors;\n    if (options?.ignore?.(errors)) {\n      return;\n    }\n\n    if (graphQLErrors) {\n      const filteredErrors = graphQLErrors.filter((err) => !options?.excludeError?.(err));\n\n      // Rethrow errors not in the whitelist\n      if (filteredErrors.length) {\n        const breadcrumb = createBreadCrumb(operation);\n        breadcrumb.metadata ??= {};\n        const definition = getDefinition(operation);\n        // Always include query, variables and response on errors\n        const query = definition.loc?.source?.body ?? print(definition);\n        const { variables } = operation;\n        breadcrumb.metadata.query = query;\n        breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n        if (isServerError(response)) {\n          const { result } = response;\n\n          breadcrumb.metadata.statusCode = response?.response?.status;\n          breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n        }\n\n        client?.addBreadcrumb(breadcrumb);\n\n        try {\n          client?.sendError(new Error(filteredErrors.map((err) => err.message).join(', ')));\n        } catch (e) {\n          console.debug('Error', e);\n        }\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        response.errors = null;\n      }\n    }\n  });\n}\nexport class AppSignalBreadcrumbLink extends ApolloLink {\n  private readonly options: IAppSignalLinkOptions;\n\n  private readonly client?: AppSignal;\n\n  constructor(client: AppSignal, options: IAppSignalLinkOptions) {\n    super();\n    this.client = client;\n    this.options = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  }\n\n  request(operation: Operation, forward: NextLink): Observable<FetchResult> | null {\n    const { options } = this;\n\n    // If this operation should be excluded, continue\n    if (options.excludeOperation?.(operation) ?? false) {\n      return forward(operation);\n    }\n\n    const breadcrumb = createBreadCrumb(operation);\n\n    // While this could be done more simplistically by simply subscribing,\n    // wrapping the observer in our own observer ensures we get the results\n    // before they are passed along to other observers. This guarantees we\n    // get to run our instrumentation before others observers potentially\n    // throw and thus flush the results to Sentry.\n    return new Observable<FetchResult>((originalObserver) => {\n      const subscription = forward(operation).subscribe({\n        next: (result) => {\n          breadcrumb.metadata ??= {};\n          if (options?.breadcrumbs?.includeResponse) {\n            // We must have a breadcrumb if attachBreadcrumbs was set\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          if (options?.breadcrumbs?.includeQuery) {\n            const definition = getDefinition(operation);\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.query = definition.loc?.source?.body ?? print(definition);\n          }\n\n          if (options?.breadcrumbs?.includeVariables) {\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.variables = JSON.stringify(\n              omit(operation.variables || {}, ['password']),\n              null,\n              2\n            );\n          }\n\n          originalObserver.next(result);\n        },\n        complete: () => {\n          this.client?.addBreadcrumb(breadcrumb);\n          originalObserver.complete();\n        },\n        error: (error) => {\n          breadcrumb.metadata ??= {};\n          const definition = getDefinition(operation);\n          // Always include query, variables and response on errors\n          const query = definition.loc?.source?.body ?? print(definition);\n          const { variables } = operation;\n          breadcrumb.metadata.query = query;\n          breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n          if (isServerError(error)) {\n            const { result, response } = error;\n\n            breadcrumb.metadata.statusCode = response?.status;\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          this.client?.addBreadcrumb(breadcrumb);\n\n          originalObserver.error(error);\n        },\n      });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n\nexport default function createAppSignalLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions\n): ApolloLink {\n  return ApolloLink.from([\n    new AppSignalBreadcrumbLink(client, options),\n    createAppSignalErrorLink(client, options),\n  ]);\n}\n","import { ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { onError } from '@apollo/client/link/error';\nimport * as React from 'react';\nimport * as Update from 'expo-updates';\nimport config from 'app/constants/expo';\nimport { Platform } from 'react-native';\nimport { createAppSignalLink, useAppSignal } from 'app/components/app_signal';\nimport { relayStylePagination } from '@apollo/client/utilities';\nimport { actions, useAppDispatch, useAppSelector } from '../state';\n\nconst ERROR_CODE_WHITELIST = ['INSUFFICIENT_PERMISSIONS'];\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const httpBatchLink = React.useMemo(() => {\n    console.log('Release channel', Update.releaseChannel);\n    const environment = Platform.OS === 'web' ? config?.environment : Update.releaseChannel;\n    const uri = environment in (config?.urls || {}) ? config?.urls[environment] : config?.url;\n    return new BatchHttpLink({\n      batchDebounce: true,\n      batchMax: 10,\n      uri,\n    });\n  }, []);\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const dispatch = useAppDispatch();\n  // Log any GraphQL errors or network error that occurred\n  const errorLink = React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation, response }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Session expired`,\n              variant: 'error',\n            })\n          );\n          dispatch(actions.global.logout());\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            dispatch(\n              actions.notifications.showSnackbar({\n                message: `[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`,\n                variant: 'error',\n              })\n            );\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            // console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `[Network error]: ${networkError}`,\n              variant: 'error',\n            })\n          );\n        }\n      }),\n    [dispatch]\n  );\n\n  const authLink = React.useMemo(\n    () =>\n      setContext((_, { headers }) => {\n        return {\n          headers: {\n            ...headers,\n            ...(credentials?.accessToken\n              ? {\n                  Authorization: `Bearer ${credentials.accessToken}`,\n                  'access-token': credentials.accessToken,\n                  'token-type': credentials.tokenType,\n                  ...credentials,\n                }\n              : {}),\n          },\n        };\n      }),\n    [credentials]\n  );\n\n  const { appSignal } = useAppSignal();\n  const appSignalLink = React.useMemo(\n    () =>\n      createAppSignalLink(appSignal, {\n        breadcrumbs: {\n          includeQuery: true,\n          includeVariables: true,\n          includeResponse: false,\n        },\n        ignore: ({ graphQLErrors }) =>\n          graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR') || false,\n        excludeError: (err) => ERROR_CODE_WHITELIST.includes(err.extensions?.code as string),\n      }),\n    [appSignal]\n  );\n\n  const link = React.useMemo(\n    () => ApolloLink.from([errorLink, appSignalLink, authLink, httpBatchLink]),\n    [appSignalLink, authLink, errorLink, httpBatchLink]\n  );\n\n  const client = React.useMemo(\n    () =>\n      new ApolloClient({\n        link,\n        cache: new InMemoryCache({\n          typePolicies: {\n            Event: relayStylePagination(),\n            DropzoneUsers: relayStylePagination(),\n            Loads: relayStylePagination(),\n          },\n        }),\n      }),\n    [link]\n  );\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function EntrypointWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { useDropzonesQuery, useUpdateVisibilityMutation } from '../reflection';\nimport { DropzoneDetailedFragment, DropzonesQueryVariables } from '../operations';\nimport createCRUDContext, { uninitializedHandler, TMutationResponse } from './factory';\nimport { DropzoneStateEvent } from '../schema.d';\nimport { useAppSignal } from 'app/components/app_signal';\n\nexport default function useDropzones(vars: Partial<DropzonesQueryVariables>) {\n  const state = useAppSelector((root) => root.global);\n  const variables: DropzonesQueryVariables = React.useMemo(\n    () => ({\n      state: vars?.state,\n    }),\n    [vars?.state]\n  );\n\n  const query = useDropzonesQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken,\n  });\n\n  const [updateVisibilityMutation] = useUpdateVisibilityMutation();\n  const { appSignal } = useAppSignal();\n\n  const updateVisibility = React.useCallback(\n    async function UpdateVisibility(id: string, event: DropzoneStateEvent): Promise<TMutationResponse<{ dropzone: DropzoneDetailedFragment }>> {\n      try {\n        const response = await updateVisibilityMutation({\n          variables: {\n            dropzone: id,\n            event\n          },\n        });\n\n        if (response?.data?.updateVisibility?.dropzone?.id) {\n          return { dropzone: response.data.updateVisibility?.dropzone };\n        }\n        return {\n          error: response?.data?.updateVisibility?.errors?.[0],\n          fieldErrors: response?.data?.updateVisibility?.fieldErrors || undefined,\n        }\n      } catch (e) {\n        appSignal.sendError(e as Error);\n        return { error: 'You cant modify dropzone visibility' };\n      }\n    },\n    []\n  );\n\n  const { loading, fetchMore, refetch, data, called } = query;\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      updateVisibility,\n      dropzones: data?.dropzones?.edges?.map((edge) => edge?.node),\n    }),\n    [called, data?.dropzones?.edges, fetchMore, loading, refetch]\n  );\n}\n\nconst { Provider: DropzonesProvider, useContext: useDropzonesContext } = createCRUDContext(\n  useDropzones,\n  {\n    called: false,\n    loading: false,\n    dropzones: [],\n    updateVisibility: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  }\n);\n\nexport { DropzonesProvider, useDropzonesContext, useDropzones };\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { List, Modal } from 'react-native-paper';\nimport { TimePickerModal } from 'react-native-paper-dates';\nimport { DateTime } from 'luxon';\n\ninterface ITimePickerProps {\n  label?: string;\n  timestamp?: number;\n  disabled?: boolean;\n  color?: string;\n  onChange(timestamp: number): void;\n}\nexport default function TimePicker(props: ITimePickerProps) {\n  const { disabled, label, timestamp, onChange, color } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const onDismissSingle = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirm = React.useCallback(\n    ({ date }: { date: Date }) => {\n      setOpen(false);\n      onChange(date.getTime() / 1000);\n    },\n    [setOpen, onChange]\n  );\n\n  const timestampLabel = timestamp ? format(timestamp * 1000, 'hh:mm') : 'No time selected';\n\n  return (\n    <>\n      <List.Item\n        title={label || timestampLabel}\n        disabled={!!disabled}\n        description={!label ? null : timestampLabel}\n        left={() => <List.Icon color={color} icon=\"calendar\" />}\n        onPress={() => setOpen(true)}\n      />\n\n      <Modal visible={open}>\n        <TimePickerModal\n          hours={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).hour}\n          minutes={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).minute}\n          locale=\"en\"\n          visible={open}\n          onDismiss={onDismissSingle}\n          onConfirm={(time) =>\n            onConfirm({\n              date: DateTime.local()\n                .set({\n                  hour: time.hours,\n                  minute: time.minutes,\n                })\n                .toJSDate(),\n            })\n          }\n          label={label}\n        />\n      </Modal>\n    </>\n  );\n}\n","import { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { Permission } from '../api/schema.d';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const { permissions } = useDropzoneContext();\n\n  const check = permissions?.includes(permission as Permission) || false;\n  return check;\n}\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport startCase from 'lodash/startCase';\nimport { FieldError, Mutation } from './schema';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern:\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  } | null\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: { [K in keyof Mutation]: Maybe<Payload> }) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string | string[]) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        const [msg] = [message].flat();\n        onFieldError?.(`${fieldName}`, `${startCase(fieldName)} ${msg}`);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable as string}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          if (err instanceof Error) {\n            onError?.(err.message);\n          }\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema';\nimport { UpdateLoadDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(UpdateLoadDocument, {\n  getPayload: (result) => result.updateLoad,\n});\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { DateTime } from 'luxon';\nimport { Button, Dialog } from 'react-native-paper';\nimport TimePicker from 'app/components/input/time_picker/TimePicker';\nimport { actions, useAppDispatch } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\nimport { useFinalizeLoadMutation, useLoadQuery, useManifestUserMutation } from '../reflection';\nimport { LoadQueryVariables } from '../operations';\nimport createCRUDContext, { uninitializedHandler } from './factory';\nimport { CreateSlotPayload, LoadState, Permission } from '../schema.d';\nimport useMutationUpdateLoad from '../hooks/useMutationUpdateLoad';\n\nexport default function useLoad(variables: Partial<LoadQueryVariables>) {\n  const dispatch = useAppDispatch();\n  const query = useLoadQuery({\n    initialFetchPolicy: 'cache-first',\n    variables: variables as LoadQueryVariables,\n    skip: !variables?.id,\n  });\n\n  const refetch = React.useCallback(() => {\n    if (variables?.id) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const load = React.useMemo(() => data?.load, [data?.load]);\n\n  const [isTimePickerVisible, setTimePickerVisible] = React.useState(false);\n  const closeTimePicker = React.useCallback(() => setTimePickerVisible(false), []);\n  const openTimePicker = React.useCallback(() => setTimePickerVisible(true), []);\n\n  const [mutationManifestUser] = useManifestUserMutation();\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  const update = useMutationUpdateLoad({\n    onSuccess: () =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Load #${load?.loadNumber} updated`,\n          variant: 'success',\n        })\n      ),\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n  });\n\n  const manifestUser = React.useCallback(\n    async (payload: Omit<CreateSlotPayload, 'loadId'>) => {\n      if (load?.id) {\n        return undefined;\n      }\n      const schema = yup.object().shape({\n        dropzoneUser: yup.string().required(),\n        exitWeight: yup.number().nullable(),\n        groupNumber: yup.number().nullable(),\n        passengerExitWeight: yup.number().nullable(),\n        passengerName: yup.string().nullable(),\n        rig: yup.string().nullable(),\n        ticketType: yup.string().required('You must select a ticket type'),\n        jumpType: yup.string().required('You must specify the type of jump'),\n      });\n      const validatedPayload = schema.validateSync(payload);\n      const response = await mutationManifestUser({\n        variables: {\n          load: load?.id,\n          ...validatedPayload,\n        },\n      });\n\n      if (response?.data?.createSlot?.fieldErrors?.length) {\n        throw new ValidationError(\n          response?.data?.createSlot?.fieldErrors?.map(\n            ({ field, message }) => new ValidationError([], message, field)\n          )\n        );\n      }\n      return response?.data?.createSlot?.slot;\n    },\n    [load?.id, mutationManifestUser]\n  );\n\n  const dispatchInMinutes = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : DateTime.local().plus({ minutes }).toISO();\n\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: dispatchTime,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      if (!load) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [update, load]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: { id: string | number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        pilot: Number(pilot.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        gca: Number(gca.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: { id: string | number; maxSlots: number }) => {\n      if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n        const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `You need to take ${diff} people off the load to fit on this plane`,\n            variant: 'info',\n          })\n        );\n      } else {\n        await update.mutate({\n          id: Number(load?.id),\n          plane: Number(plane.id),\n        });\n      }\n    },\n    [load?.slots?.length, load?.id, dispatch, update]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        loadMaster: Number(lm.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const markAsLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load?.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const cancel = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: { id: Number(load?.id), state: LoadState.Cancelled },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const canDispatchAircraft = useRestriction(Permission.UpdateLoad);\n\n  const createAircraftDispatchAction = React.useCallback(\n    (minutes: number | null) => () => dispatchInMinutes(minutes),\n    [dispatchInMinutes]\n  );\n\n  const dispatchAtTime = React.useCallback(\n    async (time: number | null) => {\n      if (!load || !time) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: DateTime.fromSeconds(time).toISO(),\n        state: time ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      refetch: queryVariables?.id ? refetch : noop,\n      fetchMore: queryVariables?.id ? () => fetchMore({ variables }) : uninitializedHandler,\n      load: data?.load,\n      timepicker: {\n        visible: isTimePickerVisible,\n        close: closeTimePicker,\n        open: openTimePicker,\n      },\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n    }),\n    [\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      queryVariables?.id,\n      refetch,\n      data?.load,\n      isTimePickerVisible,\n      closeTimePicker,\n      openTimePicker,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n\nconst { Provider, useContext: useLoadContext } = createCRUDContext(useLoad, {\n  called: false,\n  loading: false,\n  load: null,\n  update: { loading: false, mutate: uninitializedHandler as never },\n  updateGCA: uninitializedHandler as never,\n  updateLoadMaster: uninitializedHandler as never,\n  updatePlane: uninitializedHandler as never,\n  updatePilot: uninitializedHandler as never,\n  manifestUser: uninitializedHandler as never,\n  refetch: uninitializedHandler as never,\n  fetchMore: uninitializedHandler as never,\n  canDispatchAircraft: false,\n  createAircraftDispatchAction: noop as never,\n  dispatchAtTime: uninitializedHandler as never,\n  dispatchInMinutes: uninitializedHandler as never,\n  markAsLanded: uninitializedHandler as never,\n  cancel: uninitializedHandler as never,\n  timepicker: {\n    visible: false,\n    close: noop,\n    open: noop,\n  },\n  updateLoadState: uninitializedHandler as never,\n});\n\nfunction CustomCallTimePicker() {\n  const { timepicker, dispatchAtTime } = useLoadContext();\n  const [time, setTime] = React.useState<number>();\n  const [loading, setLoading] = React.useState(false);\n\n  const onSubmit = React.useCallback(() => {\n    try {\n      setLoading(true);\n      if (time) {\n        dispatchAtTime(time).then(timepicker.close);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [dispatchAtTime, time, timepicker.close]);\n  return (\n    <Dialog visible={timepicker.visible} dismissable onDismiss={timepicker.close}>\n      <Dialog.Title>Dispatch Aircraft</Dialog.Title>\n      <Dialog.Content>\n        <TimePicker onChange={setTime} timestamp={time} label=\"Take-off\" />\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button disabled={loading} onPress={timepicker.close}>\n          Cancel\n        </Button>\n        <Button disabled={loading} onPress={onSubmit}>\n          Dispatch\n        </Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n\nexport function LoadProvider(props: React.PropsWithChildren<Partial<LoadQueryVariables>>) {\n  const { children } = props;\n  return (\n    <Provider {...props}>\n      {children}\n      <CustomCallTimePicker />\n    </Provider>\n  );\n}\n\nexport function withLoad<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<LoadQueryVariables>) {\n    const { id, ...rest } = props;\n    return (\n      <LoadProvider {...{ id }}>\n        <Component {...(rest as T)} />\n      </LoadProvider>\n    );\n  };\n}\n\nexport { useLoadContext, useLoad };\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport {\n  useLoadsQuery,\n  useManifestGroupMutation,\n  useManifestUserMutation,\n  useMoveSlotMutation,\n  useDeleteSlotMutation,\n  useCreateLoadMutation,\n  LoadDocument,\n} from '../reflection';\nimport {\n  CreateLoadMutationVariables,\n  DeleteSlotMutationVariables,\n  LoadDetailsFragment,\n  LoadsQueryVariables,\n  ManifestGroupMutationVariables,\n  ManifestUserMutationVariables,\n  MoveSlotMutationVariables,\n  SlotExhaustiveFragment,\n} from '../operations';\nimport createCRUDContext, { uninitializedHandler, TMutationResponse } from './factory';\nimport { Permission } from '../schema.d';\n\nexport default function useManifest({ dropzone, date }: Partial<LoadsQueryVariables>) {\n  const state = useAppSelector((root) => root.global);\n  const variables: LoadsQueryVariables | undefined = React.useMemo(() => {\n    if (!dropzone) {\n      return undefined;\n    }\n    return {\n      dropzone,\n      date: date || DateTime.utc().toISODate(),\n    };\n  }, [date, dropzone]);\n\n  const query = useLoadsQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken || !dropzone,\n  });\n\n  const [moveSlotMutation] = useMoveSlotMutation();\n  const [deleteSlotMutation] = useDeleteSlotMutation();\n  const [manifestGroupMutation] = useManifestGroupMutation();\n  const [manifestUserMutation] = useManifestUserMutation();\n  const [createLoadMutation] = useCreateLoadMutation();\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n  const canDeleteOwnSlot = useRestriction(Permission.DeleteSlot);\n  const canDeleteSlot = useRestriction(Permission.DeleteUserSlot);\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const canUpdateSlot = useRestriction(Permission.UpdateSlot);\n  const canUpdateOwnSlot = useRestriction(Permission.UpdateUserSlot);\n  const permissions = React.useMemo(\n    () => ({\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestSelf,\n      canManifestOthers,\n      canUpdateSlot,\n      canUpdateOwnSlot,\n    }),\n    [\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestOthers,\n      canManifestSelf,\n      canUpdateOwnSlot,\n      canUpdateSlot,\n    ]\n  );\n\n  const { loading, fetchMore, refetch, data, called, updateQuery } = query;\n\n  const moveSlot = React.useCallback(\n    async function MoveSlot(\n      sourceLoad: string,\n      mutationVariables: MoveSlotMutationVariables\n    ): Promise<TMutationResponse<{ loads: LoadDetailsFragment[] }>> {\n      const result = await moveSlotMutation({\n        variables: mutationVariables,\n        refetchQueries: [\n          { query: LoadDocument, variables: { id: sourceLoad } },\n          { query: LoadDocument, variables: { id: mutationVariables?.targetLoad?.toString() } },\n        ],\n      });\n\n      if (result?.data?.moveSlot?.fieldErrors?.length || result?.data?.moveSlot?.errors?.length) {\n        return {\n          error: result?.data?.moveSlot?.errors?.[0],\n          fieldErrors: result?.data?.moveSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.moveSlot?.loads) {\n        return {\n          loads: result.data.moveSlot.loads,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [moveSlotMutation]\n  );\n\n  const manifestUser = React.useCallback(\n    async function ManifestUser(\n      mutationVariables: ManifestUserMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await manifestUserMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlot?.fieldErrors?.length ||\n        result?.data?.createSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlot?.errors?.[0],\n          fieldErrors: result?.data?.createSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlot?.slot) {\n        return {\n          slot: result.data.createSlot.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestUserMutation]\n  );\n\n  const manifestGroup = React.useCallback(\n    async function ManifestGroup(\n      mutationVariables: ManifestGroupMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await manifestGroupMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlots?.fieldErrors?.length ||\n        result?.data?.createSlots?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlots?.errors?.[0],\n          fieldErrors: result?.data?.createSlots?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlots?.load?.id) {\n        return {\n          load: result.data.createSlots.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestGroupMutation]\n  );\n\n  const deleteSlot = React.useCallback(\n    async function DeleteSlot(\n      mutationVariables: DeleteSlotMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await deleteSlotMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.deleteSlot?.fieldErrors?.length ||\n        result?.data?.deleteSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.deleteSlot?.errors?.[0],\n          fieldErrors: result?.data?.deleteSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.deleteSlot?.slot?.id) {\n        return {\n          slot: result.data.deleteSlot?.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [deleteSlotMutation]\n  );\n\n  const createLoad = React.useCallback(\n    async function CreateLoad(\n      mutationVariables: CreateLoadMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await createLoadMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createLoad?.fieldErrors?.length ||\n        result?.data?.createLoad?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createLoad?.errors?.[0],\n          fieldErrors: result?.data?.createLoad?.fieldErrors || undefined,\n        };\n      }\n      if (result?.data?.createLoad?.load?.id) {\n        const { load } = result.data.createLoad;\n        updateQuery((prev) => ({\n          ...prev,\n          loads: {\n            ...prev?.loads,\n            edges: [{ node: load, __typename: 'LoadEdge' }, ...(prev?.loads?.edges || [])],\n          },\n        }));\n        return {\n          load: result.data.createLoad.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [createLoadMutation, updateQuery]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      moveSlot,\n      manifestUser,\n      manifestGroup,\n      deleteSlot,\n      createLoad,\n      permissions,\n      loads: data?.loads?.edges?.map((edge) => edge?.node) || [],\n    }),\n    [\n      called,\n      createLoad,\n      data?.loads?.edges,\n      deleteSlot,\n      fetchMore,\n      loading,\n      permissions,\n      manifestGroup,\n      manifestUser,\n      moveSlot,\n      refetch,\n    ]\n  );\n}\n\nconst { Provider: ManifestProvider, useContext: useManifestContext } = createCRUDContext(\n  useManifest,\n  {\n    called: false,\n    loading: false,\n    loads: [],\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    deleteSlot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    manifestGroup: uninitializedHandler as never,\n    moveSlot: uninitializedHandler as never,\n    createLoad: uninitializedHandler as never,\n    permissions: {\n      canCreateLoad: false,\n      canDeleteOwnSlot: false,\n      canDeleteSlot: false,\n      canManifestOthers: false,\n      canManifestSelf: false,\n      canUpdateOwnSlot: false,\n      canUpdateSlot: false,\n    },\n  }\n);\n\nexport { ManifestProvider, useManifestContext, useManifest };\n","import { DropzoneProvider } from 'app/api/crud/useDropzone';\nimport React from 'react';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { ManifestProvider } from 'app/api/crud/useManifest';\nimport { useAppSelector } from 'app/state';\n\nexport default function Provider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root?.global);\n  return (\n    <DropzonesProvider>\n      <DropzoneProvider dropzoneId={currentDropzoneId?.toString() || undefined}>\n        <ManifestProvider dropzone={currentDropzoneId?.toString() || undefined}>\n          {children}\n        </ManifestProvider>\n      </DropzoneProvider>\n    </DropzonesProvider>\n  );\n}\n","import Constants from 'expo-constants';\nimport * as React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { Linking, Platform } from 'react-native';\nimport * as Device from 'expo-device';\nimport URI from 'urijs';\nimport { useUpdateUserMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport { useDropzoneContext } from '../../api/crud/useDropzone';\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nexport default function PushNotifications(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n  const dispatch = useAppDispatch();\n  const { currentUser, loading, called } = useDropzoneContext();\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = React.useCallback((link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  }, []);\n\n  const [updateUser] = useUpdateUserMutation();\n  React.useEffect(() => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: notification.request.content.body,\n            variant: 'info',\n          })\n        );\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      // console.log({ notification: response });\n    });\n\n    Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      Linking.removeEventListener('url', onOutsideLink);\n    };\n  }, [dispatch, onOutsideLink]);\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const remoteToken = currentUser?.user?.pushToken;\n\n    if (!loading && currentUser?.id) {\n      if (pushToken && pushToken !== remoteToken) {\n        updateUser({\n          variables: {\n            dropzoneUser: Number(currentUser.id),\n            pushToken,\n          },\n        });\n      }\n    }\n  }, [pushToken, currentUser?.id, currentUser?.user?.pushToken, loading, called, updateUser]);\n  return children as JSX.Element;\n}\n","import { ThemeProvider } from '@mui/material';\nimport { Theme, createTheme } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Provider as MaterialProvider } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state/store';\n\nfunction Content(props: { children: React.ReactNode }) {\n  const { children } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const muiTheme: Theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: state.palette.primary,\n          secondary: state.palette.accent,\n          background: {\n            default: state.palette.background,\n            paper: state.palette.surface,\n          },\n          mode: state.theme.dark ? 'dark' : 'light',\n          common: {\n            white: state.palette.background,\n            black: state.palette.onSurface,\n          },\n        },\n      }),\n    [\n      state.palette.accent,\n      state.palette.background,\n      state.palette.onSurface,\n      state.palette.primary,\n      state.palette.surface,\n      state.theme.dark,\n    ]\n  );\n\n  window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {\n    dispatch(actions.global.setAppearance(e.matches ? 'dark' : 'light'));\n  });\n  return (\n    <MaterialProvider theme={state.theme as ReactNativePaper.Theme}>\n      <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\n    </MaterialProvider>\n  );\n}\nexport default Content;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport * as Device from 'expo-device';\n\n// eslint-disable-next-line camelcase\nimport * as fonts from '@expo-google-fonts/roboto';\nimport LottieView from 'app/components/LottieView';\nimport { actions, useAppDispatch } from 'app/state';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const { useFonts, __metadata__, ...rest } = fonts;\n  const [fontsLoaded] = fonts.useFonts({\n    ...rest,\n  });\n\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const dispatch = useAppDispatch();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'New version installed' }));\n    }\n  }, [dispatch]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport { useAppSelector, useAppDispatch } from 'app/state';\nimport LottieView from '../LottieView';\nimport slice from './slice';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\n\nconst { actions } = slice;\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\nfunction Notifications() {\n  const state = useAppSelector((root) => root.notifications);\n  const dispatch = useAppDispatch();\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(\n    () => (state.queue.length ? state.queue[0] : null),\n    [state.queue]\n  );\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide: () => dispatch(actions.hideSnackbar()),\n        text1: notification.message,\n        type: notification.variant || 'success',\n      });\n      if (notification.variant === 'error') {\n        console.error(notification.message);\n      }\n    }\n  }, [dispatch, notification]);\n\n  return (\n    <>\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            onAnimationFinish={() => {\n              setAnimationState(AnimationState.waiting);\n              setTimeout(() => {\n                dispatch(actions.hideSnackbar());\n                setAnimationState(AnimationState.closed);\n              }, 200);\n            }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast autoHide visibilityTime={4000} position=\"bottom\" type=\"success\" />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300,\n  },\n});\nexport default Notifications;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport { Paragraph, Title, useTheme } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults extends ViewProps {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle, ...rest }: INoResults) {\n  const theme = useTheme();\n  return (\n    <View {...rest} style={StyleSheet.flatten([styles.empty, rest?.style])}>\n      <Title style={{ color: color || theme.colors.onSurface }}>{title}</Title>\n      <Paragraph style={{ color: color || theme.colors.onSurface, textAlign: 'center' }}>\n        {subtitle}\n      </Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ImageBackground } from 'react-native';\nimport { Avatar, Text } from 'react-native-paper';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { DropzoneEssentialsFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Color from 'color';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\ninterface DropzoneCardProps {\n  dropzone: DropzoneEssentialsFragment;\n}\nexport default function DropzonesScreen(props: DropzoneCardProps) {\n  const { dropzone } = props;\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const navigation = useNavigation();\n\n  const nameLines = dropzone?.name?.split(/\\s/) || [];\n  const lines = [\n    nameLines.length > 2 ? nameLines[0] : null,\n    nameLines.length > 2 ? nameLines[1] : nameLines[0],\n    nameLines.length > 2 ? nameLines[2] : null,\n    nameLines.length === 2 ? nameLines[1] : null,\n  ];\n\n  const backgroundColor = Color(dropzone?.primaryColor || '#ffffff')\n    .desaturate(0.2)\n    .lighten(0.1);\n  const textColor = backgroundColor.lighten(0.35);\n\n  return (\n    <TouchableOpacity\n      style={{ alignSelf: 'center' }}\n      onPress={async () => {\n        if (dropzone) {\n          const shouldPushRoute = !!globalState.currentDropzoneId;\n          dispatch(actions.global.setDropzone(dropzone as DropzoneExtensiveFragment));\n\n          if (shouldPushRoute) {\n            navigation.dispatch(\n              StackActions.replace('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              })\n            );\n          }\n        }\n      }}\n    >\n      {dropzone?.banner ? (\n        <View style={styles.cardContainer}>\n          <ImageBackground source={{ uri: dropzone?.banner as string }} style={styles.banner}>\n            <Text style={styles.title} numberOfLines={1}>\n              {dropzone.name}\n            </Text>\n          </ImageBackground>\n        </View>\n      ) : (\n        <View\n          style={[\n            styles.cardContainer,\n            {\n              backgroundColor: backgroundColor.toString(),\n            },\n          ]}\n        >\n          <Avatar.Icon\n            style={styles.icon}\n            icon=\"airplane-takeoff\"\n            size={160}\n            color={textColor.toString()}\n          />\n          <View style={styles.svgContainer}>\n            {lines.map((substr) => (\n              <Text style={styles.title} numberOfLines={1} adjustsFontSizeToFit allowFontScaling>\n                {substr}\n              </Text>\n            ))}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    margin: 16,\n    width: 160,\n    height: 160,\n    borderRadius: 80,\n    overflow: 'hidden',\n  },\n  title: {\n    fontStyle: 'italic',\n    fontFamily: 'Roboto_700Bold_Italic',\n    textAlign: 'center',\n    fontSize: 26,\n    color: 'white',\n    overflow: 'visible',\n    width: 160,\n  },\n  icon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  svgContainer: {\n    position: 'absolute',\n    left: 0,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    top: 0,\n    height: 180,\n    width: '100%',\n  },\n  banner: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList, Platform } from 'react-native';\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nimport NoResults from '../../../components/NoResults';\nimport DropzoneCard from './DropzoneCard';\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { dropzones, loading, refetch } = useDropzonesContext();\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={dropzones}\n        numColumns={Platform.OS === 'web' ? 3 : 2}\n        refreshing={loading}\n        keyExtractor={(item) => `dropzone-${item?.id}`}\n        onRefresh={() => refetch()}\n        style={styles.flatlist}\n        contentContainerStyle={styles.content}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item: dropzone }) => (!dropzone ? null : <DropzoneCard {...{ dropzone }} />)}\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.plane.reset());\n          dispatch(actions.forms.ticketType.reset());\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  flatlist: { flex: 1, width: '100%', flexGrow: 1 },\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    paddingBottom: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from './dropzone_select/DropzonesScreen';\n\nexport type LimboRoutes = {\n  DropzoneSelectScreen: undefined;\n};\nconst Stack = createStackNavigator<LimboRoutes>();\n\nexport function useLimboNavigation() {\n  return useNavigation<NavigationProp<LimboRoutes>>();\n}\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"DropzoneSelectScreen\"\n    >\n      <Stack.Screen name=\"DropzoneSelectScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore This is ok in web\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, hideContentUntilNavigatedTo } = props;\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <View style={styles.container}>\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <ScrollView style={{ flex: 1 }} contentContainerStyle={styles.content}>\n        {children}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dots: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\nimport {\n  createStackNavigator,\n  HeaderStyleInterpolators,\n  TransitionSpecs,\n} from '@react-navigation/stack';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\n\nconst WizardRoot = createStackNavigator();\nconst WizardModal = createStackNavigator();\n\nexport interface IWizardProps {\n  name: string;\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  // How many screens ahead to jump onNext, default: 1\n  nextIndexFactor?: number;\n  backIndexFactor?: number;\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\nexport function Content(props: IWizardProps) {\n  const { name, steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigation();\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View style={{ ...StyleSheet.absoluteFillObject }}>\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <KeyboardAvoidingView\n        style={styles.content}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <WizardRoot.Navigator\n          screenOptions={{\n            headerShown: false,\n            transitionSpec: {\n              open: TransitionSpecs.TransitionIOSSpec,\n              close: TransitionSpecs.TransitionIOSSpec,\n            },\n            headerStyleInterpolator: HeaderStyleInterpolators.forFade,\n            cardStyleInterpolator: ({ current, next, layouts }) => {\n              return {\n                cardStyle: {\n                  backgroundColor: 'transparent',\n                  transform: [\n                    {\n                      translateX: current.progress.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [layouts.screen.width || 0, 0],\n                      }),\n                    },\n                    {\n                      scale: next\n                        ? next.progress.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [1, 0.9],\n                          })\n                        : 1,\n                    },\n                  ],\n                },\n                overlayStyle: {\n                  opacity: current.progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 0.5],\n                  }),\n                },\n              };\n            },\n          }}\n        >\n          {steps.map((definition, index) => {\n            if (!definition) {\n              return null;\n            }\n            const { component: Step } = definition;\n            return <WizardRoot.Screen name={`${name}${index}`}>{() => <Step />}</WizardRoot.Screen>;\n          })}\n        </WizardRoot.Navigator>\n        <View style={styles.actions}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            onPress={async () => {\n              try {\n                const nextIndex = steps[currentIndex]?.nextIndexFactor || 1;\n                if (steps[currentIndex]?.onNext) {\n                  setLoading(true);\n                  await steps[currentIndex]?.onNext?.(navigation);\n                }\n                if (currentIndex === steps.length - 1) {\n                  navigation.goBack();\n                } else {\n                  // @ts-ignore These are dynamically created screens\n                  navigation.navigate(`${name}${currentIndex + nextIndex}`);\n                  setIndex(currentIndex + nextIndex);\n                }\n              } catch {\n                return undefined;\n              } finally {\n                setLoading(false);\n              }\n\n              return undefined;\n            }}\n            style={[styles.next, { backgroundColor: palette.placeholder }]}\n            mode=\"contained\"\n          >\n            {currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n          </Button>\n          <Button\n            disabled={loading}\n            mode=\"text\"\n            onPress={async () => {\n              const backIndexFactor = steps[currentIndex]?.backIndexFactor || 1;\n              steps[currentIndex]?.onBack?.();\n              if (currentIndex === 0) {\n                navigation.goBack();\n              } else {\n                // @ts-ignore These are dynamically created screens\n                navigation.navigate(`${name}${currentIndex - backIndexFactor}`);\n                setIndex(currentIndex - backIndexFactor || 0);\n              }\n              return undefined;\n            }}\n          >\n            Back\n          </Button>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nexport function Wizard(props: IWizardProps) {\n  const { name } = props;\n  return (\n    <WizardModal.Navigator screenOptions={{ headerShown: false, presentation: 'modal' }}>\n      <WizardModal.Screen {...{ name }}>{() => <Content {...props} />}</WizardModal.Screen>\n    </WizardModal.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default Wizard;\n","import { passwordStrength } from 'check-password-strength';\n\nexport enum PasswordStrength {\n  TooWeak,\n  Weak,\n  Acceptable,\n  Strong,\n}\nexport default function checkPasswordComplexity(password: string) {\n  const score = passwordStrength<PasswordStrength>(password, [\n    { value: PasswordStrength.TooWeak, id: 0, minDiversity: 0, minLength: 0 },\n    { value: PasswordStrength.Weak, id: 1, minDiversity: 2, minLength: 8 },\n    { value: PasswordStrength.Acceptable, id: 2, minDiversity: 3, minLength: 10 },\n    { value: PasswordStrength.Strong, id: 3, minDiversity: 4, minLength: 16 },\n  ]);\n  return score.value;\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput, useTheme } from 'react-native-paper';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ITextFieldProps\n  extends Omit<Extract<typeof TextInput>, 'onChange' | 'onChangeText' | 'error'> {\n  error?: string | null;\n  helperText?: string | null;\n  onChangeText?(newValue: string): void;\n  onChange?(newValue: string): void;\n}\nexport default function TextField(props: ITextFieldProps) {\n  const { error, helperText, onChangeText: setText, onChange, style, ...rest } = props;\n  const onChangeText = onChange || setText;\n  const theme = useTheme();\n  return (\n    <>\n      <TextInput\n        mode=\"outlined\"\n        style={StyleSheet.flatten([styles.field, { backgroundColor: theme.colors.surface }, style])}\n        {...rest}\n        {...{ onChangeText }}\n        error={!!error}\n      />\n      <HelperText type={error ? 'error' : 'info'}>{error || helperText || ''}</HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { errorColor, successColor, warningColor } from 'app/constants/Colors';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { PasswordStrength } from '../../utils/checkPasswordComplexity';\n\ninterface IPasswordComplexityIndicatorProps {\n  strength: PasswordStrength;\n}\nfunction PasswordStep(props: IPasswordComplexityIndicatorProps) {\n  const { strength } = props;\n\n  const indicatorStyle = [styles.indicatorWeak, styles.indicatorOk, styles.indicatorStrong];\n\n  return (\n    <>\n      <Text style={styles.title}>{['Too weak', 'Weak', 'Acceptable', 'Strong'][strength]}</Text>\n      <View style={styles.indicator}>\n        <View style={indicatorStyle[strength]} />\n        {strength < PasswordStrength.Acceptable ? (\n          <View style={[styles.indicatorInactive, { flex: 1 / 3 }]} />\n        ) : null}\n        {[PasswordStrength.Weak, PasswordStrength.Acceptable].includes(strength) ? (\n          <View\n            style={[\n              styles.indicatorInactive,\n              { flex: strength < PasswordStrength.Acceptable ? 1 / 3 : 1 / 2 },\n            ]}\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n    marginTop: 8,\n  },\n  indicator: {\n    flexDirection: 'row',\n    height: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginTop: 8,\n  },\n  indicatorInactive: {\n    backgroundColor: '#AAA',\n  },\n  indicatorWeak: {\n    flex: 1 / 3,\n    backgroundColor: errorColor,\n  },\n  indicatorOk: {\n    flex: 2 / 3,\n    backgroundColor: warningColor,\n  },\n  indicatorStrong: {\n    backgroundColor: successColor,\n    flex: 1,\n  },\n});\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['password', newValue]))}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n        <HelperText type=\"error\">{fields.password.error}</HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/navigation_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/navigation_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const validateEmail = React.useCallback(async () => {\n    const pattern =\n      // eslint-disable-next-line max-len\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      dispatch(actions.screens.signup.setFieldError(['email', 'Please enter a valid email']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.email.value]);\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Invalid email');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onClickSignUp = React.useCallback(async () => {\n    if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n      dispatch(\n        actions.screens.signup.setFieldError(['passwordConfirmation', 'Password doesnt match'])\n      );\n      throw new Error('Password mismatch');\n    }\n    try {\n      const result = await onSignUp({\n        variables: {\n          pushToken: globalState.expoPushToken,\n          email: state.fields.email.value,\n          name: state.fields.name.value,\n          exitWeight: state.fields.exitWeight.value,\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          licenseId: Number(state.fields.license?.value?.id) || null,\n          phone: state.fields.phone.value,\n        },\n      });\n\n      if (result?.data?.userRegister?.fieldErrors?.length) {\n        result?.data?.userRegister?.fieldErrors?.forEach(({ field, message }) => {\n          switch (field) {\n            case 'email':\n              dispatch(actions.screens.signup.setFieldError(['email', message]));\n              throw new Error('Email error');\n            case 'password':\n              dispatch(actions.screens.signup.setFieldError(['password', message]));\n              throw new Error('Password error');\n            case 'passwordConfirmation':\n              dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', message]));\n              throw new Error('Email error');\n            default:\n              return undefined;\n          }\n        });\n      }\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    globalState.expoPushToken,\n    onSignUp,\n    state.fields.email.value,\n    state.fields.exitWeight.value,\n    state.fields.license?.value?.id,\n    state.fields.name.value,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    state.fields.phone.value,\n  ]);\n\n  return (\n    <Wizard\n      dots\n      name=\"SignupWizard\"\n      steps={[\n        { onNext: validateEmail, component: EmailStep },\n        { onNext: validatePassword, component: PasswordStep },\n        { onNext: onClickSignUp, component: PasswordConfirmationStep },\n        { component: DoneStep },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Divider as MaterialDivider, Text, useTheme } from 'react-native-paper';\n\nexport default function Divider(props: { children: React.ReactText }) {\n  const { children } = props;\n  const theme = useTheme();\n  return (\n    <View style={styles.container}>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n      <Text style={styles.text}>{children}</Text>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  divider: { flex: 2 / 5, backgroundColor: 'white' },\n  text: { flex: 1 / 5, textAlign: 'center' },\n});\n","import * as React from 'react';\nimport { useLoginWithFacebookMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport { LoginWithFacebookMutation, LoginWithFacebookMutationVariables } from 'app/api/operations';\nimport Button, { ReactFacebookFailureResponse, ReactFacebookLoginInfo } from 'react-facebook-login';\nimport { View } from 'react-native';\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : never;\n\nexport function useLoginWithFacebook(\n  opts?: MutationFunctionOptions<LoginWithFacebookMutation, LoginWithFacebookMutationVariables>\n) {\n  const { expoPushToken } = useAppSelector((root) => root.global);\n  const [onLoginWithFacebook, mutation] = useLoginWithFacebookMutation(opts);\n  const dispatch = useAppDispatch();\n\n  const onLogin = React.useCallback(\n    async (response: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n      try {\n        if ('accessToken' in response) {\n          const { data } = await onLoginWithFacebook({\n            variables: {\n              pushToken: expoPushToken || null,\n              token: response.accessToken,\n            },\n          });\n          if (data?.loginWithFacebook?.authenticatable && data?.loginWithFacebook?.credentials) {\n            dispatch(actions.global.setCredentials(data.loginWithFacebook.credentials));\n            dispatch(actions.global.setUser(data.loginWithFacebook.authenticatable));\n          }\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: e.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    },\n    [dispatch, expoPushToken, onLoginWithFacebook]\n  );\n  return [onLogin, mutation] as [() => Promise<void>, MutationResult<LoginWithFacebookMutation>];\n}\nexport default function FacebookButton(\n  props: Omit<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields' | 'children'> &\n    Partial<Pick<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields'>> & {\n      onPress: Extract<typeof Button>['callback'];\n    }\n) {\n  const dispatch = useAppDispatch();\n  const { onPress } = props;\n  return (\n    <View style={{ height: 100 }}>\n      <Button\n        appId=\"686479516065674\"\n        reAuthenticate\n        autoLoad\n        fields=\"email,name,picture\"\n        buttonStyle={{\n          height: 25,\n          fontSize: 14,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: 4,\n          marginTop: 16,\n        }}\n        onFailure={() => {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: 'Facebook authentication failed',\n              variant: 'error',\n            })\n          );\n        }}\n        {...props}\n        callback={onPress}\n        textButton=\"Login with Facebook\"\n      />\n    </View>\n  );\n}\n","import { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport {\n  LoginWithAppleMutation,\n  LoginWithAppleMutationVariables,\n  LoginWithFacebookMutation,\n} from 'app/api/operations';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nexport function useLoginWithApple(\n  opts?: MutationFunctionOptions<LoginWithAppleMutation, LoginWithAppleMutationVariables>\n) {\n  return [() => null, null] as unknown as [\n    () => Promise<void>,\n    MutationResult<LoginWithFacebookMutation>\n  ];\n}\n\nexport default function AppleButton() {\n  return <View />;\n}\n","import * as React from 'react';\nimport {\n  Image,\n  ImageBackground,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport { Card, Button, HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useLoginMutation } from 'app/api/reflection';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { primaryColor } from 'app/constants/Colors';\nimport Divider from 'app/components/Divider';\n\nimport LottieView from 'app/components/LottieView';\nimport FacebookButton, { useLoginWithFacebook } from './FacebookButton';\nimport AppleButton, { useLoginWithApple } from './AppleButton';\nimport logoDark from '../../../../assets/images/logo-black.png';\nimport logoLight from '../../../../assets/images/logo-white.png';\nimport backgroundDark from '../../../../assets/images/webb-dark.png';\nimport backgroundLight from '../../../../assets/images/pattern.png';\n\nexport default function LoginScreen() {\n  const state = useAppSelector((root) => root.screens.login);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [mutationLogin, data] = useLoginMutation();\n  const [loginWithFacebook, loginWithFacebookMutation] = useLoginWithFacebook();\n  const [loginWithApple, loginWithAppleMutation] = useLoginWithApple();\n  const theme = useTheme();\n\n  const onLogin = React.useCallback(async () => {\n    // eslint-disable-next-line\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const emailRegex = new RegExp(pattern);\n    let hasError = false;\n\n    if (!state.fields.email.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Email is required'));\n    }\n\n    if (!state.fields.password.value) {\n      hasError = true;\n      dispatch(actions.screens.login.setPasswordError('Password is required'));\n    }\n\n    if (!emailRegex.test(state.fields.email.value)) {\n      hasError = true;\n      dispatch(actions.screens.login.setEmailError('Please enter a valid email'));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationLogin({\n          variables: {\n            email: state.fields.email.value,\n            password: state.fields.password.value,\n          },\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: e.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    }\n  }, [dispatch, mutationLogin, state.fields.email.value, state.fields.password.value]);\n\n  const loading =\n    loginWithFacebookMutation?.loading || data?.loading || loginWithAppleMutation?.loading;\n  return (\n    <ImageBackground\n      source={theme.dark ? backgroundDark : backgroundLight}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      <Image source={theme.dark ? logoLight : logoDark} style={styles.logo} resizeMode=\"contain\" />\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Card style={styles.card} elevation={3}>\n          <Card.Content>\n            {loading ? (\n              <View style={styles.animationContainer}>\n                <LottieView\n                  autoPlay\n                  loop\n                  style={styles.loadingAnimation}\n                  // eslint-disable-next-line global-require\n                  source={require('../../../../assets/images/loading.json')}\n                />\n              </View>\n            ) : (\n              <>\n                <TextInput\n                  label=\"Email\"\n                  mode=\"outlined\"\n                  value={state.fields.email.value}\n                  disabled={loading}\n                  onChangeText={(newValue) => {\n                    dispatch(actions.screens.login.setEmail(newValue));\n                  }}\n                />\n                <HelperText type=\"error\">{state.fields.email.error}</HelperText>\n\n                <TextInput\n                  label=\"Password\"\n                  mode=\"outlined\"\n                  disabled={loading}\n                  value={state.fields.password.value}\n                  secureTextEntry\n                  onChangeText={(newValue) => {\n                    dispatch(actions.screens.login.setPassword(newValue));\n                  }}\n                  onSubmitEditing={onLogin}\n                  error={!!state.fields.password.error}\n                />\n\n                <HelperText type=\"error\">{state.fields.password.error || ' '}</HelperText>\n              </>\n            )}\n            <Button\n              mode=\"contained\"\n              disabled={loading}\n              labelStyle={{ color: theme.colors.onSurface }}\n              style={[\n                styles.button,\n                { backgroundColor: theme.colors.surface, borderColor: theme.colors.surface },\n              ]}\n              onPress={onLogin}\n            >\n              {loading ? 'Authenticating...' : 'Log in'}\n            </Button>\n            {loading ? null : (\n              <TouchableOpacity\n                onPress={() => navigation.navigate('Wizards', { screen: 'RecoverPasswordScreen' })}\n              >\n                <Text style={theme.dark ? styles.forgotPasswordDark : styles.forgotPassword}>\n                  Forgot your password?\n                </Text>\n              </TouchableOpacity>\n            )}\n\n            <Divider>or</Divider>\n            <FacebookButton\n              disabled={loading}\n              style={{ marginTop: 8 }}\n              onPress={loginWithFacebook}\n            />\n\n            <AppleButton onPress={loginWithApple} style={{ width: '100%', flex: 1 }} />\n\n            <Button\n              labelStyle={styles.textButtonLabel}\n              style={styles.textButton}\n              onPress={() => navigation.navigate('Unauthenticated', { screen: 'SignUpWizard' })}\n            >\n              Sign up\n            </Button>\n          </Card.Content>\n        </Card>\n      </KeyboardAvoidingView>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  animationContainer: {\n    width: '100%',\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loadingAnimation: {\n    alignSelf: 'center',\n    marginTop: 24,\n    marginBottom: 32,\n    height: 156,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  forgotPassword: {\n    marginTop: 8,\n    color: 'rgb(50, 50, 50)',\n  },\n  forgotPasswordDark: {\n    marginTop: 8,\n    color: 'rgb(180, 180, 180)',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginVertical: 4,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%',\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isEmail, isRequired, validates } from '../createMutation';\nimport { MutationUserRegisterArgs, SignUpPayload } from '../schema.d';\n\nexport const MUTATION_USER_SIGNUP = gql`\n  mutation UserSignUp(\n    $email: String!\n    $password: String!\n    $passwordConfirmation: String!\n    $name: String!\n    $phone: String!\n    $pushToken: String\n    $exitWeight: Float!\n    $licenseId: Int\n  ) {\n    userSignUp(\n      email: $email\n      password: $password\n      passwordConfirmation: $passwordConfirmation\n      exitWeight: $exitWeight\n      name: $name\n      phone: $phone\n      pushToken: $pushToken\n      licenseId: $licenseId\n      confirmSuccessUrl: \"https://openmanifest.org/confirm/\"\n    ) {\n      authenticatable {\n        createdAt\n        email\n        id\n        name\n        phone\n      }\n      credentials {\n        accessToken\n        tokenType\n        client\n        expiry\n        uid\n      }\n    }\n  }\n`;\n\nexport default createMutation<MutationUserRegisterArgs, SignUpPayload>(MUTATION_USER_SIGNUP, {\n  getPayload: (result) => result.userRegister,\n  fieldErrorMap: {\n    licenseId: 'license',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    email: [isEmail('Please enter a valid email')],\n    passwordConfirmation: [\n      validates(\n        'Password must have 1 uppercase, 1 lowercase, 1 digit and be at least 8 characters',\n        (fields) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}.*$/.test(fields.passwordConfirmation)\n      ),\n      validates(\n        \"Passwords don't match\",\n        (fields) => fields.password === fields.passwordConfirmation\n      ),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Image, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Button, HelperText } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport useMutationSignUp from '../../../api/hooks/useMutationSignUp';\nimport ScrollableScreen from '../../../components/layout/ScrollableScreen';\n\nimport { primaryColor } from '../../../constants/Colors';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore PNG allowed\nimport logo from '../../../../assets/images/logo.png';\n\nexport default function SignupScreen() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const { loading, mutate: onSignUp } = useMutationSignUp({\n    onSuccess: (payload) => {\n      // Reset the form and redirect to login screen with a snackbar\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'A confirmation link has been sent to your email',\n          variant: 'success',\n        })\n      );\n\n      navigation.navigate('Unauthenticated', { screen: 'LoginScreen' });\n      // Credentials are received on login only now. Return\n      return null;\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.screens.signup.setFieldError([field as keyof typeof state.fields, value])),\n  });\n\n  return (\n    <ScrollableScreen style={styles.container} contentContainerStyle={styles.content}>\n      <KeyboardAvoidingView\n        style={styles.fields}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Image source={logo} style={{ width: '100%', height: 200 }} resizeMode=\"contain\" />\n        <TextInput\n          style={styles.field}\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['name', newValue]))}\n        />\n        <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Email\"\n          error={state.fields.email.error}\n          value={state.fields.email.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['email', newValue]))}\n        />\n\n        <HelperText type=\"error\">{state.fields.email.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Password\"\n          error={state.fields.password.error || state.fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.password.value}\n          onChange={(newValue) => dispatch(actions.screens.signup.setField(['password', newValue]))}\n        />\n\n        <HelperText type=\"error\">{state.fields.password.error || ''}</HelperText>\n\n        <TextInput\n          style={styles.field}\n          label=\"Repeat password\"\n          error={state.fields.password.error || state.fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={state.fields.passwordConfirmation.value}\n          onChange={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n        />\n        <HelperText type=\"error\">{state.fields.passwordConfirmation.error || ''}</HelperText>\n\n        <Button\n          mode=\"contained\"\n          labelStyle={styles.buttonLabel}\n          style={styles.button}\n          onPress={() =>\n            onSignUp({\n              pushToken: globalState.expoPushToken,\n              email: state.fields.email.value,\n              name: state.fields.name.value,\n              exitWeight: state.fields.exitWeight.value,\n              password: state.fields.password.value,\n              passwordConfirmation: state.fields.passwordConfirmation.value,\n              licenseId: Number(state.fields.license?.value?.id) || null,\n              phone: state.fields.phone.value,\n            })\n          }\n          loading={loading}\n        >\n          Sign up\n        </Button>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: primaryColor,\n  },\n  content: {\n    paddingHorizontal: 60,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: 'white',\n    width: '100%',\n  },\n  buttonLabel: {\n    color: '#FF1414',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    flexGrow: 1,\n    maxWidth: 400,\n    backgroundColor: 'transparent',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'white',\n    borderColor: 'white',\n    color: 'white',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport SignupWizard from 'app/screens/unauthenticated/signup/wizard/SignupWizard';\nimport LoginScreen from './login/LoginScreen';\nimport SignUpScreen from './signup/SignUpScreen';\n\nexport type UnauthenticatedRoutes = {\n  LoginScreen: undefined;\n  SignUpScreen: undefined;\n  SignUpWizard: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<UnauthenticatedRoutes>();\nexport function useUnauthenticatedNavigation() {\n  return useNavigation<NavigationProp<UnauthenticatedRoutes>>();\n}\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n        presentation: 'modal',\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n      <Stack.Screen name=\"SignUpWizard\" component={SignupWizard} />\n    </Stack.Navigator>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, hideContentUntilNavigatedTo } = props;\n  const theme = useAppSelector((state) => state.global.theme);\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <ScrollView style={{ flex: 1 }} contentContainerStyle={styles.content}>\n        {children}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dots: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\n\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport Carousel, { ICarouselInstance } from 'react-native-reanimated-carousel';\nimport { Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\n\nexport interface IWizardProps {\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport type WizardRef = ICarouselInstance;\n\nfunction Wizard(props: IWizardProps, ref: React.Ref<ICarouselInstance>) {\n  const { steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigation();\n  const { palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n  const carouselRef = React.useRef<ICarouselInstance>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    next: () => carouselRef.current?.next(),\n    prev: () => carouselRef.current?.prev(),\n    getCurrentIndex: () => carouselRef.current?.getCurrentIndex() || 0,\n    scrollTo: (opts) => carouselRef.current?.scrollTo(opts),\n  }));\n\n  return (\n    <View style={{ ...StyleSheet.absoluteFillObject }}>\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <KeyboardAvoidingView\n        style={styles.content}\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      >\n        <Carousel\n          autoPlay={false}\n          loop={false}\n          modeConfig={{ parallaxScrollingScale: 1, parallaxScrollingOffset: 32 }}\n          pagingEnabled={false}\n          enabled={false}\n          panGestureHandlerProps={{\n            // Disable swiping\n            activeOffsetX: [-width, width],\n          }}\n          style={{ height: '80%' }}\n          mode=\"parallax\"\n          data={steps}\n          width={width}\n          onSnapToItem={setIndex}\n          ref={carouselRef}\n          renderItem={({ item }) => {\n            if (!item) {\n              return <View />;\n            }\n            const { component: Step } = item;\n            return <Step />;\n          }}\n        />\n        <View style={styles.actions}>\n          <Button\n            disabled={loading}\n            loading={loading}\n            onPress={async () => {\n              try {\n                if (steps[currentIndex]?.onNext) {\n                  setLoading(true);\n                  await steps[currentIndex]?.onNext?.(navigation);\n                }\n                if (currentIndex === steps.length - 1) {\n                  navigation.goBack();\n                } else {\n                  carouselRef?.current?.next();\n                  setIndex(currentIndex + 1);\n                }\n              } catch {\n                return undefined;\n              } finally {\n                setLoading(false);\n              }\n\n              return undefined;\n            }}\n            style={[styles.next, { backgroundColor: palette.placeholder }]}\n            mode=\"contained\"\n          >\n            {currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n          </Button>\n          <Button\n            disabled={loading}\n            mode=\"text\"\n            onPress={async () => {\n              steps[currentIndex]?.onBack?.();\n              if (currentIndex === 0) {\n                navigation.goBack();\n              } else {\n                carouselRef?.current?.prev();\n                setIndex(currentIndex - 1 || 0);\n              }\n              return undefined;\n            }}\n          >\n            Back\n          </Button>\n        </View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 48,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default React.forwardRef(Wizard);\n","import { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzoneDocument } from '../reflection';\nimport { CreateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federation: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  Required<CreateDropzoneMutation>['createDropzone']\n>(CreateDropzoneDocument, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federation: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs } from '../schema';\nimport { UpdateDropzoneDocument } from '../reflection';\nimport { UpdateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  Required<UpdateDropzoneMutation>['updateDropzone']\n>(UpdateDropzoneDocument, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isRequired } from '../createMutation';\nimport { CreatePlanePayload } from '../schema';\n\nconst MUTATION_CREATE_PLANE = gql`\n  mutation CreatePlane(\n    $name: String!\n    $registration: String!\n    $dropzoneId: Int!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    createPlane(\n      input: {\n        attributes: {\n          name: $name\n          registration: $registration\n          dropzoneId: $dropzoneId\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  {\n    name: string;\n    registration: string;\n    dropzoneId: number;\n    minSlots: number;\n    maxSlots: number;\n    hours?: number;\n    nextMaintenanceHours?: number;\n  },\n  CreatePlanePayload\n>(MUTATION_CREATE_PLANE, {\n  getPayload: (result) => result.createPlane,\n  fieldErrorMap: {\n    dropzoneId: 'dropzone',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n    registration: [isRequired('Registration is required')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { MutationUpdatePlaneArgs, UpdatePlanePayload } from '../schema';\n\nconst MUTATION_UPDATE_PLANE = gql`\n  mutation UpdatePlane(\n    $id: Int!\n    $name: String!\n    $registration: String!\n    $minSlots: Int!\n    $maxSlots: Int!\n    $hours: Int\n    $nextMaintenanceHours: Int\n  ) {\n    updatePlane(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          registration: $registration\n          minSlots: $minSlots\n          maxSlots: $maxSlots\n          hours: $hours\n          nextMaintenanceHours: $nextMaintenanceHours\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      plane {\n        id\n        name\n        registration\n        minSlots\n        maxSlots\n        hours\n        nextMaintenanceHours\n\n        dropzone {\n          id\n          name\n          planes {\n            id\n            name\n            registration\n            minSlots\n            maxSlots\n            hours\n            nextMaintenanceHours\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number } & MutationUpdatePlaneArgs['input']['attributes'],\n  UpdatePlanePayload\n>(MUTATION_UPDATE_PLANE, {\n  getPayload: (result) => result.updatePlane,\n  fieldErrorMap: {},\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { MutationCreateTicketTypeArgs, CreateTicketPayload } from '../schema';\n\nconst MUTATION_CREATE_TICKET_TYPE = gql`\n  mutation CreateTicketType(\n    $name: String\n    $cost: Float\n    $dropzoneId: Int!\n    $altitude: Int\n    $allowManifestingSelf: Boolean\n    $isTandem: Boolean\n    $extraIds: [Int!]\n  ) {\n    createTicketType(\n      input: {\n        attributes: {\n          name: $name\n          cost: $cost\n          dropzoneId: $dropzoneId\n          altitude: $altitude\n          allowManifestingSelf: $allowManifestingSelf\n          isTandem: $isTandem\n          extraIds: $extraIds\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      ticketType {\n        id\n        name\n        altitude\n        cost\n        allowManifestingSelf\n        extras {\n          id\n          name\n          cost\n        }\n\n        dropzone {\n          id\n\n          ticketTypes {\n            id\n            name\n            altitude\n            cost\n            allowManifestingSelf\n            extras {\n              id\n              name\n              cost\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  MutationCreateTicketTypeArgs['input']['attributes'],\n  CreateTicketPayload\n>(MUTATION_CREATE_TICKET_TYPE, {\n  getPayload: (result) => result.createTicketType,\n  fieldErrorMap: {\n    extraIds: 'extras',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price')],\n    altitude: [isRequired('Altitude must be specified'), isNumeric('Altitude must be a number')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { UpdateTicketTypeDocument } from '../reflection';\nimport { UpdateTicketTypeMutation, UpdateTicketTypeMutationVariables } from '../operations';\n\nexport default createMutation<\n  UpdateTicketTypeMutationVariables,\n  Required<UpdateTicketTypeMutation>['updateTicketType']\n>(UpdateTicketTypeDocument, {\n  getPayload: (result) => result.updateTicketType,\n  fieldErrorMap: {\n    id: 'original',\n    extraIds: 'extras',\n  },\n});\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChange={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      keyExtractor={(item) => JSON.stringify(item)}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useFederationsQuery();\n\n  return (\n    <CardSelect<FederationEssentialsFragment>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as FederationEssentialsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport Constants from 'app/constants/expo';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { useIsFocused } from '@react-navigation/core';\n\n// Used if user location cant be used and we have no other fallback\n// This points to Brisbane:\nconst DEFAULT_COORDS = { lat: -27.4705, lng: 153.026 };\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const {\n    width,\n    height,\n    position,\n    children,\n    center,\n    coords: _coords,\n    shape,\n    interactive,\n    onDragEnd,\n  } = props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: Constants?.googleMapsWeb,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n  const coords = _coords || DEFAULT_COORDS;\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        // const location = await Location.getCurrentPositionAsync({});\n        // const lat = coords?.lat || location.coords.latitude;\n        // const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        console.log({ error });\n      } finally {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds(coords);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n        map.current?.panTo?.(coords);\n      }\n    },\n    [coords]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  const isFocused = useIsFocused();\n\n  return !isLoaded || !isFocused ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        ref={map}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        mapTypeId={google.maps.MapTypeId.HYBRID}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          center: coords,\n          mapTypeControl: false,\n          mapTypeId: google.maps.MapTypeId.HYBRID,\n          zoomControl: false,\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, List, Searchbar } from 'react-native-paper';\nimport debounce from 'lodash/debounce';\nimport { GeocodedLocation } from 'app/api/schema.d';\nimport { first } from 'lodash';\nimport { useAddressToLocationLazyQuery } from 'app/api/reflection';\n\ninterface IAddressSearchBarProps {\n  value: string;\n  autocomplete?: boolean;\n  selectedLocation?: GeocodedLocation;\n  onChange(value: string): void;\n  onSelect(value: GeocodedLocation): void;\n}\nexport default function AddressSearchBar(props: IAddressSearchBarProps) {\n  const { value, onChange: onChangeText, onSelect } = props;\n  const [suggestions, setSuggestions] = React.useState<GeocodedLocation[]>([]);\n  const [selected, setSelected] = React.useState<GeocodedLocation>();\n  const [fetchLocation, { data }] = useAddressToLocationLazyQuery();\n\n  const fetchSuggestions = React.useCallback(\n    (search: string) => {\n      fetchLocation({\n        variables: {\n          search,\n        },\n      });\n    },\n    [fetchLocation]\n  );\n\n  const fetchSuggestionsDebounced = React.useMemo(\n    () => debounce<typeof fetchSuggestions>(fetchSuggestions),\n    [fetchSuggestions]\n  );\n\n  React.useEffect(() => {\n    if (data?.geocode) {\n      setSuggestions([data.geocode]);\n    }\n  }, [data?.geocode]);\n\n  React.useEffect(() => {\n    if (value && value?.length > 4) {\n      fetchSuggestionsDebounced(value);\n    } else if (!value) {\n      setSuggestions([]);\n    }\n  }, [value, fetchSuggestionsDebounced]);\n\n  const onPickResult = React.useCallback(\n    (location: GeocodedLocation) => {\n      onSelect(location);\n      onChangeText(location.formattedString || '');\n      setSuggestions([]);\n      setSelected(location);\n    },\n    [onChangeText, onSelect]\n  );\n\n  return (\n    <View style={{ width: '100%', borderRadius: 3, backgroundColor: 'white' }}>\n      <Searchbar\n        {...{ value, onChangeText }}\n        allowFontScaling\n        numberOfLines={1}\n        onSubmitEditing={() => {\n          if (first(suggestions)) {\n            onPickResult(first(suggestions) as GeocodedLocation);\n          }\n        }}\n      />\n      {suggestions\n        ?.filter((suggestion) => suggestion.formattedString !== selected?.formattedString)\n        .map((item) => {\n          return (\n            <>\n              <Divider />\n              <List.Item\n                title={item.formattedString}\n                onPress={() => {\n                  onPickResult(item);\n                }}\n              />\n            </>\n          );\n        })}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport Map from 'app/components/map/Map';\nimport AddressSearchBar from 'app/components/input/search/AddressSearchBar';\nimport { useIsFocused } from '@react-navigation/core';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const [searchText, setSearchText] = React.useState('');\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <Step {...props} title=\"Location\" hideContentUntilNavigatedTo>\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <View style={{ width: 300, display: 'none', alignSelf: 'flex-start', marginLeft: 32 }}>\n          <AddressSearchBar\n            value={searchText}\n            onChange={setSearchText}\n            autocomplete\n            onSelect={(item) => {\n              dispatch(actions.forms.dropzone.setField(['lat', item.lat]));\n              dispatch(actions.forms.dropzone.setField(['lng', item.lng]));\n            }}\n          />\n        </View>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 32,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nexport enum NumberFieldType {\n  Cash = 'cash',\n  Weight = 'weight',\n  CanopySize = 'canopySize',\n}\ninterface INumberFieldProps {\n  error?: string | null;\n  label?: string;\n  helperText?: string;\n  disabled?: boolean;\n  value?: number | null;\n  mode?: 'outlined' | 'flat';\n  variant?: NumberFieldType | null;\n  onChange(newValue: number): void;\n}\n\nconst adornments = {\n  [NumberFieldType.Cash]: '$',\n  [NumberFieldType.CanopySize]: 'ft',\n  [NumberFieldType.Weight]: 'kg',\n};\nconst muiVariants = {\n  flat: 'standard',\n  outlined: 'outlined',\n};\nexport default function NumberField(props: INumberFieldProps) {\n  const {\n    label,\n    mode,\n    disabled,\n    onChange: onChangeValue,\n    helperText,\n    error,\n    variant,\n    ...rest\n  } = props;\n  const { value } = rest;\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeValue(Number(e.target.value));\n    },\n    [onChangeValue]\n  );\n\n  return (\n    <FormControl\n      sx={{ m: 1 }}\n      variant={\n        mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n      }\n      fullWidth\n    >\n      <TextField\n        type=\"number\"\n        fullWidth\n        variant={\n          mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n        }\n        {...{ label, disabled, value, onChange }}\n        InputProps={{\n          ...(variant && variant !== NumberFieldType.Cash\n            ? {\n                endAdornment: <InputAdornment position=\"end\">{adornments[variant]}</InputAdornment>,\n              }\n            : {}),\n          ...(variant !== NumberFieldType.Cash\n            ? {}\n            : {\n                startAdornment: (\n                  <InputAdornment position=\"start\">{adornments[variant]}</InputAdornment>\n                ),\n              }),\n        }}\n      />\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NumberField from 'app/components/input/number_input/NumberField';\n\nfunction AircraftWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Aircraft\">\n      <Fields>\n        <List.Subheader>Information</List.Subheader>\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n        />\n\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Registration\"\n          error={state.fields.registration.error}\n          value={state.fields.registration.value || ''}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.plane.setField(['registration', newValue]))\n          }\n        />\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            mode=\"flat\"\n            onChange={(slots) => dispatch(actions.forms.plane.setField(['maxSlots', slots]))}\n            label=\"Max slots\"\n            helperText=\"Max available slots on this aircraft\"\n            value={state.fields.maxSlots.value}\n            error={state.fields.maxSlots.error}\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 4 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default AircraftWizardScreen;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\n// import SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={() => null}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import { useUpdateRoleMutation } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RoleDetailedFragment } from 'app/api/operations';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: RoleDetailedFragment;\n  permissionName: string;\n}\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useUpdateRoleMutation();\n  const dispatch = useAppDispatch();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) =>\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'error',\n                  })\n                )\n              );\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\nimport { useDropzonePermissionsLazyQuery } from 'app/api/reflection';\nimport { Paragraph } from 'react-native-paper';\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n  description?: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, description, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useDropzonePermissionsLazyQuery();\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          id: dropzoneForm.original.id,\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      {description && <Paragraph>{description}</Paragraph>}\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string | null;\n  name?: string | null;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, size, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text\n      label={initals || ''}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\nimport first from 'lodash/first';\n\ninterface IUserAvatarProps {\n  image?: string | null;\n  name?: string | null;\n  size?: number;\n}\n\nfunction stringToColor(string: string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, size } = props;\n  const initials = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return (\n    <Avatar\n      sx={{\n        bgcolor: stringToColor(name || 'Dropzone User'),\n      }}\n      style={{ height: size, width: size, alignSelf: 'center', marginRight: 12 }}\n      src={image || undefined}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n","import * as React from 'react';\nimport MuiMenu from '@mui/material/Menu';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport { View, TouchableOpacity, GestureResponderEvent } from 'react-native';\nimport { ListItemAvatar, ListItemIcon, ListItemText } from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IPopoverMenuProps {\n  open: boolean;\n  anchor: React.ReactNode;\n  children: React.ReactNode;\n  setOpen(open: boolean): void;\n}\n\ninterface IMenuItemProps {\n  title?: string | null;\n  testID?: string;\n  bold?: boolean;\n  icon?: IconSource;\n  avatar?: { name: string; image?: string } | null;\n  onPress(): void;\n}\n\nexport function MenuItem(props: IMenuItemProps) {\n  const { title, bold, onPress, avatar, icon, testID } = props;\n  return (\n    <MuiMenuItem\n      style={{ fontWeight: bold ? 'bold' : undefined }}\n      onClick={onPress}\n      data-testid={testID}\n    >\n      {!icon || avatar ? null : (\n        <ListItemIcon>\n          {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon} /> : null}\n          {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n        </ListItemIcon>\n      )}\n      {!avatar ? null : (\n        <ListItemAvatar>\n          <UserAvatar name={avatar.name} image={avatar?.image} size={32} />\n        </ListItemAvatar>\n      )}\n      <ListItemText>{title}</ListItemText>\n    </MuiMenuItem>\n  );\n}\n\nexport default function Menu(props: IPopoverMenuProps) {\n  const { open, setOpen, anchor, children } = props;\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const ref = React.useRef<TouchableOpacity>(null);\n  const onClick = React.useCallback(\n    (event: GestureResponderEvent) => {\n      setOpen(true);\n      console.log({ event });\n      setAnchorEl(event.currentTarget as unknown as Element);\n    },\n    [setOpen]\n  );\n  const onClose = React.useCallback(() => {\n    setAnchorEl(null);\n    setOpen(false);\n  }, [setOpen]);\n\n  return (\n    <>\n      <TouchableOpacity ref={ref} onPress={onClick}>\n        <View pointerEvents=\"none\">{anchor}</View>\n      </TouchableOpacity>\n      <MuiMenu\n        {...{ anchorEl, onClose, open }}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {children}\n      </MuiMenu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport MuiSelect from '@mui/material/Select';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport {\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  ListItemIcon,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport UserAvatar from 'app/components/UserAvatar';\nimport Menu from 'app/components/popover/Menu';\nimport { isEqual } from 'lodash';\n\nexport interface ISelectOption<T> {\n  label: string;\n  value: T;\n  icon?: IconSource;\n  avatar?: string | null;\n}\ninterface ISelectProps<T> {\n  label?: string;\n  error?: string | null;\n  helperText?: string;\n  options: ISelectOption<T>[];\n  value?: T | null;\n  onChange(item: T): void;\n  compare?(a: T | null | undefined, b: T | null | undefined): boolean;\n  renderAnchor?: React.FC<IAnchorProps<T>>;\n}\n\ninterface IAnchorProps<T> {\n  item?: ISelectOption<T>;\n  openMenu(): void;\n}\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : unknown;\ntype AllowedIcons = Extract<typeof MaterialCommunityIcons>['name'];\n\nexport default function Select<T>(props: ISelectProps<T>) {\n  const {\n    label,\n    error,\n    compare = isEqual,\n    options,\n    renderAnchor,\n    onChange,\n    value,\n    helperText,\n  } = props;\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const onOpen = React.useCallback(() => {\n    if (!options?.length) {\n      return;\n    }\n    setOpen(true);\n  }, [options?.length]);\n  const onDismiss = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const selectedOption = React.useMemo(\n    () => options.find((option) => compare(option.value, value)),\n    [compare, options, value]\n  );\n\n  const createSelectHandler = React.useCallback(\n    (option: ISelectOption<T>) => () => {\n      onDismiss();\n      onChange(option.value);\n    },\n    [onChange, onDismiss]\n  );\n  const showAvatars = React.useMemo(() => options?.some((option) => option.avatar), [options]);\n\n  const anchor = React.useMemo(\n    () =>\n      typeof renderAnchor === 'function'\n        ? (renderAnchor as Function)({ item: selectedOption, openMenu: onOpen })\n        : null,\n    [onOpen, renderAnchor, selectedOption]\n  );\n\n  if (renderAnchor) {\n    return (\n      <Menu {...{ anchor, open, setOpen }}>\n        {options?.map((option) => {\n          const { icon, avatar, label: title } = option;\n\n          return (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            <MuiMenuItem onClick={createSelectHandler(option)}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? (\n                    <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                  ) : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n\n              <ListItemText>{title}</ListItemText>\n            </MuiMenuItem>\n          );\n        })}\n      </Menu>\n    );\n  }\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\n      <MuiSelect\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={selectedOption?.value}\n        {...{ label }}\n        variant=\"standard\"\n        error={!!error}\n        style={{ paddingTop: 0 }}\n        SelectDisplayProps={{\n          style: { display: 'inline-flex', alignItems: 'center' },\n        }}\n        onChange={({ target }) => onChange(target.value as T)}\n      >\n        {options?.map(({ value: val, icon, avatar, label: title }) => (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <MuiMenuItem value={val as T}>\n            {!icon || avatar ? null : (\n              <ListItemIcon>\n                {typeof icon === 'string' ? (\n                  <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                ) : null}\n                {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n              </ListItemIcon>\n            )}\n            {!avatar || !showAvatars ? null : (\n              <ListItemAvatar>\n                <UserAvatar name={label} image={avatar} size={32} />\n              </ListItemAvatar>\n            )}\n            <ListItemText primary={title} />\n          </MuiMenuItem>\n        ))}\n      </MuiSelect>\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import * as React from 'react';\nimport Select from '../select/Select';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  onChange(value: number): void;\n}\nexport default function AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange } = props;\n\n  return (\n    <Select\n      label=\"Altitude\"\n      {...{ value, onChange }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, Paragraph } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport AltitudeSelect from 'app/components/input/dropdown_select/AltitudeSelect';\nimport TextInput from 'app/components/input/text/TextField';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\n\nfunction TicketTypeWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Tickets\">\n      <Fields>\n        <TextInput\n          style={styles.field}\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.ticketType.setField(['name', newValue]))\n          }\n        />\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            mode=\"flat\"\n            onChange={(cost) => dispatch(actions.forms.ticketType.setField(['cost', cost]))}\n            label=\"Price\"\n            variant={NumberFieldType.Cash}\n            value={state.fields.cost.value}\n            error={state.fields.cost.error}\n          />\n        </Card>\n\n        <Card style={styles.altitudeSelect} elevation={3}>\n          <AltitudeSelect\n            onChange={(value) => dispatch(actions.forms.ticketType.setField(['altitude', value]))}\n            value={state.fields.altitude.value || 14000}\n          />\n          {(!state.fields.altitude.value ||\n            ![4000, 14000].includes(state.fields.altitude.value)) && (\n            <TextInput\n              style={styles.field}\n              label=\"Custom altitude\"\n              error={state.fields.altitude.error}\n              value={state.fields.altitude?.value?.toString()}\n              onChange={(newValue) =>\n                dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n              }\n            />\n          )}\n        </Card>\n        <Paragraph style={styles.paragraph}>\n          You can add more tickets later under Settings\n        </Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  altitudeSelect: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 8,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  paragraph: {\n    marginBottom: 8,\n    fontWeight: 'bold',\n    // fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    // marginHorizontal: 16,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default TicketTypeWizardScreen;\n","import * as React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Platform } from 'react-native';\n\nexport default function useImagePicker() {\n  const onPickImage = React.useCallback(async () => {\n    if (Platform.OS !== 'web') {\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n    const result = (await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.1,\n      base64: true,\n    })) as { base64: string };\n\n    return result?.base64;\n  }, []);\n\n  return onPickImage;\n}\n","import * as React from 'react';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { View, StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\n\nfunction Logo(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      } else {\n        console.log({ base64 });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n  const theme = useTheme();\n\n  return (\n    <Step {...props} title=\"Banner\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.banner?.value ? (\n              <LottieView\n                style={{ height: 175, width: 175 }}\n                autoPlay\n                loop={false}\n                // eslint-disable-next-line global-require\n                source={require('../../../../../assets/images/image-pick.json')}\n              />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.banner?.value }}\n                style={{\n                  borderWidth: StyleSheet.hairlineWidth,\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={{ paddingHorizontal: 48, marginTop: 24 }}>\n            Your logo is displayed as an avatar for your dropzone throughout the app.\n          </Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\nexport default Logo;\n","import * as React from 'react';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { PlaneFields } from 'app/components/forms/plane/slice';\nimport { TicketTypeFields } from 'app/components/forms/ticket_type/slice';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport type { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport useMutationCreatePlane from 'app/api/hooks/useMutationCreatePlane';\nimport useMutationUpdatePlane from 'app/api/hooks/useMutationUpdatePlane';\nimport useMutationCreateTicketType from 'app/api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from 'app/api/hooks/useMutationUpdateTicketType';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport AircraftStep from './steps/Aircraft';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport TicketTypeStep from './steps/TicketType';\nimport LogoStep from './steps/Logo';\n\nfunction DropzoneSetupScreen() {\n  const aircraft = useAppSelector((root) => root.forms.plane);\n  const ticket = useAppSelector((root) => root.forms.ticketType);\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const mutationCreatePlane = useMutationCreatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationUpdatePlane = useMutationUpdatePlane({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.plane.setFieldError([field as keyof PlaneFields, value])),\n  });\n  const mutationCreateTicketType = useMutationCreateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n  const mutationUpdateTicketType = useMutationUpdateTicketType({\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, value])),\n  });\n\n  const onComplete = React.useCallback(() => {\n    navigation.goBack();\n  }, [navigation]);\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onLogoNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: dropzone.fields.banner.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: dropzone.fields.banner.value || '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.find(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            wizard.current?.scrollTo({ index: 3 });\n            return true;\n          case 'federation':\n            wizard.current?.scrollTo({ index: 1 });\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            return true;\n          case 'name':\n            wizard.current?.scrollTo({ index: 0 });\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            return true;\n          case 'lat':\n          case 'lng':\n            wizard.current?.scrollTo({ index: 2 });\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            return true;\n          default:\n            break;\n        }\n        return false;\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.banner.value,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n  ]);\n\n  const onAircraftNext = React.useCallback(async () => {\n    if (!aircraft.fields.name.value) {\n      dispatch(actions.forms.plane.setFieldError(['name', 'You must name your aircraft']));\n      throw new Error();\n    }\n    if (!aircraft.fields.registration.value) {\n      dispatch(\n        actions.forms.plane.setFieldError(['registration', 'Please provide aircraft registration'])\n      );\n      throw new Error();\n    }\n\n    // Create or update dropzone\n    const result = !aircraft.original?.id\n      ? await mutationCreatePlane.mutate({\n          dropzoneId: Number(dropzone?.original?.id),\n          name: aircraft.fields.name.value,\n          registration: aircraft.fields.registration.value,\n          minSlots: Number(aircraft.fields.minSlots.value),\n          maxSlots: Number(aircraft.fields.maxSlots.value),\n        })\n      : await mutationUpdatePlane.mutate({\n          id: Number(aircraft.original.id),\n          name: aircraft.fields.name.value,\n          registration: aircraft.fields.registration.value,\n          minSlots: aircraft.fields.minSlots.value,\n          maxSlots: aircraft.fields.maxSlots.value,\n        });\n\n    if (!result?.errors?.length && result?.plane?.id) {\n      dispatch(actions.forms.plane.setOpen(result?.plane));\n    } else {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (field) {\n          case 'registration':\n            dispatch(actions.forms.plane.setFieldError(['registration', message]));\n            break;\n          case 'name':\n            dispatch(actions.forms.plane.setFieldError(['name', message]));\n            break;\n          case 'maxSlots':\n            dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    aircraft.fields.maxSlots.value,\n    aircraft.fields.minSlots.value,\n    aircraft.fields.name.value,\n    aircraft.fields.registration.value,\n    aircraft.original?.id,\n    dispatch,\n    dropzone?.original?.id,\n    mutationCreatePlane,\n    mutationUpdatePlane,\n  ]);\n\n  const onTicketTypeNext = React.useCallback(async () => {\n    if (!ticket.fields.name.value) {\n      dispatch(actions.forms.ticketType.setFieldError(['name', 'You must name your ticket']));\n      throw new Error();\n    }\n\n    if (!ticket.fields.cost.value) {\n      dispatch(actions.forms.ticketType.setFieldError(['cost', 'Tickets must have a price']));\n      throw new Error();\n    }\n\n    // Create or update dropzone\n    const result = !ticket.original?.id\n      ? await mutationCreateTicketType.mutate({\n          dropzoneId: Number(dropzone.original?.id),\n          name: ticket.fields.name.value,\n          cost: ticket.fields.cost.value,\n          altitude: ticket.fields.altitude.value,\n          isTandem: false,\n          allowManifestingSelf: true,\n        })\n      : await mutationUpdateTicketType.mutate({\n          id: Number(ticket.original.id),\n          name: ticket.fields.name.value,\n          cost: ticket.fields.cost.value,\n          altitude: ticket.fields.altitude.value,\n          isTandem: false,\n          allowManifestingSelf: true,\n        });\n\n    if (!result?.errors?.length && result?.ticketType?.id) {\n      dispatch(actions.forms.ticketType.setOpen(result.ticketType));\n    } else {\n      result?.fieldErrors?.forEach(({ field, message }) => {\n        switch (field) {\n          case 'cost':\n            dispatch(actions.forms.ticketType.setFieldError(['cost', message]));\n            break;\n          case 'name':\n            dispatch(actions.forms.ticketType.setFieldError(['name', message]));\n            break;\n          case 'altitude':\n            dispatch(actions.forms.ticketType.setFieldError(['altitude', message]));\n            break;\n          default:\n            break;\n        }\n      });\n      throw new Error();\n    }\n  }, [\n    ticket.fields.name.value,\n    ticket.fields.cost.value,\n    ticket.fields.altitude.value,\n    ticket.original?.id,\n    mutationCreateTicketType,\n    dropzone.original?.id,\n    mutationUpdateTicketType,\n    dispatch,\n  ]);\n\n  const noop = React.useCallback(() => Promise.resolve(), []);\n  const wizard = React.useRef<WizardRef>();\n\n  return (\n    <Wizard\n      dots\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.ticketType.setOpen(false));\n            dispatch(actions.forms.plane.setOpen(false));\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.ticketType.reset());\n            dispatch(actions.forms.plane.reset());\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: noop },\n        {\n          onNext: onLogoNext,\n          component: LogoStep,\n        },\n        { component: AircraftStep, onNext: onAircraftNext },\n        { component: TicketTypeStep, onNext: onTicketTypeNext },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateSlot}\n              title=\"Manifest\"\n              description=\"Who can manifest themselves on loads?\"\n            />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              description=\"Who can manifest other people on loads?\"\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.ticketType.setOpen(false));\n            dispatch(actions.forms.plane.setOpen(false));\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.ticketType.reset());\n            dispatch(actions.forms.plane.reset());\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            onComplete();\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { UpdateUserMutation, UpdateUserMutationVariables } from '../operations';\nimport { UpdateUserDocument } from '../reflection';\n\nexport default createMutation<\n  UpdateUserMutationVariables,\n  Required<UpdateUserMutation>['updateUser']\n>(UpdateUserDocument, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title={`${state.federation?.value?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <TextInput\n          value={state.fields?.apfNumber?.value || ''}\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n          }\n          label={`${state.federation.value?.name} ID`}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RealName(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <TextInput\n          value={state.fields?.name?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction UserInfoScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <TextInput\n          value={state.fields?.nickname?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n          {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default UserInfoScreen;\n","import { LicenseDetailsFragment, LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseDetailsFragment): void;\n}\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<LicenseDetailsFragment>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as LicenseDetailsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseCardSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default FederationStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, Surface, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport Select from 'app/components/input/select/Select';\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Select<string>\n          label=\"Manufacturer\"\n          onChange={(value) => {\n            setIsOtherMake(value === 'other');\n            dispatch(actions.forms.rig.setField(['make', value]));\n          }}\n          value={state.fields.make.value}\n          options={[\n            'Icon',\n            'Javelin',\n            'Mirage',\n            'Vector',\n            'PA (Talon)',\n            'Infinity',\n            'Parachutes de France',\n            'Parachute Systems',\n            'Racer',\n          ]\n            .map((label) => ({ label, value: label }))\n            .concat([{ label: 'Other', value: 'other' }])}\n        />\n        {!isOtherMake ? null : (\n          <Surface style={styles.card}>\n            <TextInput\n              style={{ backgroundColor: 'transparent' }}\n              mode=\"flat\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          </Surface>\n        )}\n        {state.fields.make.error && (\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n        )}\n\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Model\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Surface>\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Serial number\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          {state.fields.serial.error && (\n            <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n              {state.fields.serial.error}\n            </HelperText>\n          )}\n        </Surface>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { marginVertical: 8 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport Menu from 'app/components/popover/Menu';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\nimport { View } from 'react-native';\n\ninterface IDatepicker {\n  label: string;\n  timestamp: number;\n  disabled?: boolean;\n  onChange(timestamp: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, timestamp, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const left = React.useCallback(() => <List.Icon icon=\"calendar\" />, []);\n  return (\n    <Menu\n      {...{ open, setOpen }}\n      anchor={\n        <List.Item\n          onPress={() => setOpen(true)}\n          disabled={!!disabled}\n          title={label}\n          description={timestamp ? format(timestamp * 1000, 'yyyy/MM/dd') : 'No date selected'}\n          left={left}\n        />\n      }\n    >\n      <View style={{ zIndex: 1500 }}>\n        <DayPicker\n          selectedDays={timestamp ? [new Date(timestamp * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </View>\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            label=\"Reserve repack due date\"\n            timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <CardSelect\n          items={[\n            { value: false, label: 'I have my own rig' },\n            { value: true, label: 'I dont have my own rig' },\n          ]}\n          renderItemLabel={({ label }) => label}\n          onChangeSelected={(options) =>\n            dispatch(actions.screens.userWizard.skipRigSetup(options[0].value))\n          }\n          isSelected={({ value }) => value === state.skipRigSetup}\n          selected={[\n            state.skipRigSetup\n              ? { value: true, label: 'I dont have my own rig' }\n              : { value: false, label: 'I have my own rig' },\n          ]}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Card, Paragraph } from 'react-native-paper';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil(\n                (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                  (rigForm.fields.canopySize.value || 150),\n                2\n              ).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>\n              Your wingloading is an indicator of your descent rate under canopy\n            </Paragraph>\n          </View>\n        </View>\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            label=\"Your exit weight\"\n            variant={NumberFieldType.Weight}\n            value={Number(userForm?.fields?.exitWeight?.value) || 50}\n            onChange={(value) =>\n              dispatch(actions.forms.user.setField(['exitWeight', value.toString()]))\n            }\n            error={userForm.fields.exitWeight?.error}\n            helperText=\"Your weight in kg's with all equipment on\"\n          />\n          <NumberField\n            label=\"Canopy Size\"\n            variant={NumberFieldType.CanopySize}\n            value={Number(rigForm?.fields?.canopySize?.value) || 120}\n            onChange={(value) => dispatch(actions.forms.rig.setField(['canopySize', value]))}\n            helperText=\"Size of your main canopy in square feet\"\n            error={userForm.fields.exitWeight?.error}\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, paddingRight: 16, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginVertical: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\n\nfunction AvatarStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.user.setField(['image', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  return (\n    <Step {...props} title=\"Avatar\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.image?.value ? (\n              <Avatar.Icon size={175} icon=\"camera\" />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.image?.value }}\n                style={{\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={styles.paragraph}>Press to upload a photo</Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\n\nexport default AvatarStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  useJoinFederationMutation,\n  useCreateRigMutation,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport useMutationUpdateUser from 'app/api/hooks/useMutationUpdateUser';\nimport { UserFields } from 'app/components/forms/user/slice';\nimport { License, Rig } from 'app/api/schema.d';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { useRoute } from '@react-navigation/core';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\nimport AvatarStep from './steps/Avatar';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const { params } = useRoute<{ key: string; name: string; params: { index: number } }>();\n  console.debug('PARAMS', params);\n\n  React.useEffect(() => {\n    if (params?.index !== undefined && wizard.current) {\n      console.debug('SETTING INDEX', params.index);\n      wizard.current?.scrollTo({ index: params.index });\n    }\n  }, [params?.index]);\n\n  const [joinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const [mutationUpdateRig] = useUpdateRigMutation();\n  const [mutationCreateRig] = useCreateRigMutation();\n\n  const onNameNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n      dispatch(\n        actions.forms.user.setFieldError(['name', 'Please enter your full name, including surname'])\n      );\n      throw new Error();\n    }\n  }, [dispatch, userForm.fields.name.value]);\n\n  const onNicknameNext = React.useCallback(async () => {\n    // Update user license\n    const result = await mutationUpdateUser.mutate({\n      dropzoneUser: Number(userForm.original?.id),\n      nickname: userForm.fields.nickname.value,\n      name: userForm.fields.name.value,\n    });\n\n    if (result?.errors) {\n      throw new Error();\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.name.value,\n    userForm.fields.nickname.value,\n    userForm.original?.id,\n  ]);\n\n  const onFederationNext = React.useCallback(async () => {\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [dispatch, joinFederation, userForm.federation.value?.id, userForm.federation.value?.name]);\n\n  const onFederationNumberNext = React.useCallback(async () => {\n    // Validate\n    if (\n      userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n      !userForm.fields.apfNumber.value\n    ) {\n      dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n      throw new Error();\n    }\n\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          uid: userForm.fields.apfNumber.value,\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n      console.debug('FOUND LICENSE', mutationResult?.data?.joinFederation);\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation.value?.id,\n    userForm.federation.value?.name,\n    userForm.fields.apfNumber.value,\n  ]);\n\n  const onLicenseNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.license?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n      throw new Error();\n    }\n\n    if (!userForm.federation?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a federation']));\n      throw new Error();\n    }\n\n    try {\n      const response = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n          license: userForm.fields.license?.value?.id,\n        },\n      });\n      if (response.data?.joinFederation?.errors) {\n        response.data?.joinFederation?.errors?.map((message) =>\n          dispatch(actions.forms.user.setFieldError(['license', message]))\n        );\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation?.value?.id,\n    userForm.fields.license?.value?.id,\n  ]);\n\n  const onRigNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.make?.value) {\n      dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n      throw new Error();\n    }\n\n    if (!rigForm.fields.model?.value) {\n      dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n      throw new Error();\n    }\n\n    // Create user rig\n    try {\n      if (!rigForm.original?.id) {\n        console.debug('CREATING RIG');\n        const response = await mutationCreateRig({\n          variables: {\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.createRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.createRig?.rig as Rig));\n        } else {\n          console.debug('ERROR CREATING RIG', response?.data?.createRig);\n        }\n      } else {\n        console.debug('RIG ID IS', rigForm.original?.id);\n        const response = await mutationUpdateRig({\n          variables: {\n            id: Number(rigForm.original?.id),\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.updateRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.updateRig?.rig as Rig));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    rigForm.fields.make.value,\n    rigForm.fields.model.value,\n    rigForm.fields.serial.value,\n    rigForm.original?.id,\n    dispatch,\n    mutationCreateRig,\n    userForm.original?.user?.id,\n    mutationUpdateRig,\n  ]);\n\n  const onReserveRepackNext = React.useCallback(async () => {\n    try {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        throw new Error();\n      }\n\n      // Update repack expiry date\n      const { data } = await mutationUpdateRig({\n        variables: {\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        },\n      });\n      console.debug('Updated rig', data);\n      if (data?.updateRig?.rig) {\n        dispatch(actions.forms.rig.setOriginal(data?.updateRig?.rig as Rig));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]);\n\n  const onWingloadingNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.canopySize?.value) {\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n      throw new Error();\n    }\n\n    if (!userForm.fields.exitWeight?.value) {\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight']));\n      throw new Error();\n    }\n\n    await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        canopySize: rigForm.fields.canopySize.value,\n      },\n    });\n    await mutationUpdateUser.mutate({\n      dropzoneUser: Number(userForm.original?.id),\n      exitWeight: Number(userForm.fields.exitWeight?.value),\n    });\n  }, [\n    rigForm.fields.canopySize.value,\n    rigForm.original?.id,\n    userForm.fields.exitWeight?.value,\n    userForm.original?.id,\n    dispatch,\n    mutationUpdateRig,\n    mutationUpdateUser,\n  ]);\n\n  const onImageNext = React.useCallback(async () => {\n    try {\n      if (\n        userForm.fields.image?.value &&\n        userForm.fields.image?.value !== userForm.original?.user?.image\n      ) {\n        // Upload image\n        await mutationUpdateUser.mutate({\n          dropzoneUser: Number(userForm?.original?.id),\n          image: userForm.fields.image.value,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.image.value,\n    userForm.original?.id,\n    userForm.original?.user?.image,\n  ]);\n\n  const steps = React.useMemo(\n    () =>\n      [\n        {\n          component: RealNameStep,\n          onNext: onNameNext,\n          onBack: () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n        { component: NicknameStep, onNext: onNicknameNext },\n        { component: AvatarStep, onNext: onImageNext },\n        { component: FederationStep, onNext: onFederationNext },\n        userForm.federation?.value?.id && userForm?.federation?.value?.name?.toLowerCase() === 'apf'\n          ? { component: FederationNumberStep, onNext: onFederationNumberNext }\n          : null,\n        { component: LicenseStep, onNext: onLicenseNext },\n        { component: AskForRigStep },\n        state?.skipRigSetup ? null : { component: RigStep, onNext: onRigNext },\n        state?.skipRigSetup ? null : { component: ReserveRepackStep, onNext: onReserveRepackNext },\n        state?.skipRigSetup ? null : { component: WingloadingStep, onNext: onWingloadingNext },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n      ].filter(Boolean),\n    [\n      dispatch,\n      onFederationNext,\n      onFederationNumberNext,\n      onImageNext,\n      onLicenseNext,\n      onNameNext,\n      onNicknameNext,\n      onReserveRepackNext,\n      onRigNext,\n      onWingloadingNext,\n      state?.skipRigSetup,\n      userForm.federation?.value?.id,\n      userForm.federation?.value?.name,\n    ]\n  );\n\n  return <Wizard ref={wizard} dots {...{ steps }} />;\n}\n\nexport default UserWizardScreen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>We've sent you a link to restore your password.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useRecoverPasswordMutation } from 'app/api/reflection';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport EmailStep from './steps/Email';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const [onRecover] = useRecoverPasswordMutation();\n\n  const onClickRecover = React.useCallback(async () => {\n    try {\n      await onRecover({\n        variables: {\n          email: state.fields.email.value,\n          redirectUrl: '',\n        },\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['email', e.message]));\n      }\n      throw e;\n    }\n  }, [dispatch, onRecover, state.fields.email.value]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[{ onNext: onClickRecover, component: EmailStep }, { component: DoneStep }]}\n    />\n  );\n}\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('Limbo', { screen: 'DropzoneSelectScreen' });\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Password changed\">\n      <Fields>\n        <LottieView\n          loop={false}\n          autoPlay\n          speed={1.2}\n          style={{ height: 300, width: 300, alignSelf: 'center' }}\n          source={lottieDoneAnimation as unknown as string}\n        />\n        <Paragraph>Your password has been changed. You can now log in again.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUpdateLostPasswordMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { User } from 'app/api/schema.d';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport DoneStep from './steps/Done';\nimport PasswordStep from './steps/Password';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n\n  const [updatePassword] = useUpdateLostPasswordMutation();\n  const wizard = React.useRef<WizardRef>(null);\n\n  const onChangePassword = React.useCallback(async () => {\n    try {\n      if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n        throw new Error('Password mismatch. Did you type exactly the same password?');\n      }\n      if (!route.params?.token) {\n        throw new Error('Security token missing - try clicking the link in the email again');\n      }\n      const result = await updatePassword({\n        variables: {\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          token: route.params.token,\n        },\n      });\n\n      if (result?.data?.userUpdatePasswordWithToken?.authenticatable) {\n        dispatch(\n          actions.global.setUser(result.data.userUpdatePasswordWithToken.authenticatable as User)\n        );\n        return;\n      }\n      if (result.errors?.length) {\n        throw new Error(result.errors[0].message);\n      }\n      throw new Error('Password change failed');\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw e;\n    }\n  }, [\n    dispatch,\n    route.params?.token,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    updatePassword,\n  ]);\n\n  const navigation = useNavigation();\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Password too weak');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onFinished = React.useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    navigation.replace('Unauthenticated', { screen: 'LoginScreen' });\n    throw new Error('Error thrown to prevent navigation.goBack');\n  }, [navigation]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[\n        { onBack: navigation.goBack, onNext: validatePassword, component: PasswordStep },\n        { onNext: onChangePassword, component: PasswordConfirmationStep },\n        { component: DoneStep, onNext: onFinished },\n      ]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Color from 'color';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nconst defaultColors = {\n  boneColor: '#E1E9EE',\n  highlightColor: '#F2F8FC',\n};\n\nexport default function ThemedSkeleton(props: ExtractProps<typeof SkeletonContent>) {\n  const theme = useTheme();\n  const boneColor = theme.dark\n    ? Color(defaultColors.boneColor).negate().rgb().toString()\n    : defaultColors.boneColor;\n  const highlightColor = theme.dark\n    ? Color(defaultColors.highlightColor).negate().rgb().toString()\n    : defaultColors.highlightColor;\n\n  return <SkeletonContent {...{ boneColor, highlightColor }} {...props} />;\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Chip as MaterialChip, useTheme } from 'react-native-paper';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nexport type ChipProps = Omit<ExtractProps<typeof MaterialChip>, 'icon'> & {\n  icon?: ExtractProps<typeof MaterialCommunityIcons>['name'];\n} & {\n  small?: boolean;\n  color?: string;\n  backgroundColor?: string;\n};\nexport default function Chip(props: ChipProps) {\n  const { small, icon, color: assignedColor, mode, style, backgroundColor, ...rest } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n\n  const chipStyle: ChipProps['style'] = React.useMemo(\n    () => ({\n      marginHorizontal: 4,\n      backgroundColor: mode !== 'flat' ? backgroundColor : undefined,\n      height: small ? 25 : undefined,\n      alignItems: 'center' as const,\n      borderColor: mode !== 'flat' ? color || undefined : undefined,\n    }),\n    [backgroundColor, color, mode, small]\n  );\n  const iconStyles: ChipProps['style'] = React.useMemo(\n    () => (Platform.OS === 'web' ? {} : { marginTop: 0, marginBottom: 3 }),\n    []\n  );\n\n  return (\n    <MaterialChip\n      mode={mode || 'outlined'}\n      selectedColor={color}\n      style={[chipStyle, style]}\n      icon={\n        icon\n          ? (iconProps) => <MaterialCommunityIcons name={icon} {...iconProps} style={iconStyles} />\n          : undefined\n      }\n      textStyle={iconStyles}\n      {...rest}\n    />\n  );\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { Platform, View } from 'react-native';\nimport Chip, { ChipProps } from 'app/components/chips/Chip';\n\ninterface IChipSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  allowEmpty?: boolean;\n  icon?: ChipProps['icon'];\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction ChipSelect<T extends Record<string, unknown> | string>(props: IChipSelect<T>) {\n  const {\n    items,\n    allowEmpty,\n    selected,\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChangeSelected,\n    autoSelectFirst,\n  } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n      {items.map((item) => {\n        const isItemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n        return (\n          <Chip\n            key={JSON.stringify(item)}\n            small\n            mode={!isItemSelected ? 'flat' : 'outlined'}\n            icon={!selected.some((value) => isEqual(item, value)) && icon ? icon : undefined}\n            style={{ margin: Platform.OS === 'web' ? 4 : 1 }}\n            disabled={isDisabled?.(item) || false}\n            selected={isItemSelected}\n            onPress={() =>\n              onChangeSelected(\n                !allowEmpty && selected.length === 1\n                  ? [item]\n                  : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            {renderItemLabel(item)}\n          </Chip>\n        );\n      })}\n    </View>\n  );\n}\n\nexport default React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof ChipSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseEssentialsFragment): void;\n}\n\nexport default function LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<LicenseEssentialsFragment>\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        selected={[value].filter(Boolean) as LicenseEssentialsFragment[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport Select from '../select/Select';\n\ninterface IFederationSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationSelect(props: IFederationSelect) {\n  const { value, onSelect } = props;\n\n  const { data } = useFederationsQuery();\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onSelect(data.federations[0]);\n    }\n  }, [data?.federations, onSelect, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.federations?.map((node) => ({\n        label: node?.name || '',\n        value: node as FederationEssentialsFragment,\n      })) || [],\n    [data?.federations]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Select<FederationEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onSelect}\n      />\n    </>\n  );\n}\n","import { RoleEssentialsFragment } from 'app/api/operations';\nimport { useRolesQuery } from 'app/api/reflection';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\n\ninterface IRoleSelect {\n  value?: RoleEssentialsFragment | null;\n  disabled?: boolean;\n  onSelect(jt: RoleEssentialsFragment): void;\n}\n\nexport default function RoleSelect(props: IRoleSelect) {\n  const { onSelect, value } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useRolesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.roles?.map((node) => ({\n        label: startCase(node?.name || ''),\n        value: node,\n      })) || [],\n    [data?.dropzone?.roles]\n  );\n\n  return (\n    <Select<RoleEssentialsFragment>\n      label=\"Access level\"\n      compare={(a, b) => a?.id === b?.id}\n      {...{ options, value }}\n      onChange={onSelect}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport NumberField from '../../input/number_input/NumberField';\n\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\n\nexport default function GhostForm() {\n  const state = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.ghost.setField(['email', newValue]))}\n      />\n\n      <NumberField\n        label=\"Exit weight (kg)\"\n        error={state.fields.exitWeight.error}\n        value={Number(state.fields.exitWeight?.value)}\n        onChange={(newValue) =>\n          dispatch(actions.forms.ghost.setField(['exitWeight', newValue?.toString()]))\n        }\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.ghost.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.ghost.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n      <RoleSelect\n        value={state.fields.role?.value || null}\n        onSelect={(newValue) => dispatch(actions.forms.ghost.setField(['role', newValue]))}\n      />\n\n      <HelperText type={state.fields.phone.error ? 'error' : 'info'}>\n        {state.fields.phone.error || ''}\n      </HelperText>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { Button, Dialog, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { Drawer, Typography } from '@mui/material';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n  disablePadding?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  scrollable?: boolean;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nfunction DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, disablePadding, buttonAction, title, loading, open, children, onClose } =\n    props;\n  const theme = useTheme();\n\n  return (\n    <Drawer {...{ open, onClose }} anchor=\"right\" PaperProps={{ style: { width: 400 } }}>\n      <ProgressBar\n        indeterminate\n        color={theme?.colors?.primary}\n        visible={loading}\n        style={{ width: '100%' }}\n      />\n      {!title ? null : (\n        <Typography\n          variant=\"h5\"\n          style={{ marginBottom: 16, paddingLeft: 16, paddingRight: 16, marginTop: 16 }}\n        >\n          {title}\n          <IconButton icon=\"close\" style={styles.close} size={24} onPress={onClose} />\n        </Typography>\n      )}\n      <View style={{ padding: disablePadding ? 0 : 16, paddingBottom: 0 }}>{children}</View>\n      <Dialog.Actions\n        style={{ justifyContent: 'flex-end', backgroundColor: 'transparent', marginBottom: 16 }}\n      >\n        <Button mode=\"contained\" onPress={buttonAction} style={styles.button}>\n          {buttonLabel}\n        </Button>\n      </Dialog.Actions>\n    </Drawer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  noPadding: { borderBottomWidth: 0, paddingLeft: 0, paddingRight: 0 },\n  defaultPadding: { borderBottomWidth: 0, paddingLeft: 24, paddingRight: 24 },\n  button: {\n    width: '100%',\n    padding: 5,\n    alignSelf: 'flex-end',\n    borderRadius: 20,\n    height: 42,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  close: { position: 'absolute', top: 4, right: 4 },\n});\n\nexport default DialogOrSheet;\n","import { createMutation, isEmail, isNumeric, isRequired } from '../createMutation';\nimport { CreateGhostDocument } from '../reflection';\nimport { CreateGhostMutation, CreateGhostMutationVariables } from '../operations';\n\nexport default createMutation<\n  CreateGhostMutationVariables,\n  Required<CreateGhostMutation>['createGhost']\n>(CreateGhostDocument, {\n  getPayload: (result) => result.createGhost,\n  validates: {\n    exitWeight: [\n      isRequired('Exit weight must be provided'),\n      isNumeric('Please enter a valid number'),\n    ],\n    email: [\n      isRequired('Please provide a valid email address'),\n      isEmail('Please provide a valid email address'),\n    ],\n    name: [isRequired('Name is required')],\n\n    role: [isRequired('You must select a role')],\n  },\n  fieldErrorMap: {\n    exitWeight: 'exit_weight',\n  },\n});\n","import * as React from 'react';\nimport GhostForm from '../forms/ghost/GhostForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationCreateGhost from '../../api/hooks/useMutationCreateGhost';\nimport { GhostFields } from '../forms/ghost/slice';\n\ninterface ICreateGhostDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onSuccess, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ghost);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const mutationCreateGhost = useMutationCreateGhost({\n    onSuccess: (payload) => {\n      requestAnimationFrame(() => {\n        onSuccess();\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `${payload?.user?.name} has been added to your dropzone`,\n            variant: 'success',\n          })\n        );\n      });\n    },\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.ghost.setFieldError([field as keyof GhostFields, value]));\n    },\n\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    mutationCreateGhost.mutate({\n      dropzone: globalState.currentDropzoneId as number,\n      name: state.fields.name.value || '',\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: Number(state.fields.exitWeight.value),\n      email: state.fields.email.value || '',\n      role: Number(state.fields.role.value?.id),\n    });\n  }, [\n    mutationCreateGhost,\n    globalState.currentDropzoneId,\n    state.fields.name.value,\n    state.fields.license.value?.id,\n    state.fields.phone.value,\n    state.fields.exitWeight.value,\n    state.fields.email.value,\n    state.fields.role.value?.id,\n  ]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationCreateGhost.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <GhostForm />\n    </DialogOrSheet>\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { UserRoutes } from './routes';\n\nexport function useUserNavigation() {\n  return useNavigation<NavigationProp<UserRoutes>>();\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { RefreshControl, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport SkeletonContent from 'app/components/Skeleton';\nimport NoResults from 'app/components/NoResults';\nimport { Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport CreateGhostDialog from 'app/components/dialogs/Ghost';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useUserNavigation } from '../useUserNavigation';\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 48, width: 48, marginHorizontal: 12, borderRadius: 48 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\n\nconst loadingFragment: DropzoneUserEssentialsFragment = {\n  id: '__LOADING__',\n  hasCredits: false,\n  walletId: '__LOADING__',\n  hasExitWeight: false,\n  hasLicense: false,\n  hasMembership: false,\n  user: {\n    id: '__LOADING__',\n  },\n};\n\nexport type UserListRoute = {\n  UserListScreen: undefined;\n};\n\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const ghostForm = useAppSelector((root) => root.forms.ghost);\n  const dispatch = useAppDispatch();\n\n  const { data, loading, refetch } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: global.currentDropzoneId?.toString() as string,\n      search: state.searchText,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const navigation = useUserNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = React.useMemo(() => data?.dropzoneUsers?.edges || [], [data?.dropzoneUsers?.edges]);\n  const initialLoading = !users?.length && loading;\n  const theme = useTheme();\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.surface }}>\n      <ProgressBar indeterminate color={global.theme.colors.primary} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList<DropzoneUserEssentialsFragment>\n        data={initialLoading ? new Array(8).fill(loadingFragment) : users.map((edge) => edge?.node)}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: global.currentDropzoneId?.toString(),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={(item, idx) => `user-${item?.id || idx}-${idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%', alignSelf: 'center' }}\n        renderItem={({ item }) =>\n          item.id === '__LOADING__' ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${item?.id}`}\n              style={{ margin: 0, marginVertical: 0, borderRadius: 2, width: '100%' }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 4, paddingRight: 0, paddingBottom: 4 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={item?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={item?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !item?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={48}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: item?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={48}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('ProfileScreen', {\n                      userId: item?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.ghost.setOpen(true))}\n          label=\"Add user\"\n        />\n      )}\n      <CreateGhostDialog\n        open={ghostForm.open}\n        onClose={() => requestAnimationFrame(() => dispatch(actions.forms.ghost.setOpen(false)))}\n        onSuccess={() => {\n          requestAnimationFrame(() => {\n            dispatch(actions.forms.ghost.setOpen(false));\n            refetch();\n          });\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from 'app/state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  onSearch,\n  options,\n  back,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search users...\"\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n      )}\n      {searchVisible ? (\n        <MaterialIcons\n          name=\"close\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      ) : (\n        <MaterialIcons\n          name=\"search\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      )}\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import NumberField from 'app/components/input/number_input/NumberField';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport TextInput from '../../input/text/TextField';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChange={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <NumberField\n          disabled={!canInspect}\n          value={value as number}\n          mode=\"outlined\"\n          helperText={config.description || 'No description'}\n          onChange={(text) => onChange({ ...config, value: text as number })}\n          label={config.label || ''}\n        />\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          timestamp={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Avatar, Card, Chip, Divider, ProgressBar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  RigInspectionEssentialsFragment,\n  RigEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n} from 'app/api/operations';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport useMutationUpdateRig from 'app/api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, successColor } from 'app/constants/Colors';\n\nimport { Permission } from 'app/api/schema.d';\nimport { AvailableRigsDocument, DropzoneUsersDetailedDocument } from 'app/api/reflection';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport interface IRigCardProps {\n  rig: RigEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  rigInspection?: RigInspectionEssentialsFragment;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useDropzoneContext();\n  const pickImage = useImagePicker();\n\n  const updateRig = useMutationUpdateRig({\n    mutation: {\n      refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n    },\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      dispatch(\n        actions.notifications.showSnackbar({ message: 'Image uploaded', variant: 'success' })\n      );\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      dispatch(actions.notifications.showSnackbar({ message: 'Upload failed', variant: 'error' }));\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = pickImage();\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pickImage, rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useUserNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.owner?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          setOpen={setPackingCardMenuOpen}\n          open={isPackingCardMenuOpen}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              textStyle={{ marginTop: 0 }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <MenuItem\n            title=\"Upload new\"\n            icon=\"camera\"\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <MenuItem\n                title=\"View\"\n                icon=\"eye\"\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rigId: rig.id,\n              dropzoneUserId: dropzoneUser?.id as string,\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, Paragraph } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform, View } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport {\n  DropzoneDocument,\n  DropzoneUserProfileDocument,\n  useCreateRigInspectionMutation,\n  useDropzoneUserProfileQuery,\n  useRigInspectionTemplateQuery,\n} from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { Query, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUserProfileQuery, DropzoneUserProfileQueryVariables } from 'app/api/operations';\nimport RigCard from '../equipment/RigCard';\n\nexport type RigInspectionRoute = {\n  RigInspectionScreen: {\n    rigId: string;\n    dropzoneUserId: string;\n  };\n};\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const currentDropzone = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  const route = useRoute<RouteProp<RigInspectionRoute>>();\n  const { rigId, dropzoneUserId } = route.params;\n  const { data, refetch } = useDropzoneUserProfileQuery({\n    variables: {\n      id: dropzoneUserId,\n    },\n    skip: !dropzoneUserId,\n  });\n  const { data: rigInspectionQuery } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n    skip: !currentDropzone?.dropzone?.id,\n  });\n\n  const rig = React.useMemo(\n    () => data?.dropzoneUser?.user?.rigs?.find(({ id }) => id === rigId),\n    [data?.dropzoneUser?.user?.rigs, rigId]\n  );\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    refetch();\n  }, [isFocused, refetch]);\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useCreateRigInspectionMutation();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = data?.dropzoneUser?.rigInspections?.some(\n      (inspection) =>\n        inspection.rig?.id?.toString() === rig?.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = data?.dropzoneUser?.rigInspections?.find(\n        (record) => record.rig?.id === rig?.id\n      );\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    data?.dropzoneUser?.rigInspections,\n    rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition,\n    dispatch,\n    rig?.id,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzone: currentDropzone?.dropzone?.id,\n          rig: rig?.id,\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<\n            DropzoneUserProfileQuery,\n            DropzoneUserProfileQueryVariables\n          >({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              id: currentDropzone?.dropzone?.id as string,\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: DropzoneDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              earliestTimestamp: startOfDay(new Date()).toISOString(),\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: DropzoneDocument,\n              variables: {\n                dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n                earliestTimestamp: startOfDay(new Date()).toISOString(),\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            dropzoneUser: {\n              rigInspections: [\n                ...(result?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Rig inspection saved',\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig?.id,\n    state.fields,\n    state.ok,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <ScrollableScreen>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          maxWidth: 400,\n          backgroundColor: 'transparent',\n        }}\n      >\n        {rig && <RigCard {...{ rig }} />}\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={rigInspectionQuery?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            {canInspect ? null : (\n              <Paragraph>\n                You need Rig Inspector permissions to update this form, but you can still view it.\n              </Paragraph>\n            )}\n            <View style={{ flex: 1, flexGrow: 1, opacity: canInspect ? 1.0 : 0.6 }}>\n              <RigInspectionForm />\n            </View>\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) ===\n                  rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </ScrollableScreen>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    [Permission.ActAsDzso]: 'shield-cross',\n    [Permission.ActAsGca]: 'radio-handheld',\n    [Permission.ActAsLoadMaster]: 'shield-account',\n    [Permission.ActAsPilot]: 'shield-airplane',\n    [Permission.ActAsRigInspector]: 'shield-search',\n  }[type];\n\n  const label = {\n    [Permission.ActAsDzso]: 'DZSO',\n    [Permission.ActAsGca]: 'GCA',\n    [Permission.ActAsLoadMaster]: 'Load Master',\n    [Permission.ActAsPilot]: 'Pilot',\n    [Permission.ActAsRigInspector]: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import { Mutation } from '../schema.d';\n\ninterface ErrorHandlerOpts<T extends Partial<IGenericFieldErrorResponse>> {\n  onSuccess?(payload: T): void;\n  onFieldError?(field: string, message: string): void;\n  onError?(message: string): void;\n}\n\ntype MutationsWithoutDevise = Omit<\n  Mutation,\n  | '__typename'\n  | 'userConfirmRegistrationWithToken'\n  | 'userLogin'\n  | 'userLogout'\n  | 'userRegister'\n  | 'userResendConfirmation'\n  | 'userResendConfirmationWithToken'\n  | 'userSendPasswordReset'\n  | 'userSendPasswordResetWithToken'\n  | 'userSignUp'\n  | 'userUpdatePassword'\n  | 'userUpdatePasswordWithToken'\n>;\n\ntype RecursivePartial<T> = {\n  [P in keyof T]?: RecursivePartial<T[P]>;\n};\ntype IGenericFieldErrorResponse = {\n  [K in keyof MutationsWithoutDevise]: RecursivePartial<MutationsWithoutDevise[K]>;\n};\n\nexport default function mutationHandlers<T extends Partial<IGenericFieldErrorResponse>>(\n  opts: ErrorHandlerOpts<T>\n) {\n  const { onError, onFieldError, onSuccess } = opts;\n  return {\n    onCompleted: (payload: T) => {\n      const [entry] = Object.values(payload);\n      if (entry?.errors?.length) {\n        entry?.errors?.filter(Boolean).forEach((message) => onError?.(message as string));\n      }\n      if (entry?.fieldErrors?.length) {\n        entry?.fieldErrors?.forEach((err) =>\n          onFieldError?.(err?.field as string, err?.message as string)\n        );\n      }\n\n      if (!entry?.fieldErrors?.length && !entry?.errors?.length) {\n        onSuccess?.(payload);\n      }\n    },\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport {\n  DropzoneUserEssentialsFragment,\n  DropzoneUsersQuery,\n  DropzoneUsersQueryVariables,\n} from 'app/api/operations';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\n\nimport {\n  CurrentUserPermissionsDocument,\n  DropzoneUsersDocument,\n  DropzoneUserProfileDocument,\n  useGrantPermissionMutation,\n  useRevokePermissionMutation,\n  DropzoneUsersDetailedDocument,\n} from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport mutationHandlers from 'app/api/utils/createErrorHandler';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUserEssentialsFragment;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const [revoke] = useRevokePermissionMutation({\n    ...mutationHandlers({\n      onSuccess: (payload) => {\n        dispatch(actions.notifications.showSnackbar({ message: 'Permission revoked' }));\n      },\n      onError: (error) => {\n        dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n      },\n    }),\n    refetchQueries: [\n      { query: DropzoneUsersDocument },\n      { query: DropzoneUsersDetailedDocument },\n      {\n        query: DropzoneUserProfileDocument,\n        variables: {\n          dropzoneUserId: dropzoneUser.id,\n        },\n      },\n    ],\n    update: async (client, { data }, { variables }) => {\n      const c = client.readQuery<DropzoneUsersQuery, DropzoneUsersQueryVariables>({\n        query: DropzoneUsersDocument,\n        variables: {\n          permissions: [variables?.permissionName].filter(Boolean) as Permission[],\n          dropzoneId: state.currentDropzoneId?.toString() as string,\n        },\n      });\n\n      const updatedList = (c?.dropzoneUsers?.edges || []).filter(\n        (edge) => edge?.node?.id !== dropzoneUser?.id\n      );\n\n      client.writeQuery<DropzoneUsersQuery, DropzoneUsersQueryVariables>({\n        query: DropzoneUsersDocument,\n        variables: {\n          permissions: [variables?.permissionName].filter(Boolean) as Permission[],\n          dropzoneId: state.currentDropzoneId?.toString() as string,\n        },\n        data: {\n          ...c,\n          dropzoneUsers: {\n            edges: updatedList,\n          },\n        },\n      });\n\n      return {\n        data: {\n          ...c,\n          dropzoneUsers: {\n            edges: updatedList,\n          },\n        },\n      };\n    },\n  });\n  const [grant] = useGrantPermissionMutation({\n    ...mutationHandlers({\n      onSuccess: (payload) => {\n        dispatch(actions.notifications.showSnackbar({ message: 'Permission granted' }));\n      },\n      onError: (error) => {\n        dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' }));\n      },\n    }),\n    refetchQueries: [\n      {\n        query: DropzoneUserProfileDocument,\n        variables: {\n          dropzoneUserId: dropzoneUser.id,\n        },\n      },\n    ],\n    update: async (client, { data }, { variables }) => {\n      const c = client.readQuery<DropzoneUsersQuery, DropzoneUsersQueryVariables>({\n        query: DropzoneUsersDocument,\n        variables: {\n          permissions: [variables?.permissionName].filter(Boolean) as Permission[],\n          dropzoneId: state.currentDropzoneId?.toString() as string,\n        },\n      });\n\n      const current = c?.dropzoneUsers?.edges || [];\n      const shouldUpdate = !!current.find((edge) => edge?.node?.id === dropzoneUser?.id);\n\n      const updatedGcaList = shouldUpdate\n        ? [\n            ...(c?.dropzoneUsers?.edges || []).map((edge) =>\n              edge?.node?.id !== dropzoneUser?.id\n                ? edge\n                : {\n                    ...edge,\n                    node: {\n                      ...edge?.node,\n                      ...data?.grantPermission?.dropzoneUser,\n                    },\n                  }\n            ),\n          ]\n        : [\n            ...(c?.dropzoneUsers?.edges || []),\n            {\n              node: data?.grantPermission?.dropzoneUser,\n            },\n          ];\n      const newData = {\n        ...c,\n        dropzoneUsers: {\n          edges: updatedGcaList,\n        },\n      };\n      client.writeQuery({\n        query: CurrentUserPermissionsDocument,\n        variables: {\n          dropzoneId: Number(state.currentDropzoneId),\n          permissions: [variables?.permissionName],\n        },\n        data: newData,\n      });\n\n      return {\n        data: newData,\n      };\n    },\n  });\n\n  const badges = React.useMemo(\n    () => permissions?.filter((name) => /^actAs/.test(name)) || [],\n    [permissions]\n  );\n\n  const shouldShowBadge = React.useCallback(\n    (permission: Permission) => canGrantPermission || badges.includes(permission),\n    [badges, canGrantPermission]\n  );\n\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revoke({\n                    variables: {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                  })\n                : grant({\n                    variables: {\n                      permissionName: permission,\n                      dropzoneUserId: Number(dropzoneUser?.id),\n                    },\n                  })\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onSelect={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        timestamp={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { useApolloClient } from '@apollo/client';\nimport PermissionBadges from 'app/screens/authenticated/user/profile/UserInfo/PermissionBadges';\nimport * as React from 'react';\nimport { Button, Dialog, List, Portal, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Permission } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment, DropzoneUserProfileFragment } from 'app/api/operations';\nimport { DropzoneUserProfileFragmentDoc, useUpdateDropzoneUserMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const client = useApolloClient();\n  const getCachedUser = React.useCallback(\n    () =>\n      !state.original\n        ? null\n        : client.readFragment<DropzoneUserProfileFragment>({\n            fragment: DropzoneUserProfileFragmentDoc,\n            fragmentName: 'dropzoneUserProfile',\n            id: client.cache.identify(state.original),\n          }),\n    [client, state.original]\n  );\n  const [mutationUpdateDropzoneUser, createData] = useUpdateDropzoneUserMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          ...(state.original?.id ? { id: state.original?.id } : {}),\n          userRoleId: Number(state.fields.role.value?.id),\n          expiresAt: state.fields.expiresAt.value,\n          dropzoneUserId: Number(state.original?.id),\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    onSuccess,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Dialog visible={!!open}>\n      <ProgressBar\n        indeterminate\n        visible={createData.loading}\n        color={globalState.theme.colors.primary}\n      />\n      <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n      <Dialog.Content>\n        <DropzoneUserForm />\n        {state.original && getCachedUser() ? (\n          <>\n            <List.Subheader style={{ paddingLeft: 0 }}>Acting permissions</List.Subheader>\n            <PermissionBadges\n              dropzoneUser={getCachedUser() as DropzoneUser}\n              permissions={\n                (getCachedUser() as DropzoneUser).permissions?.filter((name) =>\n                  /^actAs/.test(name)\n                ) as Permission[]\n              }\n            />\n          </>\n        ) : null}\n      </Dialog.Content>\n      <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n        <Button\n          onPress={() => {\n            dispatch(actions.forms.dropzoneUser.reset());\n            onClose();\n          }}\n        >\n          Cancel\n        </Button>\n\n        <Button onPress={onSave}>Save</Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider, DataTable } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport { TransactionType } from 'app/api/schema.d';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\nexport default function CreditsForm() {\n  const state = useAppSelector((root) => root.forms.credits);\n  const dispatch = useAppDispatch();\n\n  const currentCredits = state.original?.credits || 0;\n  const amount = state.fields.amount.value || 0;\n\n  const subtotal =\n    state.fields.transactionType.value === TransactionType.Deposit\n      ? amount + currentCredits\n      : amount - currentCredits;\n  return (\n    <>\n      <TextInput\n        label=\"Message\"\n        value={state.fields.message.value?.toString() || ''}\n        style={{ marginHorizontal: 8 }}\n        onChange={(newValue: string) =>\n          dispatch(actions.forms.credits.setField(['message', newValue]))\n        }\n      />\n      {state.fields.transactionType.value === 'deposit' ? (\n        <View>\n          <NumberField\n            variant={NumberFieldType.Cash}\n            label=\"Add amount\"\n            error={state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChange={(newValue) => dispatch(actions.forms.credits.setField(['amount', newValue]))}\n          />\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Deposit</DataTable.Title>\n              <DataTable.Cell numeric>{`+$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      ) : (\n        <View>\n          <NumberField\n            label=\"Withdraw amount\"\n            variant={NumberFieldType.Cash}\n            error={state.fields.amount.error}\n            value={state.fields.amount.value}\n            onChange={(newValue) => dispatch(actions.forms.credits.setField(['amount', newValue]))}\n          />\n          <HelperText type={state.fields.amount.error ? 'error' : 'info'}>\n            {state.fields.amount.error || ''}\n          </HelperText>\n\n          <Divider />\n\n          <DataTable>\n            <DataTable.Row>\n              <DataTable.Title>Current balance</DataTable.Title>\n              <DataTable.Cell numeric>{`$${state.original?.credits || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>Withdraw</DataTable.Title>\n              <DataTable.Cell numeric>{`-$${state.fields.amount.value || 0}`}</DataTable.Cell>\n            </DataTable.Row>\n            <DataTable.Row>\n              <DataTable.Title>\n                <Text style={{ fontWeight: 'bold' }}>New total</Text>\n              </DataTable.Title>\n              <DataTable.Cell numeric>{`${subtotal < 0 ? '-' : ''}$${\n                subtotal < 0 ? subtotal * -1 : subtotal\n              }`}</DataTable.Cell>\n            </DataTable.Row>\n          </DataTable>\n        </View>\n      )}\n    </>\n  );\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { useCreateOrderMutation } from 'app/api/reflection';\nimport { TransactionType } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/api/crud';\nimport CreditsForm from '../../forms/credits/CreditsForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUserEssentialsFragment;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser, onSuccess } = props;\n  const dispatch = useAppDispatch();\n  const { dropzone } = useDropzoneContext();\n  const state = useAppSelector((root) => root.forms.credits);\n  const [mutationCreateOrder, createData] = useCreateOrderMutation();\n  const global = useAppSelector((root) => root.global);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.amount.value) {\n      hasErrors = true;\n      dispatch(actions.forms.credits.setFieldError(['amount', 'You must specify an amount']));\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.amount.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n\n    if (\n      !dropzoneUser?.id ||\n      !dropzoneUser?.walletId ||\n      !dropzone?.walletId ||\n      state.fields.amount.value === null ||\n      !global.currentDropzoneId\n    ) {\n      return;\n    }\n\n    try {\n      const response = await mutationCreateOrder({\n        variables: {\n          amount: state.fields.amount.value,\n          title:\n            state.fields.message.value ||\n            `${\n              state.fields.transactionType.value === TransactionType.Deposit\n                ? 'Added funds'\n                : 'Withdrew funds'\n            }`,\n          seller:\n            state.fields.transactionType.value !== TransactionType.Deposit\n              ? dropzone.walletId\n              : dropzoneUser.walletId,\n          buyer:\n            state.fields.transactionType.value === TransactionType.Deposit\n              ? dropzone.walletId\n              : dropzoneUser.walletId,\n          dropzone: dropzone.id,\n        },\n      });\n      console.debug({ response });\n      const { data: result } = response;\n\n      result?.createOrder?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'amount':\n            return dispatch(actions.forms.credits.setFieldError(['amount', message]));\n          case 'message':\n            return dispatch(actions.forms.credits.setFieldError(['message', message]));\n          case 'status':\n            return dispatch(actions.forms.credits.setFieldError(['status', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.createOrder?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.createOrder?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result?.createOrder?.fieldErrors?.length) {\n        dispatch(actions.forms.credits.reset());\n        onSuccess();\n      }\n    } catch (error) {\n      console.error(error);\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    validate,\n    dropzoneUser?.id,\n    dropzoneUser?.walletId,\n    dropzone?.walletId,\n    dropzone?.id,\n    state.fields.amount.value,\n    state.fields.message.value,\n    state.fields.transactionType.value,\n    global.currentDropzoneId,\n    mutationCreateOrder,\n    dispatch,\n    onSuccess,\n  ]);\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      loading={createData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Save\"\n      onClose={() => {\n        dispatch(actions.forms.credits.reset());\n        onClose();\n      }}\n      buttonAction={onSave}\n      scrollable={false}\n    >\n      <View style={{ marginBottom: 24 }}>\n        <Tabs\n          defaultIndex={0} // default = 0\n          onChangeIndex={(newIndex) => {\n            dispatch(\n              actions.forms.credits.setField([\n                'transactionType',\n                newIndex === 1 ? 'withdrawal' : 'deposit',\n              ])\n            );\n          }}\n          mode=\"fixed\"\n        >\n          <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n            <View />\n          </TabScreen>\n          <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n            <View />\n          </TabScreen>\n        </Tabs>\n      </View>\n      <CreditsForm />\n    </DialogOrSheet>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        user {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('Manufacturer is required')],\n    model: [isRequired('Model is required')],\n    serial: [isRequired('Serial number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"You can give your equipment a nickname\"\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Make\"\n        helperText=\"e.g Javelin, Mirage\"\n        error={state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Model\"\n        error={state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Serial\"\n        error={state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Current canopy size\"\n        error={state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Size of canopy in container\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          selected={[state.fields.rigType?.value || 'sport']}\n          onChangeSelected={([rigType]) =>\n            dispatch(actions.forms.rig.setField(['rigType', rigType]))\n          }\n        />\n      )}\n      <DatePicker\n        timestamp={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        console.log(payload);\n        onSuccess();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      const params = {\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      };\n      console.log(params);\n      const d = await updateRig.mutate(params);\n      console.log(d);\n    } else {\n      const x = await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n      console.log(x);\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField(['exitWeight', state.original.user?.exitWeight || '60'])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.user?.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Nickname\"\n        error={state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Phone\"\n        error={state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        error={state.fields.exitWeight.error}\n        onChange={(num) => dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))}\n        label=\"Exit weight (kg)\"\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { useJoinFederationMutation, DropzoneUserProfileDocument } from 'app/api/reflection';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId?: string;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const [joinFederation] = useJoinFederationMutation();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Profile has been updated`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) =>\n      dispatch(actions.notifications.showSnackbar({ message: error, variant: 'error' })),\n    mutation: {\n      refetchQueries: [\n        {\n          query: DropzoneUserProfileDocument,\n          variables: {\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      dropzoneUser: Number(state.original?.id),\n      name: state.fields.name.value,\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    const selectedLicenseFederation = state.original?.user?.userFederations?.find(\n      ({ federation }) => federation.slug === state.fields.license.value?.federation?.slug\n    );\n    if (\n      (state.fields.license.value?.id &&\n        selectedLicenseFederation?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !== selectedLicenseFederation?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federation: state.fields.license.value?.federation?.id?.toString() as string,\n          uid: state.fields?.apfNumber?.value,\n          license: state.fields.license.value?.id,\n        },\n      });\n    }\n  }, [\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.federation?.slug,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.user?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { useDropzoneUserProfileLazyQuery } from '../reflection';\n\n// Returns current user if no ID is provided\nexport default function useDropzoneUser(id?: string) {\n  const [getProfile, dropzoneUser] = useDropzoneUserProfileLazyQuery();\n  React.useEffect(() => {\n    if (id && dropzoneUser?.variables?.id !== id) {\n      getProfile({\n        variables: {\n          id,\n        },\n      });\n    }\n  }, [id, dropzoneUser?.variables?.id, getProfile]);\n\n  return {\n    ...dropzoneUser,\n    dropzoneUser: dropzoneUser?.data?.dropzoneUser,\n  };\n}\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function useProfileWizard() {\n  const navigation = useNavigation();\n  const { currentUser } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (index?: number) => {\n      if (currentUser) {\n        dispatch(actions.forms.user.setOriginal(currentUser));\n        if (currentUser?.user?.rigs?.length) {\n          dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n        }\n\n        navigation.navigate('Wizards', {\n          screen: 'UserWizardScreen',\n          params: {\n            index,\n          },\n        });\n      }\n    },\n    [currentUser, dispatch, navigation]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Caption, Divider, Paragraph, Title, TouchableRipple } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport startCase from 'lodash/startCase';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUserProfileFragment;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n}\n\nconst badgesInitials = {\n  [Permission.ActAsLoadMaster]: 'LM',\n  [Permission.ActAsPilot]: 'Pilot',\n  [Permission.ActAsRigInspector]: 'Rig.Insp',\n  [Permission.ActAsGca]: 'GCA',\n  [Permission.ActAsDzso]: 'DZSO',\n};\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  const actingPermissions = (\n    dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || []\n  ).map((str) => badgesInitials[str as keyof typeof badgesInitials]);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            {!dropzoneUser?.user?.image ? (\n              <Avatar.Icon size={80} icon=\"account\" />\n            ) : (\n              <Avatar.Image\n                size={80}\n                source={{ uri: dropzoneUser?.user.image }}\n                style={{ backgroundColor: palette.primary.light }}\n              />\n            )}\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            setOpen={setContactOpen}\n            open={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n            {actingPermissions.length ? (\n              <Caption style={{ marginTop: 4 }}>\n                {` ${actingPermissions.map(startCase).join(', ')}`}\n              </Caption>\n            ) : null}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\n\nimport { FAB, useTheme } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useNavigation } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Alert } from 'react-native';\nimport { DropzoneUsersDocument, useArchiveUserMutation } from 'app/api/reflection';\nimport { errorColor, infoColor, successColor, warningColor } from 'app/constants/Colors';\nimport { useUserNavigation } from '../useUserNavigation';\n\ntype PropsOf<T> = T extends React.ComponentType<infer P> ? P : never;\ntype FABActions = PropsOf<typeof FAB.Group>['actions'];\ninterface IUserActionsButtonProps {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  visible?: boolean;\n}\nexport default function UserActionsButton(props: IUserActionsButtonProps) {\n  const { dropzoneUser, visible } = props;\n  const { currentUser } = useDropzoneContext();\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const navigation = useUserNavigation();\n  const rootNavigator = useNavigation();\n  const theme = useTheme();\n\n  const onClickSetupWizard = React.useCallback(() => {\n    if (dropzoneUser) {\n      dispatch(actions.forms.user.setOriginal(dropzoneUser));\n      if (dropzoneUser?.user?.rigs?.length) {\n        dispatch(actions.forms.rig.setOriginal(dropzoneUser.user.rigs[0]));\n      }\n      rootNavigator.navigate('Wizards', {\n        screen: 'UserWizardScreen',\n        params: { index: undefined },\n      });\n    }\n  }, [dispatch, dropzoneUser, rootNavigator]);\n\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n\n  const onClickTransactions = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('OrdersScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickEquipment = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickAddFunds = React.useCallback(() => {\n    if (dropzoneUser) {\n      dispatch(actions.forms.credits.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const onClickEdit = React.useCallback(() => {\n    if (dropzoneUser?.user) {\n      dispatch(actions.forms.user.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const isSelf = React.useMemo(\n    () => currentUser?.id === dropzoneUser?.id,\n    [currentUser?.id, dropzoneUser?.id]\n  );\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const canDeleteUsers = useRestriction(Permission.DeleteUser);\n\n  const [deleteUser] = useArchiveUserMutation();\n\n  const onDeleteUser = React.useCallback(() => {\n    Alert.alert(\n      isSelf ? 'Delete My Account' : `Delete ${dropzoneUser?.user?.name}`,\n      isSelf\n        ? 'Are you sure you want to delete your account? You will be logged out'\n        : 'Are you sure you want to delete this user ? ',\n      [\n        { style: 'cancel', text: 'Cancel', onPress: () => null },\n        {\n          style: 'destructive',\n          text: 'Yes, delete',\n          onPress: async () => {\n            try {\n              const { data } = await deleteUser({\n                variables: {\n                  id: Number(dropzoneUser?.id),\n                },\n                refetchQueries: [DropzoneUsersDocument],\n              });\n\n              data?.deleteUser?.errors?.forEach((message) => {\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message,\n                    variant: 'success',\n                  })\n                );\n              });\n              if (data?.deleteUser?.dropzoneUser?.id) {\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `${dropzoneUser?.user?.name} has been removed`,\n                    variant: 'success',\n                  })\n                );\n              }\n\n              navigation.goBack();\n            } catch (e) {\n              console.log(e);\n            }\n          },\n        },\n      ]\n    );\n  }, [deleteUser, dispatch, dropzoneUser?.id, dropzoneUser?.user?.name, isSelf, navigation]);\n\n  const fabActions = React.useMemo(\n    () =>\n      [\n        isSelf && canUpdateUsers\n          ? {\n              icon: 'pencil',\n              label: 'Edit',\n              onPress: onClickEdit,\n            }\n          : null,\n        {\n          icon: 'account-convert',\n          label: 'Setup Wizard',\n          color: infoColor,\n          onPress: onClickSetupWizard,\n        },\n        canUpdateUsers\n          ? {\n              icon: 'lock',\n              label: 'Access & Membership',\n              color: warningColor,\n              onPress: onClickAccessAndMembership,\n            }\n          : null,\n        canAddTransaction\n          ? {\n              icon: 'cash-plus',\n              label: 'Add Funds',\n              color: successColor,\n              onPress: onClickAddFunds,\n            }\n          : null,\n        isSelf || canViewOthersTransactions\n          ? {\n              icon: 'account-cash',\n              label: 'Manage Transactions',\n              onPress: onClickTransactions,\n            }\n          : null,\n        {\n          icon: 'parachute',\n          label: 'Manage Equipment',\n          onPress: onClickEquipment,\n        },\n        canDeleteUsers\n          ? {\n              icon: 'account-off',\n              label: 'Delete user',\n              onPress: onDeleteUser,\n              color: errorColor,\n            }\n          : null,\n      ].filter(Boolean) as FABActions,\n    [\n      canAddTransaction,\n      canDeleteUsers,\n      canUpdateUsers,\n      canViewOthersTransactions,\n      isSelf,\n      onClickAccessAndMembership,\n      onClickAddFunds,\n      onClickEdit,\n      onClickEquipment,\n      onClickSetupWizard,\n      onClickTransactions,\n      onDeleteUser,\n    ]\n  );\n\n  return (\n    <FAB.Group\n      testID=\"user-profile-fab\"\n      open={fabOpen}\n      visible={(!!dropzoneUser?.id && visible) || false}\n      icon={fabOpen ? 'close' : 'account-edit'}\n      fabStyle={{\n        marginLeft: 16,\n        marginBottom: 16,\n        backgroundColor: theme.colors.primary,\n      }}\n      onStateChange={({ open }) => setFabOpen(open)}\n      actions={fabActions}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { UserSlotDetailsFragment } from 'app/api/operations';\n\ninterface ISlot {\n  slot: UserSlotDetailsFragment;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <List.Item\n            description={`on Load #${slot.load.loadNumber}`}\n            title={slot.jumpType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text\n                  style={[\n                    styles.jumpType,\n                    {\n                      color: theme.colors.onSurface,\n                    },\n                  ]}\n                >\n                  -${slot.cost?.toFixed(2)}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  width: 100,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <Avatar.Icon\n                  icon=\"parachute-outline\"\n                  size={48}\n                  style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n    flexGrow: 1,\n  },\n  jumpType: {\n    fontSize: 16,\n    fontFamily: 'Roboto_400Regular',\n    fontWeight: '400',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n    flexGrow: 1,\n    minWidth: 150,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\nimport enAU from 'date-fns/locale/en-AU';\n\nimport { groupBy, map } from 'lodash';\nimport { differenceInDays, format, formatDistance, parseISO, startOfDay } from 'date-fns';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\n\nimport SlotCard from '../SlotCard';\n\nexport interface IJumpHistoryTab {\n  tabIndex: number;\n  currentTabIndex: number;\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n}\nexport default function JumpHistoryTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useNavigation();\n\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.slots?.edges, (e) =>\n          startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n        ),\n        (d, t) => {\n          const date = parseISO(t);\n          const title =\n            differenceInDays(new Date(), date) > 7\n              ? format(date, 'dd MMM, yyyy')\n              : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n          return {\n            title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.slots?.edges]\n  );\n\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n      style={{ padding: 8 }}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <SlotCard\n                slot={item.node}\n                onPress={() => {\n                  if (item?.node?.load?.id) {\n                    navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Manifest',\n                        params: {\n                          screen: 'LoadScreen',\n                          params: {\n                            loadId: item.node?.load?.id,\n                          },\n                        },\n                      },\n                    });\n                  }\n                }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n} from 'app/api/operations';\nimport { DropzoneUser } from 'app/api/schema.d';\nimport { successColor } from 'app/constants/Colors';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { DateTime } from 'luxon';\n\ninterface IOrder {\n  order: OrderEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const isSelfBuyer =\n    order.buyer?.__typename === 'DropzoneUser' &&\n    (order.buyer as DropzoneUser)?.id === dropzoneUser?.id;\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    isSelfBuyer === dropzoneUser?.id ? 'cash-minus' : 'cash-plus';\n\n  const right = React.useCallback(\n    () => (\n      <Text\n        style={{\n          fontSize: 16,\n          fontFamily: 'Roboto_400Regular',\n          fontWeight: '400',\n          textAlign: 'center',\n          alignSelf: 'center',\n          color: theme.colors.onSurface,\n        }}\n      >\n        {`${isSelfBuyer ? '-$' : '$'}${order.amount.toFixed(2)}`}\n      </Text>\n    ),\n    [isSelfBuyer, order.amount, theme.colors.onSurface]\n  );\n\n  const left = React.useCallback(\n    () => (\n      <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n        {showAvatar ? (\n          <UserAvatar\n            style={{ alignSelf: 'center', marginHorizontal: 12 }}\n            size={60}\n            name={\n              (order?.seller as DropzoneUserEssentialsFragment)?.user?.name ||\n              (order?.seller as DropzoneEssentialsFragment).name ||\n              ''\n            }\n            image={\n              (order?.seller as DropzoneUserEssentialsFragment).user?.image ||\n              (order?.seller as DropzoneEssentialsFragment).banner ||\n              undefined\n            }\n          />\n        ) : (\n          <MaterialCommunityIcons\n            color={\n              // eslint-disable-next-line no-underscore-dangle\n              '__typename' in order.buyer &&\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              order.buyer.__typename === 'DropzoneUser' &&\n              (order.buyer as DropzoneUserEssentialsFragment)?.id === dropzoneUser?.id\n                ? '#FF1414'\n                : successColor\n            }\n            name={icon}\n            size={36}\n            style={{ marginHorizontal: 16 }}\n          />\n        )}\n      </View>\n    ),\n    [dropzoneUser?.id, icon, order.buyer, order?.seller, showAvatar]\n  );\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Caption\n          style={{\n            textAlign: 'right',\n            paddingRight: 4,\n            paddingTop: 2,\n            marginBottom: 0,\n          }}\n        >\n          {DateTime.fromISO(order?.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n        </Caption>\n        <Card.Content style={styles.orderContent}>\n          <List.Item\n            title={\n              (order?.seller as DropzoneUser)?.user?.name ||\n              (order?.seller as DropzoneEssentialsFragment)?.name\n            }\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            description={order.title || null}\n            descriptionStyle={styles.orderDescription}\n            {...{ right, left }}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport JumpHistoryTab from './JumpHistory';\nimport FundTab from './Transactions';\nimport EquipmentTab from './Equipment';\n\n// const ProfileTabs = createMaterialTopTabNavigator();\n\ninterface IProfileTabsProps {\n  onChange(tab: ProfileTabs): void;\n}\n\nexport enum ProfileTabs {\n  Funds,\n  Jumps,\n  Equipment,\n}\n\nexport function ProfileTab(props: {\n  active: ProfileTabs;\n  dropzoneUser: DropzoneUserProfileFragment;\n}) {\n  const { active, dropzoneUser } = props;\n  if (active === ProfileTabs.Funds) {\n    return <FundTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Funds} currentTabIndex={active} />;\n  }\n  if (active === ProfileTabs.Equipment) {\n    return (\n      <EquipmentTab\n        {...{ dropzoneUser }}\n        tabIndex={ProfileTabs.Equipment}\n        currentTabIndex={active}\n      />\n    );\n  }\n  if (active === ProfileTabs.Jumps) {\n    return (\n      <JumpHistoryTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Jumps} currentTabIndex={active} />\n    );\n  }\n  return null;\n}\nexport default function TabBar(props: IProfileTabsProps) {\n  const { onChange } = props;\n  const { colors, dark } = useAppSelector((state) => state.global.theme);\n\n  return (\n    <Tabs\n      defaultIndex={ProfileTabs.Jumps}\n      disableSwipe\n      style={{ backgroundColor: colors.surface }}\n      mode=\"fixed\"\n      dark={dark}\n    >\n      <TabScreen label=\"Funds\" icon=\"cash\" key=\"funds\" onPress={() => onChange(0)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Jumps\" icon=\"airplane-takeoff\" key=\"jumps\" onPress={() => onChange(1)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Equipment\" icon=\"parachute\" key=\"equipment\" onPress={() => onChange(2)}>\n        <View />\n      </TabScreen>\n    </Tabs>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\n\nimport { DropzoneUserProfileFragment, OrderEssentialsFragment } from 'app/api/operations';\n\nimport { groupBy, map } from 'lodash';\nimport startOfDay from 'date-fns/startOfDay';\nimport parseISO from 'date-fns/parseISO';\nimport differenceInDays from 'date-fns/differenceInDays';\nimport format from 'date-fns/format';\nimport { enAU } from 'date-fns/locale';\nimport formatDistance from 'date-fns/formatDistance';\nimport { DateTime, Duration } from 'luxon';\nimport OrderCard from '../../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../../useUserNavigation';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function TransactionsTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useUserNavigation();\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.orders?.edges, (e) =>\n          DateTime.fromISO(e?.node?.createdAt).startOf('day').toISO()\n        ),\n        (d, t) => {\n          const date = DateTime.fromISO(t);\n          const title =\n            date.diffNow('days') > Duration.fromDurationLike({ days: 7 })\n              ? date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)\n              : date.toRelative({ locale: 'au', round: true, style: 'long' });\n          return {\n            title: date.startOf('day').hasSame(DateTime.local(), 'day') ? 'Today' : title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.orders?.edges]\n  );\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <OrderCard\n                showAvatar\n                onPress={() =>\n                  item?.node?.id &&\n                  dropzoneUser &&\n                  navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser?.id,\n                  })\n                }\n                order={item?.node as OrderEssentialsFragment}\n                {...{ dropzoneUser }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\n\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { actions, useAppDispatch } from 'app/state';\n\nimport RigCard from '../../equipment/RigCard';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function EquipmentTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const dispatch = useAppDispatch();\n  return (\n    <View\n      animation={currentTabIndex < tabIndex ? 'slideInRight' : 'slideInLeft'}\n      duration={200}\n      easing=\"ease-in-out\"\n      style={{ padding: 8 }}\n    >\n      {dropzoneUser?.user?.rigs?.map((item) => (\n        <RigCard\n          {...{ dropzoneUser }}\n          onSuccessfulImageUpload={() => null}\n          rig={item}\n          rigInspection={dropzoneUser?.rigInspections?.find(\n            (insp) => insp.rig?.id === item.id && insp.isOk\n          )}\n          onPress={() => {\n            dispatch(actions.forms.rig.setOpen(item));\n          }}\n        />\n      ))}\n    </View>\n  );\n}\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { FlatList, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Chip, Divider, ProgressBar } from 'react-native-paper';\nimport Skeleton from 'app/components/Skeleton';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport CreditsSheet from 'app/components/dialogs/CreditsDialog/Credits';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\n// eslint-disable-next-line max-len\nimport useDropzoneUserProfile from 'app/api/hooks/useDropzoneUserProfile';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUpdateUserMutation } from 'app/api/reflection';\n\nimport { errorColor, successColor } from 'app/constants/Colors';\nimport { format } from 'date-fns';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\n\nimport UserActionsButton from './UserActions';\nimport TabBar, { ProfileTab } from './tabs';\n\nexport type ProfileRoute = {\n  ProfileScreen: {\n    userId: string;\n  };\n};\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const { currentUser } = useDropzoneContext();\n  const route = useRoute<RouteProp<ProfileRoute>>();\n\n  const { dropzoneUser, loading, refetch } = useDropzoneUserProfile(\n    route.params.userId || currentUser?.id\n  );\n  const pickImage = useImagePicker();\n  const isFocused = useIsFocused();\n  const [defaultIndex, onChangeIndex] = React.useState(1);\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n  const headerRight = React.useCallback(\n    () =>\n      !currentUser?.expiresAt ? null : (\n        <Chip\n          onPress={onClickAccessAndMembership}\n          style={{\n            marginRight: 16,\n            height: 24,\n            backgroundColor:\n              currentUser.expiresAt * 1000 < new Date().getTime() ? errorColor : successColor,\n          }}\n          textStyle={{ color: 'white', marginTop: 0 }}\n        >\n          {format(currentUser.expiresAt * 1000, 'dd/MM/yy')}\n        </Chip>\n      ),\n    [currentUser?.expiresAt, onClickAccessAndMembership]\n  );\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({\n        headerRight,\n      });\n      refetch();\n    }\n  }, [headerRight, isFocused, navigation, refetch]);\n\n  const [mutationUpdateUser] = useUpdateUserMutation();\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            dropzoneUser: Number(dropzoneUser?.id),\n            image: `data:image/jpeg;base64,${base64}`,\n          },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.id, mutationUpdateUser, pickImage]);\n\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const openWizard = useProfileWizard();\n\n  const getContent = React.useCallback(\n    ({ index }: { index: number }) => {\n      if (index === 0) {\n        return <TabBar onChange={onChangeIndex} />;\n      }\n      if (dropzoneUser) {\n        return <ProfileTab active={defaultIndex} {...{ dropzoneUser }} />;\n      }\n      return null;\n    },\n    [defaultIndex, dropzoneUser]\n  );\n  return (\n    <>\n      <View style={StyleSheet.absoluteFill}>\n        {loading && (\n          <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n        )}\n        <FlatList\n          style={{ backgroundColor: state.theme.colors.background }}\n          contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n          refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n          keyExtractor={(_, idx) => `profile-${idx}`}\n          ListHeaderComponent={() => (\n            <View style={styles.wrappingHeader}>\n              <View style={{ width: '100%' }}>\n                {!dropzoneUser ? (\n                  <Skeleton\n                    key=\"profile-header\"\n                    containerStyle={{\n                      height: 256,\n                      width: '100%',\n                    }}\n                    isLoading\n                    layout={[{ key: 'header', width: '100%', height: 256, borderRadius: 8 }]}\n                  />\n                ) : (\n                  <Header dropzoneUser={dropzoneUser} onPressAvatar={onPickImage}>\n                    <InfoGrid\n                      style={{ height: 80 }}\n                      items={[\n                        {\n                          title: 'Funds',\n                          value: `$${dropzoneUser?.credits || 0}`,\n                          onPress: () => {\n                            if (dropzoneUser && canAddTransaction) {\n                              dispatch(actions.forms.credits.setOpen(dropzoneUser));\n                            }\n                          },\n                        },\n                        {\n                          title: 'License',\n                          value: `${dropzoneUser?.license?.name || '-'}`,\n                          onPress: () => {\n                            openWizard(5);\n                          },\n                        },\n                        {\n                          title: 'Exit weight',\n                          onPress: () => {\n                            openWizard(9);\n                          },\n                          value:\n                            Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                        },\n                      ]}\n                    />\n                    <Divider style={styles.divider} />\n                  </Header>\n                )}\n              </View>\n            </View>\n          )}\n          renderItem={getContent}\n          data={[null, null]}\n        />\n\n        <RigDialog\n          onClose={onCloseRigForm}\n          onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n          open={forms.rig.open}\n          userId={Number(dropzoneUser?.user?.id)}\n        />\n\n        <DropzoneUserDialog\n          onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n          onSuccess={(user) => {\n            dispatch(actions.forms.dropzoneUser.setOpen(false));\n            if (currentUser?.id === dropzoneUser?.id) {\n              dispatch(actions.global.setUser(user.user));\n              refetch();\n            }\n          }}\n          open={forms.dropzoneUser.open}\n        />\n\n        <CreditsSheet\n          onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n          onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n          open={forms.credits.open}\n          dropzoneUser={dropzoneUser || undefined}\n        />\n\n        <EditUserSheet\n          dropzoneUserId={dropzoneUser?.id}\n          onClose={onUserSheetClose}\n          onSuccess={() => {\n            dispatch(actions.forms.user.setOpen(false));\n          }}\n          open={forms.user.open}\n        />\n      </View>\n      <UserActionsButton {...{ dropzoneUser }} visible={isFocused} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    // flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { SectionList, StyleSheet, View } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CreditsSheet from 'app/components/dialogs/CreditsDialog/Credits';\n\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { groupBy, map } from 'lodash';\nimport { formatDistance, parseISO, startOfDay, differenceInDays, format } from 'date-fns';\nimport enAU from 'date-fns/locale/en-AU';\nimport { OrderEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUserProfileQuery } from 'app/api/reflection';\nimport OrderCard from '../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport type OrdersRoute = {\n  OrdersScreen: {\n    userId: string;\n  };\n};\nexport default function OrdersScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useDropzoneContext();\n  const route = useRoute<RouteProp<OrdersRoute>>();\n  const { data, loading, refetch } = useDropzoneUserProfileQuery({\n    variables: {\n      id: (route?.params?.userId || currentUser?.id) as string,\n    },\n    skip: !(route?.params?.userId || currentUser?.id),\n  });\n  const dropzoneUser = React.useMemo(() => data?.dropzoneUser, [data?.dropzoneUser]);\n\n  const isFocused = useIsFocused();\n  const navigation = useUserNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name?.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: state.theme.colors.surface }}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <SectionList\n        sections={map(\n          groupBy(dropzoneUser?.orders?.edges, (e) =>\n            startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n          ),\n          (d, t) => {\n            const date = parseISO(t);\n            const title =\n              differenceInDays(new Date(), date) > 7\n                ? format(date, 'dd MMM, yyyy')\n                : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n            return {\n              title,\n              data: d,\n            };\n          }\n        )}\n        renderSectionHeader={({ section: { title } }) => <List.Subheader>{title}</List.Subheader>}\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            showAvatar\n            onPress={() =>\n              !item?.node || !dropzoneUser\n                ? null\n                : navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser.id,\n                  })\n            }\n            order={item?.node as OrderEssentialsFragment}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useDropzoneUserProfileQuery } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport RigDialog from 'app/components/dialogs/Rig';\n\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport useRestriction from 'app/hooks/useRestriction';\nimport RigCard from './RigCard';\n\nexport type EquipmentRoute = {\n  EquipmentScreen: {\n    userId: string;\n  };\n};\nexport default function EquipmentScreen() {\n  const globalState = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useDropzoneContext();\n  const navigation = useNavigation();\n\n  const route = useRoute<RouteProp<EquipmentRoute, 'EquipmentScreen'>>();\n\n  const { data, loading, refetch } = useDropzoneUserProfileQuery({\n    variables: {\n      id: (route?.params?.userId || currentUser?.id) as string,\n    },\n    skip: !(route?.params?.userId || currentUser?.id),\n  });\n\n  const dropzoneUser = React.useMemo(() => data?.dropzoneUser, [data?.dropzoneUser]);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        keyExtractor={(item) => `rig-${item?.id}`}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={canUpdateUser}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { format, parseISO } from 'date-fns';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from 'app/constants/Colors';\nimport { TransactionEssentialsFragment } from 'app/api/operations';\nimport { DateTime } from 'luxon';\n\ninterface ITransaction {\n  transaction: TransactionEssentialsFragment;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n              color: theme.colors.onSurface,\n            }}\n          >\n            {transaction?.createdAt &&\n              DateTime.fromISO(transaction.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Wallet } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n  ReceiptEssentialsFragment,\n} from 'app/api/operations';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: ReceiptEssentialsFragment;\n  index: number;\n  order: OrderEssentialsFragment;\n}\n\nexport default function ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const { currentUser } = useDropzoneContext();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | DropzoneEssentialsFragment | DropzoneUserEssentialsFragment) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        ?.filter((transaction) => isUser(transaction.receiver as DropzoneUserEssentialsFragment))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { RouteProp, useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from 'app/constants/Colors';\nimport LottieView from 'app/components/LottieView';\nimport { Dropzone, DropzoneUser } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport UserAvatar from 'app/components/UserAvatar';\nimport lottieTicketAnimation from 'app/../assets/images/ticket.json';\nimport useDropzoneUserProfile from 'app/api/hooks/useDropzoneUserProfile';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport ReceiptCard from './ReceiptCard';\n\nexport type OrderReceiptRoute = {\n  OrderReceiptScreen: {\n    orderId: string;\n    userId: string;\n  };\n};\nexport default function OrderScreen() {\n  const route = useRoute<RouteProp<OrderReceiptRoute, 'OrderReceiptScreen'>>();\n  const theme = useTheme();\n  const { orderId, userId } = route.params;\n  const { dropzoneUser } = useDropzoneUserProfile(userId);\n  const order = React.useMemo(\n    () =>\n      dropzoneUser?.orders?.edges?.map((edge) => edge?.node).find((node) => node?.id === orderId),\n    [dropzoneUser?.orders?.edges, orderId]\n  );\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                  color: theme.colors.onSurface,\n                }}\n              >{`Order #${order?.id || ''}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                  color: theme.colors.onSurface,\n                }}\n              >\n                {order?.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order?.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as DropzoneEssentialsFragment)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name ||\n                (order?.seller as DropzoneEssentialsFragment)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\n\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport UsersScreen, { UserListRoute } from './user_list/UsersScreen';\nimport SearchableAppBar from './user_list/AppBar';\nimport RigInspectionScreen, { RigInspectionRoute } from './rig_inspection/RigInspectionScreen';\nimport ProfileScreen, { ProfileRoute } from './profile/ProfileScreen';\nimport OrdersScreen, { OrdersRoute } from './orders/OrdersScreen';\nimport EquipmentScreen, { EquipmentRoute } from './equipment/EquipmentScreen';\nimport OrderReceiptScreen, { OrderReceiptRoute } from './order_receipt/OrderScreen';\n\nexport type UserRoutes = EquipmentRoute &\n  OrderReceiptRoute &\n  RigInspectionRoute &\n  ProfileRoute &\n  UserListRoute &\n  OrdersRoute;\n\nconst Users = createStackNavigator<UserRoutes>();\n\nexport default function Routes() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useDropzoneContext();\n\n  return (\n    <AppSignalBoundary>\n      <Users.Navigator\n        screenOptions={{\n          cardStyle: {\n            flex: 1,\n          },\n          presentation: 'modal',\n        }}\n      >\n        <Users.Screen\n          name=\"UserListScreen\"\n          component={UsersScreen}\n          options={{\n            title: 'Dropzone users',\n            headerShown: true,\n            header: (props) => (\n              <SearchableAppBar\n                {...props}\n                searchText={searchText}\n                searchVisible={isSearchVisible}\n                setSearchVisible={(visible) =>\n                  dispatch(actions.screens.users.setSearchVisible(visible))\n                }\n                onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n              />\n            ),\n          }}\n        />\n        <Users.Screen\n          name=\"ProfileScreen\"\n          component={ProfileScreen}\n          options={{ title: 'User' }}\n          initialParams={{\n            userId: currentUser?.id,\n          }}\n        />\n        <Users.Screen\n          name=\"RigInspectionScreen\"\n          component={RigInspectionScreen}\n          options={{ title: 'Inspection' }}\n        />\n        <Users.Screen\n          name=\"OrdersScreen\"\n          component={OrdersScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Users.Screen\n          name=\"EquipmentScreen\"\n          component={EquipmentScreen}\n          options={{ title: 'Equipment' }}\n        />\n        <Users.Screen\n          name=\"OrderReceiptScreen\"\n          component={OrderReceiptScreen}\n          options={{ title: 'Order' }}\n        />\n      </Users.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { NavigationProp, NavigatorScreenParams, useNavigation } from '@react-navigation/core';\n\nimport DropzoneWizardScreen from './dropzone_wizard/DropzoneWizard';\nimport UserWizardScreen from './user_wizard/UserWizardScreen';\nimport RecoverPasswordScreen from './recover_password/RecoverPasswordScreen';\nimport ConfirmUserScreen from './confirm_user/ConfirmUserScreen';\nimport ChangePasswordScreen from './change_password/ChangePasswordScreen';\nimport User, { UserRoutes } from '../authenticated/user/routes';\n\nexport type WizardRoutes = {\n  DropzoneWizardScreen: undefined;\n  UserWizardScreen: {\n    index?: number;\n  };\n  ConfirmUserScreen: undefined;\n  RecoverPasswordScreen: undefined;\n  ChangePasswordScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Wizards = createStackNavigator<WizardRoutes>();\n\nexport function useWizardRoutes() {\n  return useNavigation<NavigationProp<WizardRoutes>>();\n}\n\nexport default function Routes() {\n  return (\n    <Wizards.Navigator\n      screenOptions={{\n        headerShown: false,\n        presentation: 'modal',\n        cardStyle: { flex: 1 },\n      }}\n    >\n      <Wizards.Screen name=\"DropzoneWizardScreen\" component={DropzoneWizardScreen} />\n      <Wizards.Screen name=\"UserWizardScreen\" component={UserWizardScreen} />\n      <Wizards.Screen name=\"RecoverPasswordScreen\" component={RecoverPasswordScreen} />\n      <Wizards.Screen name=\"ConfirmUserScreen\" component={ConfirmUserScreen} />\n      <Wizards.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} />\n      <Wizards.Screen name=\"User\" component={User} />\n    </Wizards.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`info-grid-${i}`}>\n            <View style={{ flex }}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </React.Fragment>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { DropzoneExtensiveFragment } from 'app/api/operations';\nimport InfoGrid from 'app/screens/authenticated/dropzone/load/InfoGrid';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme, currentRouteName: routeName } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { currentUser, dropzone, loading } = useDropzoneContext();\n  const { dropzones } = useDropzonesContext();\n\n  const navigation = useNavigation();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'User',\n                  params: {\n                    screen: 'ProfileScreen',\n                    params: {\n                      userId: currentUser?.id as string,\n                    },\n                  },\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Dropzone\">\n          {dropzone?.currentUser?.user?.moderationRole !== ModerationRole.User ? (\n            <Drawer.Item\n              label=\"Admin\"\n              active={/Overview/.test(routeName || '')}\n              icon=\"view-dashboard\"\n              onPress={() => {\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Overview',\n                    params: {\n                      screen: 'OverviewScreen',\n                    },\n                  },\n                });\n              }}\n            />\n          ) : null}\n          <Drawer.Item\n            label=\"Overview\"\n            active={/Dashboard/.test(routeName || '')}\n            icon=\"view-dashboard-outline\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Overview',\n                  params: {\n                    screen: 'DashboardScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(routeName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={routeName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'Configuration',\n                    params: {\n                      screen: 'TransactionsScreen',\n                    },\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'SettingsMenuScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Profile\"\n            active={routeName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Wizards', {\n                screen: 'User',\n                params: {\n                  screen: 'ProfileScreen',\n                  params: {\n                    userId: currentUser?.id as string,\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={routeName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'EquipmentScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={routeName === 'NotificationsScreen'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Notifications',\n                  params: {\n                    screen: 'NotificationsScreen',\n                  },\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={routeName === 'OrdersScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'OrdersScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Log out\"\n            icon=\"logout\"\n            onPress={() => {\n              dispatch(actions.global.logout());\n              navigation.dispatch(DrawerActions.closeDrawer());\n            }}\n          />\n        </Drawer.Section>\n\n        <Drawer.Section title=\"Switch dropzone\">\n          {dropzones?.map((item) => (\n            <Drawer.Item\n              key={`${item?.id}-dz`}\n              label={item?.name || ''}\n              icon={\n                item?.banner\n                  ? ({ size }) => (\n                      <Avatar.Image source={{ uri: item?.banner as string }} {...{ size }} />\n                    )\n                  : 'map-marker'\n              }\n              active={dropzone?.id === item?.id}\n              onPress={() => {\n                if (item) {\n                  dispatch(actions.global.setDropzone(item as DropzoneExtensiveFragment));\n                  navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'ManifestScreen',\n                      },\n                    },\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    marginLeft: 32,\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginLeft: 32,\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","import * as React from 'react';\nimport { Paragraph, useTheme, IconButton } from 'react-native-paper';\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\nimport Color from 'color';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  const { width } = useWindowDimensions();\n  const theme = useTheme();\n  const textColor =\n    Color(theme.colors.primary).contrast(Color(theme.colors.onSurface)) < 11\n      ? theme.colors.surface\n      : theme.colors.onSurface;\n  return (\n    <View style={[styles.warning, { backgroundColor: theme.colors.primary }]}>\n      <Paragraph\n        style={{ width: action ? width - 56 : width, color: textColor, flexGrow: 1 }}\n        adjustsFontSizeToFit\n        allowFontScaling\n      >\n        {title}\n      </Paragraph>\n      {!action ? null : (\n        <View style={{ width: 40 }}>\n          <IconButton icon=\"launch\" color={textColor} onPress={action} style={{ width: 24 }} />\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n  const navigation = useNavigation();\n  const { currentUser } = useDropzoneContext();\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning\n        title=\"Your reserve repack is due. You can update the repack date on your profile\"\n        action={() =>\n          currentUser?.id &&\n          navigation.navigate('Authenticated', {\n            screen: 'LeftDrawer',\n            params: {\n              screen: 'Manifest',\n              params: {\n                screen: 'User',\n                params: { screen: 'EquipmentScreen', params: { userId: currentUser.id } },\n              },\n            },\n          })\n        }\n      />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport SetupWarning from './SetupWarning';\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { hideWarnings, back, options } = props;\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const { currentUser, loading, dropzone } = useDropzoneContext();\n\n  const navigation = useNavigation();\n  const { openDrawer } = useNavigation<DrawerNavigationProp<never>>();\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {back ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton icon=\"menu\" size={32} onPress={openDrawer} />\n        )}\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n\n        {options.headerRight ? (\n          options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{\n              backgroundColor: palette.background,\n              height: 36,\n              padding: 4,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            mode=\"flat\"\n            textStyle={{\n              color: palette.onSurface,\n              fontFamily: 'Roboto_700Bold',\n            }}\n          >{`$${currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!currentUser?.expiresAt && currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!currentUser?.rigInspections?.length}\n          isRigSetUp={!!currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            console.log('opening setup wizard');\n            if (currentUser) {\n              dispatch(actions.forms.user.setOriginal(currentUser));\n              console.log(currentUser);\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n              }\n\n              navigation.navigate('Wizards', {\n                screen: 'UserWizardScreen',\n                params: {\n                  index: undefined\n                }\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Select, { ISelectOption } from 'app/components/input/select/Select';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport Chip from './Chip';\n\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsGca],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"radio-handheld\">\n        {item?.label || 'No GCA'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"radio-handheld\">\n      {value?.user?.name || 'No gca'}\n    </Chip>\n  ) : (\n    <Select<DropzoneUserEssentialsFragment>\n      value={selected}\n      options={options}\n      onChange={onSelect}\n      renderAnchor={renderAnchor}\n    />\n  );\n}\n","import { DropzoneUserEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface ILoadMasterChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: SlotDetailsFragment[];\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      slots?.map((slot) => ({\n        label: slot?.dropzoneUser?.user?.name || '',\n        value: slot?.dropzoneUser as DropzoneUserEssentialsFragment,\n        avatar: slot?.dropzoneUser?.user?.image,\n      })) || [],\n    [slots]\n  );\n\n  const selected = React.useMemo(\n    () => slots?.map((slot) => slot?.dropzoneUser)?.find((node) => node?.id === value?.id),\n    [slots, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-account\">\n        {item?.label || 'No LM'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"shield-account\">\n      {value?.user?.name || 'No LM'}\n    </Chip>\n  ) : (\n    <Select<DropzoneUserEssentialsFragment>\n      value={selected}\n      options={options}\n      renderAnchor={renderAnchor}\n      onChange={onSelect}\n    />\n  );\n}\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsPilot],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-airplane\">\n        {item?.label || 'No Pilot'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"shield-airplane\">\n      {value?.user?.name || 'No Pilot'}\n    </Chip>\n  ) : (\n    <Select<DropzoneUserEssentialsFragment>\n      value={selected}\n      options={options}\n      renderAnchor={renderAnchor}\n      onChange={onSelect}\n    />\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { usePlanesQuery } from '../../api/reflection';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPlaneChipSelect {\n  value?: PlaneEssentialsFragment | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<PlaneEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"airplane\">\n        {item?.label || 'No Plane'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} icon=\"airplane\">\n      {value?.name || 'No Plane'}\n    </Chip>\n  ) : (\n    <Select<PlaneEssentialsFragment>\n      value={selected}\n      options={options}\n      renderAnchor={renderAnchor}\n      onChange={onSelect}\n    />\n  );\n}\n","import * as React from 'react';\nimport SkeletonContent from 'app/components/Skeleton';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  userId?: number | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: JumpTypeEssentialsFragment): void;\n}\n\nexport default function JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect\n        autoSelectFirst\n        items={\n          uniqBy(\n            [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n            ({ id }) => id\n          ) || []\n        }\n        selected={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedTicketTypesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  onlyPublicTickets?: boolean;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: TicketTypeEssentialsFragment): void;\n}\n\nexport default function TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onSelect, onlyPublicTickets } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useAllowedTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect<TicketTypeEssentialsFragment>\n        autoSelectFirst\n        items={data?.dropzone?.ticketTypes || []}\n        selected={[value].filter(Boolean) as TicketTypeEssentialsFragment[]}\n        renderItemLabel={(ticketType) => ticketType?.name}\n        isDisabled={() => false}\n        onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n      />\n    </>\n  );\n}\n","import { UserRigDetailedFragment } from 'app/api/operations';\nimport { useAvailableRigsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport Chip from 'app/components/chips/Chip';\nimport Select, { ISelectOption } from '../select/Select';\n\ninterface IRigSelect {\n  dropzoneUserId?: number;\n  value?: UserRigDetailedFragment | null;\n  tandem?: boolean;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  autoSelectFirst?: boolean;\n  variant?: 'chip' | 'select';\n  label?: string;\n  onSelect(rig: UserRigDetailedFragment): void;\n}\n\nexport default function RigSelect(props: IRigSelect) {\n  const {\n    dropzoneUserId,\n    label,\n    variant,\n    value,\n    small,\n    color: assignedColor,\n    backgroundColor,\n    autoSelectFirst,\n    onSelect,\n    tandem,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [fetchRigs, { data }] = useAvailableRigsLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUserId) {\n      fetchRigs({\n        variables: {\n          dropzoneUserId,\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [fetchRigs, currentDropzoneId, tandem, dropzoneUserId]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.availableRigs?.length) {\n      onSelect(data.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.availableRigs, onSelect, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.availableRigs?.map((rig) => ({\n        label: rig?.name || [rig?.make, rig?.model].join(' '),\n        value: rig as UserRigDetailedFragment,\n      })) || [],\n    [data?.availableRigs]\n  );\n\n  const selected = React.useMemo(\n    () => data?.availableRigs?.find((node) => node?.id === value?.id),\n    [data?.availableRigs, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<UserRigDetailedFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"parachute\">\n        {item?.label || 'No Rig'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <Select<UserRigDetailedFragment>\n      {...{ options, renderAnchor: variant === 'chip' ? renderAnchor : undefined, label }}\n      value={selected}\n      onChange={onSelect}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { Permission } from '../../../api/schema.d';\nimport JumpTypeChipSelect from '../../input/chip_select/JumpTypeChipSelect';\nimport TicketTypeChipSelect from '../../input/chip_select/TicketTypeChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\n\nexport default function ManifestForm() {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  React.useEffect(() => {\n    if (state.fields.dropzoneUser?.value) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.manifest.setField([\n            'exitWeight',\n            Number(state.fields.dropzoneUser?.value?.user?.exitWeight || 60),\n          ])\n        );\n      }\n\n      if (!state.fields.rig.value && state.fields.dropzoneUser.value?.user?.rigs?.length) {\n        dispatch(\n          actions.forms.manifest.setField(['rig', state.fields.dropzoneUser?.value?.user.rigs[0]])\n        );\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.dropzoneUser.value,\n    state.fields.dropzoneUser.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.rig.value,\n  ]);\n\n  const isEdit = state?.original?.id;\n\n  const allowedToManifestOthers = useRestriction(\n    isEdit ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n\n  return (\n    <>\n      <JumpTypeChipSelect\n        value={state.fields.jumpType.value}\n        userId={Number(state?.fields?.dropzoneUser?.value?.id) || null}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['jumpType', value]))}\n      />\n      <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n        {state.fields.jumpType.error || ''}\n      </HelperText>\n\n      <TicketTypeChipSelect\n        value={state.fields.ticketType.value}\n        onlyPublicTickets={!allowedToManifestOthers}\n        onSelect={(value) => dispatch(actions.forms.manifest.setField(['ticketType', value]))}\n      />\n      <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n        {state.fields.ticketType.error || ''}\n      </HelperText>\n\n      {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n        <List.Subheader>Ticket addons</List.Subheader>\n      )}\n      <ScrollView horizontal style={styles.ticketAddons}>\n        {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n          <Chip\n            selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n            onPress={\n              state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n                ? () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        state?.fields?.extras.value?.filter(({ id }) => id !== extra.id),\n                      ])\n                    )\n                : () =>\n                    dispatch(\n                      actions.forms.manifest.setField([\n                        'extras',\n                        [...(state?.fields?.extras?.value || []), extra],\n                      ])\n                    )\n            }\n          >\n            {`${extra.name} ($${extra.cost})`}\n          </Chip>\n        ))}\n      </ScrollView>\n      <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n        {state.fields.extras.error || ''}\n      </HelperText>\n      <Divider />\n      {!state.fields.dropzoneUser ? null : (\n        <RigSelect\n          label=\"Equipment\"\n          value={state.fields.rig.value}\n          dropzoneUserId={Number(state.fields.dropzoneUser?.value?.id)}\n          onSelect={(value) => dispatch(actions.forms.manifest.setField(['rig', value]))}\n        />\n      )}\n      <HelperText type={state.fields.rig.error ? 'error' : 'info'}>\n        {state.fields.rig.error || ''}\n      </HelperText>\n      <NumberField\n        label=\"Exit weight\"\n        variant={NumberFieldType.Weight}\n        error={state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value}\n        onChange={(newValue) =>\n          dispatch(actions.forms.manifest.setField(['exitWeight', Number(newValue)]))\n        }\n      />\n\n      {!state.fields.ticketType.value?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <TextInput\n            style={styles.field}\n            label=\"Passenger name\"\n            error={state.fields.passengerName.error}\n            value={state.fields.passengerName?.value?.toString() || ''}\n            onChange={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerName', newValue]))\n            }\n          />\n\n          <TextInput\n            style={styles.field}\n            label=\"Passenger exit weight\"\n            error={state.fields.passengerExitWeight.error}\n            value={state.fields.passengerExitWeight.value?.toString() || ''}\n            onChange={(newValue) =>\n              dispatch(actions.forms.manifest.setField(['passengerExitWeight', Number(newValue)]))\n            }\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { useManifestUserMutation } from 'app/api/reflection';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { usePortal } from '@gorhom/portal';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport SlotForm from '../../forms/manifest/ManifestForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { onSuccess, open, onClose: _onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifest);\n  const [mutationCreateSlot, mutationData] = useManifestUserMutation();\n  const portal = usePortal('drawer');\n\n  React.useEffect(() => {\n    if (!open) {\n      portal.removePortal('drawer');\n    }\n  }, [open, portal]);\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifest.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n  const onManifest = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlot({\n        variables: {\n          jumpType: state.fields.jumpType.value?.id,\n          extras: state.fields.extras?.value?.map(({ id }) => id),\n          load: state.fields.load.value?.id,\n          rig: !state.fields.rig.value?.id ? null : state.fields.rig.value?.id,\n          ticketType: state.fields.ticketType?.value?.id,\n          dropzoneUser: state.fields.dropzoneUser?.value?.id,\n          exitWeight: state.fields.exitWeight.value,\n          ...(!state.fields.ticketType.value?.isTandem\n            ? {}\n            : {\n                passengerName: state.fields.passengerName?.value,\n                passengerExitWeight: state.fields.passengerExitWeight?.value,\n              }),\n        },\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n            return dispatch(actions.forms.manifest.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifest.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifest.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifest.setFieldError(['ticketType', message]));\n          case 'rig':\n            return dispatch(actions.forms.manifest.setFieldError(['rig', message]));\n          case 'dropzone_user':\n            return dispatch(actions.forms.manifest.setFieldError(['dropzoneUser', message]));\n          case 'exit_weight':\n            return dispatch(actions.forms.manifest.setFieldError(['exitWeight', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlot?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlot?.errors[0],\n            variant: 'error',\n          })\n        );\n        dispatch(actions.forms.manifest.setOpen(false));\n        return;\n      }\n      if (!result.data?.createSlot?.fieldErrors?.length) {\n        onSuccess();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    dispatch,\n    mutationCreateSlot,\n    onSuccess,\n    state.fields.dropzoneUser?.value?.id,\n    state.fields.exitWeight.value,\n    state.fields.extras?.value,\n    state.fields.jumpType.value?.id,\n    state.fields.load.value?.id,\n    state.fields.passengerExitWeight?.value,\n    state.fields.passengerName?.value,\n    state.fields.rig.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields.ticketType.value?.isTandem,\n    validate,\n  ]);\n\n  const onClose = React.useCallback(() => {\n    dispatch(actions.forms.manifest.reset());\n    dispatch(actions.forms.manifest.setOpen(false));\n    _onClose();\n  }, [dispatch, _onClose]);\n\n  console.log(state.fields);\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      title={`Manifest ${state?.fields?.dropzoneUser?.value?.user?.name} on ${state.fields.load?.value?.name}`}\n      loading={mutationData.loading}\n      {...{ open, onClose }}\n      buttonLabel=\"Manifest\"\n      buttonAction={onManifest}\n    >\n      <SlotForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport {\n  Autocomplete,\n  InputAdornment,\n  ListItemAvatar,\n  ListItemText,\n  MenuItem,\n  styled,\n} from '@mui/material';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useDropzoneUsersLazyQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport first from 'lodash/first';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Caption, useTheme } from 'react-native-paper';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IDropzoneUserAutocompleteProps {\n  value?: DropzoneUserEssentialsFragment | null;\n  label?: string;\n  placeholder?: string;\n  color?: string;\n  onChange(value: DropzoneUserEssentialsFragment): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore This is supposed to be ok\nconst StyledTextField = styled(TextField, {\n  shouldForwardProp: (prop: keyof TextFieldProps) => prop !== 'color',\n})((p: TextFieldProps) => ({\n  // input label when focused\n  '& .MuiInput-input': {\n    color: p.color,\n  },\n  '& label.Mui-focused': {\n    color: p.color,\n  },\n  // focused color for input with variant='standard'\n  '& .MuiInput-root:before': {\n    borderBottomColor: p.color,\n  },\n  '& .MuiInput-root:hover': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='filled'\n  '& .MuiFilledInput-underline': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='outlined'\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: p.color,\n    },\n  },\n})) as React.ComponentType<Omit<TextFieldProps, 'color'> & { color?: string }>;\nexport default function DropzoneUserAutocomplete(props: IDropzoneUserAutocompleteProps) {\n  const { label, onChange, placeholder, color } = props;\n  const [searchUsers, { data, loading }] = useDropzoneUsersLazyQuery();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  React.useEffect(() => {\n    if (currentDropzoneId && searchText !== null) {\n      searchUsers({\n        variables: {\n          dropzoneId: currentDropzoneId?.toString() as string,\n          search: searchText,\n          licensed: false,\n        },\n      });\n    }\n  }, [currentDropzoneId, searchText, searchUsers]);\n\n  const theme = useTheme();\n  const getOptionLabel = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) =>\n      option.user.nickname\n        ? `${option.user.nickname} (${option.user.name})`\n        : (option.user.name as string),\n    []\n  );\n\n  const groupBy = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) => first(getOptionLabel(option).split('')) as string,\n    [getOptionLabel]\n  );\n\n  const options = React.useMemo(\n    () =>\n      (\n        (data?.dropzoneUsers?.edges?.map(\n          (edge) => edge?.node\n        ) as DropzoneUserEssentialsFragment[]) || []\n      ).sort(\n        (a, b) =>\n          -(first(getOptionLabel(b).split('')) as string).localeCompare(\n            first(getOptionLabel(a).split('')) as string\n          )\n      ),\n    [data?.dropzoneUsers?.edges, getOptionLabel]\n  );\n\n  const onSelect = React.useCallback(\n    (_: unknown, nextValue?: DropzoneUserEssentialsFragment | null) => {\n      setSearchText('');\n      if (nextValue) {\n        onChange(nextValue);\n      }\n    },\n    [onChange]\n  );\n  return (\n    <Autocomplete<DropzoneUserEssentialsFragment>\n      {...{ loading, options, groupBy, getOptionLabel, value: null }}\n      sx={{ width: '100%' }}\n      renderInput={(params) => (\n        <StyledTextField\n          variant=\"standard\"\n          {...params}\n          {...{ color, label, placeholder }}\n          fullWidth\n          value={searchText}\n          InputProps={{\n            ...params.InputProps,\n            value: searchText,\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MaterialCommunityIcons\n                  name=\"account-search-outline\"\n                  size={20}\n                  color={color || theme.colors.text}\n                />\n              </InputAdornment>\n            ),\n          }}\n        />\n      )}\n      onInputChange={(_, text) => setSearchText(text)}\n      onChange={onSelect}\n      inputValue={searchText}\n      popupIcon={<MaterialCommunityIcons name=\"chevron-down\" color={color} />}\n      clearIcon={<MaterialCommunityIcons name=\"close\" color={color} />}\n      renderOption={(menuItemProps, option) => (\n        <MenuItem {...menuItemProps} key={`autocomplete-user-${option.id}`} id={option.id}>\n          <ListItemAvatar>\n            <UserAvatar name={option.user.name} image={option?.user?.image} size={32} />\n          </ListItemAvatar>\n\n          <ListItemText>\n            {option.user.nickname ? (\n              <>\n                {option.user.nickname}&nbsp;\n                <Caption>({option.user.name})</Caption>\n              </>\n            ) : (\n              option.user.name\n            )}\n          </ListItemText>\n        </MenuItem>\n      )}\n    />\n  );\n}\n","import { useDropzoneUserProfileQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport { Card, ProgressBar, Divider, List, Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport calculateWingLoading from 'app/utils/calculateWingLoading';\nimport Chip from 'app/components/chips/Chip';\nimport TextInput from 'app/components/input/text/TextField';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: string;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: RigEssentialsFragment;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: RigEssentialsFragment): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { data, loading } = useDropzoneUserProfileQuery({\n    variables: {\n      id: dropzoneUserId,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && data?.dropzoneUser?.user?.exitWeight) {\n      onChangeExitWeight(Number(data.dropzoneUser.user.exitWeight));\n    }\n  }, [data?.dropzoneUser?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={1}>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Card.Title\n        title={data?.dropzoneUser?.user.name}\n        left={() => (\n          <UserAvatar\n            name={data?.dropzoneUser?.user?.name}\n            image={data?.dropzoneUser?.user?.image}\n            size={36}\n          />\n        )}\n        titleStyle={{ paddingRight: 0 }}\n        right={() => (\n          <View style={{ maxWidth: 100, marginRight: 16 }}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              mode=\"flat\"\n              variant={NumberFieldType.Weight}\n              onChange={(num) => onChangeExitWeight(num)}\n            />\n          </View>\n        )}\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <RigSelect\n            small\n            variant=\"chip\"\n            dropzoneUserId={dropzoneUserId ? Number(dropzoneUserId) : undefined}\n            onSelect={onChangeRig}\n            value={selectedRig}\n            tandem={isTandem}\n            autoSelectFirst\n          />\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip small icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n          <Chip small icon=\"lock\" mode=\"outlined\" disabled>\n            {data?.dropzoneUser?.role?.name}\n          </Chip>\n          <Chip small icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {data?.dropzoneUser?.license?.name}\n          </Chip>\n        </ScrollView>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  mode=\"flat\"\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChange={(num) => onChangePassengerWeight?.(num)}\n                  variant={NumberFieldType.Weight}\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation,\n    dragX: Animated.AnimatedInterpolation\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n        style={{ height: '100%' }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      childrenContainerStyle={{ height: '100%' }}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet, Text, View } from 'react-native';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport React from 'react';\nimport { Avatar, Caption, DataTable, Paragraph } from 'react-native-paper';\nimport { generateColor } from 'app/utils/generateColor';\nimport { isNumber } from 'lodash';\nimport SwipeActions from '../layout/SwipeActions';\nimport UserAvatar from '../UserAvatar';\nimport DraggableWrapper from './DragAndDrop/DraggableRow';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport enum SlotFields {\n  License = 'license',\n  Group = 'groupNumber',\n  WingLoading = 'wingloading',\n  Altitude = 'altitude',\n  Rig = 'rig',\n  TicketType = 'ticketType',\n  JumpType = 'jumpType',\n}\n\nexport interface ISlotUserRowProps {\n  load: LoadDetailsFragment;\n  fields?: SlotFields[];\n  slot: SlotDetailsFragment;\n  index: number;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n}\n\nexport const GROUP_COLORS = Array.from({ length: 20 }).map(() => generateColor());\n\nexport default function UserRow(props: ISlotUserRowProps) {\n  const { fields, load, slot, index, onDeletePress, onSlotGroupPress, onSlotPress } = props;\n\n  const currentDropzone = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const slotGroup: Required<typeof load['slots']> = load?.slots?.filter(\n    ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n  ) as Required<typeof load['slots']>;\n  const isCurrentUser = slot?.dropzoneUser?.id === currentUser?.id;\n\n  return (\n    <DroppableSlot loadId={load.id} slotId={slot?.id} rowIndex={index}>\n      <DraggableWrapper rowProps={props}>\n        {({ isDragging }) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              disabled={\n                isDragging ||\n                (isCurrentUser && !canRemoveSelf) ||\n                (!isCurrentUser && !canRemoveOthers)\n              }\n              key={`slot-${slot.id}`}\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: () => onDeletePress(slot),\n              }}\n            >\n              <DataTable.Row\n                testID=\"slot-row\"\n                style={\n                  isNumber(slot?.groupNumber)\n                    ? {\n                        borderLeftWidth: 5,\n                        borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                        paddingLeft: 4,\n                      }\n                    : undefined\n                }\n                disabled={!!load?.hasLanded}\n                onPress={() => {\n                  if (slot.dropzoneUser?.id === currentUser?.id) {\n                    if (canEditSelf) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  } else if (canEditOthers) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress(slotGroup);\n                    } else {\n                      onSlotPress(slot);\n                    }\n                  }\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell style={styles.avatarCell}>\n                  <UserAvatar\n                    size={20}\n                    name={\n                      slot?.dropzoneUser?.user?.nickname || slot?.dropzoneUser?.user?.name || ''\n                    }\n                    image={slot?.dropzoneUser?.user?.image}\n                    style={{ marginLeft: -12 }}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell style={styles.nameCell}>\n                  <Paragraph style={styles.slotText}>\n                    {slot?.dropzoneUser?.user?.nickname\n                      ? slot?.dropzoneUser?.user?.nickname\n                      : slot?.dropzoneUser?.user?.name}\n                  </Paragraph>\n\n                  {slot?.dropzoneUser?.user?.nickname ? (\n                    <Caption>{`(${slot?.dropzoneUser?.user?.name})`}</Caption>\n                  ) : null}\n                </DataTable.Cell>\n                {fields?.includes(SlotFields.License) ? (\n                  <DataTable.Cell numeric style={styles.licenseCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.dropzoneUser?.license?.name}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.Rig) ? (\n                  <DataTable.Cell numeric style={styles.rigCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.rig\n                        ? `${slot.rig.make} ${slot.rig.model} w/ ${slot.rig.canopySize}`\n                        : null}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.WingLoading) ? (\n                  <DataTable.Cell numeric style={styles.wingLoadingCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.wingLoading?.toFixed(2) || '-'}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.JumpType) ? (\n                  <DataTable.Cell numeric style={styles.jumpTypeCell}>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.TicketType) ? (\n                  <DataTable.Cell numeric style={styles.ticketCell}>\n                    <Paragraph style={styles.slotText}>{slot?.ticketType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.Altitude) ? (\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n              </DataTable.Row>\n\n              {slot?.ticketType?.isTandem && (\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  pointerEvents=\"none\"\n                  style={\n                    isNumber(slot?.groupNumber)\n                      ? {\n                          borderLeftWidth: 5,\n                          borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                          paddingLeft: 4,\n                        }\n                      : undefined\n                  }\n                >\n                  <DataTable.Cell style={styles.avatarCell}>\n                    <Avatar.Icon icon=\"parachute\" size={20} />\n                  </DataTable.Cell>\n                  <DataTable.Cell style={styles.tandemPassengerNameCell}>\n                    <Paragraph style={styles.slotText}>\n                      <Text style={{ fontWeight: 'bold' }}>Tandem Passenger:</Text>{' '}\n                      {slot?.passengerName}\n                    </Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n              )}\n            </SwipeActions>\n          </View>\n        )}\n      </DraggableWrapper>\n    </DroppableSlot>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  slotText: {\n    fontSize: 12,\n    alignSelf: 'center',\n    height: 24,\n    textAlignVertical: 'center',\n  },\n  avatarCell: {\n    flex: 1,\n  },\n  licenseCell: {\n    flex: 3,\n  },\n  rigCell: {\n    flex: 3,\n  },\n  wingLoadingCell: {\n    flex: 3,\n  },\n  jumpTypeCell: {\n    flex: 3,\n  },\n  altitudeCell: {\n    flex: 3,\n  },\n  nameCell: {\n    flex: 6,\n  },\n  tandemPassengerNameCell: {\n    flexGrow: 20,\n  },\n  tandemInfoCell: {\n    flex: 1,\n  },\n  ticketCell: {\n    flex: 3,\n  },\n});\n","import * as React from 'react';\nimport { useDraggable } from '@dnd-kit/core';\nimport { View } from 'react-native';\nimport { useManifestContext } from 'app/api/crud/useManifest';\nimport type { ISlotUserRowProps } from '../UserRow';\n\ninterface IDraggableSlot {\n  rowProps: ISlotUserRowProps;\n  children(opts: { isDragging?: boolean }): JSX.Element;\n}\nexport default function DraggableRow(props: IDraggableSlot) {\n  const { children, rowProps } = props;\n  const { permissions } = useManifestContext();\n  const { setNodeRef, listeners, attributes, isDragging } = useDraggable({\n    id: rowProps.slot?.id,\n    disabled: !permissions.canUpdateSlot,\n    data: {\n      slotId: rowProps.slot?.id,\n      loadId: rowProps.load?.id,\n      props: rowProps,\n    },\n  });\n  return (\n    <div ref={setNodeRef} {...attributes} {...listeners} className=\"draggable-wrapper\">\n      <View pointerEvents=\"box-none\">{children?.({ isDragging })}</View>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nexport default function DroppableSlot(\n  props: React.PropsWithChildren<{ rowIndex: number; loadId: string; slotId?: string }>\n) {\n  const { rowIndex, loadId, slotId, children } = props;\n  const { setNodeRef, isOver, active } = useDroppable({\n    id: `load-${loadId}-row-${rowIndex}`,\n    data: {\n      slotId,\n      loadId,\n    },\n  });\n  const theme = useAppSelector((root) => root.global.theme);\n\n  const style: StyleProp<ViewStyle> = React.useMemo(\n    () => ({\n      backgroundColor:\n        isOver && active?.data?.current?.props?.load?.id !== loadId\n          ? theme.colors.primary\n          : undefined,\n      opacity: isOver ? 0.5 : undefined,\n    }),\n    [active?.data, isOver, loadId, theme.colors.primary]\n  );\n\n  return (\n    <div ref={setNodeRef} className=\"droppable-wrapper\">\n      <View {...{ style }}>{children}</View>\n    </div>\n  );\n}\n","import { hsl } from 'color';\n\nexport function generateColor() {\n  return hsl(360 * Math.random(), 25 + 70 * Math.random(), 85 + 10 * Math.random())\n    .rgb()\n    .toString();\n}\n","import * as React from 'react';\nimport { GROUP_COLORS } from 'app/components/slots_table/UserRow';\nimport { TouchableOpacity, View, StyleSheet } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { sortedUniq } from 'lodash';\n\ninterface IGroupPickerProps {\n  value?: number | null;\n  availableGroups: number[];\n  onChange(group: number | null): void;\n}\nexport default function GroupPicker(props: IGroupPickerProps) {\n  const { value, onChange, availableGroups } = props;\n  const createChangeHandler = React.useCallback(\n    (groupNumber: number | null) => () => onChange(groupNumber),\n    [onChange]\n  );\n  return (\n    <View style={styles.row}>\n      {sortedUniq(availableGroups)\n        .sort()\n        ?.map((groupNumber) => (\n          <TouchableOpacity onPress={createChangeHandler(groupNumber)}>\n            <Avatar.Text\n              label={`${groupNumber}`}\n              size={20}\n              style={[\n                value === groupNumber ? styles.selected : undefined,\n                { backgroundColor: GROUP_COLORS[groupNumber] },\n              ]}\n            />\n          </TouchableOpacity>\n        ))}\n      <TouchableOpacity onPress={createChangeHandler(null)}>\n        <Avatar.Icon\n          icon=\"plus\"\n          size={20}\n          style={[value === null ? styles.selected : undefined, { backgroundColor: '#FAFAFA' }]}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    padding: 16,\n    gap: 4,\n  },\n  selected: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { uniqBy } from 'lodash';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { JumpType, Permission, TicketType } from 'app/api/schema.d';\nimport { RigEssentialsFragment, TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\n\nimport UserRigCard from './UserRigCard';\nimport { SlotUserWithRig } from './slice';\nimport GroupPicker from './GroupPicker';\n\ninterface IUserCardProps {\n  slotUser: SlotUserWithRig;\n}\n\nfunction UserCard(props: IUserCardProps) {\n  const { slotUser } = props;\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const dispatch = useAppDispatch();\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  const onChangeExitWeight = React.useCallback(\n    (exitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onRemove = React.useCallback(\n    () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n        ])\n      ),\n    [dispatch, slotUser.id, state.fields.users.value]\n  );\n\n  const onChangeRig = React.useCallback(\n    (newRig: RigEssentialsFragment) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, rigId: Number(newRig.id), rig: newRig } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onChangePassengerName = React.useCallback(\n    (passengerName: string) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerName } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  const onChangePassengerWeight = React.useCallback(\n    (passengerExitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  return (\n    <UserRigCard\n      key={`user-rig-card-${slotUser.id}`}\n      dropzoneUserId={slotUser.id?.toString()}\n      selectedRig={slotUser.rig || undefined}\n      exitWeight={slotUser.exitWeight}\n      {...{\n        onChangeExitWeight,\n        onRemove,\n        onChangeRig,\n        onChangePassengerName,\n        onChangePassengerWeight,\n      }}\n      {...{ isTandem }}\n      passengerName={slotUser.passengerName}\n      passengerWeight={slotUser.passengerExitWeight}\n    />\n  );\n}\nexport default function ManifestGroupForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: state.fields.users?.value?.map(\n        (slotUser) => slotUser.id\n      ) as number[],\n      isPublic: canManifestOthers ? null : true,\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  const jumpTypes = React.useMemo(\n    () =>\n      uniqBy(\n        [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n        ({ id }) => id\n      ) || [],\n    [data]\n  );\n\n  const createToggleTicketAddonHandler = React.useCallback(\n    (extra: TicketTypeExtraEssentialsFragment) => () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'extras',\n          state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n            ? state?.fields?.extras.value?.filter(({ id }) => id !== extra.id)\n            : [...(state?.fields?.extras?.value || []), extra],\n        ])\n      ),\n    [dispatch, state?.fields?.extras.value]\n  );\n  return (\n    <>\n      <View style={{ paddingHorizontal: 8 }} key=\"manifest-group-config\">\n        <List.Subheader>Jump type</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={jumpTypes}\n          selected={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n          renderItemLabel={(jumpType: JumpType) => jumpType.name}\n          isDisabled={(jumpType: JumpType) =>\n            !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n          }\n          onChangeSelected={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['jumpType', firstUser as JumpType]))\n          }\n        />\n\n        <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n          {state.fields.jumpType.error || ''}\n        </HelperText>\n\n        <List.Subheader>Ticket</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={data?.dropzone?.ticketTypes || []}\n          selected={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n          renderItemLabel={(ticketType: TicketType) => ticketType.name}\n          onChangeSelected={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['ticketType', firstUser as TicketType]))\n          }\n        />\n        <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n          {state.fields.ticketType.error || ''}\n        </HelperText>\n        {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n          <List.Subheader>Ticket addons</List.Subheader>\n        )}\n        <ScrollView horizontal style={styles.ticketAddons}>\n          {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n            <Chip\n              key={`addon-${extra?.id}`}\n              selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n              onPress={createToggleTicketAddonHandler(extra as TicketTypeExtraEssentialsFragment)}\n            >\n              {`${extra.name} ($${extra.cost})`}\n            </Chip>\n          ))}\n        </ScrollView>\n        <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n          {state.fields.extras.error || ''}\n        </HelperText>\n      </View>\n\n      <Divider />\n\n      <View\n        style={{ paddingHorizontal: 0, paddingTop: 16, flexGrow: 1 }}\n        key=\"manifest-group-users\"\n      >\n        <List.Subheader style={styles.label}>\n          Group\n          <GroupPicker\n            value={state?.fields?.groupNumber?.value || null}\n            availableGroups={\n              state?.fields?.load?.value?.slots?.map(({ groupNumber }) => groupNumber) || []\n            }\n            onChange={(groupNumber) =>\n              dispatch(actions.forms.manifestGroup.setField(['groupNumber', groupNumber]))\n            }\n          />\n        </List.Subheader>\n        {state.fields?.users?.value?.map((slotUser) => (\n          <UserCard {...{ slotUser }} key={`manifest-${slotUser.id}`} />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  label: { justifyContent: 'space-between' },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { AppBar, Fade, LinearProgress, Toolbar } from '@mui/material';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useManifestGroupMutation, useDropzoneUserProfileLazyQuery } from 'app/api/reflection';\nimport DropzoneUserAutocomplete from 'app/components/autocomplete/DropzoneUserAutocomplete.web';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useManifestGroupMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate() || !state.fields.users.value?.length) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpType: state.fields.jumpType.value?.id,\n          ticketType: state.fields.ticketType.value?.id,\n          groupNumber: state.fields?.groupNumber?.value || null,\n          extras: state.fields.extras?.value?.map(({ id }) => id),\n          load: state.fields.load.value?.id,\n          userGroup: state.fields.users.value?.map(\n            ({ id, exitWeight, rigId, rig, passengerName, passengerExitWeight }) => ({\n              id,\n              rig: rigId?.toString() || rig?.id || undefined,\n              exitWeight,\n              passengerName,\n              passengerExitWeight,\n            })\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n          case 'jump_type_id':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: result?.data?.createSlots?.errors[0],\n            variant: 'error',\n          })\n        );\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onClose();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    validate,\n    state.fields.users.value,\n    state.fields.jumpType.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields?.groupNumber?.value,\n    state.fields.extras?.value,\n    state.fields.load.value?.id,\n    mutationCreateSlots,\n    dispatch,\n    onClose,\n  ]);\n\n  // dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n\n  const [fetchProfile, { loading }] = useDropzoneUserProfileLazyQuery();\n  const onSelectUser = React.useCallback(\n    (profile: DropzoneUserProfileFragment) => {\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([profile]));\n    },\n    [dispatch]\n  );\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      loading={mutationData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Manifest\"\n      onClose={() => {\n        dispatch(actions.forms.manifestGroup.reset());\n        onClose();\n      }}\n      buttonAction={onManifest}\n      scrollable={false}\n    >\n      <View style={styles.wrapper} testID=\"manifest-group-sheet\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <DropzoneUserAutocomplete\n              color=\"white\"\n              placeholder=\"Search skydivers...\"\n              onChange={(user) => {\n                fetchProfile({\n                  variables: {\n                    id: user.id,\n                  },\n                }).then((result) => {\n                  if (result.data?.dropzoneUser) {\n                    onSelectUser(result.data?.dropzoneUser);\n                  }\n                });\n              }}\n            />\n          </Toolbar>\n        </AppBar>\n        <Fade in={loading || mutationData.loading}>\n          <LinearProgress variant=\"indeterminate\" />\n        </Fade>\n        <ScrollView testID=\"scroll-area\">\n          <ManifestGroupForm />\n        </ScrollView>\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: { height: '100%' },\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n    paddingTop: 0,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: 'calc(100% - 200px)',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal, useTheme } from 'react-native-paper';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\n\nimport { Permission, LoadState } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch } from 'app/state';\nimport isSameDay from 'date-fns/isSameDay';\nimport { parseISO } from 'date-fns';\nimport { useLoadContext } from 'app/api/crud';\n\ninterface ILoadActionButtonProps {\n  load: LoadDetailsFragment;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const { timepicker, cancel, markAsLanded, updateLoadState, createAircraftDispatchAction } =\n    useLoadContext();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const currentDropzone = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const onManifest = React.useCallback(() => {\n    if (!currentUser?.hasLicense) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You need to select a license on your user profile',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasMembership) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Your membership is out of date',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasExitWeight) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Update your exit weight on your profile before manifesting',\n          variant: 'info',\n        })\n      );\n    }\n\n    if (!currentUser?.hasCredits) {\n      return dispatch(\n        actions.notifications.showSnackbar({\n          message: 'You have no credits on your account',\n          variant: 'info',\n        })\n      );\n    }\n\n    dispatch(actions.forms.manifest.setOpen(true));\n    dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n    dispatch(actions.forms.manifest.setField(['load', load]));\n    return null;\n  }, [currentUser, dispatch, load]);\n\n  const theme = useTheme();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const callActions = [\n    {\n      label: 'Custom call',\n      onPress: timepicker.open,\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '20 minute call',\n      onPress: createAircraftDispatchAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createAircraftDispatchAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createAircraftDispatchAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const isToday = isSameDay(new Date(), parseISO(load.createdAt));\n\n  const manifestActions = [\n    !showManifestButton || !isToday\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => onManifest(),\n        },\n    !showGroupIcon || !isToday\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createAircraftDispatchAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: cancel,\n        },\n    ![LoadState.Cancelled, LoadState.Landed].includes(load.state) || !isToday\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: markAsLanded,\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) && isToday ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n          backgroundColor: theme.colors.primary,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n}) as React.ComponentType<any>;\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { LoadEssentialsFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { format } from 'date-fns/esm';\nimport parseISO from 'date-fns/parseISO';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: LoadEssentialsFragment;\n  children?: React.ReactNode;\n  renderBadges?: React.ComponentType<object>;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, renderBadges: RenderBadges, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          {load?.dispatchAt && isAfter(load.dispatchAt * 1000, new Date()) ? (\n            <Countdown\n              end={new Date(load.dispatchAt * 1000)}\n              variant={theme.dark ? 'light' : 'dark'}\n              size={80}\n            />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"shield-airplane\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>\n            {load?.createdAt && format(parseISO(load.createdAt), 'dd LLLL, yyyy')}\n          </Paragraph>\n          {RenderBadges && width > 600 ? (\n            <RenderBadges />\n          ) : (\n            <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n          )}\n        </View>\n      </View>\n\n      {RenderBadges && width < 600 ? <RenderBadges /> : null}\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 8,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import React from 'react';\nimport { DataTable } from 'react-native-paper';\nimport { useLoadContext } from 'app/api/crud';\nimport { actions, useAppDispatch } from 'app/state';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DropzoneUserAutocomplete from '../autocomplete/DropzoneUserAutocomplete.web';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport interface IAvailableRowProps {\n  index: number;\n  onPress(): void;\n}\nexport default function AvailableRow(props: IAvailableRowProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { onPress, index } = props;\n  const dispatch = useAppDispatch();\n  const { load } = useLoadContext();\n\n  const onSelectUser = React.useCallback(\n    (user: DropzoneUserEssentialsFragment) => {\n      dispatch(actions.forms.manifest.setField(['load', load]));\n      dispatch(\n        actions.forms.manifest.setOpen({\n          dropzoneUser: user,\n        } as never)\n      );\n    },\n    [dispatch, load]\n  );\n\n  return (\n    <DroppableSlot loadId={load?.id?.toString() || '0'} rowIndex={index}>\n      <DataTable.Row testID=\"slot-row\" style={{ paddingTop: 8 }}>\n        <DropzoneUserAutocomplete\n          placeholder=\"- Available -\"\n          value={null}\n          onChange={onSelectUser}\n        />\n      </DataTable.Row>\n    </DroppableSlot>\n  );\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { DataTable, Surface, Text } from 'react-native-paper';\nimport UserRow, { SlotFields, styles as rowStyles } from './UserRow';\nimport AvailableRow from './AvailableRow';\n\nexport interface ISlotsTableProps {\n  load?: LoadDetailsFragment | null;\n  loading?: boolean;\n  fields?: SlotFields[];\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onAvailableSlotPress(): void;\n}\nexport default function SlotsTable(props: ISlotsTableProps) {\n  const { load, fields, onDeletePress, onAvailableSlotPress, onSlotGroupPress, onSlotPress } =\n    props;\n\n  console.log(fields);\n\n  return (\n    <Surface style={{ flexGrow: 1 }}>\n      <DataTable>\n        <DataTable.Header style={{ width: '100%' }}>\n          <DataTable.Title style={rowStyles.avatarCell}>{null}</DataTable.Title>\n          <DataTable.Title style={rowStyles.nameCell}>\n            <Text style={styles.th}>Name</Text>\n          </DataTable.Title>\n          {fields?.includes(SlotFields.License) && (\n            <DataTable.Title numeric style={rowStyles.licenseCell}>\n              <Text style={styles.th}>License</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.Rig) && (\n            <DataTable.Title numeric style={rowStyles.rigCell}>\n              <Text style={styles.th}>Equipment</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.WingLoading) && (\n            <DataTable.Title numeric style={rowStyles.wingLoadingCell}>\n              <Text style={styles.th}>Wing Loading</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.JumpType) && (\n              <DataTable.Title numeric style={rowStyles.jumpTypeCell}>\n                <Text style={styles.th}>Jump type</Text>\n              </DataTable.Title>\n            ))}\n          {fields?.includes(SlotFields.TicketType) && (\n            <DataTable.Title numeric style={rowStyles.ticketCell}>\n              <Text style={styles.th}>Ticket</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.Altitude) && (\n              <DataTable.Title numeric style={rowStyles.altitudeCell}>\n                <Text style={styles.th}>Altitude</Text>\n              </DataTable.Title>\n            ))}\n        </DataTable.Header>\n        {load?.slots?.map((slot, index) => (\n          <UserRow\n            {...{ fields, slot, load, onDeletePress, onSlotGroupPress, onSlotPress, index }}\n            key={`slot-${slot.id}`}\n          />\n        ))}\n        {Array.from({ length: load?.availableSlots || 0 })?.map((_, idx) => (\n          <AvailableRow\n            {...{ onPress: onAvailableSlotPress }}\n            // eslint-disable-next-line react/no-array-index-key\n            key={`slot-available-${idx}`}\n            index={idx}\n          />\n        ))}\n      </DataTable>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  th: {\n    fontWeight: 'bold',\n  },\n});\n","import * as React from 'react';\nimport { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport LoadSlotTable, { ISlotsTableProps } from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useWindowDimensions } from 'react-native';\n\ninterface ITableViewProps extends Omit<ISlotsTableProps, 'load'> {\n  load?: LoadDetailsFragment | null;\n  loading: boolean;\n  refetch(): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n}\n\nexport default function LoadScreen(props: ITableViewProps) {\n  const { load, loading, onAvailableSlotPress, onDeletePress, onSlotGroupPress, onSlotPress } =\n    props;\n  const { width } = useWindowDimensions();\n  const numFields = Math.floor(width / 200);\n\n  console.log({ width, numFields, load });\n\n  return (\n    <LoadSlotTable\n      fields={\n        [\n          SlotFields.Altitude,\n          SlotFields.JumpType,\n          numFields > 2 ? SlotFields.License : null,\n          numFields > 3 ? SlotFields.TicketType : null,\n          numFields > 4 ? SlotFields.WingLoading : null,\n          numFields > 5 ? SlotFields.Rig : null,\n        ].filter(Boolean) as SlotFields[]\n      }\n      {...{\n        load,\n        loading,\n        onAvailableSlotPress,\n        onDeletePress,\n        onSlotGroupPress,\n        onSlotPress,\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { FlatList, Platform } from 'react-native';\n\nimport { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport { LoadProvider, useLoadContext } from 'app/api/crud';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport ManifestUserSheet from 'app/components/dialogs/ManifestUser/ManifestUser';\nimport ManifestGroupSheet from 'app/components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { Divider } from 'react-native-paper';\nimport { useManifestContext } from 'app/api/crud/useManifest';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\n// import CardView from './views/CardView';\nimport TableView from './views/TableView';\n\nexport type LoadScreenRoute = {\n  LoadScreen: {\n    loadId: string;\n  };\n};\n\nfunction LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n\n  const { deleteSlot } = useManifestContext();\n  const { load, loading, refetch, updateGCA, updateLoadMaster, updatePilot, updatePlane } =\n    useLoadContext();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const currentDropzone = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n  const maxSlots = load?.maxSlots || 0;\n  const occupiedSlots = load?.occupiedSlots || 0;\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      const response = await deleteSlot({\n        id: Number(slot.id),\n      });\n\n      if ('error' in response && response.error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message:\n              response?.error ||\n              `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`,\n            variant: 'error',\n          })\n        );\n      } else if ('slot' in response && slot?.id) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `${\n              response.slot?.dropzoneUser?.user?.name || 'User'\n            } has been taken off load #${load?.loadNumber}`,\n            variant: 'success',\n          })\n        );\n      }\n    },\n    [deleteSlot, dispatch, load?.loadNumber]\n  );\n\n  const onSlotPress = React.useCallback(\n    (slot: SlotDetailsFragment) => {\n      const slotGroup = load?.slots?.filter(\n        ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n      );\n      const onSlotGroupPress = () => {\n        if (slotGroup && load) {\n          dispatch(actions.forms.manifestGroup.reset());\n          dispatch(actions.forms.manifestGroup.setOpen(true));\n          dispatch(\n            actions.forms.manifestGroup.setFromSlots({\n              slots: slotGroup?.length ? slotGroup : [slot],\n              load,\n            })\n          );\n          dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n          // FIXME: Open ManifestGroup Drawer\n        }\n      };\n      const onSlotSinglePress = () => {\n        dispatch(actions.forms.manifest.setOpen(slot));\n        dispatch(actions.forms.manifest.setField(['load', load]));\n      };\n\n      if ((canEditSelf && slot.dropzoneUser?.id === currentUser?.id) || canEditOthers) {\n        if (canEditSelf) {\n          if (slotGroup?.length || Platform.OS === 'web') {\n            onSlotGroupPress();\n          } else {\n            onSlotSinglePress();\n          }\n        }\n      }\n    },\n    [canEditOthers, canEditSelf, currentUser?.id, dispatch, load]\n  );\n\n  const onSlotGroupPress = React.useCallback(\n    (slotGroup: SlotDetailsFragment[]) => {\n      if (load) {\n        dispatch(actions.forms.manifestGroup.reset());\n        dispatch(actions.forms.manifestGroup.setOpen(true));\n        dispatch(\n          actions.forms.manifestGroup.setFromSlots({\n            slots: slotGroup,\n            load,\n          })\n        );\n        dispatch(actions.forms.manifestGroup.setField(['load', load]));\n      }\n    },\n    [dispatch, load]\n  );\n\n  const onAvailableSlotPress = React.useCallback(() => {\n    dispatch(actions.forms.manifestGroup.reset());\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n    if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n      // Automatically add current user to selection\n      dispatch(actions.screens.manifest.setSelected([currentUser]));\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n    }\n\n    dispatch(actions.forms.manifestGroup.setOpen(true));\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n  }, [canManifestGroup, canManifestGroupWithSelfOnly, currentUser, dispatch, load]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.background }}>\n      <Header\n        load={load || undefined}\n        renderBadges={() => (\n          <FlatList\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            style={{ marginVertical: 8 }}\n            data={['plane', 'pilot', 'gca', 'loadMaster']}\n            keyExtractor={(item) => item.toString()}\n            renderItem={({ item }) => {\n              switch (item) {\n                case 'plane':\n                  return (\n                    <PlaneChip\n                      value={load?.plane}\n                      onSelect={async (plane) => {\n                        if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                          const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                          dispatch(\n                            actions.notifications.showSnackbar({\n                              // eslint-disable-next-line max-len\n                              message: `You need to take ${diff} people off the load to fit on this plane`,\n                              variant: 'info',\n                            })\n                          );\n                        } else {\n                          await updatePlane(plane);\n                          refetch();\n                        }\n                      }}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'gca':\n                  return (\n                    <GCAChip\n                      value={load?.gca}\n                      onSelect={updateGCA}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'pilot':\n                  return (\n                    <PilotChip\n                      value={load?.pilot}\n                      onSelect={updatePilot}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                default:\n                  return (\n                    <LoadMasterChip\n                      value={load?.loadMaster}\n                      slots={load?.slots || []}\n                      onSelect={updateLoadMaster}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n              }\n            }}\n          />\n        )}\n      >\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state || LoadState.Open],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      {/* <CardView {...{ load, loading, refetch, onSlotPress, onDeletePress: onDeleteSlot }} /> */}\n      <Divider />\n      <TableView\n        {...{\n          slots: load?.slots?.filter(Boolean) || [],\n          load,\n          loading,\n          refetch,\n          onSlotPress,\n          onDeletePress: onDeleteSlot,\n          onSlotGroupPress,\n          onAvailableSlotPress,\n        }}\n      />\n      {load && isFocused ? <ActionButton load={load} /> : null}\n      <ManifestUserSheet\n        open={forms.manifest.open}\n        onClose={() => dispatch(actions.forms.manifest.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.manifest.setOpen(false));\n        }}\n      />\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </View>\n  );\n}\n\nexport default function LoadScreenWrapper() {\n  const route = useRoute<RouteProp<LoadScreenRoute>>();\n  const loadId = route?.params?.loadId;\n\n  return (\n    <LoadProvider id={loadId}>\n      <LoadScreen />\n    </LoadProvider>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  const value = React.useMemo(\n    () => ({\n      index,\n      count,\n      setIndex: (idx: number) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref.current?.scrollToIndex({ index: idx, animated: true });\n      },\n    }),\n    [count, index]\n  );\n\n  return (\n    <WizardContext.Provider value={value}>\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema.d';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"height\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds as Required<typeof winds>}\n        keyExtractor={(item, index) => `wind.${item.altitude}.${index}`}\n        scrollEnabled={false}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { dropzone } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from 'app/components/wizard/Wizard';\nimport WizardCompleteStep from 'app/components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    dispatch,\n  ]);\n\n  const { dropzone } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport function useAuthenticatedNavigation() {\n  return useNavigation<NavigationProp<AuthenticatedRoutes>>();\n}\n","import * as React from 'react';\nimport { Button, HelperText } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\nimport { useAuthenticatedNavigation } from '../../useAuthenticatedNavigation';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useAuthenticatedNavigation();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: (message) => {\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }));\n    },\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    dispatch(\n      actions.notifications.showSnackbar({\n        message: 'Weather board updated',\n        variant: 'success',\n      })\n    );\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [mutationCreateWeatherConditions, state, dropzoneId, navigation, dispatch]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() =>\n          navigation.navigate('Manifest', {\n            screen: 'JumpRunScreen',\n          })\n        }\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"outlined\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload Conditions\n        </Button>\n        <HelperText type=\"info\">\n          Winds aloft and temperature are retrieved from MarkSchulze.net's amazing Winds Aloft\n          service.\n        </HelperText>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 0,\n  },\n});\n","import slice from './slice';\nimport Notifications from './Notifications';\n\nconst { actions } = slice;\n\nexport { actions };\nexport default Notifications;\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { ChipProps } from 'app/components/chips/Chip';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IDropzoneUserChipSelect {\n  value?: DropzoneUserEssentialsFragment | null;\n  label: string;\n  icon?: ChipProps['icon'];\n  requiredPermissions: Permission[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(dzuser: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const { label, requiredPermissions, icon, value, onLoadingStateChanged, onSelect } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]: DropzoneUserEssentialsFragment[]) => (first ? onSelect(first) : null),\n    [onSelect]\n  );\n  const getItemLabel = React.useCallback(\n    (dzUser: DropzoneUserEssentialsFragment) => dzUser?.user.name,\n    []\n  );\n  const isSelected = React.useCallback(\n    (item: DropzoneUserEssentialsFragment) => item.id === value?.id,\n    [value?.id]\n  );\n  const selected = React.useMemo(\n    () => [value].filter(Boolean) as DropzoneUserEssentialsFragment[],\n    [value]\n  );\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUserEssentialsFragment>\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={\n          uniqBy(\n            data?.dropzoneUsers?.edges?.map((edge) => edge?.node) || [],\n            'id'\n          ) as DropzoneUserEssentialsFragment[]\n        }\n        selected={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChangeSelected={onChangeSelected}\n      />\n    </>\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onSelect(jt: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onSelect, onLoadingStateChanged } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<PlaneEssentialsFragment>\n        autoSelectFirst\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        selected={[value].filter(Boolean) as PlaneEssentialsFragment[]}\n        renderItemLabel={(plane: PlaneEssentialsFragment) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChangeSelected={([first]) => (first ? onSelect(first as PlaneEssentialsFragment) : null)}\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Checkbox, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DropzoneUserChipSelect from '../../input/chip_select/DropzoneUserChipSelect';\nimport PlaneChipSelect from '../../input/chip_select/PlaneChipSelect';\n\nexport default function LoadForm() {\n  const state = useAppSelector((root) => root.forms.load);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        placeholder=\"Optional\"\n        value={state.fields.name.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.load.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Slots\"\n        error={state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString()}\n        onChange={(newValue) =>\n          dispatch(actions.forms.load.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelect\n          value={state.fields.plane.value}\n          onSelect={(value) => {\n            dispatch(actions.forms.load.setField(['plane', value]));\n            dispatch(actions.forms.load.setField(['maxSlots', value.maxSlots]));\n          }}\n        />\n        <HelperText type={state.fields.plane.error ? 'error' : 'info'}>\n          {state.fields.plane.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"GCA\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['gca', dzUser]))}\n          value={state.fields.gca.value || null}\n          requiredPermissions={[Permission.ActAsGca]}\n        />\n        <HelperText type={state.fields.gca.error ? 'error' : 'info'}>\n          {state.fields.gca.error || ''}\n        </HelperText>\n\n        <DropzoneUserChipSelect\n          label=\"Pilot\"\n          onSelect={(dzUser) => dispatch(actions.forms.load.setField(['pilot', dzUser]))}\n          value={state.fields.pilot.value || null}\n          requiredPermissions={[Permission.ActAsPilot]}\n        />\n        <HelperText type={state.fields.pilot.error ? 'error' : 'info'}>\n          {state.fields.pilot.error || ''}\n        </HelperText>\n\n        <Divider style={{ marginVertical: 8 }} />\n\n        <Checkbox.Item\n          label=\"Allow public manifesting\"\n          status={state.fields.isOpen.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.load.setField(['isOpen', !state.fields.isOpen.value]))\n          }\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n    backgroundColor: 'white',\n  },\n});\n","import * as React from 'react';\n\nimport { useManifestContext } from 'app/api/crud/useManifest';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport { actions as snackbar } from '../notifications';\n\nimport { LoadState } from '../../api/schema.d';\nimport LoadForm from '../forms/load/LoadForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport { LoadFields } from '../forms/load/slice';\n\ninterface ILoadDialog {\n  open: boolean;\n  onClose(): void;\n  onSuccess(load: LoadDetailsFragment): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, onClose, onSuccess } = props;\n  const state = useAppSelector((root) => root.forms.load);\n  const [submitting, setSubmitting] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const { createLoad } = useManifestContext();\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  const onSave = React.useCallback(\n    async function onCreateLoad() {\n      try {\n        setSubmitting(true);\n        const result = await createLoad({\n          name: state.fields.name.value,\n          state: LoadState.Open,\n          maxSlots: state.fields.maxSlots.value || null,\n          plane: Number(state.fields.plane.value?.id) || null,\n          gca: Number(state.fields.gca.value?.id) || null,\n          pilot: Number(state.fields.pilot.value?.id) || null,\n        });\n\n        if ('error' in result && result.error) {\n          dispatch(actions.notifications.showSnackbar({ message: result.error, variant: 'error' }));\n        }\n\n        if ('fieldErrors' in result) {\n          result.fieldErrors?.forEach(({ field, message }) => {\n            dispatch(actions.forms.load.setFieldError([field as keyof LoadFields, message]));\n          });\n        }\n\n        if ('load' in result) {\n          if (result.load?.id) {\n            dispatch(\n              snackbar.showSnackbar({\n                message: `Load ${result?.load?.name || `#${result?.load?.loadNumber}`} created`,\n                variant: 'success',\n              })\n            );\n\n            if (result?.load) {\n              onSuccess(result.load);\n            }\n            dispatch(actions.forms.load.reset());\n            requestAnimationFrame(() => dispatch(actions.forms.load.setOpen(false)));\n          }\n        }\n      } finally {\n        setSubmitting(false);\n      }\n    },\n    [\n      createLoad,\n      dispatch,\n      onSuccess,\n      state.fields.gca.value?.id,\n      state.fields.maxSlots.value,\n      state.fields.name.value,\n      state.fields.pilot.value?.id,\n      state.fields.plane.value?.id,\n    ]\n  );\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSave}\n      scrollable\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={submitting}\n      title=\"New Load\"\n    >\n      <LoadForm />\n    </DialogOrSheet>\n  );\n}\n","import { useDropzoneContext } from 'app/api/crud';\nimport * as React from 'react';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\n\nconst schema = yup.object().shape({\n  hasLicense: yup.boolean().isTrue('You need to select a license on your user profile'),\n  hasMembership: yup.boolean().isTrue('Your membership is out of date'),\n  hasRigInspection: yup.boolean().isTrue('Your rig needs to be inspected before you can manifest'),\n  hasReserveInDate: yup.boolean().isTrue('Your rig needs a reserve repack'),\n  hasExitWeight: yup.boolean().isTrue('You need to set your exit weight on your profile'),\n});\n\nexport default function useManifestValidator() {\n  const { currentUser } = useDropzoneContext();\n\n  const canManifest = React.useCallback(\n    async function CheckManifestRequirements() {\n      try {\n        await schema.validate(currentUser, { abortEarly: true });\n        return true;\n      } catch (err) {\n        if (err instanceof ValidationError) {\n          throw err;\n        }\n        return false;\n      }\n    },\n    [currentUser]\n  );\n\n  return { canManifest };\n}\n","import { DragOverlay } from '@dnd-kit/core';\nimport * as React from 'react';\nimport UserRow from '../UserRow';\nimport type { ISlotUserRowProps } from '../UserRow';\n\nexport default function DraggingRow(props: { item?: ISlotUserRowProps }) {\n  const { item } = props;\n  return <DragOverlay>{item ? <UserRow {...item} /> : null}</DragOverlay>;\n}\n","import * as React from 'react';\nimport { DndContext, DragEndEvent, DragStartEvent } from '@dnd-kit/core';\nimport UserRowDragOverlay from 'app/components/slots_table/DragAndDrop/DraggingRow';\nimport type { ISlotUserRowProps } from 'app/components/slots_table/UserRow';\nimport { useManifestContext } from 'app/api/crud/useManifest';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function DragDropWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [draggedItem, setDraggedItem] = React.useState<ISlotUserRowProps>();\n  const { moveSlot } = useManifestContext();\n  const dispatch = useAppDispatch();\n\n  const onDragEnd = React.useCallback(\n    async (event: DragEndEvent) => {\n      const targetLoad = event.over?.data?.current?.loadId;\n      const sourceLoad = event.active.data.current?.loadId;\n      const sourceSlot = event?.active?.data?.current?.slotId;\n      const targetSlot = event?.over?.data?.current?.slotId;\n\n      console.debug(`Moving Slot ${sourceSlot} from Load ${sourceLoad} to Load ${targetLoad}`, {\n        targetLoad,\n        sourceLoad,\n        sourceSlot,\n      });\n\n      if (sourceLoad !== targetLoad) {\n        const response = await moveSlot(sourceLoad, {\n          targetLoad: Number(targetLoad),\n          sourceSlot: Number(sourceSlot),\n          targetSlot: targetSlot ? Number(targetSlot) : undefined,\n        });\n\n        if ('error' in response && response.error) {\n          dispatch(actions.notifications.showSnackbar({ message: response.error }));\n        }\n      }\n    },\n    [dispatch, moveSlot]\n  );\n  return (\n    <DndContext\n      onDragStart={(event: DragStartEvent) => {\n        console.debug('Drag start', event, event?.active?.data?.current?.props);\n        setDraggedItem(event?.active?.data?.current?.props);\n      }}\n      onDragEnd={onDragEnd}\n    >\n      {children}\n      <UserRowDragOverlay item={draggedItem} />\n    </DndContext>\n  );\n}\n","import useColorScheme from './useColorScheme';\nimport colors from '../constants/Colors';\n\nfunction usePalette() {\n  const colorScheme = useColorScheme();\n\n  return colors[colorScheme];\n}\n\nexport default usePalette;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List } from 'react-native-paper';\n\nimport { Text, View } from 'app/components/Themed';\nimport usePalette from 'app/hooks/usePalette';\n\ninterface IGetStartedProps {\n  hasPlanes: boolean;\n  hasTicketTypes: boolean;\n  isPublic: boolean;\n}\nexport default function GetStarted({ hasPlanes, hasTicketTypes, isPublic }: IGetStartedProps) {\n  const palette = usePalette();\n\n  return (\n    <View style={{ width: '70%' }}>\n      <Text style={styles.title}>Set up dropzone</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <List.Item\n        title=\"Create dropzone\"\n        left={() => <List.Icon color={palette.success} icon=\"check\" />}\n      />\n      <List.Item\n        title=\"Add a plane\"\n        left={() =>\n          !hasPlanes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n      <List.Item\n        title=\"Configure jump tickets\"\n        left={() =>\n          !hasTicketTypes ? (\n            <List.Icon color={palette.error} icon=\"close\" />\n          ) : (\n            <List.Icon color={palette.success} icon=\"check\" />\n          )\n        }\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: 335, height: 160, borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport { useLoadContext, withLoad } from 'app/api/crud/useLoad';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  onPress(): void;\n}\n\nfunction LoadCard(props: ILoadCardSmall) {\n  const { onPress } = props;\n  const dispatch = useAppDispatch();\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const { load, loading, refetch, updatePlane, updatePilot } = useLoadContext();\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 8,\n        minWidth: 300,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber || '?'}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <View style={{ flexDirection: 'row', flexWrap: 'nowrap', backgroundColor: 'transparent' }}>\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              if ((load?.occupiedSlots || 0) > (plane.maxSlots || 0)) {\n                const diff = (load?.occupiedSlots || 0) - (plane.maxSlots || 0);\n\n                dispatch(\n                  actions.notifications.showSnackbar({\n                    message: `You need to take ${diff} people off the load to fit on this plane`,\n                    variant: 'info',\n                  })\n                );\n              } else {\n                await updatePlane(plane);\n                refetch();\n              }\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12, marginTop: 0 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n\nexport default withLoad(LoadCard);\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView } from 'react-native';\nimport { Button, Card, IconButton, Paragraph, ProgressBar, Text } from 'react-native-paper';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { SlotDetailsFragment, SlotEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport LoadSlotTable from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useLoadContext } from 'app/api/crud';\nimport { withLoad } from 'app/api/crud/useLoad';\nimport { useManifestContext } from 'app/api/crud/useManifest';\nimport LoadingCard from './Loading';\n\ninterface ILoadCardLarge {\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: SlotEssentialsFragment[]): void;\n  onSlotPress(slot: SlotEssentialsFragment): void;\n  onManifest(): void;\n}\n\nfunction LoadCard(props: ILoadCardLarge) {\n  const { onManifest, onManifestGroup, controlsVisible, onSlotGroupPress, onSlotPress } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n  const { deleteSlot } = useManifestContext();\n  const [deletingSlot, setDeletingSlot] = React.useState(false);\n\n  const {\n    load,\n    loading,\n    refetch,\n    update,\n    updateGCA,\n    updatePlane,\n    updatePilot,\n    dispatchInMinutes,\n    updateLoadMaster,\n    markAsLanded,\n  } = useLoadContext();\n  const currentDropzone = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      try {\n        setDeletingSlot(true);\n\n        const response = await deleteSlot({\n          id: Number(slot.id),\n        });\n\n        if ('error' in response && response.error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message:\n                response?.error ||\n                `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`,\n              variant: 'error',\n            })\n          );\n        } else if ('slot' in response && slot?.id) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `${\n                response.slot?.dropzoneUser?.user?.name || 'User'\n              } has been taken off load #${load?.loadNumber}`,\n              variant: 'success',\n            })\n          );\n        }\n      } finally {\n        setDeletingSlot(false);\n      }\n    },\n    [deleteSlot, dispatch, load?.loadNumber]\n  );\n\n  const navigation = useAuthenticatedNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text testID=\"title\">{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || update.loading || deletingSlot}\n        color={state.theme.colors.primary}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          paddingHorizontal: 0,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View\n          style={{ flexDirection: 'row', paddingHorizontal: 8, backgroundColor: 'transparent' }}\n        >\n          <ScrollView\n            style={{ height: 32 }}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              small\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: `You need to take ${diff} people off the load to fit on this plane`,\n                      variant: 'info',\n                    })\n                  );\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip small value={load?.gca} onSelect={updateGCA} />\n            <PilotChip small value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              small\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <LoadSlotTable\n          {...{ load, loading, onSlotPress, onSlotGroupPress }}\n          onDeletePress={onDeleteSlot}\n          onAvailableSlotPress={() =>\n            load?.id &&\n            navigation.navigate('Manifest', {\n              screen: 'LoadScreen',\n              params: { loadId: load?.id },\n            })\n          }\n          onSlotPress={onSlotPress}\n          fields={[SlotFields.JumpType].filter(Boolean) as SlotFields[]}\n        />\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button\n              mode=\"outlined\"\n              onPress={() => dispatchInMinutes(null)}\n              testID=\"dispatch-cancel\"\n            >\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              setOpen={setDispatchOpen}\n              open={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <MenuItem\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a load master before this load can be finalized',\n                      variant: 'info',\n                    })\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return dispatch(\n                    actions.notifications.showSnackbar({\n                      message: 'You must select a pilot before this load can be finalized',\n                      variant: 'info',\n                    })\n                  );\n                }\n                return markAsLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nexport default withLoad(LoadCard);\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from 'app/utils/calculateCoordinatesByAngle';\nimport Map from 'app/components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.x,\n    y: origin.y,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: rootLayout.height / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons\n            name=\"airplane\"\n            size={20}\n            color=\"#ffffff\"\n            style={styles.planeIcon}\n          />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  planeIcon: { transform: [{ rotate: '-45deg' }] },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { actions, useAppDispatch } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport parseISO from 'date-fns/parseISO';\nimport nightBackground from '../../../../../../assets/images/night.png';\nimport weatherBackground from '../../../../../../assets/images/weather.png';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const { dropzone, loading, called } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? parseISO(dropzone.currentConditions.createdAt)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  const onEditWindboard = React.useCallback(() => {\n    if (canUpdate && dropzone?.currentConditions) {\n      dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'WindScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const onEditJumprun = React.useCallback(() => {\n    if (dropzone?.currentConditions && canUpdate) {\n      dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'JumpRunScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const defaultBackground = theme.dark ? nightBackground : weatherBackground;\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        marginBottom: 8,\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={onEditWindboard}\n      >\n        <ImageBackground\n          source={defaultBackground}\n          style={{ ...StyleSheet.absoluteFillObject, opacity: 0.75 }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        height: height.current.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [100, 210],\n                        }),\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, 10],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'left' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onLongPress={onEditJumprun}\n                      onPress={onEditWindboard}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    height: 200,\n    width: '100%',\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    flexGrow: 3,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: 'rgba(50, 50,50, 0.5)',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  jumpRun: {\n    width: 94,\n    height: 94,\n    marginBottom: 24,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\nimport * as React from 'react';\nimport { Card, List } from 'react-native-paper';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\n\nexport default function SetupProfileCard() {\n  const openWizard = useProfileWizard();\n  const onPress = React.useCallback(() => openWizard(), [openWizard]);\n\n  return (\n    <Card style={styles.card} {...{ onPress }}>\n      <Card.Content style={styles.content}>\n        <List.Item\n          title=\"Complete your profile\"\n          description=\"Let this dropzone know who you are\"\n          titleStyle={{ marginBottom: 4 }}\n          left={() => (\n            <LottieView\n              style={{ height: 80, width: 80 }}\n              autoPlay\n              loop={false}\n              // eslint-disable-next-line global-require\n              source={require('../../../../../assets/images/profile2.json')}\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"chevron-right\" style={styles.icon} />}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  RefreshControl,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport checkDropzoneSetupComplete from 'app/utils/checkDropzoneSetupComplete';\n\nimport NoResults from 'app/components/NoResults';\nimport { View } from 'app/components/Themed';\nimport { DropzoneState, LoadState, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport LoadDialog from 'app/components/dialogs/Load';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport ManifestUserDialog from 'app/components/dialogs/ManifestUser/ManifestUser';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport { useManifestContext } from 'app/api/crud/useManifest';\nimport DragDropWrapper from '../../../../components/slots_table/DragAndDrop/DragDropSlotProvider';\nimport GetStarted from '../../../../components/GetStarted';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\nimport SetupProfileCard from './SetupProfileCard';\n\nconst loadingFragment: LoadDetailsFragment = {\n  id: '__LOADING__',\n  availableSlots: 0,\n  createdAt: '',\n  isFull: false,\n  isOpen: false,\n  loadNumber: 0,\n  maxSlots: 0,\n  occupiedSlots: 0,\n  plane: {\n    id: '__LOADING__',\n    maxSlots: 0,\n  },\n  state: LoadState.Open,\n  weight: 0,\n};\n\nconst setupProfileCardFragment = { ...loadingFragment, id: '__SETUP_PROFILE_CARD__' };\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const setup = useAppSelector((root) => root.screens.dropzoneWizard);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const [isSetupCheckComplete] = React.useState(false);\n  const { canManifest } = useManifestValidator();\n  const { dropzone, currentUser, loading, refetch, fetchMore } = useDropzoneContext();\n  const manifest = useManifestContext();\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  React.useEffect(() => {\n    if (dropzone && isFocused && canUpdateDropzone) {\n      const dropzoneWizardIndex = checkDropzoneSetupComplete(dropzone);\n      console.debug({ dropzoneWizardIndex });\n\n      if (dropzoneWizardIndex) {\n        dispatch(actions.screens.dropzoneWizard.setIndex(dropzoneWizardIndex));\n        dispatch(actions.forms.dropzone.setOriginal(dropzone));\n        if (dropzone?.planes?.length) {\n          dispatch(actions.forms.plane.setOriginal(dropzone.planes[0]));\n        }\n        if (dropzone?.ticketTypes?.length) {\n          dispatch(actions.forms.ticketType.setOriginal(dropzone.ticketTypes[0]));\n        }\n        navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n      }\n    }\n  }, [\n    dispatch,\n    dropzone,\n    isFocused,\n    navigation,\n    setup.completed,\n    isSetupCheckComplete,\n    canUpdateDropzone,\n  ]);\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const hasPlanes = !!dropzone?.planes?.length;\n  const hasTicketTypes = !!dropzone?.ticketTypes?.length;\n  const isPublic = dropzone?.status === DropzoneState.Public;\n  const isSetupComplete = hasPlanes && hasTicketTypes;\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      // dispatch(actions.global.setAccentColor(dropzone.secondaryColor));\n      console.log('Accent color disabled');\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const onManifest = React.useCallback(\n    async function Manifest(load: LoadDetailsFragment) {\n      try {\n        await canManifest();\n        dispatch(actions.forms.manifest.setOpen(true));\n        dispatch(actions.forms.manifest.setField(['dropzoneUser', currentUser]));\n        dispatch(actions.forms.manifest.setField(['load', load]));\n      } catch (e) {\n        if (e instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: e.message,\n              variant: 'info',\n            })\n          );\n        }\n      }\n    },\n    [canManifest, currentUser, dispatch]\n  );\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const initialLoading = !dropzone || (!manifest?.loads?.length && manifest?.loading);\n\n  const theme = useTheme();\n\n  const data = React.useMemo(\n    () =>\n      [\n        !initialLoading &&\n        (!currentUser?.hasExitWeight || !currentUser?.hasLicense || !currentUser.user?.name)\n          ? setupProfileCardFragment\n          : null,\n        ...(initialLoading ? new Array(5).fill(loadingFragment) : manifest.loads),\n      ].filter(Boolean),\n    [\n      manifest?.loads,\n      currentUser?.hasExitWeight,\n      currentUser?.hasLicense,\n      currentUser?.user?.name,\n      initialLoading,\n    ]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: load, index }: { item: LoadDetailsFragment; index: number }) => {\n      // 1 means loading, because null and undefined\n      // get filtered out\n      if (load.id === '__LOADING__') {\n        return manifestScreen.display === 'list' ? (\n          <LoadingCardLarge key={`loading-card-${index}`} />\n        ) : (\n          <LoadingCardSmall key={`loading-card-${index}`} />\n        );\n      }\n\n      if (load.id === '__SETUP_PROFILE_CARD__') {\n        return <SetupProfileCard />;\n      }\n      return manifestScreen.display === 'list' ? (\n        <LoadCardLarge\n          controlsVisible={false}\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onSlotPress={(slot) => {\n            if (load) {\n              dispatch(actions.forms.manifest.setOpen(slot));\n              dispatch(actions.forms.manifest.setField(['load', load]));\n            }\n          }}\n          onSlotGroupPress={(slots) => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setFromSlots({ load, slots }));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n            // FIXME: Open manifest group drawer\n          }}\n          onManifest={() => {\n            onManifest(load);\n          }}\n          onManifestGroup={() => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          }}\n        />\n      ) : (\n        <LoadCardSmall\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'LoadScreen',\n                  params: { loadId: load?.id },\n                },\n              },\n            })\n          }\n        />\n      );\n    },\n    [dispatch, manifestScreen.display, navigation, onManifest]\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <ProgressBar\n        visible={loading || manifest.loading}\n        indeterminate\n        color={state.theme.colors.primary}\n      />\n\n      <View style={styles.container}>\n        {!initialLoading && !isSetupComplete ? (\n          <GetStarted {...{ hasPlanes, hasTicketTypes, isPublic }} />\n        ) : (\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              height: Dimensions.get('window').height,\n              backgroundColor: theme.colors.background,\n            }}\n          >\n            {dropzone?.banner && (\n              <ImageBackground\n                source={{ uri: dropzone.banner }}\n                style={{ position: 'absolute', top: -8, left: 0, width: '100%', height: 340 }}\n                resizeMode=\"cover\"\n              />\n            )}\n            <DragDropWrapper>\n              <FlatList<LoadDetailsFragment>\n                ListHeaderComponent={() => <WeatherConditions />}\n                ListEmptyComponent={() => (\n                  <NoResults\n                    style={{ marginTop: 156 }}\n                    title=\"No loads so far today\"\n                    subtitle=\"How's the weather?\"\n                  />\n                )}\n                style={{\n                  paddingTop: 35,\n                  flex: 1,\n                  height: Dimensions.get('window').height,\n                }}\n                testID=\"loads\"\n                keyExtractor={(item, idx) => `load-small-${item?.id || idx}-${idx}`}\n                key={`loads-columns-${numColumns}`}\n                contentContainerStyle={{\n                  width: contentWidth,\n                  alignSelf: 'center',\n                  paddingBottom: 100,\n                }}\n                numColumns={numColumns}\n                {...{ data, renderItem }}\n                refreshControl={\n                  <RefreshControl refreshing={loading} onRefresh={() => fetchMore()} />\n                }\n              />\n            </DragDropWrapper>\n          </View>\n        )}\n        {manifest.permissions.canCreateLoad && isSetupComplete && (\n          <FAB\n            style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n            small\n            icon=\"plus\"\n            onPress={() => dispatch(actions.forms.load.setOpen(true))}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          open={isDisplayOptionsOpen}\n          setOpen={setDisplayOptionsOpen}\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n        >\n          <MenuItem\n            title=\"Show expanded cards\"\n            bold={manifestScreen.display !== 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <MenuItem\n            title=\"Show compact cards\"\n            bold={manifestScreen.display === 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n\n      <LoadDialog\n        onSuccess={() => {\n          dispatch(actions.forms.load.setOpen(false));\n          refetch();\n        }}\n        open={forms.load.open}\n        onClose={() => dispatch(actions.forms.load.setOpen(false))}\n      />\n      <ManifestUserDialog\n        open={forms.manifest.open}\n        onClose={() => dispatch(actions.forms.manifest.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.manifest.setOpen(false));\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import { DropzoneDetailedFragment } from 'app/api/operations';\nimport { DropzoneWizardStep } from 'app/screens/wizards/dropzone_wizard/slice';\n\nexport default function checkDropzoneSetupComplete(dropzone: DropzoneDetailedFragment) {\n  const completed = {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  };\n\n  let currentIndex;\n  if (dropzone?.ticketTypes?.length) {\n    completed[DropzoneWizardStep.Tickets] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Tickets;\n  }\n\n  if (dropzone.planes?.length) {\n    completed[DropzoneWizardStep.Aircraft] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Aircraft;\n  }\n\n  if (dropzone?.primaryColor) {\n    completed[DropzoneWizardStep.Branding] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Branding;\n  }\n  if (dropzone.lat && dropzone.lng) {\n    completed[DropzoneWizardStep.Location] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Location;\n  }\n\n  if (dropzone.federation?.id) {\n    completed[DropzoneWizardStep.Federation] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Federation;\n  }\n\n  if (dropzone.name) {\n    completed[DropzoneWizardStep.Name] = true;\n  } else {\n    currentIndex = DropzoneWizardStep.Name;\n  }\n\n  if (Object.values(completed).some((isComplete) => !isComplete)) {\n    return currentIndex;\n  }\n  return false;\n}\n","import * as React from 'react';\nimport { Divider, List, Switch, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneState, DropzoneStateEvent, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const { dropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const { updateVisibility } = useDropzonesContext();\n  const onChangeVisibility = React.useCallback(\n    async (event: DropzoneStateEvent) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, event);\n\n      if ('error' in result && result.error) {\n        dispatch(actions.notifications.showSnackbar({ message: result.error }));\n      }\n    },\n    [dispatch, dropzone?.id, updateVisibility]\n  );\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.surface }}>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n            onPress={() =>\n              !dropzone\n                ? null\n                : navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'Configuration',\n                        params: {\n                          screen: 'DropzoneSettingsScreen',\n                          params: {\n                            dropzone,\n                          },\n                        },\n                      },\n                    },\n                  })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n\n        <Divider />\n        <List.Item\n          title=\"Permissions\"\n          description=\"Grant or revoke access to define who can do what at this dropzone\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'PermissionScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Aircrafts\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'AircraftsScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'DropzoneRigsScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'RigInspectionTemplateScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Master Log\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"View historic data for daily operations\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'MasterLogScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title={\n              {\n                [DropzoneState.Archived]: 'Re-open dropzone',\n                [DropzoneState.Public]: 'Go offline',\n                [DropzoneState.Private]: 'Go live',\n                [DropzoneState.InReview]: 'Awaiting review',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            left={() => (\n              <List.Icon\n                color={theme.colors.text}\n                icon={\n                  {\n                    [DropzoneState.Archived]: 'archive',\n                    [DropzoneState.Public]: 'check',\n                    [DropzoneState.Private]: 'upload',\n                    [DropzoneState.InReview]: 'progress-upload',\n                  }[dropzone?.status || DropzoneState.Private] as IconSource\n                }\n              />\n            )}\n            right={() => (\n              <Switch\n                value={[DropzoneState.Public, DropzoneState.InReview].includes(\n                  dropzone?.status || DropzoneState.Private\n                )}\n                disabled={dropzone?.status === DropzoneState.InReview}\n                onValueChange={(value) => {\n                  onChangeVisibility(\n                    value ? DropzoneStateEvent.RequestPublication : DropzoneStateEvent.Unpublish\n                  );\n                }}\n              />\n            )}\n            onPress={() => {\n              switch (dropzone?.status) {\n                case DropzoneState.Archived:\n                  return onChangeVisibility(DropzoneStateEvent.Publish);\n                case DropzoneState.Private:\n                  return onChangeVisibility(DropzoneStateEvent.RequestPublication);\n                case DropzoneState.Public:\n                case DropzoneState.InReview:\n                  return onChangeVisibility(DropzoneStateEvent.Unpublish);\n                default:\n                  return null;\n              }\n            }}\n            description={\n              {\n                [DropzoneState.Archived]:\n                  'Your dropzone has been archived and is not visible to users',\n                [DropzoneState.Public]: 'Your dropzone is available to the public',\n                [DropzoneState.Private]:\n                  'Request a review to make your dropzone available to all users',\n                [DropzoneState.InReview]:\n                  'You may be contacted to verify the legitimacy of your dropzone.',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            descriptionNumberOfLines={4}\n          />\n        )}\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          title=\"Ticket types\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'TicketTypesScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <Divider />\n        <List.Item\n          title=\"Ticket add-ons\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'ExtrasScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Checkbox, List, Divider } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport Select from 'app/components/input/select/Select';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  onChange(value: number): void;\n}\n\nfunction AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange } = props;\n\n  return (\n    <Select\n      {...{ value, onChange }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\nexport default function TicketTypeForm() {\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useDropzoneContext();\n\n  const { data } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"Name of the ticket users will see\"\n        onChange={(newValue) => dispatch(actions.forms.ticketType.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Price\"\n        error={state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChange={(newValue) =>\n          dispatch(actions.forms.ticketType.setField(['cost', Number(newValue)]))\n        }\n      />\n      <HelperText type={state.fields.cost.error ? 'error' : 'info'}>\n        {state.fields.cost.error || 'Base cost without extra ticket addons'}\n      </HelperText>\n      <View style={{ width: '100%' }}>\n        <AltitudeSelect\n          value={state.fields.altitude.value ?? 14000}\n          onChange={(newValue) =>\n            dispatch(actions.forms.ticketType.setField(['altitude', newValue]))\n          }\n        />\n\n        {(!state.fields.altitude.value || ![4000, 14000].includes(state.fields.altitude.value)) && (\n          <TextInput\n            style={styles.field}\n            label=\"Custom altitude\"\n            error={state.fields.altitude.error}\n            value={state.fields.altitude?.value?.toString()}\n            onChange={(newValue) =>\n              dispatch(actions.forms.ticketType.setField(['altitude', Number(newValue)]))\n            }\n          />\n        )}\n\n        <Checkbox.Item\n          label=\"Tandem\"\n          style={{ width: '100%' }}\n          status={state.fields.isTandem.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(actions.forms.ticketType.setField(['isTandem', !state.fields.isTandem.value]))\n          }\n        />\n        <HelperText type={state.fields.isTandem.error ? 'error' : 'info'}>\n          {state.fields.isTandem.error ||\n            'Allow also manifesting a passenger when using this ticket type'}\n        </HelperText>\n\n        <Checkbox.Item\n          label=\"Public manifesting\"\n          style={{ width: '100%' }}\n          status={state.fields.allowManifestingSelf.value ? 'checked' : 'unchecked'}\n          onPress={() =>\n            dispatch(\n              actions.forms.ticketType.setField([\n                'allowManifestingSelf',\n                !state.fields.allowManifestingSelf.value,\n              ])\n            )\n          }\n        />\n\n        <HelperText type={state.fields.allowManifestingSelf.error ? 'error' : 'info'}>\n          {state.fields.allowManifestingSelf.error ||\n            'Allow users to manifest themselves with this ticket'}\n        </HelperText>\n\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        {data?.extras.map((extra) => (\n          <Checkbox.Item\n            key={`extra-${extra.id}`}\n            label={extra.name || ''}\n            status={\n              state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.ticketType.setField([\n                  'extras',\n                  state.fields.extras.value?.map(({ id }) => id).includes(extra.id)\n                    ? state.fields.extras.value?.filter(({ id }) => id !== extra.id)\n                    : [\n                        ...(state.fields.extras?.value as Required<\n                          TicketTypeExtraEssentialsFragment[]\n                        >),\n                        extra,\n                      ],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useIsFocused } from '@react-navigation/core';\nimport useMutationCreateTicketType from 'app/api/hooks/useMutationCreateTicketType';\nimport useMutationUpdateTicketType from 'app/api/hooks/useMutationUpdateTicketType';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport TicketTypeForm from '../forms/ticket_type/TicketTypeForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport { TicketTypeFields } from '../forms/ticket_type/slice';\n\ninterface ITicketTypeDialog {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, onClose } = props;\n  const state = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useDropzoneContext();\n\n  const createTicketType = useMutationCreateTicketType({\n    onSuccess: (payload) => {\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: `Saved`,\n          variant: 'success',\n        })\n      );\n      dispatch(actions.forms.ticketType.reset());\n      onClose();\n    },\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateTicketType = useMutationUpdateTicketType({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved`,\n            variant: 'success',\n          })\n        );\n        dispatch(actions.forms.ticketType.reset());\n        onClose();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.ticketType.setFieldError([field as keyof TicketTypeFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (isFocused) {\n      dispatch(actions.forms.ticketType.reset());\n    }\n  }, [dispatch, isFocused]);\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      await updateTicketType.mutate({\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    } else {\n      await createTicketType.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        altitude: state.fields.altitude.value,\n        allowManifestingSelf: state.fields.allowManifestingSelf.value,\n        extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n        isTandem: !!state.fields.isTandem.value,\n      });\n    }\n  }, [\n    createTicketType,\n    currentDropzone?.dropzone?.id,\n    state.fields.allowManifestingSelf.value,\n    state.fields.altitude.value,\n    state.fields.cost.value,\n    state.fields.extras?.value,\n    state.fields.isTandem.value,\n    state.fields.name.value,\n    state.original?.id,\n    updateTicketType,\n  ]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket' : 'New ticket'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={() => {\n        onClose();\n      }}\n      loading={createTicketType.loading || updateTicketType.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm />\n    </DialogOrSheet>\n  );\n}\n","import { useIsFocused, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport {\n  useArchiveTicketTypeMutation,\n  useTicketTypesQuery,\n  useUpdateTicketTypeMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport TicketTypesDialog from 'app/components/dialogs/TicketType';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport useRestriction from 'app/hooks/useRestriction';\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const form = useAppSelector((root) => root.forms.ticketType);\n  const dispatch = useAppDispatch();\n  const { data, loading, refetch } = useTicketTypesQuery({\n    variables: {\n      dropzone: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const route = useRoute();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n  const [mutationUpdateTicketType] = useUpdateTicketTypeMutation();\n  const [mutationDeleteTicketType] = useArchiveTicketTypeMutation();\n\n  React.useEffect(() => {\n    if (route.name === 'TicketTypesScreen') {\n      refetch();\n    }\n  }, [refetch, route.name]);\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.ticketTypes?.map((ticketType) => (\n          <SwipeActions\n            rightAction={{\n              label: 'Delete',\n              backgroundColor: 'red',\n              onPress: async () => {\n                const { data: result } = await mutationDeleteTicketType({\n                  variables: { id: Number(ticketType.id) },\n                });\n\n                if (result?.archiveTicketType?.errors?.length) {\n                  dispatch(\n                    actions.notifications.showSnackbar({\n                      message: result?.archiveTicketType?.errors[0],\n                      variant: 'error',\n                    })\n                  );\n                }\n              },\n            }}\n          >\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.ticketType.setOpen(ticketType));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n              <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n              <DataTable.Cell numeric>\n                <Switch\n                  onValueChange={() => {\n                    mutationUpdateTicketType({\n                      variables: {\n                        id: Number(ticketType.id),\n                        allowManifestingSelf: !ticketType.allowManifestingSelf,\n                      },\n                    });\n                  }}\n                  value={!!ticketType.allowManifestingSelf}\n                />\n              </DataTable.Cell>\n            </DataTable.Row>\n          </SwipeActions>\n        ))}\n      </DataTable>\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: state.theme.colors.primary }]}\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.ticketType.setOpen(true))}\n        label=\"New ticket type\"\n      />\n      <TicketTypesDialog\n        open={form.open}\n        onClose={() => dispatch(actions.forms.ticketType.setOpen(false))}\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value, onChange } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value?.lng === null || value?.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value?.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","/* eslint-disable max-len */\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TextInput,\n  HelperText,\n  Card,\n  List,\n  Checkbox,\n  useTheme,\n  TouchableRipple,\n  Avatar,\n  Title,\n} from 'react-native-paper';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport LottieView from 'app/components/LottieView';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useNavigation } from '@react-navigation/core';\nimport ColorPicker from '../../input/colorpicker';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport imagePickDark from '../../../../assets/images/image-pick.json';\nimport imagePickLight from '../../../../assets/images/image-pick-light.json';\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useFederationsQuery();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n      if (base64) {\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    navigation.setOptions({ title: state.fields.name.value });\n  }, [navigation, state.fields.name.value]);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={[styles.skeletonCard, { marginTop: 0, paddingHorizontal: 0 }]}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card\n          style={[\n            styles.card,\n            {\n              paddingLeft: 0,\n              paddingRight: 0,\n              paddingHorizontal: 0,\n              marginLeft: 0,\n              width: '100%',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          ]}\n        >\n          <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n            <TouchableRipple onPress={onPickImage} style={{ width: 185 }}>\n              {!state?.fields?.banner?.value ? (\n                <LottieView\n                  style={{ height: 175, width: 175 }}\n                  autoPlay\n                  loop={false}\n                  // eslint-disable-next-line global-require\n                  source={theme.dark ? imagePickLight : imagePickDark}\n                />\n              ) : (\n                <Avatar.Image\n                  size={175}\n                  source={{ uri: state?.fields?.banner?.value }}\n                  style={{\n                    borderWidth: StyleSheet.hairlineWidth,\n                    backgroundColor: theme.colors.primary,\n                  }}\n                />\n              )}\n            </TouchableRipple>\n            <Title>{state.fields.name.value}</Title>\n            <HelperText type=\"info\" style={{ marginTop: 16 }}>\n              Your banner is displayed on the weather board and on the dropzone selection screen\n            </HelperText>\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n            <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n    paddingHorizontal: 24,\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { Permission } from 'app/api/schema.d';\nimport DropzoneForm from 'app/components/forms/dropzone/DropzoneForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n\n  const { dropzone, loading } = useDropzoneContext();\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(dropzone));\n    }\n  }, [dropzone, dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) =>\n      dispatch(\n        actions.notifications.showSnackbar({\n          message,\n          variant: 'error',\n        })\n      ),\n    onSuccess: (payload) => {\n      if (payload?.dropzone?.id) {\n        dispatch(\n          actions.global.setDropzone({\n            ...(globalState.currentDropzone || {}),\n            ...payload?.dropzone,\n          })\n        );\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Your settings have been saved`,\n            variant: 'success',\n          })\n        );\n        navigation.goBack();\n      }\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federation: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        if (error instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    }\n    return null;\n  }, [state.fields, dispatch, mutationUpdateDropzone, dropzone?.id]);\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const isDirty: boolean = React.useMemo(() => {\n    return ['banner', 'isCreditSystemEnabled', 'name', 'primaryColor', 'lat', 'lng'].some(\n      (field) =>\n        state.original &&\n        field in state.original &&\n        state.original[field as keyof DropzoneEssentialsFragment] !==\n          state.fields[field as keyof typeof state.fields].value\n    );\n  }, [state]);\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <ScrollableScreen\n        style={{\n          width: '100%',\n          paddingTop: 0,\n          marginTop: 0,\n          backgroundColor: globalState.theme.colors.background,\n        }}\n        contentContainerStyle={styles.content}\n      >\n        <DropzoneForm loading={loading} />\n      </ScrollableScreen>\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={Boolean(canUpdateDropzone && isDirty)}\n        disabled={!isDirty || mutationUpdateDropzone.loading}\n        small\n        icon=\"check\"\n        onPress={onSave}\n        label=\"Save\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    marginTop: 0,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function DropzoneForm() {\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.plane.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Registration\"\n        error={state.fields.registration.error}\n        value={state.fields.registration?.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.plane.setField(['registration', newValue]))}\n      />\n      <TextInput\n        style={styles.field}\n        label=\"Min slots\"\n        error={state.fields.minSlots.error}\n        value={state.fields.minSlots.value?.toString()}\n        keyboardType=\"number-pad\"\n        onChange={(newValue) =>\n          dispatch(actions.forms.plane.setField(['minSlots', Number(newValue)]))\n        }\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Max slots\"\n        error={state.fields.maxSlots.error}\n        value={state.fields.maxSlots?.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Maximum amount of jumpers who can be manifested on one load\"\n        onChange={(newValue) =>\n          dispatch(actions.forms.plane.setField(['maxSlots', Number(newValue)]))\n        }\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    width: '100%',\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { useCreatePlaneMutation, useUpdatePlaneMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\n\nimport PlaneForm from '../forms/plane/PlaneForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IPlaneDialogProps {\n  open: boolean;\n  onClose(): void;\n}\n\nexport default function CreatePlaneScreen(props: IPlaneDialogProps) {\n  const { open, onClose } = props;\n  const currentDropzone = useDropzoneContext();\n  const state = useAppSelector((root) => root.forms.plane);\n  const dispatch = useAppDispatch();\n\n  const [mutationCreatePlane, create] = useCreatePlaneMutation();\n  const [mutationUpdatePlane, update] = useUpdatePlaneMutation();\n\n  const validate = React.useCallback((): boolean => {\n    let hasError = false;\n    if ((state.fields.name.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['name', 'Name is too short']));\n    }\n\n    if ((state.fields.registration.value || '').length < 3) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['registration', 'Registration is too short']));\n    }\n\n    if (!state.fields.maxSlots.value) {\n      hasError = true;\n      dispatch(actions.forms.plane.setFieldError(['maxSlots', 'Max slots must be specified']));\n    }\n\n    return !hasError;\n  }, [\n    dispatch,\n    state.fields.maxSlots.value,\n    state.fields.name.value,\n    state.fields.registration.value,\n  ]);\n\n  const onUpdatePlane = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationUpdatePlane({\n          variables: {\n            id: Number(state.original?.id),\n            name: name.value || '',\n            registration: registration.value || '',\n            minSlots: minSlots.value || 0,\n            maxSlots: maxSlots.value || 0,\n          },\n        });\n\n        const payload = result?.data?.updatePlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    }\n  }, [dispatch, mutationUpdatePlane, onClose, state.fields, state.original?.id, validate]);\n\n  const onCreate = React.useCallback(async () => {\n    const { name, registration, maxSlots, minSlots } = state.fields;\n\n    if (validate()) {\n      try {\n        const result = await mutationCreatePlane({\n          variables: {\n            dropzoneId: Number(currentDropzone?.dropzone?.id),\n            name: name.value || '',\n            registration: registration.value || '',\n            minSlots: minSlots.value || 0,\n            maxSlots: maxSlots.value || 0,\n          },\n        });\n\n        const payload = result?.data?.createPlane;\n\n        if (payload?.fieldErrors?.length) {\n          payload.fieldErrors.forEach(({ field, message }) => {\n            switch (field) {\n              case 'max_slots':\n                return dispatch(actions.forms.plane.setFieldError(['maxSlots', message]));\n              case 'name':\n                return dispatch(actions.forms.plane.setFieldError(['name', message]));\n              case 'min_slots':\n                return dispatch(actions.forms.plane.setFieldError(['minSlots', message]));\n              case 'registration':\n                return dispatch(actions.forms.plane.setFieldError(['registration', message]));\n              default:\n                return null;\n            }\n          });\n          return;\n        }\n\n        if (payload?.errors?.length) {\n          payload.errors.forEach((message) =>\n            dispatch(actions.notifications.showSnackbar({ message, variant: 'error' }))\n          );\n        }\n\n        if (payload?.plane) {\n          const plane = payload?.plane;\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: `Added plane ${plane.name}`,\n              variant: 'success',\n            })\n          );\n          onClose();\n          dispatch(actions.forms.plane.reset());\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          dispatch(\n            actions.notifications.showSnackbar({\n              message: error.message,\n              variant: 'error',\n            })\n          );\n        }\n      }\n    }\n  }, [\n    currentDropzone?.dropzone?.id,\n    dispatch,\n    mutationCreatePlane,\n    onClose,\n    state.fields,\n    validate,\n  ]);\n\n  const onSave = React.useMemo(() => {\n    if (state.original?.id) {\n      return onUpdatePlane;\n    }\n    return onCreate;\n  }, [onCreate, onUpdatePlane, state.original?.id]);\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n  const onDialogClose = React.useCallback(() => {\n    onClose();\n    dispatch(actions.forms.plane.reset());\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSave}\n      loading={create.loading || update.loading}\n      onClose={onDialogClose}\n    >\n      <PlaneForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { useArchivePlaneMutation, usePlanesQuery } from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PlaneDialog from 'app/components/dialogs/Plane';\nimport useRestriction from 'app/hooks/useRestriction';\nimport SwipeActions from 'app/components/layout/SwipeActions';\n\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.forms.plane);\n  const { data, loading, refetch } = usePlanesQuery({\n    variables: {\n      dropzoneId: global.currentDropzoneId?.toString() as string,\n    },\n  });\n\n  const [deletePlane] = useArchivePlaneMutation();\n  const dispatch = useAppDispatch();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n  const theme = useTheme();\n  return (\n    <>\n      <ScrollableScreen\n        contentContainerStyle={{ backgroundColor: theme.colors.surface }}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n      >\n        <ProgressBar visible={loading} color={global.theme.colors.primary} />\n\n        {data?.planes?.length ? null : (\n          <NoResults\n            title=\"No planes?\"\n            subtitle=\"You need to have at least one plane to manifest loads\"\n          />\n        )}\n\n        {!data?.planes?.length ? null : (\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title>Name</DataTable.Title>\n              <DataTable.Title numeric>Registration</DataTable.Title>\n              <DataTable.Title numeric>Slots</DataTable.Title>\n            </DataTable.Header>\n            {data?.planes?.map((plane) => (\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: async () => {\n                    const { data: result } = await deletePlane({\n                      variables: { id: Number(plane.id) },\n                    });\n\n                    if (result?.deletePlane?.errors?.length) {\n                      dispatch(\n                        actions.notifications.showSnackbar({\n                          message: result.deletePlane.errors[0],\n                          variant: 'error',\n                        })\n                      );\n                    }\n                  },\n                }}\n              >\n                <DataTable.Row\n                  pointerEvents=\"none\"\n                  onPress={() => {\n                    dispatch(actions.forms.plane.setOpen(plane));\n                  }}\n                >\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            ))}\n          </DataTable>\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: global.theme.colors.primary }]}\n          visible={canCreatePlane}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.plane.setOpen(true))}\n          label=\"New plane\"\n        />\n      </ScrollableScreen>\n      <PlaneDialog open={state.open} onClose={() => dispatch(actions.forms.plane.setOpen(false))} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n  useTheme,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"minus-circle\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n            backgroundColor: theme.colors.primary,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport {\n  useRigInspectionTemplateQuery,\n  useUpdateRigInspectionTemplateMutation,\n} from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from 'app/components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { FormTemplate, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useWindowDimensions, View } from 'react-native';\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const currentDropzone = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const { data } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useUpdateRigInspectionTemplateMutation();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(\n        actions.forms.rigInspectionTemplate.setOpen(\n          data.dropzone.rigInspectionTemplate as FormTemplate\n        )\n      );\n    }\n  }, [data?.dropzone?.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone?.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      dispatch(\n        actions.notifications.showSnackbar({\n          message: 'Template saved',\n          variant: 'success',\n        })\n      );\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: error.message,\n            variant: 'error',\n          })\n        );\n      }\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone?.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    dispatch,\n  ]);\n\n  const { width } = useWindowDimensions();\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <ScrollableScreen style={{ marginTop: 16, width: width > 550 ? 550 : '100%' }}>\n        <Card style={{ width: '100%' }}>\n          <Card.Title title=\"Rig Inspection Form Template\" />\n\n          <Card.Content>\n            <RigInspectionTemplateForm />\n          </Card.Content>\n        </Card>\n        <Button\n          disabled={!canEdit}\n          mode=\"contained\"\n          loading={mutation.loading}\n          onPress={() => updateForm()}\n          style={{ width: '100%', marginTop: 16, borderRadius: 20 }}\n        >\n          Save template\n        </Button>\n      </ScrollableScreen>\n    </View>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport {\n  AvailableRigsDocument,\n  DropzoneUsersDetailedDocument,\n  useDropzoneRigsQuery,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport useRestriction from 'app/hooks/useRestriction';\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const { data, loading, refetch } = useDropzoneRigsQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useUpdateRigMutation();\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                    refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    dispatch(\n                      actions.notifications.showSnackbar({\n                        message: result?.updateRig.errors[0],\n                        variant: 'error',\n                      })\n                    );\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, List, useTheme } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useRolesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const theme = useTheme();\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useRolesQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const isFocused = useIsFocused();\n\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({ title: 'Permissions' });\n      refetch();\n    }\n  }, [isFocused, navigation, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <View style={{ height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ maxWidth: 550 }}>\n        <SkeletonContent\n          isLoading\n          containerStyle={{\n            width: '100%',\n            flex: 1,\n            flexGrow: 1,\n            paddingHorizontal: 16,\n          }}\n          layout={[\n            {\n              key: 'first',\n              height: 175,\n              marginTop: 70,\n              marginBottom: 35,\n              width: '100%',\n            },\n            { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n          ]}\n        />\n      </View>\n    </View>\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Manifesting\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDoubleSlot\"\n                    description=\"Manifest on more than one load at a time\"\n                    title=\"Double Manifest\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket types\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket addons\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Card, DataTable, List } from 'react-native-paper';\nimport startOfDay from 'date-fns/startOfDay';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { Query } from 'app/api/schema.d';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\n\nconst QUERY_MASTER_LOG = gql`\n  query MasterLog($dropzoneId: Int!, $timestamp: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      masterLog(date: $timestamp) {\n        id\n        dzso {\n          id\n          user {\n            id\n            name\n          }\n        }\n\n        loads {\n          id\n          name\n          loadNumber\n\n          loadMaster {\n            id\n            user {\n              name\n            }\n          }\n\n          gca {\n            id\n            user {\n              name\n            }\n          }\n\n          slots {\n            id\n            dropzoneUser {\n              id\n              license {\n                id\n                name\n              }\n              user {\n                id\n                name\n              }\n            }\n            ticketType {\n              id\n              name\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function DropzoneMasterLogScreen() {\n  const currentDropzone = useDropzoneContext();\n  const [timestamp, setTimestamp] = React.useState(startOfDay(new Date()).getTime());\n  const navigation = useNavigation();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setTimestamp(time * 1000)}\n          timestamp={timestamp / 1000}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [navigation, timestamp]);\n\n  const { data } = useQuery<Query>(QUERY_MASTER_LOG, {\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n      timestamp: Math.floor(timestamp / 1000),\n    },\n  });\n\n  return (\n    <ScrollableScreen>\n      <View style={{ width: '100%' }} />\n      {data?.dropzone?.masterLog?.loads?.map((load) => (\n        <Card style={{ width: '100%', marginVertical: 16 }}>\n          <Card.Title title={`Load ${load.loadNumber}`} />\n          <Card.Content>\n            <List.Item title=\"Pilot\" description={load?.pilot?.user?.name} />\n            <List.Item title=\"GCA\" description={load?.gca?.user?.name} />\n            <List.Item\n              title=\"Plane\"\n              description={\n                load?.plane?.id\n                  ? `${load?.plane?.name} (${load?.plane?.registration})`\n                  : 'No plane selected'\n              }\n            />\n            <DataTable>\n              <DataTable.Header>\n                <DataTable.Title>Name</DataTable.Title>\n                <DataTable.Title>Jump type</DataTable.Title>\n                <DataTable.Title numeric>Altitude</DataTable.Title>\n              </DataTable.Header>\n\n              {load.slots?.map((slot) => (\n                <DataTable.Row>\n                  <DataTable.Cell>{slot.dropzoneUser?.user?.name}</DataTable.Cell>\n                  <DataTable.Cell>{slot.jumpType?.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{slot.ticketType?.altitude}</DataTable.Cell>\n                </DataTable.Row>\n              ))}\n            </DataTable>\n          </Card.Content>\n        </Card>\n      ))}\n    </ScrollableScreen>\n  );\n}\n","import { useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CreditsSheet from 'app/components/dialogs/CreditsDialog/Credits';\n\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { useDropzoneTransactionsLazyQuery } from 'app/api/reflection';\nimport useDropzoneUserProfile from 'app/api/hooks/useDropzoneUserProfile';\nimport OrderCard from '../../../../components/orders/OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const { currentUser } = useDropzoneContext();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useDropzoneUserProfile(\n    route?.params?.userId || currentUser?.id\n  );\n\n  const isFocused = useIsFocused();\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({\n        variables: { dropzoneId: state.currentDropzoneId?.toString() as string },\n      });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        keyExtractor={(item) => `transaction-${item?.node?.id}`}\n        renderItem={({ item }) =>\n          !item?.node ? null : (\n            <OrderCard\n              onPress={() =>\n                !item?.node\n                  ? null\n                  : navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Users',\n                        params: {\n                          screen: 'OrderReceiptScreen',\n                          params: {\n                            orderId: item?.node?.id,\n                            userId: item?.node?.buyer?.id,\n                          },\n                        },\n                      },\n                    })\n              }\n              order={item?.node}\n              showAvatar\n              {...{ dropzoneUser }}\n            />\n          )\n        }\n      />\n\n      <CreditsSheet\n        onClose={() => dispatch(actions.forms.credits.setOpen(false))}\n        onSuccess={() => dispatch(actions.forms.credits.setOpen(false))}\n        open={forms.credits.open}\n        dropzoneUser={dropzoneUser || undefined}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { ExtraInput, CreateExtraPayload } from '../schema';\n\nconst MUTATION_CREATE_EXTRA = gql`\n  mutation CreateExtra($name: String, $ticketTypeIds: [Int!], $cost: Float, $dropzoneId: Int) {\n    createExtra(\n      input: {\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<ExtraInput, CreateExtraPayload>(MUTATION_CREATE_EXTRA, {\n  getPayload: (result) => result.createExtra,\n  fieldErrorMap: {\n    ticketTypeIds: 'ticketTypes',\n  },\n  validates: {\n    name: [isRequired('Tickets must have names')],\n    cost: [isRequired('Tickets must have a price'), isNumeric('Price must be a number')],\n  },\n});\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { ExtraInput, UpdateExtraPayload } from '../schema';\n\nconst MUTATION_UPDATE_EXTRA = gql`\n  mutation UpdateExtra(\n    $id: Int!\n    $name: String\n    $ticketTypeIds: [Int!]\n    $cost: Float\n    $dropzoneId: Int\n  ) {\n    updateExtra(\n      input: {\n        id: $id\n        attributes: {\n          name: $name\n          ticketTypeIds: $ticketTypeIds\n          cost: $cost\n          dropzoneId: $dropzoneId\n        }\n      }\n    ) {\n      extra {\n        ...extra\n\n        dropzone {\n          id\n          extras {\n            ...extra\n          }\n        }\n      }\n    }\n  }\n\n  fragment extra on Extra {\n    id\n    name\n    cost\n\n    ticketTypes {\n      id\n      name\n      cost\n      altitude\n      allowManifestingSelf\n    }\n  }\n`;\n\nexport default createMutation<{ id: number } & ExtraInput, UpdateExtraPayload>(\n  MUTATION_UPDATE_EXTRA,\n  {\n    getPayload: (result) => result.updateExtra,\n    fieldErrorMap: {\n      id: 'original',\n      ticketTypeIds: 'ticketTypes',\n    },\n  }\n);\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Checkbox, List } from 'react-native-paper';\nimport { useTicketTypesQuery } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nexport default function ExtraForm() {\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n  const currentDropzone = useDropzoneContext();\n  const { data } = useTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.extra.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Price\"\n        error={state.fields.cost.error}\n        value={state.fields.cost?.value?.toString()}\n        onChange={(newValue) => dispatch(actions.forms.extra.setField(['cost', Number(newValue)]))}\n      />\n\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        {data?.ticketTypes?.map((ticket) => (\n          <Checkbox.Item\n            label={ticket.name || ''}\n            status={\n              state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                ? 'checked'\n                : 'unchecked'\n            }\n            onPress={() =>\n              dispatch(\n                actions.forms.extra.setField([\n                  'ticketTypes',\n                  state.fields.ticketTypes.value?.map(({ id }) => id).includes(ticket.id)\n                    ? state.fields.ticketTypes.value?.filter(({ id }) => id !== ticket.id)\n                    : [...(state.fields.ticketTypes.value || []), ticket],\n                ])\n              )\n            }\n          />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    width: '100%',\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport useMutationCreateExtra from '../../api/hooks/useMutationCreateExtra';\nimport useMutationUpdateExtra from '../../api/hooks/useMutationUpdateExtra';\nimport { actions, useAppSelector, useAppDispatch } from '../../state';\nimport ExtraForm from '../forms/extra/ExtraForm';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport { ExtraFields } from '../forms/extra/slice';\n\ninterface ITicketTypeExtraDialog {\n  open: boolean;\n  onClose(): void;\n}\nexport default function TicketTypeExtraDialog(props: ITicketTypeExtraDialog) {\n  const { open, onClose } = props;\n  const currentDropzone = useDropzoneContext();\n  const state = useAppSelector((root) => root.forms.extra);\n  const dispatch = useAppDispatch();\n\n  const createExtra = useMutationCreateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n  const updateExtra = useMutationUpdateExtra({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        dispatch(\n          actions.notifications.showSnackbar({\n            message: `Saved ${payload?.extra?.name}`,\n            variant: 'success',\n          })\n        );\n        onClose();\n        dispatch(actions.forms.extra.reset());\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.extra.setFieldError([field as keyof ExtraFields, message])),\n    onError: (message) =>\n      dispatch(actions.notifications.showSnackbar({ message, variant: 'error' })),\n  });\n\n  const onSave = React.useCallback(async () => {\n    if (state?.original?.id) {\n      updateExtra.mutate({\n        id: Number(state.original.id),\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    } else {\n      createExtra.mutate({\n        dropzoneId: Number(currentDropzone?.dropzone?.id),\n        name: state.fields.name.value,\n        cost: state.fields.cost.value,\n        ticketTypeIds: state.fields.ticketTypes.value?.map(({ id }) => Number(id)),\n      });\n    }\n  }, [\n    createExtra,\n    currentDropzone?.dropzone?.id,\n    state.fields.cost.value,\n    state.fields.name.value,\n    state.fields.ticketTypes.value,\n    state.original?.id,\n    updateExtra,\n  ]);\n\n  const snapPoints = React.useMemo(() => [300, 500], []);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit ticket addon' : 'New ticket addon'}\n      open={open}\n      onClose={onClose}\n      loading={createExtra.loading || updateExtra.loading}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      snapPoints={snapPoints}\n    >\n      <ExtraForm />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport TicketTypeExtraDialog from 'app/components/dialogs/TicketTypeExtra';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport useRestriction from 'app/hooks/useRestriction';\n\nexport default function ExtrasScreen() {\n  const currentDropzone = useDropzoneContext();\n  const globalState = useAppSelector((root) => root.global);\n  const formState = useAppSelector((root) => root.forms.extra);\n  const { data, loading } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n  });\n  const dispatch = useAppDispatch();\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.primary} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.extras?.map((extra) => (\n            <DataTable.Row\n              onPress={() => {\n                dispatch(actions.forms.extra.setOpen(extra));\n              }}\n              pointerEvents=\"none\"\n            >\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={() => dispatch(actions.forms.extra.setOpen(true))}\n          label=\"New ticket addon\"\n        />\n      </View>\n      <TicketTypeExtraDialog\n        open={formState.open}\n        onClose={() => dispatch(actions.forms.extra.setOpen(false))}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","/* eslint-disable max-len */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport SettingsMenuScreen from './settings_menu/SettingsMenuScreen';\nimport TicketTypeSettingsScreen from './ticket_types/TicketTypesScreen';\nimport DropzoneSettingsScreen from './dropzone_settings/DropzoneSettingsScreen';\nimport PlanesScreen from './aircrafts/AircraftsScreen';\nimport RigInspectionTemplateScreen from './rig_inspection_template/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from './rigs/DropzoneRigsScreen';\nimport DropzonePermissionScreen from './permissions/PermissionsScreen';\nimport DropzoneMasterLogScreen from './master_log/MasterLogScreen';\nimport DropzoneTransactionsScreen from './transactions/DropzoneTransactionsScreen';\nimport ExtrasScreen from './extras/ExtrasScreen';\n\nexport type ConfigurationRoutes = {\n  DropzoneSettingsScreen: { dropzone: DropzoneEssentialsFragment };\n  SettingsMenuScreen: undefined;\n  TicketTypesScreen: undefined;\n  AircraftsScreen: undefined;\n  AircraftScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  TransactionsScreen: undefined;\n  PermissionScreen: undefined;\n  MasterLogScreen: undefined;\n};\n\nconst Configuration = createStackNavigator<ConfigurationRoutes>();\n\nexport function useConfigurationNavigation() {\n  return useNavigation<NavigationProp<ConfigurationRoutes>>();\n}\nexport default function SettingsTab() {\n  return (\n    <AppSignalBoundary>\n      <Configuration.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Configuration.Screen\n          name=\"SettingsMenuScreen\"\n          component={SettingsMenuScreen}\n          options={{ title: 'Settings' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneSettingsScreen\"\n          component={DropzoneSettingsScreen}\n          options={{ title: 'Basic settings' }}\n        />\n        <Configuration.Screen\n          name=\"AircraftsScreen\"\n          component={PlanesScreen}\n          options={{ title: 'Planes' }}\n        />\n        <Configuration.Screen\n          name=\"TicketTypesScreen\"\n          component={TicketTypeSettingsScreen}\n          options={{ title: 'Ticket types' }}\n        />\n        <Configuration.Screen\n          name=\"ExtrasScreen\"\n          component={ExtrasScreen}\n          options={{ title: 'Ticket add-ons' }}\n        />\n        <Configuration.Screen\n          name=\"RigInspectionTemplateScreen\"\n          component={RigInspectionTemplateScreen}\n          options={{ title: 'Rig Inspection Form' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneRigsScreen\"\n          component={DropzoneRigsScreen}\n          options={{ title: 'Dropzone rigs' }}\n        />\n        <Configuration.Screen\n          name=\"TransactionsScreen\"\n          component={DropzoneTransactionsScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Configuration.Screen\n          name=\"PermissionScreen\"\n          component={DropzonePermissionScreen}\n          options={{ title: 'Permissions' }}\n        />\n        <Configuration.Screen\n          name=\"MasterLogScreen\"\n          component={DropzoneMasterLogScreen}\n          options={{ title: 'Master log' }}\n        />\n      </Configuration.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport LoadScreen, { LoadScreenRoute } from './load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from './weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from './weather_conditions/JumpRunScreen';\nimport WindScreen from './weather_conditions/WindScreen';\n\nimport ManifestScreen from './manifest/ManifestScreen';\n\nimport User, { UserRoutes } from '../user/routes';\nimport Configuration, { ConfigurationRoutes } from '../configuration/routes';\n\nexport type DropzoneRoutes = {\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  ManifestScreen: undefined;\n  JumpRunScreen: undefined;\n  DashboardScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n  Configuration: NavigatorScreenParams<ConfigurationRoutes>;\n} & LoadScreenRoute;\n\nconst Manifest = createStackNavigator<DropzoneRoutes>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <AppSignalBoundary>\n      <Manifest.Navigator\n        screenOptions={{\n          headerShown: !!(globalState.credentials && globalState.currentDropzone),\n          header: (props) => <AppBar {...props} />,\n          headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Manifest.Screen\n          name=\"ManifestScreen\"\n          component={ManifestScreen}\n          options={{ title: 'Manifest' }}\n        />\n\n        <Manifest.Screen\n          name=\"WeatherConditionsScreen\"\n          component={WeatherConditionsScreen}\n          options={{ headerShown: false }}\n        />\n        <Manifest.Screen\n          name=\"WindScreen\"\n          component={WindScreen}\n          options={{ title: 'Winds Aloft' }}\n        />\n        <Manifest.Screen\n          name=\"JumpRunScreen\"\n          component={JumpRunScreen}\n          options={{ title: 'Jump Run' }}\n        />\n        <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n\n        <Manifest.Screen\n          name=\"User\"\n          component={User}\n          options={{ headerShown: false, presentation: 'modal' }}\n        />\n\n        <Manifest.Screen\n          name=\"Configuration\"\n          component={Configuration}\n          options={{ headerShown: false }}\n        />\n      </Manifest.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: string;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(parseISO(timestamp), { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification?.resource?.id },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport { Load, Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification.resource.id },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport NotificationCard from './NotificationCard';\nimport { useNotificationNavigation } from '../../useNotificationNavigation';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNotificationNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('User', {\n              screen: 'RigInspectionScreen',\n              params: {\n                rigId: (notification.resource as unknown as RigEssentialsFragment).id,\n                dropzoneUserId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n          : navigation.navigate('User', {\n              screen: 'ProfileScreen',\n              params: {\n                userId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n      }\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { NotificationRoutes } from './routes';\n\nexport function useNotificationNavigation() {\n  return useNavigation<NavigationProp<NotificationRoutes>>();\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { NotificationType } from 'app/api/schema.d';\nimport { useNotificationsLazyQuery } from 'app/api/reflection';\nimport { NotificationsQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/api/crud';\nimport { useAppSelector } from '../../../../state';\nimport NoResults from '../../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\nexport default function NotificationScreen() {\n  const state = useAppSelector((root) => root.global);\n  const { dropzone } = useDropzoneContext();\n  const [getNotifications, query] = useNotificationsLazyQuery();\n  const { data, loading, refetch } = query;\n  const variables: NotificationsQueryVariables | undefined = React.useMemo(\n    () => (!dropzone?.id ? undefined : { dropzoneId: dropzone?.id }),\n    [dropzone?.id]\n  );\n\n  const fetchNotifications = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      getNotifications({ variables });\n    }\n  }, [getNotifications, variables]);\n\n  React.useEffect(() => {\n    if (!loading && query?.variables?.dropzoneId !== variables?.dropzoneId) {\n      getNotifications({ variables });\n    }\n  }, [getNotifications, loading, query?.variables?.dropzoneId, variables]);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && fetchNotifications) {\n      fetchNotifications();\n    }\n  }, [isFocused, fetchNotifications]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n  console.debug('Notifications', data?.dropzone?.currentUser?.notifications?.edges);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n      {data?.dropzone?.currentUser?.notifications?.edges?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n        </View>\n      )}\n      <FlatList\n        data={data?.dropzone?.currentUser?.notifications?.edges}\n        numColumns={1}\n        keyExtractor={(edge) => `notification-${edge?.node?.id}`}\n        style={{\n          flex: 1,\n        }}\n        renderItem={({ item: edge }) => {\n          console.debug('Rendering notification ', edge?.node?.notificationType);\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return (\n                <BoardingCallNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.UserManifested:\n              console.debug('Renderign manifest card');\n              return <ManifestedCard key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return (\n                <RigInspectionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return (\n                <PermissionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PublicationRequested:\n              return (\n                <PublicationRequestNotification\n                  key={edge.node.id}\n                  notification={edge.node as never}\n                />\n              );\n            default:\n              return null;\n          }\n        }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from 'app/components/appbar/AppBar';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport NotificationsScreen from './notifications/NotificationsScreen';\nimport Users, { UserRoutes } from '../user/routes';\n\nexport type NotificationRoutes = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Notification = createStackNavigator<NotificationRoutes>();\n\nexport default function Notifications() {\n  return (\n    <AppSignalBoundary>\n      <Notification.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} hideWarnings />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n        initialRouteName=\"NotificationsScreen\"\n      >\n        <Notification.Screen\n          name=\"NotificationsScreen\"\n          component={NotificationsScreen}\n          options={{ title: 'Notifications' }}\n        />\n\n        <Notification.Screen name=\"User\" component={Users} />\n      </Notification.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\nexport interface IStatsProps {\n  title?: string;\n  columns?: number;\n  data: { label: string; value: number | string; color?: string }[];\n}\nexport default function Stats(props: IStatsProps) {\n  const { title, data, columns: cols } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const columns = React.useMemo(() => cols || data?.length || 1, [cols, data?.length]);\n\n  const itemWidth = React.useMemo(() => {\n    if (columns) {\n      return Math.floor((dimensions.width - 32) / columns);\n    }\n    return 50;\n  }, [columns, dimensions.width]);\n\n  const cardHeight = React.useMemo(\n    () => Math.ceil((data?.length || 1) / columns) * 120,\n    [columns, data?.length]\n  );\n  return (\n    <Card style={[styles.card, { height: cardHeight }]} {...{ onLayout }}>\n      <Card.Title title={title} />\n      <Card.Content style={styles.row}>\n        {data?.map(({ label, color, value }, index) => (\n          <View style={{ flexDirection: 'row', width: itemWidth, height: 70 }}>\n            <View style={styles.statistic}>\n              <View style={styles.value}>\n                <Text style={[styles.valueText, { color }]}>{value}</Text>\n              </View>\n              <View style={styles.label}>\n                <Text\n                  style={[styles.labelText, { color }]}\n                  lineBreakMode=\"middle\"\n                  numberOfLines={2}\n                >\n                  {label}\n                </Text>\n              </View>\n            </View>\n            {index === (data?.length || 0) - 1 ? null : <View style={styles.divider} />}\n          </View>\n        ))}\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { flex: 1, marginVertical: 4, maxWidth: '100%', justifyContent: 'center' },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    // width: 50,\n    // padding: 8,\n    // marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  label: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 4,\n    justifyContent: 'flex-start',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { subDays } from 'date-fns';\nimport * as React from 'react';\nimport ContributionGraph from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { Card } from 'react-native-paper';\n\nimport './LoadsByDay.css';\n\ninterface ILoadsByDayProps extends Pick<ViewProps, 'style'> {\n  data: { date: string; count: number }[];\n  startTime: Date;\n}\n\nexport default function LoadsByDay(props: ILoadsByDayProps) {\n  const { data, startTime, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Dispatched Loads\" />\n      <Card.Content style={{ height: dimensions.height - 75, width: dimensions.width - 32 }}>\n        <ContributionGraph\n          values={data}\n          showMonthLabels\n          classForValue={(value) => {\n            if (!value?.count) {\n              return 'none';\n            }\n            if (value.count > 3) {\n              return 'many';\n            }\n            if (value.count < 3 && value.count > 0) {\n              return 'few';\n            }\n            return 'none';\n          }}\n          horizontal\n          titleForValue={(value) =>\n            value?.date ? `${value?.date}: ${value?.count} loads` : 'No loads'\n          }\n          startDate={startTime || subDays(new Date(), 365)}\n          endDate={new Date()}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, FlatList, ScrollView } from 'react-native';\nimport { Card, DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { DropzoneState, DropzoneStateEvent } from 'app/api/schema.d';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport ChipSelect from 'app/components/input/chip_select/ChipSelect';\nimport Select from 'app/components/input/select/Select';\nimport { useDropzonesContext } from 'app/api/crud/useDropzones';\nimport { actions, useAppDispatch } from 'app/state';\n\ninterface IDropzonesTableProps {\n  dropzones: DropzoneStatisticsFragment[];\n  selected: DropzoneStatisticsFragment[];\n  onChangeSelected(dropzones: DropzoneStatisticsFragment[]): void;\n}\n\nconst stateEvent = {\n  [DropzoneState.Archived]: DropzoneStateEvent.Archive,\n  [DropzoneState.InReview]: DropzoneStateEvent.RequestPublication,\n  [DropzoneState.Private]: DropzoneStateEvent.Unpublish,\n  [DropzoneState.Public]: DropzoneStateEvent.Publish,\n};\n\nfunction DropzoneTableRow(props: { dropzone?: DropzoneStatisticsFragment | null }) {\n  const { dropzone } = props;\n\n  const { updateVisibility } = useDropzonesContext();\n  const dispatch = useAppDispatch();\n\n  const onChangeVisibility = React.useCallback(\n    async (state: DropzoneState) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, stateEvent[state]);\n\n      if ('error' in result && result.error) {\n        dispatch(actions.notifications.showSnackbar({ message: result.error }));\n      }\n    },\n    [dispatch, dropzone?.id, updateVisibility]\n  );\n\n  if (!dropzone) {\n    return null;\n  }\n  return (\n    <DataTable.Row\n      style={{\n        borderLeftColor: dropzone.primaryColor || undefined,\n        borderLeftWidth: 5,\n      }}\n    >\n      <DataTable.Cell style={styles.avatarCell}>\n        <UserAvatar size={20} name={dropzone?.name} image={dropzone.banner} />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.nameCell}>{dropzone.name}</DataTable.Cell>\n      <DataTable.Cell style={styles.createdCell}>\n        <HelperText type=\"info\">{format(parseISO(dropzone.createdAt), 'dd MMM, HH:mm')}</HelperText>\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.statusCell}>\n        <Select<DropzoneState>\n          value={dropzone.status}\n          options={[\n            { label: 'Archived', value: DropzoneState.Archived },\n            { label: 'Private', value: DropzoneState.Private },\n            { label: 'In Review', value: DropzoneState.InReview },\n            { label: 'Public', value: DropzoneState.Public },\n          ]}\n          onChange={onChangeVisibility}\n        />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.loadsCell}>\n        {dropzone?.statistics?.loadsCount || 0}\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.usersCell}>\n        {dropzone?.statistics?.activeUserCount || 0}\n      </DataTable.Cell>\n    </DataTable.Row>\n  );\n}\nexport default function DropzonesTable(props: IDropzonesTableProps) {\n  const { dropzones, onChangeSelected, selected } = props;\n\n  return (\n    <Card style={{ flexGrow: 1, width: '100%' }}>\n      <Card.Title title=\"Dropzones\" />\n      <Card.Content style={{ width: '100%' }}>\n        <ChipSelect\n          allowEmpty\n          items={dropzones}\n          onChangeSelected={onChangeSelected}\n          selected={selected}\n          renderItemLabel={(value) => value.name}\n        />\n        <ScrollView\n          horizontal\n          alwaysBounceVertical={false}\n          showsVerticalScrollIndicator={false}\n          style={{ width: '100%', height: '100%', flexGrow: 1 }}\n          contentContainerStyle={{ flexGrow: 1 }}\n        >\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title style={styles.avatarCell}>{null}</DataTable.Title>\n              <DataTable.Title style={styles.nameCell}>Name</DataTable.Title>\n              <DataTable.Title style={styles.createdCell}>Created</DataTable.Title>\n              <DataTable.Title style={styles.statusCell}>Status</DataTable.Title>\n              <DataTable.Title style={styles.loadsCell}>Loads</DataTable.Title>\n              <DataTable.Title style={styles.usersCell}>Active Users</DataTable.Title>\n            </DataTable.Header>\n            <FlatList\n              data={dropzones}\n              renderItem={({ item }) =>\n                !item ? null : <DropzoneTableRow key={`dropzone-row=${item?.id}`} dropzone={item} />\n              }\n            />\n          </DataTable>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n  },\n  avatarCell: {\n    flex: 5,\n  },\n  statusCell: {\n    flex: 20,\n  },\n  nameCell: {\n    flex: 40,\n  },\n  loadsCell: {\n    flex: 5,\n  },\n  usersCell: {\n    flex: 5,\n  },\n  createdCell: {\n    flex: 10,\n  },\n});\n","import { AbstractChartConfig } from 'react-native-chart-kit/dist/AbstractChart';\n\nexport const chartConfig: AbstractChartConfig = {\n  backgroundColor: '#e26a00',\n  backgroundGradientFrom: '#fb8c00',\n  backgroundGradientTo: '#ffa726',\n  decimalPlaces: 2, // optional, defaults to 2dp\n  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  style: {\n    borderRadius: 16,\n  },\n  propsForDots: {\n    r: '6',\n    strokeWidth: '2',\n    stroke: '#ffa726',\n  },\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientToOpacity: 0.5,\n  strokeWidth: 2, // optional, default 3\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false,\n};\n","import { chartConfig } from 'app/constants/ChartConfig';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { PieChart } from 'react-native-chart-kit';\nimport { Card } from 'react-native-paper';\n\ninterface IJumpTypePieChart extends Pick<ViewProps, 'style'> {\n  data: { name: string; count: number }[];\n}\n\nconst JUMP_TYPE_COLORS = {\n  angle: '#AA0000',\n  cam: '#FFAA00',\n  ws: '#AAFF00',\n  hnp: '#ABABFF',\n  hp: '#BAFFBA',\n  fs: '#DD00FF',\n  freefly: '#00ABFF',\n};\n\nexport default function LoadsByDay(props: IJumpTypePieChart) {\n  const { data: values, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const data = React.useMemo(\n    () =>\n      sortBy(values, 'count').map<{\n        name: string;\n        count: number;\n        legendFontColor: string;\n        legendFontSize: number;\n        color: string;\n      }>((stat) => ({\n        ...stat,\n        color:\n          stat?.name && stat?.name in JUMP_TYPE_COLORS\n            ? JUMP_TYPE_COLORS[stat.name as keyof typeof JUMP_TYPE_COLORS]\n            : '#AAA',\n        legendFontColor: '#333',\n        legendFontSize: 15,\n      })),\n    [values]\n  );\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Jump types\" />\n      <Card.Content style={{ height: 300 }}>\n        <PieChart\n          {...{ data, chartConfig }}\n          width={(dimensions.width || 400) - 32}\n          height={(dimensions.height || 200) - 75}\n          accessor=\"count\"\n          backgroundColor=\"transparent\"\n          paddingLeft=\"15\"\n          center={[0, 0]}\n          absolute={false}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import { useDropzonesStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { parseISO, subMonths } from 'date-fns';\nimport Chip from 'app/components/chips/Chip';\nimport { sumBy } from 'lodash';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport { Card } from 'react-native-paper';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { DropzoneState } from 'app/api/schema.d';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport DropzonesTable from './DropzonesTable';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nfunction AdminOverviewPage() {\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange).toISOString(),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return {\n      startTime: new Date(2020, 0, 1).toISOString(),\n      endTime: new Date().toISOString(),\n    };\n  }, [selectedTimeRange]);\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n\n  const [selectedDropzones, setSelectedDropzones] = React.useState<DropzoneStatisticsFragment[]>();\n\n  const { data } = useDropzonesStatisticsQuery({\n    variables: {\n      timeRange,\n    },\n  });\n  React.useEffect(() => {\n    if (data?.dropzones?.edges?.length && selectedDropzones === undefined) {\n      setSelectedDropzones(\n        data.dropzones.edges.map((edge) => edge?.node as DropzoneStatisticsFragment).filter(Boolean)\n      );\n    }\n  }, [data?.dropzones.edges, selectedDropzones]);\n\n  const summedStatistics = React.useMemo(\n    () => ({\n      revenueCents: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.revenueCentsCount || 0\n      ),\n      loadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.loadsCount || 0\n      ),\n      cancelledLoadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.cancelledLoadsCount || 0\n      ),\n      slotsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.slotsCount || 0\n      ),\n      pilotCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.pilotCount || 0\n      ),\n      dzsoCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.dzsoCount || 0),\n      gcaCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.gcaCount || 0),\n      totalUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.totalUserCount || 0\n      ),\n      activeUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.activeUserCount || 0\n      ),\n      inactiveUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.inactiveUserCount || 0\n      ),\n      loadCountByDay: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.loadCountByDay || [])\n        .flat(),\n      slotsByJumpType: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.slotsByJumpType || [])\n        .flat(),\n    }),\n    [selectedDropzones]\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        <Stats\n          title=\"Turn-around\"\n          columns={Platform.OS === 'web' ? undefined : 2}\n          data={\n            [\n              {\n                label: 'Total',\n                color: successColor,\n                value: `$${summedStatistics?.revenueCents || 0}`,\n              },\n              {\n                label: 'Dispatched',\n                value: summedStatistics?.loadsCount || 0,\n              },\n              {\n                label: 'Cancelled',\n                value: summedStatistics?.cancelledLoadsCount || 0,\n              },\n              {\n                label: 'Slots',\n                value: summedStatistics?.slotsCount || 0,\n              },\n            ].filter(Boolean) as IStatsProps['data']\n          }\n        />\n\n        <Stats\n          title=\"Accounts\"\n          columns={Platform.OS === 'web' ? undefined : 3}\n          data={[\n            { label: 'Dropzones', value: data?.dropzones.edges?.length || 0 },\n            { label: 'Users', value: summedStatistics?.totalUserCount || 0 },\n            {\n              label: 'Active',\n              value: summedStatistics?.activeUserCount || 0,\n              color: successColor,\n            },\n            {\n              label: 'Inactive',\n              value: summedStatistics?.inactiveUserCount || 0,\n              color: warningColor,\n            },\n            { label: 'Pilots', value: summedStatistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: summedStatistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: summedStatistics.dzsoCount || 0,\n            },\n          ]}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n        <LoadsByDay\n          style={styles.dispatchedLoadsCard}\n          data={summedStatistics?.loadCountByDay || []}\n          startTime={\n            timeRange?.startTime ? parseISO(timeRange?.startTime) : subMonths(new Date(), 6)\n          }\n        />\n\n        <JumpTypePieChart\n          style={styles.jumpTypesCard}\n          data={summedStatistics?.slotsByJumpType || []}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <DropzonesTable\n          selected={selectedDropzones || []}\n          onChangeSelected={setSelectedDropzones}\n          dropzones={\n            data?.dropzones?.edges?.map((edge) => edge?.node as DropzoneStatisticsFragment) || []\n          }\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nexport default function AdminOverviewPageWrapper() {\n  return (\n    <DropzonesProvider\n      state={[\n        DropzoneState.Archived,\n        DropzoneState.InReview,\n        DropzoneState.Private,\n        DropzoneState.Public,\n      ]}\n    >\n      <AdminOverviewPage />\n    </DropzonesProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n    marginVertical: 4,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList } from 'react-native';\nimport { DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { EventLevel } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\n\nconst LEVEL_COLORS = {\n  [EventLevel.Debug]: '#AF00FF',\n  [EventLevel.Error]: '#FF1515',\n  [EventLevel.Info]: '#15A0FF',\n};\n\ninterface IActivityFeedProps extends ActivityQueryVariables {\n  data: ActivityEssentialsFragment[];\n  onFetchMore(): void;\n}\n\nfunction FeedItem(props: { event?: ActivityEssentialsFragment | null }) {\n  const { event } = props;\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onPress = React.useCallback(() => {\n    if (event?.details) {\n      setExpanded(!expanded);\n    }\n  }, [event?.details, expanded]);\n\n  if (!event) {\n    return null;\n  }\n\n  return (\n    <>\n      <DataTable.Row\n        style={{\n          borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n          borderLeftWidth: 5,\n        }}\n        {...{ onPress }}\n      >\n        <DataTable.Cell style={styles.avatarCell}>\n          <UserAvatar\n            size={20}\n            name={event?.createdBy?.user?.name || 'System'}\n            image={event?.createdBy?.user?.image || undefined}\n          />\n          <HelperText type=\"info\">{format(parseISO(event.createdAt), 'dd MMM, HH:mm')}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.levelCell}>\n          <HelperText type=\"info\">{event?.level}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.messageCell}>{event?.message}</DataTable.Cell>\n      </DataTable.Row>\n      {!expanded ? null : (\n        <DataTable.Row\n          style={{\n            borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n            borderLeftWidth: 5,\n          }}\n        >\n          <DataTable.Cell style={styles.avatarCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.levelCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.messageCell}>{event?.details}</DataTable.Cell>\n        </DataTable.Row>\n      )}\n    </>\n  );\n}\nexport default function Feed(props: IActivityFeedProps) {\n  const { data, onFetchMore } = props;\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title style={styles.avatarCell}>Time</DataTable.Title>\n        <DataTable.Title style={styles.levelCell}>Level</DataTable.Title>\n        <DataTable.Title style={styles.messageCell}>Message</DataTable.Title>\n      </DataTable.Header>\n      <FlatList\n        {...{ data }}\n        renderItem={({ item }) =>\n          !item ? null : <FeedItem key={`event-log-row=${item?.id}`} event={item} />\n        }\n        onEndReached={onFetchMore}\n        onEndReachedThreshold={1}\n      />\n    </DataTable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarCell: {\n    flex: 1,\n  },\n  levelCell: {\n    flex: 1,\n  },\n  messageCell: {\n    flex: 4,\n  },\n});\n","import { useActivityDetailsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { EventLevel, EventAccessLevel, Permission } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { isEqual, uniqBy } from 'lodash';\nimport ChipSelect from '../input/chip_select/ChipSelect';\nimport Feed from './Feed';\n\ninterface IActivityFeedContainerProps extends ActivityQueryVariables {\n  onChange(variables: Partial<ActivityQueryVariables>): void;\n}\n\nexport default function ActivityFeedContainer(props: IActivityFeedContainerProps) {\n  const { dropzone, accessLevels, levels, timeRange, onChange } = props;\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewUserActivity = useRestriction(Permission.ViewUserActivity);\n\n  const variables: ActivityQueryVariables = React.useMemo(\n    () => ({\n      dropzone,\n      levels,\n      accessLevels,\n      timeRange,\n    }),\n    [accessLevels, dropzone, levels, timeRange]\n  );\n\n  const [getActivity, query] = useActivityDetailsLazyQuery();\n\n  React.useEffect(() => {\n    if (!isEqual(query?.variables, variables)) {\n      getActivity({ variables });\n    }\n  }, [getActivity, query?.variables, variables]);\n\n  const onFetchMore = React.useCallback(() => {\n    if (\n      query?.data?.activity?.pageInfo?.hasNextPage &&\n      !query?.loading &&\n      query?.data?.activity?.pageInfo?.endCursor !== query?.variables?.after\n    ) {\n      query\n        ?.fetchMore({ variables: { after: query?.data?.activity?.pageInfo?.endCursor } })\n        .then((result) => {\n          query?.updateQuery((prev) => ({\n            ...prev,\n            activity: {\n              ...prev?.activity,\n              ...result?.data?.activity,\n              pageInfo: result?.data?.activity?.pageInfo,\n              edges: uniqBy(\n                [...(prev.activity.edges || []), ...(result?.data?.activity?.edges || [])],\n                'node.id'\n              ),\n            },\n          }));\n        });\n    }\n  }, [query]);\n\n  const onChangeEventLevel = React.useCallback(\n    (newLevels: EventLevel[]) =>\n      onChange({\n        levels: newLevels,\n      }),\n    [onChange]\n  );\n\n  const onChangeAccessLevel = React.useCallback(\n    (newAccessLevels: EventAccessLevel[]) => {\n      onChange({\n        accessLevels: newAccessLevels,\n      });\n    },\n    [onChange]\n  );\n\n  console.debug({ accessLevels, timeRange, levels });\n\n  return (\n    <Card style={{ width: '100%' }}>\n      <Card.Title title=\"Events\" />\n      <Card.Content style={{ paddingHorizontal: 0 }}>\n        {(canViewAdminActivity || canViewSystemActivity) && (\n          <View style={styles.controls}>\n            <View>\n              <List.Subheader>Event Type</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewAdminActivity && EventAccessLevel.Admin,\n                    canViewUserActivity && EventAccessLevel.User,\n                    canViewSystemActivity && EventAccessLevel.System,\n                  ].filter(Boolean) as EventAccessLevel[]\n                }\n                onChangeSelected={onChangeAccessLevel}\n                selected={(accessLevels || []) as EventAccessLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventAccessLevel).find(\n                    (key) => EventAccessLevel[key as keyof typeof EventAccessLevel] === value\n                  )\n                }\n              />\n            </View>\n\n            <View>\n              <List.Subheader>Event Level</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewUserActivity && EventLevel.Info,\n                    canViewSystemActivity && EventLevel.Debug,\n                    canViewAdminActivity && EventLevel.Error,\n                  ].filter(Boolean) as EventLevel[]\n                }\n                onChangeSelected={onChangeEventLevel}\n                selected={(levels || []) as EventLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventLevel).find(\n                    (key) => EventLevel[key as keyof typeof EventLevel] === value\n                  )\n                }\n              />\n            </View>\n          </View>\n        )}\n\n        <Feed\n          data={\n            query?.data?.activity?.edges?.map((edge) => edge?.node as ActivityEssentialsFragment) ||\n            ([] as ActivityEssentialsFragment[])\n          }\n          {...{ onFetchMore }}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginHorizontal: 8,\n    marginBottom: 16,\n  },\n});\n","import { useDropzoneStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { subMonths } from 'date-fns';\nimport { EventAccessLevel, EventLevel, Permission } from 'app/api/schema.d';\nimport Chip from 'app/components/chips/Chip';\nimport ActivityFeed from 'app/components/activity/Container';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Card } from 'react-native-paper';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nexport default function DashboardPage() {\n  const { dropzone } = useDropzoneContext();\n\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewRevenue = useRestriction(Permission.ViewStatistics);\n  const canViewStatistics = useRestriction(Permission.ViewRevenue);\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return undefined;\n  }, [selectedTimeRange]);\n\n  const [activityVariables, setActivityVariables] = React.useState<ActivityQueryVariables>({\n    levels: [\n      canViewSystemActivity && EventLevel.Debug,\n      canViewSystemActivity && EventLevel.Error,\n      EventLevel.Info,\n    ].filter(Boolean) as EventLevel[],\n    accessLevels: [\n      canViewSystemActivity && EventAccessLevel.System,\n      EventAccessLevel.User,\n      canViewAdminActivity && EventAccessLevel.Admin,\n    ].filter(Boolean) as EventAccessLevel[],\n    timeRange,\n  });\n\n  const onChangeActivityVariables = React.useCallback(\n    (vars: ActivityQueryVariables) => setActivityVariables({ ...activityVariables, ...vars }),\n    [activityVariables]\n  );\n\n  const { data } = useDropzoneStatisticsQuery({\n    variables: {\n      dropzoneId: dropzone?.id?.toString() as string,\n      timeRange,\n    },\n    skip: !dropzone?.id,\n  });\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        {canViewStatistics && (\n          <Stats\n            title=\"Turn-around\"\n            columns={Platform.OS === 'web' ? undefined : 4}\n            data={\n              [\n                canViewRevenue\n                  ? {\n                      label: 'Total',\n                      color: successColor,\n                      value: `$${data?.dropzone?.statistics?.revenueCentsCount || 0}`,\n                    }\n                  : undefined,\n                {\n                  label: 'Dispatched',\n                  value: data?.dropzone?.statistics?.loadsCount || 0,\n                },\n                {\n                  label: 'Cancelled',\n                  value: data?.dropzone?.statistics?.cancelledLoadsCount || 0,\n                },\n                {\n                  label: 'Slots',\n                  value: data?.dropzone?.statistics?.slotsCount || 0,\n                },\n              ].filter(Boolean) as IStatsProps['data']\n            }\n          />\n        )}\n\n        <Stats\n          title=\"Roles\"\n          data={[\n            { label: 'Pilots', value: data?.dropzone?.statistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: data?.dropzone?.statistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: data?.dropzone?.statistics.dzsoCount || 0,\n            },\n          ]}\n        />\n        {canViewStatistics && (\n          <Stats\n            title=\"Users\"\n            data={[\n              { label: 'Total', value: data?.dropzone?.statistics?.totalUserCount || 0 },\n              {\n                label: 'Active',\n                value: data?.dropzone?.statistics?.activeUserCount || 0,\n                color: successColor,\n              },\n              {\n                label: 'Inactive',\n                value: data?.dropzone?.statistics?.inactiveUserCount || 0,\n                color: warningColor,\n              },\n            ]}\n          />\n        )}\n      </View>\n      {canViewStatistics && (\n        <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n          <LoadsByDay\n            style={styles.dispatchedLoadsCard}\n            data={data?.dropzone?.statistics?.loadCountByDay || []}\n            startTime={timeRange?.startTime || subMonths(new Date(), 6)}\n          />\n          <JumpTypePieChart\n            style={styles.jumpTypesCard}\n            data={data?.dropzone?.statistics?.slotsByJumpType || []}\n          />\n        </View>\n      )}\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <ActivityFeed\n          {...activityVariables}\n          {...{ timeRange }}\n          onChange={onChangeActivityVariables}\n          dropzone={dropzone?.id}\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport OverviewScreen from './AdminOverview';\nimport DashboardScreen from './DropzoneOverview';\n\nexport type OverviewRoutes = {\n  OverviewScreen: undefined;\n  DashboardScreen: undefined;\n};\n\nconst Overview = createStackNavigator<OverviewRoutes>();\n\nexport default function OverviewTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Overview.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Overview.Screen\n        name=\"DashboardScreen\"\n        component={DashboardScreen}\n        options={{ title: 'Dashboard' }}\n      />\n      <Overview.Screen\n        name=\"OverviewScreen\"\n        component={OverviewScreen}\n        options={{ title: 'Overview' }}\n      />\n    </Overview.Navigator>\n  );\n}\n","import { AnimatedTabBarNavigator } from 'react-native-animated-nav-tab-bar';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport default (AnimatedTabBarNavigator as typeof createBottomTabNavigator)<AuthenticatedRoutes>();\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\n\nimport { useTheme } from 'react-native-paper';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/api/crud/useDropzone';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport ManifestTab, { DropzoneRoutes } from './dropzone/routes';\nimport UsersTab, { UserRoutes } from './user/routes';\nimport NotificationsTab, { NotificationRoutes } from './notifications/routes';\nimport OverviewTab, { OverviewRoutes } from './overview/routes';\n\nimport BottomTab from './TabBar';\n\nexport type AuthenticatedRoutes = {\n  Manifest: NavigatorScreenParams<DropzoneRoutes>;\n  Overview: NavigatorScreenParams<OverviewRoutes>;\n  Users: NavigatorScreenParams<UserRoutes>;\n  Notifications: NavigatorScreenParams<NotificationRoutes>;\n};\n\nexport default function AuthenticatedTabBar() {\n  const { palette } = useAppSelector((root) => root.global);\n\n  const { currentUser } = useDropzoneContext();\n  const isAdmin = currentUser?.user?.moderationRole !== ModerationRole.User;\n  const canViewUsers = useRestriction(Permission.ReadUser);\n  const canViewDashboard = useRestriction(Permission.ViewStatistics);\n\n  const theme = useTheme();\n\n  const screenOptions = React.useMemo(\n    () => ({\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n      tabBarActiveBackgroundColor: theme.colors.surface,\n      tabBarInactiveTintColor: '#CCCCCC',\n      tabBarShowLabel: Platform.OS !== 'web',\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderTopColor: '#CCCCCC',\n      },\n    }),\n    [\n      theme.colors.backdrop,\n      theme.colors.background,\n      theme.colors.primary,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n\n  return (\n    <AppSignalBoundary>\n      <BottomTab.Navigator\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        appearance={{\n          tabBarBackground: theme.colors.surface,\n          topPadding: 16,\n          shadow: true,\n          bottomPadding: 16,\n        }}\n        tabBarOptions={{\n          activeTintColor: '#FFFFFF',\n          inactiveTintColor: palette.primary.main,\n          activeBackgroundColor: palette.primary.main,\n        }}\n        initialRouteName=\"Manifest\"\n        {...{ screenOptions }}\n      >\n        {(canViewDashboard || isAdmin) && (\n          <BottomTab.Screen\n            name=\"Overview\"\n            component={OverviewTab}\n            options={{\n              tabBarIcon: ({ focused, color, size }) => (\n                <MaterialCommunityIcons\n                  name=\"view-dashboard-outline\"\n                  {...{ size, color }}\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: false,\n            }}\n          />\n        )}\n        <BottomTab.Screen\n          name=\"Manifest\"\n          component={ManifestTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"airplane\"\n                {...{ size, color }}\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n              />\n            ),\n            unmountOnBlur: false,\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={NotificationsTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"bell-outline\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size, color }}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n        {canViewUsers && (\n          <BottomTab.Screen\n            name=\"Users\"\n            component={UsersTab}\n            options={{\n              tabBarIcon: ({ size, color, focused }) => (\n                <MaterialCommunityIcons\n                  {...{ size, color }}\n                  name=\"account-group-outline\"\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: true,\n            }}\n          />\n        )}\n      </BottomTab.Navigator>\n    </AppSignalBoundary>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { NavigatorScreenParams } from '@react-navigation/native';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport DrawerMenu from 'app/components/drawer/Drawer';\nimport Authenticated, { AuthenticatedRoutes } from '../authenticated/routes';\n\nexport type LeftDrawerRoutes = {\n  LeftDrawer: NavigatorScreenParams<AuthenticatedRoutes>;\n};\n\nconst Drawer = createDrawerNavigator<LeftDrawerRoutes>();\n\nexport default function DrawerNavigator() {\n  const drawerContent = React.useCallback(() => <DrawerMenu />, []);\n  return (\n    <Drawer.Navigator\n      {...{ drawerContent }}\n      screenOptions={{ drawerType: 'back', headerShown: false }}\n    >\n      <Drawer.Screen name=\"LeftDrawer\" component={Authenticated} />\n    </Drawer.Navigator>\n  );\n}\n","import { LinkingOptions, NavigatorScreenParams } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport NotFoundScreen from './NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport Limbo, { LimboRoutes } from './limbo/routes';\nimport Unauthenticated, { UnauthenticatedRoutes } from './unauthenticated/routes';\nimport Wizards, { WizardRoutes } from './wizards/routes';\nimport LeftDrawer, { LeftDrawerRoutes } from './drawers/UserDrawer';\n\nexport const options: LinkingOptions<ReactNavigation.RootParamList> = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      Authenticated: {\n        screens: {\n          LeftDrawer: {\n            screens: {\n              Overview: {\n                screens: {\n                  DashboardScreen: '/dropzone/dashboard',\n                  OverviewScreen: '/overview',\n                },\n              },\n              Manifest: {\n                screens: {\n                  ManifestScreen: '/dropzone/manifest',\n                  DashboardScreen: '/dropzone/overview',\n                  Configuration: {\n                    screens: {\n                      AircraftScreen: '/dropzone/configuration/aircraft/:planeId',\n                      TicketTypesScreen: '/dropzone/configuration/ticket-types',\n                      DropzoneRigsScreen: '/dropzone/configuration/rigs',\n                      ExtrasScreen: '/dropzone/ticket-types/extra',\n                      MasterLogScreen: '/dropzone/master-log',\n                      SettingsMenuScreen: '/dropzone/configuration',\n                      AircraftsScreen: '/dropzone/configuration/aircrafts',\n                      DropzoneSettingsScreen: '/dropzone/configuration/basic',\n                      PermissionScreen: '/dropzone/configuration/permissions',\n                      RigInspectionTemplateScreen: '/dropzone/configuration/rig-inspection',\n                      TransactionsScreen: '/dropzone/transactions',\n                    },\n                  },\n                  JumpRunScreen: '/dropzone/weather/jumprun',\n                  WeatherConditionsScreen: '/dropzone/weather',\n                  LoadScreen: '/dropzone/load/:loadId',\n                  WindScreen: '/dropzone/weather/winds',\n                },\n              },\n              Users: {\n                screens: {\n                  UserListScreen: '/users',\n                  ProfileScreen: '/user/:userId',\n                  EquipmentScreen: '/user/:userId/equipment',\n                  OrdersScreen: '/user/:userId/transactions',\n                  OrderReceiptScreen: '/user/:userId/transactions/:orderId/receipt',\n                  RigInspectionScreen: '/user/:dropzoneUserId/rig-inspection/:rig',\n                },\n              },\n              Notifications: {\n                screens: {\n                  NotificationsScreen: '/notifications',\n                },\n              },\n            },\n          },\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzoneSelectScreen: '/select-dropzone',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n          SignUpWizard: '/user-setup',\n        },\n      },\n      Wizards: {\n        screens: {\n          ConfirmUserScreen: '/confirm',\n          RecoverPasswordScreen: '/recover-password',\n          ChangePasswordScreen: '/change-password',\n          DropzoneWizardScreen: '/setup',\n          User: {\n            screens: {\n              UserListScreen: '/modal/users',\n              ProfileScreen: '/modal/user/:userId',\n              EquipmentScreen: '/modal/user/:userId/equipment',\n              OrdersScreen: '/modal/user/:userId/transactions',\n              OrderReceiptScreen: '/modal/user/:userId/transactions/:orderId/receipt',\n              RigInspectionScreen: '/modal/user/:dropzoneUserId/rig-inspection/:rig',\n            },\n          },\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport type Routes = {\n  Authenticated: NavigatorScreenParams<LeftDrawerRoutes>;\n  Unauthenticated: NavigatorScreenParams<UnauthenticatedRoutes>;\n  Limbo: NavigatorScreenParams<LimboRoutes>;\n  Wizards: NavigatorScreenParams<WizardRoutes>;\n  NotFound: undefined;\n};\n\nconst Stack = createStackNavigator<Routes>();\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface RootParamList extends Routes {}\n  }\n}\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\" component={LeftDrawer} />\n        ) : (\n          <Stack.Screen name=\"Limbo\" component={Limbo} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={Unauthenticated} />\n      )}\n      <Stack.Screen name=\"Wizards\" component={Wizards} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PortalProvider } from '@gorhom/portal';\n\nimport './bootstrap';\nimport Apollo from 'app/api/Apollo';\nimport Wrapper from './EntrypointWrapper';\n\nimport {\n  ExpoUpdatesProvider,\n  DropzonesProvider,\n  PushNotificationsProvider,\n  ThemeProvider,\n} from './providers';\n\nimport { useRouteChange, useAppearanceListener, useCachedResources } from './hooks';\n\nimport { store, persistor, useAppSelector } from '../state/store';\nimport ImageViewer from '../components/dialogs/ImageViewer/ImageViewer';\n\nimport NotificationArea from '../components/notifications/Notifications';\nimport RootNavigator, { options as LinkingConfiguration } from '../screens/routes';\nimport {\n  AppSignalBoundary,\n  AppSignalProvider,\n  AppSignalSessionTagger,\n} from '../components/app_signal';\n\nfunction Content() {\n  useAppearanceListener();\n  const state = useAppSelector((root) => root.global);\n  const onRouteChange = useRouteChange();\n\n  return (\n    <AppSignalProvider>\n      <AppSignalBoundary>\n        <ExpoUpdatesProvider>\n          <React.Suspense\n            fallback={\n              <View style={{ flex: 1, flexGrow: 1 }}>\n                <ProgressBar indeterminate color={state?.theme?.colors?.primary} visible />\n              </View>\n            }\n          >\n            <Apollo>\n              <ThemeProvider>\n                <GestureHandlerRootView style={{ flex: 1 }}>\n                  <PortalProvider>\n                    <SafeAreaProvider>\n                      <ImageViewer />\n                      <NavigationContainer\n                        onStateChange={onRouteChange}\n                        linking={LinkingConfiguration}\n                        theme={state.theme as unknown as never}\n                      >\n                        <DropzonesProvider>\n                          <Wrapper>\n                            <AppSignalSessionTagger>\n                              <PushNotificationsProvider>\n                                <RootNavigator />\n                              </PushNotificationsProvider>\n                            </AppSignalSessionTagger>\n                          </Wrapper>\n                        </DropzonesProvider>\n                      </NavigationContainer>\n\n                      <StatusBar />\n                      <NotificationArea />\n                    </SafeAreaProvider>\n                  </PortalProvider>\n                </GestureHandlerRootView>\n              </ThemeProvider>\n            </Apollo>\n          </React.Suspense>\n        </ExpoUpdatesProvider>\n      </AppSignalBoundary>\n    </AppSignalProvider>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { Appearance } from 'react-native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\nimport { actions } from 'app/state';\n\nexport default function useAppearance() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const listener = React.useRef<ReturnType<typeof Appearance.addChangeListener>>(\n    Appearance.addChangeListener(({ colorScheme }) => {\n      if (colorScheme) {\n        dispatch(actions.global.setAppearance(colorScheme));\n      }\n    })\n  );\n\n  /// Listen to changes in Appearance and set dark mode theme in state\n  React.useEffect(() => {\n    const handler = listener?.current;\n    return () => handler?.remove?.();\n  }, [dispatch, state.isDarkMode, state.theme.colors.background]);\n}\n","import * as React from 'react';\nimport { NavigationState, getPathFromState } from '@react-navigation/native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\n\nimport { actions } from 'app/state';\n\nexport default function useRouteChange() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (s?: NavigationState) => {\n      if (s) {\n        const [path] = getPathFromState(s).split(/\\?/);\n        const [screenName] = path.split(/\\//).reverse();\n        if (state.currentRouteName !== screenName) {\n          dispatch(actions.global.setCurrentRouteName(screenName));\n        }\n      }\n    },\n    [dispatch, state.currentRouteName]\n  );\n}\n","import Entrypoint from './Entrypoint';\n\nexport default Entrypoint;\n","import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\nimport * as roboto from '@expo-google-fonts/roboto';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n    Roboto_400Regular: roboto.Roboto_400Regular,\n    Roboto_500Medium: roboto.Roboto_500Medium,\n    Roboto_700Bold: roboto.Roboto_700Bold,\n    ...Ionicons.font,\n    ...MaterialCommunityIcons.font,\n    ...MaterialIcons.font,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          ...MaterialCommunityIcons.font,\n          ...MaterialIcons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n        setLoadingComplete(true);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n","import { registerRootComponent } from 'expo';\nimport Entrypoint from './app/entrypoint';\n\nregisterRootComponent(Entrypoint);","module.exports = __webpack_public_path__ + \"static/media/logo-black.36bb8461.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.97bdff33.png\";","module.exports = __webpack_public_path__ + \"static/media/webb-dark.cc0e3dfa.png\";","module.exports = __webpack_public_path__ + \"static/media/pattern.9f57eead.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.6fa2ed95.png\";","module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";"],"sourceRoot":""}